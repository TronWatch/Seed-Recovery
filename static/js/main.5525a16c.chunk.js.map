{"version":3,"sources":["index.js","../config/polyfills.js","generator.worker.js"],"names":["webWorker","generator_worker_js__WEBPACK_IMPORTED_MODULE_3___default","a","App","_getPrototypeOf2","_this","_classCallCheck","this","_len","arguments","length","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","apply","concat","state","words","fill","publicKey","unknown","running","found","error","status","addEventListener","_ref","response","data","type","word","setState","console","warn","_this2","some","index","wordList__WEBPACK_IMPORTED_MODULE_2__","includes","lowerCaseWord","toLowerCase","replace","checkForErrors","transformedAddress","_this3","map","_","x","inputs","y","react__WEBPACK_IMPORTED_MODULE_0___default","createElement","value","placeholder","key","onChange","_ref2","target","handleWordChange","disabled","className","tabIndex","_this4","options","_ref3","handleUnknownChange","postMessage","address","_this5","classes","push","join","onClick","start","_this6","_ref4","handleAddressChange","renderUnknownChoice","renderInputs","renderButton","Component","react_dom__WEBPACK_IMPORTED_MODULE_1___default","render","document","getElementById","Promise","__webpack_require__","enable","window","Object","assign","module","exports","Worker","p"],"mappings":"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","file":"static/js/main.5525a16c.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport wordList from 'wordList';\nimport Generator from 'generator.worker.js';\n\nimport 'index.css';\n\nconst webWorker = new Generator();\n\nclass App extends React.Component {\n    constructor(...args) {\n        super(...args);\n\n        this.state = {\n            words: new Array(24).fill(''),\n            publicKey: '',\n            unknown: 0,\n            running: false,\n            found: false,\n            error: true,\n            status: 'Waiting for valid input'\n        };\n\n        webWorker.addEventListener('message', ({ data: response }) => {\n            const {\n                type,\n                status,\n                word,\n                words\n            } = response;\n\n            switch(type) {\n                case 'stateUpdate':\n                    return this.setState({\n                        status\n                    });\n                case 'fail':\n                    return this.setState({\n                        status: 'We were unable to find the missing word',\n                        running: false\n                    });\n                case 'success':\n                    return this.setState({\n                        status: `Found missing word: ${word}`,\n                        running: false,\n                        found: word,\n                        words\n                    });\n                default:\n                    return console.warn('Invalid message sent from worker:', response);\n            }\n        }, false);\n    }\n\n    checkForErrors() {\n        let error = this.state.words.some((word, index) => this.state.unknown !== index && !wordList.includes(word));\n        let status = 'Waiting for valid input';\n\n        if(this.state.publicKey.length !== 34)\n            error = true;\n\n        if(!error)\n            status = 'Waiting for user to start';\n\n        const { words } = this.state;\n        words[this.state.unknown] = '';\n\n        this.setState({\n            found: false,\n            error,\n            words,\n            status\n        });\n    }\n\n    handleWordChange(word, index) {\n        const lowerCaseWord = word.toLowerCase().replace(/[^a-z]/g, '');\n\n        const { words } = this.state;\n        words[index] = lowerCaseWord;\n\n        this.setState({\n            words\n        });\n\n        this.checkForErrors();\n    }\n\n    handleUnknownChange(index) {\n        const { words } = this.state;\n        let { unknown } = this.state;\n\n        words[index] = '';\n        unknown = +index;\n\n        this.setState({\n            words,\n            unknown\n        });\n\n        this.checkForErrors();\n    }\n\n    handleAddressChange(publicKey) {\n        const transformedAddress = publicKey.replace(/[^\\w]/g, '');\n\n        this.setState({\n            publicKey: transformedAddress\n        });\n\n        this.checkForErrors();\n    }\n\n    renderInputs() {\n        return new Array(12).fill(0).map((_, x) => {\n            const inputs = [ 0, 12 ].map(y => {\n                const index = x + y;\n                const word = this.state.words[index];\n\n                return (\n                    <input\n                        type='text'\n                        value={ word }\n                        placeholder={ `Word ${index + 1}` }\n                        key={ index }\n                        onChange={ ({ target: { value } }) => this.handleWordChange(value, index) }\n                        disabled={ this.state.unknown === index || this.state.running }\n                        className={ (!wordList.includes(word) && this.state.unknown !== index) ? 'invalid' : 'valid' }\n                        tabIndex={ index + 2 } />\n                );\n            });\n\n            return (\n                <div className='input-row' key={ x }>\n                    { inputs }\n                </div>\n            );\n        });\n    }\n\n    renderUnknownChoice() {\n        const options = this.state.words.map((_, index) => (\n            <option value={ index } key={ index }>Missing word { index + 1 }</option>\n        ));\n\n        return (\n            <select\n                value={ this.state.unknown }\n                onChange={ ({ target: { value } }) => this.handleUnknownChange(value) }\n                tabIndex={ 1 }\n                disabled={ this.state.running }>\n                { options }\n            </select>\n        );\n    }\n\n    start() {\n        this.setState({\n            running: true,\n            status: 'Searching for missing word. This may take some time'\n        });\n\n        webWorker.postMessage({\n            address: this.state.publicKey,\n            words: this.state.words,\n            unknown: this.state.unknown\n        });\n    }\n\n    renderButton() {\n        const classes = [ 'button' ];\n\n        if(this.state.running || this.state.error)\n            classes.push('disabled');\n        else classes.push('start');\n\n        return (\n            <div className={ classes.join(' ') } onClick={ () => !classes.includes('disabled') && !this.state.found && this.start() } tabIndex={ 27 }>\n                { 'Start' }\n            </div>\n        );\n    }\n\n    render() {\n        return (\n            <div className='container'>\n                <div className='header'>\n                    <div className='header-text'>\n                        <h1>Tron Bip39 Seed Recovery</h1>\n                        <p>\n                            This utility enables you to recover a missing word in your recovery phrase (mnemonic seed).\n\n                            Enter your address and select the missing word below. Fill in the rest of the words that you\n                            have access to and press run.\n\n                            It can take a few minutes depending on your hardware. Please be patient.\n                        </p>\n                    </div>\n                    <div className='input-row'>\n                        <input\n                            type='text'\n                            placeholder='Account address'\n                            value={ this.state.publicKey }\n                            onChange={ ({ target: { value } }) => this.handleAddressChange(value) }\n                            className={ (this.state.publicKey.length !== 34) ? 'invalid' : '' }\n                            tabIndex={ 0 }\n                            disabled={ this.state.running } />\n                        { this.renderUnknownChoice() }\n                    </div>\n                </div>\n\n                { this.renderInputs() }\n\n                <div className='footer'>\n                    <div className='status'>\n                        { this.state.status }\n                    </div>\n                    { this.renderButton() }\n                </div>\n            </div>\n        );\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'));","'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n  window.Promise = require('promise/lib/es6-extensions.js');\n}\n\n// fetch() polyfill for making API calls.\nrequire('whatwg-fetch');\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign');\n\n// In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\nif (process.env.NODE_ENV === 'test') {\n  require('raf').polyfill(global);\n}\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"362e71987217a004fc3f.worker.js\");\n};"],"sourceRoot":""}