{"version":3,"sources":["../webpack/bootstrap","../node_modules/inherits/inherits_browser.js","../node_modules/safe-buffer/index.js","../node_modules/elliptic/lib/elliptic.js","../node_modules/webpack/buildin/global.js","../node_modules/hash.js/lib/hash/utils.js","../node_modules/bn.js/lib/bn.js","../node_modules/buffer/index.js","../node_modules/process/browser.js","../node_modules/readable-stream/lib/_stream_duplex.js","../node_modules/minimalistic-assert/index.js","../node_modules/sha.js/hash.js","../node_modules/tron-http-tools/protocol/core/Tron_pb.js","../node_modules/tron-http-tools/utils.js","../node_modules/core-util-is/lib/util.js","../node_modules/google-protobuf/google-protobuf.js","../node_modules/hash.js/lib/hash/common.js","../node_modules/process-nextick-args/index.js","../node_modules/elliptic/lib/elliptic/curve/index.js","../node_modules/tron-http-tools/utils/crypto.js","../node_modules/tron-http-tools/lib/code.js","../node_modules/string_decoder/lib/string_decoder.js","../node_modules/readable-stream/lib/_stream_writable.js","../node_modules/readable-stream/readable-browser.js","../node_modules/events/events.js","../node_modules/hash.js/lib/hash.js","../node_modules/webpack/buildin/module.js","../node_modules/pbkdf2/lib/sync-browser.js","../node_modules/pbkdf2/lib/default-encoding.js","../node_modules/pbkdf2/lib/precondition.js","../node_modules/sha.js/sha512.js","../node_modules/sha.js/sha256.js","../node_modules/sha.js/index.js","../node_modules/ripemd160/index.js","../node_modules/readable-stream/lib/_stream_transform.js","../node_modules/readable-stream/lib/internal/streams/destroy.js","../node_modules/readable-stream/lib/internal/streams/stream-browser.js","../node_modules/readable-stream/lib/_stream_readable.js","../node_modules/stream-browserify/index.js","../node_modules/hash-base/index.js","../node_modules/md5.js/index.js","../node_modules/tron-http-tools/protocol/api/api_pb.js","../node_modules/tron-http-tools/protocol/core/Contract_pb.js","../node_modules/google-protobuf/google/protobuf/any_pb.js","../node_modules/hash.js/lib/hash/sha/512.js","../node_modules/hash.js/lib/hash/sha/256.js","../node_modules/hash.js/lib/hash/sha/common.js","../node_modules/minimalistic-crypto-utils/lib/utils.js","../node_modules/tron-http-tools/utils/address.js","../node_modules/tron-http-tools/utils/bytes.js","../node_modules/tron-http-tools/lib/base58.js","../node_modules/isarray/index.js","../node_modules/tron-http-tools/index.js","../node_modules/tron-http-tools/api.js","../node_modules/tron-http-tools/block.js","../node_modules/convert-string/convert-string.js","../node_modules/convert-hex/convert-hex.js","../node_modules/sha256/lib/sha256.js","../node_modules/unorm/lib/unorm.js","../node_modules/randombytes/browser.js","../node_modules/create-hash/md5.js","../node_modules/pbkdf2/lib/async.js","../node_modules/pbkdf2/browser.js","../node_modules/cipher-base/index.js","../node_modules/sha.js/sha384.js","../node_modules/sha.js/sha224.js","../node_modules/sha.js/sha1.js","../node_modules/sha.js/sha.js","../node_modules/readable-stream/passthrough.js","../node_modules/readable-stream/transform.js","../node_modules/readable-stream/duplex-browser.js","../node_modules/readable-stream/writable-browser.js","../node_modules/readable-stream/lib/_stream_passthrough.js","../node_modules/util-deprecate/browser.js","../node_modules/setimmediate/setImmediate.js","../node_modules/timers-browserify/main.js","../node_modules/readable-stream/lib/internal/streams/BufferList.js","../node_modules/create-hash/browser.js","../node_modules/bip39/index.js","../node_modules/tron-http-tools/account.js","../node_modules/tron-http-tools/witness.js","../node_modules/tron-http-tools/protocol/core/Discover_pb.js","../node_modules/tron-http-tools/lib/sha256.js","../node_modules/webpack/buildin/amd-options.js","../node_modules/js-sha3/src/sha3.js","../node_modules/elliptic/lib/elliptic/eddsa/signature.js","../node_modules/elliptic/lib/elliptic/eddsa/key.js","../node_modules/elliptic/lib/elliptic/eddsa/index.js","../node_modules/elliptic/lib/elliptic/ec/signature.js","../node_modules/elliptic/lib/elliptic/ec/key.js","../node_modules/hmac-drbg/lib/hmac-drbg.js","../node_modules/elliptic/lib/elliptic/ec/index.js","../node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","../node_modules/hash.js/lib/hash/hmac.js","../node_modules/hash.js/lib/hash/ripemd.js","../node_modules/hash.js/lib/hash/sha/384.js","../node_modules/hash.js/lib/hash/sha/224.js","../node_modules/hash.js/lib/hash/sha/1.js","../node_modules/hash.js/lib/hash/sha.js","../node_modules/elliptic/lib/elliptic/curves.js","../node_modules/elliptic/lib/elliptic/curve/edwards.js","../node_modules/elliptic/lib/elliptic/curve/mont.js","../node_modules/elliptic/lib/elliptic/curve/short.js","../node_modules/elliptic/lib/elliptic/curve/base.js","../node_modules/brorand/index.js","../node_modules/elliptic/lib/elliptic/utils.js","../node_modules/tron-http-tools/utils/base64.js","../node_modules/btoa/index.js","../node_modules/text-encoding/lib/encoding-indexes.js","../node_modules/text-encoding/lib/encoding.js","../node_modules/text-encoding/index.js","../node_modules/ieee754/index.js","../node_modules/base64-js/index.js","../node_modules/node-libs-browser/node_modules/util/support/isBufferBrowser.js","../node_modules/node-libs-browser/node_modules/util/util.js","../node_modules/assert/assert.js","../node_modules/tron-http-tools/transaction.js","generator.worker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","create","ctor","superCtor","super_","constructor","writable","TempCtor","buffer","Buffer","copyProps","src","dst","key","SafeBuffer","arg","encodingOrOffset","length","from","alloc","allocUnsafe","allocUnsafeSlow","TypeError","size","fill","encoding","buf","undefined","SlowBuffer","elliptic","version","utils","rand","curve","curves","ec","eddsa","g","this","Function","eval","e","window","_typeof","assert","inherits","htonl","w","zero2","word","zero8","toArray","msg","enc","Array","isArray","slice","res","replace","push","parseInt","charCodeAt","hi","lo","toHex","toString","toHex32","endian","join32","start","end","len","k","split32","rotr32","b","rotl32","sum32","a","sum32_3","sum32_4","sum32_5","sum64","pos","ah","al","bh","sum64_hi","bl","sum64_lo","sum64_4_hi","ch","cl","dh","dl","carry","sum64_4_lo","sum64_5_hi","eh","el","sum64_5_lo","rotr64_hi","num","rotr64_lo","shr64_hi","shr64_lo","val","Error","BN","number","base","isBN","negative","words","red","_init","wordSize","parseHex","str","Math","min","parseBase","mul","max","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","strip","ceil","j","off","limbLen","limbPow","total","mod","imuln","_iaddn","pow","copy","dest","clone","_expand","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","self","out","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","q","andln","iushrn","clz32","_countBits","t","_zeroBits","bitLength","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","x","y","mulTo","hncarry","bigMulTo","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","toBitArray","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","global","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","Uint8Array","__proto__","ArrayBuffer","array","byteOffset","fromArrayLike","fromArrayBuffer","string","isEncoding","actual","write","fromString","obj","isBuffer","checked","type","data","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","swap","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","indexOf","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","hexWrite","offset","Number","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","utf16leToBytes","base64Slice","fromByteArray","utf8Slice","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","Symbol","species","_isBuffer","compare","concat","list","swap16","swap32","swap64","arguments","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","match","join","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","bytes","checkOffset","ext","checkInt","objectWriteUInt16","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","code","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","trim","stringtrim","base64clean","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","noop","nextTick","args","title","browser","env","argv","versions","on","addListener","once","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","pna","objectKeys","keys","Duplex","util","Readable","Writable","v","method","options","readable","allowHalfOpen","onend","_writableState","ended","onEndNT","highWaterMark","_readableState","destroyed","_destroy","err","cb","equal","Hash","blockSize","finalSize","_block","_finalSize","_blockSize","_len","update","block","accum","assigned","remainder","_update","digest","rem","lowBits","highBits","hash","_hash","jspb","goog","google_protobuf_any_pb","core_Discover_pb","exportSymbol","proto","protocol","AccountId","opt_data","Message","initialize","DEBUG","COMPILED","displayName","GENERATE_TO_OBJECT","toObject","opt_includeInstance","includeInstance","getName_asB64","address","getAddress_asB64","$jspbMessageInstance","deserializeBinary","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","getFieldNumber","readBytes","setName","setAddress","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","f","getName_asU8","writeBytes","getAddress_asU8","getName","getFieldWithDefault","bytesAsB64","bytesAsU8","setProto3BytesField","getAddress","Vote","voteAddress","getVoteAddress_asB64","voteCount","setVoteAddress","readInt64","setVoteCount","getVoteAddress_asU8","getVoteCount","writeInt64","getVoteAddress","setProto3IntField","Account","repeatedFields_","accountName","getAccountName_asB64","balance","votesList","toObjectList","getVotesList","assetMap","getAssetMap","frozenList","getFrozenList","Frozen","netUsage","createTime","latestOprationTime","allowance","latestWithdrawTime","getCode_asB64","isWitness","isCommittee","frozenSupplyList","getFrozenSupplyList","assetIssuedName","getAssetIssuedName_asB64","latestAssetOperationTimeMap","getLatestAssetOperationTimeMap","freeNetUsage","freeAssetNetUsageMap","getFreeAssetNetUsageMap","latestConsumeTime","latestConsumeFreeTime","setAccountName","readEnum","setType","setBalance","readMessage","addVotes","Map","readString","addFrozen","setNetUsage","setCreateTime","setLatestOprationTime","setAllowance","setLatestWithdrawTime","setCode","readBool","setIsWitness","setIsCommittee","addFrozenSupply","setAssetIssuedName","setFreeNetUsage","setLatestConsumeTime","setLatestConsumeFreeTime","getAccountName_asU8","getType","writeEnum","getBalance","writeRepeatedMessage","getLength","writeString","getNetUsage","getCreateTime","getLatestOprationTime","getAllowance","getLatestWithdrawTime","getCode_asU8","getIsWitness","writeBool","getIsCommittee","getAssetIssuedName_asU8","getFreeNetUsage","getLatestConsumeTime","getLatestConsumeFreeTime","frozenBalance","expireTime","setFrozenBalance","setExpireTime","getFrozenBalance","getExpireTime","getAccountName","setProto3EnumField","getRepeatedWrapperField","setVotesList","setRepeatedWrapperField","opt_value","opt_index","addToRepeatedWrapperField","clearVotesList","opt_noLazyCreate","getMapField","clearAssetMap","clear","setFrozenList","clearFrozenList","getCode","setProto3BooleanField","setFrozenSupplyList","clearFrozenSupplyList","getAssetIssuedName","clearLatestAssetOperationTimeMap","clearFreeAssetNetUsageMap","acuthrity","account","getAccount","permissionName","getPermissionName_asB64","setAccount","setPermissionName","writeMessage","getPermissionName_asU8","getWrapperField","setWrapperField","clearAccount","hasAccount","getField","getPermissionName","permision","Witness","votecount","pubkey","getPubkey_asB64","url","totalproduced","totalmissed","latestblocknum","latestslotnum","isjobs","setVotecount","setPubkey","setUrl","setTotalproduced","setTotalmissed","setLatestblocknum","setLatestslotnum","setIsjobs","getVotecount","getPubkey_asU8","getUrl","getTotalproduced","getTotalmissed","getLatestblocknum","getLatestslotnum","getIsjobs","getPubkey","setProto3StringField","Votes","oldVotesList","getOldVotesList","newVotesList","getNewVotesList","addOldVotes","addNewVotes","setOldVotesList","clearOldVotesList","setNewVotesList","clearNewVotesList","TXOutput","pubkeyhash","getPubkeyhash_asB64","setValue","setPubkeyhash","getValue","getPubkeyhash_asU8","getPubkeyhash","TXInput","rawData","getRawData","raw","signature","getSignature_asB64","setRawData","setSignature","getSignature_asU8","txid","getTxid_asB64","vout","setTxid","setVout","getTxid_asU8","getVout","getTxid","clearRawData","hasRawData","getSignature","TXOutputs","outputsList","getOutputsList","addOutputs","setOutputsList","clearOutputsList","Transaction","signatureList","getSignatureList_asB64","retList","getRetList","Result","addSignature","addRet","getSignatureList_asU8","writeRepeatedBytes","Contract","parameter","getParameter","Any","provider","getProvider_asB64","contractname","getContractname_asB64","setParameter","setProvider","setContractname","getProvider_asU8","getContractname_asU8","ContractType","ACCOUNTCREATECONTRACT","TRANSFERCONTRACT","TRANSFERASSETCONTRACT","VOTEASSETCONTRACT","VOTEWITNESSCONTRACT","WITNESSCREATECONTRACT","ASSETISSUECONTRACT","DEPLOYCONTRACT","WITNESSUPDATECONTRACT","PARTICIPATEASSETISSUECONTRACT","ACCOUNTUPDATECONTRACT","FREEZEBALANCECONTRACT","UNFREEZEBALANCECONTRACT","WITHDRAWBALANCECONTRACT","UNFREEZEASSETCONTRACT","UPDATEASSETCONTRACT","CUSTOMCONTRACT","clearParameter","hasParameter","getProvider","getContractname","fee","setFee","setRet","getFee","getRet","SUCESS","FAILED","refBlockBytes","getRefBlockBytes_asB64","refBlockNum","refBlockHash","getRefBlockHash_asB64","expiration","authsList","getAuthsList","getData_asB64","contractList","getContractList","scripts","getScripts_asB64","timestamp","setRefBlockBytes","setRefBlockNum","setRefBlockHash","setExpiration","addAuths","setData","addContract","setScripts","setTimestamp","getRefBlockBytes_asU8","getRefBlockNum","getRefBlockHash_asU8","getExpiration","getData_asU8","getScripts_asU8","getTimestamp","getRefBlockBytes","getRefBlockHash","setAuthsList","clearAuthsList","getData","setContractList","clearContractList","getScripts","getSignatureList","getRepeatedField","bytesListAsB64","bytesListAsU8","setSignatureList","setField","addToRepeatedField","clearSignatureList","setRetList","clearRetList","Transactions","transactionsList","getTransactionsList","addTransactions","setTransactionsList","clearTransactionsList","BlockHeader","witnessSignature","getWitnessSignature_asB64","setWitnessSignature","getWitnessSignature_asU8","txtrieroot","getTxtrieroot_asB64","parenthash","getParenthash_asB64","witnessId","witnessAddress","getWitnessAddress_asB64","setTxtrieroot","setParenthash","setNumber","setWitnessId","setWitnessAddress","getTxtrieroot_asU8","getParenthash_asU8","getNumber","getWitnessId","getWitnessAddress_asU8","getTxtrieroot","getParenthash","getWitnessAddress","getWitnessSignature","Block","blockHeader","getBlockHeader","setBlockHeader","clearBlockHeader","hasBlockHeader","ChainInventory","idsList","getIdsList","BlockId","remainNum","addIds","setRemainNum","getRemainNum","getHash_asB64","setHash","getHash_asU8","getHash","setIdsList","clearIdsList","BlockInventory","Type","SYNC","ADVTISE","FETCH","Inventory","getIdsList_asB64","getIdsList_asU8","InventoryType","TRX","BLOCK","Items","blocksList","getBlocksList","blockHeadersList","getBlockHeadersList","addBlocks","addBlockHeaders","ItemType","ERR","BLOCKHEADER","setBlocksList","clearBlocksList","setBlockHeadersList","clearBlockHeadersList","DynamicProperties","lastSolidityBlockNum","setLastSolidityBlockNum","getLastSolidityBlockNum","DisconnectMessage","reason","setReason","getReason","HelloMessage","getFrom","Endpoint","genesisblockid","getGenesisblockid","solidblockid","getSolidblockid","headblockid","getHeadblockid","setFrom","readInt32","setVersion","setGenesisblockid","setSolidblockid","setHeadblockid","getVersion","writeInt32","clearFrom","hasFrom","clearGenesisblockid","hasGenesisblockid","clearSolidblockid","hasSolidblockid","clearHeadblockid","hasHeadblockid","AccountType","NORMAL","ASSETISSUE","CONTRACT","ReasonCode","REQUESTED","BAD_PROTOCOL","TOO_MANY_PEERS","DUPLICATE_PEER","INCOMPATIBLE_PROTOCOL","NULL_IDENTITY","PEER_QUITING","UNEXPECTED_IDENTITY","LOCAL_IDENTITY","PING_TIMEOUT","USER_REASON","RESET","SYNC_FAIL","FETCH_FAIL","BAD_TX","BAD_BLOCK","FORKED","UNLINKABLE","INCOMPATIBLE_VERSION","INCOMPATIBLE_CHAIN","TIME_OUT","CONNECT_FAIL","UNKNOWN","extend","hexStr2byteArray","base64EncodeToString","base64DecodeFromString","base58","TextDecoder","btoa","base64StringToString","b64","result","base58AddressToUint8Array","decoded","decode58","splice","stringToUint8Array","uint8ToBase64","u8","decoder","decode","objectToString","isBoolean","isNull","isNullOrUndefined","isNumber","isString","isSymbol","isUndefined","isRegExp","isObject","isDate","isError","isFunction","isPrimitive","$jscomp","scope","getGlobal","initSymbol","symbolCounter_","initSymbolIterator","iterator","makeIterator","done","arrayFromIterator","arrayFromIterable","defineProperties","getOwnPropertyDescriptor","iteratorFromArray","findInternal","of","entries","installHelper_","entries$install","keys$install","values","values$install","copyWithin","copyWithin$install","fill$install","find","find$install","findIndex","findIndex$install","ASSUME_NO_NATIVE_MAP","Map$isConformant","seal","data_","head_","createHead","maybeGetEntry","id","entry","previous","head","index","has","makeIterator_","forEach","getId","mapIndex_","idKey","Entry","Map$install","math","sign","log10","log","LN10","log2","LN2","log1p","expm1","exp","cosh","sinh","tanh","acosh","asinh","atanh","hypot","trunc","cbrt","isInteger","isSafeInteger","MAX_SAFE_INTEGER","EPSILON","MIN_SAFE_INTEGER","assign","is","ASSUME_NO_NATIVE_SET","Set$isConformant","Set","map_","Set$install","checkStringArgs","RegExp","fromCodePoint","repeat","repeat$install","codePointAt","codePointAt$install","includes$install","startsWith","startsWith$install","endsWith","endsWith$install","isDef","exportPath_","execScript","define","CLOSURE_UNCOMPILED_DEFINES","CLOSURE_DEFINES","LOCALE","TRUSTED_SITE","STRICT_MODE_COMPATIBLE","DISALLOW_TEST_ONLY_CODE","ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING","provide","isProvided_","constructNamespace_","implicitNamespaces_","substring","getObjectByName","VALID_MODULE_RE_","search","isInModuleLoader_","moduleLoaderState_","moduleName","getInternal_","loadedModules_","declareLegacyNamespace","setTestOnly","forwardDeclare","isDefAndNotNull","goog.module","globalize","addDependency","DEPENDENCIES_ENABLED","dependencies_","nameToPath","pathIsModule","requires","ENABLE_DEBUG_LOADER","logToConsole_","console","error","require","IS_OLD_IE_","maybeProcessDeferredDep_","getPathFromDeps_","writeScripts_","basePath","nullFunction","abstractMethod","addSingletonGetter","getInstance","instance_","instantiatedSingletons_","LOAD_MODULE_USING_EVAL","SEAL_MODULE_EXPORTS","visited","written","deferred","inHtmlDocument_","document","findBasePath_","CLOSURE_BASE_PATH","getElementsByTagName","importScript_","CLOSURE_IMPORT_SCRIPT","writeScriptTag_","atob","all","importModule_","queuedModules_","wrapModule_","JSON","stringify","loadQueuedModules_","maybeProcessDeferredPath_","isDeferredModule_","allDepsAreAvailable_","globalEval","loadModuleFromUrl","retrieveAndExecModule_","loadModule","loadModuleFromSource_","writeScriptSrcNode_","appendScriptSrcNode_","createElement","defer","async","appendChild","readyState","test","lastNonModuleScriptIndex_","onScriptLoad_","CLOSURE_NO_DEPS","normalizePath_","loadFileSync_","CLOSURE_LOAD_FILE_SYNC","XMLHttpRequest","open","send","responseText","typeOf","propertyIsEnumerable","isArrayLike","isDateLike","getFullYear","getUid","UID_PROPERTY_","uidCounter_","hasUid","removeUid","removeAttribute","random","getHashCode","removeHashCode","cloneObject","bindNative_","bind","bindJs_","unshift","partial","mixin","now","Date","evalWorksForGlobals_","_evalTest_","createTextNode","body","removeChild","getCssName","cssNameMapping_","cssNameMappingStyle_","setCssNameMapping","CLOSURE_CSS_NAME_MAPPING","getMsg","getMsgWithFallback","exportProperty","superClass_","callee","caller","defineClass","statics","createSealingConstructor_","applyProperties_","SEAL_CLASS_INSTANCES","UNSEALABLE_CONSTRUCTOR_PROPERTY_","OBJECT_PROTOTYPE_FIELDS_","tagUnsealableClass","dom","NodeType","ELEMENT","ATTRIBUTE","TEXT","CDATA_SECTION","ENTITY_REFERENCE","ENTITY","PROCESSING_INSTRUCTION","COMMENT","DOCUMENT","DOCUMENT_TYPE","DOCUMENT_FRAGMENT","NOTATION","debug","captureStackTrace","stack","reportErrorToServer","DETECT_DOUBLE_ESCAPING","FORCE_NON_DOM_HTML_UNESCAPING","Unicode","NBSP","caseInsensitiveStartsWith","caseInsensitiveCompare","caseInsensitiveEndsWith","caseInsensitiveEquals","subs","collapseWhitespace","isEmptyOrWhitespace","isEmptyString","isEmpty","isEmptyOrWhitespaceSafe","makeSafe","isEmptySafe","isBreakingWhitespace","isAlpha","isNumeric","isAlphaNumeric","isSpace","isUnicodeChar","stripNewlines","canonicalizeNewlines","normalizeWhitespace","normalizeSpaces","collapseBreakingSpaces","trimLeft","trimRight","numberAwareCompare_","intAwareCompare","floatAwareCompare","numerateCompare","urlEncode","encodeURIComponent","urlDecode","decodeURIComponent","newLineToBr","htmlEscape","AMP_RE_","LT_RE_","GT_RE_","QUOT_RE_","SINGLE_QUOTE_RE_","NULL_RE_","E_RE_","ALL_RE_","unescapeEntities","contains","unescapeEntitiesUsingDom_","unescapePureXmlEntities_","unescapeEntitiesWithDocument","&amp;","&lt;","&gt;","&quot;","HTML_ENTITY_PATTERN_","charAt","innerHTML","firstChild","nodeValue","whitespaceEscape","preserveSpaces","stripQuotes","truncate","truncateMiddle","specialEscapeChars_","\u0000","\b","\f","\n","\r","\t","\u000b","\"","\\","<","jsEscapeCache_","'","quote","escapeChar","escapeString","toUpperCase","caseInsensitiveContains","countOf","removeAt","remove","regExpEscape","removeAll","padNumber","toFixed","buildString","getRandomString","compareVersions","exec","compareElements_","hashCode","uniqueStringCounter_","createUniqueString","NaN","isLowerCamelCase","isUpperCamelCase","toCamelCase","toSelectorCase","toTitleCase","capitalize","splitLimit","editDistance","asserts","ENABLE_ASSERTS","AssertionError","messagePattern","DEFAULT_ERROR_HANDLER","errorHandler_","doAssertFailure_","setErrorHandler","fail","assertNumber","assertString","assertFunction","assertObject","assertArray","assertBoolean","assertElement","nodeType","assertInstanceof","getType_","assertObjectPrototypeIsIntact","arr_","valueCtor_","arrClean","loadFromArray_","Entry_","valueWrapper","stringKeys_","sort","wrapEntry_","ArrayIteratorIterable_","idx_","del","getEntryList","beginSubMessage","endSubMessage","NATIVE_ARRAY_PROTOTYPES","ASSUME_NATIVE_FUNCTIONS","peek","last","forEachRight","filter","map","reduce","reduceRight","some","every","count","findRight","findIndexRight","insert","insertAt","insertArrayAt","insertBefore","removeIf","removeAllIf","removeDuplicates","binarySearch","binarySearch_","defaultCompare","binarySelect","stableSort","sortByKey","sortObjectsByKey","isSorted","defaultCompareEquality","compare3","inverseDefaultCompare","binaryInsert","binaryRemove","bucket","range","flatten","rotate","moveItem","zip","shuffle","copyByIndex","crypt","stringToByteArray","byteArrayToString","byteArrayToHex","hexToByteArray","stringToUtf8ByteArray","utf8ByteArrayToString","xorByteArray","labs","userAgent","getNativeUserAgentString_","getNavigator_","navigator","userAgent_","setUserAgent","getUserAgent","matchUserAgent","matchUserAgentIgnoreCase","extractVersionTuples","platform","isAndroid","isIpod","isIphone","isIpad","isIos","isMacintosh","isLinux","isWindows","isChromeOS","isVersionOrHigher","getCount","getAnyKey","getAnyValue","containsValue","getValues","getKeys","getValueByKeys","containsKey","findKey","findValue","setIfUndefined","setWithReturnValueIfNotSet","unsafeClone","transpose","PROTOTYPE_FIELDS_","createSet","createImmutableView","isFrozen","freeze","isImmutableView","matchOpera_","matchIE_","matchEdge_","matchFirefox_","matchSafari_","matchChrome_","matchCoast_","isSilk","matchIosWebview_","matchAndroidBrowser_","isChrome","isFirefox","isOpera","isIE","isEdge","isSafari","isCoast","isIosWebview","isAndroidBrowser","getIEVersion_","engine","isPresto","isTrident","isWebKit","isGecko","getEngineTuple_","getVersionForKey_","ASSUME_IE","ASSUME_EDGE","ASSUME_GECKO","ASSUME_WEBKIT","ASSUME_MOBILE_WEBKIT","ASSUME_OPERA","ASSUME_ANY_VERSION","BROWSER_KNOWN_","getUserAgentString","getNavigator","OPERA","IE","EDGE","EDGE_OR_IE","GECKO","WEBKIT","isMobile_","MOBILE","SAFARI","determinePlatform_","PLATFORM","ASSUME_MAC","ASSUME_WINDOWS","ASSUME_LINUX","ASSUME_X11","ASSUME_ANDROID","ASSUME_IPHONE","ASSUME_IPAD","PLATFORM_KNOWN_","MAC","WINDOWS","isLegacyLinux_","LINUX","isX11_","appVersion","X11","ANDROID","IPHONE","IPAD","operaVersion_","opera","determineVersion_","getVersionRegexResult_","getDocumentMode_","parseFloat","documentMode","VERSION","isVersionOrHigherCache_","isVersion","isDocumentModeOrHigher","DOCUMENT_MODE","isDocumentMode","compatMode","product","ASSUME_FIREFOX","ASSUME_CHROME","ASSUME_SAFARI","PRODUCT_KNOWN_","FIREFOX","isIphoneOrIpod_","CHROME","isSafariDesktop_","byteToCharMap_","charToByteMap_","byteToCharMapWebSafe_","ENCODED_VALS_BASE","ENCODED_VALS","ENCODED_VALS_WEBSAFE","ASSUME_NATIVE_SUPPORT_","HAS_NATIVE_ENCODE_","HAS_NATIVE_DECODE_","encodeByteArray","init_","encodeString","decodeString","decodeStringInternal_","decodeStringToByteArray","decodeStringToUint8Array","ExtensionFieldInfo","fieldIndex","fieldName","toObjectFn","isRepeated","ExtensionFieldBinaryInfo","fieldInfo","binaryReaderFn","binaryWriterFn","binaryMessageSerializeFn","binaryMessageDeserializeFn","isPacked","isMessageType","GENERATE_FROM_OBJECT","GENERATE_TO_STRING","ASSUME_LOCAL_ARRAYS","SERIALIZE_EMPTY_TRAILING_FIELDS","SUPPORTS_UINT8ARRAY_","getJsPbMessageId","messageId_","getIndex_","arrayIndexOffset_","getFieldNumber_","wrappers_","initPivotAndExtensionObject_","convertedFloatingPointFields_","repeatedFields","pivot_","EMPTY_LIST_SENTINEL_","maybeInitEmptyExtensionObject_","extensionObject_","computeOneofCase","isArray_","MAX_VALUE","toObjectExtension","serializeBinaryExtensions","readBinaryExtension","getOptionalFloatingPointField","getRepeatedFloatingPointField","assertConsistentTypes_","getFieldProto3","setFieldIgnoringDefault_","setProto3StringIntField","setProto3FloatField","setOneofField","wrapRepeatedField_","setOneofWrapperField","toMap","syncMapFields_","getExtension","setExtension","difference","compareFields","compareExtensions","cloneMessage","clone_","copyInto","registerMessageType","registry_","messageId","messageSetExtensions","messageSetExtensionsBinary","arith","UInt64","rightShift","leftShift","msb","lsb","zero","mul32x32","Int64","BinaryConstants","ConstBinaryMessage","BinaryMessage","FieldType","INVALID","DOUBLE","FLOAT","INT64","UINT64","INT32","FIXED64","FIXED32","BOOL","STRING","GROUP","MESSAGE","BYTES","UINT32","ENUM","SFIXED32","SFIXED64","SINT32","SINT64","FHASH64","VHASH64","WireType","VARINT","DELIMITED","START_GROUP","END_GROUP","FieldTypeToWireType","INVALID_FIELD_NUMBER","FLOAT32_EPS","FLOAT32_MIN","FLOAT32_MAX","FLOAT64_EPS","FLOAT64_MIN","FLOAT64_MAX","TWO_TO_20","TWO_TO_23","TWO_TO_31","TWO_TO_32","TWO_TO_52","TWO_TO_63","TWO_TO_64","ZERO_HASH","split64Low","split64High","splitUint64","splitInt64","splitZigzag64","splitFloat32","splitFloat64","splitHash64","joinUint64","joinInt64","joinZigzag64","joinFloat32","joinFloat64","joinHash64","DIGITS","joinUnsignedDecimalString","joinSignedDecimalString","hash64ToDecimalString","hash64ArrayToDecimalStrings","decimalStringToHash64","splitDecimalString","hash64ToHexString","hexStringToHash64","hash64ToNumber","numberToHash64","countVarints","countVarintFields","countFixedFields_","countFixed32Fields","countFixed64Fields","countDelimitedFields","debugBytesToTextFormat","byteSourceToUint8Array","debugScalarToTextFormat","BinaryEncoder","buffer_","writeSplitVarint64","writeSplitFixed64","writeUint32","writeUnsignedVarint32","writeSignedVarint32","writeUnsignedVarint64","writeSignedVarint64","writeZigzagVarint32","writeZigzagVarint64","writeZigzagVarint64String","writeUint8","writeUint16","writeUint64","writeInt16","writeInt64String","writeVarintHash64","writeFixedHash64","blocks_","totalLength_","encoder_","bookmarks_","appendUint8Array_","beginDelimited_","writeFieldHeader_","endDelimited_","pop","writeSerializedMessage","maybeWriteSerializedMessage","reset","getResultBase64String","writeAny","writeFixed64","writeFixed32","writeSfixed32","writeSfixed64","writeSint32","writeSint64","writeUnsignedVarint32_","writeSignedVarint32_","writeUnsignedVarint64_","writeSignedVarint64_","writeZigzagVarint32_","writeZigzagVarint64_","writeZigzagVarint64String_","writeInt32String","writeUint32String","writeUint64String","writeSint64String","writeFixed64String","writeSfixed64String","writeGroup","writeRepeatedInt32","writeRepeatedInt32String","writeRepeatedInt64","writeRepeatedInt64String","writeRepeatedUint32","writeRepeatedUint32String","writeRepeatedUint64","writeRepeatedUint64String","writeRepeatedSint32","writeRepeatedSint64","writeRepeatedSint64String","writeRepeatedFixed32","writeRepeatedFixed64","writeRepeatedFixed64String","writeRepeatedSfixed32","writeRepeatedSfixed64","writeRepeatedSfixed64String","writeRepeatedFloat","writeRepeatedDouble","writeRepeatedBool","writeRepeatedEnum","writeRepeatedString","writeRepeatedGroup","writeRepeatedFixedHash64","writeRepeatedVarintHash64","writePackedInt32","writePackedInt32String","writePackedInt64","writePackedInt64String","writePackedUint32","writePackedUint32String","writePackedUint64","writePackedUint64String","writePackedSint32","writePackedSint64","writePackedSint64String","writePackedFixed32","writePackedFixed64","writePackedFixed64String","writePackedSfixed32","writePackedSfixed64","writePackedSfixed64String","writePackedFloat","writePackedDouble","writePackedBool","writePackedEnum","writePackedFixedHash64","writePackedVarintHash64","BinaryIterator","elements_","nextMethod_","decoder_","cursor_","nextValue_","atEnd_","instanceCache_","free","atEnd","BinaryDecoder","bytes_","tempHigh_","tempLow_","end_","start_","error_","setBlock","getBuffer","getEnd","setEnd","getCursor","setCursor","advance","pastEnd","getError","readSplitVarint64_","skipVarint","unskipVarint","readUnsignedVarint32","readSignedVarint32","readUnsignedVarint32String","readSignedVarint32String","readZigzagVarint32","readUnsignedVarint64","readUnsignedVarint64String","readSignedVarint64","readSignedVarint64String","readZigzagVarint64","readZigzagVarint64String","readUint8","readUint16","readUint32","readUint64","readUint64String","readInt16","readInt64String","readFloat","readDouble","readStringWithLength","readVarintHash64","readFixedHash64","fieldCursor_","nextField_","nextWireType_","readCallbacks_","getFieldCursor","getWireType","unskipHeader","skipMatchingFields","skipVarintField","skipDelimitedField","skipFixed32Field","skipFixed64Field","skipGroup","registerReadCallback","runReadCallback","readAny","readFixed64","readFixed32","readSfixed32","readSfixed64","readSint32","readSint64","readGroup","getFieldDecoder","readInt32String","readUint32String","readSint64String","readFixed64String","readSfixed32String","readSfixed64String","readPackedField_","readPackedInt32","readPackedInt32String","readPackedInt64","readPackedInt64String","readPackedUint32","readPackedUint32String","readPackedUint64","readPackedUint64String","readPackedSint32","readPackedSint64","readPackedSint64String","readPackedFixed32","readPackedFixed64","readPackedFixed64String","readPackedSfixed32","readPackedSfixed64","readPackedSfixed64String","readPackedFloat","readPackedDouble","readPackedBool","readPackedEnum","readPackedVarintHash64","readPackedFixedHash64","Export","BlockHash","pending","pendingTotal","outSize","hmacStrength","padLength","_delta8","_delta32","_pad","_digest","fn","arg1","arg2","arg3","short","edwards","ADDRESS_PREFIX","ADDRESS_PREFIX_BYTE","encode58","EC","keccak256","jsSHA","ADDRESS_SIZE","byte2hexStr","byteArray2hexStr","computeAddress","pubBytes","addressHex","getAddressFromPriKey","priKeyBytes","getPubKeyFromPriKey","getBase58CheckAddress","addressBytes","checkSum","SHA256","keyFromPrivate","getPublic","xHex","yHex","ECKeySign","hashBytes","recoveryParam","rHex","sHex","idHex","msgBytes","shaObj","msgHex","hashHex","signTransaction","transaction","signBytes","uint8Array","passwordToAddress","password","genPriKey","priKeyHex","genKeyPair","getPrivate","isAddressValid","base58Str","checkSum1","getBase58CheckAddressFromPriKeyBase64String","priKeyBase64String","pkToAddress","privateKey","decode58Check","addressStr","decodeCheck","decodeData","hash1","contents","hexChar2byte","isHexChar","string64","Base64","decodeToByteArray","_keyStr","encode","chr1","chr2","chr3","enc1","enc2","enc3","enc4","encodeIgnoreUtf8","inputBytes","_utf8_decode","_out2ByteArray","utftext","_utf8_encode","c1","c2","c3","stringToBytes","StringDecoder","nb","nenc","retried","_normalizeEncoding","normalizeEncoding","text","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","utf8CheckExtraBytes","utf8CheckIncomplete","setImmediate","CorkedRequest","state","_this","finish","corkReq","callback","pendingcb","corkedRequestsFree","onCorkedFinish","asyncWrite","WritableState","internalUtil","deprecate","Stream","OurUint8Array","realHasInstance","destroyImpl","nop","stream","isDuplex","objectMode","writableObjectMode","hwm","writableHwm","writableHighWaterMark","defaultHwm","finalCalled","needDrain","ending","finished","noDecode","decodeStrings","defaultEncoding","writing","corked","sync","bufferProcessing","onwrite","er","writecb","writelen","onwriteStateUpdate","finishMaybe","errorEmitted","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","_write","writev","_writev","destroy","final","_final","doWrite","chunk","onwriteDrain","holder","allBuffers","isBuf","callFinal","need","prefinish","hasInstance","pipe","_uint8ArrayToBuffer","writeAfterEnd","valid","validChunk","newChunk","decodeChunk","writeOrBuffer","cork","uncork","setDefaultEncoding","endWritable","_undestroy","undestroy","Transform","PassThrough","EventEmitter","_events","_maxListeners","defaultMaxListeners","setMaxListeners","handler","context","listener","newListener","warned","trace","fired","position","listenerCount","evlistener","emitter","common","sha","ripemd","hmac","sha1","sha256","sha224","sha384","sha512","ripemd160","webpackPolyfill","paths","children","md5","rmd160","checkParameters","ZEROS","sizes","Hmac","alg","saltLen","getDigest","blocksize","ipad","opad","ipad1","ipad2","salt","iterations","keylen","DK","block1","destPos","hLen","T","U","MAX_ALLOC","checkBuffer","K","W","Sha512","init","_w","Ch","maj","sigma0","xl","sigma1","Gamma0","Gamma0l","Gamma1","Gamma1l","getCarry","_ah","_bh","_ch","_dh","_eh","_fh","_gh","_hh","_al","_bl","_cl","_dl","_el","_fl","_gl","_hl","M","fh","gh","hh","fl","gl","hl","xh","gamma0","gamma0l","gamma1","gamma1l","Wi7h","Wi7l","Wi16h","Wi16l","Wil","Wih","majh","majl","sigma0h","sigma0l","sigma1h","sigma1l","Kih","Kil","chh","chl","t1l","t1h","t2l","t2h","H","writeInt64BE","Sha256","_a","_b","_c","_d","_e","_f","_g","_h","T1","T2","algorithm","Algorithm","HashBase","ARRAY16","zl","zr","sl","sr","hr","RIPEMD160","rotl","fn1","fn2","fn3","fn4","fn5","ar","br","cr","dr","tl","tr","_blockOffset","_length","_transformState","afterTransform","ts","transforming","writechunk","rs","reading","needReadable","_read","needTransform","writeencoding","_transform","flush","_flush","_this2","err2","emitErrorNT","readableDestroyed","writableDestroyed","endEmitted","ReadableState","EElistenerCount","debugUtil","debuglog","BufferList","kProxyEvents","readableObjectMode","readableHwm","readableHighWaterMark","pipes","pipesCount","flowing","emittedReadable","readableListening","resumeScheduled","awaitDrain","readingMore","readableAddChunk","addToFront","skipChunkCheck","emitReadable","onEofChunk","chunkInvalid","getPrototypeOf","addChunk","maybeReadMore","needMoreData","isPaused","setEncoding","MAX_HWM","howMuchToRead","computeNewHighWaterMark","emitReadable_","flow","maybeReadMore_","nReadingNextTick","resume_","fromList","hasStrings","tail","copyFromBufferString","copyFromBuffer","fromListPartial","endReadable","endReadableNT","xs","nOrig","doRead","pipeOpts","endFn","stdout","stderr","unpipe","onunpipe","unpipeInfo","hasUnpiped","onclose","onfinish","ondrain","onerror","ondata","cleanedUp","pipeOnDrain","increasedAwaitDrain","pause","event","resume","dests","ev","wrap","paused","_fromList","EE","source","_isStdio","didOnEnd","cleanup","_finalized","prefix","throwIfNotStringOrBuffer","MD5","fnF","fnG","fnH","fnI","core_Tron_pb","core_Contract_pb","Return","getMessage_asB64","setResult","setMessage","getResult","getMessage_asU8","response_code","SUCCESS","SIGERROR","CONTRACT_VALIDATE_ERROR","CONTRACT_EXE_ERROR","BANDWITH_ERROR","DUP_TRANSACTION_ERROR","TAPOS_ERROR","TOO_BIG_TRANSACTION_ERROR","TRANSACTION_EXPIRATION_ERROR","SERVER_BUSY","OTHER_ERROR","getMessage","BlockReference","blockNum","blockHash","getBlockHash_asB64","setBlockNum","setBlockHash","getBlockNum","getBlockHash_asU8","getBlockHash","WitnessList","witnessesList","getWitnessesList","addWitnesses","setWitnessesList","clearWitnessesList","AssetIssueList","assetissueList","getAssetissueList","AssetIssueContract","addAssetissue","setAssetissueList","clearAssetissueList","BlockList","blockList","getBlockList","addBlock","setBlockList","clearBlockList","TransactionList","transactionList","getTransactionList","addTransaction","setTransactionList","clearTransactionList","NodeList","nodesList","getNodesList","Node","addNodes","setNodesList","clearNodesList","Address","clearAddress","hasAddress","host","getHost_asB64","port","setHost","setPort","getHost_asU8","getPort","getHost","EmptyMessage","NumberMessage","setNum","getNum","BytesMessage","getValue_asB64","getValue_asU8","TimeMessage","begininmilliseconds","endinmilliseconds","setBegininmilliseconds","setEndinmilliseconds","getBegininmilliseconds","getEndinmilliseconds","BlockLimit","startnum","endnum","setStartnum","setEndnum","getStartnum","getEndnum","TransactionLimit","transactionid","getTransactionid_asB64","limitnum","setTransactionid","setLimitnum","getTransactionid_asU8","getLimitnum","getTransactionid","AccountPaginated","setOffset","setLimit","getOffset","getLimit","TimePaginatedMessage","timemessage","getTimemessage","setTimemessage","clearTimemessage","hasTimemessage","AccountNetMessage","freenetused","freenetlimit","netused","netlimit","assetnetusedMap","getAssetnetusedMap","assetnetlimitMap","getAssetnetlimitMap","setFreenetused","setFreenetlimit","setNetused","setNetlimit","getFreenetused","getFreenetlimit","getNetused","getNetlimit","clearAssetnetusedMap","clearAssetnetlimitMap","AccountCreateContract","ownerAddress","getOwnerAddress_asB64","setOwnerAddress","getOwnerAddress_asU8","getOwnerAddress","AccountUpdateContract","TransferContract","toAddress","getToAddress_asB64","amount","setToAddress","setAmount","getToAddress_asU8","getAmount","getToAddress","TransferAssetContract","assetName","getAssetName_asB64","setAssetName","getAssetName_asU8","getAssetName","VoteAssetContract","voteAddressList","getVoteAddressList_asB64","support","addVoteAddress","setSupport","setCount","getVoteAddressList_asU8","getSupport","getVoteAddressList","setVoteAddressList","clearVoteAddressList","VoteWitnessContract","WitnessCreateContract","getUrl_asB64","getUrl_asU8","WitnessUpdateContract","updateUrl","getUpdateUrl_asB64","setUpdateUrl","getUpdateUrl_asU8","getUpdateUrl","abbr","getAbbr_asB64","totalSupply","FrozenSupply","trxNum","startTime","endTime","voteScore","description","getDescription_asB64","freeAssetNetLimit","publicFreeAssetNetLimit","publicFreeAssetNetUsage","publicLatestFreeNetTime","setAbbr","setTotalSupply","setTrxNum","setStartTime","setEndTime","setVoteScore","setDescription","setFreeAssetNetLimit","setPublicFreeAssetNetLimit","setPublicFreeAssetNetUsage","setPublicLatestFreeNetTime","getAbbr_asU8","getTotalSupply","getTrxNum","getStartTime","getEndTime","getVoteScore","getDescription_asU8","getFreeAssetNetLimit","getPublicFreeAssetNetLimit","getPublicFreeAssetNetUsage","getPublicLatestFreeNetTime","frozenAmount","frozenDays","setFrozenAmount","setFrozenDays","getFrozenAmount","getFrozenDays","getAbbr","getDescription","ParticipateAssetIssueContract","DeployContract","script","getScript_asB64","setScript","getScript_asU8","getScript","FreezeBalanceContract","frozenDuration","setFrozenDuration","getFrozenDuration","UnfreezeBalanceContract","UnfreezeAssetContract","WithdrawBalanceContract","UpdateAssetContract","newLimit","newPublicLimit","setNewLimit","setNewPublicLimit","getNewLimit","getNewPublicLimit","google","protobuf","typeUrl","setTypeUrl","getTypeUrl","getTypeName","pack","serialized","opt_typeUrlPrefix","unpack","deserialize","sha512_K","SHA512","ch64_hi","yh","yl","zh","ch64_lo","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","shaCommon","ch32","maj32","s0_256","s1_256","g0_256","g1_256","sha256_K","p32","ft_1","isTestNet","NODE_ENV","PUBLIC_URL","NET","hextoString","hex","bytesToString","bytesLength","store","st","longToByteArray","long","ALPHABET","ALPHABET_MAP","BASE","digits","reverse","digit","transactions","witnesses","accounts","blocks","api","returnFromBase64","blockFromBase64","blockString","rawBytes","globals","convertString","UTF8","escape","unescape","convertHex","bytesToHex","orig","arrBytesToHex","hexToBytes","_imports","isPrime","sqrtN","factor","getFractionalBits","nPrime","bytesToWords","wordsToBytes","processBlock","gamma0x","gamma1x","t1","digestbytes","asBytes","asString","root","DEFAULT_FEATURE","CACHE_THRESHOLD","SBase","LBase","VBase","TBase","LCount","VCount","TCount","NCount","SCount","UChar","cp","feature","codepoint","cache","cacheCounter","strategies","needFeature","SIndex","TIndex","udata","strategy","isHighSurrogate","isLowSurrogate","prepFeature","getDecomp","isCompatibility","isExclude","getCanonicalClass","getComposite","following","UCharIterator","cursor","RecursDecompIterator","it","cano","canonical","resBuf","uchar","recursiveDecomp","decomp","DecompIterator","cc","inspt","CompIterator","procBuf","lastClass","composite","normalize","createIterator","0","60","824","61","62","65","768","769","770","771","772","774","775","776","777","778","780","783","785","803","805","808","66","817","67","807","68","813","69","816","70","71","72","814","73","74","75","76","77","78","79","779","795","80","82","83","806","84","85","804","86","87","88","89","90","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","114","115","116","117","118","119","120","121","122","160","168","834","170","175","178","179","180","181","184","185","186","188","189","190","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","209","210","211","212","213","214","216","217","218","219","220","221","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","241","242","243","244","245","246","248","249","250","251","252","253","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","296","297","298","299","300","301","302","303","304","306","307","308","309","310","311","313","314","315","316","317","318","319","320","323","324","325","326","327","328","329","332","333","334","335","336","337","340","341","342","343","344","345","346","347","348","349","350","351","352","353","354","355","356","357","360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","416","417","431","432","439","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","478","479","480","481","482","483","486","487","488","489","490","491","492","493","494","495","496","497","498","499","500","501","504","505","506","507","508","509","510","511","66045","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","542","543","550","551","552","553","554","555","556","557","558","559","560","561","562","563","658","688","689","690","691","692","693","694","695","696","728","729","730","731","732","733","736","737","738","739","740","66272","773","781","782","784","786","787","788","789","790","791","792","793","794","796","797","798","799","800","801","802","809","810","811","812","815","818","819","820","821","822","823","825","826","827","828","829","830","831","832","833","835","836","837","838","839","840","841","842","843","844","845","846","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","884","890","894","900","901","902","903","904","905","906","908","910","911","912","913","917","919","921","927","929","933","937","938","939","940","941","942","943","944","945","949","951","953","959","961","965","969","970","971","972","973","974","976","977","978","979","980","981","982","1008","1009","1010","1012","1013","1017","66422","66423","66424","66425","66426","1024","1025","1027","1030","1031","1036","1037","1038","1040","1043","1045","1046","1047","1048","1049","1050","1054","1059","1063","1067","1069","1072","1075","1077","1078","1079","1080","1081","1082","1086","1091","1095","1099","1101","1104","1105","1107","1110","1111","1116","1117","1118","1140","1141","1142","1143","1155","1156","1157","1158","1159","1217","1218","1232","1233","1234","1235","1238","1239","1240","1241","1242","1243","1244","1245","1246","1247","1250","1251","1252","1253","1254","1255","1256","1257","1258","1259","1260","1261","1262","1263","1264","1265","1266","1267","1268","1269","1272","1273","1280","1415","1425","1426","1427","1428","1429","1430","1431","1432","1433","1434","1435","1436","1437","1438","1439","1440","1441","1442","1443","1444","1445","1446","1447","1448","1449","1450","1451","1452","1453","1454","1455","1456","1457","1458","1459","1460","1461","1462","1463","1464","1465","1466","1467","1468","1469","1471","1473","1474","1476","1477","1479","1536","1552","1553","1554","1555","1556","1557","1558","1559","1560","1561","1562","1570","1571","1572","1573","1574","1575","1619","1620","1621","1608","1610","1611","1612","1613","1614","1615","1616","1617","1618","1622","1623","1624","1625","1626","1627","1628","1629","1630","1631","1648","1653","1654","1655","1656","1728","1729","1730","1746","1747","1749","1750","1751","1752","1753","1754","1755","1756","1759","1760","1761","1762","1763","1764","1767","1768","1770","1771","1772","1773","1792","1809","1840","1841","1842","1843","1844","1845","1846","1847","1848","1849","1850","1851","1852","1853","1854","1855","1856","1857","1858","1859","1860","1861","1862","1863","1864","1865","1866","2027","2028","2029","2030","2031","2032","2033","2034","2035","2048","2070","2071","2072","2073","2075","2076","2077","2078","2079","2080","2081","2082","2083","2085","2086","2087","2089","2090","2091","2092","2093","2137","2138","2139","2276","2277","2278","2279","2280","2281","2282","2283","2284","2285","2286","2287","2288","2289","2290","2291","2292","2293","2294","2295","2296","2297","2298","2299","2300","2301","2302","2303","2304","2344","2364","2345","2352","2353","2355","2356","2381","2385","2386","2387","2388","2392","2393","2394","2395","2396","2397","2398","2399","2492","2503","2494","2519","2507","2508","2509","2524","2525","2527","2560","2611","2614","2620","2637","2649","2650","2651","2654","2748","2765","68109","68111","68152","68153","68154","68159","68325","68326","2816","2876","2887","2878","2902","2903","2888","2891","2892","2893","2908","2909","2962","3031","2964","3014","3006","3015","3018","3019","3020","3021","3072","3142","3158","3144","3149","3157","3260","3263","3285","3264","3270","3266","3286","3271","3272","3274","3275","3277","3328","3398","3390","3415","3399","3402","3403","3404","3405","3530","3545","3535","3551","3546","3548","3549","3550","3584","3635","3640","3641","3642","3656","3657","3658","3659","3763","3768","3769","3784","3785","3786","3787","3804","3805","3840","3852","3864","3865","3893","3895","3897","3907","3917","3922","3927","3932","3945","3953","3954","3955","3956","3957","3958","3959","3960","3961","3962","3963","3964","3965","3968","3969","3970","3971","3972","3974","3975","3987","3997","4002","4007","4012","4025","4038","4096","4133","4142","4134","4151","4153","4154","4237","4348","69702","69759","69785","69818","69786","69787","69788","69797","69803","69817","4352","69888","69889","69890","69934","69935","69937","69927","69938","69939","69940","70003","70080","4608","70197","70198","70377","70378","4864","4957","4958","4959","70460","70471","70462","70487","70475","70476","70477","70502","70503","70504","70505","70506","70507","70508","70512","70513","70514","70515","70516","5120","70841","70832","70842","70845","70843","70844","70846","70850","70851","5376","71096","71087","71097","71098","71099","71103","71104","5632","71231","71350","71351","5888","5908","5940","6098","6109","6144","6313","6400","6457","6458","6459","6656","6679","6680","6752","6773","6774","6775","6776","6777","6778","6779","6780","6783","6832","6833","6834","6835","6836","6837","6838","6839","6840","6841","6842","6843","6844","6845","6912","6917","6965","6918","6919","6920","6921","6922","6923","6924","6925","6926","6929","6930","6964","6970","6971","6972","6973","6974","6975","6976","6977","6978","6979","6980","7019","7020","7021","7022","7023","7024","7025","7026","7027","7082","7083","7142","7154","7155","7168","7223","7376","7377","7378","7380","7381","7382","7383","7384","7385","7386","7387","7388","7389","7390","7391","7392","7394","7395","7396","7397","7398","7399","7400","7405","7412","7416","7417","7424","7468","7469","7470","7472","7473","7474","7475","7476","7477","7478","7479","7480","7481","7482","7484","7485","7486","7487","7488","7489","7490","7491","7492","7493","7494","7495","7496","7497","7498","7499","7500","7501","7503","7504","7505","7506","7507","7508","7509","7510","7511","7512","7513","7514","7515","7516","7517","7518","7519","7520","7521","7522","7523","7524","7525","7526","7527","7528","7529","7530","7544","7579","7580","7581","7582","7583","7584","7585","7586","7587","7588","7589","7590","7591","7592","7593","7594","7595","7596","7597","7598","7599","7600","7601","7602","7603","7604","7605","7606","7607","7608","7609","7610","7611","7612","7613","7614","7615","7616","7617","7618","7619","7620","7621","7622","7623","7624","7625","7626","7627","7628","7629","7630","7631","7632","7633","7634","7635","7636","7637","7638","7639","7640","7641","7642","7643","7644","7645","7646","7647","7648","7649","7650","7651","7652","7653","7654","7655","7656","7657","7658","7659","7660","7661","7662","7663","7664","7665","7666","7667","7668","7669","7676","7677","7678","7679","7680","7681","7682","7683","7684","7685","7686","7687","7688","7689","7690","7691","7692","7693","7694","7695","7696","7697","7698","7699","7700","7701","7702","7703","7704","7705","7706","7707","7708","7709","7710","7711","7712","7713","7714","7715","7716","7717","7718","7719","7720","7721","7722","7723","7724","7725","7726","7727","7728","7729","7730","7731","7732","7733","7734","7735","7736","7737","7738","7739","7740","7741","7742","7743","7744","7745","7746","7747","7748","7749","7750","7751","7752","7753","7754","7755","7756","7757","7758","7759","7760","7761","7762","7763","7764","7765","7766","7767","7768","7769","7770","7771","7772","7773","7774","7775","7776","7777","7778","7779","7780","7781","7782","7783","7784","7785","7786","7787","7788","7789","7790","7791","7792","7793","7794","7795","7796","7797","7798","7799","7800","7801","7802","7803","7804","7805","7806","7807","7808","7809","7810","7811","7812","7813","7814","7815","7816","7817","7818","7819","7820","7821","7822","7823","7824","7825","7826","7827","7828","7829","7830","7831","7832","7833","7834","7835","7840","7841","7842","7843","7844","7845","7846","7847","7848","7849","7850","7851","7852","7853","7854","7855","7856","7857","7858","7859","7860","7861","7862","7863","7864","7865","7866","7867","7868","7869","7870","7871","7872","7873","7874","7875","7876","7877","7878","7879","7880","7881","7882","7883","7884","7885","7886","7887","7888","7889","7890","7891","7892","7893","7894","7895","7896","7897","7898","7899","7900","7901","7902","7903","7904","7905","7906","7907","7908","7909","7910","7911","7912","7913","7914","7915","7916","7917","7918","7919","7920","7921","7922","7923","7924","7925","7926","7927","7928","7929","7936","7937","7938","7939","7940","7941","7942","7943","7944","7945","7946","7947","7948","7949","7950","7951","7952","7953","7954","7955","7956","7957","7960","7961","7962","7963","7964","7965","7968","7969","7970","7971","7972","7973","7974","7975","7976","7977","7978","7979","7980","7981","7982","7983","7984","7985","7986","7987","7988","7989","7990","7991","7992","7993","7994","7995","7996","7997","7998","7999","8000","8001","8002","8003","8004","8005","8008","8009","8010","8011","8012","8013","8016","8017","8018","8019","8020","8021","8022","8023","8025","8027","8029","8031","8032","8033","8034","8035","8036","8037","8038","8039","8040","8041","8042","8043","8044","8045","8046","8047","8048","8049","8050","8051","8052","8053","8054","8055","8056","8057","8058","8059","8060","8061","8064","8065","8066","8067","8068","8069","8070","8071","8072","8073","8074","8075","8076","8077","8078","8079","8080","8081","8082","8083","8084","8085","8086","8087","8088","8089","8090","8091","8092","8093","8094","8095","8096","8097","8098","8099","8100","8101","8102","8103","8104","8105","8106","8107","8108","8109","8110","8111","8112","8113","8114","8115","8116","8118","8119","8120","8121","8122","8123","8124","8125","8126","8127","8128","8129","8130","8131","8132","8134","8135","8136","8137","8138","8139","8140","8141","8142","8143","8144","8145","8146","8147","8150","8151","8152","8153","8154","8155","8157","8158","8159","8160","8161","8162","8163","8164","8165","8166","8167","8168","8169","8170","8171","8172","8173","8174","8175","8178","8179","8180","8182","8183","8184","8185","8186","8187","8188","8189","8190","8192","8193","8194","8195","8196","8197","8198","8199","8200","8201","8202","8209","8215","8228","8229","8230","8239","8243","8244","8246","8247","8252","8254","8263","8264","8265","8279","8287","8304","8305","8308","8309","8310","8311","8312","8313","8314","8315","8316","8317","8318","8319","8320","8321","8322","8323","8324","8325","8326","8327","8328","8329","8330","8331","8332","8333","8334","8336","8337","8338","8339","8340","8341","8342","8343","8344","8345","8346","8347","8348","8360","8400","8401","8402","8403","8404","8405","8406","8407","8408","8409","8410","8411","8412","8417","8421","8422","8423","8424","8425","8426","8427","8428","8429","8430","8431","8432","8448","8449","8450","8451","8453","8454","8455","8457","8458","8459","8460","8461","8462","8463","8464","8465","8466","8467","8469","8470","8473","8474","8475","8476","8477","8480","8481","8482","8484","8486","8488","8490","8491","8492","8493","8495","8496","8497","8499","8500","8501","8502","8503","8504","8505","8507","8508","8509","8510","8511","8512","8517","8518","8519","8520","8521","8528","8529","8530","8531","8532","8533","8534","8535","8536","8537","8538","8539","8540","8541","8542","8543","8544","8545","8546","8547","8548","8549","8550","8551","8552","8553","8554","8555","8556","8557","8558","8559","8560","8561","8562","8563","8564","8565","8566","8567","8568","8569","8570","8571","8572","8573","8574","8575","8585","8592","8594","8596","8602","8603","8622","8653","8654","8655","8656","8658","8660","8704","8707","8708","8712","8713","8715","8716","8739","8740","8741","8742","8748","8749","8751","8752","8764","8769","8771","8772","8773","8775","8776","8777","8781","8800","8801","8802","8804","8805","8813","8814","8815","8816","8817","8818","8819","8820","8821","8822","8823","8824","8825","8826","8827","8828","8829","8832","8833","8834","8835","8836","8837","8838","8839","8840","8841","8849","8850","8866","8872","8873","8875","8876","8877","8878","8879","8882","8883","8884","8885","8928","8929","8930","8931","8938","8939","8940","8941","8960","9001","9002","9216","9312","9313","9314","9315","9316","9317","9318","9319","9320","9321","9322","9323","9324","9325","9326","9327","9328","9329","9330","9331","9332","9333","9334","9335","9336","9337","9338","9339","9340","9341","9342","9343","9344","9345","9346","9347","9348","9349","9350","9351","9352","9353","9354","9355","9356","9357","9358","9359","9360","9361","9362","9363","9364","9365","9366","9367","9368","9369","9370","9371","9372","9373","9374","9375","9376","9377","9378","9379","9380","9381","9382","9383","9384","9385","9386","9387","9388","9389","9390","9391","9392","9393","9394","9395","9396","9397","9398","9399","9400","9401","9402","9403","9404","9405","9406","9407","9408","9409","9410","9411","9412","9413","9414","9415","9416","9417","9418","9419","9420","9421","9422","9423","9424","9425","9426","9427","9428","9429","9430","9431","9432","9433","9434","9435","9436","9437","9438","9439","9440","9441","9442","9443","9444","9445","9446","9447","9448","9449","9450","10752","10764","10868","10869","10870","10972","11264","11388","11389","11503","11504","11505","11520","11631","11647","11744","11745","11746","11747","11748","11749","11750","11751","11752","11753","11754","11755","11756","11757","11758","11759","11760","11761","11762","11763","11764","11765","11766","11767","11768","11769","11770","11771","11772","11773","11774","11775","11776","11935","12019","12032","12033","12034","12035","12036","12037","12038","12039","12040","12041","12042","12043","12044","12045","12046","12047","12048","12049","12050","12051","12052","12053","12054","12055","12056","12057","12058","12059","12060","12061","12062","12063","12064","12065","12066","12067","12068","12069","12070","12071","12072","12073","12074","12075","12076","12077","12078","12079","12080","12081","12082","12083","12084","12085","12086","12087","12088","12089","12090","12091","12092","12093","12094","12095","12096","12097","12098","12099","12100","12101","12102","12103","12104","12105","12106","12107","12108","12109","12110","12111","12112","12113","12114","12115","12116","12117","12118","12119","12120","12121","12122","12123","12124","12125","12126","12127","12128","12129","12130","12131","12132","12133","12134","12135","12136","12137","12138","12139","12140","12141","12142","12143","12144","12145","12146","12147","12148","12149","12150","12151","12152","12153","12154","12155","12156","12157","12158","12159","12160","12161","12162","12163","12164","12165","12166","12167","12168","12169","12170","12171","12172","12173","12174","12175","12176","12177","12178","12179","12180","12181","12182","12183","12184","12185","12186","12187","12188","12189","12190","12191","12192","12193","12194","12195","12196","12197","12198","12199","12200","12201","12202","12203","12204","12205","12206","12207","12208","12209","12210","12211","12212","12213","12214","12215","12216","12217","12218","12219","12220","12221","12222","12223","12224","12225","12226","12227","12228","12229","12230","12231","12232","12233","12234","12235","12236","12237","12238","12239","12240","12241","12242","12243","12244","12245","12288","12330","12331","12332","12333","12334","12335","12342","12344","12345","12346","12358","12441","12363","12364","12365","12366","12367","12368","12369","12370","12371","12372","12373","12374","12375","12376","12377","12378","12379","12380","12381","12382","12383","12384","12385","12386","12388","12389","12390","12391","12392","12393","12399","12442","12400","12401","12402","12403","12404","12405","12406","12407","12408","12409","12410","12411","12412","12413","12436","12443","12444","12445","12446","12447","12454","12459","12460","12461","12462","12463","12464","12465","12466","12467","12468","12469","12470","12471","12472","12473","12474","12475","12476","12477","12478","12479","12480","12481","12482","12484","12485","12486","12487","12488","12489","12495","12496","12497","12498","12499","12500","12501","12502","12503","12504","12505","12506","12507","12508","12509","12527","12528","12529","12530","12532","12535","12536","12537","12538","12541","12542","12543","12544","12593","12594","12595","12596","12597","12598","12599","12600","12601","12602","12603","12604","12605","12606","12607","12608","12609","12610","12611","12612","12613","12614","12615","12616","12617","12618","12619","12620","12621","12622","12623","12624","12625","12626","12627","12628","12629","12630","12631","12632","12633","12634","12635","12636","12637","12638","12639","12640","12641","12642","12643","12644","12645","12646","12647","12648","12649","12650","12651","12652","12653","12654","12655","12656","12657","12658","12659","12660","12661","12662","12663","12664","12665","12666","12667","12668","12669","12670","12671","12672","12673","12674","12675","12676","12677","12678","12679","12680","12681","12682","12683","12684","12685","12686","12690","12691","12692","12693","12694","12695","12696","12697","12698","12699","12700","12701","12702","12703","12800","12801","12802","12803","12804","12805","12806","12807","12808","12809","12810","12811","12812","12813","12814","12815","12816","12817","12818","12819","12820","12821","12822","12823","12824","12825","12826","12827","12828","12829","12830","12832","12833","12834","12835","12836","12837","12838","12839","12840","12841","12842","12843","12844","12845","12846","12847","12848","12849","12850","12851","12852","12853","12854","12855","12856","12857","12858","12859","12860","12861","12862","12863","12864","12865","12866","12867","12868","12869","12870","12871","12880","12881","12882","12883","12884","12885","12886","12887","12888","12889","12890","12891","12892","12893","12894","12895","12896","12897","12898","12899","12900","12901","12902","12903","12904","12905","12906","12907","12908","12909","12910","12911","12912","12913","12914","12915","12916","12917","12918","12919","12920","12921","12922","12923","12924","12925","12926","12928","12929","12930","12931","12932","12933","12934","12935","12936","12937","12938","12939","12940","12941","12942","12943","12944","12945","12946","12947","12948","12949","12950","12951","12952","12953","12954","12955","12956","12957","12958","12959","12960","12961","12962","12963","12964","12965","12966","12967","12968","12969","12970","12971","12972","12973","12974","12975","12976","12977","12978","12979","12980","12981","12982","12983","12984","12985","12986","12987","12988","12989","12990","12991","12992","12993","12994","12995","12996","12997","12998","12999","13000","13001","13002","13003","13004","13005","13006","13007","13008","13009","13010","13011","13012","13013","13014","13015","13016","13017","13018","13019","13020","13021","13022","13023","13024","13025","13026","13027","13028","13029","13030","13031","13032","13033","13034","13035","13036","13037","13038","13039","13040","13041","13042","13043","13044","13045","13046","13047","13048","13049","13050","13051","13052","13053","13054","13056","13057","13058","13059","13060","13061","13062","13063","13064","13065","13066","13067","13068","13069","13070","13071","13072","13073","13074","13075","13076","13077","13078","13079","13080","13081","13082","13083","13084","13085","13086","13087","13088","13089","13090","13091","13092","13093","13094","13095","13096","13097","13098","13099","13100","13101","13102","13103","13104","13105","13106","13107","13108","13109","13110","13111","13112","13113","13114","13115","13116","13117","13118","13119","13120","13121","13122","13123","13124","13125","13126","13127","13128","13129","13130","13131","13132","13133","13134","13135","13136","13137","13138","13139","13140","13141","13142","13143","13144","13145","13146","13147","13148","13149","13150","13151","13152","13153","13154","13155","13156","13157","13158","13159","13160","13161","13162","13163","13164","13165","13166","13167","13168","13169","13170","13171","13172","13173","13174","13175","13176","13177","13178","13179","13180","13181","13182","13183","13184","13185","13186","13187","13188","13189","13190","13191","13192","13193","13194","13195","13196","13197","13198","13199","13200","13201","13202","13203","13204","13205","13206","13207","13208","13209","13210","13211","13212","13213","13214","13215","13216","13217","13218","13219","13220","13221","13222","13223","13224","13225","13226","13227","13228","13229","13230","13231","13232","13233","13234","13235","13236","13237","13238","13239","13240","13241","13242","13243","13244","13245","13246","13247","13248","13249","13250","13251","13252","13253","13254","13255","13256","13257","13258","13259","13260","13261","13262","13263","13264","13265","13266","13267","13268","13269","13270","13271","13272","13273","13274","13275","13276","13277","13278","13279","13280","13281","13282","13283","13284","13285","13286","13287","13288","13289","13290","13291","13292","13293","13294","13295","13296","13297","13298","13299","13300","13301","13302","13303","13304","13305","13306","13307","13308","13309","13310","13311","27136","92912","92913","92914","92915","92916","27392","92976","92977","92978","92979","92980","92981","92982","42496","42607","42612","42613","42614","42615","42616","42617","42618","42619","42620","42621","42652","42653","42655","42736","42737","42752","42864","43000","43001","43008","43014","43204","43232","43233","43234","43235","43236","43237","43238","43239","43240","43241","43242","43243","43244","43245","43246","43247","43248","43249","43264","43307","43308","43309","43347","43443","43456","43520","43696","43698","43699","43700","43703","43704","43710","43711","43713","43766","43776","43868","43869","43870","43871","44013","48128","113822","53504","119134","119135","119136","119137","119138","119139","119140","119141","119142","119143","119144","119145","119149","119150","119151","119152","119153","119154","119163","119164","119165","119166","119167","119168","119169","119170","119173","119174","119175","119176","119177","119178","119179","119210","119211","119212","119213","119227","119228","119229","119230","119231","119232","53760","119362","119363","119364","54272","119808","119809","119810","119811","119812","119813","119814","119815","119816","119817","119818","119819","119820","119821","119822","119823","119824","119825","119826","119827","119828","119829","119830","119831","119832","119833","119834","119835","119836","119837","119838","119839","119840","119841","119842","119843","119844","119845","119846","119847","119848","119849","119850","119851","119852","119853","119854","119855","119856","119857","119858","119859","119860","119861","119862","119863","119864","119865","119866","119867","119868","119869","119870","119871","119872","119873","119874","119875","119876","119877","119878","119879","119880","119881","119882","119883","119884","119885","119886","119887","119888","119889","119890","119891","119892","119894","119895","119896","119897","119898","119899","119900","119901","119902","119903","119904","119905","119906","119907","119908","119909","119910","119911","119912","119913","119914","119915","119916","119917","119918","119919","119920","119921","119922","119923","119924","119925","119926","119927","119928","119929","119930","119931","119932","119933","119934","119935","119936","119937","119938","119939","119940","119941","119942","119943","119944","119945","119946","119947","119948","119949","119950","119951","119952","119953","119954","119955","119956","119957","119958","119959","119960","119961","119962","119963","119964","119966","119967","119970","119973","119974","119977","119978","119979","119980","119982","119983","119984","119985","119986","119987","119988","119989","119990","119991","119992","119993","119995","119997","119998","119999","120000","120001","120002","120003","120005","120006","120007","120008","120009","120010","120011","120012","120013","120014","120015","120016","120017","120018","120019","120020","120021","120022","120023","120024","120025","120026","120027","120028","120029","120030","120031","120032","120033","120034","120035","120036","120037","120038","120039","120040","120041","120042","120043","120044","120045","120046","120047","120048","120049","120050","120051","120052","120053","120054","120055","120056","120057","120058","120059","120060","120061","120062","120063","54528","120064","120065","120066","120067","120068","120069","120071","120072","120073","120074","120077","120078","120079","120080","120081","120082","120083","120084","120086","120087","120088","120089","120090","120091","120092","120094","120095","120096","120097","120098","120099","120100","120101","120102","120103","120104","120105","120106","120107","120108","120109","120110","120111","120112","120113","120114","120115","120116","120117","120118","120119","120120","120121","120123","120124","120125","120126","120128","120129","120130","120131","120132","120134","120138","120139","120140","120141","120142","120143","120144","120146","120147","120148","120149","120150","120151","120152","120153","120154","120155","120156","120157","120158","120159","120160","120161","120162","120163","120164","120165","120166","120167","120168","120169","120170","120171","120172","120173","120174","120175","120176","120177","120178","120179","120180","120181","120182","120183","120184","120185","120186","120187","120188","120189","120190","120191","120192","120193","120194","120195","120196","120197","120198","120199","120200","120201","120202","120203","120204","120205","120206","120207","120208","120209","120210","120211","120212","120213","120214","120215","120216","120217","120218","120219","120220","120221","120222","120223","120224","120225","120226","120227","120228","120229","120230","120231","120232","120233","120234","120235","120236","120237","120238","120239","120240","120241","120242","120243","120244","120245","120246","120247","120248","120249","120250","120251","120252","120253","120254","120255","120256","120257","120258","120259","120260","120261","120262","120263","120264","120265","120266","120267","120268","120269","120270","120271","120272","120273","120274","120275","120276","120277","120278","120279","120280","120281","120282","120283","120284","120285","120286","120287","120288","120289","120290","120291","120292","120293","120294","120295","120296","120297","120298","120299","120300","120301","120302","120303","120304","120305","120306","120307","120308","120309","120310","120311","120312","120313","120314","120315","120316","120317","120318","120319","54784","120320","120321","120322","120323","120324","120325","120326","120327","120328","120329","120330","120331","120332","120333","120334","120335","120336","120337","120338","120339","120340","120341","120342","120343","120344","120345","120346","120347","120348","120349","120350","120351","120352","120353","120354","120355","120356","120357","120358","120359","120360","120361","120362","120363","120364","120365","120366","120367","120368","120369","120370","120371","120372","120373","120374","120375","120376","120377","120378","120379","120380","120381","120382","120383","120384","120385","120386","120387","120388","120389","120390","120391","120392","120393","120394","120395","120396","120397","120398","120399","120400","120401","120402","120403","120404","120405","120406","120407","120408","120409","120410","120411","120412","120413","120414","120415","120416","120417","120418","120419","120420","120421","120422","120423","120424","120425","120426","120427","120428","120429","120430","120431","120432","120433","120434","120435","120436","120437","120438","120439","120440","120441","120442","120443","120444","120445","120446","120447","120448","120449","120450","120451","120452","120453","120454","120455","120456","120457","120458","120459","120460","120461","120462","120463","120464","120465","120466","120467","120468","120469","120470","120471","120472","120473","120474","120475","120476","120477","120478","120479","120480","120481","120482","120483","120484","120485","120488","120489","120490","120491","120492","120493","120494","120495","120496","120497","120498","120499","120500","120501","120502","120503","120504","120505","120506","120507","120508","120509","120510","120511","120512","120513","120514","120515","120516","120517","120518","120519","120520","120521","120522","120523","120524","120525","120526","120527","120528","120529","120530","120531","120532","120533","120534","120535","120536","120537","120538","120539","120540","120541","120542","120543","120544","120545","120546","120547","120548","120549","120550","120551","120552","120553","120554","120555","120556","120557","120558","120559","120560","120561","120562","120563","120564","120565","120566","120567","120568","120569","120570","120571","120572","120573","120574","120575","55040","120576","120577","120578","120579","120580","120581","120582","120583","120584","120585","120586","120587","120588","120589","120590","120591","120592","120593","120594","120595","120596","120597","120598","120599","120600","120601","120602","120603","120604","120605","120606","120607","120608","120609","120610","120611","120612","120613","120614","120615","120616","120617","120618","120619","120620","120621","120622","120623","120624","120625","120626","120627","120628","120629","120630","120631","120632","120633","120634","120635","120636","120637","120638","120639","120640","120641","120642","120643","120644","120645","120646","120647","120648","120649","120650","120651","120652","120653","120654","120655","120656","120657","120658","120659","120660","120661","120662","120663","120664","120665","120666","120667","120668","120669","120670","120671","120672","120673","120674","120675","120676","120677","120678","120679","120680","120681","120682","120683","120684","120685","120686","120687","120688","120689","120690","120691","120692","120693","120694","120695","120696","120697","120698","120699","120700","120701","120702","120703","120704","120705","120706","120707","120708","120709","120710","120711","120712","120713","120714","120715","120716","120717","120718","120719","120720","120721","120722","120723","120724","120725","120726","120727","120728","120729","120730","120731","120732","120733","120734","120735","120736","120737","120738","120739","120740","120741","120742","120743","120744","120745","120746","120747","120748","120749","120750","120751","120752","120753","120754","120755","120756","120757","120758","120759","120760","120761","120762","120763","120764","120765","120766","120767","120768","120769","120770","120771","120772","120773","120774","120775","120776","120777","120778","120779","120782","120783","120784","120785","120786","120787","120788","120789","120790","120791","120792","120793","120794","120795","120796","120797","120798","120799","120800","120801","120802","120803","120804","120805","120806","120807","120808","120809","120810","120811","120812","120813","120814","120815","120816","120817","120818","120819","120820","120821","120822","120823","120824","120825","120826","120827","120828","120829","120830","120831","59392","125136","125137","125138","125139","125140","125141","125142","60928","126464","126465","126466","126467","126469","126470","126471","126472","126473","126474","126475","126476","126477","126478","126479","126480","126481","126482","126483","126484","126485","126486","126487","126488","126489","126490","126491","126492","126493","126494","126495","126497","126498","126500","126503","126505","126506","126507","126508","126509","126510","126511","126512","126513","126514","126516","126517","126518","126519","126521","126523","126530","126535","126537","126539","126541","126542","126543","126545","126546","126548","126551","126553","126555","126557","126559","126561","126562","126564","126567","126568","126569","126570","126572","126573","126574","126575","126576","126577","126578","126580","126581","126582","126583","126585","126586","126587","126588","126590","126592","126593","126594","126595","126596","126597","126598","126599","126600","126601","126603","126604","126605","126606","126607","126608","126609","126610","126611","126612","126613","126614","126615","126616","126617","126618","126619","126625","126626","126627","126629","126630","126631","126632","126633","126635","126636","126637","126638","126639","126640","126641","126642","126643","126644","126645","126646","126647","126648","126649","126650","126651","61696","127232","127233","127234","127235","127236","127237","127238","127239","127240","127241","127242","127248","127249","127250","127251","127252","127253","127254","127255","127256","127257","127258","127259","127260","127261","127262","127263","127264","127265","127266","127267","127268","127269","127270","127271","127272","127273","127274","127275","127276","127277","127278","127280","127281","127282","127283","127284","127285","127286","127287","127288","127289","127290","127291","127292","127293","127294","127295","127296","127297","127298","127299","127300","127301","127302","127303","127304","127305","127306","127307","127308","127309","127310","127311","127338","127339","127376","61952","127488","127489","127490","127504","127505","127506","127507","127508","127509","127510","127511","127512","127513","127514","127515","127516","127517","127518","127519","127520","127521","127522","127523","127524","127525","127526","127527","127528","127529","127530","127531","127532","127533","127534","127535","127536","127537","127538","127539","127540","127541","127542","127543","127544","127545","127546","127552","127553","127554","127555","127556","127557","127558","127559","127560","127568","127569","63488","194560","194561","194562","194563","194564","194565","194566","194567","194568","194569","194570","194571","194572","194573","194574","194575","194576","194577","194578","194579","194580","194581","194582","194583","194584","194585","194586","194587","194588","194589","194590","194591","194592","194593","194594","194595","194596","194597","194598","194599","194600","194601","194602","194603","194604","194605","194606","194607","194608","194609","194610","194611","194612","194613","194614","194615","194616","194617","194618","194619","194620","194621","194622","194623","194624","194625","194626","194627","194628","194629","194630","194631","194632","194633","194634","194635","194636","194637","194638","194639","194640","194641","194642","194643","194644","194645","194646","194647","194648","194649","194650","194651","194652","194653","194654","194655","194656","194657","194658","194659","194660","194661","194662","194663","194664","194665","194666","194667","194668","194669","194670","194671","194672","194673","194674","194675","194676","194677","194678","194679","194680","194681","194682","194683","194684","194685","194686","194687","194688","194689","194690","194691","194692","194693","194694","194695","194696","194697","194698","194699","194700","194701","194702","194703","194704","194705","194706","194707","194708","194709","194710","194711","194712","194713","194714","194715","194716","194717","194718","194719","194720","194721","194722","194723","194724","194725","194726","194727","194728","194729","194730","194731","194732","194733","194734","194735","194736","194737","194738","194739","194740","194741","194742","194743","194744","194745","194746","194747","194748","194749","194750","194751","194752","194753","194754","194755","194756","194757","194758","194759","194760","194761","194762","194763","194764","194765","194766","194767","194768","194769","194770","194771","194772","194773","194774","194775","194776","194777","194778","194779","194780","194781","194782","194783","194784","194785","194786","194787","194788","194789","194790","194791","194792","194793","194794","194795","194796","194797","194798","194799","194800","194801","194802","194803","194804","194805","194806","194807","194808","194809","194810","194811","194812","194813","194814","194815","63744","63745","63746","63747","63748","63749","63750","63751","63752","63753","63754","63755","63756","63757","63758","63759","63760","63761","63762","63763","63764","63765","63766","63767","63768","63769","63770","63771","63772","63773","63774","63775","63776","63777","63778","63779","63780","63781","63782","63783","63784","63785","63786","63787","63788","63789","63790","63791","63792","63793","63794","63795","63796","63797","63798","63799","63800","63801","63802","63803","63804","63805","63806","63807","63808","63809","63810","63811","63812","63813","63814","63815","63816","63817","63818","63819","63820","63821","63822","63823","63824","63825","63826","63827","63828","63829","63830","63831","63832","63833","63834","63835","63836","63837","63838","63839","63840","63841","63842","63843","63844","63845","63846","63847","63848","63849","63850","63851","63852","63853","63854","63855","63856","63857","63858","63859","63860","63861","63862","63863","63864","63865","63866","63867","63868","63869","63870","63871","63872","63873","63874","63875","63876","63877","63878","63879","63880","63881","63882","63883","63884","63885","63886","63887","63888","63889","63890","63891","63892","63893","63894","63895","63896","63897","63898","63899","63900","63901","63902","63903","63904","63905","63906","63907","63908","63909","63910","63911","63912","63913","63914","63915","63916","63917","63918","63919","63920","63921","63922","63923","63924","63925","63926","63927","63928","63929","63930","63931","63932","63933","63934","63935","63936","63937","63938","63939","63940","63941","63942","63943","63944","63945","63946","63947","63948","63949","63950","63951","63952","63953","63954","63955","63956","63957","63958","63959","63960","63961","63962","63963","63964","63965","63966","63967","63968","63969","63970","63971","63972","63973","63974","63975","63976","63977","63978","63979","63980","63981","63982","63983","63984","63985","63986","63987","63988","63989","63990","63991","63992","63993","63994","63995","63996","63997","63998","63999","194816","194817","194818","194819","194820","194821","194822","194823","194824","194825","194826","194827","194828","194829","194830","194831","194832","194833","194834","194835","194836","194837","194838","194839","194840","194841","194842","194843","194844","194845","194846","194847","194848","194849","194850","194851","194852","194853","194854","194855","194856","194857","194858","194859","194860","194861","194862","194863","194864","194865","194866","194867","194868","194869","194870","194871","194872","194873","194874","194875","194876","194877","194878","194879","194880","194881","194882","194883","194884","194885","194886","194887","194888","194889","194890","194891","194892","194893","194894","194895","194896","194897","194898","194899","194900","194901","194902","194903","194904","194905","194906","194907","194908","194909","194910","194911","194912","194913","194914","194915","194916","194917","194918","194919","194920","194921","194922","194923","194924","194925","194926","194927","194928","194929","194930","194931","194932","194933","194934","194935","194936","194937","194938","194939","194940","194941","194942","194943","194944","194945","194946","194947","194948","194949","194950","194951","194952","194953","194954","194955","194956","194957","194958","194959","194960","194961","194962","194963","194964","194965","194966","194967","194968","194969","194970","194971","194972","194973","194974","194975","194976","194977","194978","194979","194980","194981","194982","194983","194984","194985","194986","194987","194988","194989","194990","194991","194992","194993","194994","194995","194996","194997","194998","194999","195000","195001","195002","195003","195004","195005","195006","195007","195008","195009","195010","195011","195012","195013","195014","195015","195016","195017","195018","195019","195020","195021","195022","195023","195024","195025","195026","195027","195028","195029","195030","195031","195032","195033","195034","195035","195036","195037","195038","195039","195040","195041","195042","195043","195044","195045","195046","195047","195048","195049","195050","195051","195052","195053","195054","195055","195056","195057","195058","195059","195060","195061","195062","195063","195064","195065","195066","195067","195068","195069","195070","195071","64000","64001","64002","64003","64004","64005","64006","64007","64008","64009","64010","64011","64012","64013","64016","64018","64021","64022","64023","64024","64025","64026","64027","64028","64029","64030","64032","64034","64037","64038","64042","64043","64044","64045","64046","64047","64048","64049","64050","64051","64052","64053","64054","64055","64056","64057","64058","64059","64060","64061","64062","64063","64064","64065","64066","64067","64068","64069","64070","64071","64072","64073","64074","64075","64076","64077","64078","64079","64080","64081","64082","64083","64084","64085","64086","64087","64088","64089","64090","64091","64092","64093","64094","64095","64096","64097","64098","64099","64100","64101","64102","64103","64104","64105","64106","64107","64108","64109","64112","64113","64114","64115","64116","64117","64118","64119","64120","64121","64122","64123","64124","64125","64126","64127","64128","64129","64130","64131","64132","64133","64134","64135","64136","64137","64138","64139","64140","64141","64142","64143","64144","64145","64146","64147","64148","64149","64150","64151","64152","64153","64154","64155","64156","64157","64158","64159","64160","64161","64162","64163","64164","64165","64166","64167","64168","64169","64170","64171","64172","64173","64174","64175","64176","64177","64178","64179","64180","64181","64182","64183","64184","64185","64186","64187","64188","64189","64190","64191","64192","64193","64194","64195","64196","64197","64198","64199","64200","64201","64202","64203","64204","64205","64206","64207","64208","64209","64210","64211","64212","64213","64214","64215","64216","64217","195072","195073","195074","195075","195076","195077","195078","195079","195080","195081","195082","195083","195084","195085","195086","195087","195088","195089","195090","195091","195092","195093","195094","195095","195096","195097","195098","195099","195100","195101","64256","64257","64258","64259","64260","64261","64262","64275","64276","64277","64278","64279","64285","64286","64287","64288","64289","64290","64291","64292","64293","64294","64295","64296","64297","64298","64299","64300","64301","64302","64303","64304","64305","64306","64307","64308","64309","64310","64312","64313","64314","64315","64316","64318","64320","64321","64323","64324","64326","64327","64328","64329","64330","64331","64332","64333","64334","64335","64336","64337","64338","64339","64340","64341","64342","64343","64344","64345","64346","64347","64348","64349","64350","64351","64352","64353","64354","64355","64356","64357","64358","64359","64360","64361","64362","64363","64364","64365","64366","64367","64368","64369","64370","64371","64372","64373","64374","64375","64376","64377","64378","64379","64380","64381","64382","64383","64384","64385","64386","64387","64388","64389","64390","64391","64392","64393","64394","64395","64396","64397","64398","64399","64400","64401","64402","64403","64404","64405","64406","64407","64408","64409","64410","64411","64412","64413","64414","64415","64416","64417","64418","64419","64420","64421","64422","64423","64424","64425","64426","64427","64428","64429","64430","64431","64432","64433","64467","64468","64469","64470","64471","64472","64473","64474","64475","64476","64477","64478","64479","64480","64481","64482","64483","64484","64485","64486","64487","64488","64489","64490","64491","64492","64493","64494","64495","64496","64497","64498","64499","64500","64501","64502","64503","64504","64505","64506","64507","64508","64509","64510","64511","64512","64513","64514","64515","64516","64517","64518","64519","64520","64521","64522","64523","64524","64525","64526","64527","64528","64529","64530","64531","64532","64533","64534","64535","64536","64537","64538","64539","64540","64541","64542","64543","64544","64545","64546","64547","64548","64549","64550","64551","64552","64553","64554","64555","64556","64557","64558","64559","64560","64561","64562","64563","64564","64565","64566","64567","64568","64569","64570","64571","64572","64573","64574","64575","64576","64577","64578","64579","64580","64581","64582","64583","64584","64585","64586","64587","64588","64589","64590","64591","64592","64593","64594","64595","64596","64597","64598","64599","64600","64601","64602","64603","64604","64605","64606","64607","64608","64609","64610","64611","64612","64613","64614","64615","64616","64617","64618","64619","64620","64621","64622","64623","64624","64625","64626","64627","64628","64629","64630","64631","64632","64633","64634","64635","64636","64637","64638","64639","64640","64641","64642","64643","64644","64645","64646","64647","64648","64649","64650","64651","64652","64653","64654","64655","64656","64657","64658","64659","64660","64661","64662","64663","64664","64665","64666","64667","64668","64669","64670","64671","64672","64673","64674","64675","64676","64677","64678","64679","64680","64681","64682","64683","64684","64685","64686","64687","64688","64689","64690","64691","64692","64693","64694","64695","64696","64697","64698","64699","64700","64701","64702","64703","64704","64705","64706","64707","64708","64709","64710","64711","64712","64713","64714","64715","64716","64717","64718","64719","64720","64721","64722","64723","64724","64725","64726","64727","64728","64729","64730","64731","64732","64733","64734","64735","64736","64737","64738","64739","64740","64741","64742","64743","64744","64745","64746","64747","64748","64749","64750","64751","64752","64753","64754","64755","64756","64757","64758","64759","64760","64761","64762","64763","64764","64765","64766","64767","64768","64769","64770","64771","64772","64773","64774","64775","64776","64777","64778","64779","64780","64781","64782","64783","64784","64785","64786","64787","64788","64789","64790","64791","64792","64793","64794","64795","64796","64797","64798","64799","64800","64801","64802","64803","64804","64805","64806","64807","64808","64809","64810","64811","64812","64813","64814","64815","64816","64817","64818","64819","64820","64821","64822","64823","64824","64825","64826","64827","64828","64829","64848","64849","64850","64851","64852","64853","64854","64855","64856","64857","64858","64859","64860","64861","64862","64863","64864","64865","64866","64867","64868","64869","64870","64871","64872","64873","64874","64875","64876","64877","64878","64879","64880","64881","64882","64883","64884","64885","64886","64887","64888","64889","64890","64891","64892","64893","64894","64895","64896","64897","64898","64899","64900","64901","64902","64903","64904","64905","64906","64907","64908","64909","64910","64911","64914","64915","64916","64917","64918","64919","64920","64921","64922","64923","64924","64925","64926","64927","64928","64929","64930","64931","64932","64933","64934","64935","64936","64937","64938","64939","64940","64941","64942","64943","64944","64945","64946","64947","64948","64949","64950","64951","64952","64953","64954","64955","64956","64957","64958","64959","64960","64961","64962","64963","64964","64965","64966","64967","65008","65009","65010","65011","65012","65013","65014","65015","65016","65017","65018","65019","65020","65024","65040","65041","65042","65043","65044","65045","65046","65047","65048","65049","65056","65057","65058","65059","65060","65061","65062","65063","65064","65065","65066","65067","65068","65069","65072","65073","65074","65075","65076","65077","65078","65079","65080","65081","65082","65083","65084","65085","65086","65087","65088","65089","65090","65091","65092","65095","65096","65097","65098","65099","65100","65101","65102","65103","65104","65105","65106","65108","65109","65110","65111","65112","65113","65114","65115","65116","65117","65118","65119","65120","65121","65122","65123","65124","65125","65126","65128","65129","65130","65131","65136","65137","65138","65140","65142","65143","65144","65145","65146","65147","65148","65149","65150","65151","65152","65153","65154","65155","65156","65157","65158","65159","65160","65161","65162","65163","65164","65165","65166","65167","65168","65169","65170","65171","65172","65173","65174","65175","65176","65177","65178","65179","65180","65181","65182","65183","65184","65185","65186","65187","65188","65189","65190","65191","65192","65193","65194","65195","65196","65197","65198","65199","65200","65201","65202","65203","65204","65205","65206","65207","65208","65209","65210","65211","65212","65213","65214","65215","65216","65217","65218","65219","65220","65221","65222","65223","65224","65225","65226","65227","65228","65229","65230","65231","65232","65233","65234","65235","65236","65237","65238","65239","65240","65241","65242","65243","65244","65245","65246","65247","65248","65249","65250","65251","65252","65253","65254","65255","65256","65257","65258","65259","65260","65261","65262","65263","65264","65265","65266","65267","65268","65269","65270","65271","65272","65273","65274","65275","65276","65280","65281","65282","65283","65284","65285","65286","65287","65288","65289","65290","65291","65292","65293","65294","65295","65296","65297","65298","65299","65300","65301","65302","65303","65304","65305","65306","65307","65308","65309","65310","65311","65312","65313","65314","65315","65316","65317","65318","65319","65320","65321","65322","65323","65324","65325","65326","65327","65328","65329","65330","65331","65332","65333","65334","65335","65336","65337","65338","65339","65340","65341","65342","65343","65344","65345","65346","65347","65348","65349","65350","65351","65352","65353","65354","65355","65356","65357","65358","65359","65360","65361","65362","65363","65364","65365","65366","65367","65368","65369","65370","65371","65372","65373","65374","65375","65376","65377","65378","65379","65380","65381","65382","65383","65384","65385","65386","65387","65388","65389","65390","65391","65392","65393","65394","65395","65396","65397","65398","65399","65400","65401","65402","65403","65404","65405","65406","65407","65408","65409","65410","65411","65412","65413","65414","65415","65416","65417","65418","65419","65420","65421","65422","65423","65424","65425","65426","65427","65428","65429","65430","65431","65432","65433","65434","65435","65436","65437","65438","65439","65440","65441","65442","65443","65444","65445","65446","65447","65448","65449","65450","65451","65452","65453","65454","65455","65456","65457","65458","65459","65460","65461","65462","65463","65464","65465","65466","65467","65468","65469","65470","65474","65475","65476","65477","65478","65479","65482","65483","65484","65485","65486","65487","65490","65491","65492","65493","65494","65495","65498","65499","65500","65504","65505","65506","65507","65508","65509","65510","65512","65513","65514","65515","65516","65517","65518","unorm","nfc","nfd","nfkc","nfkd","__WEBPACK_AMD_DEFINE_RESULT__","shimApplied","form","crypto","msCrypto","getRandomValues","ZERO_BUF","subtle","toBrowser","sha-1","sha-256","sha-384","sha-512","checks","browserPbkdf2","algo","importKey","then","deriveBits","Promise","promise","resolvePromise","resolve","prom","catch","checkNative","resp","pbkdf2","pbkdf2Sync","CipherBase","hashMode","_finalOrDigest","__final","_decoder","_encoding","inputEnc","outputEnc","outData","_toString","setAutoPadding","getAuthTag","setAuthTag","setAAD","fin","Sha384","Sha224","Sha1","rotl5","rotl30","ft","Sha","config","localStorage","warn","registerImmediate","html","channel","messagePrefix","onGlobalMessage","nextHandle","tasksByHandle","currentlyRunningATask","doc","attachTo","handle","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","MessageChannel","port1","port2","documentElement","onreadystatechange","addEventListener","attachEvent","task","clearImmediate","Timeout","clearFn","_id","_clearFn","setInterval","clearInterval","close","unref","ref","enroll","item","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","instance","Constructor","_classCallCheck","custom","Base","createHash","randomBytes","ENGLISH_WORDLIST","FRENCH_WORDLIST","ITALIAN_WORDLIST","JAPANESE_WORDLIST","SPANISH_WORDLIST","DEFAULT_WORDLIST","mnemonicToSeed","mnemonic","mnemonicBuffer","saltBuffer","mnemonicToEntropy","wordlist","lpad","dividerIndex","entropy","checksum","entropyBytes","bin","entropyBuffer","bits2","checksumBits","dividerIndex2","entropyToMnemonic","bytesToBinary","binary","CS","padString","mnemonicToSeedHex","generateMnemonic","strength","rng","validateMnemonic","wordlists","EN","JA","english","french","italian","japanese","spanish","bip39","accountFromMnemonicString","accountFromBase64","accountString","privateKeyToAddress","generateRandomBip39","accountFromPrivateKey","getAccountAtIndex","priv","pub","witnessesFromWitnessListBase64","witnesslist","witness","nodeid","getNodeid_asB64","setNodeid","getNodeid_asU8","getNodeid","PingMessage","to","getTo","setTo","clearTo","hasTo","PongMessage","echo","setEcho","getEcho","FindNeighbours","targetid","getTargetid_asB64","setTargetid","getTargetid_asU8","getTargetid","Neighbours","neighboursList","getNeighboursList","addNeighbours","setNeighboursList","clearNeighboursList","I","numRounds","setHMACKey","binLen","E","F","G","getHMAC","outputUpper","b64Pad","shakeLen","J","L","O","P","Q","R","__webpack_amd_options__","ERROR","WINDOW","JS_SHA3_NO_WINDOW","WEB_WORKER","JS_SHA3_NO_NODE_JS","node","COMMON_JS","JS_SHA3_NO_COMMON_JS","AMD","ARRAY_BUFFER","JS_SHA3_NO_ARRAY_BUFFER","HEX_CHARS","CSHAKE_PADDING","SHIFT","RC","BITS","SHAKE_BITS","OUTPUT_TYPES","CSHAKE_BYTEPAD","128","JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW","createOutputMethod","outputType","Keccak","createShakeOutputMethod","outputBits","createCshakeOutputMethod","methods","createKmacOutputMethod","createOutputMethods","createMethod","algorithms","bytepad","Kmac","methodNames","methodName","newMethodName","finalized","blockCount","byteCount","outputBlocks","extraBytes","notString","lastByteIndex","strs","paddingBytes","finalize","arrayBuffer","Uint32Array","c0","c4","c5","c6","c7","c8","c9","b10","b11","b12","b13","b14","b15","b16","b17","b18","b19","b20","b21","b22","b23","b24","b25","b26","b27","b28","b29","b30","b31","b32","b33","b34","b35","b36","b37","b38","b39","b40","b41","b42","b43","b44","b45","b46","b47","b48","b49","cachedProperty","parseBytes","Signature","sig","encodingLength","S","isPoint","_R","_S","_Rencoded","Rencoded","_Sencoded","Sencoded","decodeInt","decodePoint","encodePoint","encodeInt","toBytes","KeyPair","params","_secret","secret","_pub","_pubBytes","fromPublic","fromSecret","lastIx","privBytes","verify","getSecret","EDDSA","precompute","pointClass","point","keyFromSecret","hashInt","s_","makeSignature","keyFromPublic","SG","intFromLE","getY","getX","normed","xIsOdd","pointFromY","_importDER","initial","place","octetLen","rmPadding","constructLength","octets","slen","toDER","backHalf","_importPrivate","privEnc","_importPublic","pubEnc","fromPrivate","validate","isInfinity","compact","derive","HmacDRBG","predResist","minEntropy","_reseed","reseedInterval","V","entropyEnc","nonce","nonceEnc","pers","persEnc","seed","_hmac","kmac","reseed","addEnc","generate","temp","PresetCurve","nh","keyPair","drbg","ns2","_truncateToN","truncOnly","bkey","ns1","iter","kp","kpX","sinv","u1","u2","_maxwellTrick","jmulAdd","eqXToP","mulAdd","recoverPubKey","isYOdd","isSecondKey","pointFromX","rInv","s1","s2","getKeyRecoveryParam","Qprime","doubles","step","points","naf","inner","outer","Kh","Ah","Bh","Dh","Eh","rh","sh","SHA384","SHA224","sha1_K","SHA1","pre","defineCurve","gRed","beta","lambda","basis","EdwardsCurve","conf","twisted","mOneA","dd","oneC","Point","BasePoint","zOne","_mulA","_mulC","jpoint","rhs","lhs","y2","pointFromJSON","fromJSON","_extDbl","nx","ny","nt","nz","_projDbl","two","dbl","_extAdd","_projAdd","_hasDoubles","_fixedNafMul","_wnafMul","k1","k2","_wnafMulAdd","zi","other","xc","redN","toP","mixedAdd","MontCurve","i4","a24","_encode","aa","bb","diffAdd","da","jumlAdd","ShortCurve","tinv","zeroA","threeA","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","isRed","inf","JPoint","betas","_getEndoRoots","lambdas","vec","_getEndoBasis","ntinv","prevR","aprxSqrt","y1","len1","_endoSplit","v1","v2","p1","p2","q1","q2","ax","_endoWnafMulAdd","coeffs","jacobianResult","npoints","ncoeffs","_getBeta","precomputed","endoMul","parse","obj2point","ys1","dyinv","_precompute","negate","toJ","zinv","zinv2","ay","pz2","z2","h2","h3","dblp","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","yyyy8","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","zs","getNAF","getJSF","BaseCurve","_wnafT1","_wnafT2","_wnafT3","_wnafT4","adjustCount","_getDoubles","repr","nafW","nafPoints","_getNAFPoints","defW","wndWidth","comb","jsf","ja","jb","encodeCompressed","power","Rand","_rand","getBytes","getByte","minAssert","minUtils","d1","d2","m8","m14","m24","computer","big5","euc-kr","gb18030","gb18030-ranges","jis0208","jis0212","ibm866","iso-8859-2","iso-8859-3","iso-8859-4","iso-8859-5","iso-8859-6","iso-8859-7","iso-8859-8","iso-8859-10","iso-8859-13","iso-8859-14","iso-8859-15","iso-8859-16","koi8-r","koi8-u","macintosh","windows-874","windows-1250","windows-1251","windows-1252","windows-1253","windows-1254","windows-1255","windows-1256","windows-1257","windows-1258","x-mac-cyrillic","inRange","ToDictionary","isASCIIByte","isASCIICodePoint","end_of_stream","tokens","endOfStream","prepend","token","decoderError","fatal","opt_code_point","encoderError","code_point","getEncoding","label","label_to_encoding","encodings","labels","heading","category","shift_jis_index","big5_index_no_hkscs","encoders","decoders","indexCodePointFor","pointer","indexPointerFor","DEFAULT_ENCODING","_ignoreBOM","_BOMseen","_error_mode","_do_not_flush","Boolean","ignoreBOM","TextEncoder","_encoder","_fatal","GB18030Decoder","gb18030_first","gb18030_second","gb18030_third","bite","code_point_offset","idx","indexGB18030RangesCodePointFor","lead","GB18030Encoder","gbk_flag","trail","pointer_offset","indexGB18030RangesPointerFor","byte1","byte2","byte3","Big5Encoder","index_","indexBig5PointerFor","ShiftJISEncoder","indexShiftJISPointerFor","convertCodeUnitToBytes","code_unit","utf16be","UTF16Decoder","utf16_be","utf16_lead_byte","utf16_lead_surrogate","lead_surrogate","UTF16Encoder","input_stream","code_points","codePointsToString","opt_string","stringToCodePoints","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","Big5_lead","eucjp_jis0212_flag","eucjp_lead","states","iso2022jp_state","iso2022jp_decoder_state","iso2022jp_decoder_output_state","iso2022jp_lead","iso2022jp_output_flag","output_flag","Shift_JIS_lead","lead_offset","euckr_lead","EncodingIndexes","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","lens","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","parts","len2","encodeChunk","lookup","formatRegExp","format","objects","noDeprecation","throwDeprecation","traceDeprecation","debugEnviron","debugs","opts","seen","stylize","stylizeNoColor","depth","colors","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","primitive","simple","formatPrimitive","visibleKeys","arrayToHash","getOwnPropertyNames","formatError","braces","toUTCString","formatProperty","formatArray","cur","numLinesEst","reduceToSingleString","desc","line","pad","NODE_DEBUG","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","yellow","special","boolean","null","date","regexp","months","prop","time","getHours","getMinutes","getSeconds","getDate","getMonth","origin","hasOwn","pSlice","functionsHaveNames","pToString","arrbuf","DataView","ok","regex","func","something","rawname","expected","operator","stackStartFunction","_deepEqual","strict","memos","getTime","multiline","lastIndex","ignoreCase","Float32Array","Float64Array","actualIndex","actualVisitedObjects","aIsArgs","isArguments","bIsArgs","ka","kb","objEquiv","expectedException","isPrototypeOf","_throws","shouldThrow","_tryBlock","userProvidedMessage","isUnwantedException","isUnexpectedException","generatedMessage","fn_name","next_line","notEqual","deepEqual","deepStrictEqual","notDeepEqual","notDeepStrictEqual","strictEqual","notStrictEqual","throws","doesNotThrow","ifError","Transfer","_callee","nowBlock","latestBlock","latestBlockHash","latestBlockNum","numBytes","generateBlockId","regeneratorRuntime","_context","parentHash","_toConsumableArray","abrupt","stop","createTransaction","contractType","typeName","anyValue","contract","addRef","transactionFromBase64","transactionString","transactionListFromBase64","transactionListString","createUnsignedTransferTransaction","props","sender","recipient","createUnsignedAssetIssueTransaction","assetAbbr","frozenSupply","createUnsignedFreezeBalanceTransaction","duration","createUnsignedUnfreezeBalanceTransaction","createUnsignedTransferAssetTransaction","createUnsignedVoteWitnessTransaction","votes","vote","createUnsignedWitnessCreateTransaction","createUnsignedWitnessUpdateTransaction","createUnsignedParticipateAssetIssueTransaction","getTransactionHash","_ref","unknown","wordList__WEBPACK_IMPORTED_MODULE_1__","status","tron_http_tools__WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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G,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,GAAI,GAClD,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EACnD,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,GAClD,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EACnD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,IAGhDC,GACF,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAClD,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,EACnD,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAClD,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAClD,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,IAGhDC,GACF,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EACrD,EAAG,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,GAAI,GACpD,GAAI,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EACrD,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,GACpD,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,GAGnDC,GACF,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,EACrD,EAAG,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GACpD,EAAG,EAAG,GAAI,GAAI,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,GAAI,EAAG,EACrD,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EACrD,EAAG,EAAG,GAAI,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,GAAI,EAAG,EAAG,GAAI,GAAI,GAAI,IAGlD9C,GAAM,EAAY,WAAY,WAAY,WAAY,YACtD+C,GAAM,WAAY,WAAY,WAAY,WAAY,GAE1D,SAASC,IACPP,EAAStgF,KAAK2D,KAAM,IAGpBA,KAAK+7E,GAAK,WACV/7E,KAAKg8E,GAAK,WACVh8E,KAAKi8E,GAAK,WACVj8E,KAAKk8E,GAAK,UACVl8E,KAAKm8E,GAAK,WAwFZ,SAASgB,EAAM/sE,EAAGjT,GAChB,OAAQiT,GAAKjT,EAAMiT,IAAO,GAAKjT,EAGjC,SAASigF,EAAK56E,EAAGH,EAAG9F,EAAGC,EAAG2D,EAAG7D,EAAG4F,EAAGxE,GACjC,OAAQy/E,EAAM36E,GAAKH,EAAI9F,EAAIC,GAAKF,EAAI4F,EAAK,EAAGxE,GAAKyC,EAAK,EAGxD,SAASk9E,EAAK76E,EAAGH,EAAG9F,EAAGC,EAAG2D,EAAG7D,EAAG4F,EAAGxE,GACjC,OAAQy/E,EAAM36E,GAAMH,EAAI9F,GAAQ8F,EAAK7F,GAAMF,EAAI4F,EAAK,EAAGxE,GAAKyC,EAAK,EAGnE,SAASm9E,EAAK96E,EAAGH,EAAG9F,EAAGC,EAAG2D,EAAG7D,EAAG4F,EAAGxE,GACjC,OAAQy/E,EAAM36E,IAAMH,GAAM9F,GAAMC,GAAKF,EAAI4F,EAAK,EAAGxE,GAAKyC,EAAK,EAG7D,SAASo9E,EAAK/6E,EAAGH,EAAG9F,EAAGC,EAAG2D,EAAG7D,EAAG4F,EAAGxE,GACjC,OAAQy/E,EAAM36E,GAAMH,EAAI7F,EAAMD,GAAMC,GAAOF,EAAI4F,EAAK,EAAGxE,GAAKyC,EAAK,EAGnE,SAASq9E,EAAKh7E,EAAGH,EAAG9F,EAAGC,EAAG2D,EAAG7D,EAAG4F,EAAGxE,GACjC,OAAQy/E,EAAM36E,GAAKH,GAAK9F,GAAMC,IAAOF,EAAI4F,EAAK,EAAGxE,GAAKyC,EAAK,EA1G7DI,EAAS28E,EAAWP,GAEpBO,EAAU3/E,UAAUutB,QAAU,WAE5B,IADA,IAAInmB,EAAQi4E,EACH72E,EAAI,EAAGA,EAAI,KAAMA,EAAGpB,EAAMoB,GAAK/F,KAAKqqB,OAAOvG,YAAgB,EAAJ/d,GAehE,IAbA,IAAIhD,EAAe,EAAV/C,KAAK+7E,GACV74E,EAAe,EAAVlD,KAAKg8E,GACV14E,EAAe,EAAVtD,KAAKi8E,GACVz4E,EAAe,EAAVxD,KAAKk8E,GACVr4E,EAAe,EAAV7D,KAAKm8E,GAEVsB,EAAe,EAAVz9E,KAAK+7E,GACV2B,EAAe,EAAV19E,KAAKg8E,GACV2B,EAAe,EAAV39E,KAAKi8E,GACV2B,EAAe,EAAV59E,KAAKk8E,GACVzK,EAAe,EAAVzxE,KAAKm8E,GAGLjgF,EAAI,EAAGA,EAAI,GAAIA,GAAK,EAAG,CAC9B,IAAI2hF,EACAC,EACA5hF,EAAI,IACN2hF,EAAKT,EAAIr6E,EAAIG,EAAII,EAAIE,EAAIK,EAAIc,EAAMk4E,EAAG3gF,IAAKg+E,EAAG,GAAI6C,EAAG7gF,IACrD4hF,EAAKN,EAAIC,EAAIC,EAAIC,EAAIC,EAAInM,EAAI9sE,EAAMm4E,EAAG5gF,IAAK+gF,EAAG,GAAID,EAAG9gF,KAC5CA,EAAI,IACb2hF,EAAKR,EAAIt6E,EAAIG,EAAII,EAAIE,EAAIK,EAAIc,EAAMk4E,EAAG3gF,IAAKg+E,EAAG,GAAI6C,EAAG7gF,IACrD4hF,EAAKP,EAAIE,EAAIC,EAAIC,EAAIC,EAAInM,EAAI9sE,EAAMm4E,EAAG5gF,IAAK+gF,EAAG,GAAID,EAAG9gF,KAC5CA,EAAI,IACb2hF,EAAKP,EAAIv6E,EAAIG,EAAII,EAAIE,EAAIK,EAAIc,EAAMk4E,EAAG3gF,IAAKg+E,EAAG,GAAI6C,EAAG7gF,IACrD4hF,EAAKR,EAAIG,EAAIC,EAAIC,EAAIC,EAAInM,EAAI9sE,EAAMm4E,EAAG5gF,IAAK+gF,EAAG,GAAID,EAAG9gF,KAC5CA,EAAI,IACb2hF,EAAKN,EAAIx6E,EAAIG,EAAII,EAAIE,EAAIK,EAAIc,EAAMk4E,EAAG3gF,IAAKg+E,EAAG,GAAI6C,EAAG7gF,IACrD4hF,EAAKT,EAAII,EAAIC,EAAIC,EAAIC,EAAInM,EAAI9sE,EAAMm4E,EAAG5gF,IAAK+gF,EAAG,GAAID,EAAG9gF,MAErD2hF,EAAKL,EAAIz6E,EAAIG,EAAII,EAAIE,EAAIK,EAAIc,EAAMk4E,EAAG3gF,IAAKg+E,EAAG,GAAI6C,EAAG7gF,IACrD4hF,EAAKV,EAAIK,EAAIC,EAAIC,EAAIC,EAAInM,EAAI9sE,EAAMm4E,EAAG5gF,IAAK+gF,EAAG,GAAID,EAAG9gF,KAGvD6G,EAAKc,EACLA,EAAKL,EACLA,EAAK25E,EAAK75E,EAAI,IACdA,EAAKJ,EACLA,EAAK26E,EAELJ,EAAKhM,EACLA,EAAKmM,EACLA,EAAKT,EAAKQ,EAAI,IACdA,EAAKD,EACLA,EAAKI,EAIP,IAAIn1E,EAAK3I,KAAKg8E,GAAK14E,EAAKs6E,EAAM,EAC9B59E,KAAKg8E,GAAMh8E,KAAKi8E,GAAKz4E,EAAKiuE,EAAM,EAChCzxE,KAAKi8E,GAAMj8E,KAAKk8E,GAAKr4E,EAAK45E,EAAM,EAChCz9E,KAAKk8E,GAAMl8E,KAAKm8E,GAAKp5E,EAAK26E,EAAM,EAChC19E,KAAKm8E,GAAMn8E,KAAK+7E,GAAK74E,EAAKy6E,EAAM,EAChC39E,KAAK+7E,GAAKpzE,GAGZu0E,EAAU3/E,UAAU8qE,QAAU,WAE5BroE,KAAKqqB,OAAOrqB,KAAK+9E,gBAAkB,IAC/B/9E,KAAK+9E,aAAe,KACtB/9E,KAAKqqB,OAAOnrB,KAAK,EAAGc,KAAK+9E,aAAc,IACvC/9E,KAAK8qB,UACL9qB,KAAK+9E,aAAe,GAGtB/9E,KAAKqqB,OAAOnrB,KAAK,EAAGc,KAAK+9E,aAAc,IACvC/9E,KAAKqqB,OAAO3F,cAAc1kB,KAAKg+E,QAAQ,GAAI,IAC3Ch+E,KAAKqqB,OAAO3F,cAAc1kB,KAAKg+E,QAAQ,GAAI,IAC3Ch+E,KAAK8qB,UAGL,IAAI5sB,EAASC,EAAOU,MAAQV,EAAOU,MAAM,IAAM,IAAIV,EAAO,IAM1D,OALAD,EAAOgnB,aAAallB,KAAK+7E,GAAI,GAC7B79E,EAAOgnB,aAAallB,KAAKg8E,GAAI,GAC7B99E,EAAOgnB,aAAallB,KAAKi8E,GAAI,GAC7B/9E,EAAOgnB,aAAallB,KAAKk8E,GAAI,IAC7Bh+E,EAAOgnB,aAAallB,KAAKm8E,GAAI,IACtBj+E,GA2BTjC,EAAOD,QAAUkhF,gCCjGjBjhF,EAAOD,QAAUq4E,EAEjB,IAAIvrD,EAAShtB,EAAQ,GAGjBitB,EAAOjtB,EAAQ,IA+BnB,SAASu4E,EAAUjrD,GACjB,KAAMppB,gBAAgBq0E,GAAY,OAAO,IAAIA,EAAUjrD,GAEvDN,EAAOzsB,KAAK2D,KAAMopB,GAElBppB,KAAKi+E,iBACHC,eA/BJ,SAAwBzM,EAAIz0D,GAC1B,IAAImhE,EAAKn+E,KAAKi+E,gBACdE,EAAGC,cAAe,EAElB,IAAIp0D,EAAKm0D,EAAGzM,QAEZ,IAAK1nD,EACH,OAAOhqB,KAAKmoB,KAAK,QAAS,IAAI9jB,MAAM,yCAGtC85E,EAAGE,WAAa,KAChBF,EAAGzM,QAAU,KAED,MAAR10D,GACFhd,KAAKqB,KAAK2b,GAEZgN,EAAGynD,GAEH,IAAI6M,EAAKt+E,KAAK4pB,eACd00D,EAAGC,SAAU,GACTD,EAAGE,cAAgBF,EAAG3/E,OAAS2/E,EAAG30D,gBACpC3pB,KAAKy+E,MAAMH,EAAG30D,gBAUiBqvB,KAAKh5C,MACpC0+E,eAAe,EACfN,cAAc,EACd1M,QAAS,KACT2M,WAAY,KACZM,cAAe,MAIjB3+E,KAAK4pB,eAAe40D,cAAe,EAKnCx+E,KAAK4pB,eAAe0nD,MAAO,EAEvBloD,IAC+B,oBAAtBA,EAAQjY,YAA0BnR,KAAK4+E,WAAax1D,EAAQjY,WAE1C,oBAAlBiY,EAAQy1D,QAAsB7+E,KAAK8+E,OAAS11D,EAAQy1D,QAIjE7+E,KAAK8nB,GAAG,YAAaurD,GAGvB,SAASA,IACP,IAAIhE,EAAQrvE,KAEe,oBAAhBA,KAAK8+E,OACd9+E,KAAK8+E,OAAO,SAAUrN,EAAIz0D,GACxByvB,EAAK4iC,EAAOoC,EAAIz0D,KAGlByvB,EAAKzsC,KAAM,KAAM,MA2DrB,SAASysC,EAAK4jC,EAAQoB,EAAIz0D,GACxB,GAAIy0D,EAAI,OAAOpB,EAAOloD,KAAK,QAASspD,GAOpC,GALY,MAARz0D,GACFqzD,EAAOhvE,KAAK2b,GAIVqzD,EAAO7mD,eAAe7qB,OAAQ,MAAM,IAAI0F,MAAM,8CAElD,GAAIgsE,EAAO4N,gBAAgBG,aAAc,MAAM,IAAI/5E,MAAM,kDAEzD,OAAOgsE,EAAOhvE,KAAK,MA7IrB0nB,EAAKxoB,SAAWzE,EAAQ,GAGxBitB,EAAKxoB,SAAS8zE,EAAWvrD,GAuEzBurD,EAAU92E,UAAU8D,KAAO,SAAUyxE,EAAO3zE,GAE1C,OADAa,KAAKi+E,gBAAgBS,eAAgB,EAC9B51D,EAAOvrB,UAAU8D,KAAKhF,KAAK2D,KAAM8yE,EAAO3zE,IAajDk1E,EAAU92E,UAAUqhF,WAAa,SAAU9L,EAAO3zE,EAAU6qB,GAC1D,MAAM,IAAI3lB,MAAM,oCAGlBgwE,EAAU92E,UAAUg1E,OAAS,SAAUO,EAAO3zE,EAAU6qB,GACtD,IAAIm0D,EAAKn+E,KAAKi+E,gBAId,GAHAE,EAAGzM,QAAU1nD,EACbm0D,EAAGE,WAAavL,EAChBqL,EAAGQ,cAAgBx/E,GACdg/E,EAAGC,aAAc,CACpB,IAAIE,EAAKt+E,KAAK4pB,gBACVu0D,EAAGO,eAAiBJ,EAAGE,cAAgBF,EAAG3/E,OAAS2/E,EAAG30D,gBAAe3pB,KAAKy+E,MAAMH,EAAG30D,iBAO3F0qD,EAAU92E,UAAUkhF,MAAQ,SAAUthF,GACpC,IAAIghF,EAAKn+E,KAAKi+E,gBAEQ,OAAlBE,EAAGE,YAAuBF,EAAGzM,UAAYyM,EAAGC,cAC9CD,EAAGC,cAAe,EAClBp+E,KAAK4+E,WAAWT,EAAGE,WAAYF,EAAGQ,cAAeR,EAAGD,iBAIpDC,EAAGO,eAAgB,GAIvBrK,EAAU92E,UAAUusB,SAAW,SAAUC,EAAKC,GAC5C,IAAI+0D,EAAS/+E,KAEb8oB,EAAOvrB,UAAUusB,SAASztB,KAAK2D,KAAM+pB,EAAK,SAAUi1D,GAClDh1D,EAAGg1D,GACHD,EAAO52D,KAAK,0CChMhB,IAAIQ,EAAM7sB,EAAQ,IA8DlB,SAASmjF,EAAY/3E,EAAM6iB,GACzB7iB,EAAKihB,KAAK,QAAS4B,GAGrB9tB,EAAOD,SACL02E,QA/DF,SAAiB3oD,EAAKC,GACpB,IAAIqlD,EAAQrvE,KAERk/E,EAAoBl/E,KAAK4pB,gBAAkB5pB,KAAK4pB,eAAeC,UAC/Ds1D,EAAoBn/E,KAAKwpB,gBAAkBxpB,KAAKwpB,eAAeK,UAEnE,OAAIq1D,GAAqBC,GACnBn1D,EACFA,EAAGD,IACMA,GAAS/pB,KAAKwpB,gBAAmBxpB,KAAKwpB,eAAesoD,cAC9DnpD,EAAIpB,SAAS03D,EAAaj/E,KAAM+pB,GAE3B/pB,OAMLA,KAAK4pB,iBACP5pB,KAAK4pB,eAAeC,WAAY,GAI9B7pB,KAAKwpB,iBACPxpB,KAAKwpB,eAAeK,WAAY,GAGlC7pB,KAAK8pB,SAASC,GAAO,KAAM,SAAUA,IAC9BC,GAAMD,GACTpB,EAAIpB,SAAS03D,EAAa5P,EAAOtlD,GAC7BslD,EAAM7lD,iBACR6lD,EAAM7lD,eAAesoD,cAAe,IAE7B9nD,GACTA,EAAGD,KAIA/pB,OA0BPo0E,UAvBF,WACMp0E,KAAK4pB,iBACP5pB,KAAK4pB,eAAeC,WAAY,EAChC7pB,KAAK4pB,eAAe20D,SAAU,EAC9Bv+E,KAAK4pB,eAAeH,OAAQ,EAC5BzpB,KAAK4pB,eAAew1D,YAAa,GAG/Bp/E,KAAKwpB,iBACPxpB,KAAKwpB,eAAeK,WAAY,EAChC7pB,KAAKwpB,eAAeC,OAAQ,EAC5BzpB,KAAKwpB,eAAeunD,QAAS,EAC7B/wE,KAAKwpB,eAAewnD,UAAW,EAC/BhxE,KAAKwpB,eAAesoD,cAAe,sBC9DvC71E,EAAOD,QAAUF,EAAQ,IAAUy4E,4CCAnC,SAAA/4D,EAAA4K,GAyBA,IAAIuC,EAAM7sB,EAAQ,IAGlBG,EAAOD,QAAUgtB,EAGjB,IAIIF,EAJA7nB,EAAUnF,EAAQ,IAOtBktB,EAASq2D,cAAgBA,EAGhBvjF,EAAQ,IAAUy4E,aAA3B,IAEI+K,EAAkB,SAAUhK,EAASv4D,GACvC,OAAOu4D,EAAQhtD,UAAUvL,GAAMpe,QAK7BqxE,EAASl0E,EAAQ,IAKjBqC,EAASrC,EAAQ,GAAeqC,OAChC8xE,EAAgBz0D,EAAOQ,YAAc,aAWzC,IAAI+M,EAAOjtB,EAAQ,IACnBitB,EAAKxoB,SAAWzE,EAAQ,GAIxB,IAAIyjF,EAAYzjF,EAAQ,IACpB+/C,OAAQ,EAEVA,EADE0jC,GAAaA,EAAUC,SACjBD,EAAUC,SAAS,UAEnB,aAIV,IAEI5R,EAFA6R,EAAa3jF,EAAQ,IACrBq0E,EAAcr0E,EAAQ,IAG1BitB,EAAKxoB,SAASyoB,EAAUgnD,GAExB,IAAI0P,GAAgB,QAAS,QAAS,UAAW,QAAS,UAc1D,SAASL,EAAcj2D,EAASinD,GAC9BvnD,EAASA,GAAUhtB,EAAQ,GAE3BstB,EAAUA,MAOV,IAAIknD,EAAWD,aAAkBvnD,EAIjC9oB,KAAKuwE,aAAennD,EAAQmnD,WAExBD,IAAUtwE,KAAKuwE,WAAavwE,KAAKuwE,cAAgBnnD,EAAQu2D,oBAI7D,IAAIlP,EAAMrnD,EAAQO,cACdi2D,EAAcx2D,EAAQy2D,sBACtBjP,EAAa5wE,KAAKuwE,WAAa,GAAK,MAElBvwE,KAAK2pB,cAAvB8mD,GAAe,IAARA,EAAgCA,EAAaH,IAAasP,GAA+B,IAAhBA,GAAyCA,EAAsChP,EAGnK5wE,KAAK2pB,cAAgB1kB,KAAKsf,MAAMvkB,KAAK2pB,eAKrC3pB,KAAK9B,OAAS,IAAIuhF,EAClBz/E,KAAKrB,OAAS,EACdqB,KAAK8/E,MAAQ,KACb9/E,KAAK+/E,WAAa,EAClB//E,KAAKggF,QAAU,KACfhgF,KAAKypB,OAAQ,EACbzpB,KAAKo/E,YAAa,EAClBp/E,KAAKu+E,SAAU,EAMfv+E,KAAKsxE,MAAO,EAIZtxE,KAAKw+E,cAAe,EACpBx+E,KAAKigF,iBAAkB,EACvBjgF,KAAKkgF,mBAAoB,EACzBlgF,KAAKmgF,iBAAkB,EAGvBngF,KAAK6pB,WAAY,EAKjB7pB,KAAKmxE,gBAAkB/nD,EAAQ+nD,iBAAmB,OAGlDnxE,KAAKogF,WAAa,EAGlBpgF,KAAKqgF,aAAc,EAEnBrgF,KAAKirC,QAAU,KACfjrC,KAAKb,SAAW,KACZiqB,EAAQjqB,WACLyuE,IAAeA,EAAgB9xE,EAAQ,IAAmB8xE,eAC/D5tE,KAAKirC,QAAU,IAAI2iC,EAAcxkD,EAAQjqB,UACzCa,KAAKb,SAAWiqB,EAAQjqB,UAI5B,SAAS6pB,EAASI,GAGhB,GAFAN,EAASA,GAAUhtB,EAAQ,KAErBkE,gBAAgBgpB,GAAW,OAAO,IAAIA,EAASI,GAErDppB,KAAK4pB,eAAiB,IAAIy1D,EAAcj2D,EAASppB,MAGjDA,KAAKqpB,UAAW,EAEZD,IAC0B,oBAAjBA,EAAQhL,OAAqBpe,KAAKy+E,MAAQr1D,EAAQhL,MAE9B,oBAApBgL,EAAQspD,UAAwB1yE,KAAK8pB,SAAWV,EAAQspD,UAGrE1C,EAAO3zE,KAAK2D,MA2Dd,SAASsgF,EAAiBjQ,EAAQyC,EAAO3zE,EAAUohF,EAAYC,GAC7D,IAKM/O,EALFrC,EAAQiB,EAAOzmD,eACL,OAAVkpD,GACF1D,EAAMmP,SAAU,EA0NpB,SAAoBlO,EAAQjB,GAC1B,GAAIA,EAAM3lD,MAAO,OACjB,GAAI2lD,EAAMnkC,QAAS,CACjB,IAAI6nC,EAAQ1D,EAAMnkC,QAAQjpC,MACtB8wE,GAASA,EAAMn0E,SACjBywE,EAAMlxE,OAAOmD,KAAKyxE,GAClB1D,EAAMzwE,QAAUywE,EAAMmB,WAAa,EAAIuC,EAAMn0E,QAGjDywE,EAAM3lD,OAAQ,EAGdg3D,EAAapQ,GArOXqQ,CAAWrQ,EAAQjB,KAGdoR,IAAgB/O,EA2CzB,SAAsBrC,EAAO0D,GAC3B,IAAIrB,EApPiB70D,EAqPFk2D,EApPZ30E,EAAO0e,SAASD,IAAQA,aAAeqzD,GAoPA,kBAAV6C,QAAgCzzE,IAAVyzE,GAAwB1D,EAAMmB,aACtFkB,EAAK,IAAIzyE,UAAU,oCAtPvB,IAAuB4d,EAwPrB,OAAO60D,EAhDqBkP,CAAavR,EAAO0D,IAC1CrB,EACFpB,EAAOloD,KAAK,QAASspD,GACZrC,EAAMmB,YAAcuC,GAASA,EAAMn0E,OAAS,GAChC,kBAAVm0E,GAAuB1D,EAAMmB,YAAc3zE,OAAOgkF,eAAe9N,KAAW30E,EAAOZ,YAC5Fu1E,EAhNR,SAA6BA,GAC3B,OAAO30E,EAAOS,KAAKk0E,GA+MLU,CAAoBV,IAG1ByN,EACEnR,EAAMgQ,WAAY/O,EAAOloD,KAAK,QAAS,IAAI9jB,MAAM,qCAA0Cw8E,EAASxQ,EAAQjB,EAAO0D,GAAO,GACrH1D,EAAM3lD,MACf4mD,EAAOloD,KAAK,QAAS,IAAI9jB,MAAM,6BAE/B+qE,EAAMmP,SAAU,EACZnP,EAAMnkC,UAAY9rC,GACpB2zE,EAAQ1D,EAAMnkC,QAAQvuB,MAAMo2D,GACxB1D,EAAMmB,YAA+B,IAAjBuC,EAAMn0E,OAAckiF,EAASxQ,EAAQjB,EAAO0D,GAAO,GAAYgO,EAAczQ,EAAQjB,IAE7GyR,EAASxQ,EAAQjB,EAAO0D,GAAO,KAGzByN,IACVnR,EAAMmP,SAAU,IAIpB,OAgCF,SAAsBnP,GACpB,OAAQA,EAAM3lD,QAAU2lD,EAAMoP,cAAgBpP,EAAMzwE,OAASywE,EAAMzlD,eAAkC,IAAjBylD,EAAMzwE,QAjCnFoiF,CAAa3R,GAGtB,SAASyR,EAASxQ,EAAQjB,EAAO0D,EAAOyN,GAClCnR,EAAM4Q,SAA4B,IAAjB5Q,EAAMzwE,SAAiBywE,EAAMkC,MAChDjB,EAAOloD,KAAK,OAAQ2qD,GACpBzC,EAAOjyD,KAAK,KAGZgxD,EAAMzwE,QAAUywE,EAAMmB,WAAa,EAAIuC,EAAMn0E,OACzC4hF,EAAYnR,EAAMlxE,OAAOg7C,QAAQ45B,GAAY1D,EAAMlxE,OAAOmD,KAAKyxE,GAE/D1D,EAAMoP,cAAciC,EAAapQ,IAEvCyQ,EAAczQ,EAAQjB,GAvGxBxyE,OAAOC,eAAemsB,EAASzrB,UAAW,aACxCP,IAAK,WACH,YAA4BqC,IAAxBW,KAAK4pB,gBAGF5pB,KAAK4pB,eAAeC,WAE7BpE,IAAK,SAAUvoB,GAGR8C,KAAK4pB,iBAMV5pB,KAAK4pB,eAAeC,UAAY3sB,MAIpC8rB,EAASzrB,UAAUm1E,QAAUvC,EAAYuC,QACzC1pD,EAASzrB,UAAU42E,WAAahE,EAAYiE,UAC5CprD,EAASzrB,UAAUusB,SAAW,SAAUC,EAAKC,GAC3ChqB,KAAKqB,KAAK,MACV2oB,EAAGD,IAOLf,EAASzrB,UAAU8D,KAAO,SAAUyxE,EAAO3zE,GACzC,IACIqhF,EADApR,EAAQpvE,KAAK4pB,eAgBjB,OAbKwlD,EAAMmB,WAUTiQ,GAAiB,EATI,kBAAV1N,KACT3zE,EAAWA,GAAYiwE,EAAM+B,mBACZ/B,EAAMjwE,WACrB2zE,EAAQ30E,EAAOS,KAAKk0E,EAAO3zE,GAC3BA,EAAW,IAEbqhF,GAAiB,GAMdF,EAAiBtgF,KAAM8yE,EAAO3zE,GAAU,EAAOqhF,IAIxDx3D,EAASzrB,UAAU27C,QAAU,SAAU45B,GACrC,OAAOwN,EAAiBtgF,KAAM8yE,EAAO,MAAM,GAAM,IAwEnD9pD,EAASzrB,UAAUyjF,SAAW,WAC5B,OAAuC,IAAhChhF,KAAK4pB,eAAeo2D,SAI7Bh3D,EAASzrB,UAAU0jF,YAAc,SAAUlgF,GAIzC,OAHK6sE,IAAeA,EAAgB9xE,EAAQ,IAAmB8xE,eAC/D5tE,KAAK4pB,eAAeqhB,QAAU,IAAI2iC,EAAc7sE,GAChDf,KAAK4pB,eAAezqB,SAAW4B,EACxBf,MAIT,IAAIkhF,EAAU,QAoBd,SAASC,EAAchkF,EAAGiyE,GACxB,OAAIjyE,GAAK,GAAsB,IAAjBiyE,EAAMzwE,QAAgBywE,EAAM3lD,MAAc,EACpD2lD,EAAMmB,WAAmB,EACzBpzE,IAAMA,EAEJiyE,EAAM4Q,SAAW5Q,EAAMzwE,OAAeywE,EAAMlxE,OAAOswC,KAAKxxB,KAAKre,OAAmBywE,EAAMzwE,QAGxFxB,EAAIiyE,EAAMzlD,gBAAeylD,EAAMzlD,cA3BrC,SAAiCxsB,GAc/B,OAbIA,GAAK+jF,EACP/jF,EAAI+jF,GAIJ/jF,IACAA,GAAKA,IAAM,EACXA,GAAKA,IAAM,EACXA,GAAKA,IAAM,EACXA,GAAKA,IAAM,EACXA,GAAKA,IAAM,GACXA,KAEKA,EAa4CikF,CAAwBjkF,IACvEA,GAAKiyE,EAAMzwE,OAAexB,EAEzBiyE,EAAM3lD,MAIJ2lD,EAAMzwE,QAHXywE,EAAMoP,cAAe,EACd,IA4HX,SAASiC,EAAapQ,GACpB,IAAIjB,EAAQiB,EAAOzmD,eACnBwlD,EAAMoP,cAAe,EAChBpP,EAAM6Q,kBACTpkC,EAAM,eAAgBuzB,EAAM4Q,SAC5B5Q,EAAM6Q,iBAAkB,EACpB7Q,EAAMkC,KAAM3oD,EAAIpB,SAAS85D,EAAehR,GAAagR,EAAchR,IAI3E,SAASgR,EAAchR,GACrBx0B,EAAM,iBACNw0B,EAAOloD,KAAK,YACZm5D,EAAKjR,GASP,SAASyQ,EAAczQ,EAAQjB,GACxBA,EAAMiR,cACTjR,EAAMiR,aAAc,EACpB13D,EAAIpB,SAASg6D,EAAgBlR,EAAQjB,IAIzC,SAASmS,EAAelR,EAAQjB,GAE9B,IADA,IAAIntE,EAAMmtE,EAAMzwE,QACRywE,EAAMmP,UAAYnP,EAAM4Q,UAAY5Q,EAAM3lD,OAAS2lD,EAAMzwE,OAASywE,EAAMzlD,gBAC9EkyB,EAAM,wBACNw0B,EAAOjyD,KAAK,GACRnc,IAAQmtE,EAAMzwE,SAELsD,EAAMmtE,EAAMzwE,OAE3BywE,EAAMiR,aAAc,EAyOtB,SAASmB,EAAiBt6E,GACxB20C,EAAM,4BACN30C,EAAKkX,KAAK,GAsBZ,SAASqjE,EAAQpR,EAAQjB,GAClBA,EAAMmP,UACT1iC,EAAM,iBACNw0B,EAAOjyD,KAAK,IAGdgxD,EAAM+Q,iBAAkB,EACxB/Q,EAAMgR,WAAa,EACnB/P,EAAOloD,KAAK,UACZm5D,EAAKjR,GACDjB,EAAM4Q,UAAY5Q,EAAMmP,SAASlO,EAAOjyD,KAAK,GAanD,SAASkjE,EAAKjR,GACZ,IAAIjB,EAAQiB,EAAOzmD,eAEnB,IADAiyB,EAAM,OAAQuzB,EAAM4Q,SACb5Q,EAAM4Q,SAA6B,OAAlB3P,EAAOjyD,UAmFjC,SAASsjE,EAASvkF,EAAGiyE,GAEnB,OAAqB,IAAjBA,EAAMzwE,OAAqB,MAG3BywE,EAAMmB,WAAYzoE,EAAMsnE,EAAMlxE,OAAOyW,SAAkBxX,GAAKA,GAAKiyE,EAAMzwE,QAEtDmJ,EAAfsnE,EAAMnkC,QAAemkC,EAAMlxE,OAAO4jB,KAAK,IAAqC,IAAxBstD,EAAMlxE,OAAOS,OAAoBywE,EAAMlxE,OAAOswC,KAAKxxB,KAAgBoyD,EAAMlxE,OAAOgjB,OAAOkuD,EAAMzwE,QACrJywE,EAAMlxE,OAAO62B,SAGbjtB,EASJ,SAAyB3K,EAAGgkB,EAAMwgE,GAChC,IAAI75E,EACA3K,EAAIgkB,EAAKqtB,KAAKxxB,KAAKre,QAErBmJ,EAAMqZ,EAAKqtB,KAAKxxB,KAAK9b,MAAM,EAAG/D,GAC9BgkB,EAAKqtB,KAAKxxB,KAAOmE,EAAKqtB,KAAKxxB,KAAK9b,MAAM/D,IAGtC2K,EAFS3K,IAAMgkB,EAAKqtB,KAAKxxB,KAAKre,OAExBwiB,EAAKxM,QAGLgtE,EASV,SAA8BxkF,EAAGgkB,GAC/B,IAAI1jB,EAAI0jB,EAAKqtB,KACTjyC,EAAI,EACJuL,EAAMrK,EAAEuf,KACZ7f,GAAK2K,EAAInJ,OACT,KAAOlB,EAAIA,EAAEmd,MAAM,CACjB,IAAI5V,EAAMvH,EAAEuf,KACR6wD,EAAK1wE,EAAI6H,EAAIrG,OAASqG,EAAIrG,OAASxB,EAGvC,GAFI0wE,IAAO7oE,EAAIrG,OAAQmJ,GAAO9C,EAAS8C,GAAO9C,EAAI9D,MAAM,EAAG/D,GAEjD,KADVA,GAAK0wE,GACQ,CACPA,IAAO7oE,EAAIrG,UACXpC,EACEkB,EAAEmd,KAAMuG,EAAKqtB,KAAO/wC,EAAEmd,KAAUuG,EAAKqtB,KAAOrtB,EAAKygE,KAAO,OAE5DzgE,EAAKqtB,KAAO/wC,EACZA,EAAEuf,KAAOhY,EAAI9D,MAAM2sE,IAErB,QAEAtxE,EAGJ,OADA4kB,EAAKxiB,QAAUpC,EACRuL,EAhCc+5E,CAAqB1kF,EAAGgkB,GAsC/C,SAAwBhkB,EAAGgkB,GACzB,IAAIrZ,EAAM3J,EAAOW,YAAY3B,GACzBM,EAAI0jB,EAAKqtB,KACTjyC,EAAI,EACRkB,EAAEuf,KAAKxW,KAAKsB,GACZ3K,GAAKM,EAAEuf,KAAKre,OACZ,KAAOlB,EAAIA,EAAEmd,MAAM,CACjB,IAAIxb,EAAM3B,EAAEuf,KACR6wD,EAAK1wE,EAAIiC,EAAIT,OAASS,EAAIT,OAASxB,EAGvC,GAFAiC,EAAIoH,KAAKsB,EAAKA,EAAInJ,OAASxB,EAAG,EAAG0wE,GAEvB,KADV1wE,GAAK0wE,GACQ,CACPA,IAAOzuE,EAAIT,UACXpC,EACEkB,EAAEmd,KAAMuG,EAAKqtB,KAAO/wC,EAAEmd,KAAUuG,EAAKqtB,KAAOrtB,EAAKygE,KAAO,OAE5DzgE,EAAKqtB,KAAO/wC,EACZA,EAAEuf,KAAO5d,EAAI8B,MAAM2sE,IAErB,QAEAtxE,EAGJ,OADA4kB,EAAKxiB,QAAUpC,EACRuL,EA9D8Cg6E,CAAe3kF,EAAGgkB,GAEvE,OAAOrZ,EAtBCi6E,CAAgB5kF,EAAGiyE,EAAMlxE,OAAQkxE,EAAMnkC,SAGxCnjC,GAVP,IAAIA,EA4FN,SAASk6E,EAAY3R,GACnB,IAAIjB,EAAQiB,EAAOzmD,eAInB,GAAIwlD,EAAMzwE,OAAS,EAAG,MAAM,IAAI0F,MAAM,8CAEjC+qE,EAAMgQ,aACThQ,EAAM3lD,OAAQ,EACdd,EAAIpB,SAAS06D,EAAe7S,EAAOiB,IAIvC,SAAS4R,EAAc7S,EAAOiB,GAEvBjB,EAAMgQ,YAA+B,IAAjBhQ,EAAMzwE,SAC7BywE,EAAMgQ,YAAa,EACnB/O,EAAOhnD,UAAW,EAClBgnD,EAAOloD,KAAK,QAIhB,SAAStK,EAAQqkE,EAAI9xE,GACnB,IAAK,IAAIlU,EAAI,EAAGC,EAAI+lF,EAAGvjF,OAAQzC,EAAIC,EAAGD,IACpC,GAAIgmF,EAAGhmF,KAAOkU,EAAG,OAAOlU,EAE1B,OAAQ,EApoBV8sB,EAASzrB,UAAU6gB,KAAO,SAAUjhB,GAClC0+C,EAAM,OAAQ1+C,GACdA,EAAImE,SAASnE,EAAG,IAChB,IAAIiyE,EAAQpvE,KAAK4pB,eACbu4D,EAAQhlF,EAOZ,GALU,IAANA,IAASiyE,EAAM6Q,iBAAkB,GAK3B,IAAN9iF,GAAWiyE,EAAMoP,eAAiBpP,EAAMzwE,QAAUywE,EAAMzlD,eAAiBylD,EAAM3lD,OAGjF,OAFAoyB,EAAM,qBAAsBuzB,EAAMzwE,OAAQywE,EAAM3lD,OAC3B,IAAjB2lD,EAAMzwE,QAAgBywE,EAAM3lD,MAAOu4D,EAAYhiF,MAAWygF,EAAazgF,MACpE,KAMT,GAAU,KAHV7C,EAAIgkF,EAAchkF,EAAGiyE,KAGNA,EAAM3lD,MAEnB,OADqB,IAAjB2lD,EAAMzwE,QAAcqjF,EAAYhiF,MAC7B,KA0BT,IA4BI8H,EA5BAs6E,EAAShT,EAAMoP,aAiDnB,OAhDA3iC,EAAM,gBAAiBumC,IAGF,IAAjBhT,EAAMzwE,QAAgBywE,EAAMzwE,OAASxB,EAAIiyE,EAAMzlD,gBAEjDkyB,EAAM,6BADNumC,GAAS,GAMPhT,EAAM3lD,OAAS2lD,EAAMmP,QAEvB1iC,EAAM,mBADNumC,GAAS,GAEAA,IACTvmC,EAAM,WACNuzB,EAAMmP,SAAU,EAChBnP,EAAMkC,MAAO,EAEQ,IAAjBlC,EAAMzwE,SAAcywE,EAAMoP,cAAe,GAE7Cx+E,KAAKy+E,MAAMrP,EAAMzlD,eACjBylD,EAAMkC,MAAO,EAGRlC,EAAMmP,UAASphF,EAAIgkF,EAAcgB,EAAO/S,KAMnC,QAFDtnE,EAAP3K,EAAI,EAASukF,EAASvkF,EAAGiyE,GAAkB,OAG7CA,EAAMoP,cAAe,EACrBrhF,EAAI,GAEJiyE,EAAMzwE,QAAUxB,EAGG,IAAjBiyE,EAAMzwE,SAGHywE,EAAM3lD,QAAO2lD,EAAMoP,cAAe,GAGnC2D,IAAUhlF,GAAKiyE,EAAM3lD,OAAOu4D,EAAYhiF,OAGlC,OAAR8H,GAAc9H,KAAKmoB,KAAK,OAAQrgB,GAE7BA,GAkETkhB,EAASzrB,UAAUkhF,MAAQ,SAAUthF,GACnC6C,KAAKmoB,KAAK,QAAS,IAAI9jB,MAAM,gCAG/B2kB,EAASzrB,UAAUg2E,KAAO,SAAU9sE,EAAM47E,GACxC,IAAIhkF,EAAM2B,KACNovE,EAAQpvE,KAAK4pB,eAEjB,OAAQwlD,EAAM2Q,YACZ,KAAK,EACH3Q,EAAM0Q,MAAQr5E,EACd,MACF,KAAK,EACH2oE,EAAM0Q,OAAS1Q,EAAM0Q,MAAOr5E,GAC5B,MACF,QACE2oE,EAAM0Q,MAAMz+E,KAAKoF,GAGrB2oE,EAAM2Q,YAAc,EACpBlkC,EAAM,wBAAyBuzB,EAAM2Q,WAAYsC,GAEjD,IAEIC,IAFUD,IAA6B,IAAjBA,EAASrgF,MAAkByE,IAAS2f,EAAQm8D,QAAU97E,IAAS2f,EAAQo8D,OAE7Ej5D,EAAQk5D,EAI5B,SAASC,EAASr5D,EAAUs5D,GAC1B9mC,EAAM,YACFxyB,IAAahrB,GACXskF,IAAwC,IAA1BA,EAAWC,aAC3BD,EAAWC,YAAa,EAoB5B/mC,EAAM,WAENp1C,EAAKwhB,eAAe,QAAS46D,GAC7Bp8E,EAAKwhB,eAAe,SAAU66D,GAC9Br8E,EAAKwhB,eAAe,QAAS86D,GAC7Bt8E,EAAKwhB,eAAe,QAAS+6D,GAC7Bv8E,EAAKwhB,eAAe,SAAUy6D,GAC9BrkF,EAAI4pB,eAAe,MAAOsB,GAC1BlrB,EAAI4pB,eAAe,MAAOw6D,GAC1BpkF,EAAI4pB,eAAe,OAAQg7D,GAE3BC,GAAY,GAOR9T,EAAMgR,YAAgB35E,EAAK+iB,iBAAkB/iB,EAAK+iB,eAAesnD,WAAYiS,KAhCnF,SAASx5D,IACPsyB,EAAM,SACNp1C,EAAKzE,MAfHotE,EAAMgQ,WAAYz2D,EAAIpB,SAAS+6D,GAAYjkF,EAAI2pB,KAAK,MAAOs6D,GAE/D77E,EAAKqhB,GAAG,SAAU46D,GAoBlB,IAAIK,EA4FN,SAAqB1kF,GACnB,OAAO,WACL,IAAI+wE,EAAQ/wE,EAAIurB,eAChBiyB,EAAM,cAAeuzB,EAAMgR,YACvBhR,EAAMgR,YAAYhR,EAAMgR,aACH,IAArBhR,EAAMgR,YAAoBd,EAAgBjhF,EAAK,UACjD+wE,EAAM4Q,SAAU,EAChBsB,EAAKjjF,KAnGK8kF,CAAY9kF,GAC1BoI,EAAKqhB,GAAG,QAASi7D,GAEjB,IAAIG,GAAY,EA2BhB,IAAIE,GAAsB,EAE1B,SAASH,EAAOnQ,GACdj3B,EAAM,UACNunC,GAAsB,GAElB,IADM38E,EAAKiW,MAAMo2D,IACCsQ,KAKM,IAArBhU,EAAM2Q,YAAoB3Q,EAAM0Q,QAAUr5E,GAAQ2oE,EAAM2Q,WAAa,IAAqC,IAAhCliE,EAAQuxD,EAAM0Q,MAAOr5E,MAAkBy8E,IACpHrnC,EAAM,8BAA+Bx9C,EAAIurB,eAAew2D,YACxD/hF,EAAIurB,eAAew2D,aACnBgD,GAAsB,GAExB/kF,EAAIglF,SAMR,SAASL,EAAQvR,GACf51B,EAAM,UAAW41B,GACjBgR,IACAh8E,EAAKwhB,eAAe,QAAS+6D,GACU,IAAnC1D,EAAgB74E,EAAM,UAAgBA,EAAK0hB,KAAK,QAASspD,GAO/D,SAASoR,IACPp8E,EAAKwhB,eAAe,SAAU66D,GAC9BL,IAGF,SAASK,IACPjnC,EAAM,YACNp1C,EAAKwhB,eAAe,QAAS46D,GAC7BJ,IAIF,SAASA,IACP5mC,EAAM,UACNx9C,EAAIokF,OAAOh8E,GAYb,OA1DApI,EAAIypB,GAAG,OAAQm7D,GA9gBjB,SAAyB3N,EAASgO,EAAOhb,GAGvC,GAAuC,oBAA5BgN,EAAQltD,gBAAgC,OAAOktD,EAAQltD,gBAAgBk7D,EAAOhb,GAMpFgN,EAAQd,SAAYc,EAAQd,QAAQ8O,GAAuCriF,EAAQq0E,EAAQd,QAAQ8O,IAAShO,EAAQd,QAAQ8O,GAAOpqC,QAAQovB,GAASgN,EAAQd,QAAQ8O,IAAUhb,EAAIgN,EAAQd,QAAQ8O,IAAtJhO,EAAQxtD,GAAGw7D,EAAOhb,GAkiBnElgD,CAAgB3hB,EAAM,QAASu8E,GAO/Bv8E,EAAKuhB,KAAK,QAAS66D,GAMnBp8E,EAAKuhB,KAAK,SAAU86D,GAQpBr8E,EAAK0hB,KAAK,OAAQ9pB,GAGb+wE,EAAM4Q,UACTnkC,EAAM,eACNx9C,EAAIklF,UAGC98E,GAeTuiB,EAASzrB,UAAUklF,OAAS,SAAUh8E,GACpC,IAAI2oE,EAAQpvE,KAAK4pB,eACb+4D,GAAeC,YAAY,GAG/B,GAAyB,IAArBxT,EAAM2Q,WAAkB,OAAO//E,KAGnC,GAAyB,IAArBovE,EAAM2Q,WAER,OAAIt5E,GAAQA,IAAS2oE,EAAM0Q,MAAc9/E,MAEpCyG,IAAMA,EAAO2oE,EAAM0Q,OAGxB1Q,EAAM0Q,MAAQ,KACd1Q,EAAM2Q,WAAa,EACnB3Q,EAAM4Q,SAAU,EACZv5E,GAAMA,EAAK0hB,KAAK,SAAUnoB,KAAM2iF,GAC7B3iF,MAKT,IAAKyG,EAAM,CAET,IAAI+8E,EAAQpU,EAAM0Q,MACd79E,EAAMmtE,EAAM2Q,WAChB3Q,EAAM0Q,MAAQ,KACd1Q,EAAM2Q,WAAa,EACnB3Q,EAAM4Q,SAAU,EAEhB,IAAK,IAAI9jF,EAAI,EAAGA,EAAI+F,EAAK/F,IACvBsnF,EAAMtnF,GAAGisB,KAAK,SAAUnoB,KAAM2iF,GAC/B,OAAO3iF,KAIV,IAAIyuC,EAAQ5wB,EAAQuxD,EAAM0Q,MAAOr5E,GACjC,OAAe,IAAXgoC,EAAqBzuC,MAEzBovE,EAAM0Q,MAAMj1C,OAAO4D,EAAO,GAC1B2gC,EAAM2Q,YAAc,EACK,IAArB3Q,EAAM2Q,aAAkB3Q,EAAM0Q,MAAQ1Q,EAAM0Q,MAAM,IAEtDr5E,EAAK0hB,KAAK,SAAUnoB,KAAM2iF,GAEnB3iF,OAKTgpB,EAASzrB,UAAUuqB,GAAK,SAAU27D,EAAInb,GACpC,IAAInnE,EAAM6uE,EAAOzyE,UAAUuqB,GAAGzrB,KAAK2D,KAAMyjF,EAAInb,GAE7C,GAAW,SAAPmb,GAEkC,IAAhCzjF,KAAK4pB,eAAeo2D,SAAmBhgF,KAAKujF,cAC3C,GAAW,aAAPE,EAAmB,CAC5B,IAAIrU,EAAQpvE,KAAK4pB,eACZwlD,EAAMgQ,YAAehQ,EAAM8Q,oBAC9B9Q,EAAM8Q,kBAAoB9Q,EAAMoP,cAAe,EAC/CpP,EAAM6Q,iBAAkB,EACnB7Q,EAAMmP,QAEAnP,EAAMzwE,QACf8hF,EAAazgF,MAFb2oB,EAAIpB,SAASi6D,EAAkBxhF,OAOrC,OAAOmB,GAET6nB,EAASzrB,UAAUwqB,YAAciB,EAASzrB,UAAUuqB,GASpDkB,EAASzrB,UAAUgmF,OAAS,WAC1B,IAAInU,EAAQpvE,KAAK4pB,eAMjB,OALKwlD,EAAM4Q,UACTnkC,EAAM,UACNuzB,EAAM4Q,SAAU,EAMpB,SAAgB3P,EAAQjB,GACjBA,EAAM+Q,kBACT/Q,EAAM+Q,iBAAkB,EACxBx3D,EAAIpB,SAASk6D,EAASpR,EAAQjB,IAR9BmU,CAAOvjF,KAAMovE,IAERpvE,MAuBTgpB,EAASzrB,UAAU8lF,MAAQ,WAOzB,OANAxnC,EAAM,wBAAyB77C,KAAK4pB,eAAeo2D,UAC/C,IAAUhgF,KAAK4pB,eAAeo2D,UAChCnkC,EAAM,SACN77C,KAAK4pB,eAAeo2D,SAAU,EAC9BhgF,KAAKmoB,KAAK,UAELnoB,MAYTgpB,EAASzrB,UAAUmmF,KAAO,SAAUrT,GAClC,IAAIhB,EAAQrvE,KAERovE,EAAQpvE,KAAK4pB,eACb+5D,GAAS,EA4Bb,IAAK,IAAIznF,KA1BTm0E,EAAOvoD,GAAG,MAAO,WAEf,GADA+zB,EAAM,eACFuzB,EAAMnkC,UAAYmkC,EAAM3lD,MAAO,CACjC,IAAIqpD,EAAQ1D,EAAMnkC,QAAQjpC,MACtB8wE,GAASA,EAAMn0E,QAAQ0wE,EAAMhuE,KAAKyxE,GAGxCzD,EAAMhuE,KAAK,QAGbgvE,EAAOvoD,GAAG,OAAQ,SAAUgrD,IAC1Bj3B,EAAM,gBACFuzB,EAAMnkC,UAAS6nC,EAAQ1D,EAAMnkC,QAAQvuB,MAAMo2D,KAG3C1D,EAAMmB,YAAyB,OAAVuC,QAA4BzzE,IAAVyzE,MAAuC1D,EAAMmB,YAAgBuC,GAAUA,EAAMn0E,UAE9G0wE,EAAMhuE,KAAKyxE,KAEnB6Q,GAAS,EACTtT,EAAOgT,aAMGhT,OACIhxE,IAAZW,KAAK9D,IAAyC,oBAAdm0E,EAAOn0E,KACzC8D,KAAK9D,GAAK,SAAUitB,GAClB,OAAO,WACL,OAAOknD,EAAOlnD,GAAQ7I,MAAM+vD,EAAQ9uD,YAF9B,CAIRrlB,IAKN,IAAK,IAAIiB,EAAI,EAAGA,EAAIuiF,EAAa/gF,OAAQxB,IACvCkzE,EAAOvoD,GAAG43D,EAAaviF,GAAI6C,KAAKmoB,KAAK6wB,KAAKh5C,KAAM0/E,EAAaviF,KAa/D,OARA6C,KAAKy+E,MAAQ,SAAUthF,GACrB0+C,EAAM,gBAAiB1+C,GACnBwmF,IACFA,GAAS,EACTtT,EAAOkT,WAIJvjF,MAGTpD,OAAOC,eAAemsB,EAASzrB,UAAW,yBAIxCR,YAAY,EACZC,IAAK,WACH,OAAOgD,KAAK4pB,eAAeD,iBAK/BX,EAAS46D,UAAYlC,0CCp2BrBzlF,EAAOD,QAAUg0E,EAEjB,IAAI6T,EAAK/nF,EAAQ,IAAUy4E,aAkB3B,SAASvE,IACP6T,EAAGxnF,KAAK2D,MAlBKlE,EAAQ,EAEvByE,CAASyvE,EAAQ6T,GACjB7T,EAAOhnD,SAAWltB,EAAQ,IAC1Bk0E,EAAO/mD,SAAWntB,EAAQ,IAC1Bk0E,EAAOlnD,OAAShtB,EAAQ,IACxBk0E,EAAOqE,UAAYv4E,EAAQ,IAC3Bk0E,EAAOsE,YAAcx4E,EAAQ,IAG7Bk0E,EAAOA,OAASA,EAWhBA,EAAOzyE,UAAUg2E,KAAO,SAAS9sE,EAAM2iB,GACrC,IAAI06D,EAAS9jF,KAEb,SAASijF,EAAOnQ,GACVrsE,EAAKzI,WACH,IAAUyI,EAAKiW,MAAMo2D,IAAUgR,EAAOT,OACxCS,EAAOT,QAOb,SAASN,IACHe,EAAOz6D,UAAYy6D,EAAOP,QAC5BO,EAAOP,SAJXO,EAAOh8D,GAAG,OAAQm7D,GAQlBx8E,EAAKqhB,GAAG,QAASi7D,GAIZt8E,EAAKs9E,UAAc36D,IAA2B,IAAhBA,EAAQpnB,MACzC8hF,EAAOh8D,GAAG,MAAOyB,GACjBu6D,EAAOh8D,GAAG,QAAS+6D,IAGrB,IAAImB,GAAW,EACf,SAASz6D,IACHy6D,IACJA,GAAW,EAEXv9E,EAAKzE,OAIP,SAAS6gF,IACHmB,IACJA,GAAW,EAEiB,oBAAjBv9E,EAAKisE,SAAwBjsE,EAAKisE,WAI/C,SAASsQ,EAAQvR,GAEf,GADAwS,IACwC,IAApCJ,EAAGzO,cAAcp1E,KAAM,SACzB,MAAMyxE,EAQV,SAASwS,IACPH,EAAO77D,eAAe,OAAQg7D,GAC9Bx8E,EAAKwhB,eAAe,QAAS86D,GAE7Be,EAAO77D,eAAe,MAAOsB,GAC7Bu6D,EAAO77D,eAAe,QAAS46D,GAE/BiB,EAAO77D,eAAe,QAAS+6D,GAC/Bv8E,EAAKwhB,eAAe,QAAS+6D,GAE7Bc,EAAO77D,eAAe,MAAOg8D,GAC7BH,EAAO77D,eAAe,QAASg8D,GAE/Bx9E,EAAKwhB,eAAe,QAASg8D,GAW/B,OA5BAH,EAAOh8D,GAAG,QAASk7D,GACnBv8E,EAAKqhB,GAAG,QAASk7D,GAmBjBc,EAAOh8D,GAAG,MAAOm8D,GACjBH,EAAOh8D,GAAG,QAASm8D,GAEnBx9E,EAAKqhB,GAAG,QAASm8D,GAEjBx9E,EAAK0hB,KAAK,OAAQ27D,GAGXr9E,iCC5HT,IAAItI,EAASrC,EAAQ,GAAeqC,OAChCk2E,EAAYv4E,EAAQ,IAAUu4E,UASlC,SAASsI,EAAUxyD,GACjBkqD,EAAUh4E,KAAK2D,MAEfA,KAAKqqB,OAASlsB,EAAOW,YAAYqrB,GACjCnqB,KAAKuqB,WAAaJ,EAClBnqB,KAAK+9E,aAAe,EACpB/9E,KAAKg+E,SAAW,EAAG,EAAG,EAAG,GAEzBh+E,KAAKkkF,YAAa,EAhBLpoF,EAAQ,EAmBvByE,CAASo8E,EAAUtI,GAEnBsI,EAASp/E,UAAUqhF,WAAa,SAAU9L,EAAO3zE,EAAUqwE,GACzD,IAAIp7B,EAAQ,KACZ,IACEp0C,KAAKyqB,OAAOqoD,EAAO3zE,GACnB,MAAO4qB,GACPqqB,EAAQrqB,EAGVylD,EAASp7B,IAGXuoC,EAASp/E,UAAUuhF,OAAS,SAAUtP,GACpC,IAAIp7B,EAAQ,KACZ,IACEp0C,KAAKqB,KAAKrB,KAAK+qB,UACf,MAAOhB,GACPqqB,EAAQrqB,EAGVylD,EAASp7B,IAGXuoC,EAASp/E,UAAUktB,OAAS,SAAUzN,EAAM7d,GAE1C,GA3CF,SAAmCiF,EAAK+/E,GACtC,IAAKhmF,EAAO0e,SAASzY,IAAuB,kBAARA,EAClC,MAAM,IAAIpF,UAAUmlF,EAAS,iCAwC/BC,CAAyBpnE,EAAM,QAC3Bhd,KAAKkkF,WAAY,MAAM,IAAI7/E,MAAM,yBAChClG,EAAO0e,SAASG,KAAOA,EAAO7e,EAAOS,KAAKoe,EAAM7d,IAKrD,IAFA,IAAIurB,EAAQ1qB,KAAKqqB,OACb5L,EAAS,EACNze,KAAK+9E,aAAe/gE,EAAKre,OAAS8f,GAAUze,KAAKuqB,YAAY,CAClE,IAAK,IAAIruB,EAAI8D,KAAK+9E,aAAc7hF,EAAI8D,KAAKuqB,YAAaG,EAAMxuB,KAAO8gB,EAAKyB,KACxEze,KAAK8qB,UACL9qB,KAAK+9E,aAAe,EAEtB,KAAOt/D,EAASzB,EAAKre,QAAQ+rB,EAAM1qB,KAAK+9E,gBAAkB/gE,EAAKyB,KAG/D,IAAK,IAAI1Y,EAAI,EAAGtC,EAAsB,EAAduZ,EAAKre,OAAY8E,EAAQ,IAAKsC,EACpD/F,KAAKg+E,QAAQj4E,IAAMtC,GACnBA,EAASzD,KAAKg+E,QAAQj4E,GAAK,WAAgB,GAC/B,IAAG/F,KAAKg+E,QAAQj4E,IAAM,WAAetC,GAGnD,OAAOzD,MAGT28E,EAASp/E,UAAUutB,QAAU,WAC3B,MAAM,IAAIzmB,MAAM,+BAGlBs4E,EAASp/E,UAAUwtB,OAAS,SAAU5rB,GACpC,GAAIa,KAAKkkF,WAAY,MAAM,IAAI7/E,MAAM,yBACrCrE,KAAKkkF,YAAa,EAElB,IAAIn5D,EAAS/qB,KAAKqoE,eACDhpE,IAAbF,IAAwB4rB,EAASA,EAAOppB,SAASxC,IAGrDa,KAAKqqB,OAAOnrB,KAAK,GACjBc,KAAK+9E,aAAe,EACpB,IAAK,IAAI7hF,EAAI,EAAGA,EAAI,IAAKA,EAAG8D,KAAKg+E,QAAQ9hF,GAAK,EAE9C,OAAO6uB,GAGT4xD,EAASp/E,UAAU8qE,QAAU,WAC3B,MAAM,IAAIhkE,MAAM,+BAGlBpI,EAAOD,QAAU2gF,6CC7FjB,IAAIp8E,EAAWzE,EAAQ,GACnB6gF,EAAW7gF,EAAQ,IAEnB8gF,EAAU,IAAI57E,MAAM,IAExB,SAASqjF,IACP1H,EAAStgF,KAAK2D,KAAM,IAGpBA,KAAK+7E,GAAK,WACV/7E,KAAKg8E,GAAK,WACVh8E,KAAKi8E,GAAK,WACVj8E,KAAKk8E,GAAK,UA+GZ,SAASiB,EAAM/sE,EAAGjT,GAChB,OAAQiT,GAAKjT,EAAMiT,IAAO,GAAKjT,EAGjC,SAASmnF,EAAK9hF,EAAGH,EAAG9F,EAAGC,EAAGF,EAAG4F,EAAGxE,GAC9B,OAAQy/E,EAAM36E,GAAMH,EAAI9F,GAAQ8F,EAAK7F,GAAMF,EAAI4F,EAAK,EAAGxE,GAAK2E,EAAK,EAGnE,SAASkiF,EAAK/hF,EAAGH,EAAG9F,EAAGC,EAAGF,EAAG4F,EAAGxE,GAC9B,OAAQy/E,EAAM36E,GAAMH,EAAI7F,EAAMD,GAAMC,GAAOF,EAAI4F,EAAK,EAAGxE,GAAK2E,EAAK,EAGnE,SAASmiF,EAAKhiF,EAAGH,EAAG9F,EAAGC,EAAGF,EAAG4F,EAAGxE,GAC9B,OAAQy/E,EAAM36E,GAAKH,EAAI9F,EAAIC,GAAKF,EAAI4F,EAAK,EAAGxE,GAAK2E,EAAK,EAGxD,SAASoiF,EAAKjiF,EAAGH,EAAG9F,EAAGC,EAAGF,EAAG4F,EAAGxE,GAC9B,OAAQy/E,EAAM36E,GAAMjG,GAAK8F,GAAM7F,IAAQF,EAAI4F,EAAK,EAAGxE,GAAK2E,EAAK,EA7H/D9B,EAAS8jF,EAAK1H,GAEd0H,EAAI9mF,UAAUutB,QAAU,WAEtB,IADA,IAAI8uD,EAAIgD,EACC1gF,EAAI,EAAGA,EAAI,KAAMA,EAAG09E,EAAE19E,GAAK8D,KAAKqqB,OAAOvG,YAAgB,EAAJ5nB,GAE5D,IAAIsG,EAAIxC,KAAK+7E,GACT15E,EAAIrC,KAAKg8E,GACTz/E,EAAIyD,KAAKi8E,GACTz/E,EAAIwD,KAAKk8E,GAoEb75E,EAAIoiF,EAJJpiF,EAAIoiF,EAJJpiF,EAAIoiF,EAJJpiF,EAAIoiF,EALJpiF,EAAImiF,EAJJniF,EAAImiF,EAJJniF,EAAImiF,EAJJniF,EAAImiF,EALJniF,EAAIkiF,EAJJliF,EAAIkiF,EAJJliF,EAAIkiF,EAJJliF,EAAIkiF,EALJliF,EAAIiiF,EAJJjiF,EAAIiiF,EAJJjiF,EAAIiiF,EAJJjiF,EAAIiiF,EAAIjiF,EADR9F,EAAI+nF,EAAI/nF,EADRC,EAAI8nF,EAAI9nF,EADRgG,EAAI8hF,EAAI9hF,EAAGH,EAAG9F,EAAGC,EAAGo9E,EAAE,GAAI,WAAY,GACxBv3E,EAAG9F,EAAGq9E,EAAE,GAAI,WAAY,IACxBp3E,EAAGH,EAAGu3E,EAAE,GAAI,UAAY,IACxBp9E,EAAGgG,EAAGo3E,EAAE,GAAI,WAAY,IAGtCr9E,EAAI+nF,EAAI/nF,EADRC,EAAI8nF,EAAI9nF,EADRgG,EAAI8hF,EAAI9hF,EAAGH,EAAG9F,EAAGC,EAAGo9E,EAAE,GAAI,WAAY,GACxBv3E,EAAG9F,EAAGq9E,EAAE,GAAI,WAAY,IACxBp3E,EAAGH,EAAGu3E,EAAE,GAAI,WAAY,IACxBp9E,EAAGgG,EAAGo3E,EAAE,GAAI,WAAY,IAGtCr9E,EAAI+nF,EAAI/nF,EADRC,EAAI8nF,EAAI9nF,EADRgG,EAAI8hF,EAAI9hF,EAAGH,EAAG9F,EAAGC,EAAGo9E,EAAE,GAAI,WAAY,GACxBv3E,EAAG9F,EAAGq9E,EAAE,GAAI,WAAY,IACxBp3E,EAAGH,EAAGu3E,EAAE,IAAK,WAAY,IACzBp9E,EAAGgG,EAAGo3E,EAAE,IAAK,WAAY,IAGvCr9E,EAAI+nF,EAAI/nF,EADRC,EAAI8nF,EAAI9nF,EADRgG,EAAI8hF,EAAI9hF,EAAGH,EAAG9F,EAAGC,EAAGo9E,EAAE,IAAK,WAAY,GACzBv3E,EAAG9F,EAAGq9E,EAAE,IAAK,WAAY,IACzBp3E,EAAGH,EAAGu3E,EAAE,IAAK,WAAY,IACzBp9E,EAAGgG,EAAGo3E,EAAE,IAAK,WAAY,IAIvCr9E,EAAIgoF,EAAIhoF,EADRC,EAAI+nF,EAAI/nF,EADRgG,EAAI+hF,EAAI/hF,EAAGH,EAAG9F,EAAGC,EAAGo9E,EAAE,GAAI,WAAY,GACxBv3E,EAAG9F,EAAGq9E,EAAE,GAAI,WAAY,GACxBp3E,EAAGH,EAAGu3E,EAAE,IAAK,UAAY,IACzBp9E,EAAGgG,EAAGo3E,EAAE,GAAI,WAAY,IAGtCr9E,EAAIgoF,EAAIhoF,EADRC,EAAI+nF,EAAI/nF,EADRgG,EAAI+hF,EAAI/hF,EAAGH,EAAG9F,EAAGC,EAAGo9E,EAAE,GAAI,WAAY,GACxBv3E,EAAG9F,EAAGq9E,EAAE,IAAK,SAAY,GACzBp3E,EAAGH,EAAGu3E,EAAE,IAAK,WAAY,IACzBp9E,EAAGgG,EAAGo3E,EAAE,GAAI,WAAY,IAGtCr9E,EAAIgoF,EAAIhoF,EADRC,EAAI+nF,EAAI/nF,EADRgG,EAAI+hF,EAAI/hF,EAAGH,EAAG9F,EAAGC,EAAGo9E,EAAE,GAAI,UAAY,GACxBv3E,EAAG9F,EAAGq9E,EAAE,IAAK,WAAY,GACzBp3E,EAAGH,EAAGu3E,EAAE,GAAI,WAAY,IACxBp9E,EAAGgG,EAAGo3E,EAAE,GAAI,WAAY,IAGtCr9E,EAAIgoF,EAAIhoF,EADRC,EAAI+nF,EAAI/nF,EADRgG,EAAI+hF,EAAI/hF,EAAGH,EAAG9F,EAAGC,EAAGo9E,EAAE,IAAK,WAAY,GACzBv3E,EAAG9F,EAAGq9E,EAAE,GAAI,WAAY,GACxBp3E,EAAGH,EAAGu3E,EAAE,GAAI,WAAY,IACxBp9E,EAAGgG,EAAGo3E,EAAE,IAAK,WAAY,IAIvCr9E,EAAIioF,EAAIjoF,EADRC,EAAIgoF,EAAIhoF,EADRgG,EAAIgiF,EAAIhiF,EAAGH,EAAG9F,EAAGC,EAAGo9E,EAAE,GAAI,WAAY,GACxBv3E,EAAG9F,EAAGq9E,EAAE,GAAI,WAAY,IACxBp3E,EAAGH,EAAGu3E,EAAE,IAAK,WAAY,IACzBp9E,EAAGgG,EAAGo3E,EAAE,IAAK,WAAY,IAGvCr9E,EAAIioF,EAAIjoF,EADRC,EAAIgoF,EAAIhoF,EADRgG,EAAIgiF,EAAIhiF,EAAGH,EAAG9F,EAAGC,EAAGo9E,EAAE,GAAI,WAAY,GACxBv3E,EAAG9F,EAAGq9E,EAAE,GAAI,WAAY,IACxBp3E,EAAGH,EAAGu3E,EAAE,GAAI,WAAY,IACxBp9E,EAAGgG,EAAGo3E,EAAE,IAAK,WAAY,IAGvCr9E,EAAIioF,EAAIjoF,EADRC,EAAIgoF,EAAIhoF,EADRgG,EAAIgiF,EAAIhiF,EAAGH,EAAG9F,EAAGC,EAAGo9E,EAAE,IAAK,UAAY,GACzBv3E,EAAG9F,EAAGq9E,EAAE,GAAI,WAAY,IACxBp3E,EAAGH,EAAGu3E,EAAE,GAAI,WAAY,IACxBp9E,EAAGgG,EAAGo3E,EAAE,GAAI,SAAY,IAGtCr9E,EAAIioF,EAAIjoF,EADRC,EAAIgoF,EAAIhoF,EADRgG,EAAIgiF,EAAIhiF,EAAGH,EAAG9F,EAAGC,EAAGo9E,EAAE,GAAI,WAAY,GACxBv3E,EAAG9F,EAAGq9E,EAAE,IAAK,WAAY,IACzBp3E,EAAGH,EAAGu3E,EAAE,IAAK,UAAY,IACzBp9E,EAAGgG,EAAGo3E,EAAE,GAAI,WAAY,IAItCr9E,EAAIkoF,EAAIloF,EADRC,EAAIioF,EAAIjoF,EADRgG,EAAIiiF,EAAIjiF,EAAGH,EAAG9F,EAAGC,EAAGo9E,EAAE,GAAI,WAAY,GACxBv3E,EAAG9F,EAAGq9E,EAAE,GAAI,WAAY,IACxBp3E,EAAGH,EAAGu3E,EAAE,IAAK,WAAY,IACzBp9E,EAAGgG,EAAGo3E,EAAE,GAAI,WAAY,IAGtCr9E,EAAIkoF,EAAIloF,EADRC,EAAIioF,EAAIjoF,EADRgG,EAAIiiF,EAAIjiF,EAAGH,EAAG9F,EAAGC,EAAGo9E,EAAE,IAAK,WAAY,GACzBv3E,EAAG9F,EAAGq9E,EAAE,GAAI,WAAY,IACxBp3E,EAAGH,EAAGu3E,EAAE,IAAK,WAAY,IACzBp9E,EAAGgG,EAAGo3E,EAAE,GAAI,WAAY,IAGtCr9E,EAAIkoF,EAAIloF,EADRC,EAAIioF,EAAIjoF,EADRgG,EAAIiiF,EAAIjiF,EAAGH,EAAG9F,EAAGC,EAAGo9E,EAAE,GAAI,WAAY,GACxBv3E,EAAG9F,EAAGq9E,EAAE,IAAK,WAAY,IACzBp3E,EAAGH,EAAGu3E,EAAE,GAAI,WAAY,IACxBp9E,EAAGgG,EAAGo3E,EAAE,IAAK,WAAY,IAGvCr9E,EAAIkoF,EAAIloF,EADRC,EAAIioF,EAAIjoF,EADRgG,EAAIiiF,EAAIjiF,EAAGH,EAAG9F,EAAGC,EAAGo9E,EAAE,GAAI,WAAY,GACxBv3E,EAAG9F,EAAGq9E,EAAE,IAAK,WAAY,IACzBp3E,EAAGH,EAAGu3E,EAAE,GAAI,UAAY,IACxBp9E,EAAGgG,EAAGo3E,EAAE,GAAI,WAAY,IAEtC55E,KAAK+7E,GAAM/7E,KAAK+7E,GAAKv5E,EAAK,EAC1BxC,KAAKg8E,GAAMh8E,KAAKg8E,GAAK35E,EAAK,EAC1BrC,KAAKi8E,GAAMj8E,KAAKi8E,GAAK1/E,EAAK,EAC1ByD,KAAKk8E,GAAMl8E,KAAKk8E,GAAK1/E,EAAK,GAG5B6nF,EAAI9mF,UAAU8qE,QAAU,WAEtBroE,KAAKqqB,OAAOrqB,KAAK+9E,gBAAkB,IAC/B/9E,KAAK+9E,aAAe,KACtB/9E,KAAKqqB,OAAOnrB,KAAK,EAAGc,KAAK+9E,aAAc,IACvC/9E,KAAK8qB,UACL9qB,KAAK+9E,aAAe,GAGtB/9E,KAAKqqB,OAAOnrB,KAAK,EAAGc,KAAK+9E,aAAc,IACvC/9E,KAAKqqB,OAAO3F,cAAc1kB,KAAKg+E,QAAQ,GAAI,IAC3Ch+E,KAAKqqB,OAAO3F,cAAc1kB,KAAKg+E,QAAQ,GAAI,IAC3Ch+E,KAAK8qB,UAGL,IAAI5sB,EAAS,IAAIC,EAAO,IAKxB,OAJAD,EAAOgnB,aAAallB,KAAK+7E,GAAI,GAC7B79E,EAAOgnB,aAAallB,KAAKg8E,GAAI,GAC7B99E,EAAOgnB,aAAallB,KAAKi8E,GAAI,GAC7B/9E,EAAOgnB,aAAallB,KAAKk8E,GAAI,IACtBh+E,GAuBTjC,EAAOD,QAAUqoF,4CCvIjB,IAAIh5D,EAAOvvB,EAAQ,IACfwvB,EAAOD,EACP7P,EAASvb,SAAS,cAATA,GAETykF,EAAe5oF,EAAQ,IACvB6oF,EAAmB7oF,EAAQ,IAE/BwvB,EAAKG,aAAa,mCAAoC,KAAMjQ,GAC5D8P,EAAKG,aAAa,kCAAmC,KAAMjQ,GAC3D8P,EAAKG,aAAa,yBAA0B,KAAMjQ,GAClD8P,EAAKG,aAAa,gCAAiC,KAAMjQ,GACzD8P,EAAKG,aAAa,4BAA6B,KAAMjQ,GACrD8P,EAAKG,aAAa,2BAA4B,KAAMjQ,GACpD8P,EAAKG,aAAa,gCAAiC,KAAMjQ,GACzD8P,EAAKG,aAAa,8BAA+B,KAAMjQ,GACvD8P,EAAKG,aAAa,8BAA+B,KAAMjQ,GACvD8P,EAAKG,aAAa,sBAAuB,KAAMjQ,GAC/C8P,EAAKG,aAAa,0BAA2B,KAAMjQ,GACnD8P,EAAKG,aAAa,+BAAgC,KAAMjQ,GACxD8P,EAAKG,aAAa,wBAAyB,KAAMjQ,GACjD8P,EAAKG,aAAa,sCAAuC,KAAMjQ,GAC/D8P,EAAKG,aAAa,6BAA8B,KAAMjQ,GACtD8P,EAAKG,aAAa,sCAAuC,KAAMjQ,GAC/D8P,EAAKG,aAAa,kCAAmC,KAAMjQ,GAC3D8P,EAAKG,aAAa,iCAAkC,KAAMjQ,GAC1D8P,EAAKG,aAAa,6BAA8B,KAAMjQ,GAYtDkQ,MAAMC,SAASi5D,OAAS,SAAS/4D,GAC/BR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMC,SAASi5D,OAAQv5D,EAAKS,SACtCR,EAAKU,QAAUC,WACjBP,MAAMC,SAASi5D,OAAO14D,YAAc,yBAIlCb,EAAKS,QAAQK,qBAWjBT,MAAMC,SAASi5D,OAAOrnF,UAAU6uB,SAAW,SAASC,GAClD,OAAOX,MAAMC,SAASi5D,OAAOx4D,SAASC,EAAqBrsB,OAa7D0rB,MAAMC,SAASi5D,OAAOx4D,SAAW,SAASE,EAAiBxrB,GACzD,IAAO8b,GACL6tB,OAAQpf,EAAKS,QAAQmC,oBAAoBntB,EAAK,GAAG,GACjD4kB,KAAM2F,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,GAC/C6sB,QAAS7sB,EAAI+jF,oBAMf,OAHIv4D,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAASi5D,OAAOj4D,kBAAoB,SAASpK,GACjD,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAASi5D,OAC7B,OAAOl5D,MAAMC,SAASi5D,OAAO93D,4BAA4BhsB,EAAK8rB,IAWhElB,MAAMC,SAASi5D,OAAO93D,4BAA8B,SAAShsB,EAAK8rB,GAChE,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAgC0vB,EAAOqF,WAC3CnxB,EAAIgkF,UAAU5nF,GACd,MACF,KAAK,EACCA,EAA6D0vB,EAAOuE,WACxErwB,EAAIkxB,QAAQ90B,GACZ,MACF,KAAK,EACCA,EAAoC0vB,EAAOM,YAC/CpsB,EAAIikF,WAAW7nF,GACf,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAASi5D,OAAOrnF,UAAU+vB,gBAAkB,WAChD,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAASi5D,OAAOn3D,wBAAwBztB,KAAMutB,GAC7CA,EAAOG,mBAWhBhC,MAAMC,SAASi5D,OAAOn3D,wBAA0B,SAASE,EAASJ,GAChE,IAAIK,OAAIvuB,GACRuuB,EAAID,EAAQq3D,cAEVz3D,EAAOgG,UACL,EACA3F,GAIM,KADVA,EAAID,EAAQuH,YAEV3H,EAAOoF,UACL,EACA/E,IAGJA,EAAID,EAAQs3D,mBACNtmF,OAAS,GACb4uB,EAAOO,WACL,EACAF,IASNlC,MAAMC,SAASi5D,OAAOM,eACpBC,QAAS,EACTC,SAAU,EACVC,wBAAyB,EACzBC,mBAAoB,EACpBC,eAAgB,EAChBC,sBAAuB,EACvBC,YAAa,EACbC,0BAA2B,EAC3BC,6BAA8B,EAC9BC,YAAa,EACbC,YAAa,IASfn6D,MAAMC,SAASi5D,OAAOrnF,UAAUynF,UAAY,WAC1C,OAA+B35D,EAAKS,QAAQmC,oBAAoBjuB,KAAM,GAAG,IAK3E0rB,MAAMC,SAASi5D,OAAOrnF,UAAUunF,UAAY,SAAS5nF,GACnDmuB,EAAKS,QAAQqJ,sBAAsBn1B,KAAM,EAAG9C,IAQ9CwuB,MAAMC,SAASi5D,OAAOrnF,UAAU23B,QAAU,WACxC,OAA4D7J,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAKxG0rB,MAAMC,SAASi5D,OAAOrnF,UAAUy0B,QAAU,SAAS90B,GACjDmuB,EAAKS,QAAQsI,mBAAmBp0B,KAAM,EAAG9C,IAQ3CwuB,MAAMC,SAASi5D,OAAOrnF,UAAUuoF,WAAa,WAC3C,OAA4Cz6D,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAASi5D,OAAOrnF,UAAUsnF,iBAAmB,WACjD,OAA8Bx5D,EAAKS,QAAQoC,WACvCluB,KAAK8lF,eAWXp6D,MAAMC,SAASi5D,OAAOrnF,UAAU0nF,gBAAkB,WAChD,OAAmC55D,EAAKS,QAAQqC,UAC5CnuB,KAAK8lF,eAKXp6D,MAAMC,SAASi5D,OAAOrnF,UAAUwnF,WAAa,SAAS7nF,GACpDmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAe5CwuB,MAAMC,SAASo6D,eAAiB,SAASl6D,GACvCR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMC,SAASo6D,eAAgB16D,EAAKS,SAC9CR,EAAKU,QAAUC,WACjBP,MAAMC,SAASo6D,eAAe75D,YAAc,iCAI1Cb,EAAKS,QAAQK,qBAWjBT,MAAMC,SAASo6D,eAAexoF,UAAU6uB,SAAW,SAASC,GAC1D,OAAOX,MAAMC,SAASo6D,eAAe35D,SAASC,EAAqBrsB,OAarE0rB,MAAMC,SAASo6D,eAAe35D,SAAW,SAASE,EAAiBxrB,GACjE,IAAO8b,GACLopE,SAAU36D,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,GACnDmlF,UAAWnlF,EAAIolF,sBAMjB,OAHI55D,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAASo6D,eAAep5D,kBAAoB,SAASpK,GACzD,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAASo6D,eAC7B,OAAOr6D,MAAMC,SAASo6D,eAAej5D,4BAA4BhsB,EAAK8rB,IAWxElB,MAAMC,SAASo6D,eAAej5D,4BAA8B,SAAShsB,EAAK8rB,GACxE,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAA+B0vB,EAAO+B,YAC1C7tB,EAAIqlF,YAAYjpF,GAChB,MACF,KAAK,EACCA,EAAoC0vB,EAAOM,YAC/CpsB,EAAIslF,aAAalpF,GACjB,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAASo6D,eAAexoF,UAAU+vB,gBAAkB,WACxD,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAASo6D,eAAet4D,wBAAwBztB,KAAMutB,GACrDA,EAAOG,mBAWhBhC,MAAMC,SAASo6D,eAAet4D,wBAA0B,SAASE,EAASJ,GACxE,IAAIK,OAAIvuB,EAEE,KADVuuB,EAAID,EAAQ04D,gBAEV94D,EAAOwB,WACL,EACAnB,IAGJA,EAAID,EAAQ24D,qBACN3nF,OAAS,GACb4uB,EAAOO,WACL,EACAF,IAUNlC,MAAMC,SAASo6D,eAAexoF,UAAU8oF,YAAc,WACpD,OAA8Bh7D,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAASo6D,eAAexoF,UAAU4oF,YAAc,SAASjpF,GAC7DmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAQ1CwuB,MAAMC,SAASo6D,eAAexoF,UAAUgpF,aAAe,WACrD,OAA4Cl7D,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAASo6D,eAAexoF,UAAU2oF,mBAAqB,WAC3D,OAA8B76D,EAAKS,QAAQoC,WACvCluB,KAAKumF,iBAWX76D,MAAMC,SAASo6D,eAAexoF,UAAU+oF,kBAAoB,WAC1D,OAAmCj7D,EAAKS,QAAQqC,UAC5CnuB,KAAKumF,iBAKX76D,MAAMC,SAASo6D,eAAexoF,UAAU6oF,aAAe,SAASlpF,GAC9DmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAe5CwuB,MAAMC,SAAS66D,YAAc,SAAS36D,GACpCR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAGH,MAAMC,SAAS66D,YAAYr3D,gBAAiB,OAE7F7D,EAAK/qB,SAASmrB,MAAMC,SAAS66D,YAAan7D,EAAKS,SAC3CR,EAAKU,QAAUC,WACjBP,MAAMC,SAAS66D,YAAYt6D,YAAc,8BAO3CR,MAAMC,SAAS66D,YAAYr3D,iBAAmB,GAI1C9D,EAAKS,QAAQK,qBAWjBT,MAAMC,SAAS66D,YAAYjpF,UAAU6uB,SAAW,SAASC,GACvD,OAAOX,MAAMC,SAAS66D,YAAYp6D,SAASC,EAAqBrsB,OAalE0rB,MAAMC,SAAS66D,YAAYp6D,SAAW,SAASE,EAAiBxrB,GAC9D,IAAO8b,GACL6pE,cAAep7D,EAAKS,QAAQ0D,aAAa1uB,EAAI4lF,mBAC7ChC,EAAajuD,QAAQrK,SAAUE,IAMjC,OAHIA,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAAS66D,YAAY75D,kBAAoB,SAASpK,GACtD,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAAS66D,YAC7B,OAAO96D,MAAMC,SAAS66D,YAAY15D,4BAA4BhsB,EAAK8rB,IAWrElB,MAAMC,SAAS66D,YAAY15D,4BAA8B,SAAShsB,EAAK8rB,GACrE,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAQ,IAAIwnF,EAAajuD,QAC7B7J,EAAO0E,YAAYp0B,EAAMwnF,EAAajuD,QAAQ3J,6BAC9ChsB,EAAI6lF,aAAazpF,GACjB,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAAS66D,YAAYjpF,UAAU+vB,gBAAkB,WACrD,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAAS66D,YAAY/4D,wBAAwBztB,KAAMutB,GAClDA,EAAOG,mBAWhBhC,MAAMC,SAAS66D,YAAY/4D,wBAA0B,SAASE,EAASJ,GACrE,IAAIK,GACJA,EAAID,EAAQ+4D,oBACN/nF,OAAS,GACb4uB,EAAOsF,qBACL,EACAjF,EACA82D,EAAajuD,QAAQhJ,0BAU3B/B,MAAMC,SAAS66D,YAAYjpF,UAAUmpF,iBAAmB,WACtD,OACEr7D,EAAKS,QAAQuI,wBAAwBr0B,KAAM0kF,EAAajuD,QAAS,IAKrE/K,MAAMC,SAAS66D,YAAYjpF,UAAUqpF,iBAAmB,SAAS1pF,GAC/DmuB,EAAKS,QAAQyI,wBAAwBv0B,KAAM,EAAG9C,IAShDwuB,MAAMC,SAAS66D,YAAYjpF,UAAUopF,aAAe,SAASnyD,EAAWC,GACtE,OAAOpJ,EAAKS,QAAQ4I,0BAA0B10B,KAAM,EAAGw0B,EAAW9I,MAAMC,SAAS8K,QAAShC,IAI5F/I,MAAMC,SAAS66D,YAAYjpF,UAAUspF,mBAAqB,WACxD7mF,KAAK4mF,sBAePl7D,MAAMC,SAASm7D,eAAiB,SAASj7D,GACvCR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAGH,MAAMC,SAASm7D,eAAe33D,gBAAiB,OAEhG7D,EAAK/qB,SAASmrB,MAAMC,SAASm7D,eAAgBz7D,EAAKS,SAC9CR,EAAKU,QAAUC,WACjBP,MAAMC,SAASm7D,eAAe56D,YAAc,iCAO9CR,MAAMC,SAASm7D,eAAe33D,iBAAmB,GAI7C9D,EAAKS,QAAQK,qBAWjBT,MAAMC,SAASm7D,eAAevpF,UAAU6uB,SAAW,SAASC,GAC1D,OAAOX,MAAMC,SAASm7D,eAAe16D,SAASC,EAAqBrsB,OAarE0rB,MAAMC,SAASm7D,eAAe16D,SAAW,SAASE,EAAiBxrB,GACjE,IAAO8b,GACLmqE,eAAgB17D,EAAKS,QAAQ0D,aAAa1uB,EAAIkmF,oBAC9CrC,EAAiBsC,mBAAmB76D,SAAUE,IAMhD,OAHIA,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAASm7D,eAAen6D,kBAAoB,SAASpK,GACzD,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAASm7D,eAC7B,OAAOp7D,MAAMC,SAASm7D,eAAeh6D,4BAA4BhsB,EAAK8rB,IAWxElB,MAAMC,SAASm7D,eAAeh6D,4BAA8B,SAAShsB,EAAK8rB,GACxE,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAQ,IAAIynF,EAAiBsC,mBACjCr6D,EAAO0E,YAAYp0B,EAAMynF,EAAiBsC,mBAAmBn6D,6BAC7DhsB,EAAIomF,cAAchqF,GAClB,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAASm7D,eAAevpF,UAAU+vB,gBAAkB,WACxD,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAASm7D,eAAer5D,wBAAwBztB,KAAMutB,GACrDA,EAAOG,mBAWhBhC,MAAMC,SAASm7D,eAAer5D,wBAA0B,SAASE,EAASJ,GACxE,IAAIK,GACJA,EAAID,EAAQq5D,qBACNroF,OAAS,GACb4uB,EAAOsF,qBACL,EACAjF,EACA+2D,EAAiBsC,mBAAmBx5D,0BAU1C/B,MAAMC,SAASm7D,eAAevpF,UAAUypF,kBAAoB,WAC1D,OACE37D,EAAKS,QAAQuI,wBAAwBr0B,KAAM2kF,EAAiBsC,mBAAoB,IAKpFv7D,MAAMC,SAASm7D,eAAevpF,UAAU4pF,kBAAoB,SAASjqF,GACnEmuB,EAAKS,QAAQyI,wBAAwBv0B,KAAM,EAAG9C,IAShDwuB,MAAMC,SAASm7D,eAAevpF,UAAU2pF,cAAgB,SAAS1yD,EAAWC,GAC1E,OAAOpJ,EAAKS,QAAQ4I,0BAA0B10B,KAAM,EAAGw0B,EAAW9I,MAAMC,SAASs7D,mBAAoBxyD,IAIvG/I,MAAMC,SAASm7D,eAAevpF,UAAU6pF,oBAAsB,WAC5DpnF,KAAKmnF,uBAePz7D,MAAMC,SAAS07D,UAAY,SAASx7D,GAClCR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAGH,MAAMC,SAAS07D,UAAUl4D,gBAAiB,OAE3F7D,EAAK/qB,SAASmrB,MAAMC,SAAS07D,UAAWh8D,EAAKS,SACzCR,EAAKU,QAAUC,WACjBP,MAAMC,SAAS07D,UAAUn7D,YAAc,4BAOzCR,MAAMC,SAAS07D,UAAUl4D,iBAAmB,GAIxC9D,EAAKS,QAAQK,qBAWjBT,MAAMC,SAAS07D,UAAU9pF,UAAU6uB,SAAW,SAASC,GACrD,OAAOX,MAAMC,SAAS07D,UAAUj7D,SAASC,EAAqBrsB,OAahE0rB,MAAMC,SAAS07D,UAAUj7D,SAAW,SAASE,EAAiBxrB,GAC5D,IAAO8b,GACL0qE,UAAWj8D,EAAKS,QAAQ0D,aAAa1uB,EAAIymF,eACzC7C,EAAaphD,MAAMlX,SAAUE,IAM/B,OAHIA,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAAS07D,UAAU16D,kBAAoB,SAASpK,GACpD,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAAS07D,UAC7B,OAAO37D,MAAMC,SAAS07D,UAAUv6D,4BAA4BhsB,EAAK8rB,IAWnElB,MAAMC,SAAS07D,UAAUv6D,4BAA8B,SAAShsB,EAAK8rB,GACnE,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAQ,IAAIwnF,EAAaphD,MAC7B1W,EAAO0E,YAAYp0B,EAAMwnF,EAAaphD,MAAMxW,6BAC5ChsB,EAAI0mF,SAAStqF,GACb,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAAS07D,UAAU9pF,UAAU+vB,gBAAkB,WACnD,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAAS07D,UAAU55D,wBAAwBztB,KAAMutB,GAChDA,EAAOG,mBAWhBhC,MAAMC,SAAS07D,UAAU55D,wBAA0B,SAASE,EAASJ,GACnE,IAAIK,GACJA,EAAID,EAAQ45D,gBACN5oF,OAAS,GACb4uB,EAAOsF,qBACL,EACAjF,EACA82D,EAAaphD,MAAM7V,0BAUzB/B,MAAMC,SAAS07D,UAAU9pF,UAAUgqF,aAAe,WAChD,OACEl8D,EAAKS,QAAQuI,wBAAwBr0B,KAAM0kF,EAAaphD,MAAO,IAKnE5X,MAAMC,SAAS07D,UAAU9pF,UAAUkqF,aAAe,SAASvqF,GACzDmuB,EAAKS,QAAQyI,wBAAwBv0B,KAAM,EAAG9C,IAShDwuB,MAAMC,SAAS07D,UAAU9pF,UAAUiqF,SAAW,SAAShzD,EAAWC,GAChE,OAAOpJ,EAAKS,QAAQ4I,0BAA0B10B,KAAM,EAAGw0B,EAAW9I,MAAMC,SAAS2X,MAAO7O,IAI1F/I,MAAMC,SAAS07D,UAAU9pF,UAAUmqF,eAAiB,WAClD1nF,KAAKynF,kBAeP/7D,MAAMC,SAASg8D,gBAAkB,SAAS97D,GACxCR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAGH,MAAMC,SAASg8D,gBAAgBx4D,gBAAiB,OAEjG7D,EAAK/qB,SAASmrB,MAAMC,SAASg8D,gBAAiBt8D,EAAKS,SAC/CR,EAAKU,QAAUC,WACjBP,MAAMC,SAASg8D,gBAAgBz7D,YAAc,kCAO/CR,MAAMC,SAASg8D,gBAAgBx4D,iBAAmB,GAI9C9D,EAAKS,QAAQK,qBAWjBT,MAAMC,SAASg8D,gBAAgBpqF,UAAU6uB,SAAW,SAASC,GAC3D,OAAOX,MAAMC,SAASg8D,gBAAgBv7D,SAASC,EAAqBrsB,OAatE0rB,MAAMC,SAASg8D,gBAAgBv7D,SAAW,SAASE,EAAiBxrB,GAClE,IAAO8b,GACLgrE,gBAAiBv8D,EAAKS,QAAQ0D,aAAa1uB,EAAI+mF,qBAC/CnD,EAAaxpD,YAAY9O,SAAUE,IAMrC,OAHIA,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAASg8D,gBAAgBh7D,kBAAoB,SAASpK,GAC1D,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAASg8D,gBAC7B,OAAOj8D,MAAMC,SAASg8D,gBAAgB76D,4BAA4BhsB,EAAK8rB,IAWzElB,MAAMC,SAASg8D,gBAAgB76D,4BAA8B,SAAShsB,EAAK8rB,GACzE,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAQ,IAAIwnF,EAAaxpD,YAC7BtO,EAAO0E,YAAYp0B,EAAMwnF,EAAaxpD,YAAYpO,6BAClDhsB,EAAIgnF,eAAe5qF,GACnB,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAASg8D,gBAAgBpqF,UAAU+vB,gBAAkB,WACzD,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAASg8D,gBAAgBl6D,wBAAwBztB,KAAMutB,GACtDA,EAAOG,mBAWhBhC,MAAMC,SAASg8D,gBAAgBl6D,wBAA0B,SAASE,EAASJ,GACzE,IAAIK,GACJA,EAAID,EAAQk6D,sBACNlpF,OAAS,GACb4uB,EAAOsF,qBACL,EACAjF,EACA82D,EAAaxpD,YAAYzN,0BAU/B/B,MAAMC,SAASg8D,gBAAgBpqF,UAAUsqF,mBAAqB,WAC5D,OACEx8D,EAAKS,QAAQuI,wBAAwBr0B,KAAM0kF,EAAaxpD,YAAa,IAKzExP,MAAMC,SAASg8D,gBAAgBpqF,UAAUwqF,mBAAqB,SAAS7qF,GACrEmuB,EAAKS,QAAQyI,wBAAwBv0B,KAAM,EAAG9C,IAShDwuB,MAAMC,SAASg8D,gBAAgBpqF,UAAUuqF,eAAiB,SAAStzD,EAAWC,GAC5E,OAAOpJ,EAAKS,QAAQ4I,0BAA0B10B,KAAM,EAAGw0B,EAAW9I,MAAMC,SAASuP,YAAazG,IAIhG/I,MAAMC,SAASg8D,gBAAgBpqF,UAAUyqF,qBAAuB,WAC9DhoF,KAAK+nF,wBAePr8D,MAAMC,SAASs8D,SAAW,SAASp8D,GACjCR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAGH,MAAMC,SAASs8D,SAAS94D,gBAAiB,OAE1F7D,EAAK/qB,SAASmrB,MAAMC,SAASs8D,SAAU58D,EAAKS,SACxCR,EAAKU,QAAUC,WACjBP,MAAMC,SAASs8D,SAAS/7D,YAAc,2BAOxCR,MAAMC,SAASs8D,SAAS94D,iBAAmB,GAIvC9D,EAAKS,QAAQK,qBAWjBT,MAAMC,SAASs8D,SAAS1qF,UAAU6uB,SAAW,SAASC,GACpD,OAAOX,MAAMC,SAASs8D,SAAS77D,SAASC,EAAqBrsB,OAa/D0rB,MAAMC,SAASs8D,SAAS77D,SAAW,SAASE,EAAiBxrB,GAC3D,IAAO8b,GACLsrE,UAAW78D,EAAKS,QAAQ0D,aAAa1uB,EAAIqnF,eACzCz8D,MAAMC,SAASy8D,KAAKh8D,SAAUE,IAMhC,OAHIA,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAASs8D,SAASt7D,kBAAoB,SAASpK,GACnD,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAASs8D,SAC7B,OAAOv8D,MAAMC,SAASs8D,SAASn7D,4BAA4BhsB,EAAK8rB,IAWlElB,MAAMC,SAASs8D,SAASn7D,4BAA8B,SAAShsB,EAAK8rB,GAClE,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAQ,IAAIwuB,MAAMC,SAASy8D,KAC/Bx7D,EAAO0E,YAAYp0B,EAAMwuB,MAAMC,SAASy8D,KAAKt7D,6BAC7ChsB,EAAIunF,SAASnrF,GACb,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAASs8D,SAAS1qF,UAAU+vB,gBAAkB,WAClD,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAASs8D,SAASx6D,wBAAwBztB,KAAMutB,GAC/CA,EAAOG,mBAWhBhC,MAAMC,SAASs8D,SAASx6D,wBAA0B,SAASE,EAASJ,GAClE,IAAIK,GACJA,EAAID,EAAQw6D,gBACNxpF,OAAS,GACb4uB,EAAOsF,qBACL,EACAjF,EACAlC,MAAMC,SAASy8D,KAAK36D,0BAU1B/B,MAAMC,SAASs8D,SAAS1qF,UAAU4qF,aAAe,WAC/C,OACE98D,EAAKS,QAAQuI,wBAAwBr0B,KAAM0rB,MAAMC,SAASy8D,KAAM,IAKpE18D,MAAMC,SAASs8D,SAAS1qF,UAAU+qF,aAAe,SAASprF,GACxDmuB,EAAKS,QAAQyI,wBAAwBv0B,KAAM,EAAG9C,IAShDwuB,MAAMC,SAASs8D,SAAS1qF,UAAU8qF,SAAW,SAAS7zD,EAAWC,GAC/D,OAAOpJ,EAAKS,QAAQ4I,0BAA0B10B,KAAM,EAAGw0B,EAAW9I,MAAMC,SAASy8D,KAAM3zD,IAIzF/I,MAAMC,SAASs8D,SAAS1qF,UAAUgrF,eAAiB,WACjDvoF,KAAKsoF,kBAeP58D,MAAMC,SAASy8D,KAAO,SAASv8D,GAC7BR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMC,SAASy8D,KAAM/8D,EAAKS,SACpCR,EAAKU,QAAUC,WACjBP,MAAMC,SAASy8D,KAAKl8D,YAAc,uBAIhCb,EAAKS,QAAQK,qBAWjBT,MAAMC,SAASy8D,KAAK7qF,UAAU6uB,SAAW,SAASC,GAChD,OAAOX,MAAMC,SAASy8D,KAAKh8D,SAASC,EAAqBrsB,OAa3D0rB,MAAMC,SAASy8D,KAAKh8D,SAAW,SAASE,EAAiBxrB,GACvD,IAAI8sB,EAAGhR,GACL4P,SAAUoB,EAAI9sB,EAAIutB,eAAiB3C,MAAMC,SAAS68D,QAAQp8D,SAASE,EAAiBsB,IAMtF,OAHItB,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAASy8D,KAAKz7D,kBAAoB,SAASpK,GAC/C,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAASy8D,KAC7B,OAAO18D,MAAMC,SAASy8D,KAAKt7D,4BAA4BhsB,EAAK8rB,IAW9DlB,MAAMC,SAASy8D,KAAKt7D,4BAA8B,SAAShsB,EAAK8rB,GAC9D,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAQ,IAAIwuB,MAAMC,SAAS68D,QAC/B57D,EAAO0E,YAAYp0B,EAAMwuB,MAAMC,SAAS68D,QAAQ17D,6BAChDhsB,EAAIssB,WAAWlwB,GACf,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAASy8D,KAAK7qF,UAAU+vB,gBAAkB,WAC9C,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAASy8D,KAAK36D,wBAAwBztB,KAAMutB,GAC3CA,EAAOG,mBAWhBhC,MAAMC,SAASy8D,KAAK36D,wBAA0B,SAASE,EAASJ,GAC9D,IAAIK,EAEK,OADTA,EAAID,EAAQU,eAEVd,EAAOyI,aACL,EACApI,EACAlC,MAAMC,SAAS68D,QAAQ/6D,0BAU7B/B,MAAMC,SAASy8D,KAAK7qF,UAAU8wB,WAAa,WACzC,OACEhD,EAAKS,QAAQoK,gBAAgBl2B,KAAM0rB,MAAMC,SAAS68D,QAAS,IAK/D98D,MAAMC,SAASy8D,KAAK7qF,UAAU6vB,WAAa,SAASlwB,GAClDmuB,EAAKS,QAAQqK,gBAAgBn2B,KAAM,EAAG9C,IAIxCwuB,MAAMC,SAASy8D,KAAK7qF,UAAUkrF,aAAe,WAC3CzoF,KAAKotB,gBAAW/tB,IAQlBqsB,MAAMC,SAASy8D,KAAK7qF,UAAUmrF,WAAa,WACzC,OAAyC,MAAlCr9D,EAAKS,QAAQwK,SAASt2B,KAAM,IAerC0rB,MAAMC,SAAS68D,QAAU,SAAS38D,GAChCR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMC,SAAS68D,QAASn9D,EAAKS,SACvCR,EAAKU,QAAUC,WACjBP,MAAMC,SAAS68D,QAAQt8D,YAAc,0BAInCb,EAAKS,QAAQK,qBAWjBT,MAAMC,SAAS68D,QAAQjrF,UAAU6uB,SAAW,SAASC,GACnD,OAAOX,MAAMC,SAAS68D,QAAQp8D,SAASC,EAAqBrsB,OAa9D0rB,MAAMC,SAAS68D,QAAQp8D,SAAW,SAASE,EAAiBxrB,GAC1D,IAAO8b,GACL+rE,KAAM7nF,EAAI8nF,gBACVC,KAAMx9D,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,IAMjD,OAHIwrB,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAAS68D,QAAQ77D,kBAAoB,SAASpK,GAClD,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAAS68D,QAC7B,OAAO98D,MAAMC,SAAS68D,QAAQ17D,4BAA4BhsB,EAAK8rB,IAWjElB,MAAMC,SAAS68D,QAAQ17D,4BAA8B,SAAShsB,EAAK8rB,GACjE,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAoC0vB,EAAOM,YAC/CpsB,EAAIgoF,QAAQ5rF,GACZ,MACF,KAAK,EACCA,EAA+B0vB,EAAOya,YAC1CvmC,EAAIioF,QAAQ7rF,GACZ,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAAS68D,QAAQjrF,UAAU+vB,gBAAkB,WACjD,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAAS68D,QAAQ/6D,wBAAwBztB,KAAMutB,GAC9CA,EAAOG,mBAWhBhC,MAAMC,SAAS68D,QAAQ/6D,wBAA0B,SAASE,EAASJ,GACjE,IAAIK,OAAIvuB,GACRuuB,EAAID,EAAQq7D,gBACNrqF,OAAS,GACb4uB,EAAOO,WACL,EACAF,GAIM,KADVA,EAAID,EAAQs7D,YAEV17D,EAAOoa,WACL,EACA/Z,IAUNlC,MAAMC,SAAS68D,QAAQjrF,UAAU2rF,QAAU,WACzC,OAA4C79D,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAAS68D,QAAQjrF,UAAUqrF,cAAgB,WAC/C,OAA8Bv9D,EAAKS,QAAQoC,WACvCluB,KAAKkpF,YAWXx9D,MAAMC,SAAS68D,QAAQjrF,UAAUyrF,aAAe,WAC9C,OAAmC39D,EAAKS,QAAQqC,UAC5CnuB,KAAKkpF,YAKXx9D,MAAMC,SAAS68D,QAAQjrF,UAAUurF,QAAU,SAAS5rF,GAClDmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAQ5CwuB,MAAMC,SAAS68D,QAAQjrF,UAAU0rF,QAAU,WACzC,OAA8B59D,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAAS68D,QAAQjrF,UAAUwrF,QAAU,SAAS7rF,GAClDmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAe1CwuB,MAAMC,SAASw9D,aAAe,SAASt9D,GACrCR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMC,SAASw9D,aAAc99D,EAAKS,SAC5CR,EAAKU,QAAUC,WACjBP,MAAMC,SAASw9D,aAAaj9D,YAAc,+BAIxCb,EAAKS,QAAQK,qBAWjBT,MAAMC,SAASw9D,aAAa5rF,UAAU6uB,SAAW,SAASC,GACxD,OAAOX,MAAMC,SAASw9D,aAAa/8D,SAASC,EAAqBrsB,OAanE0rB,MAAMC,SAASw9D,aAAa/8D,SAAW,SAASE,EAAiBxrB,GAC/D,IAAO8b,KAOP,OAHI0P,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAASw9D,aAAax8D,kBAAoB,SAASpK,GACvD,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAASw9D,aAC7B,OAAOz9D,MAAMC,SAASw9D,aAAar8D,4BAA4BhsB,EAAK8rB,IAWtElB,MAAMC,SAASw9D,aAAar8D,4BAA8B,SAAShsB,EAAK8rB,GACtE,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAIbJ,EAAOK,iBAGjBL,EAAOS,YAIX,OAAOvsB,GAQT4qB,MAAMC,SAASw9D,aAAa5rF,UAAU+vB,gBAAkB,WACtD,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAASw9D,aAAa17D,wBAAwBztB,KAAMutB,GACnDA,EAAOG,mBAWhBhC,MAAMC,SAASw9D,aAAa17D,wBAA0B,SAASE,EAASJ,KAgBxE7B,MAAMC,SAASy9D,cAAgB,SAASv9D,GACtCR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMC,SAASy9D,cAAe/9D,EAAKS,SAC7CR,EAAKU,QAAUC,WACjBP,MAAMC,SAASy9D,cAAcl9D,YAAc,gCAIzCb,EAAKS,QAAQK,qBAWjBT,MAAMC,SAASy9D,cAAc7rF,UAAU6uB,SAAW,SAASC,GACzD,OAAOX,MAAMC,SAASy9D,cAAch9D,SAASC,EAAqBrsB,OAapE0rB,MAAMC,SAASy9D,cAAch9D,SAAW,SAASE,EAAiBxrB,GAChE,IAAO8b,GACL5Y,IAAKqnB,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,IAMhD,OAHIwrB,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAASy9D,cAAcz8D,kBAAoB,SAASpK,GACxD,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAASy9D,cAC7B,OAAO19D,MAAMC,SAASy9D,cAAct8D,4BAA4BhsB,EAAK8rB,IAWvElB,MAAMC,SAASy9D,cAAct8D,4BAA8B,SAAShsB,EAAK8rB,GACvE,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAA+B0vB,EAAO+B,YAC1C7tB,EAAIuoF,OAAOnsF,GACX,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAASy9D,cAAc7rF,UAAU+vB,gBAAkB,WACvD,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAASy9D,cAAc37D,wBAAwBztB,KAAMutB,GACpDA,EAAOG,mBAWhBhC,MAAMC,SAASy9D,cAAc37D,wBAA0B,SAASE,EAASJ,GACvE,IAAIK,EAEM,KADVA,EAAID,EAAQ27D,WAEV/7D,EAAOwB,WACL,EACAnB,IAUNlC,MAAMC,SAASy9D,cAAc7rF,UAAU+rF,OAAS,WAC9C,OAA8Bj+D,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAASy9D,cAAc7rF,UAAU8rF,OAAS,SAASnsF,GACvDmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAe1CwuB,MAAMC,SAAS49D,aAAe,SAAS19D,GACrCR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMC,SAAS49D,aAAcl+D,EAAKS,SAC5CR,EAAKU,QAAUC,WACjBP,MAAMC,SAAS49D,aAAar9D,YAAc,+BAIxCb,EAAKS,QAAQK,qBAWjBT,MAAMC,SAAS49D,aAAahsF,UAAU6uB,SAAW,SAASC,GACxD,OAAOX,MAAMC,SAAS49D,aAAan9D,SAASC,EAAqBrsB,OAanE0rB,MAAMC,SAAS49D,aAAan9D,SAAW,SAASE,EAAiBxrB,GAC/D,IAAO8b,GACL1f,MAAO4D,EAAI0oF,kBAMb,OAHIl9D,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAAS49D,aAAa58D,kBAAoB,SAASpK,GACvD,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAAS49D,aAC7B,OAAO79D,MAAMC,SAAS49D,aAAaz8D,4BAA4BhsB,EAAK8rB,IAWtElB,MAAMC,SAAS49D,aAAaz8D,4BAA8B,SAAShsB,EAAK8rB,GACtE,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAoC0vB,EAAOM,YAC/CpsB,EAAIq4B,SAASj8B,GACb,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAAS49D,aAAahsF,UAAU+vB,gBAAkB,WACtD,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAAS49D,aAAa97D,wBAAwBztB,KAAMutB,GACnDA,EAAOG,mBAWhBhC,MAAMC,SAAS49D,aAAa97D,wBAA0B,SAASE,EAASJ,GACtE,IAAIK,GACJA,EAAID,EAAQ87D,iBACN9qF,OAAS,GACb4uB,EAAOO,WACL,EACAF,IAUNlC,MAAMC,SAAS49D,aAAahsF,UAAU87B,SAAW,WAC/C,OAA4ChO,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAAS49D,aAAahsF,UAAUisF,eAAiB,WACrD,OAA8Bn+D,EAAKS,QAAQoC,WACvCluB,KAAKq5B,aAWX3N,MAAMC,SAAS49D,aAAahsF,UAAUksF,cAAgB,WACpD,OAAmCp+D,EAAKS,QAAQqC,UAC5CnuB,KAAKq5B,aAKX3N,MAAMC,SAAS49D,aAAahsF,UAAU47B,SAAW,SAASj8B,GACxDmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAe5CwuB,MAAMC,SAAS+9D,YAAc,SAAS79D,GACpCR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMC,SAAS+9D,YAAar+D,EAAKS,SAC3CR,EAAKU,QAAUC,WACjBP,MAAMC,SAAS+9D,YAAYx9D,YAAc,8BAIvCb,EAAKS,QAAQK,qBAWjBT,MAAMC,SAAS+9D,YAAYnsF,UAAU6uB,SAAW,SAASC,GACvD,OAAOX,MAAMC,SAAS+9D,YAAYt9D,SAASC,EAAqBrsB,OAalE0rB,MAAMC,SAAS+9D,YAAYt9D,SAAW,SAASE,EAAiBxrB,GAC9D,IAAO8b,GACL+sE,oBAAqBt+D,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,GAC9D8oF,kBAAmBv+D,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,IAM9D,OAHIwrB,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAAS+9D,YAAY/8D,kBAAoB,SAASpK,GACtD,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAAS+9D,YAC7B,OAAOh+D,MAAMC,SAAS+9D,YAAY58D,4BAA4BhsB,EAAK8rB,IAWrElB,MAAMC,SAAS+9D,YAAY58D,4BAA8B,SAAShsB,EAAK8rB,GACrE,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAA+B0vB,EAAO+B,YAC1C7tB,EAAI+oF,uBAAuB3sF,GAC3B,MACF,KAAK,EACCA,EAA+B0vB,EAAO+B,YAC1C7tB,EAAIgpF,qBAAqB5sF,GACzB,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAAS+9D,YAAYnsF,UAAU+vB,gBAAkB,WACrD,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAAS+9D,YAAYj8D,wBAAwBztB,KAAMutB,GAClDA,EAAOG,mBAWhBhC,MAAMC,SAAS+9D,YAAYj8D,wBAA0B,SAASE,EAASJ,GACrE,IAAIK,OAAIvuB,EAEE,KADVuuB,EAAID,EAAQo8D,2BAEVx8D,EAAOwB,WACL,EACAnB,GAIM,KADVA,EAAID,EAAQq8D,yBAEVz8D,EAAOwB,WACL,EACAnB,IAUNlC,MAAMC,SAAS+9D,YAAYnsF,UAAUwsF,uBAAyB,WAC5D,OAA8B1+D,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAAS+9D,YAAYnsF,UAAUssF,uBAAyB,SAAS3sF,GACrEmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAQ1CwuB,MAAMC,SAAS+9D,YAAYnsF,UAAUysF,qBAAuB,WAC1D,OAA8B3+D,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAAS+9D,YAAYnsF,UAAUusF,qBAAuB,SAAS5sF,GACnEmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAe1CwuB,MAAMC,SAASs+D,WAAa,SAASp+D,GACnCR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMC,SAASs+D,WAAY5+D,EAAKS,SAC1CR,EAAKU,QAAUC,WACjBP,MAAMC,SAASs+D,WAAW/9D,YAAc,6BAItCb,EAAKS,QAAQK,qBAWjBT,MAAMC,SAASs+D,WAAW1sF,UAAU6uB,SAAW,SAASC,GACtD,OAAOX,MAAMC,SAASs+D,WAAW79D,SAASC,EAAqBrsB,OAajE0rB,MAAMC,SAASs+D,WAAW79D,SAAW,SAASE,EAAiBxrB,GAC7D,IAAO8b,GACLstE,SAAU7+D,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,GACnDqpF,OAAQ9+D,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,IAMnD,OAHIwrB,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAASs+D,WAAWt9D,kBAAoB,SAASpK,GACrD,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAASs+D,WAC7B,OAAOv+D,MAAMC,SAASs+D,WAAWn9D,4BAA4BhsB,EAAK8rB,IAWpElB,MAAMC,SAASs+D,WAAWn9D,4BAA8B,SAAShsB,EAAK8rB,GACpE,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAA+B0vB,EAAO+B,YAC1C7tB,EAAIspF,YAAYltF,GAChB,MACF,KAAK,EACCA,EAA+B0vB,EAAO+B,YAC1C7tB,EAAIupF,UAAUntF,GACd,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAASs+D,WAAW1sF,UAAU+vB,gBAAkB,WACpD,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAASs+D,WAAWx8D,wBAAwBztB,KAAMutB,GACjDA,EAAOG,mBAWhBhC,MAAMC,SAASs+D,WAAWx8D,wBAA0B,SAASE,EAASJ,GACpE,IAAIK,OAAIvuB,EAEE,KADVuuB,EAAID,EAAQ28D,gBAEV/8D,EAAOwB,WACL,EACAnB,GAIM,KADVA,EAAID,EAAQ48D,cAEVh9D,EAAOwB,WACL,EACAnB,IAUNlC,MAAMC,SAASs+D,WAAW1sF,UAAU+sF,YAAc,WAChD,OAA8Bj/D,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAASs+D,WAAW1sF,UAAU6sF,YAAc,SAASltF,GACzDmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAQ1CwuB,MAAMC,SAASs+D,WAAW1sF,UAAUgtF,UAAY,WAC9C,OAA8Bl/D,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAASs+D,WAAW1sF,UAAU8sF,UAAY,SAASntF,GACvDmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAe1CwuB,MAAMC,SAAS6+D,iBAAmB,SAAS3+D,GACzCR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMC,SAAS6+D,iBAAkBn/D,EAAKS,SAChDR,EAAKU,QAAUC,WACjBP,MAAMC,SAAS6+D,iBAAiBt+D,YAAc,mCAI5Cb,EAAKS,QAAQK,qBAWjBT,MAAMC,SAAS6+D,iBAAiBjtF,UAAU6uB,SAAW,SAASC,GAC5D,OAAOX,MAAMC,SAAS6+D,iBAAiBp+D,SAASC,EAAqBrsB,OAavE0rB,MAAMC,SAAS6+D,iBAAiBp+D,SAAW,SAASE,EAAiBxrB,GACnE,IAAO8b,GACL6tE,cAAe3pF,EAAI4pF,yBACnBC,SAAUt/D,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,IAMrD,OAHIwrB,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAAS6+D,iBAAiB79D,kBAAoB,SAASpK,GAC3D,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAAS6+D,iBAC7B,OAAO9+D,MAAMC,SAAS6+D,iBAAiB19D,4BAA4BhsB,EAAK8rB,IAW1ElB,MAAMC,SAAS6+D,iBAAiB19D,4BAA8B,SAAShsB,EAAK8rB,GAC1E,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAoC0vB,EAAOM,YAC/CpsB,EAAI8pF,iBAAiB1tF,GACrB,MACF,KAAK,EACCA,EAA+B0vB,EAAO+B,YAC1C7tB,EAAI+pF,YAAY3tF,GAChB,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAAS6+D,iBAAiBjtF,UAAU+vB,gBAAkB,WAC1D,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAAS6+D,iBAAiB/8D,wBAAwBztB,KAAMutB,GACvDA,EAAOG,mBAWhBhC,MAAMC,SAAS6+D,iBAAiB/8D,wBAA0B,SAASE,EAASJ,GAC1E,IAAIK,OAAIvuB,GACRuuB,EAAID,EAAQm9D,yBACNnsF,OAAS,GACb4uB,EAAOO,WACL,EACAF,GAIM,KADVA,EAAID,EAAQo9D,gBAEVx9D,EAAOwB,WACL,EACAnB,IAUNlC,MAAMC,SAAS6+D,iBAAiBjtF,UAAUytF,iBAAmB,WAC3D,OAA4C3/D,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAAS6+D,iBAAiBjtF,UAAUmtF,uBAAyB,WACjE,OAA8Br/D,EAAKS,QAAQoC,WACvCluB,KAAKgrF,qBAWXt/D,MAAMC,SAAS6+D,iBAAiBjtF,UAAUutF,sBAAwB,WAChE,OAAmCz/D,EAAKS,QAAQqC,UAC5CnuB,KAAKgrF,qBAKXt/D,MAAMC,SAAS6+D,iBAAiBjtF,UAAUqtF,iBAAmB,SAAS1tF,GACpEmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAQ5CwuB,MAAMC,SAAS6+D,iBAAiBjtF,UAAUwtF,YAAc,WACtD,OAA8B1/D,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAAS6+D,iBAAiBjtF,UAAUstF,YAAc,SAAS3tF,GAC/DmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAe1CwuB,MAAMC,SAASs/D,iBAAmB,SAASp/D,GACzCR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMC,SAASs/D,iBAAkB5/D,EAAKS,SAChDR,EAAKU,QAAUC,WACjBP,MAAMC,SAASs/D,iBAAiB/+D,YAAc,mCAI5Cb,EAAKS,QAAQK,qBAWjBT,MAAMC,SAASs/D,iBAAiB1tF,UAAU6uB,SAAW,SAASC,GAC5D,OAAOX,MAAMC,SAASs/D,iBAAiB7+D,SAASC,EAAqBrsB,OAavE0rB,MAAMC,SAASs/D,iBAAiB7+D,SAAW,SAASE,EAAiBxrB,GACnE,IAAI8sB,EAAGhR,GACL8Y,SAAU9H,EAAI9sB,EAAI60B,eAAiB+uD,EAAax1D,QAAQ9C,SAASE,EAAiBsB,GAClFnP,OAAQ4M,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,GACjD+jB,MAAOwG,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,IAMlD,OAHIwrB,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAASs/D,iBAAiBt+D,kBAAoB,SAASpK,GAC3D,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAASs/D,iBAC7B,OAAOv/D,MAAMC,SAASs/D,iBAAiBn+D,4BAA4BhsB,EAAK8rB,IAW1ElB,MAAMC,SAASs/D,iBAAiBn+D,4BAA8B,SAAShsB,EAAK8rB,GAC1E,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAQ,IAAIwnF,EAAax1D,QAC7BtC,EAAO0E,YAAYp0B,EAAMwnF,EAAax1D,QAAQpC,6BAC9ChsB,EAAIg1B,WAAW54B,GACf,MACF,KAAK,EACCA,EAA+B0vB,EAAO+B,YAC1C7tB,EAAIoqF,UAAUhuF,GACd,MACF,KAAK,EACCA,EAA+B0vB,EAAO+B,YAC1C7tB,EAAIqqF,SAASjuF,GACb,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAASs/D,iBAAiB1tF,UAAU+vB,gBAAkB,WAC1D,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAASs/D,iBAAiBx9D,wBAAwBztB,KAAMutB,GACvDA,EAAOG,mBAWhBhC,MAAMC,SAASs/D,iBAAiBx9D,wBAA0B,SAASE,EAASJ,GAC1E,IAAIK,OAAIvuB,EAEC,OADTuuB,EAAID,EAAQgI,eAEVpI,EAAOyI,aACL,EACApI,EACA82D,EAAax1D,QAAQzB,yBAIf,KADVG,EAAID,EAAQy9D,cAEV79D,EAAOwB,WACL,EACAnB,GAIM,KADVA,EAAID,EAAQ09D,aAEV99D,EAAOwB,WACL,EACAnB,IAUNlC,MAAMC,SAASs/D,iBAAiB1tF,UAAUo4B,WAAa,WACrD,OACEtK,EAAKS,QAAQoK,gBAAgBl2B,KAAM0kF,EAAax1D,QAAS,IAK7DxD,MAAMC,SAASs/D,iBAAiB1tF,UAAUu4B,WAAa,SAAS54B,GAC9DmuB,EAAKS,QAAQqK,gBAAgBn2B,KAAM,EAAG9C,IAIxCwuB,MAAMC,SAASs/D,iBAAiB1tF,UAAU64B,aAAe,WACvDp2B,KAAK81B,gBAAWz2B,IAQlBqsB,MAAMC,SAASs/D,iBAAiB1tF,UAAU84B,WAAa,WACrD,OAAyC,MAAlChL,EAAKS,QAAQwK,SAASt2B,KAAM,IAQrC0rB,MAAMC,SAASs/D,iBAAiB1tF,UAAU6tF,UAAY,WACpD,OAA8B//D,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAASs/D,iBAAiB1tF,UAAU2tF,UAAY,SAAShuF,GAC7DmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAQ1CwuB,MAAMC,SAASs/D,iBAAiB1tF,UAAU8tF,SAAW,WACnD,OAA8BhgE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAASs/D,iBAAiB1tF,UAAU4tF,SAAW,SAASjuF,GAC5DmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAe1CwuB,MAAMC,SAAS2/D,qBAAuB,SAASz/D,GAC7CR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMC,SAAS2/D,qBAAsBjgE,EAAKS,SACpDR,EAAKU,QAAUC,WACjBP,MAAMC,SAAS2/D,qBAAqBp/D,YAAc,uCAIhDb,EAAKS,QAAQK,qBAWjBT,MAAMC,SAAS2/D,qBAAqB/tF,UAAU6uB,SAAW,SAASC,GAChE,OAAOX,MAAMC,SAAS2/D,qBAAqBl/D,SAASC,EAAqBrsB,OAa3E0rB,MAAMC,SAAS2/D,qBAAqBl/D,SAAW,SAASE,EAAiBxrB,GACvE,IAAI8sB,EAAGhR,GACL2uE,aAAc39D,EAAI9sB,EAAI0qF,mBAAqB9/D,MAAMC,SAAS+9D,YAAYt9D,SAASE,EAAiBsB,GAChGnP,OAAQ4M,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,GACjD+jB,MAAOwG,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,IAMlD,OAHIwrB,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAAS2/D,qBAAqB3+D,kBAAoB,SAASpK,GAC/D,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAAS2/D,qBAC7B,OAAO5/D,MAAMC,SAAS2/D,qBAAqBx+D,4BAA4BhsB,EAAK8rB,IAW9ElB,MAAMC,SAAS2/D,qBAAqBx+D,4BAA8B,SAAShsB,EAAK8rB,GAC9E,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAQ,IAAIwuB,MAAMC,SAAS+9D,YAC/B98D,EAAO0E,YAAYp0B,EAAMwuB,MAAMC,SAAS+9D,YAAY58D,6BACpDhsB,EAAI2qF,eAAevuF,GACnB,MACF,KAAK,EACCA,EAA+B0vB,EAAO+B,YAC1C7tB,EAAIoqF,UAAUhuF,GACd,MACF,KAAK,EACCA,EAA+B0vB,EAAO+B,YAC1C7tB,EAAIqqF,SAASjuF,GACb,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAAS2/D,qBAAqB/tF,UAAU+vB,gBAAkB,WAC9D,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAAS2/D,qBAAqB79D,wBAAwBztB,KAAMutB,GAC3DA,EAAOG,mBAWhBhC,MAAMC,SAAS2/D,qBAAqB79D,wBAA0B,SAASE,EAASJ,GAC9E,IAAIK,OAAIvuB,EAEC,OADTuuB,EAAID,EAAQ69D,mBAEVj+D,EAAOyI,aACL,EACApI,EACAlC,MAAMC,SAAS+9D,YAAYj8D,yBAIrB,KADVG,EAAID,EAAQy9D,cAEV79D,EAAOwB,WACL,EACAnB,GAIM,KADVA,EAAID,EAAQ09D,aAEV99D,EAAOwB,WACL,EACAnB,IAUNlC,MAAMC,SAAS2/D,qBAAqB/tF,UAAUiuF,eAAiB,WAC7D,OACEngE,EAAKS,QAAQoK,gBAAgBl2B,KAAM0rB,MAAMC,SAAS+9D,YAAa,IAKnEh+D,MAAMC,SAAS2/D,qBAAqB/tF,UAAUkuF,eAAiB,SAASvuF,GACtEmuB,EAAKS,QAAQqK,gBAAgBn2B,KAAM,EAAG9C,IAIxCwuB,MAAMC,SAAS2/D,qBAAqB/tF,UAAUmuF,iBAAmB,WAC/D1rF,KAAKyrF,oBAAepsF,IAQtBqsB,MAAMC,SAAS2/D,qBAAqB/tF,UAAUouF,eAAiB,WAC7D,OAAyC,MAAlCtgE,EAAKS,QAAQwK,SAASt2B,KAAM,IAQrC0rB,MAAMC,SAAS2/D,qBAAqB/tF,UAAU6tF,UAAY,WACxD,OAA8B//D,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAAS2/D,qBAAqB/tF,UAAU2tF,UAAY,SAAShuF,GACjEmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAQ1CwuB,MAAMC,SAAS2/D,qBAAqB/tF,UAAU8tF,SAAW,WACvD,OAA8BhgE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAAS2/D,qBAAqB/tF,UAAU4tF,SAAW,SAASjuF,GAChEmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAe1CwuB,MAAMC,SAASigE,kBAAoB,SAAS//D,GAC1CR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMC,SAASigE,kBAAmBvgE,EAAKS,SACjDR,EAAKU,QAAUC,WACjBP,MAAMC,SAASigE,kBAAkB1/D,YAAc,oCAI7Cb,EAAKS,QAAQK,qBAWjBT,MAAMC,SAASigE,kBAAkBruF,UAAU6uB,SAAW,SAASC,GAC7D,OAAOX,MAAMC,SAASigE,kBAAkBx/D,SAASC,EAAqBrsB,OAaxE0rB,MAAMC,SAASigE,kBAAkBx/D,SAAW,SAASE,EAAiBxrB,GACpE,IAAI8sB,EAAGhR,GACLivE,YAAaxgE,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,GACtDgrF,aAAczgE,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,GACvDirF,QAAS1gE,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,GAClDkrF,SAAU3gE,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,GACnDmrF,iBAAkBr+D,EAAI9sB,EAAIorF,sBAAwBt+D,EAAExB,SAASE,OAAiBjtB,MAC9E8sF,kBAAmBv+D,EAAI9sB,EAAIsrF,uBAAyBx+D,EAAExB,SAASE,OAAiBjtB,OAMlF,OAHIitB,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAASigE,kBAAkBj/D,kBAAoB,SAASpK,GAC5D,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAASigE,kBAC7B,OAAOlgE,MAAMC,SAASigE,kBAAkB9+D,4BAA4BhsB,EAAK8rB,IAW3ElB,MAAMC,SAASigE,kBAAkB9+D,4BAA8B,SAAShsB,EAAK8rB,GAC3E,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAA+B0vB,EAAO+B,YAC1C7tB,EAAIurF,eAAenvF,GACnB,MACF,KAAK,EACCA,EAA+B0vB,EAAO+B,YAC1C7tB,EAAIwrF,gBAAgBpvF,GACpB,MACF,KAAK,EACCA,EAA+B0vB,EAAO+B,YAC1C7tB,EAAIyrF,WAAWrvF,GACf,MACF,KAAK,EACCA,EAA+B0vB,EAAO+B,YAC1C7tB,EAAI0rF,YAAYtvF,GAChB,MACF,KAAK,EACCA,EAAQ4D,EAAIorF,qBAChBt/D,EAAO0E,YAAYp0B,EAAO,SAASywB,EAASf,GAC1CvB,EAAKmG,IAAI7E,kBAAkBgB,EAASf,EAAQvB,EAAKwB,aAAatvB,UAAUk0B,WAAYpG,EAAKwB,aAAatvB,UAAUoxB,aAElH,MACF,KAAK,EACCzxB,EAAQ4D,EAAIsrF,sBAChBx/D,EAAO0E,YAAYp0B,EAAO,SAASywB,EAASf,GAC1CvB,EAAKmG,IAAI7E,kBAAkBgB,EAASf,EAAQvB,EAAKwB,aAAatvB,UAAUk0B,WAAYpG,EAAKwB,aAAatvB,UAAUoxB,aAElH,MACF,QACE/B,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAASigE,kBAAkBruF,UAAU+vB,gBAAkB,WAC3D,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAASigE,kBAAkBn+D,wBAAwBztB,KAAMutB,GACxDA,EAAOG,mBAWhBhC,MAAMC,SAASigE,kBAAkBn+D,wBAA0B,SAASE,EAASJ,GAC3E,IAAIK,OAAIvuB,EAEE,KADVuuB,EAAID,EAAQ8+D,mBAEVl/D,EAAOwB,WACL,EACAnB,GAIM,KADVA,EAAID,EAAQ++D,oBAEVn/D,EAAOwB,WACL,EACAnB,GAIM,KADVA,EAAID,EAAQg/D,eAEVp/D,EAAOwB,WACL,EACAnB,GAIM,KADVA,EAAID,EAAQi/D,gBAEVr/D,EAAOwB,WACL,EACAnB,IAGJA,EAAID,EAAQu+D,oBAAmB,KACtBt+D,EAAEkF,YAAc,GACvBlF,EAAEN,gBAAgB,EAAGC,EAAQlC,EAAKmC,aAAajwB,UAAUw1B,YAAa1H,EAAKmC,aAAajwB,UAAUwxB,aAEpGnB,EAAID,EAAQy+D,qBAAoB,KACvBx+D,EAAEkF,YAAc,GACvBlF,EAAEN,gBAAgB,EAAGC,EAAQlC,EAAKmC,aAAajwB,UAAUw1B,YAAa1H,EAAKmC,aAAajwB,UAAUwxB,aAStGrD,MAAMC,SAASigE,kBAAkBruF,UAAUkvF,eAAiB,WAC1D,OAA8BphE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAASigE,kBAAkBruF,UAAU8uF,eAAiB,SAASnvF,GACnEmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAQ1CwuB,MAAMC,SAASigE,kBAAkBruF,UAAUmvF,gBAAkB,WAC3D,OAA8BrhE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAASigE,kBAAkBruF,UAAU+uF,gBAAkB,SAASpvF,GACpEmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAQ1CwuB,MAAMC,SAASigE,kBAAkBruF,UAAUovF,WAAa,WACtD,OAA8BthE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAASigE,kBAAkBruF,UAAUgvF,WAAa,SAASrvF,GAC/DmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAQ1CwuB,MAAMC,SAASigE,kBAAkBruF,UAAUqvF,YAAc,WACvD,OAA8BvhE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAASigE,kBAAkBruF,UAAUivF,YAAc,SAAStvF,GAChEmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAU1CwuB,MAAMC,SAASigE,kBAAkBruF,UAAU2uF,mBAAqB,SAASt3D,GACvE,OACIvJ,EAAKS,QAAQ+I,YAAY70B,KAAM,EAAG40B,EAClC,OAINlJ,MAAMC,SAASigE,kBAAkBruF,UAAUsvF,qBAAuB,WAChE7sF,KAAKksF,qBAAqBn3D,SAU5BrJ,MAAMC,SAASigE,kBAAkBruF,UAAU6uF,oBAAsB,SAASx3D,GACxE,OACIvJ,EAAKS,QAAQ+I,YAAY70B,KAAM,EAAG40B,EAClC,OAINlJ,MAAMC,SAASigE,kBAAkBruF,UAAUuvF,sBAAwB,WACjE9sF,KAAKosF,sBAAsBr3D,SAI7BzJ,EAAKjuB,OAAO2sC,OAAOhuC,EAAS0vB,MAAMC,2BChvGlC,IAAIN,EAAOvvB,EAAQ,IACfwvB,EAAOD,EACP7P,EAASvb,SAAS,cAATA,GAEMnE,EAAQ,IAC3BwvB,EAAKG,aAAa,uCAAwC,KAAMjQ,GAChE8P,EAAKG,aAAa,uCAAwC,KAAMjQ,GAChE8P,EAAKG,aAAa,oCAAqC,KAAMjQ,GAC7D8P,EAAKG,aAAa,iDAAkD,KAAMjQ,GAC1E8P,EAAKG,aAAa,gCAAiC,KAAMjQ,GACzD8P,EAAKG,aAAa,uCAAwC,KAAMjQ,GAChE8P,EAAKG,aAAa,+CAAgD,KAAMjQ,GACxE8P,EAAKG,aAAa,uCAAwC,KAAMjQ,GAChE8P,EAAKG,aAAa,kCAAmC,KAAMjQ,GAC3D8P,EAAKG,aAAa,uCAAwC,KAAMjQ,GAChE8P,EAAKG,aAAa,yCAA0C,KAAMjQ,GAClE8P,EAAKG,aAAa,qCAAsC,KAAMjQ,GAC9D8P,EAAKG,aAAa,mCAAoC,KAAMjQ,GAC5D8P,EAAKG,aAAa,qCAAsC,KAAMjQ,GAC9D8P,EAAKG,aAAa,0CAA2C,KAAMjQ,GACnE8P,EAAKG,aAAa,yCAA0C,KAAMjQ,GAClE8P,EAAKG,aAAa,uCAAwC,KAAMjQ,GAChE8P,EAAKG,aAAa,uCAAwC,KAAMjQ,GAYhEkQ,MAAMC,SAASohE,sBAAwB,SAASlhE,GAC9CR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMC,SAASohE,sBAAuB1hE,EAAKS,SACrDR,EAAKU,QAAUC,WACjBP,MAAMC,SAASohE,sBAAsB7gE,YAAc,wCAIjDb,EAAKS,QAAQK,qBAWjBT,MAAMC,SAASohE,sBAAsBxvF,UAAU6uB,SAAW,SAASC,GACjE,OAAOX,MAAMC,SAASohE,sBAAsB3gE,SAASC,EAAqBrsB,OAa5E0rB,MAAMC,SAASohE,sBAAsB3gE,SAAW,SAASE,EAAiBxrB,GACxE,IAAO8b,GACLG,KAAMsO,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,GAC/CsuB,YAAatuB,EAAIuuB,uBACjB29D,aAAclsF,EAAImsF,yBAMpB,OAHI3gE,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAASohE,sBAAsBpgE,kBAAoB,SAASpK,GAChE,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAASohE,sBAC7B,OAAOrhE,MAAMC,SAASohE,sBAAsBjgE,4BAA4BhsB,EAAK8rB,IAW/ElB,MAAMC,SAASohE,sBAAsBjgE,4BAA8B,SAAShsB,EAAK8rB,GAC/E,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAoD0vB,EAAOuE,WAC/DrwB,EAAIswB,QAAQl0B,GACZ,MACF,KAAK,EACCA,EAAoC0vB,EAAOM,YAC/CpsB,EAAIowB,eAAeh0B,GACnB,MACF,KAAK,EACCA,EAAoC0vB,EAAOM,YAC/CpsB,EAAIosF,gBAAgBhwF,GACpB,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAASohE,sBAAsBxvF,UAAU+vB,gBAAkB,WAC/D,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAASohE,sBAAsBt/D,wBAAwBztB,KAAMutB,GAC5DA,EAAOG,mBAWhBhC,MAAMC,SAASohE,sBAAsBt/D,wBAA0B,SAASE,EAASJ,GAC/E,IAAIK,OAAIvuB,EAEE,KADVuuB,EAAID,EAAQ+E,YAEVnF,EAAOoF,UACL,EACA/E,IAGJA,EAAID,EAAQ8E,uBACN9zB,OAAS,GACb4uB,EAAOO,WACL,EACAF,IAGJA,EAAID,EAAQw/D,wBACNxuF,OAAS,GACb4uB,EAAOO,WACL,EACAF,IAUNlC,MAAMC,SAASohE,sBAAsBxvF,UAAUm1B,QAAU,WACvD,OAAmDrH,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK/F0rB,MAAMC,SAASohE,sBAAsBxvF,UAAU6zB,QAAU,SAASl0B,GAChEmuB,EAAKS,QAAQsI,mBAAmBp0B,KAAM,EAAG9C,IAQ3CwuB,MAAMC,SAASohE,sBAAsBxvF,UAAU42B,eAAiB,WAC9D,OAA4C9I,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAASohE,sBAAsBxvF,UAAU8xB,qBAAuB,WACpE,OAA8BhE,EAAKS,QAAQoC,WACvCluB,KAAKm0B,mBAWXzI,MAAMC,SAASohE,sBAAsBxvF,UAAUk1B,oBAAsB,WACnE,OAAmCpH,EAAKS,QAAQqC,UAC5CnuB,KAAKm0B,mBAKXzI,MAAMC,SAASohE,sBAAsBxvF,UAAU2zB,eAAiB,SAASh0B,GACvEmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAQ5CwuB,MAAMC,SAASohE,sBAAsBxvF,UAAU6vF,gBAAkB,WAC/D,OAA4C/hE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAASohE,sBAAsBxvF,UAAU0vF,sBAAwB,WACrE,OAA8B5hE,EAAKS,QAAQoC,WACvCluB,KAAKotF,oBAWX1hE,MAAMC,SAASohE,sBAAsBxvF,UAAU4vF,qBAAuB,WACpE,OAAmC9hE,EAAKS,QAAQqC,UAC5CnuB,KAAKotF,oBAKX1hE,MAAMC,SAASohE,sBAAsBxvF,UAAU2vF,gBAAkB,SAAShwF,GACxEmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAe5CwuB,MAAMC,SAAS0hE,sBAAwB,SAASxhE,GAC9CR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMC,SAAS0hE,sBAAuBhiE,EAAKS,SACrDR,EAAKU,QAAUC,WACjBP,MAAMC,SAAS0hE,sBAAsBnhE,YAAc,wCAIjDb,EAAKS,QAAQK,qBAWjBT,MAAMC,SAAS0hE,sBAAsB9vF,UAAU6uB,SAAW,SAASC,GACjE,OAAOX,MAAMC,SAAS0hE,sBAAsBjhE,SAASC,EAAqBrsB,OAa5E0rB,MAAMC,SAAS0hE,sBAAsBjhE,SAAW,SAASE,EAAiBxrB,GACxE,IAAO8b,GACLwS,YAAatuB,EAAIuuB,uBACjB29D,aAAclsF,EAAImsF,yBAMpB,OAHI3gE,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAAS0hE,sBAAsB1gE,kBAAoB,SAASpK,GAChE,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAAS0hE,sBAC7B,OAAO3hE,MAAMC,SAAS0hE,sBAAsBvgE,4BAA4BhsB,EAAK8rB,IAW/ElB,MAAMC,SAAS0hE,sBAAsBvgE,4BAA8B,SAAShsB,EAAK8rB,GAC/E,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAoC0vB,EAAOM,YAC/CpsB,EAAIowB,eAAeh0B,GACnB,MACF,KAAK,EACCA,EAAoC0vB,EAAOM,YAC/CpsB,EAAIosF,gBAAgBhwF,GACpB,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAAS0hE,sBAAsB9vF,UAAU+vB,gBAAkB,WAC/D,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAAS0hE,sBAAsB5/D,wBAAwBztB,KAAMutB,GAC5DA,EAAOG,mBAWhBhC,MAAMC,SAAS0hE,sBAAsB5/D,wBAA0B,SAASE,EAASJ,GAC/E,IAAIK,OAAIvuB,GACRuuB,EAAID,EAAQ8E,uBACN9zB,OAAS,GACb4uB,EAAOO,WACL,EACAF,IAGJA,EAAID,EAAQw/D,wBACNxuF,OAAS,GACb4uB,EAAOO,WACL,EACAF,IAUNlC,MAAMC,SAAS0hE,sBAAsB9vF,UAAU42B,eAAiB,WAC9D,OAA4C9I,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAAS0hE,sBAAsB9vF,UAAU8xB,qBAAuB,WACpE,OAA8BhE,EAAKS,QAAQoC,WACvCluB,KAAKm0B,mBAWXzI,MAAMC,SAAS0hE,sBAAsB9vF,UAAUk1B,oBAAsB,WACnE,OAAmCpH,EAAKS,QAAQqC,UAC5CnuB,KAAKm0B,mBAKXzI,MAAMC,SAAS0hE,sBAAsB9vF,UAAU2zB,eAAiB,SAASh0B,GACvEmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAQ5CwuB,MAAMC,SAAS0hE,sBAAsB9vF,UAAU6vF,gBAAkB,WAC/D,OAA4C/hE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAAS0hE,sBAAsB9vF,UAAU0vF,sBAAwB,WACrE,OAA8B5hE,EAAKS,QAAQoC,WACvCluB,KAAKotF,oBAWX1hE,MAAMC,SAAS0hE,sBAAsB9vF,UAAU4vF,qBAAuB,WACpE,OAAmC9hE,EAAKS,QAAQqC,UAC5CnuB,KAAKotF,oBAKX1hE,MAAMC,SAAS0hE,sBAAsB9vF,UAAU2vF,gBAAkB,SAAShwF,GACxEmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAe5CwuB,MAAMC,SAAS2hE,iBAAmB,SAASzhE,GACzCR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMC,SAAS2hE,iBAAkBjiE,EAAKS,SAChDR,EAAKU,QAAUC,WACjBP,MAAMC,SAAS2hE,iBAAiBphE,YAAc,mCAI5Cb,EAAKS,QAAQK,qBAWjBT,MAAMC,SAAS2hE,iBAAiB/vF,UAAU6uB,SAAW,SAASC,GAC5D,OAAOX,MAAMC,SAAS2hE,iBAAiBlhE,SAASC,EAAqBrsB,OAavE0rB,MAAMC,SAAS2hE,iBAAiBlhE,SAAW,SAASE,EAAiBxrB,GACnE,IAAO8b,GACLowE,aAAclsF,EAAImsF,wBAClBM,UAAWzsF,EAAI0sF,qBACfC,OAAQpiE,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,IAMnD,OAHIwrB,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAAS2hE,iBAAiB3gE,kBAAoB,SAASpK,GAC3D,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAAS2hE,iBAC7B,OAAO5hE,MAAMC,SAAS2hE,iBAAiBxgE,4BAA4BhsB,EAAK8rB,IAW1ElB,MAAMC,SAAS2hE,iBAAiBxgE,4BAA8B,SAAShsB,EAAK8rB,GAC1E,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAoC0vB,EAAOM,YAC/CpsB,EAAIosF,gBAAgBhwF,GACpB,MACF,KAAK,EACCA,EAAoC0vB,EAAOM,YAC/CpsB,EAAI4sF,aAAaxwF,GACjB,MACF,KAAK,EACCA,EAA+B0vB,EAAO+B,YAC1C7tB,EAAI6sF,UAAUzwF,GACd,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAAS2hE,iBAAiB/vF,UAAU+vB,gBAAkB,WAC1D,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAAS2hE,iBAAiB7/D,wBAAwBztB,KAAMutB,GACvDA,EAAOG,mBAWhBhC,MAAMC,SAAS2hE,iBAAiB7/D,wBAA0B,SAASE,EAASJ,GAC1E,IAAIK,OAAIvuB,GACRuuB,EAAID,EAAQw/D,wBACNxuF,OAAS,GACb4uB,EAAOO,WACL,EACAF,IAGJA,EAAID,EAAQigE,qBACNjvF,OAAS,GACb4uB,EAAOO,WACL,EACAF,GAIM,KADVA,EAAID,EAAQkgE,cAEVtgE,EAAOwB,WACL,EACAnB,IAUNlC,MAAMC,SAAS2hE,iBAAiB/vF,UAAU6vF,gBAAkB,WAC1D,OAA4C/hE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAAS2hE,iBAAiB/vF,UAAU0vF,sBAAwB,WAChE,OAA8B5hE,EAAKS,QAAQoC,WACvCluB,KAAKotF,oBAWX1hE,MAAMC,SAAS2hE,iBAAiB/vF,UAAU4vF,qBAAuB,WAC/D,OAAmC9hE,EAAKS,QAAQqC,UAC5CnuB,KAAKotF,oBAKX1hE,MAAMC,SAAS2hE,iBAAiB/vF,UAAU2vF,gBAAkB,SAAShwF,GACnEmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAQ5CwuB,MAAMC,SAAS2hE,iBAAiB/vF,UAAUuwF,aAAe,WACvD,OAA4CziE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAAS2hE,iBAAiB/vF,UAAUiwF,mBAAqB,WAC7D,OAA8BniE,EAAKS,QAAQoC,WACvCluB,KAAK8tF,iBAWXpiE,MAAMC,SAAS2hE,iBAAiB/vF,UAAUqwF,kBAAoB,WAC5D,OAAmCviE,EAAKS,QAAQqC,UAC5CnuB,KAAK8tF,iBAKXpiE,MAAMC,SAAS2hE,iBAAiB/vF,UAAUmwF,aAAe,SAASxwF,GAChEmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAQ5CwuB,MAAMC,SAAS2hE,iBAAiB/vF,UAAUswF,UAAY,WACpD,OAA8BxiE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAAS2hE,iBAAiB/vF,UAAUowF,UAAY,SAASzwF,GAC7DmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAe1CwuB,MAAMC,SAASoiE,sBAAwB,SAASliE,GAC9CR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMC,SAASoiE,sBAAuB1iE,EAAKS,SACrDR,EAAKU,QAAUC,WACjBP,MAAMC,SAASoiE,sBAAsB7hE,YAAc,wCAIjDb,EAAKS,QAAQK,qBAWjBT,MAAMC,SAASoiE,sBAAsBxwF,UAAU6uB,SAAW,SAASC,GACjE,OAAOX,MAAMC,SAASoiE,sBAAsB3hE,SAASC,EAAqBrsB,OAa5E0rB,MAAMC,SAASoiE,sBAAsB3hE,SAAW,SAASE,EAAiBxrB,GACxE,IAAO8b,GACLoxE,UAAWltF,EAAImtF,qBACfjB,aAAclsF,EAAImsF,wBAClBM,UAAWzsF,EAAI0sF,qBACfC,OAAQpiE,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,IAMnD,OAHIwrB,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAASoiE,sBAAsBphE,kBAAoB,SAASpK,GAChE,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAASoiE,sBAC7B,OAAOriE,MAAMC,SAASoiE,sBAAsBjhE,4BAA4BhsB,EAAK8rB,IAW/ElB,MAAMC,SAASoiE,sBAAsBjhE,4BAA8B,SAAShsB,EAAK8rB,GAC/E,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAoC0vB,EAAOM,YAC/CpsB,EAAIotF,aAAahxF,GACjB,MACF,KAAK,EACCA,EAAoC0vB,EAAOM,YAC/CpsB,EAAIosF,gBAAgBhwF,GACpB,MACF,KAAK,EACCA,EAAoC0vB,EAAOM,YAC/CpsB,EAAI4sF,aAAaxwF,GACjB,MACF,KAAK,EACCA,EAA+B0vB,EAAO+B,YAC1C7tB,EAAI6sF,UAAUzwF,GACd,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAASoiE,sBAAsBxwF,UAAU+vB,gBAAkB,WAC/D,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAASoiE,sBAAsBtgE,wBAAwBztB,KAAMutB,GAC5DA,EAAOG,mBAWhBhC,MAAMC,SAASoiE,sBAAsBtgE,wBAA0B,SAASE,EAASJ,GAC/E,IAAIK,OAAIvuB,GACRuuB,EAAID,EAAQwgE,qBACNxvF,OAAS,GACb4uB,EAAOO,WACL,EACAF,IAGJA,EAAID,EAAQw/D,wBACNxuF,OAAS,GACb4uB,EAAOO,WACL,EACAF,IAGJA,EAAID,EAAQigE,qBACNjvF,OAAS,GACb4uB,EAAOO,WACL,EACAF,GAIM,KADVA,EAAID,EAAQkgE,cAEVtgE,EAAOwB,WACL,EACAnB,IAUNlC,MAAMC,SAASoiE,sBAAsBxwF,UAAU6wF,aAAe,WAC5D,OAA4C/iE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAASoiE,sBAAsBxwF,UAAU0wF,mBAAqB,WAClE,OAA8B5iE,EAAKS,QAAQoC,WACvCluB,KAAKouF,iBAWX1iE,MAAMC,SAASoiE,sBAAsBxwF,UAAU4wF,kBAAoB,WACjE,OAAmC9iE,EAAKS,QAAQqC,UAC5CnuB,KAAKouF,iBAKX1iE,MAAMC,SAASoiE,sBAAsBxwF,UAAU2wF,aAAe,SAAShxF,GACrEmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAQ5CwuB,MAAMC,SAASoiE,sBAAsBxwF,UAAU6vF,gBAAkB,WAC/D,OAA4C/hE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAASoiE,sBAAsBxwF,UAAU0vF,sBAAwB,WACrE,OAA8B5hE,EAAKS,QAAQoC,WACvCluB,KAAKotF,oBAWX1hE,MAAMC,SAASoiE,sBAAsBxwF,UAAU4vF,qBAAuB,WACpE,OAAmC9hE,EAAKS,QAAQqC,UAC5CnuB,KAAKotF,oBAKX1hE,MAAMC,SAASoiE,sBAAsBxwF,UAAU2vF,gBAAkB,SAAShwF,GACxEmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAQ5CwuB,MAAMC,SAASoiE,sBAAsBxwF,UAAUuwF,aAAe,WAC5D,OAA4CziE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAASoiE,sBAAsBxwF,UAAUiwF,mBAAqB,WAClE,OAA8BniE,EAAKS,QAAQoC,WACvCluB,KAAK8tF,iBAWXpiE,MAAMC,SAASoiE,sBAAsBxwF,UAAUqwF,kBAAoB,WACjE,OAAmCviE,EAAKS,QAAQqC,UAC5CnuB,KAAK8tF,iBAKXpiE,MAAMC,SAASoiE,sBAAsBxwF,UAAUmwF,aAAe,SAASxwF,GACrEmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAQ5CwuB,MAAMC,SAASoiE,sBAAsBxwF,UAAUswF,UAAY,WACzD,OAA8BxiE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAASoiE,sBAAsBxwF,UAAUowF,UAAY,SAASzwF,GAClEmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAe1CwuB,MAAMC,SAAS0iE,kBAAoB,SAASxiE,GAC1CR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAGH,MAAMC,SAAS0iE,kBAAkBl/D,gBAAiB,OAEnG7D,EAAK/qB,SAASmrB,MAAMC,SAAS0iE,kBAAmBhjE,EAAKS,SACjDR,EAAKU,QAAUC,WACjBP,MAAMC,SAAS0iE,kBAAkBniE,YAAc,oCAOjDR,MAAMC,SAAS0iE,kBAAkBl/D,iBAAmB,GAIhD9D,EAAKS,QAAQK,qBAWjBT,MAAMC,SAAS0iE,kBAAkB9wF,UAAU6uB,SAAW,SAASC,GAC7D,OAAOX,MAAMC,SAAS0iE,kBAAkBjiE,SAASC,EAAqBrsB,OAaxE0rB,MAAMC,SAAS0iE,kBAAkBjiE,SAAW,SAASE,EAAiBxrB,GACpE,IAAO8b,GACLowE,aAAclsF,EAAImsF,wBAClBqB,gBAAiBxtF,EAAIytF,2BACrBC,QAASnjE,EAAKS,QAAQmC,oBAAoBntB,EAAK,GAAG,GAClD6kD,MAAOt6B,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,IAMlD,OAHIwrB,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAAS0iE,kBAAkB1hE,kBAAoB,SAASpK,GAC5D,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAAS0iE,kBAC7B,OAAO3iE,MAAMC,SAAS0iE,kBAAkBvhE,4BAA4BhsB,EAAK8rB,IAW3ElB,MAAMC,SAAS0iE,kBAAkBvhE,4BAA8B,SAAShsB,EAAK8rB,GAC3E,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAoC0vB,EAAOM,YAC/CpsB,EAAIosF,gBAAgBhwF,GACpB,MACF,KAAK,EACCA,EAAoC0vB,EAAOM,YAC/CpsB,EAAI2tF,eAAevxF,GACnB,MACF,KAAK,EACCA,EAAgC0vB,EAAOqF,WAC3CnxB,EAAI4tF,WAAWxxF,GACf,MACF,KAAK,EACCA,EAA+B0vB,EAAOya,YAC1CvmC,EAAI6tF,SAASzxF,GACb,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAAS0iE,kBAAkB9wF,UAAU+vB,gBAAkB,WAC3D,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAAS0iE,kBAAkB5gE,wBAAwBztB,KAAMutB,GACxDA,EAAOG,mBAWhBhC,MAAMC,SAAS0iE,kBAAkB5gE,wBAA0B,SAASE,EAASJ,GAC3E,IAAIK,OAAIvuB,GACRuuB,EAAID,EAAQw/D,wBACNxuF,OAAS,GACb4uB,EAAOO,WACL,EACAF,IAGJA,EAAID,EAAQihE,2BACNjwF,OAAS,GACb4uB,EAAOoO,mBACL,EACA/N,IAGJA,EAAID,EAAQkhE,eAEVthE,EAAOgG,UACL,EACA3F,GAIM,KADVA,EAAID,EAAQ67B,aAEVj8B,EAAOoa,WACL,EACA/Z,IAUNlC,MAAMC,SAAS0iE,kBAAkB9wF,UAAU6vF,gBAAkB,WAC3D,OAA4C/hE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAAS0iE,kBAAkB9wF,UAAU0vF,sBAAwB,WACjE,OAA8B5hE,EAAKS,QAAQoC,WACvCluB,KAAKotF,oBAWX1hE,MAAMC,SAAS0iE,kBAAkB9wF,UAAU4vF,qBAAuB,WAChE,OAAmC9hE,EAAKS,QAAQqC,UAC5CnuB,KAAKotF,oBAKX1hE,MAAMC,SAAS0iE,kBAAkB9wF,UAAU2vF,gBAAkB,SAAShwF,GACpEmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAQ5CwuB,MAAMC,SAAS0iE,kBAAkB9wF,UAAUuxF,mBAAqB,WAC9D,OAA2DzjE,EAAKS,QAAQ+U,iBAAiB7gC,KAAM,IASjG0rB,MAAMC,SAAS0iE,kBAAkB9wF,UAAUgxF,yBAA2B,WACpE,OAAuCljE,EAAKS,QAAQgV,eAChD9gC,KAAK8uF,uBAWXpjE,MAAMC,SAAS0iE,kBAAkB9wF,UAAUqxF,wBAA0B,WACnE,OAA4CvjE,EAAKS,QAAQiV,cACrD/gC,KAAK8uF,uBAKXpjE,MAAMC,SAAS0iE,kBAAkB9wF,UAAUwxF,mBAAqB,SAAS7xF,GACvEmuB,EAAKS,QAAQmV,SAASjhC,KAAM,EAAG9C,QAQjCwuB,MAAMC,SAAS0iE,kBAAkB9wF,UAAUkxF,eAAiB,SAASvxF,EAAOu3B,GAC1EpJ,EAAKS,QAAQoV,mBAAmBlhC,KAAM,EAAG9C,EAAOu3B,IAIlD/I,MAAMC,SAAS0iE,kBAAkB9wF,UAAUyxF,qBAAuB,WAChEhvF,KAAK+uF,wBAUPrjE,MAAMC,SAAS0iE,kBAAkB9wF,UAAUsxF,WAAa,WACtD,OAA+BxjE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,GAAG,IAK3E0rB,MAAMC,SAAS0iE,kBAAkB9wF,UAAUmxF,WAAa,SAASxxF,GAC/DmuB,EAAKS,QAAQqJ,sBAAsBn1B,KAAM,EAAG9C,IAQ9CwuB,MAAMC,SAAS0iE,kBAAkB9wF,UAAUisD,SAAW,WACpD,OAA8Bn+B,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAAS0iE,kBAAkB9wF,UAAUoxF,SAAW,SAASzxF,GAC7DmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAe1CwuB,MAAMC,SAASsjE,oBAAsB,SAASpjE,GAC5CR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAGH,MAAMC,SAASsjE,oBAAoB9/D,gBAAiB,OAErG7D,EAAK/qB,SAASmrB,MAAMC,SAASsjE,oBAAqB5jE,EAAKS,SACnDR,EAAKU,QAAUC,WACjBP,MAAMC,SAASsjE,oBAAoB/iE,YAAc,sCAOnDR,MAAMC,SAASsjE,oBAAoB9/D,iBAAmB,GAIlD9D,EAAKS,QAAQK,qBAWjBT,MAAMC,SAASsjE,oBAAoB1xF,UAAU6uB,SAAW,SAASC,GAC/D,OAAOX,MAAMC,SAASsjE,oBAAoB7iE,SAASC,EAAqBrsB,OAa1E0rB,MAAMC,SAASsjE,oBAAoB7iE,SAAW,SAASE,EAAiBxrB,GACtE,IAAO8b,GACLowE,aAAclsF,EAAImsF,wBAClB19D,UAAWlE,EAAKS,QAAQ0D,aAAa1uB,EAAI2uB,eACzC/D,MAAMC,SAASsjE,oBAAoB3gE,KAAKlC,SAAUE,GAClDkiE,QAASnjE,EAAKS,QAAQmC,oBAAoBntB,EAAK,GAAG,IAMpD,OAHIwrB,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAASsjE,oBAAoBtiE,kBAAoB,SAASpK,GAC9D,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAASsjE,oBAC7B,OAAOvjE,MAAMC,SAASsjE,oBAAoBniE,4BAA4BhsB,EAAK8rB,IAW7ElB,MAAMC,SAASsjE,oBAAoBniE,4BAA8B,SAAShsB,EAAK8rB,GAC7E,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAoC0vB,EAAOM,YAC/CpsB,EAAIosF,gBAAgBhwF,GACpB,MACF,KAAK,EACCA,EAAQ,IAAIwuB,MAAMC,SAASsjE,oBAAoB3gE,KACnD1B,EAAO0E,YAAYp0B,EAAMwuB,MAAMC,SAASsjE,oBAAoB3gE,KAAKxB,6BACjEhsB,EAAIywB,SAASr0B,GACb,MACF,KAAK,EACCA,EAAgC0vB,EAAOqF,WAC3CnxB,EAAI4tF,WAAWxxF,GACf,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAASsjE,oBAAoB1xF,UAAU+vB,gBAAkB,WAC7D,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAASsjE,oBAAoBxhE,wBAAwBztB,KAAMutB,GAC1DA,EAAOG,mBAWhBhC,MAAMC,SAASsjE,oBAAoBxhE,wBAA0B,SAASE,EAASJ,GAC7E,IAAIK,OAAIvuB,GACRuuB,EAAID,EAAQw/D,wBACNxuF,OAAS,GACb4uB,EAAOO,WACL,EACAF,IAGJA,EAAID,EAAQ8B,gBACN9wB,OAAS,GACb4uB,EAAOsF,qBACL,EACAjF,EACAlC,MAAMC,SAASsjE,oBAAoB3gE,KAAKb,0BAG5CG,EAAID,EAAQkhE,eAEVthE,EAAOgG,UACL,EACA3F,IAiBNlC,MAAMC,SAASsjE,oBAAoB3gE,KAAO,SAASzC,GACjDR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMC,SAASsjE,oBAAoB3gE,KAAMjD,EAAKS,SACxDR,EAAKU,QAAUC,WACjBP,MAAMC,SAASsjE,oBAAoB3gE,KAAKpC,YAAc,2CAIpDb,EAAKS,QAAQK,qBAWjBT,MAAMC,SAASsjE,oBAAoB3gE,KAAK/wB,UAAU6uB,SAAW,SAASC,GACpE,OAAOX,MAAMC,SAASsjE,oBAAoB3gE,KAAKlC,SAASC,EAAqBrsB,OAa/E0rB,MAAMC,SAASsjE,oBAAoB3gE,KAAKlC,SAAW,SAASE,EAAiBxrB,GAC3E,IAAO8b,GACL2R,YAAaztB,EAAI0tB,uBACjBC,UAAWpD,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,IAMtD,OAHIwrB,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAASsjE,oBAAoB3gE,KAAK3B,kBAAoB,SAASpK,GACnE,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAASsjE,oBAAoB3gE,KACjD,OAAO5C,MAAMC,SAASsjE,oBAAoB3gE,KAAKxB,4BAA4BhsB,EAAK8rB,IAWlFlB,MAAMC,SAASsjE,oBAAoB3gE,KAAKxB,4BAA8B,SAAShsB,EAAK8rB,GAClF,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAoC0vB,EAAOM,YAC/CpsB,EAAI4tB,eAAexxB,GACnB,MACF,KAAK,EACCA,EAA+B0vB,EAAO+B,YAC1C7tB,EAAI8tB,aAAa1xB,GACjB,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAASsjE,oBAAoB3gE,KAAK/wB,UAAU+vB,gBAAkB,WAClE,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAASsjE,oBAAoB3gE,KAAKb,wBAAwBztB,KAAMutB,GAC/DA,EAAOG,mBAWhBhC,MAAMC,SAASsjE,oBAAoB3gE,KAAKb,wBAA0B,SAASE,EAASJ,GAClF,IAAIK,OAAIvuB,GACRuuB,EAAID,EAAQkB,uBACNlwB,OAAS,GACb4uB,EAAOO,WACL,EACAF,GAIM,KADVA,EAAID,EAAQmB,iBAEVvB,EAAOwB,WACL,EACAnB,IAUNlC,MAAMC,SAASsjE,oBAAoB3gE,KAAK/wB,UAAUyxB,eAAiB,WACjE,OAA4C3D,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAASsjE,oBAAoB3gE,KAAK/wB,UAAUixB,qBAAuB,WACvE,OAA8BnD,EAAKS,QAAQoC,WACvCluB,KAAKgvB,mBAWXtD,MAAMC,SAASsjE,oBAAoB3gE,KAAK/wB,UAAUsxB,oBAAsB,WACtE,OAAmCxD,EAAKS,QAAQqC,UAC5CnuB,KAAKgvB,mBAKXtD,MAAMC,SAASsjE,oBAAoB3gE,KAAK/wB,UAAUmxB,eAAiB,SAASxxB,GAC1EmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAQ5CwuB,MAAMC,SAASsjE,oBAAoB3gE,KAAK/wB,UAAUuxB,aAAe,WAC/D,OAA8BzD,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAASsjE,oBAAoB3gE,KAAK/wB,UAAUqxB,aAAe,SAAS1xB,GACxEmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAQ1CwuB,MAAMC,SAASsjE,oBAAoB1xF,UAAU6vF,gBAAkB,WAC7D,OAA4C/hE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAASsjE,oBAAoB1xF,UAAU0vF,sBAAwB,WACnE,OAA8B5hE,EAAKS,QAAQoC,WACvCluB,KAAKotF,oBAWX1hE,MAAMC,SAASsjE,oBAAoB1xF,UAAU4vF,qBAAuB,WAClE,OAAmC9hE,EAAKS,QAAQqC,UAC5CnuB,KAAKotF,oBAKX1hE,MAAMC,SAASsjE,oBAAoB1xF,UAAU2vF,gBAAkB,SAAShwF,GACtEmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAQ5CwuB,MAAMC,SAASsjE,oBAAoB1xF,UAAUkyB,aAAe,WAC1D,OACEpE,EAAKS,QAAQuI,wBAAwBr0B,KAAM0rB,MAAMC,SAASsjE,oBAAoB3gE,KAAM,IAKxF5C,MAAMC,SAASsjE,oBAAoB1xF,UAAU+2B,aAAe,SAASp3B,GACnEmuB,EAAKS,QAAQyI,wBAAwBv0B,KAAM,EAAG9C,IAShDwuB,MAAMC,SAASsjE,oBAAoB1xF,UAAUg0B,SAAW,SAASiD,EAAWC,GAC1E,OAAOpJ,EAAKS,QAAQ4I,0BAA0B10B,KAAM,EAAGw0B,EAAW9I,MAAMC,SAASsjE,oBAAoB3gE,KAAMmG,IAI7G/I,MAAMC,SAASsjE,oBAAoB1xF,UAAUo3B,eAAiB,WAC5D30B,KAAKs0B,kBAUP5I,MAAMC,SAASsjE,oBAAoB1xF,UAAUsxF,WAAa,WACxD,OAA+BxjE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,GAAG,IAK3E0rB,MAAMC,SAASsjE,oBAAoB1xF,UAAUmxF,WAAa,SAASxxF,GACjEmuB,EAAKS,QAAQqJ,sBAAsBn1B,KAAM,EAAG9C,IAe9CwuB,MAAMC,SAASujE,sBAAwB,SAASrjE,GAC9CR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMC,SAASujE,sBAAuB7jE,EAAKS,SACrDR,EAAKU,QAAUC,WACjBP,MAAMC,SAASujE,sBAAsBhjE,YAAc,wCAIjDb,EAAKS,QAAQK,qBAWjBT,MAAMC,SAASujE,sBAAsB3xF,UAAU6uB,SAAW,SAASC,GACjE,OAAOX,MAAMC,SAASujE,sBAAsB9iE,SAASC,EAAqBrsB,OAa5E0rB,MAAMC,SAASujE,sBAAsB9iE,SAAW,SAASE,EAAiBxrB,GACxE,IAAO8b,GACLowE,aAAclsF,EAAImsF,wBAClBp2D,IAAK/1B,EAAIquF,gBAMX,OAHI7iE,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAASujE,sBAAsBviE,kBAAoB,SAASpK,GAChE,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAASujE,sBAC7B,OAAOxjE,MAAMC,SAASujE,sBAAsBpiE,4BAA4BhsB,EAAK8rB,IAW/ElB,MAAMC,SAASujE,sBAAsBpiE,4BAA8B,SAAShsB,EAAK8rB,GAC/E,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAoC0vB,EAAOM,YAC/CpsB,EAAIosF,gBAAgBhwF,GACpB,MACF,KAAK,EACCA,EAAoC0vB,EAAOM,YAC/CpsB,EAAIu2B,OAAOn6B,GACX,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAASujE,sBAAsB3xF,UAAU+vB,gBAAkB,WAC/D,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAASujE,sBAAsBzhE,wBAAwBztB,KAAMutB,GAC5DA,EAAOG,mBAWhBhC,MAAMC,SAASujE,sBAAsBzhE,wBAA0B,SAASE,EAASJ,GAC/E,IAAIK,OAAIvuB,GACRuuB,EAAID,EAAQw/D,wBACNxuF,OAAS,GACb4uB,EAAOO,WACL,EACAF,IAGJA,EAAID,EAAQyhE,eACNzwF,OAAS,GACb4uB,EAAOO,WACL,EACAF,IAUNlC,MAAMC,SAASujE,sBAAsB3xF,UAAU6vF,gBAAkB,WAC/D,OAA4C/hE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAASujE,sBAAsB3xF,UAAU0vF,sBAAwB,WACrE,OAA8B5hE,EAAKS,QAAQoC,WACvCluB,KAAKotF,oBAWX1hE,MAAMC,SAASujE,sBAAsB3xF,UAAU4vF,qBAAuB,WACpE,OAAmC9hE,EAAKS,QAAQqC,UAC5CnuB,KAAKotF,oBAKX1hE,MAAMC,SAASujE,sBAAsB3xF,UAAU2vF,gBAAkB,SAAShwF,GACxEmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAQ5CwuB,MAAMC,SAASujE,sBAAsB3xF,UAAUs6B,OAAS,WACtD,OAA4CxM,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAASujE,sBAAsB3xF,UAAU4xF,aAAe,WAC5D,OAA8B9jE,EAAKS,QAAQoC,WACvCluB,KAAK63B,WAWXnM,MAAMC,SAASujE,sBAAsB3xF,UAAU6xF,YAAc,WAC3D,OAAmC/jE,EAAKS,QAAQqC,UAC5CnuB,KAAK63B,WAKXnM,MAAMC,SAASujE,sBAAsB3xF,UAAU85B,OAAS,SAASn6B,GAC/DmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAe5CwuB,MAAMC,SAAS0jE,sBAAwB,SAASxjE,GAC9CR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMC,SAAS0jE,sBAAuBhkE,EAAKS,SACrDR,EAAKU,QAAUC,WACjBP,MAAMC,SAAS0jE,sBAAsBnjE,YAAc,wCAIjDb,EAAKS,QAAQK,qBAWjBT,MAAMC,SAAS0jE,sBAAsB9xF,UAAU6uB,SAAW,SAASC,GACjE,OAAOX,MAAMC,SAAS0jE,sBAAsBjjE,SAASC,EAAqBrsB,OAa5E0rB,MAAMC,SAAS0jE,sBAAsBjjE,SAAW,SAASE,EAAiBxrB,GACxE,IAAO8b,GACLowE,aAAclsF,EAAImsF,wBAClBqC,UAAWxuF,EAAIyuF,sBAMjB,OAHIjjE,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAAS0jE,sBAAsB1iE,kBAAoB,SAASpK,GAChE,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAAS0jE,sBAC7B,OAAO3jE,MAAMC,SAAS0jE,sBAAsBviE,4BAA4BhsB,EAAK8rB,IAW/ElB,MAAMC,SAAS0jE,sBAAsBviE,4BAA8B,SAAShsB,EAAK8rB,GAC/E,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAoC0vB,EAAOM,YAC/CpsB,EAAIosF,gBAAgBhwF,GACpB,MACF,KAAK,GACCA,EAAoC0vB,EAAOM,YAC/CpsB,EAAI0uF,aAAatyF,GACjB,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAAS0jE,sBAAsB9xF,UAAU+vB,gBAAkB,WAC/D,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAAS0jE,sBAAsB5hE,wBAAwBztB,KAAMutB,GAC5DA,EAAOG,mBAWhBhC,MAAMC,SAAS0jE,sBAAsB5hE,wBAA0B,SAASE,EAASJ,GAC/E,IAAIK,OAAIvuB,GACRuuB,EAAID,EAAQw/D,wBACNxuF,OAAS,GACb4uB,EAAOO,WACL,EACAF,IAGJA,EAAID,EAAQ8hE,qBACN9wF,OAAS,GACb4uB,EAAOO,WACL,GACAF,IAUNlC,MAAMC,SAAS0jE,sBAAsB9xF,UAAU6vF,gBAAkB,WAC/D,OAA4C/hE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAAS0jE,sBAAsB9xF,UAAU0vF,sBAAwB,WACrE,OAA8B5hE,EAAKS,QAAQoC,WACvCluB,KAAKotF,oBAWX1hE,MAAMC,SAAS0jE,sBAAsB9xF,UAAU4vF,qBAAuB,WACpE,OAAmC9hE,EAAKS,QAAQqC,UAC5CnuB,KAAKotF,oBAKX1hE,MAAMC,SAAS0jE,sBAAsB9xF,UAAU2vF,gBAAkB,SAAShwF,GACxEmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAQ5CwuB,MAAMC,SAAS0jE,sBAAsB9xF,UAAUmyF,aAAe,WAC5D,OAA4CrkE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,GAAI,KASzF0rB,MAAMC,SAAS0jE,sBAAsB9xF,UAAUgyF,mBAAqB,WAClE,OAA8BlkE,EAAKS,QAAQoC,WACvCluB,KAAK0vF,iBAWXhkE,MAAMC,SAAS0jE,sBAAsB9xF,UAAUkyF,kBAAoB,WACjE,OAAmCpkE,EAAKS,QAAQqC,UAC5CnuB,KAAK0vF,iBAKXhkE,MAAMC,SAAS0jE,sBAAsB9xF,UAAUiyF,aAAe,SAAStyF,GACrEmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,GAAI9C,IAe7CwuB,MAAMC,SAASs7D,mBAAqB,SAASp7D,GAC3CR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAGH,MAAMC,SAASs7D,mBAAmB93D,gBAAiB,OAEpG7D,EAAK/qB,SAASmrB,MAAMC,SAASs7D,mBAAoB57D,EAAKS,SAClDR,EAAKU,QAAUC,WACjBP,MAAMC,SAASs7D,mBAAmB/6D,YAAc,qCAOlDR,MAAMC,SAASs7D,mBAAmB93D,iBAAmB,GAIjD9D,EAAKS,QAAQK,qBAWjBT,MAAMC,SAASs7D,mBAAmB1pF,UAAU6uB,SAAW,SAASC,GAC9D,OAAOX,MAAMC,SAASs7D,mBAAmB76D,SAASC,EAAqBrsB,OAazE0rB,MAAMC,SAASs7D,mBAAmB76D,SAAW,SAASE,EAAiBxrB,GACrE,IAAO8b,GACLowE,aAAclsF,EAAImsF,wBAClBxwF,KAAMqE,EAAIyrB,gBACVojE,KAAM7uF,EAAI8uF,gBACVC,YAAaxkE,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,GACtDyvB,iBAAkBlF,EAAKS,QAAQ0D,aAAa1uB,EAAI0vB,sBAChD9E,MAAMC,SAASs7D,mBAAmB6I,aAAa1jE,SAAUE,GACzDyjE,OAAQ1kE,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,GACjDkD,IAAKqnB,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,GAC9CkvF,UAAW3kE,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,GACpDmvF,QAAS5kE,EAAKS,QAAQmC,oBAAoBntB,EAAK,GAAI,GACnDovF,UAAW7kE,EAAKS,QAAQmC,oBAAoBntB,EAAK,GAAI,GACrDqvF,YAAarvF,EAAIsvF,uBACjBv5D,IAAK/1B,EAAIquF,eACTkB,kBAAmBhlE,EAAKS,QAAQmC,oBAAoBntB,EAAK,GAAI,GAC7DwvF,wBAAyBjlE,EAAKS,QAAQmC,oBAAoBntB,EAAK,GAAI,GACnEyvF,wBAAyBllE,EAAKS,QAAQmC,oBAAoBntB,EAAK,GAAI,GACnE0vF,wBAAyBnlE,EAAKS,QAAQmC,oBAAoBntB,EAAK,GAAI,IAMrE,OAHIwrB,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAASs7D,mBAAmBt6D,kBAAoB,SAASpK,GAC7D,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAASs7D,mBAC7B,OAAOv7D,MAAMC,SAASs7D,mBAAmBn6D,4BAA4BhsB,EAAK8rB,IAW5ElB,MAAMC,SAASs7D,mBAAmBn6D,4BAA8B,SAAShsB,EAAK8rB,GAC5E,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAoC0vB,EAAOM,YAC/CpsB,EAAIosF,gBAAgBhwF,GACpB,MACF,KAAK,EACCA,EAAoC0vB,EAAOM,YAC/CpsB,EAAIqsB,QAAQjwB,GACZ,MACF,KAAK,EACCA,EAAoC0vB,EAAOM,YAC/CpsB,EAAI2vF,QAAQvzF,GACZ,MACF,KAAK,EACCA,EAA+B0vB,EAAO+B,YAC1C7tB,EAAI4vF,eAAexzF,GACnB,MACF,KAAK,EACCA,EAAQ,IAAIwuB,MAAMC,SAASs7D,mBAAmB6I,aAClDljE,EAAO0E,YAAYp0B,EAAMwuB,MAAMC,SAASs7D,mBAAmB6I,aAAahjE,6BACxEhsB,EAAIsxB,gBAAgBl1B,GACpB,MACF,KAAK,EACCA,EAA+B0vB,EAAOya,YAC1CvmC,EAAI6vF,UAAUzzF,GACd,MACF,KAAK,EACCA,EAA+B0vB,EAAOya,YAC1CvmC,EAAIuoF,OAAOnsF,GACX,MACF,KAAK,EACCA,EAA+B0vB,EAAO+B,YAC1C7tB,EAAI8vF,aAAa1zF,GACjB,MACF,KAAK,GACCA,EAA+B0vB,EAAO+B,YAC1C7tB,EAAI+vF,WAAW3zF,GACf,MACF,KAAK,GACCA,EAA+B0vB,EAAOya,YAC1CvmC,EAAIgwF,aAAa5zF,GACjB,MACF,KAAK,GACCA,EAAoC0vB,EAAOM,YAC/CpsB,EAAIiwF,eAAe7zF,GACnB,MACF,KAAK,GACCA,EAAoC0vB,EAAOM,YAC/CpsB,EAAIu2B,OAAOn6B,GACX,MACF,KAAK,GACCA,EAA+B0vB,EAAO+B,YAC1C7tB,EAAIkwF,qBAAqB9zF,GACzB,MACF,KAAK,GACCA,EAA+B0vB,EAAO+B,YAC1C7tB,EAAImwF,2BAA2B/zF,GAC/B,MACF,KAAK,GACCA,EAA+B0vB,EAAO+B,YAC1C7tB,EAAIowF,2BAA2Bh0F,GAC/B,MACF,KAAK,GACCA,EAA+B0vB,EAAO+B,YAC1C7tB,EAAIqwF,2BAA2Bj0F,GAC/B,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAASs7D,mBAAmB1pF,UAAU+vB,gBAAkB,WAC5D,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAASs7D,mBAAmBx5D,wBAAwBztB,KAAMutB,GACzDA,EAAOG,mBAWhBhC,MAAMC,SAASs7D,mBAAmBx5D,wBAA0B,SAASE,EAASJ,GAC5E,IAAIK,OAAIvuB,GACRuuB,EAAID,EAAQw/D,wBACNxuF,OAAS,GACb4uB,EAAOO,WACL,EACAF,IAGJA,EAAID,EAAQE,gBACNlvB,OAAS,GACb4uB,EAAOO,WACL,EACAF,IAGJA,EAAID,EAAQyjE,gBACNzyF,OAAS,GACb4uB,EAAOO,WACL,EACAF,GAIM,KADVA,EAAID,EAAQ0jE,mBAEV9jE,EAAOwB,WACL,EACAnB,IAGJA,EAAID,EAAQ6C,uBACN7xB,OAAS,GACb4uB,EAAOsF,qBACL,EACAjF,EACAlC,MAAMC,SAASs7D,mBAAmB6I,aAAariE,yBAIzC,KADVG,EAAID,EAAQ2jE,cAEV/jE,EAAOoa,WACL,EACA/Z,GAIM,KADVA,EAAID,EAAQ27D,WAEV/7D,EAAOoa,WACL,EACA/Z,GAIM,KADVA,EAAID,EAAQ4jE,iBAEVhkE,EAAOwB,WACL,EACAnB,GAIM,KADVA,EAAID,EAAQ6jE,eAEVjkE,EAAOwB,WACL,GACAnB,GAIM,KADVA,EAAID,EAAQ8jE,iBAEVlkE,EAAOoa,WACL,GACA/Z,IAGJA,EAAID,EAAQ+jE,uBACN/yF,OAAS,GACb4uB,EAAOO,WACL,GACAF,IAGJA,EAAID,EAAQyhE,eACNzwF,OAAS,GACb4uB,EAAOO,WACL,GACAF,GAIM,KADVA,EAAID,EAAQgkE,yBAEVpkE,EAAOwB,WACL,GACAnB,GAIM,KADVA,EAAID,EAAQikE,+BAEVrkE,EAAOwB,WACL,GACAnB,GAIM,KADVA,EAAID,EAAQkkE,+BAEVtkE,EAAOwB,WACL,GACAnB,GAIM,KADVA,EAAID,EAAQmkE,+BAEVvkE,EAAOwB,WACL,GACAnB,IAiBNlC,MAAMC,SAASs7D,mBAAmB6I,aAAe,SAASjkE,GACxDR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMC,SAASs7D,mBAAmB6I,aAAczkE,EAAKS,SAC/DR,EAAKU,QAAUC,WACjBP,MAAMC,SAASs7D,mBAAmB6I,aAAa5jE,YAAc,kDAI3Db,EAAKS,QAAQK,qBAWjBT,MAAMC,SAASs7D,mBAAmB6I,aAAavyF,UAAU6uB,SAAW,SAASC,GAC3E,OAAOX,MAAMC,SAASs7D,mBAAmB6I,aAAa1jE,SAASC,EAAqBrsB,OAatF0rB,MAAMC,SAASs7D,mBAAmB6I,aAAa1jE,SAAW,SAASE,EAAiBxrB,GAClF,IAAO8b,GACLm1E,aAAc1mE,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,GACvDkxF,WAAY3mE,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,IAMvD,OAHIwrB,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAASs7D,mBAAmB6I,aAAanjE,kBAAoB,SAASpK,GAC1E,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAASs7D,mBAAmB6I,aAChD,OAAOpkE,MAAMC,SAASs7D,mBAAmB6I,aAAahjE,4BAA4BhsB,EAAK8rB,IAWzFlB,MAAMC,SAASs7D,mBAAmB6I,aAAahjE,4BAA8B,SAAShsB,EAAK8rB,GACzF,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAA+B0vB,EAAO+B,YAC1C7tB,EAAImxF,gBAAgB/0F,GACpB,MACF,KAAK,EACCA,EAA+B0vB,EAAO+B,YAC1C7tB,EAAIoxF,cAAch1F,GAClB,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAASs7D,mBAAmB6I,aAAavyF,UAAU+vB,gBAAkB,WACzE,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAASs7D,mBAAmB6I,aAAariE,wBAAwBztB,KAAMutB,GACtEA,EAAOG,mBAWhBhC,MAAMC,SAASs7D,mBAAmB6I,aAAariE,wBAA0B,SAASE,EAASJ,GACzF,IAAIK,OAAIvuB,EAEE,KADVuuB,EAAID,EAAQwkE,oBAEV5kE,EAAOwB,WACL,EACAnB,GAIM,KADVA,EAAID,EAAQykE,kBAEV7kE,EAAOwB,WACL,EACAnB,IAUNlC,MAAMC,SAASs7D,mBAAmB6I,aAAavyF,UAAU40F,gBAAkB,WACzE,OAA8B9mE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAASs7D,mBAAmB6I,aAAavyF,UAAU00F,gBAAkB,SAAS/0F,GAClFmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAQ1CwuB,MAAMC,SAASs7D,mBAAmB6I,aAAavyF,UAAU60F,cAAgB,WACvE,OAA8B/mE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAASs7D,mBAAmB6I,aAAavyF,UAAU20F,cAAgB,SAASh1F,GAChFmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAQ1CwuB,MAAMC,SAASs7D,mBAAmB1pF,UAAU6vF,gBAAkB,WAC5D,OAA4C/hE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAASs7D,mBAAmB1pF,UAAU0vF,sBAAwB,WAClE,OAA8B5hE,EAAKS,QAAQoC,WACvCluB,KAAKotF,oBAWX1hE,MAAMC,SAASs7D,mBAAmB1pF,UAAU4vF,qBAAuB,WACjE,OAAmC9hE,EAAKS,QAAQqC,UAC5CnuB,KAAKotF,oBAKX1hE,MAAMC,SAASs7D,mBAAmB1pF,UAAU2vF,gBAAkB,SAAShwF,GACrEmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAQ5CwuB,MAAMC,SAASs7D,mBAAmB1pF,UAAUywB,QAAU,WACpD,OAA4C3C,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAASs7D,mBAAmB1pF,UAAUgvB,cAAgB,WAC1D,OAA8BlB,EAAKS,QAAQoC,WACvCluB,KAAKguB,YAWXtC,MAAMC,SAASs7D,mBAAmB1pF,UAAUswB,aAAe,WACzD,OAAmCxC,EAAKS,QAAQqC,UAC5CnuB,KAAKguB,YAKXtC,MAAMC,SAASs7D,mBAAmB1pF,UAAU4vB,QAAU,SAASjwB,GAC7DmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAQ5CwuB,MAAMC,SAASs7D,mBAAmB1pF,UAAU80F,QAAU,WACpD,OAA4ChnE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAASs7D,mBAAmB1pF,UAAUqyF,cAAgB,WAC1D,OAA8BvkE,EAAKS,QAAQoC,WACvCluB,KAAKqyF,YAWX3mE,MAAMC,SAASs7D,mBAAmB1pF,UAAU6zF,aAAe,WACzD,OAAmC/lE,EAAKS,QAAQqC,UAC5CnuB,KAAKqyF,YAKX3mE,MAAMC,SAASs7D,mBAAmB1pF,UAAUkzF,QAAU,SAASvzF,GAC7DmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAQ5CwuB,MAAMC,SAASs7D,mBAAmB1pF,UAAU8zF,eAAiB,WAC3D,OAA8BhmE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAASs7D,mBAAmB1pF,UAAUmzF,eAAiB,SAASxzF,GACpEmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAQ1CwuB,MAAMC,SAASs7D,mBAAmB1pF,UAAUizB,oBAAsB,WAChE,OACEnF,EAAKS,QAAQuI,wBAAwBr0B,KAAM0rB,MAAMC,SAASs7D,mBAAmB6I,aAAc,IAK/FpkE,MAAMC,SAASs7D,mBAAmB1pF,UAAU63B,oBAAsB,SAASl4B,GACzEmuB,EAAKS,QAAQyI,wBAAwBv0B,KAAM,EAAG9C,IAShDwuB,MAAMC,SAASs7D,mBAAmB1pF,UAAU60B,gBAAkB,SAASoC,EAAWC,GAChF,OAAOpJ,EAAKS,QAAQ4I,0BAA0B10B,KAAM,EAAGw0B,EAAW9I,MAAMC,SAASs7D,mBAAmB6I,aAAcr7D,IAIpH/I,MAAMC,SAASs7D,mBAAmB1pF,UAAU83B,sBAAwB,WAClEr1B,KAAKo1B,yBAQP1J,MAAMC,SAASs7D,mBAAmB1pF,UAAU+zF,UAAY,WACtD,OAA8BjmE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAASs7D,mBAAmB1pF,UAAUozF,UAAY,SAASzzF,GAC/DmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAQ1CwuB,MAAMC,SAASs7D,mBAAmB1pF,UAAU+rF,OAAS,WACnD,OAA8Bj+D,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAASs7D,mBAAmB1pF,UAAU8rF,OAAS,SAASnsF,GAC5DmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAQ1CwuB,MAAMC,SAASs7D,mBAAmB1pF,UAAUg0F,aAAe,WACzD,OAA8BlmE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAASs7D,mBAAmB1pF,UAAUqzF,aAAe,SAAS1zF,GAClEmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAQ1CwuB,MAAMC,SAASs7D,mBAAmB1pF,UAAUi0F,WAAa,WACvD,OAA8BnmE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,GAAI,IAK3E0rB,MAAMC,SAASs7D,mBAAmB1pF,UAAUszF,WAAa,SAAS3zF,GAChEmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,GAAI9C,IAQ3CwuB,MAAMC,SAASs7D,mBAAmB1pF,UAAUk0F,aAAe,WACzD,OAA8BpmE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,GAAI,IAK3E0rB,MAAMC,SAASs7D,mBAAmB1pF,UAAUuzF,aAAe,SAAS5zF,GAClEmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,GAAI9C,IAQ3CwuB,MAAMC,SAASs7D,mBAAmB1pF,UAAU+0F,eAAiB,WAC3D,OAA4CjnE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,GAAI,KASzF0rB,MAAMC,SAASs7D,mBAAmB1pF,UAAU6yF,qBAAuB,WACjE,OAA8B/kE,EAAKS,QAAQoC,WACvCluB,KAAKsyF,mBAWX5mE,MAAMC,SAASs7D,mBAAmB1pF,UAAUm0F,oBAAsB,WAChE,OAAmCrmE,EAAKS,QAAQqC,UAC5CnuB,KAAKsyF,mBAKX5mE,MAAMC,SAASs7D,mBAAmB1pF,UAAUwzF,eAAiB,SAAS7zF,GACpEmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,GAAI9C,IAQ7CwuB,MAAMC,SAASs7D,mBAAmB1pF,UAAUs6B,OAAS,WACnD,OAA4CxM,EAAKS,QAAQmC,oBAAoBjuB,KAAM,GAAI,KASzF0rB,MAAMC,SAASs7D,mBAAmB1pF,UAAU4xF,aAAe,WACzD,OAA8B9jE,EAAKS,QAAQoC,WACvCluB,KAAK63B,WAWXnM,MAAMC,SAASs7D,mBAAmB1pF,UAAU6xF,YAAc,WACxD,OAAmC/jE,EAAKS,QAAQqC,UAC5CnuB,KAAK63B,WAKXnM,MAAMC,SAASs7D,mBAAmB1pF,UAAU85B,OAAS,SAASn6B,GAC5DmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,GAAI9C,IAQ7CwuB,MAAMC,SAASs7D,mBAAmB1pF,UAAUo0F,qBAAuB,WACjE,OAA8BtmE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,GAAI,IAK3E0rB,MAAMC,SAASs7D,mBAAmB1pF,UAAUyzF,qBAAuB,SAAS9zF,GAC1EmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,GAAI9C,IAQ3CwuB,MAAMC,SAASs7D,mBAAmB1pF,UAAUq0F,2BAA6B,WACvE,OAA8BvmE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,GAAI,IAK3E0rB,MAAMC,SAASs7D,mBAAmB1pF,UAAU0zF,2BAA6B,SAAS/zF,GAChFmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,GAAI9C,IAQ3CwuB,MAAMC,SAASs7D,mBAAmB1pF,UAAUs0F,2BAA6B,WACvE,OAA8BxmE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,GAAI,IAK3E0rB,MAAMC,SAASs7D,mBAAmB1pF,UAAU2zF,2BAA6B,SAASh0F,GAChFmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,GAAI9C,IAQ3CwuB,MAAMC,SAASs7D,mBAAmB1pF,UAAUu0F,2BAA6B,WACvE,OAA8BzmE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,GAAI,IAK3E0rB,MAAMC,SAASs7D,mBAAmB1pF,UAAU4zF,2BAA6B,SAASj0F,GAChFmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,GAAI9C,IAe3CwuB,MAAMC,SAAS4mE,8BAAgC,SAAS1mE,GACtDR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMC,SAAS4mE,8BAA+BlnE,EAAKS,SAC7DR,EAAKU,QAAUC,WACjBP,MAAMC,SAAS4mE,8BAA8BrmE,YAAc,gDAIzDb,EAAKS,QAAQK,qBAWjBT,MAAMC,SAAS4mE,8BAA8Bh1F,UAAU6uB,SAAW,SAASC,GACzE,OAAOX,MAAMC,SAAS4mE,8BAA8BnmE,SAASC,EAAqBrsB,OAapF0rB,MAAMC,SAAS4mE,8BAA8BnmE,SAAW,SAASE,EAAiBxrB,GAChF,IAAO8b,GACLowE,aAAclsF,EAAImsF,wBAClBM,UAAWzsF,EAAI0sF,qBACfQ,UAAWltF,EAAImtF,qBACfR,OAAQpiE,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,IAMnD,OAHIwrB,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAAS4mE,8BAA8B5lE,kBAAoB,SAASpK,GACxE,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAAS4mE,8BAC7B,OAAO7mE,MAAMC,SAAS4mE,8BAA8BzlE,4BAA4BhsB,EAAK8rB,IAWvFlB,MAAMC,SAAS4mE,8BAA8BzlE,4BAA8B,SAAShsB,EAAK8rB,GACvF,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAoC0vB,EAAOM,YAC/CpsB,EAAIosF,gBAAgBhwF,GACpB,MACF,KAAK,EACCA,EAAoC0vB,EAAOM,YAC/CpsB,EAAI4sF,aAAaxwF,GACjB,MACF,KAAK,EACCA,EAAoC0vB,EAAOM,YAC/CpsB,EAAIotF,aAAahxF,GACjB,MACF,KAAK,EACCA,EAA+B0vB,EAAO+B,YAC1C7tB,EAAI6sF,UAAUzwF,GACd,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAAS4mE,8BAA8Bh1F,UAAU+vB,gBAAkB,WACvE,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAAS4mE,8BAA8B9kE,wBAAwBztB,KAAMutB,GACpEA,EAAOG,mBAWhBhC,MAAMC,SAAS4mE,8BAA8B9kE,wBAA0B,SAASE,EAASJ,GACvF,IAAIK,OAAIvuB,GACRuuB,EAAID,EAAQw/D,wBACNxuF,OAAS,GACb4uB,EAAOO,WACL,EACAF,IAGJA,EAAID,EAAQigE,qBACNjvF,OAAS,GACb4uB,EAAOO,WACL,EACAF,IAGJA,EAAID,EAAQwgE,qBACNxvF,OAAS,GACb4uB,EAAOO,WACL,EACAF,GAIM,KADVA,EAAID,EAAQkgE,cAEVtgE,EAAOwB,WACL,EACAnB,IAUNlC,MAAMC,SAAS4mE,8BAA8Bh1F,UAAU6vF,gBAAkB,WACvE,OAA4C/hE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAAS4mE,8BAA8Bh1F,UAAU0vF,sBAAwB,WAC7E,OAA8B5hE,EAAKS,QAAQoC,WACvCluB,KAAKotF,oBAWX1hE,MAAMC,SAAS4mE,8BAA8Bh1F,UAAU4vF,qBAAuB,WAC5E,OAAmC9hE,EAAKS,QAAQqC,UAC5CnuB,KAAKotF,oBAKX1hE,MAAMC,SAAS4mE,8BAA8Bh1F,UAAU2vF,gBAAkB,SAAShwF,GAChFmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAQ5CwuB,MAAMC,SAAS4mE,8BAA8Bh1F,UAAUuwF,aAAe,WACpE,OAA4CziE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAAS4mE,8BAA8Bh1F,UAAUiwF,mBAAqB,WAC1E,OAA8BniE,EAAKS,QAAQoC,WACvCluB,KAAK8tF,iBAWXpiE,MAAMC,SAAS4mE,8BAA8Bh1F,UAAUqwF,kBAAoB,WACzE,OAAmCviE,EAAKS,QAAQqC,UAC5CnuB,KAAK8tF,iBAKXpiE,MAAMC,SAAS4mE,8BAA8Bh1F,UAAUmwF,aAAe,SAASxwF,GAC7EmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAQ5CwuB,MAAMC,SAAS4mE,8BAA8Bh1F,UAAU6wF,aAAe,WACpE,OAA4C/iE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAAS4mE,8BAA8Bh1F,UAAU0wF,mBAAqB,WAC1E,OAA8B5iE,EAAKS,QAAQoC,WACvCluB,KAAKouF,iBAWX1iE,MAAMC,SAAS4mE,8BAA8Bh1F,UAAU4wF,kBAAoB,WACzE,OAAmC9iE,EAAKS,QAAQqC,UAC5CnuB,KAAKouF,iBAKX1iE,MAAMC,SAAS4mE,8BAA8Bh1F,UAAU2wF,aAAe,SAAShxF,GAC7EmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAQ5CwuB,MAAMC,SAAS4mE,8BAA8Bh1F,UAAUswF,UAAY,WACjE,OAA8BxiE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAAS4mE,8BAA8Bh1F,UAAUowF,UAAY,SAASzwF,GAC1EmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAe1CwuB,MAAMC,SAAS6mE,eAAiB,SAAS3mE,GACvCR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMC,SAAS6mE,eAAgBnnE,EAAKS,SAC9CR,EAAKU,QAAUC,WACjBP,MAAMC,SAAS6mE,eAAetmE,YAAc,iCAI1Cb,EAAKS,QAAQK,qBAWjBT,MAAMC,SAAS6mE,eAAej1F,UAAU6uB,SAAW,SAASC,GAC1D,OAAOX,MAAMC,SAAS6mE,eAAepmE,SAASC,EAAqBrsB,OAarE0rB,MAAMC,SAAS6mE,eAAepmE,SAAW,SAASE,EAAiBxrB,GACjE,IAAO8b,GACLowE,aAAclsF,EAAImsF,wBAClBwF,OAAQ3xF,EAAI4xF,mBAMd,OAHIpmE,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAAS6mE,eAAe7lE,kBAAoB,SAASpK,GACzD,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAAS6mE,eAC7B,OAAO9mE,MAAMC,SAAS6mE,eAAe1lE,4BAA4BhsB,EAAK8rB,IAWxElB,MAAMC,SAAS6mE,eAAe1lE,4BAA8B,SAAShsB,EAAK8rB,GACxE,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAoC0vB,EAAOM,YAC/CpsB,EAAIosF,gBAAgBhwF,GACpB,MACF,KAAK,EACCA,EAAoC0vB,EAAOM,YAC/CpsB,EAAI6xF,UAAUz1F,GACd,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAAS6mE,eAAej1F,UAAU+vB,gBAAkB,WACxD,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAAS6mE,eAAe/kE,wBAAwBztB,KAAMutB,GACrDA,EAAOG,mBAWhBhC,MAAMC,SAAS6mE,eAAe/kE,wBAA0B,SAASE,EAASJ,GACxE,IAAIK,OAAIvuB,GACRuuB,EAAID,EAAQw/D,wBACNxuF,OAAS,GACb4uB,EAAOO,WACL,EACAF,IAGJA,EAAID,EAAQilE,kBACNj0F,OAAS,GACb4uB,EAAOO,WACL,EACAF,IAUNlC,MAAMC,SAAS6mE,eAAej1F,UAAU6vF,gBAAkB,WACxD,OAA4C/hE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAAS6mE,eAAej1F,UAAU0vF,sBAAwB,WAC9D,OAA8B5hE,EAAKS,QAAQoC,WACvCluB,KAAKotF,oBAWX1hE,MAAMC,SAAS6mE,eAAej1F,UAAU4vF,qBAAuB,WAC7D,OAAmC9hE,EAAKS,QAAQqC,UAC5CnuB,KAAKotF,oBAKX1hE,MAAMC,SAAS6mE,eAAej1F,UAAU2vF,gBAAkB,SAAShwF,GACjEmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAQ5CwuB,MAAMC,SAAS6mE,eAAej1F,UAAUs1F,UAAY,WAClD,OAA4CxnE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAAS6mE,eAAej1F,UAAUm1F,gBAAkB,WACxD,OAA8BrnE,EAAKS,QAAQoC,WACvCluB,KAAK6yF,cAWXnnE,MAAMC,SAAS6mE,eAAej1F,UAAUq1F,eAAiB,WACvD,OAAmCvnE,EAAKS,QAAQqC,UAC5CnuB,KAAK6yF,cAKXnnE,MAAMC,SAAS6mE,eAAej1F,UAAUo1F,UAAY,SAASz1F,GAC3DmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAe5CwuB,MAAMC,SAASmnE,sBAAwB,SAASjnE,GAC9CR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMC,SAASmnE,sBAAuBznE,EAAKS,SACrDR,EAAKU,QAAUC,WACjBP,MAAMC,SAASmnE,sBAAsB5mE,YAAc,wCAIjDb,EAAKS,QAAQK,qBAWjBT,MAAMC,SAASmnE,sBAAsBv1F,UAAU6uB,SAAW,SAASC,GACjE,OAAOX,MAAMC,SAASmnE,sBAAsB1mE,SAASC,EAAqBrsB,OAa5E0rB,MAAMC,SAASmnE,sBAAsB1mE,SAAW,SAASE,EAAiBxrB,GACxE,IAAO8b,GACLowE,aAAclsF,EAAImsF,wBAClBp5D,cAAexI,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,GACxDiyF,eAAgB1nE,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,IAM3D,OAHIwrB,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAASmnE,sBAAsBnmE,kBAAoB,SAASpK,GAChE,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAASmnE,sBAC7B,OAAOpnE,MAAMC,SAASmnE,sBAAsBhmE,4BAA4BhsB,EAAK8rB,IAW/ElB,MAAMC,SAASmnE,sBAAsBhmE,4BAA8B,SAAShsB,EAAK8rB,GAC/E,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAoC0vB,EAAOM,YAC/CpsB,EAAIosF,gBAAgBhwF,GACpB,MACF,KAAK,EACCA,EAA+B0vB,EAAO+B,YAC1C7tB,EAAIizB,iBAAiB72B,GACrB,MACF,KAAK,EACCA,EAA+B0vB,EAAO+B,YAC1C7tB,EAAIkyF,kBAAkB91F,GACtB,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAASmnE,sBAAsBv1F,UAAU+vB,gBAAkB,WAC/D,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAASmnE,sBAAsBrlE,wBAAwBztB,KAAMutB,GAC5DA,EAAOG,mBAWhBhC,MAAMC,SAASmnE,sBAAsBrlE,wBAA0B,SAASE,EAASJ,GAC/E,IAAIK,OAAIvuB,GACRuuB,EAAID,EAAQw/D,wBACNxuF,OAAS,GACb4uB,EAAOO,WACL,EACAF,GAIM,KADVA,EAAID,EAAQsG,qBAEV1G,EAAOwB,WACL,EACAnB,GAIM,KADVA,EAAID,EAAQslE,sBAEV1lE,EAAOwB,WACL,EACAnB,IAUNlC,MAAMC,SAASmnE,sBAAsBv1F,UAAU6vF,gBAAkB,WAC/D,OAA4C/hE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAASmnE,sBAAsBv1F,UAAU0vF,sBAAwB,WACrE,OAA8B5hE,EAAKS,QAAQoC,WACvCluB,KAAKotF,oBAWX1hE,MAAMC,SAASmnE,sBAAsBv1F,UAAU4vF,qBAAuB,WACpE,OAAmC9hE,EAAKS,QAAQqC,UAC5CnuB,KAAKotF,oBAKX1hE,MAAMC,SAASmnE,sBAAsBv1F,UAAU2vF,gBAAkB,SAAShwF,GACxEmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAQ5CwuB,MAAMC,SAASmnE,sBAAsBv1F,UAAU02B,iBAAmB,WAChE,OAA8B5I,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAASmnE,sBAAsBv1F,UAAUw2B,iBAAmB,SAAS72B,GACzEmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAQ1CwuB,MAAMC,SAASmnE,sBAAsBv1F,UAAU01F,kBAAoB,WACjE,OAA8B5nE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAASmnE,sBAAsBv1F,UAAUy1F,kBAAoB,SAAS91F,GAC1EmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAe1CwuB,MAAMC,SAASunE,wBAA0B,SAASrnE,GAChDR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMC,SAASunE,wBAAyB7nE,EAAKS,SACvDR,EAAKU,QAAUC,WACjBP,MAAMC,SAASunE,wBAAwBhnE,YAAc,0CAInDb,EAAKS,QAAQK,qBAWjBT,MAAMC,SAASunE,wBAAwB31F,UAAU6uB,SAAW,SAASC,GACnE,OAAOX,MAAMC,SAASunE,wBAAwB9mE,SAASC,EAAqBrsB,OAa9E0rB,MAAMC,SAASunE,wBAAwB9mE,SAAW,SAASE,EAAiBxrB,GAC1E,IAAO8b,GACLowE,aAAclsF,EAAImsF,yBAMpB,OAHI3gE,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAASunE,wBAAwBvmE,kBAAoB,SAASpK,GAClE,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAASunE,wBAC7B,OAAOxnE,MAAMC,SAASunE,wBAAwBpmE,4BAA4BhsB,EAAK8rB,IAWjFlB,MAAMC,SAASunE,wBAAwBpmE,4BAA8B,SAAShsB,EAAK8rB,GACjF,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAoC0vB,EAAOM,YAC/CpsB,EAAIosF,gBAAgBhwF,GACpB,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAASunE,wBAAwB31F,UAAU+vB,gBAAkB,WACjE,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAASunE,wBAAwBzlE,wBAAwBztB,KAAMutB,GAC9DA,EAAOG,mBAWhBhC,MAAMC,SAASunE,wBAAwBzlE,wBAA0B,SAASE,EAASJ,GACjF,IAAIK,GACJA,EAAID,EAAQw/D,wBACNxuF,OAAS,GACb4uB,EAAOO,WACL,EACAF,IAUNlC,MAAMC,SAASunE,wBAAwB31F,UAAU6vF,gBAAkB,WACjE,OAA4C/hE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAASunE,wBAAwB31F,UAAU0vF,sBAAwB,WACvE,OAA8B5hE,EAAKS,QAAQoC,WACvCluB,KAAKotF,oBAWX1hE,MAAMC,SAASunE,wBAAwB31F,UAAU4vF,qBAAuB,WACtE,OAAmC9hE,EAAKS,QAAQqC,UAC5CnuB,KAAKotF,oBAKX1hE,MAAMC,SAASunE,wBAAwB31F,UAAU2vF,gBAAkB,SAAShwF,GAC1EmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAe5CwuB,MAAMC,SAASwnE,sBAAwB,SAAStnE,GAC9CR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMC,SAASwnE,sBAAuB9nE,EAAKS,SACrDR,EAAKU,QAAUC,WACjBP,MAAMC,SAASwnE,sBAAsBjnE,YAAc,wCAIjDb,EAAKS,QAAQK,qBAWjBT,MAAMC,SAASwnE,sBAAsB51F,UAAU6uB,SAAW,SAASC,GACjE,OAAOX,MAAMC,SAASwnE,sBAAsB/mE,SAASC,EAAqBrsB,OAa5E0rB,MAAMC,SAASwnE,sBAAsB/mE,SAAW,SAASE,EAAiBxrB,GACxE,IAAO8b,GACLowE,aAAclsF,EAAImsF,yBAMpB,OAHI3gE,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAASwnE,sBAAsBxmE,kBAAoB,SAASpK,GAChE,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAASwnE,sBAC7B,OAAOznE,MAAMC,SAASwnE,sBAAsBrmE,4BAA4BhsB,EAAK8rB,IAW/ElB,MAAMC,SAASwnE,sBAAsBrmE,4BAA8B,SAAShsB,EAAK8rB,GAC/E,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAoC0vB,EAAOM,YAC/CpsB,EAAIosF,gBAAgBhwF,GACpB,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAASwnE,sBAAsB51F,UAAU+vB,gBAAkB,WAC/D,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAASwnE,sBAAsB1lE,wBAAwBztB,KAAMutB,GAC5DA,EAAOG,mBAWhBhC,MAAMC,SAASwnE,sBAAsB1lE,wBAA0B,SAASE,EAASJ,GAC/E,IAAIK,GACJA,EAAID,EAAQw/D,wBACNxuF,OAAS,GACb4uB,EAAOO,WACL,EACAF,IAUNlC,MAAMC,SAASwnE,sBAAsB51F,UAAU6vF,gBAAkB,WAC/D,OAA4C/hE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAASwnE,sBAAsB51F,UAAU0vF,sBAAwB,WACrE,OAA8B5hE,EAAKS,QAAQoC,WACvCluB,KAAKotF,oBAWX1hE,MAAMC,SAASwnE,sBAAsB51F,UAAU4vF,qBAAuB,WACpE,OAAmC9hE,EAAKS,QAAQqC,UAC5CnuB,KAAKotF,oBAKX1hE,MAAMC,SAASwnE,sBAAsB51F,UAAU2vF,gBAAkB,SAAShwF,GACxEmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAe5CwuB,MAAMC,SAASynE,wBAA0B,SAASvnE,GAChDR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMC,SAASynE,wBAAyB/nE,EAAKS,SACvDR,EAAKU,QAAUC,WACjBP,MAAMC,SAASynE,wBAAwBlnE,YAAc,0CAInDb,EAAKS,QAAQK,qBAWjBT,MAAMC,SAASynE,wBAAwB71F,UAAU6uB,SAAW,SAASC,GACnE,OAAOX,MAAMC,SAASynE,wBAAwBhnE,SAASC,EAAqBrsB,OAa9E0rB,MAAMC,SAASynE,wBAAwBhnE,SAAW,SAASE,EAAiBxrB,GAC1E,IAAO8b,GACLowE,aAAclsF,EAAImsF,yBAMpB,OAHI3gE,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAASynE,wBAAwBzmE,kBAAoB,SAASpK,GAClE,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAASynE,wBAC7B,OAAO1nE,MAAMC,SAASynE,wBAAwBtmE,4BAA4BhsB,EAAK8rB,IAWjFlB,MAAMC,SAASynE,wBAAwBtmE,4BAA8B,SAAShsB,EAAK8rB,GACjF,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAoC0vB,EAAOM,YAC/CpsB,EAAIosF,gBAAgBhwF,GACpB,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAASynE,wBAAwB71F,UAAU+vB,gBAAkB,WACjE,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAASynE,wBAAwB3lE,wBAAwBztB,KAAMutB,GAC9DA,EAAOG,mBAWhBhC,MAAMC,SAASynE,wBAAwB3lE,wBAA0B,SAASE,EAASJ,GACjF,IAAIK,GACJA,EAAID,EAAQw/D,wBACNxuF,OAAS,GACb4uB,EAAOO,WACL,EACAF,IAUNlC,MAAMC,SAASynE,wBAAwB71F,UAAU6vF,gBAAkB,WACjE,OAA4C/hE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAASynE,wBAAwB71F,UAAU0vF,sBAAwB,WACvE,OAA8B5hE,EAAKS,QAAQoC,WACvCluB,KAAKotF,oBAWX1hE,MAAMC,SAASynE,wBAAwB71F,UAAU4vF,qBAAuB,WACtE,OAAmC9hE,EAAKS,QAAQqC,UAC5CnuB,KAAKotF,oBAKX1hE,MAAMC,SAASynE,wBAAwB71F,UAAU2vF,gBAAkB,SAAShwF,GAC1EmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAe5CwuB,MAAMC,SAAS0nE,oBAAsB,SAASxnE,GAC5CR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMC,SAAS0nE,oBAAqBhoE,EAAKS,SACnDR,EAAKU,QAAUC,WACjBP,MAAMC,SAAS0nE,oBAAoBnnE,YAAc,sCAI/Cb,EAAKS,QAAQK,qBAWjBT,MAAMC,SAAS0nE,oBAAoB91F,UAAU6uB,SAAW,SAASC,GAC/D,OAAOX,MAAMC,SAAS0nE,oBAAoBjnE,SAASC,EAAqBrsB,OAa1E0rB,MAAMC,SAAS0nE,oBAAoBjnE,SAAW,SAASE,EAAiBxrB,GACtE,IAAO8b,GACLowE,aAAclsF,EAAImsF,wBAClBkD,YAAarvF,EAAIsvF,uBACjBv5D,IAAK/1B,EAAIquF,eACTmE,SAAUjoE,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,GACnDyyF,eAAgBloE,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,IAM3D,OAHIwrB,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMC,SAAS0nE,oBAAoB1mE,kBAAoB,SAASpK,GAC9D,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMC,SAAS0nE,oBAC7B,OAAO3nE,MAAMC,SAAS0nE,oBAAoBvmE,4BAA4BhsB,EAAK8rB,IAW7ElB,MAAMC,SAAS0nE,oBAAoBvmE,4BAA8B,SAAShsB,EAAK8rB,GAC7E,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAAoC0vB,EAAOM,YAC/CpsB,EAAIosF,gBAAgBhwF,GACpB,MACF,KAAK,EACCA,EAAoC0vB,EAAOM,YAC/CpsB,EAAIiwF,eAAe7zF,GACnB,MACF,KAAK,EACCA,EAAoC0vB,EAAOM,YAC/CpsB,EAAIu2B,OAAOn6B,GACX,MACF,KAAK,EACCA,EAA+B0vB,EAAO+B,YAC1C7tB,EAAI0yF,YAAYt2F,GAChB,MACF,KAAK,EACCA,EAA+B0vB,EAAO+B,YAC1C7tB,EAAI2yF,kBAAkBv2F,GACtB,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMC,SAAS0nE,oBAAoB91F,UAAU+vB,gBAAkB,WAC7D,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMC,SAAS0nE,oBAAoB5lE,wBAAwBztB,KAAMutB,GAC1DA,EAAOG,mBAWhBhC,MAAMC,SAAS0nE,oBAAoB5lE,wBAA0B,SAASE,EAASJ,GAC7E,IAAIK,OAAIvuB,GACRuuB,EAAID,EAAQw/D,wBACNxuF,OAAS,GACb4uB,EAAOO,WACL,EACAF,IAGJA,EAAID,EAAQ+jE,uBACN/yF,OAAS,GACb4uB,EAAOO,WACL,EACAF,IAGJA,EAAID,EAAQyhE,eACNzwF,OAAS,GACb4uB,EAAOO,WACL,EACAF,GAIM,KADVA,EAAID,EAAQ+lE,gBAEVnmE,EAAOwB,WACL,EACAnB,GAIM,KADVA,EAAID,EAAQgmE,sBAEVpmE,EAAOwB,WACL,EACAnB,IAUNlC,MAAMC,SAAS0nE,oBAAoB91F,UAAU6vF,gBAAkB,WAC7D,OAA4C/hE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAAS0nE,oBAAoB91F,UAAU0vF,sBAAwB,WACnE,OAA8B5hE,EAAKS,QAAQoC,WACvCluB,KAAKotF,oBAWX1hE,MAAMC,SAAS0nE,oBAAoB91F,UAAU4vF,qBAAuB,WAClE,OAAmC9hE,EAAKS,QAAQqC,UAC5CnuB,KAAKotF,oBAKX1hE,MAAMC,SAAS0nE,oBAAoB91F,UAAU2vF,gBAAkB,SAAShwF,GACtEmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAQ5CwuB,MAAMC,SAAS0nE,oBAAoB91F,UAAU+0F,eAAiB,WAC5D,OAA4CjnE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAAS0nE,oBAAoB91F,UAAU6yF,qBAAuB,WAClE,OAA8B/kE,EAAKS,QAAQoC,WACvCluB,KAAKsyF,mBAWX5mE,MAAMC,SAAS0nE,oBAAoB91F,UAAUm0F,oBAAsB,WACjE,OAAmCrmE,EAAKS,QAAQqC,UAC5CnuB,KAAKsyF,mBAKX5mE,MAAMC,SAAS0nE,oBAAoB91F,UAAUwzF,eAAiB,SAAS7zF,GACrEmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAQ5CwuB,MAAMC,SAAS0nE,oBAAoB91F,UAAUs6B,OAAS,WACpD,OAA4CxM,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMC,SAAS0nE,oBAAoB91F,UAAU4xF,aAAe,WAC1D,OAA8B9jE,EAAKS,QAAQoC,WACvCluB,KAAK63B,WAWXnM,MAAMC,SAAS0nE,oBAAoB91F,UAAU6xF,YAAc,WACzD,OAAmC/jE,EAAKS,QAAQqC,UAC5CnuB,KAAK63B,WAKXnM,MAAMC,SAAS0nE,oBAAoB91F,UAAU85B,OAAS,SAASn6B,GAC7DmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAQ5CwuB,MAAMC,SAAS0nE,oBAAoB91F,UAAUm2F,YAAc,WACzD,OAA8BroE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAAS0nE,oBAAoB91F,UAAUi2F,YAAc,SAASt2F,GAClEmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAQ1CwuB,MAAMC,SAAS0nE,oBAAoB91F,UAAUo2F,kBAAoB,WAC/D,OAA8BtoE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,IAK1E0rB,MAAMC,SAAS0nE,oBAAoB91F,UAAUk2F,kBAAoB,SAASv2F,GACxEmuB,EAAKS,QAAQmD,kBAAkBjvB,KAAM,EAAG9C,IAI1CouB,EAAKjuB,OAAO2sC,OAAOhuC,EAAS0vB,MAAMC,2BC9/IlC,IAAIN,EAAOvvB,EAAQ,IACfwvB,EAAOD,EACP7P,EAASvb,SAAS,cAATA,GAEbqrB,EAAKG,aAAa,4BAA6B,KAAMjQ,GAYrDkQ,MAAMkoE,OAAOC,SAAS93D,IAAM,SAASlQ,GACnCR,EAAKS,QAAQC,WAAW/rB,KAAM6rB,EAAU,GAAI,EAAG,KAAM,OAEvDP,EAAK/qB,SAASmrB,MAAMkoE,OAAOC,SAAS93D,IAAK1Q,EAAKS,SAC1CR,EAAKU,QAAUC,WACjBP,MAAMkoE,OAAOC,SAAS93D,IAAI7P,YAAc,6BAItCb,EAAKS,QAAQK,qBAWjBT,MAAMkoE,OAAOC,SAAS93D,IAAIx+B,UAAU6uB,SAAW,SAASC,GACtD,OAAOX,MAAMkoE,OAAOC,SAAS93D,IAAI3P,SAASC,EAAqBrsB,OAajE0rB,MAAMkoE,OAAOC,SAAS93D,IAAI3P,SAAW,SAASE,EAAiBxrB,GAC7D,IAAO8b,GACLk3E,QAASzoE,EAAKS,QAAQmC,oBAAoBntB,EAAK,EAAG,IAClD5D,MAAO4D,EAAI0oF,kBAMb,OAHIl9D,IACF1P,EAAI8P,qBAAuB5rB,GAEtB8b,IAUT8O,MAAMkoE,OAAOC,SAAS93D,IAAIpP,kBAAoB,SAASpK,GACrD,IAAIqK,EAAS,IAAIvB,EAAKwB,aAAatK,GAC/BzhB,EAAM,IAAI4qB,MAAMkoE,OAAOC,SAAS93D,IACpC,OAAOrQ,MAAMkoE,OAAOC,SAAS93D,IAAIjP,4BAA4BhsB,EAAK8rB,IAWpElB,MAAMkoE,OAAOC,SAAS93D,IAAIjP,4BAA8B,SAAShsB,EAAK8rB,GACpE,KAAOA,EAAOG,cACRH,EAAOI,cADc,CAKzB,OADYJ,EAAOK,kBAEnB,KAAK,EACH,IAAI/vB,EAA+B0vB,EAAO6E,aAC1C3wB,EAAIizF,WAAW72F,GACf,MACF,KAAK,EACCA,EAAoC0vB,EAAOM,YAC/CpsB,EAAIq4B,SAASj8B,GACb,MACF,QACE0vB,EAAOS,aAIX,OAAOvsB,GAQT4qB,MAAMkoE,OAAOC,SAAS93D,IAAIx+B,UAAU+vB,gBAAkB,WACpD,IAAIC,EAAS,IAAIlC,EAAKmC,aAEtB,OADA9B,MAAMkoE,OAAOC,SAAS93D,IAAItO,wBAAwBztB,KAAMutB,GACjDA,EAAOG,mBAWhBhC,MAAMkoE,OAAOC,SAAS93D,IAAItO,wBAA0B,SAASE,EAASJ,GACpE,IAAIK,OAAIvuB,GACRuuB,EAAID,EAAQqmE,cACNr1F,OAAS,GACb4uB,EAAOwF,YACL,EACAnF,IAGJA,EAAID,EAAQ87D,iBACN9qF,OAAS,GACb4uB,EAAOO,WACL,EACAF,IAUNlC,MAAMkoE,OAAOC,SAAS93D,IAAIx+B,UAAUy2F,WAAa,WAC/C,OAA8B3oE,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KAK1E0rB,MAAMkoE,OAAOC,SAAS93D,IAAIx+B,UAAUw2F,WAAa,SAAS72F,GACxDmuB,EAAKS,QAAQsM,qBAAqBp4B,KAAM,EAAG9C,IAQ7CwuB,MAAMkoE,OAAOC,SAAS93D,IAAIx+B,UAAU87B,SAAW,WAC7C,OAA4ChO,EAAKS,QAAQmC,oBAAoBjuB,KAAM,EAAG,KASxF0rB,MAAMkoE,OAAOC,SAAS93D,IAAIx+B,UAAUisF,eAAiB,WACnD,OAA8Bn+D,EAAKS,QAAQoC,WACvCluB,KAAKq5B,aAWX3N,MAAMkoE,OAAOC,SAAS93D,IAAIx+B,UAAUksF,cAAgB,WAClD,OAAmCp+D,EAAKS,QAAQqC,UAC5CnuB,KAAKq5B,aAKX3N,MAAMkoE,OAAOC,SAAS93D,IAAIx+B,UAAU47B,SAAW,SAASj8B,GACtDmuB,EAAKS,QAAQsC,oBAAoBpuB,KAAM,EAAG9C,IAI5CouB,EAAKjuB,OAAO2sC,OAAOhuC,EAAS0vB,MAAMkoE,OAAOC,UAQzCnoE,MAAMkoE,OAAOC,SAAS93D,IAAIx+B,UAAU02F,YAAc,WAChD,OAAOj0F,KAAKg0F,aAAa15E,MAAM,KAAKiiD,OAUtC7wC,MAAMkoE,OAAOC,SAAS93D,IAAIx+B,UAAU22F,KAAO,SAASC,EAAY13F,EACZ23F,GAC7CA,IACHA,EAAoB,wBAGc,KAAhCA,EAAkBt1E,QAAQ,GAC5B9e,KAAK+zF,WAAWK,EAAoB,IAAM33F,GAE1CuD,KAAK+zF,WAAWK,EAAoB33F,GAGtCuD,KAAKm5B,SAASg7D,IAahBzoE,MAAMkoE,OAAOC,SAAS93D,IAAIx+B,UAAU82F,OAAS,SAASC,EAAa73F,GACjE,OAAIuD,KAAKi0F,eAAiBx3F,EACjB63F,EAAYt0F,KAAKypF,iBAEjB,oCC7PX,IAAIhqF,EAAQ3D,EAAQ,GAChBy5E,EAASz5E,EAAQ,IACjBwE,EAASxE,EAAQ,GAEjBiI,EAAYtE,EAAMsE,UAClBE,EAAYxE,EAAMwE,UAClBC,EAAWzE,EAAMyE,SACjBC,EAAW1E,EAAM0E,SACjBvB,EAAQnD,EAAMmD,MACdK,EAAWxD,EAAMwD,SACjBE,EAAW1D,EAAM0D,SACjBC,EAAa3D,EAAM2D,WACnBM,EAAajE,EAAMiE,WACnBC,EAAalE,EAAMkE,WACnBG,EAAarE,EAAMqE,WAEnB8jE,EAAY2N,EAAO3N,UAEnB2sB,GACF,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,UACpC,UAAY,WAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,UAAY,WACpC,UAAY,WAAY,UAAY,UACpC,UAAY,UAAY,UAAY,WACpC,WAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,UAAY,WAAY,YAGtC,SAASC,IACP,KAAMx0F,gBAAgBw0F,GACpB,OAAO,IAAIA,EAEb5sB,EAAUvrE,KAAK2D,MACfA,KAAK4T,GACH,WAAY,WACZ,WAAY,WACZ,WAAY,WACZ,WAAY,WACZ,WAAY,WACZ,WAAY,UACZ,UAAY,WACZ,WAAY,WACd5T,KAAKkC,EAAIqyF,EACTv0F,KAAK83E,EAAI,IAAI92E,MAAM,KAyIrB,SAASyzF,EAAQta,EAAI9B,EAAIqc,EAAIC,EAAIC,GAC/B,IAAI33F,EAAKk9E,EAAKua,GAASva,EAAMya,EAG7B,OAFI33F,EAAI,IACNA,GAAK,YACAA,EAGT,SAAS43F,EAAQ1a,EAAI9B,EAAIqc,EAAIC,EAAIC,EAAI/X,GACnC,IAAI5/E,EAAKo7E,EAAKsc,GAAStc,EAAMwE,EAG7B,OAFI5/E,EAAI,IACNA,GAAK,YACAA,EAGT,SAAS63F,EAAS3a,EAAI9B,EAAIqc,EAAIC,EAAIC,GAChC,IAAI33F,EAAKk9E,EAAKua,EAAOva,EAAKya,EAAOF,EAAKE,EAGtC,OAFI33F,EAAI,IACNA,GAAK,YACAA,EAGT,SAAS83F,EAAS5a,EAAI9B,EAAIqc,EAAIC,EAAIC,EAAI/X,GACpC,IAAI5/E,EAAKo7E,EAAKsc,EAAOtc,EAAKwE,EAAO8X,EAAK9X,EAGtC,OAFI5/E,EAAI,IACNA,GAAK,YACAA,EAGT,SAAS+3F,EAAU7a,EAAI9B,GACrB,IAIIp7E,EAJQ8G,EAAUo2E,EAAI9B,EAAI,IAClBt0E,EAAUs0E,EAAI8B,EAAI,GAClBp2E,EAAUs0E,EAAI8B,EAAI,GAK9B,OAFIl9E,EAAI,IACNA,GAAK,YACAA,EAGT,SAASg4F,EAAU9a,EAAI9B,GACrB,IAIIp7E,EAJQgH,EAAUk2E,EAAI9B,EAAI,IAClBp0E,EAAUo0E,EAAI8B,EAAI,GAClBl2E,EAAUo0E,EAAI8B,EAAI,GAK9B,OAFIl9E,EAAI,IACNA,GAAK,YACAA,EAGT,SAASi4F,EAAU/a,EAAI9B,GACrB,IAIIp7E,EAJQ8G,EAAUo2E,EAAI9B,EAAI,IAClBt0E,EAAUo2E,EAAI9B,EAAI,IAClBt0E,EAAUs0E,EAAI8B,EAAI,GAK9B,OAFIl9E,EAAI,IACNA,GAAK,YACAA,EAGT,SAASk4F,EAAUhb,EAAI9B,GACrB,IAIIp7E,EAJQgH,EAAUk2E,EAAI9B,EAAI,IAClBp0E,EAAUk2E,EAAI9B,EAAI,IAClBp0E,EAAUo0E,EAAI8B,EAAI,GAK9B,OAFIl9E,EAAI,IACNA,GAAK,YACAA,EAGT,SAASm4F,EAAUjb,EAAI9B,GACrB,IAIIp7E,EAJQ8G,EAAUo2E,EAAI9B,EAAI,GAClBt0E,EAAUo2E,EAAI9B,EAAI,GAClBn0E,EAASi2E,EAAI9B,EAAI,GAK7B,OAFIp7E,EAAI,IACNA,GAAK,YACAA,EAGT,SAASo4F,EAAUlb,EAAI9B,GACrB,IAIIp7E,EAJQgH,EAAUk2E,EAAI9B,EAAI,GAClBp0E,EAAUk2E,EAAI9B,EAAI,GAClBl0E,EAASg2E,EAAI9B,EAAI,GAK7B,OAFIp7E,EAAI,IACNA,GAAK,YACAA,EAGT,SAASq4F,EAAUnb,EAAI9B,GACrB,IAIIp7E,EAJQ8G,EAAUo2E,EAAI9B,EAAI,IAClBt0E,EAAUs0E,EAAI8B,EAAI,IAClBj2E,EAASi2E,EAAI9B,EAAI,GAK7B,OAFIp7E,EAAI,IACNA,GAAK,YACAA,EAGT,SAASs4F,EAAUpb,EAAI9B,GACrB,IAIIp7E,EAJQgH,EAAUk2E,EAAI9B,EAAI,IAClBp0E,EAAUo0E,EAAI8B,EAAI,IAClBh2E,EAASg2E,EAAI9B,EAAI,GAK7B,OAFIp7E,EAAI,IACNA,GAAK,YACAA,EAxPTwC,EAAMc,SAASi0F,EAAQ5sB,GACvB3rE,EAAOD,QAAUw4F,EAEjBA,EAAOrqE,UAAY,KACnBqqE,EAAOzsB,QAAU,IACjBysB,EAAOxsB,aAAe,IACtBwsB,EAAOvsB,UAAY,IAEnBusB,EAAOj3F,UAAUi4F,cAAgB,SAAuB10F,EAAKiB,GAI3D,IAHA,IAAI+1E,EAAI93E,KAAK83E,EAGJ57E,EAAI,EAAGA,EAAI,GAAIA,IACtB47E,EAAE57E,GAAK4E,EAAIiB,EAAQ7F,GACrB,KAAOA,EAAI47E,EAAEn5E,OAAQzC,GAAK,EAAG,CAC3B,IAAIu5F,EAAQH,EAAUxd,EAAE57E,EAAI,GAAI47E,EAAE57E,EAAI,IAClCw5F,EAAQH,EAAUzd,EAAE57E,EAAI,GAAI47E,EAAE57E,EAAI,IAClCy5F,EAAQ7d,EAAE57E,EAAI,IACd05F,EAAQ9d,EAAE57E,EAAI,IACd25F,EAAQT,EAAUtd,EAAE57E,EAAI,IAAK47E,EAAE57E,EAAI,KACnC45F,EAAQT,EAAUvd,EAAE57E,EAAI,IAAK47E,EAAE57E,EAAI,KACnC65F,EAAQje,EAAE57E,EAAI,IACd85F,EAAQle,EAAE57E,EAAI,IAElB47E,EAAE57E,GAAKkH,EACLqyF,EAAOC,EACPC,EAAOC,EACPC,EAAOC,EACPC,EAAOC,GACTle,EAAE57E,EAAI,GAAKwH,EACT+xF,EAAOC,EACPC,EAAOC,EACPC,EAAOC,EACPC,EAAOC,KAIbxB,EAAOj3F,UAAUutB,QAAU,SAAiBhqB,EAAKiB,GAC/C/B,KAAKw1F,cAAc10F,EAAKiB,GAExB,IAAI+1E,EAAI93E,KAAK83E,EAETh1E,EAAK9C,KAAK4T,EAAE,GACZ7Q,EAAK/C,KAAK4T,EAAE,GACZ5Q,EAAKhD,KAAK4T,EAAE,GACZ1Q,EAAKlD,KAAK4T,EAAE,GACZvQ,EAAKrD,KAAK4T,EAAE,GACZtQ,EAAKtD,KAAK4T,EAAE,GACZrQ,EAAKvD,KAAK4T,EAAE,GACZpQ,EAAKxD,KAAK4T,EAAE,GACZhQ,EAAK5D,KAAK4T,EAAE,GACZ/P,EAAK7D,KAAK4T,EAAE,GACZimE,EAAK75E,KAAK4T,EAAE,IACZomE,EAAKh6E,KAAK4T,EAAE,IACZkmE,EAAK95E,KAAK4T,EAAE,IACZqmE,EAAKj6E,KAAK4T,EAAE,IACZmmE,EAAK/5E,KAAK4T,EAAE,IACZsmE,EAAKl6E,KAAK4T,EAAE,IAEhBtT,EAAON,KAAKkC,EAAEvD,SAAWm5E,EAAEn5E,QAC3B,IAAK,IAAIzC,EAAI,EAAGA,EAAI47E,EAAEn5E,OAAQzC,GAAK,EAAG,CACpC,IAAIu5F,EAAQ1b,EACR2b,EAAQxb,EACRyb,EAAQT,EAAUtxF,EAAIC,GACtB+xF,EAAQT,EAAUvxF,EAAIC,GACtBgyF,EAAQpB,EAAQ7wF,EAAIC,EAAIg2E,EAAIG,EAAIF,GAChCgc,EAAQjB,EAAQjxF,EAAIC,EAAIg2E,EAAIG,EAAIF,EAAIG,GACpC8b,EAAQ/1F,KAAKkC,EAAEhG,GACf85F,EAAQh2F,KAAKkC,EAAEhG,EAAI,GACnB+5F,EAAQne,EAAE57E,GACVg6F,EAAQpe,EAAE57E,EAAI,GAEdi6F,EAAQxyF,EACV8xF,EAAOC,EACPC,EAAOC,EACPC,EAAOC,EACPC,EAAOC,EACPC,EAAOC,GACLE,EAAQtyF,EACV2xF,EAAOC,EACPC,EAAOC,EACPC,EAAOC,EACPC,EAAOC,EACPC,EAAOC,GAETT,EAAQT,EAAUlyF,EAAIC,GACtB2yF,EAAQT,EAAUnyF,EAAIC,GACtB4yF,EAAQb,EAAShyF,EAAIC,EAAIC,EAAIE,EAAIG,GACjCuyF,EAAQb,EAASjyF,EAAIC,EAAIC,EAAIE,EAAIG,EAAIC,GAErC,IAAI+yF,EAAQpzF,EAASwyF,EAAOC,EAAOC,EAAOC,GACtCU,EAAQnzF,EAASsyF,EAAOC,EAAOC,EAAOC,GAE1C7b,EAAKD,EACLI,EAAKD,EAELH,EAAKD,EACLI,EAAKD,EAELH,EAAKj2E,EACLo2E,EAAKn2E,EAELD,EAAKX,EAASM,EAAIC,EAAI2yF,EAAOC,GAC7BvyF,EAAKV,EAASK,EAAIA,EAAI2yF,EAAOC,GAE7B7yF,EAAKF,EACLG,EAAKF,EAELD,EAAKL,EACLM,EAAKJ,EAELF,EAAKF,EACLI,EAAKH,EAELD,EAAKG,EAASkzF,EAAOC,EAAOC,EAAOC,GACnCvzF,EAAKI,EAASgzF,EAAOC,EAAOC,EAAOC,GAGrC1zF,EAAM5C,KAAK4T,EAAG,EAAG9Q,EAAIC,GACrBH,EAAM5C,KAAK4T,EAAG,EAAG5Q,EAAIE,GACrBN,EAAM5C,KAAK4T,EAAG,EAAGvQ,EAAIC,GACrBV,EAAM5C,KAAK4T,EAAG,EAAGrQ,EAAIC,GACrBZ,EAAM5C,KAAK4T,EAAG,EAAGhQ,EAAIC,GACrBjB,EAAM5C,KAAK4T,EAAG,GAAIimE,EAAIG,GACtBp3E,EAAM5C,KAAK4T,EAAG,GAAIkmE,EAAIG,GACtBr3E,EAAM5C,KAAK4T,EAAG,GAAImmE,EAAIG,IAGxBsa,EAAOj3F,UAAU8qE,QAAU,SAAgBtnE,GACzC,MAAY,QAARA,EACKtB,EAAMmC,QAAQ5B,KAAK4T,EAAG,OAEtBnU,EAAM0C,QAAQnC,KAAK4T,EAAG,sCClNjC,IAAInU,EAAQ3D,EAAQ,GAChBy5E,EAASz5E,EAAQ,IACjBy6F,EAAYz6F,EAAQ,IACpBwE,EAASxE,EAAQ,GAEjByG,EAAQ9C,EAAM8C,MACdG,EAAUjD,EAAMiD,QAChBC,EAAUlD,EAAMkD,QAChB6zF,EAAOD,EAAUC,KACjBC,EAAQF,EAAUE,MAClBC,EAASH,EAAUG,OACnBC,EAASJ,EAAUI,OACnBC,EAASL,EAAUK,OACnBC,EAASN,EAAUM,OAEnBjvB,EAAY2N,EAAO3N,UAEnBkvB,GACF,WAAY,WAAY,WAAY,WACpC,UAAY,WAAY,WAAY,WACpC,WAAY,UAAY,UAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,UACpC,UAAY,UAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,UACpC,UAAY,UAAY,UAAY,UACpC,UAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,WAAY,YAGtC,SAAShtB,IACP,KAAM9pE,gBAAgB8pE,GACpB,OAAO,IAAIA,EAEblC,EAAUvrE,KAAK2D,MACfA,KAAK4T,GACH,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,YAEtC5T,KAAKkC,EAAI40F,EACT92F,KAAK83E,EAAI,IAAI92E,MAAM,IAErBvB,EAAMc,SAASupE,EAAQlC,GACvB3rE,EAAOD,QAAU8tE,EAEjBA,EAAO3/C,UAAY,IACnB2/C,EAAO/B,QAAU,IACjB+B,EAAO9B,aAAe,IACtB8B,EAAO7B,UAAY,GAEnB6B,EAAOvsE,UAAUutB,QAAU,SAAiBhqB,EAAKiB,GAG/C,IAFA,IAAI+1E,EAAI93E,KAAK83E,EAEJ57E,EAAI,EAAGA,EAAI,GAAIA,IACtB47E,EAAE57E,GAAK4E,EAAIiB,EAAQ7F,GACrB,KAAOA,EAAI47E,EAAEn5E,OAAQzC,IACnB47E,EAAE57E,GAAKwG,EAAQm0F,EAAO/e,EAAE57E,EAAI,IAAK47E,EAAE57E,EAAI,GAAI06F,EAAO9e,EAAE57E,EAAI,KAAM47E,EAAE57E,EAAI,KAEtE,IAAIsG,EAAIxC,KAAK4T,EAAE,GACXvR,EAAIrC,KAAK4T,EAAE,GACXrX,EAAIyD,KAAK4T,EAAE,GACXpX,EAAIwD,KAAK4T,EAAE,GACXzT,EAAIH,KAAK4T,EAAE,GACXga,EAAI5tB,KAAK4T,EAAE,GACX7T,EAAIC,KAAK4T,EAAE,GACXA,EAAI5T,KAAK4T,EAAE,GAGf,IADAtT,EAAON,KAAKkC,EAAEvD,SAAWm5E,EAAEn5E,QACtBzC,EAAI,EAAGA,EAAI47E,EAAEn5E,OAAQzC,IAAK,CAC7B,IAAIqgF,EAAK55E,EAAQiR,EAAG+iF,EAAOx2F,GAAIq2F,EAAKr2F,EAAGytB,EAAG7tB,GAAIC,KAAKkC,EAAEhG,GAAI47E,EAAE57E,IACvDsgF,EAAKj6E,EAAMm0F,EAAOl0F,GAAIi0F,EAAMj0F,EAAGH,EAAG9F,IACtCqX,EAAI7T,EACJA,EAAI6tB,EACJA,EAAIztB,EACJA,EAAIoC,EAAM/F,EAAG+/E,GACb//E,EAAID,EACJA,EAAI8F,EACJA,EAAIG,EACJA,EAAID,EAAMg6E,EAAIC,GAGhBx8E,KAAK4T,EAAE,GAAKrR,EAAMvC,KAAK4T,EAAE,GAAIpR,GAC7BxC,KAAK4T,EAAE,GAAKrR,EAAMvC,KAAK4T,EAAE,GAAIvR,GAC7BrC,KAAK4T,EAAE,GAAKrR,EAAMvC,KAAK4T,EAAE,GAAIrX,GAC7ByD,KAAK4T,EAAE,GAAKrR,EAAMvC,KAAK4T,EAAE,GAAIpX,GAC7BwD,KAAK4T,EAAE,GAAKrR,EAAMvC,KAAK4T,EAAE,GAAIzT,GAC7BH,KAAK4T,EAAE,GAAKrR,EAAMvC,KAAK4T,EAAE,GAAIga,GAC7B5tB,KAAK4T,EAAE,GAAKrR,EAAMvC,KAAK4T,EAAE,GAAI7T,GAC7BC,KAAK4T,EAAE,GAAKrR,EAAMvC,KAAK4T,EAAE,GAAIA,IAG/Bk2D,EAAOvsE,UAAU8qE,QAAU,SAAgBtnE,GACzC,MAAY,QAARA,EACKtB,EAAMmC,QAAQ5B,KAAK4T,EAAG,OAEtBnU,EAAM0C,QAAQnC,KAAK4T,EAAG,sCCrGjC,IACIxR,EADQtG,EAAQ,GACDsG,OAYnB,SAASo0F,EAAKpmF,EAAGC,EAAG4K,GAClB,OAAQ7K,EAAIC,GAAQD,EAAK6K,EAI3B,SAASw7E,EAAMrmF,EAAGC,EAAG4K,GACnB,OAAQ7K,EAAIC,EAAMD,EAAI6K,EAAM5K,EAAI4K,EAIlC,SAAS87E,EAAI3mF,EAAGC,EAAG4K,GACjB,OAAO7K,EAAIC,EAAI4K,EAbjBjf,EAAQg7F,KARR,SAAct5F,EAAG0S,EAAGC,EAAG4K,GACrB,OAAU,IAANvd,EACK84F,EAAKpmF,EAAGC,EAAG4K,GACV,IAANvd,GAAiB,IAANA,EACNq5F,EAAI3mF,EAAGC,EAAG4K,GACT,IAANvd,EACK+4F,EAAMrmF,EAAGC,EAAG4K,QADrB,GAQFjf,EAAQw6F,KAAOA,EAKfx6F,EAAQy6F,MAAQA,EAKhBz6F,EAAQ+6F,IAAMA,EAKd/6F,EAAQ06F,OAHR,SAAgBtmF,GACd,OAAOhO,EAAOgO,EAAG,GAAKhO,EAAOgO,EAAG,IAAMhO,EAAOgO,EAAG,KAOlDpU,EAAQ26F,OAHR,SAAgBvmF,GACd,OAAOhO,EAAOgO,EAAG,GAAKhO,EAAOgO,EAAG,IAAMhO,EAAOgO,EAAG,KAOlDpU,EAAQ46F,OAHR,SAAgBxmF,GACd,OAAOhO,EAAOgO,EAAG,GAAKhO,EAAOgO,EAAG,IAAOA,IAAM,GAO/CpU,EAAQ66F,OAHR,SAAgBzmF,GACd,OAAOhO,EAAOgO,EAAG,IAAMhO,EAAOgO,EAAG,IAAOA,IAAM,kCC5ChD,IAAI3Q,EAAQzD,EAkCZ,SAAS0E,EAAMC,GACb,OAAoB,IAAhBA,EAAKhC,OACA,IAAMgC,EAENA,EAIX,SAASe,EAAMZ,GAEb,IADA,IAAIK,EAAM,GACDjF,EAAI,EAAGA,EAAI4E,EAAInC,OAAQzC,IAC9BiF,GAAOT,EAAMI,EAAI5E,GAAGyF,SAAS,KAC/B,OAAOR,EAdT1B,EAAMoB,QA9BN,SAAiBC,EAAKC,GACpB,GAAIC,MAAMC,QAAQH,GAChB,OAAOA,EAAII,QACb,IAAKJ,EACH,SACF,IAAIK,KACJ,GAAmB,kBAARL,EAAkB,CAC3B,IAAK,IAAI5E,EAAI,EAAGA,EAAI4E,EAAInC,OAAQzC,IAC9BiF,EAAIjF,GAAc,EAAT4E,EAAI5E,GACf,OAAOiF,EAET,GAAY,QAARJ,EAIF,KAHAD,EAAMA,EAAIM,QAAQ,eAAgB,KAC1BzC,OAAS,IAAM,IACrBmC,EAAM,IAAMA,GACL5E,EAAI,EAAGA,EAAI4E,EAAInC,OAAQzC,GAAK,EACnCiF,EAAIE,KAAKC,SAASR,EAAI5E,GAAK4E,EAAI5E,EAAI,GAAI,UAEzC,IAASA,EAAI,EAAGA,EAAI4E,EAAInC,OAAQzC,IAAK,CACnC,IAAIK,EAAIuE,EAAIS,WAAWrF,GACnBsF,EAAKjF,GAAK,EACVkF,EAAS,IAAJlF,EACLiF,EACFL,EAAIE,KAAKG,EAAIC,GAEbN,EAAIE,KAAKI,GAGf,OAAON,GAUT1B,EAAMiB,MAAQA,EAQdjB,EAAMiC,MAAQA,EAEdjC,EAAMitE,OAAS,SAAgB3uD,EAAKhd,GAClC,MAAY,QAARA,EACKW,EAAMqc,GAENA,kBCxDX,IAAIk5E,EAAgC,YAApBr6F,QAAAs6F,SAAA,aAAAC,WAAA,mBAAYC,IAEtBluB,EAAe+tB,EAAY,GAAK,GAChCruB,EAAiBquB,EAAY,KAAO,KACpCpuB,EAAsBouB,EAAY,IAAO,GAE/Ch7F,EAAOD,SACLktE,eACAN,iBACAC,4CCTK0D,EAAUzwE,EAAQ,KAAlBywE,OAIP,SAASpD,EAAY4F,GACnB,IACI/pE,EAAM,GAGV,OAFAA,GAFiB,mBAEC06C,OAAOqvB,GAAQ,GACjC/pE,GAHiB,mBAGC06C,OAAc,GAAPqvB,GAwE3B9yE,EAAOD,SACLotE,iBAnBF,SAA0BlqD,GAExB,IADA,IAAIla,EAAM,GACD9I,EAAI,EAAGA,EAAKgjB,EAAUvgB,OAASzC,IACtC8I,GAAOmkE,EAAYjqD,EAAUhjB,IAE/B,OAAO8I,GAePqyF,YAnCF,SAAqBC,GAGnB,IAFA,IAAIv5E,EAAMu5E,EAAIh9E,MAAM,IAChBnT,EAAM,GACDjL,EAAI,EAAGA,EAAI6hB,EAAIpf,OAAS,EAAGzC,IAAK,CACvC,IAAIsd,EAAM,KAAOuE,EAAQ,EAAJ7hB,GAAS6hB,EAAQ,EAAJ7hB,EAAQ,GAC1CiL,GAAOgX,OAAOkC,aAAa7G,GAE7B,OAAOrS,GA6BPgjC,uBA1BF,SAAgCmiC,GAC9B,OAAO,IAAIC,GAASC,kBAAkBF,IA0BtCirB,cAlEF,SAAuBx5E,GACrB,GAAmB,kBAARA,EACT,OAAOA,EAIT,IAFA,IAAI/Y,EAAM,GACRsd,EAAOvE,EACA7hB,EAAI,EAAGA,EAAIomB,EAAK3jB,OAAQzC,IAAK,CACpC,IAAI4e,EAAMwH,EAAKpmB,GAAGyF,SAAS,GAAIunB,EAAIpO,EAAI+G,MAAM,aAC7C,GAAIqH,GAAoB,IAAfpO,EAAInc,OAAc,CAGzB,IAFA,IAAI64F,EAActuE,EAAE,GAAGvqB,OACnB84F,EAAQn1E,EAAKpmB,GAAGyF,SAAS,GAAGT,MAAM,EAAIs2F,GACjCE,EAAK,EAAGA,EAAKF,EAAaE,IACjCD,GAASn1E,EAAKo1E,EAAKx7F,GAAGyF,SAAS,GAAGT,MAAM,GAE1C8D,GAAOmZ,OAAOkC,aAAa/e,SAASm2F,EAAO,IAC3Cv7F,GAAKs7F,EAAc,OAEnBxyF,GAAOmZ,OAAOkC,aAAaiC,EAAKpmB,IAGpC,OAAO8I,GA+CPmkE,cACAwuB,gBAhBF,SAAiCC,GAE/B,IADA,IAAI14E,GAAa,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7BuvB,EAAQ,EAAGA,EAAQvvB,EAAUvgB,OAAQ8vC,IAAW,CACvD,IAAIsgC,EAAc,IAAP6oB,EACX14E,EAAYuvB,GAAUsgC,EACtB6oB,GAAQA,EAAO7oB,GAAQ,IAEzB,OAAO7vD,mBC3ET,IAFA,IAAI24E,EAAW,6DACXC,KACI57F,EAAI,EAAGA,EAAI27F,EAASl5F,OAAQzC,IAClC47F,EAAaD,EAASn4C,OAAOxjD,IAAMA,EAErC,IAAI67F,EAAO,GAgEX97F,EAAOD,SACL8sE,SA/DF,SAAkB5qE,GAChB,GAAsB,IAAlBA,EAAOS,OAAc,MAAO,GAEhC,IAAIzC,EAAG6J,EAAGiyF,GAAU,GACpB,IAAK97F,EAAI,EAAGA,EAAIgC,EAAOS,OAAQzC,IAAK,CAClC,IAAK6J,EAAI,EAAGA,EAAIiyF,EAAOr5F,OAAQoH,IAAKiyF,EAAOjyF,KAAO,EAElDiyF,EAAO,IAAM95F,EAAOhC,GAEpB,IAAIuH,EAAQ,EACZ,IAAKsC,EAAI,EAAGA,EAAIiyF,EAAOr5F,SAAUoH,EAC/BiyF,EAAOjyF,IAAMtC,EAEbA,EAASu0F,EAAOjyF,GAAKgyF,EAAQ,EAC7BC,EAAOjyF,IAAMgyF,EAGf,KAAOt0F,GACLu0F,EAAO32F,KAAKoC,EAAQs0F,GAEpBt0F,EAASA,EAAQs0F,EAAQ,EAK7B,IAAK77F,EAAI,EAAiB,IAAdgC,EAAOhC,IAAYA,EAAIgC,EAAOS,OAAS,EAAGzC,IAAK87F,EAAO32F,KAAK,GAEvE,OAAO22F,EAAOC,UAAU3yC,IAAI,SAAS4yC,GAAS,OAAOL,EAASK,KAAUp2E,KAAK,KAqC7E8oB,SAlCF,SAAkBruB,GAChB,GAAsB,IAAlBA,EAAO5d,OAAc,SAEzB,IAAIzC,EAAG6J,EAAGwc,GAAS,GACnB,IAAKrmB,EAAI,EAAGA,EAAIqgB,EAAO5d,OAAQzC,IAAK,CAClC,IAAIK,EAAIggB,EAAOrgB,GACf,KAAMK,KAAKu7F,GAAe,MAAM,IAAIzzF,MAAM,wBAE1C,IAAK0B,EAAI,EAAGA,EAAIwc,EAAM5jB,OAAQoH,IAAKwc,EAAMxc,IAAMgyF,EAC/Cx1E,EAAM,IAAMu1E,EAAav7F,GAEzB,IAAIkH,EAAQ,EACZ,IAAKsC,EAAI,EAAGA,EAAIwc,EAAM5jB,SAAUoH,EAC9Bwc,EAAMxc,IAAMtC,EAEZA,EAAQ8e,EAAMxc,IAAM,EACpBwc,EAAMxc,IAAM,IAGd,KAAOtC,GACL8e,EAAMlhB,KAAa,IAARoC,GAEXA,IAAU,EAKd,IAAKvH,EAAI,EAAiB,MAAdqgB,EAAOrgB,IAAcA,EAAIqgB,EAAO5d,OAAS,EAAGzC,IAAKqmB,EAAMlhB,KAAK,GAExE,OAAOkhB,EAAM01E,2BClEf,IAAIt2F,KAAcA,SAElB1F,EAAOD,QAAUgF,MAAMC,SAAW,SAAU8c,GAC1C,MAA6B,kBAAtBpc,EAAStF,KAAK0hB,qBCHvB9hB,EAAOD,SACHm8F,aAAer8F,EAAQ,KACvBs8F,UAAYt8F,EAAQ,IACpBu8F,SAAWv8F,EAAQ,IACnBw8F,OAASx8F,EAAQ,IACjBy8F,IAAMz8F,EAAQ,IACd2D,MAAQ3D,EAAQ,sBCNpB,IAAM2D,EAAQ3D,EAAQ,IAEf8oF,EAAU9oF,EAAQ,IAAlB8oF,OAMP3oF,EAAOD,SACHw8F,iBALJ,SAA0B1wF,GACtB,OAAO88E,EAAOj4D,kBAAkBltB,EAAM0qC,uBAAuBriC,uBCLjE,IAAMrI,EAAQ3D,EAAQ,IAEfwnC,EAASxnC,EAAQ,IAAjBwnC,MACAwmC,EAAUhuE,EAAQ,IAAlBguE,OAWP7tE,EAAOD,SACHy8F,gBALJ,SAAyBC,GACrB,OAAOp1D,EAAM3W,kBAAkBltB,EAAM0qC,uBAAuBuuD,KAK5DnS,aAXJ,SAAsB77D,GAClB,IACIiuE,EADMjuE,EAAM8Y,iBAAiB9J,aACdpM,kBACnB,OAAOw8C,EAAO6uB,qBCRjB,SAASC,GACV,aAEA,IAAIC,GACFtB,cAAe,SAASh1E,GACtB,OAAOA,EAAM+iC,IAAI,SAASl1C,GAAI,OAAO+N,OAAOkC,aAAajQ,KAAM0R,KAAK,KAEtE6rD,cAAe,SAAS3oE,GACtB,OAAOA,EAAIsV,MAAM,IAAIgrC,IAAI,SAASl1C,GAAK,OAAOA,EAAE7O,WAAW,OAK/Ds3F,EAAcC,MACXvB,cAAe,SAASh1E,GACvB,OAAO87B,mBAAmB06C,OAAOF,EAActB,cAAch1E,MAE/DorD,cAAe,SAAS3oE,GACvB,OAAO6zF,EAAclrB,cAAcqrB,SAAS76C,mBAAmBn5C,OAI5C,qBAAX/I,GAA0BA,EAAOD,QAC1CC,EAAOD,QAAU68F,EAEjBD,EAAQC,cAAgBA,EAzBzB,CA4BC74F,sBC5BD,SAAS44F,GACV,aAEA,IAAIK,GACFC,WAAY,SAAS32E,GAcnB,OAYJ,SAAuBA,GACrB,OAAOA,EAAM+iC,IAAI,SAASl1C,GAAK,OAGhB+oF,EAH+B/oF,EAAEzO,SAAS,IAGpCM,EAHwC,EAIzDk3F,EAAKx6F,OAASsD,EAAYk3F,EACvBn4F,MAAMiB,EAAMk3F,EAAKx6F,OAAS,GAAGmjB,KAAK,KAAOq3E,EAFlD,IAAiBA,EAAMl3F,IAH8C6f,KAAK,IAb/Ds3E,CAAc72E,IAEvB82E,WAAY,SAAS/B,GACnB,GAAIA,EAAI34F,OAAS,IAAM,EAAG,MAAM,IAAI0F,MAAM,oEAE1C,OAD0B,IAAtBizF,EAAIz5E,QAAQ,QAAay5E,EAAMA,EAAIp2F,MAAM,IACtCo2F,EAAIz1E,MAAM,OAAOyjC,IAAI,SAASl1C,GAAK,OAAO9O,SAAS8O,EAAE,QAiB1C,qBAAXnU,GAA0BA,EAAOD,QAC1CC,EAAOD,QAAUi9F,EAEjBL,EAAQK,WAAaA,EA3CtB,CA8CCj5F,wBC9CD,SAAS44F,GACV,aAEA,IAAIU,KAEkB,qBAAXr9F,GAA0BA,EAAOD,SAC1Cs9F,EAASJ,WAAap9F,EAAQ,IAAeo9F,WAC7CI,EAAST,cAAgB/8F,EAAQ,IACjCG,EAAOD,QAAU45E,IAEjB0jB,EAASJ,WAAaN,EAAQK,WAAWC,WACzCI,EAAST,cAAgBD,EAAQC,cACjCD,EAAQhjB,OAASA,GAWnB,IAAIiC,MAGH,WACC,SAAS0hB,EAAQp8F,GAEf,IADA,IAAIq8F,EAAQv0F,KAAK6T,KAAK3b,GACbs8F,EAAS,EAAGA,GAAUD,EAAOC,IACpC,KAAMt8F,EAAIs8F,GAAS,OAAO,EAG5B,OAAO,EAGT,SAASC,EAAkBv8F,GACzB,OAAwB,YAAfA,GAAS,EAAJA,IAAyB,EAKzC,IAFA,IAAIA,EAAI,EACJw8F,EAAS,EACNA,EAAS,IACVJ,EAAQp8F,KACV06E,EAAE8hB,GAAUD,EAAkBz0F,KAAKsB,IAAIpJ,EAAG,EAAI,IAC9Cw8F,KAGFx8F,IAtBH,GA0BD,IAAIy8F,EAAe,SAAUr3E,GAE3B,IADA,IAAI5d,KACKzI,EAAI,EAAGmG,EAAI,EAAGnG,EAAIqmB,EAAM5jB,OAAQzC,IAAKmG,GAAK,EACjDsC,EAAMtC,IAAM,IAAMkgB,EAAMrmB,IAAO,GAAKmG,EAAI,GAE1C,OAAOsC,GAGLk1F,EAAe,SAAUl1F,GAE3B,IADA,IAAI4d,KACKlgB,EAAI,EAAGA,EAAmB,GAAfsC,EAAMhG,OAAa0D,GAAK,EAC1CkgB,EAAMlhB,KAAMsD,EAAMtC,IAAM,KAAQ,GAAKA,EAAI,GAAO,KAElD,OAAOkgB,GAILu1D,KAEAgiB,EAAe,SAAUle,EAAGhC,EAAGn7D,GAMjC,IAJA,IAAIjc,EAAIo5E,EAAE,GAAIv5E,EAAIu5E,EAAE,GAAIr/E,EAAIq/E,EAAE,GAAIp/E,EAAIo/E,EAAE,GACpCz7E,EAAIy7E,EAAE,GAAIhuD,EAAIguD,EAAE,GAAI77E,EAAI67E,EAAE,GAAIhoE,EAAIgoE,EAAE,GAG/B1/E,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,GAAIA,EAAI,GACN47E,EAAE57E,GAAqB,EAAhB09E,EAAEn7D,EAASviB,OACb,CACL,IAAI69F,EAAUjiB,EAAE57E,EAAI,IAChBk+E,GAAY2f,GAAW,GAAOA,IAAY,IAC9BA,GAAW,GAAOA,IAAY,IAC/BA,IAAY,EAEvBC,EAAUliB,EAAE57E,EAAI,GAChBo+E,GAAY0f,GAAW,GAAOA,IAAY,KAC9BA,GAAW,GAAOA,IAAY,IAC/BA,IAAY,GAE3BliB,EAAE57E,GAAKk+E,EAAStC,EAAE57E,EAAI,GAAKo+E,EAASxC,EAAE57E,EAAI,IAG5C,IACIi8E,EAAO31E,EAAIH,EAAMG,EAAIjG,EAAM8F,EAAI9F,EAE/B67E,GAAW51E,GAAK,GAAOA,IAAM,IAAQA,GAAK,GAAOA,IAAM,KAASA,GAAK,GAAOA,IAAM,IAGlFy3F,EAAKrmF,IAFMzT,GAAK,GAAOA,IAAM,IAAQA,GAAK,GAAOA,IAAM,KAASA,GAAK,EAAOA,IAAM,MAJ3EA,EAAIytB,GAAOztB,EAAIJ,GAMC83E,EAAE37E,GAAK47E,EAAE57E,GAGpC0X,EAAI7T,EACJA,EAAI6tB,EACJA,EAAIztB,EACJA,EAAK3D,EAAIy9F,EAAM,EACfz9F,EAAID,EACJA,EAAI8F,EACJA,EAAIG,EACJA,EAAKy3F,GATI7hB,EAASD,GASF,EAIlByD,EAAE,GAAMA,EAAE,GAAKp5E,EAAK,EACpBo5E,EAAE,GAAMA,EAAE,GAAKv5E,EAAK,EACpBu5E,EAAE,GAAMA,EAAE,GAAKr/E,EAAK,EACpBq/E,EAAE,GAAMA,EAAE,GAAKp/E,EAAK,EACpBo/E,EAAE,GAAMA,EAAE,GAAKz7E,EAAK,EACpBy7E,EAAE,GAAMA,EAAE,GAAKhuD,EAAK,EACpBguD,EAAE,GAAMA,EAAE,GAAK77E,EAAK,EACpB67E,EAAE,GAAMA,EAAE,GAAKhoE,EAAK,GAGtB,SAASgiE,EAAOjoD,EAASvE,GACnBuE,EAAQ5vB,cAAgBogB,SAC1BwP,EAAU2rE,EAAST,cAAcC,KAAKnrB,cAAchgD,IAGtD,IAAIiuD,GAAK,WAAY,WAAY,WAAY,WACpC,WAAY,WAAY,UAAY,YAEzCt/E,EAAIs9F,EAAajsE,GACjBxxB,EAAqB,EAAjBwxB,EAAQhvB,OAEhBrC,EAAEH,GAAK,IAAM,KAAS,GAAKA,EAAI,GAC/BG,EAAyB,IAArBH,EAAI,IAAM,GAAM,IAAWA,EAE/B,IAAK,IAAID,EAAE,EAAIA,EAAEI,EAAEqC,OAAQzC,GAAK,GAC9B49F,EAAale,EAAGt/E,EAAGJ,GAGrB,IAAIg+F,EAAcL,EAAaje,GAC/B,OAAOxyD,GAAWA,EAAQ+wE,QAAUD,EAC7B9wE,GAAWA,EAAQgxE,SAAWd,EAAST,cAActB,cAAc2C,GACnEZ,EAASJ,WAAWgB,GAG7BtkB,EAAOn/D,GAAK,SAASkX,EAASvE,GAC5B,OAAOwsD,EAAOA,EAAOjoD,GAAWwsE,SAAQ,IAAS/wE,IArJlD,CAwJCppB,o2mICxJD,SAAUq6F,GACR,aA0BA,IAdA,IAAIC,GAAmB,KAAM,MACzBC,EAAkB,GAClBC,EAAQ,MAAQC,EAAQ,KAAQC,EAAQ,KAAQC,EAAQ,KAAQC,EAAS,GAAIC,EAAS,GAAIC,EAAS,GACnGC,EAASF,EAASC,EAClBE,EAASJ,EAASG,EAElBE,EAAQ,SAASC,EAAIC,GACtBn7F,KAAKo7F,UAAYF,EACjBl7F,KAAKm7F,QAAUA,GAIdE,KACAC,KACKp/F,EAAI,EAAGA,GAAK,MAAQA,EAC1Bo/F,EAAap/F,GAAK,EAuDrB,IAAIq/F,GAJJ,SAAsB3gF,EAAMsgF,EAAIM,GAC7B,OAAON,EAAK,IAAM,MAAQA,GAAMA,EAAK,MAAQ,IAAID,EAAMC,EAAIZ,GAAmB1/E,EAAKsgF,EAAIM,IAjD1F,SAAmB5gF,EAAMsgF,EAAIM,GAC1B,IAAI1zF,EAAMuzF,EAAMH,GAOhB,OANIpzF,IACDA,EAAM8S,EAAKsgF,EAAIM,IACNL,WAAaG,EAAcJ,GAAM,EAAK,KAAQX,IACpDc,EAAMH,GAAMpzF,GAGXA,GASV,SAAoB8S,EAAMsgF,EAAIM,GAC3B,OAASA,EAAc5gF,EAAKsgF,EAAIM,GAAe,IAAIP,EAAMC,EAAI,OAEhE,SAA2BtgF,EAAMsgF,EAAIM,GAClC,IAAIz1F,EACJ,GAAGm1F,EAAKT,GAAUA,EAAQG,GAAUM,GAAMA,EAAKV,GAAWA,EAAQQ,EAASE,EACxE,OAAOtgF,EAAKsgF,EAAIM,GAEnB,GAAGf,GAASS,GAAMA,EAAKT,EAAQG,EAAO,CACnC,IAAIr+F,KACAiI,GAAQ02F,EAAKT,GAASI,EAC1B,IAAK90F,EAAI,EAAGA,EAAI80F,IAAU90F,EACvBxJ,EAAEm+F,EAAQ30F,GAAKy0F,EAAQM,GAAU/0F,EAAIvB,GAExC,OAAO,IAAIy2F,EAAMC,GAAI,EAAG3+F,IAG3B,IAAIk/F,EAASP,EAAKV,EACdkB,EAASD,EAASX,EAClBK,KACJ,GAAc,IAAXO,EACAP,EAAQ,IAAMX,EAAQiB,EAASC,EAAQf,EAAQe,QAI/C,IAFAP,EAAQ,IAAMV,EAAQx1F,KAAKsf,MAAMk3E,EAASV,GAASL,EAAQz1F,KAAKsf,MAAOk3E,EAASV,EAAUD,IAC1FK,EAAQ,MACHp1F,EAAI,EAAGA,EAAI+0F,IAAU/0F,EACvBo1F,EAAQ,GAAGR,EAAQ50F,GAAKm1F,EAAKn1F,EAGnC,OAAO,IAAIk1F,EAAMC,EAAIC,IAnCxB,SAAkBvgF,EAAMsgF,EAAIM,GACzB,IAAIrwE,EAAY,MAAL+vE,EAEPttE,GADQqtE,EAAMU,MAAMxwE,QACV+vE,GACd,OAAW,IAAID,EAAMC,EAAdttE,GAAqC0sE,KAuC/CW,EAAM56E,aAAek7E,EAAW/1C,YAAY,SAAU5qC,EAAMghF,GACzD,OAAO,SAAUV,EAAIM,GAClB,OAAOI,EAAShhF,EAAMsgF,EAAIM,KAE7B,MAEHP,EAAMY,gBAAkB,SAASX,GAC9B,OAAOA,GAAM,OAAUA,GAAM,OAEhCD,EAAMa,eAAiB,SAASZ,GAC7B,OAAOA,GAAM,OAAUA,GAAM,OAGhCD,EAAM19F,UAAUw+F,YAAc,WACvB/7F,KAAKm7F,UACNn7F,KAAKm7F,QAAUF,EAAM56E,aAAargB,KAAKo7F,WAAW,GAAMD,UAI9DF,EAAM19F,UAAUoE,SAAW,WACxB,GAAG3B,KAAKo7F,UAAY,MACjB,OAAOj9E,OAAOkC,aAAargB,KAAKo7F,WAEhC,IAAIhrF,EAAIpQ,KAAKo7F,UAAY,MACzB,OAAOj9E,OAAOkC,aAAapb,KAAKsf,MAAMnU,EAAI,MAAS,MAAQA,EAAI,KAAQ,QAI7E6qF,EAAM19F,UAAUy+F,UAAY,WAEzB,OADAh8F,KAAK+7F,cACE/7F,KAAKm7F,QAAQ,IAAM,MAG7BF,EAAM19F,UAAU0+F,gBAAkB,WAE/B,OADAj8F,KAAK+7F,gBACI/7F,KAAKm7F,QAAQ,IAA0B,IAAnBn7F,KAAKm7F,QAAQ,IAE7CF,EAAM19F,UAAU2+F,UAAY,WAEzB,OADAl8F,KAAK+7F,gBACI/7F,KAAKm7F,QAAQ,IAA0B,IAAnBn7F,KAAKm7F,QAAQ,IAE7CF,EAAM19F,UAAU4+F,kBAAoB,WAEjC,OADAn8F,KAAK+7F,cACI/7F,KAAKm7F,QAAQ,GAAwB,IAAlBn7F,KAAKm7F,QAAQ,GAAa,GAEzDF,EAAM19F,UAAU6+F,aAAe,SAASC,GAErC,GADAr8F,KAAK+7F,eACD/7F,KAAKm7F,QAAQ,GACd,OAAO,KAEV,IAAID,EAAKl7F,KAAKm7F,QAAQ,GAAGkB,EAAUjB,WACnC,OAAOF,EAAKD,EAAM56E,aAAa66E,GAAM,MAGxC,IAAIoB,EAAgB,SAASt3F,GAC1BhF,KAAKgF,IAAMA,EACXhF,KAAKu8F,OAAS,GAEjBD,EAAc/+F,UAAUqd,KAAO,WAC5B,GAAK5a,KAAKgF,KAAOhF,KAAKu8F,OAASv8F,KAAKgF,IAAIrG,OAAO,CAC5C,IACInC,EADA0+F,EAAKl7F,KAAKgF,IAAIzD,WAAWvB,KAAKu8F,UAMlC,OAJGtB,EAAMY,gBAAgBX,IAAOl7F,KAAKu8F,OAASv8F,KAAKgF,IAAIrG,QAAUs8F,EAAMa,eAAgBt/F,EAAIwD,KAAKgF,IAAIzD,WAAWvB,KAAKu8F,WACjHrB,EAAqB,MAAfA,EAAK,QAAmB1+F,EAAG,OAAU,QACzCwD,KAAKu8F,QAEHtB,EAAM56E,aAAa66E,GAG1B,OADAl7F,KAAKgF,IAAM,KACJ,MAIb,IAAIw3F,EAAuB,SAASC,EAAIC,GACrC18F,KAAKy8F,GAAKA,EACVz8F,KAAK28F,UAAYD,EACjB18F,KAAK48F,WAGRJ,EAAqBj/F,UAAUqd,KAAO,WAcnC,GAA0B,IAAvB5a,KAAK48F,OAAOj+F,OAAa,CACzB,IAAIk+F,EAAQ78F,KAAKy8F,GAAG7hF,OACpB,IAAIiiF,EACD,OAAO,KAEV78F,KAAK48F,OAlBR,SAASE,EAAgBJ,EAAMG,GAC5B,IAAIE,EAASF,EAAMb,YACnB,IAAKe,GAAYL,GAAQG,EAAMZ,kBAQ5B,OAAQY,GANR,IADA,IAAI/0F,KACI5L,EAAI,EAAGA,EAAI6gG,EAAOp+F,SAAUzC,EAAE,CACnC,IAAIsG,EAAIs6F,EAAgBJ,EAAMzB,EAAM56E,aAAa08E,EAAO7gG,KACvD4L,EAAMA,EAAIoZ,OAAO1e,GAErB,OAAOsF,EAUIg1F,CAAgB98F,KAAK28F,UAAWE,GAEjD,OAAO78F,KAAK48F,OAAOjoF,SAGtB,IAAIqoF,EAAiB,SAASP,GAC3Bz8F,KAAKy8F,GAAKA,EACVz8F,KAAK48F,WAGRI,EAAez/F,UAAUqd,KAAO,WAC7B,IAAIqiF,EACJ,GAA0B,IAAvBj9F,KAAK48F,OAAOj+F,OACZ,EAAE,CACC,IAAIk+F,EAAQ78F,KAAKy8F,GAAG7hF,OACpB,IAAIiiF,EACD,MAEHI,EAAKJ,EAAMV,oBACX,IAAIe,EAAQl9F,KAAK48F,OAAOj+F,OACxB,GAAU,IAAPs+F,EACA,KAAMC,EAAQ,IAAKA,EAAM,CAGtB,GAFal9F,KAAK48F,OAAOM,EAAQ,GAChBf,qBACPc,EACP,MAITj9F,KAAK48F,OAAO/xD,OAAOqyD,EAAO,EAAGL,SACjB,IAAPI,GAEX,OAAOj9F,KAAK48F,OAAOjoF,SAGtB,IAAIwoF,EAAe,SAASV,GACzBz8F,KAAKy8F,GAAKA,EACVz8F,KAAKo9F,WACLp9F,KAAK48F,UACL58F,KAAKq9F,UAAY,MAGpBF,EAAa5/F,UAAUqd,KAAO,WAC3B,KAA6B,IAAvB5a,KAAK48F,OAAOj+F,QAAa,CAC5B,IAAIk+F,EAAQ78F,KAAKy8F,GAAG7hF,OACpB,IAAIiiF,EAAM,CACP78F,KAAK48F,OAAS58F,KAAKo9F,QACnBp9F,KAAKo9F,WACL,MAEH,GAA2B,IAAxBp9F,KAAKo9F,QAAQz+F,OACbqB,KAAKq9F,UAAYR,EAAMV,oBACvBn8F,KAAKo9F,QAAQ/7F,KAAKw7F,OACd,CACJ,IACIS,EADUt9F,KAAKo9F,QAAQ,GACHhB,aAAaS,GACjCI,EAAKJ,EAAMV,oBACVmB,IAAct9F,KAAKq9F,UAAYJ,GAAyB,IAAnBj9F,KAAKq9F,WAC5Cr9F,KAAKo9F,QAAQ,GAAKE,GAER,IAAPL,IACAj9F,KAAK48F,OAAS58F,KAAKo9F,QACnBp9F,KAAKo9F,YAERp9F,KAAKq9F,UAAYJ,EACjBj9F,KAAKo9F,QAAQ/7F,KAAKw7F,KAI3B,OAAO78F,KAAK48F,OAAOjoF,SAGtB,IAaI4oF,EAAY,SAAS1oF,EAAM7P,GAI5B,IAHA,IAEI63F,EAFAJ,EAdc,SAAS5nF,EAAM7P,GACjC,OAAO6P,GACJ,IAAK,MACF,OAAO,IAAImoF,EAAe,IAAIR,EAAqB,IAAIF,EAAct3F,IAAM,IAC9E,IAAK,OACF,OAAO,IAAIg4F,EAAe,IAAIR,EAAqB,IAAIF,EAAct3F,IAAM,IAC9E,IAAK,MACF,OAAO,IAAIm4F,EAAa,IAAIH,EAAe,IAAIR,EAAqB,IAAIF,EAAct3F,IAAM,KAC/F,IAAK,OACF,OAAO,IAAIm4F,EAAa,IAAIH,EAAe,IAAIR,EAAqB,IAAIF,EAAct3F,IAAM,KAElG,MAAM6P,EAAO,cAGJ2oF,CAAe3oF,EAAM7P,GAC1B8C,EAAM,GAED+0F,EAAQJ,EAAG7hF,QACjB9S,GAAO+0F,EAAMl7F,WAEhB,OAAOmG,GAqBbmzF,EAAMU,OACN8B,GAAGC,IAAG,GAAIC,IAAI,OAAOC,IAAG,GAAID,IAAI,OAAOE,IAAG,GAAIF,IAAI,OAAOG,IAAG,GAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,KAAKC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,KAAKC,IAAI,KAAKC,IAAI,MAAMC,IAAG,GAAIV,IAAI,KAAKO,IAAI,KAAKI,IAAI,OAAOC,IAAG,GAAIjB,IAAI,IAAIC,IAAI,IAAII,IAAI,IAAII,IAAI,IAAIS,IAAI,MAAMC,IAAG,GAAId,IAAI,KAAKI,IAAI,IAAIG,IAAI,KAAKM,IAAI,KAAKE,IAAI,KAAKJ,IAAI,OAAOK,IAAG,GAAItB,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,KAAKC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,KAAKE,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,KAAKM,IAAI,IAAIJ,IAAI,IAAIM,IAAI,KAAKE,IAAI,OAAOC,IAAG,GAAIlB,IAAI,OAAOmB,IAAG,GAAIxB,IAAI,IAAIC,IAAI,IAAIE,IAAI,KAAKC,IAAI,IAAIC,IAAI,IAAII,IAAI,IAAIS,IAAI,MAAMO,IAAG,GAAIxB,IAAI,IAAII,IAAI,KAAKC,IAAI,KAAKG,IAAI,IAAIG,IAAI,KAAKM,IAAI,KAAKQ,IAAI,OAAOC,IAAG,GAAI5B,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,KAAKE,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,KAAKE,IAAI,IAAIQ,IAAI,OAAOM,IAAG,GAAI3B,IAAI,MAAM4B,IAAG,GAAI7B,IAAI,KAAKS,IAAI,IAAIG,IAAI,KAAKM,IAAI,IAAIF,IAAI,OAAOc,IAAG,GAAI9B,IAAI,IAAIS,IAAI,IAAIG,IAAI,KAAKM,IAAI,IAAIE,IAAI,KAAKJ,IAAI,OAAOe,IAAG,GAAI/B,IAAI,KAAKK,IAAI,KAAKO,IAAI,OAAOoB,IAAG,GAAIjC,IAAI,IAAIC,IAAI,IAAIE,IAAI,IAAIG,IAAI,KAAKI,IAAI,IAAIG,IAAI,KAAKM,IAAI,IAAIE,IAAI,KAAKJ,IAAI,OAAOiB,IAAG,GAAIlC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,KAAK2B,IAAI,IAAIzB,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIwB,IAAI,IAAIvB,IAAI,KAAKE,IAAI,MAAMsB,IAAG,GAAIpC,IAAI,KAAKK,IAAI,OAAOgC,IAAG,GAAIrC,IAAI,IAAIK,IAAI,KAAKI,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,KAAKM,IAAI,IAAIF,IAAI,OAAOsB,IAAG,GAAItC,IAAI,IAAIC,IAAI,IAAII,IAAI,KAAKI,IAAI,IAAIG,IAAI,KAAK2B,IAAI,IAAIrB,IAAI,MAAMsB,IAAG,GAAInC,IAAI,KAAKI,IAAI,IAAIG,IAAI,KAAK2B,IAAI,IAAIrB,IAAI,IAAIE,IAAI,KAAKJ,IAAI,OAAOyB,IAAG,GAAI1C,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIE,IAAI,IAAIC,IAAI,KAAKC,IAAI,IAAI0B,IAAI,IAAIzB,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIwB,IAAI,IAAIvB,IAAI,KAAK8B,IAAI,KAAK5B,IAAI,IAAIM,IAAI,KAAKE,IAAI,OAAOqB,IAAG,GAAIzC,IAAI,KAAKU,IAAI,OAAOgC,IAAG,GAAI7C,IAAI,KAAKC,IAAI,KAAKC,IAAI,IAAII,IAAI,KAAKC,IAAI,KAAKM,IAAI,OAAOiC,IAAG,GAAIxC,IAAI,KAAKC,IAAI,OAAOwC,IAAG,GAAI/C,IAAI,KAAKC,IAAI,IAAIC,IAAI,IAAIC,IAAI,KAAKC,IAAI,IAAIE,IAAI,KAAKC,IAAI,IAAIC,IAAI,KAAKK,IAAI,OAAOmC,IAAG,GAAI/C,IAAI,IAAIC,IAAI,KAAKI,IAAI,IAAII,IAAI,IAAIG,IAAI,KAAKI,IAAI,OAAOgC,IAAG,GAAIjD,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,KAAKC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,KAAKC,IAAI,KAAKC,IAAI,MAAMmC,IAAG,GAAI5C,IAAI,KAAKO,IAAI,KAAKI,IAAI,OAAOkC,IAAG,GAAIlD,IAAI,IAAIC,IAAI,IAAII,IAAI,IAAII,IAAI,IAAIS,IAAI,MAAMiC,KAAI,GAAI9C,IAAI,KAAKI,IAAI,IAAIG,IAAI,KAAKM,IAAI,KAAKE,IAAI,KAAKJ,IAAI,OAAOoC,KAAI,GAAIrD,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,KAAKC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,KAAKE,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,KAAKM,IAAI,IAAIJ,IAAI,IAAIM,IAAI,KAAKE,IAAI,OAAO+B,KAAI,GAAIhD,IAAI,OAAOiD,KAAI,GAAItD,IAAI,IAAIC,IAAI,IAAIE,IAAI,KAAKC,IAAI,IAAIC,IAAI,IAAII,IAAI,IAAIS,IAAI,MAAMqC,KAAI,GAAItD,IAAI,IAAII,IAAI,KAAKC,IAAI,KAAKG,IAAI,IAAIG,IAAI,KAAKM,IAAI,KAAKQ,IAAI,KAAKV,IAAI,OAAOwC,KAAI,GAAIzD,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIE,IAAI,IAAIC,IAAI,KAAKE,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,KAAKE,IAAI,IAAIQ,IAAI,OAAOmC,KAAI,GAAIxD,IAAI,IAAIQ,IAAI,MAAMiD,KAAI,GAAI1D,IAAI,KAAKS,IAAI,IAAIG,IAAI,KAAKM,IAAI,IAAIF,IAAI,OAAO2C,KAAI,GAAI3D,IAAI,IAAIS,IAAI,IAAIG,IAAI,KAAKM,IAAI,IAAIE,IAAI,KAAKJ,IAAI,OAAO4C,KAAI,GAAI5D,IAAI,KAAKK,IAAI,KAAKO,IAAI,OAAOiD,KAAI,GAAI9D,IAAI,IAAIC,IAAI,IAAIE,IAAI,IAAIG,IAAI,KAAKI,IAAI,IAAIG,IAAI,KAAKM,IAAI,IAAIE,IAAI,KAAKJ,IAAI,OAAO8C,KAAI,GAAI/D,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,KAAK2B,IAAI,IAAIzB,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIwB,IAAI,IAAIvB,IAAI,KAAKE,IAAI,MAAMiD,KAAI,GAAI/D,IAAI,KAAKK,IAAI,OAAO2D,KAAI,GAAIhE,IAAI,IAAIK,IAAI,KAAKI,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,KAAKM,IAAI,IAAIF,IAAI,OAAOiD,KAAI,GAAIjE,IAAI,IAAIC,IAAI,IAAII,IAAI,KAAKI,IAAI,IAAIG,IAAI,KAAK2B,IAAI,IAAIrB,IAAI,MAAMgD,KAAI,GAAI7D,IAAI,KAAKC,IAAI,KAAKG,IAAI,IAAIG,IAAI,KAAK2B,IAAI,IAAIrB,IAAI,IAAIE,IAAI,KAAKJ,IAAI,OAAOmD,KAAI,GAAIpE,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIE,IAAI,IAAIC,IAAI,KAAKC,IAAI,IAAI0B,IAAI,IAAIzB,IAAI,IAAIC,IAAI,IAAIC,IAAI,IAAIwB,IAAI,IAAIvB,IAAI,KAAK8B,IAAI,KAAK5B,IAAI,IAAIM,IAAI,KAAKE,IAAI,OAAO8C,KAAI,GAAIlE,IAAI,KAAKU,IAAI,OAAOyD,KAAI,GAAItE,IAAI,KAAKC,IAAI,KAAKC,IAAI,IAAII,IAAI,KAAKC,IAAI,KAAKE,IAAI,KAAKI,IAAI,OAAO0D,KAAI,GAAIjE,IAAI,KAAKC,IAAI,OAAOiE,KAAI,GAAIxE,IAAI,KAAKC,IAAI,IAAIC,IAAI,IAAIC,IAAI,KAAKC,IAAI,IAAIE,IAAI,KAAKC,IAAI,IAAIC,IAAI,KAAKC,IAAI,KAAKI,IAAI,OAAO4D,KAAI,GAAIxE,IAAI,IAAIC,IAAI,KAAKI,IAAI,IAAII,IAAI,IAAIG,IAAI,KAAKI,IAAI,OAAOyD,MAAM,IAAI,KAAKC,MAAM,GAAG,KAAK,KAAK3E,IAAI,KAAKC,IAAI,IAAI2E,IAAI,OAAOC,MAAM,IAAI,KAAKC,MAAM,GAAG,KAAK,KAAKC,MAAM,IAAI,KAAKC,MAAM,IAAI,KAAKC,MAAM,GAAG,KAAK,KAAKC,MAAM,KAAK,KAAKC,MAAM,GAAG,KAAK,KAAKC,MAAM,IAAI,KAAKC,MAAM,KAAK,KAAKC,MAAM,GAAG,KAAK,IAAI,KAAKC,MAAM,GAAG,KAAK,IAAI,KAAKC,MAAM,GAAG,KAAK,IAAI,KAAKC,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,GAAG,KAAL,EAAY3F,IAAI,KAAKC,IAAI,KAAKE,IAAI,KAAKK,IAAI,OAAOoF,MAAM,GAAG,MAAMC,MAAM,GAAG,KAAL,EAAYzF,IAAI,MAAM0F,MAAM,GAAG,KAAL,EAAY7F,IAAI,MAAM8F,KAAI,GAAI9F,IAAI,IAAIG,IAAI,MAAM4F,MAAM,GAAG,KAAL,EAAY/F,IAAI,OAAOgG,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,GAAG,KAAL,EAAYnG,IAAI,KAAKC,IAAI,KAAKE,IAAI,KAAKK,IAAI,OAAO4F,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,GAAG,KAAL,EAAYvG,IAAI,OAAOwG,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,GAAG,KAAL,EAAY5G,IAAI,KAAKC,IAAI,KAAKE,IAAI,KAAKK,IAAI,OAAOqG,MAAM,GAAG,KAAL,EAAY5G,IAAI,KAAKG,IAAI,IAAIG,IAAI,OAAOuG,MAAM,GAAG,KAAL,EAAY1G,IAAI,MAAM2G,KAAI,GAAI9G,IAAI,MAAM+G,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,GAAG,KAAL,EAAYnH,IAAI,IAAIC,IAAI,IAAIG,IAAI,IAAIM,IAAI,MAAM0G,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,GAAG,KAAL,EAAYvH,IAAI,KAAKC,IAAI,KAAKE,IAAI,KAAKK,IAAI,OAAOgH,MAAM,GAAG,MAAMC,MAAM,GAAG,KAAL,EAAYrH,IAAI,MAAMsH,MAAM,GAAG,KAAL,EAAYzH,IAAI,MAAM0H,KAAI,GAAI1H,IAAI,IAAIG,IAAI,MAAMwH,MAAM,GAAG,KAAL,EAAY3H,IAAI,OAAO4H,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,KAAN,EAAa/H,IAAI,KAAKC,IAAI,KAAKE,IAAI,KAAKK,IAAI,OAAOwH,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,KAAN,EAAanI,IAAI,OAAOoI,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,KAAN,EAAaxI,IAAI,KAAKC,IAAI,KAAKE,IAAI,KAAKK,IAAI,OAAOiI,MAAM,IAAI,KAAN,EAAaxI,IAAI,KAAKG,IAAI,IAAIG,IAAI,OAAOmI,MAAM,IAAI,KAAN,EAAatI,IAAI,MAAMuI,KAAI,GAAI1I,IAAI,MAAM2I,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,KAAN,EAAa/I,IAAI,IAAIC,IAAI,IAAIG,IAAI,IAAIM,IAAI,MAAMsI,MAAM,IAAI,MAAMC,MAAM,IAAI,OAC9sKC,KAAKA,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,GAAG,KAAL,EAAYpJ,IAAI,KAAKC,IAAI,KAAKE,IAAI,KAAKK,IAAI,OAAO6I,MAAM,GAAG,KAAL,EAAYrJ,IAAI,KAAKC,IAAI,KAAKE,IAAI,KAAKK,IAAI,OAAO8I,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,KAAL,EAAYlK,IAAI,KAAKC,IAAI,OAAOkK,MAAM,IAAI,KAAN,EAAanK,IAAI,KAAKC,IAAI,OAAOmK,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,GAAG,IAAI,KAAKC,MAAM,IAAI,KAAK,KAAKC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,KAAK,KAAKC,MAAM,IAAI,KAAK,KAAKC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,KAAK,KAAKC,MAAM,GAAG,KAAL,EAAYpN,IAAI,KAAKC,IAAI,OAAOoN,MAAM,IAAI,KAAN,EAAarN,IAAI,KAAKC,IAAI,OAAOqN,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,KAAL,EAAY1N,IAAI,OAAO2N,MAAM,IAAI,KAAN,EAAa3N,IAAI,OAAO4N,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,KAAL,EAAYhO,IAAI,OAAOiO,MAAM,IAAI,KAAN,EAAajO,IAAI,OAAOkO,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,KAAL,EAAY3O,IAAI,OAAO4O,MAAM,IAAI,KAAN,EAAa5O,IAAI,OAAO6O,MAAM,GAAG,KAAL,EAAYvO,IAAI,OAAOwO,MAAM,IAAI,KAAN,EAAaxO,IAAI,OAAOyO,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,KAAK,KAAK7P,IAAI,OAAO8P,MAAM,GAAG,KAAL,EAAYpQ,IAAI,KAAKC,IAAI,KAAKE,IAAI,KAAKK,IAAI,KAAKK,IAAI,OAAOwP,MAAM,IAAI,KAAN,EAAarQ,IAAI,KAAKC,IAAI,KAAKE,IAAI,KAAKK,IAAI,KAAKK,IAAI,OAAOyP,MAAM,GAAG,KAAL,EAAYtQ,IAAI,KAAKC,IAAI,KAAKE,IAAI,KAAKK,IAAI,KAAKK,IAAI,OAAO0P,MAAM,IAAI,KAAN,EAAavQ,IAAI,KAAKC,IAAI,KAAKE,IAAI,KAAKK,IAAI,KAAKK,IAAI,OAAO2P,KAAI,GAAI9P,IAAI,MAAM+P,MAAM,GAAG,KAAK,KAAKC,MAAM,GAAG,KAAK,KAAKC,MAAM,IAAI,KAAK,KAAKC,MAAM,GAAG,IAAI,KAAKC,MAAM,GAAG,KAAK,KAAKC,MAAM,IAAI,KAAK,KAAKC,MAAM,GAAG,IAAI,KAAKC,MAAM,GAAG,KAAK,KAAKC,MAAM,IAAI,KAAK,KAAKC,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,KAAL,EAAYxS,IAAI,MAAMyS,MAAM,IAAI,KAAN,EAAazS,IAAI,MAAM0S,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,IAAI,KAAKC,MAAM,GAAG,KAAK,KAAKC,MAAM,IAAI,KAAK,KAAKC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,OAAM,CAAE,MAC9rGC,KAAKA,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,KAAL,EAAY3V,IAAI,MAAM4V,MAAM,GAAG,KAAL,EAAY5V,IAAI,MAAM6V,MAAM,GAAG,KAAL,EAAY5V,IAAI,OAAO6V,MAAM,IAAI,KAAN,EAAa7V,IAAI,OAAO8V,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,KAAL,EAAYnW,IAAI,MAAMoW,MAAM,IAAI,KAAN,EAAapW,IAAI,MAAMqW,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,GAAG,MAAMC,MAAM,IAAI,MAAMC,KAAI,GAAInW,IAAI,MAAMoW,MAAM,KAAK,KAAKC,MAAM,KAAK,KAAKC,MAAM,KAAK,KAAKC,MAAM,KAAK,KAAKC,MAAM,KAAK,KAAKC,MAAM,KAAK,KAAKC,MAAM,KAAK,KAAKC,MAAM,KAAK,KAAKC,MAAM,KAAK,KAAKC,MAAM,GAAG,KAAK,KAAKC,MAAM,GAAG,KAAK,KAAKC,MAAM,GAAG,KAAK,KAAKC,MAAM,GAAG,KAAK,KAAKC,MAAM,GAAG,KAAK,KAAKC,MAAM,GAAG,KAAK,KAAKC,MAAM,KAAK,KAAKC,MAAM,KAAK,KAAKC,MAAM,KAAK,KAAKC,MAAM,KAAK,KAAKC,MAAM,KAAK,KAAKC,OAAM,CAAE,MAC/lClY,KAAKA,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAK+X,KAAI,CAAE,KAAK9X,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKN,IAAI,MAAMO,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAK0B,KAAI,CAAE,KAAKzB,KAAI,CAAE,KAAK0X,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAK1X,KAAI,CAAE,KAAK2X,KAAI,CAAE,KAAK1X,KAAI,CAAE,KAAK2X,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAK3W,KAAI,CAAE,KAAK4W,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKzY,KAAI,CAAE,KAAK8B,KAAI,CAAE,KAAK7B,KAAI,CAAE,KAAK0B,KAAI,CAAE,KAAKrB,KAAI,CAAE,KAAKJ,KAAI,CAAE,KAAKwY,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKrY,KAAI,CAAE,KAAKM,KAAI,CAAE,KAAKgY,KAAI,CAAE,KAAKpY,KAAI,CAAE,KAAKN,KAAI,CAAE,KAAK2Y,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,GAAGC,KAAI,CAAE,GAAGC,KAAI,CAAE,GAAGC,KAAI,CAAE,GAAGra,KAAI,CAAE,GAAGsa,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,MAAM,KAAK,KAAKC,MAAM,KAAK,KAAK9V,KAAI,CAAE,KAAK+V,MAAM,KAAK,KAAKC,MAAM,IAAI,KAAK,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,KAAI,CAAE,KAAKC,MAAM,MAAMC,MAAM,GAAG,KAAK,KAAKC,MAAM,KAAKC,MAAM,GAAG,KAAK,KAAKC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,KAAI,GAAIre,IAAI,KAAKC,IAAI,IAAIG,IAAI,KAAKC,IAAI,KAAKmY,IAAI,KAAKC,IAAI,KAAKoC,IAAI,OAAOyD,KAAI,GAAIte,IAAI,KAAKC,IAAI,IAAIuY,IAAI,KAAKC,IAAI,OAAO8F,KAAI,GAAIve,IAAI,KAAKC,IAAI,IAAIuY,IAAI,KAAKC,IAAI,KAAKoC,IAAI,OAAO2D,KAAI,GAAIxe,IAAI,KAAKC,IAAI,IAAIG,IAAI,KAAKC,IAAI,KAAKE,IAAI,IAAIiY,IAAI,KAAKC,IAAI,OAAOgG,KAAI,GAAIze,IAAI,KAAKC,IAAI,IAAIuY,IAAI,KAAKC,IAAI,OAAOiG,KAAI,GAAIjG,IAAI,OAAOkG,KAAI,GAAI3e,IAAI,KAAKC,IAAI,IAAIG,IAAI,KAAKC,IAAI,KAAKE,IAAI,IAAIkY,IAAI,OAAOmG,KAAI,GAAI5e,IAAI,KAAKC,IAAI,IAAIuY,IAAI,KAAKC,IAAI,KAAKoC,IAAI,OAAOgE,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,KAAN,EAAalE,IAAI,OAAOmE,MAAM,IAAI,MAAMC,MAAM,IAAI,KAAN,EAAapE,IAAI,OAAOqE,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,KAAI,GAAIpf,IAAI,KAAKC,IAAI,IAAIG,IAAI,KAAKC,IAAI,KAAKmY,IAAI,KAAKC,IAAI,KAAK7T,IAAI,KAAKiW,IAAI,OAAOwE,KAAI,GAAIrf,IAAI,KAAKC,IAAI,IAAIuY,IAAI,KAAKC,IAAI,OAAO6G,KAAI,GAAItf,IAAI,KAAKC,IAAI,IAAIuY,IAAI,KAAKC,IAAI,KAAK7T,IAAI,KAAKiW,IAAI,OAAO0E,KAAI,GAAIvf,IAAI,KAAKC,IAAI,IAAIG,IAAI,KAAKC,IAAI,KAAKE,IAAI,IAAIiY,IAAI,KAAKC,IAAI,KAAK7T,IAAI,OAAO4a,KAAI,GAAIxf,IAAI,KAAKC,IAAI,IAAIuY,IAAI,IAAKC,IAAI,OAAOgH,KAAI,GAAIjH,IAAI,KAAKC,IAAI,OAAOiH,KAAI,GAAI1f,IAAI,KAAKC,IAAI,IAAIG,IAAI,KAAKC,IAAI,KAAKE,IAAI,IAAIiY,IAAI,KAAKC,IAAI,KAAK7T,IAAI,OAAO+a,KAAI,GAAI3f,IAAI,KAAKC,IAAI,IAAIuY,IAAI,KAAKC,IAAI,KAAK7T,IAAI,KAAKiW,IAAI,OAAO+E,MAAM,IAAI,KAAN,EAAa5f,IAAI,KAAKC,IAAI,IAAI2E,IAAI,OAAOib,MAAM,IAAI,KAAN,EAAa7f,IAAI,KAAKC,IAAI,IAAI2E,IAAI,OAAOkb,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,IAAI,KAAN,EAAanF,IAAI,OAAOoF,MAAM,KAAK,KAAKC,MAAM,KAAK,KAAKC,MAAM,KAAK,KAAKlgB,IAAI,IAAIM,IAAI,MAAM6f,MAAM,IAAI,MAAMC,MAAM,IAAI,MAAMC,MAAM,KAAK,KAAKC,MAAM,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,MACx4FC,MAAMA,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,MAAK,GAAI/gB,IAAI,OAAOghB,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,MAAK,GAAIthB,IAAI,KAAKE,IAAI,OAAOqhB,MAAK,GAAI3hB,IAAI,OAAO4hB,MAAK,GAAI7hB,IAAI,KAAKK,IAAI,KAAKE,IAAI,OAAOuhB,MAAK,GAAIzhB,IAAI,KAAKE,IAAI,OAAOwhB,MAAK,GAAIxhB,IAAI,OAAOyhB,MAAK,GAAIhiB,IAAI,KAAKI,IAAI,KAAKC,IAAI,KAAKE,IAAI,OAAO0hB,OAAO,KAAK,MAAMC,MAAK,GAAIjiB,IAAI,OAAOkiB,MAAK,GAAI5hB,IAAI,OAAO6hB,MAAK,GAAIhiB,IAAI,KAAKC,IAAI,KAAKE,IAAI,KAAK4B,IAAI,OAAOkgB,MAAK,GAAI9hB,IAAI,OAAO+hB,MAAK,GAAI/hB,IAAI,OAAOgiB,MAAK,GAAIhiB,IAAI,OAAOiiB,MAAK,GAAIniB,IAAI,KAAKE,IAAI,OAAOkiB,MAAK,GAAIxiB,IAAI,OAAOyiB,MAAK,GAAI1iB,IAAI,KAAKK,IAAI,KAAKE,IAAI,OAAOoiB,MAAK,GAAItiB,IAAI,KAAKE,IAAI,OAAOqiB,MAAK,GAAIriB,IAAI,OAAOsiB,MAAK,GAAI7iB,IAAI,KAAKI,IAAI,KAAKC,IAAI,KAAKE,IAAI,OAAOuiB,OAAO,KAAK,MAAMC,MAAK,GAAI9iB,IAAI,OAAO+iB,MAAK,GAAIziB,IAAI,OAAO0iB,MAAK,GAAI7iB,IAAI,KAAKC,IAAI,KAAKE,IAAI,KAAK4B,IAAI,OAAO+gB,MAAK,GAAI3iB,IAAI,OAAO4iB,MAAK,GAAI5iB,IAAI,OAAO6iB,MAAK,GAAI7iB,IAAI,OAAO8iB,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,MAAK,GAAIjjB,IAAI,OAAOkjB,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,MAAK,GAAIljB,IAAI,OAAOmjB,MAAK,GAAInjB,IAAI,OAAOojB,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,MAAK,GAAIvkB,IAAI,OAAOwkB,MAAK,GAAIxkB,IAAI,OAAOykB,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,MAAK,GAAIrlB,IAAI,OAAOslB,MAAK,GAAItlB,IAAI,OAAOulB,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,MAAMC,OAAO,KAAK,OACxxDC,MAAMC,OAAO,KAAK,MAAM,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,IAAIC,MAAK,CAAE,IAAIC,MAAK,CAAE,IAAIC,MAAK,CAAE,IAAIC,MAAK,CAAE,IAAIC,MAAK,CAAE,IAAIC,MAAK,CAAE,IAAIC,MAAK,CAAE,IAAIC,MAAK,CAAE,IAAIC,MAAK,CAAE,IAAIC,MAAK,CAAE,IAAIC,MAAK,CAAE,IAAIC,MAAK,CAAE,IAAIC,MAAK,CAAE,IAAIC,MAAK,CAAE,IAAIC,MAAK,CAAE,IAAIC,MAAK,CAAE,IAAIC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAC3mBC,MAAMC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,IAAIC,MAAK,CAAE,IAAIC,MAAK,CAAE,IAAIC,OAAO,KAAK,OAAOC,OAAO,KAAK,OAAOC,OAAO,KAAK,OAAOC,OAAO,KAAK,OAAOC,OAAO,KAAK,OAAOC,MAAK,GAAIC,KAAK,KAAKC,KAAK,KAAKC,KAAK,OAAOC,MAAK,GAAIF,KAAK,OAAOG,MAAK,GAAIH,KAAK,OAAOI,MAAK,CAAE,IAAIC,MAAK,CAAE,IAAIC,MAAK,CAAE,IAAIC,MAAK,CAAE,IAAIC,MAAK,CAAE,IAAIC,MAAK,CAAE,IAAIC,MAAK,CAAE,IAAIC,MAAK,CAAE,IAAIZ,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKW,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,IAAIC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,OAAOC,MAAK,GAAI5B,KAAK,OAAO6B,OAAO,KAAK,OAAOC,MAAK,GAAI9B,KAAK,OAAO+B,OAAO,KAAK,OAAOC,MAAK,GAAIhC,KAAK,OAAOiC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,MAC3+BC,MAAMC,MAAK,CAAE,IAAIC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,MAC5bmBC,MAAMC,MAAK,GAAIC,KAAK,OAAOC,OAAO,KAAK,OAAOC,MAAK,GAAIF,KAAK,OAAOG,OAAO,KAAK,OAAOC,MAAK,GAAIJ,KAAK,OAAOK,OAAO,KAAK,OAAOL,MAAK,CAAE,GAAGM,MAAK,CAAE,GAAGC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,MAAK,CAAE,GAAGC,MAAK,GAAIC,KAAK,KAAKC,KAAK,OAAOC,OAAO,KAAK,OAAOC,OAAO,KAAK,OAAOC,MAAK,CAAE,GAAGC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,MACnhBC,MAAMC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,MAAK,CAAE,GAAGC,MAAK,CAAE,GAAGC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,MAAK,CAAE,GAAGC,MAAK,CAAE,GAAGC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,GAAGC,OAAM,CAAE,KAAKC,OAAM,CAAE,GAAGC,OAAM,CAAE,KAAKC,OAAM,CAAE,MACvRC,MAAMC,MAAK,CAAE,GAAGC,MAAK,GAAIC,KAAK,KAAKC,KAAK,KAAKC,KAAK,OAAOC,OAAO,KAAK,OAAOC,OAAO,KAAK,OAAOC,OAAO,KAAK,OAAOC,MAAK,CAAE,GAAGC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,MAAK,GAAIC,KAAK,OAAOC,OAAO,KAAK,OAAOC,MAAK,GAAIC,KAAK,KAAKH,KAAK,OAAOI,MAAK,GAAID,KAAK,OAAOE,OAAO,KAAK,OAAOC,OAAO,KAAK,OAAOC,OAAO,KAAK,OAAOC,MAAK,CAAE,IACtUC,MAAMC,MAAK,GAAIC,KAAK,OAAOC,OAAO,KAAK,OAAOC,MAAK,CAAE,GAAGC,MAAK,CAAE,IAAIH,MAAK,CAAE,IAAII,MAAK,CAAE,GAAGC,MAAK,GAAIC,KAAK,OAAOC,OAAO,KAAK,OAAOC,MAAK,GAAIC,KAAK,KAAKH,KAAK,KAAKI,KAAK,OAAOC,OAAO,KAAK,OAAOC,OAAO,KAAK,OAAOC,OAAO,KAAK,MAAP,EAAeP,KAAK,OAAOQ,OAAO,KAAK,OAAOC,MAAK,CAAE,IACzQC,MAAMC,MAAK,GAAIC,KAAK,KAAKC,KAAK,OAAOC,MAAK,GAAIF,KAAK,OAAOG,OAAO,KAAK,OAAOC,OAAO,KAAK,OAAOC,OAAO,KAAK,OAAOC,MAAK,CAAE,GAAGC,MAAK,CAAE,GAAGC,MAAK,GAAID,KAAK,KAAKE,KAAK,KAAKC,KAAK,OAAOC,OAAO,KAAK,OAAOC,OAAO,KAAK,MAAP,EAAeL,KAAK,OAAOM,OAAO,KAAK,OAAOC,OAAO,KAAK,QAClQC,MAAMC,OAAO,KAAK,MAAM,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,GAAGC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,OAAO,KAAK,MAAM,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,MACvPC,MAAMC,OAAO,MAAM,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,OAAO,KAAK,MAAM,KAAKC,MAAK,CAAE,KAAKC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,OAAO,KAAK,MAAM,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,GAAGC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,OAAO,KAAK,MAAM,KAAKC,MAAK,CAAE,MAC1qBC,MAAMC,MAAK,GAAIC,KAAK,OAAOC,OAAO,KAAK,OAAOC,MAAK,CAAE,GAAGC,MAAK,CAAE,GAAGC,MAAK,CAAE,GAAGC,MAAK,CAAE,KAAKC,OAAO,MAAM,KAAKC,OAAM,CAAE,GAAGC,OAAM,CAAE,GAAGC,OAAM,GAAIC,MAAM,QAAQC,QAAQ,MAAM,QAAQC,OAAM,GAAIF,MAAM,QAAQG,QAAQ,MAAM,QAAQC,OAAM,GAAIJ,MAAM,QAAQK,QAAQ,MAAM,QAAQC,OAAM,CAAE,GAAGN,OAAM,CAAE,IAC7RO,MAAMC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,QAAQ,MAAM,QAAQC,QAAQ,MAAM,QAAQC,OAAM,GAAIC,MAAM,QAAQC,OAAM,GAAID,MAAM,QAAQE,OAAM,CAAE,GAAGC,OAAM,CAAE,GAAGC,OAAM,CAAE,GAAGC,OAAM,CAAE,IAClLC,MAAMC,OAAM,CAAE,GAAGC,OAAM,CAAE,GAAGC,OAAM,CAAE,GAAGC,OAAM,CAAE,IAC/CC,MAAMC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,OAAM,CAAE,GAAGC,OAAM,GAAIC,MAAM,MAAMC,MAAM,QAAQC,QAAQ,MAAM,QAAQC,QAAQ,MAAM,QAAQC,OAAM,CAAE,GAAGC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,MACvSC,MAAMC,OAAM,GAAIC,MAAM,MAAMC,MAAM,MAAMC,MAAM,QAAQC,QAAQ,MAAM,QAAQC,QAAQ,MAAM,QAAQC,QAAQ,MAAM,QAAQC,OAAM,CAAE,GAAGC,OAAM,CAAE,IAC3IC,MAAMC,OAAM,GAAIC,MAAM,QAAQC,OAAM,GAAID,MAAM,QAAQE,QAAQ,MAAM,QAAQC,QAAQ,MAAM,QAAQC,OAAM,CAAE,GAAGC,OAAM,CAAE,IACrHC,MAAMC,OAAM,CAAE,GAAGC,OAAM,CAAE,GAAGC,OAAM,CAAE,IACpCC,MAAMC,MAAK,CAAE,GAAGC,MAAK,CAAE,GAAGC,MAAK,CAAE,GAAGC,MAAK,CAAE,MAC3CC,MAAMC,MAAK,CAAE,MACbC,MAAMC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,MACrCC,MAAMC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,GAAGC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,MACvTC,MAAMC,MAAK,GAAIC,KAAK,OAAOC,OAAO,KAAK,OAAOC,MAAK,GAAIF,KAAK,OAAOG,OAAO,KAAK,OAAOC,MAAK,GAAIJ,KAAK,OAAOK,OAAO,KAAK,OAAOC,MAAK,GAAIN,KAAK,OAAOO,OAAO,KAAK,OAAOC,MAAK,GAAIR,KAAK,OAAOS,OAAO,KAAK,OAAOC,MAAK,GAAIV,KAAK,OAAOW,OAAO,KAAK,OAAOC,MAAK,CAAE,GAAGC,MAAK,GAAIb,KAAK,OAAOc,OAAO,KAAK,OAAOC,MAAK,GAAIf,KAAK,OAAOgB,OAAO,KAAK,OAAOC,MAAK,GAAIjB,KAAK,OAAOkB,MAAK,GAAIlB,KAAK,OAAOmB,OAAO,KAAK,OAAOC,OAAO,KAAK,OAAOC,MAAK,GAAIrB,KAAK,OAAOsB,OAAO,KAAK,OAAOC,MAAK,CAAE,GAAGC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,GAAGC,MAAK,CAAE,GAAGC,MAAK,CAAE,GAAGC,MAAK,CAAE,GAAGC,MAAK,CAAE,IAC7mBC,MAAMC,MAAK,CAAE,GAAGC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,GAAGC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,GAAGC,MAAK,CAAE,GAAGC,MAAK,CAAE,GAAGC,MAAK,CAAE,GAAGC,MAAK,CAAE,GAAGC,MAAK,CAAE,GAAGC,MAAK,CAAE,GAAGC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,MAC/TC,MAAMC,OAAO,IAAI,KAAKC,OAAO,KAAK,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,KAAK,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,KAAK,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,MAAM,KAAKC,OAAO,IAAI,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,MAAM,KAAKC,OAAO,MAAM,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,MAAM,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,MAAM,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,MAAM,KAAKC,OAAO,KAAK,KAAKC,OAAO,IAAI,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,MAAM,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,MAAM,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,MAAM,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,KAAKC,MAAK,CAAE,MAC/yEC,MAAMA,OAAO,GAAG,MAAMC,OAAO,GAAG,MAAMC,OAAO,GAAG,MAAMC,OAAO,GAAG,MAAMC,OAAO,GAAG,MAAMC,OAAO,GAAG,MAAMC,OAAO,GAAG,MAAMC,OAAO,GAAG,MAAMC,OAAO,IAAI,MAAMC,OAAO,IAAI,MAAMC,OAAO,GAAG,MAAMC,OAAO,IAAI,MAAMC,OAAO,GAAG,MAAMC,OAAO,IAAI,MAAMC,OAAO,GAAG,MAAMC,OAAO,IAAI,MAAMC,OAAO,GAAG,MAAMC,OAAO,IAAI,MAAMC,OAAO,GAAG,MAAMC,OAAO,IAAI,MAAMC,OAAO,IAAI,MAAMC,OAAO,IAAI,MAAMC,OAAO,IAAI,MAAMC,OAAO,IAAI,MAAMC,OAAO,GAAG,MAAMC,OAAO,IAAI,MAAMC,OAAO,GAAG,MAAMC,OAAO,IAAI,MAAMC,OAAO,IAAI,MAAMC,OAAO,IAAI,MAAMC,OAAO,GAAG,MAAMC,OAAO,IAAI,MAAMC,OAAO,GAAG,MAAMC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O,KAAKC,OAAO,MAAMC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,KAAK,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,KAAK,KAAKC,OAAO,MAAM,KAAKC,OAAO,MAAM,KAAKC,OAAO,MAAM,KAAKC,OAAO,MAAM,KAAKC,OAAO,KAAK,KAAKC,OAAO,GAAG,GAAG,IAAI,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,MAAM,KAAKC,OAAO,IAAI,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,GAAG,KAAK,IAAI,KAAKC,OAAO,GAAG,KAAK,IAAI,KAAKC,OAAO,GAAG,KAAK,GAAG,IAAI,KAAKC,OAAO,GAAG,KAAK,IAAI,KAAKC,OAAO,GAAG,KAAK,IAAI,KAAKC,OAAO,GAAG,KAAK,IAAI,KAAKC,OAAO,GAAG,KAAK,IAAI,KAAKC,OAAO,GAAG,KAAK,IAAI,KAAKC,OAAO,GAAG,KAAK,IAAI,KAAKC,OAAO,GAAG,KAAK,IAAI,KAAKC,OAAO,GAAG,KAAK,IAAI,KAAKC,OAAO,GAAG,KAAK,IAAI,KAAKC,OAAO,GAAG,KAAK,IAAI,KAAKC,OAAO,GAAG,KAAK,IAAI,KAAKC,OAAO,GAAG,KAAK,IAAI,KAAKC,OAAO,GAAG,MAAM,KAAKC,OAAO,IAAI,KAAKC,OAAO,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,KAAK,KAAKC,OAAO,IAAI,KAAK,KAAKC,OAAO,IAAI,IAAI,KAAK,KAAK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,KAAKC,OAAO,GAAG,IAAI,KAAKC,OAAO,GAAG,IAAI,KAAKC,OAAO,GAAG,IAAI,KAAKC,OAAO,GAAG,IAAI,KAAKC,OAAO,GAAG,IAAI,KAAKC,OAAO,GAAG,IAAI,KAAKC,OAAO,GAAG,IAAI,KAAKC,OAAO,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,IAAI,KAAKC,OAAO,GAAG,IAAI,KAAKC,OAAO,GAAG,IAAI,KAAKC,OAAO,GAAG,IAAI,KAAKC,OAAO,GAAG,IAAI,KAAKC,OAAO,GAAG,IAAI,KAAKC,OAAO,GAAG,IAAI,KAAKC,OAAO,GAAG,IAAI,KAAKC,OAAO,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,GAAG,IAAI,KAAKC,OAAO,GAAG,IAAI,IAAI,KAAKC,OAAO,GAAG,IAAI,IAAI,KAAKC,OAAO,GAAG,IAAI,IAAI,KAAKC,OAAO,GAAG,IAAI,IAAI,KAAKC,OAAO,GAAG,IAAI,IAAI,KAAKC,OAAO,GAAG,IAAI,IAAI,KAAKC,OAAO,GAAG,IAAI,IAAI,KAAKC,OAAO,GAAG,IAAI,IAAI,KAAKC,OAAO,GAAG,IAAI,IAAI,KAAKC,OAAO,GAAG,IAAI,IAAI,KAAKC,OAAO,GAAG,IAAI,IAAI,KAAKC,OAAO,GAAG,IAAI,IAAI,KAAKC,OAAO,GAAG,IAAI,IAAI,KAAKC,OAAO,GAAG,IAAI,IAAI,KAAKC,OAAO,GAAG,IAAI,IAAI,KAAKC,OAAO,GAAG,IAAI,IAAI,KAAKC,OAAO,GAAG,IAAI,IAAI,KAAKC,OAAO,GAAG,IAAI,IAAI,KAAKC,OAAO,GAAG,IAAI,IAAI,KAAKC,OAAO,GAAG,IAAI,IAAI,KAAKC,OAAO,GAAG,IAAI,IAAI,KAAKC,OAAO,GAAG,IAAI,IAAI,KAAKC,OAAO,GAAG,IAAI,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,IAAI,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,KAAK,KAAKC,OAAO,IAAI,MAClpFC,OAAOC,QAAQ,KAAK,KAAK,KAAK,MAAM,KAAKC,QAAQ,GAAG,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,GAAG,IAAI,KAAKC,QAAQ,MAAM,KAAK,MAC9HC,OAAOC,QAAQ,KAAK,KAAKC,QAAQ,IAAI,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,MAC5EC,OAAOC,QAAQ,OAAO,KAAKC,OAAM,CAAE,GAAGC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,MACjcC,OAAOC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,MAC1CC,OAAOA,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,KAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QA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IAAI,KAAKC,QAAQ,GAAG,KAAK,IAAI,KAAKC,QAAQ,GAAG,KAAK,IAAI,KAAKC,QAAQ,GAAG,KAAK,IAAI,KAAKC,QAAQ,GAAG,KAAK,IAAI,KAAKC,QAAQ,GAAG,KAAK,IAAI,KAAKC,QAAQ,GAAG,KAAK,IAAI,KAAKC,QAAQ,GAAG,KAAK,IAAI,KAAKC,QAAQ,GAAG,KAAK,IAAI,KAAKC,QAAQ,GAAG,KAAK,IAAI,KAAKC,QAAQ,GAAG,KAAK,KAAK,IAAI,KAAKC,QAAQ,GAAG,KAAK,KAAK,IAAI,KAAKC,QAAQ,GAAG,KAAK,KAAK,IAAI,KAAKC,QAAQ,GAAG,KAAK,KAAK,IAAI,KAAKC,QAAQ,GAAG,KAAK,KAAK,IAAI,KAAKC,QAAQ,GAAG,KAAK,KAAK,IAAI,KAAKC,QAAQ,GAAG,KAAK,KAAK,IAAI,KAAKC,QAAQ,GAAG,KAAK,KAAK,IAAI,KAAKC,QAAQ,GAAG,KAAK,KAAK,IAAI,KAAKC,QAAQ,GAAG,KAAK,KAAK,IAAI,KAAKC,QAAQ,GAAG,KAAK,KAAK,IAAI,KAAKC,QAAQ,GAAG,KAAK,KAAK,IAAI,KAAKC,QAAQ,GAAG,KAAK,KAAK,IAAI,KAAKC,QAAQ,GAAG,KAAK,KAAK,IAAI,KAAKC,QAAQ,GAAG,KAAK,KAAK,IAAI,KAAKC,QAAQ,GAAG,KAAK,KAAK,KAAK,KAAK,KAAK,IAAI,KAAKC,QAAQ,GAAG,KAAK,KAAK,KAAK,KAAK,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,GAAG,MAAM,IAAI,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,GAAG,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,KAAK,KAAK,KAAK,MAAM,KAAKC,QAAQ,KAAK,KAAK,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,OAAO,KAAKC,QAAQ,GAAG,OAAO,KAAKC,QAAQ,GAAG,OAAO,KAAKC,QAAQ,GAAG,OAAO,KAAKC,QAAQ,GAAG,OAAO,KAAKC,QAAQ,GAAG,OAAO,KAAKC,QAAQ,GAAG,OAAO,KAAKC,QAAQ,GAAG,OAAO,KAAKC,QAAQ,GAAG,OAAO,KAAKC,QAAQ,GAAG,GAAG,OAAO,KAAKC,QAAQ,GAAG,GAAG,OAAO,KAAKC,QAAQ,GAAG,GAAG,OAAO,KAAKC,QAAQ,GAAG,KAAK,KAAKC,QAAQ,IAAI,IAAI,KAAK,KAAKC,QAAQ,IAAI,IAAI,KAAKC,QAAQ,GAAG,GAAG,IAAI,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,MACj5KC,OAAOA,QAAQ,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,OAAO,KAAKC,QAAQ,MAAM,OAAO,KAAKC,QAAQ,MAAM,OAAO,KAAKC,QAAQ,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,OAAO,KAAKC,QAAQ,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,OAAO,KAAKC,QAAQ,GAAG,OAAO,KAAKC,QAAQ,GAAG,OAAO,KAAKC,QAAQ,GAAG,OAAO,KAAKC,QAAQ,GAAG,OAAO,KAAKC,QAAQ,GAAG,OAAO,KAAKC,QAAQ,GAAG,OAAO,KAAKC,QAAQ,GAAG,OAAO,KAAKC,QAAQ,GAAG,OAAO,KAAKC,QAAQ,GAAG,OAAO,KAAKC,QAAQ,GAAG,OAAO,KAAKC,QAAQ,GAAG,GAAG,OAAO,KAAKC,QAAQ,GAAG,GAAG,OAAO,KAAKC,QAAQ,GAAG,GAAG,OAAO,KAAKC,QAAQ,GAAG,GAAG,OAAO,KAAKC,QAAQ,GAAG,GAAG,OAAO,KAAKC,QAAQ,GAAG,GAAG,OAAO,KAAKC,QAAQ,GAAG,GAAG,OAAO,KAAKC,QAAQ,GAAG,GAAG,OAAO,KAAKC,QAAQ,GAAG,GAAG,OAAO,KAAKC,QAAQ,GAAG,GAAG,OAAO,KAAKC,QAAQ,GAAG,GAAG,OAAO,KAAKC,QAAQ,GAAG,GAAG,OAAO,KAAKC,QAAQ,GAAG,GAAG,OAAO,KAAKC,QAAQ,GAAG,GAAG,OAAO,KAAKC,QAAQ,GAAG,GAAG,OAAO,KAAKC,QAAQ,IAAI,GAAG,IAAI,KAAKC,QAAQ,IAAI,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,GAAG,KAAK,KAAKC,QAAQ,IAAI,IAAI,KAAKC,QAAQ,IAAI,IAAI,KAAKC,QAAQ,IAAI,KAAK,KAAKC,QAAQ,IAAI,IAAI,KAAK,KAAKC,QAAQ,IAAI,IAAI,KAAK,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,MAAM,OAAO,KAAKC,QAAQ,MAAM,OAAO,KAAKC,QAAQ,MAAM,OAAO,KAAKC,QAAQ,MAAM,OAAO,KAAKC,QAAQ,MAAM,MAAM,MAAM,OAAO,KAAKC,QAAQ,IAAI,IAAI,KAAKC,QAAQ,IAAI,IAAI,KAAKC,QAAQ,IAAI,IAAI,KAAKC,QAAQ,IAAI,IAAI,KAAKC,QAAQ,IAAI,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,GAAG,KAAK,KAAKC,QAAQ,IAAI,GAAG,GAAG,KAAK,KAAKC,QAAQ,IAAI,IAAI,KAAKC,QAAQ,IAAI,IAAI,KAAKC,QAAQ,IAAI,IAAI,KAAKC,QAAQ,IAAI,KAAK,KAAKC,QAAQ,IAAI,KAAK,KAAKC,QAAQ,IAAI,KAAK,KAAKC,QAAQ,GAAG,KAAK,KAAKC,QAAQ,IAAI,GAAG,KAAK,KAAKC,QAAQ,GAAG,GAAG,KAAK,KAAKC,QAAQ,GAAG,GAAG,KAAK,KAAKC,QAAQ,GAAG,GAAG,KAAK,KAAKC,QAAQ,IAAI,MAAM,KAAKC,QAAQ,IAAI,MAAM,KAAKC,QAAQ,IAAI,MAAM,KAAKC,QAAQ,IAAI,MAAM,KAAKC,QAAQ,IAAI,KAAK,KAAKC,QAAQ,IAAI,KAAK,KAAKC,QAAQ,IAAI,KAAK,KAAKC,QAAQ,IAAI,KAAK,KAAKC,QAAQ,GAAG,KAAK,KAAKC,QAAQ,IAAI,KAAK,KAAKC,QAAQ,IAAI,IAAI,KAAK,KAAKC,QAAQ,GAAG,IAAI,KAAK,KAAKC,QAAQ,IAAI,KAAK,KAAKC,QAAQ,IAAI,IAAI,KAAK,KAAKC,QAAQ,IAAI,IAAI,KAAK,KAAKC,QAAQ,GAAG,IAAI,KAAK,KAAKC,QAAQ,IAAI,KAAK,KAAKC,QAAQ,IAAI,IAAI,KAAK,KAAKC,QAAQ,IAAI,KAAK,KAAK,KAAKC,QAAQ,IAAI,KAAK,IAAI,KAAK,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,IAAI,GAAG,IAAI,KAAKC,QAAQ,GAAG,GAAG,IAAI,KAAKC,QAAQ,GAAG,GAAG,IAAI,KAAKC,QAAQ,IAAI,GAAG,KAAK,KAAKC,QAAQ,IAAI,GAAG,IAAI,KAAK,KAAK,KAAKC,QAAQ,IAAI,GAAG,IAAI,KAAK,IAAI,KAAK,KAAKC,QAAQ,IAAI,KAAK,KAAKC,QAAQ,IAAI,KAAK,KAAKC,QAAQ,IAAI,KAAK,KAAKC,QAAQ,IAAI,KAAK,KAAKC,QAAQ,IAAI,IAAI,KAAKC,QAAQ,IAAI,IAAI,KAAKC,QAAQ,IAAI,IAAI,KAAKC,QAAQ,IAAI,IAAI,KAAKC,QAAQ,IAAI,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,IAAI,IAAI,KAAKC,QAAQ,IAAI,IAAI,KAAKC,QAAQ,IAAI,IAAI,KAAKC,QAAQ,IAAI,IAAI,KAAKC,QAAQ,IAAI,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,IAAI,KAAK,KAAKC,QAAQ,GAAG,KAAK,KAAKC,QAAQ,GAAG,GAAG,IAAI,IAAI,KAAKC,QAAQ,GAAG,KAAK,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,KAAK,KAAKC,QAAQ,GAAG,KAAK,IAAI,KAAK,KAAKC,QAAQ,GAAG,IAAI,IAAI,KAAKC,QAAQ,IAAI,IAAI,KAAKC,QAAQ,GAAG,KAAK,KAAKC,QAAQ,IAAI,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,IAAI,KAAK,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,IAAI,KAAK,KAAKC,QAAQ,IAAI,KAAK,KAAKC,QAAQ,IAAI,KAAK,KAAKC,QAAQ,IAAI,IAAI,KAAK,KAAKC,QAAQ,IAAI,KAAK,KAAKC,QAAQ,IAAI,IAAI,KAAKC,QAAQ,IAAI,IAAI,KAAK,KAAKC,QAAQ,IAAI,IAAI,KAAK,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,IAAI,GAAG,IAAI,IAAI,KAAKC,QAAQ,GAAG,GAAG,IAAI,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,IAAI,KAAK,KAAKC,QAAQ,GAAG,KAAK,KAAKC,QAAQ,GAAG,IAAI,KAAKC,QAAQ,GAAG,KAAK,KAAK,KAAKC,QAAQ,GAAG,KAAK,KAAK,KAAKC,QAAQ,GAAG,OAAO,KAAKC,QAAQ,GAAG,OAAO,KAAKC,QAAQ,GAAG,OAAO,KAAKC,QAAQ,GAAG,OAAO,KAAKC,QAAQ,GAAG,OAAO,KAAKC,QAAQ,GAAG,OAAO,KAAKC,QAAQ,GAAG,OAAO,KAAKC,QAAQ,GAAG,OAAO,KAAKC,QAAQ,GAAG,OAAO,KAAKC,QAAQ,GAA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AAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,MACr5IC,OAAOC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,MACz5IC,OAAOC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,MAAM,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,MAAM,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,MAAM,KAAKC,SAAS,MAAM,KAAKC,SAAS,KAAK,KAAKC,SAAS,MAAM,KAAKC,SAAS,KAAK,KAAKC,SAAS,MAAM,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,MAAM,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,MAAM,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,MAC7oJC,OAAOC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,MAAM,KAAKC,SAAS,MAAM,KAAKC,SAAS,KAAK,KAAKC,SAAS,MAAM,KAAKC,SAAS,KAAK,KAAKC,SAAS,MAAM,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,MAAM,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,MAAM,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,MAAM,KAAKC,SAAS,MAAM,KAAKC,SAAS,KAAK,KAAKC,SAAS,MAAM,KAAKC,SAAS,KAAK,KAAKC,SAAS,MAAM,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,MAAM,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,MAAM,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,MAAM,KAAKC,SAAS,MAAM,KAAKC,SAAS,KAAK,KAAKC,SAAS,MAAM,KAAKC,SAAS,KAAK,KAAKC,SAAS,MAAM,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,MAAM,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,MAAM,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,MAAM,KAAKC,SAAS,MAAM,KAAKC,SAAS,KAAK,KAAKC,SAAS,MAAM,KAAKC,SAAS,KAAK,KAAKC,SAAS,MAAM,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,KAAK,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,MAChsJC,OAAOC,QAAO,CAAE,KAAKC,QAAO,CAAE,KAAKC,QAAO,CAAE,KAAKC,QAAO,CAAE,KAAKC,QAAO,CAAE,KAAKC,QAAO,CAAE,KAAKC,QAAO,CAAE,MACptwFC,OAAOC,SAAS,GAAG,IAAI,KAAKC,SAAS,GAAG,IAAI,KAAKC,SAAS,GAAG,IAAI,KAAKC,SAAS,GAAG,IAAI,KAAKC,SAAS,GAAG,IAAI,KAAKC,SAAS,GAAG,IAAI,KAAKC,SAAS,GAAG,IAAI,KAAKC,SAAS,GAAG,IAAI,KAAKC,SAAS,GAAG,IAAI,KAAKC,SAAS,GAAG,IAAI,KAAKC,SAAS,GAAG,IAAI,KAAKC,SAAS,GAAG,GAAG,IAAI,KAAKC,SAAS,GAAG,GAAG,IAAI,KAAKC,SAAS,GAAG,GAAG,IAAI,KAAKC,SAAS,GAAG,GAAG,IAAI,KAAKC,SAAS,GAAG,GAAG,IAAI,KAAKC,SAAS,GAAG,GAAG,IAAI,KAAKC,SAAS,GAAG,GAAG,IAAI,KAAKC,SAAS,GAAG,GAAG,IAAI,KAAKC,SAAS,GAAG,GAAG,IAAI,KAAKC,SAAS,GAAG,GAAG,IAAI,KAAKC,SAAS,GAAG,GAAG,IAAI,KAAKC,SAAS,GAAG,GAAG,IAAI,KAAKC,SAAS,GAAG,GAAG,IAAI,KAAKC,SAAS,GAAG,GAAG,IAAI,KAAKC,SAAS,GAAG,GAAG,IAAI,KAAKC,SAAS,GAAG,GAAG,IAAI,KAAKC,SAAS,GAAG,GAAG,IAAI,KAAKC,SAAS,GAAG,GAAG,IAAI,KAAKC,SAAS,GAAG,GAAG,IAAI,KAAKC,SAAS,GAAG,GAAG,IAAI,KAAKC,SAAS,GAAG,GAAG,IAAI,KAAKC,SAAS,GAAG,GAAG,IAAI,KAAKC,SAAS,GAAG,GAAG,IAAI,KAAKC,SAAS,GAAG,GAAG,IAAI,KAAKC,SAAS,GAAG,GAAG,IAAI,KAAKC,SAAS,GAAG,GAAG,IAAI,KAAKC,SAAS,MAAM,GAAG,OAAO,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,GAAG,IAAI,KAAKC,SAAS,GAAG,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,IAAI,KAAKC,SAAS,GAAG,IAAI,KAAKC,SAAS,GAAG,IAAI,KAAKC,SAAS,GAAG,IAAI,KAAKC,SAAS,GAAG,IAAI,KAAKC,SAAS,GAAG,GAAG,IAAI,KAAKC,SAAS,GAAG,IAAI,KAAKC,SAAS,GAAG,IAAI,KAAKC,SAAS,GAAG,IAAI,KAAKC,SAAS,GAAG,IAAI,MACzlDC,OAAOC,SAAS,MAAM,OAAO,KAAKC,SAAS,MAAM,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,MAAM,MAAM,OAAO,KAAKC,SAAS,MAAM,MAAM,OAAO,KAAKC,SAAS,MAAM,MAAM,OAAO,KAAKC,SAAS,MAAM,MAAM,OAAO,KAAKC,SAAS,MAAM,MAAM,OAAO,KAAKC,SAAS,MAAM,MAAM,OAAO,KAAKC,SAAS,MAAM,MAAM,OAAO,KAAKC,SAAS,MAAM,MAAM,OAAO,KAAKC,SAAS,MAAM,MAAM,OAAO,KAAKC,SAAS,OAAO,KAAKC,SAAS,OAAO,MACvyxjsHC,OAAOA,QAAQ,IAAI,KAAK,KAAKC,QAAQ,IAAI,KAAK,KAAKC,QAAQ,IAAI,KAAK,KAAKC,QAAQ,IAAI,IAAI,KAAK,KAAKC,QAAQ,IAAI,IAAI,KAAK,KAAKC,QAAQ,IAAI,KAAK,KAAKC,QAAQ,IAAI,KAAK,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,OAAM,CAAE,IAAIC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,MAAM,MAAM,KAAKC,QAAQ,MAAM,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,MACriIC,OAAOA,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,GAAG,KAAK,MAAM,KAAKC,QAAQ,GAAG,KAAK,MAAM,KAAKC,QAAQ,GAAG,KAAK,MAAM,KAAKC,QAAQ,GAAG,KAAK,MAAM,KAAKC,QAAQ,GAAG,KAAK,MAAM,KAAKC,QAAQ,GAAG,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,KAAK,MAAM,KAAKC,QAAQ,KAAK,KAAK,MAAM,KAAKC,QAAQ,KAAK,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,MACniyKC,OAAOC,QAAQ,IAAI,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,MAAM,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,OAAM,CAAE,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,GAAG,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,GAAG,MAAM,KAAKC,QAAQ,GAAG,MAAM,KAAKC,QAAQ,GAAG,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,GAAG,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,GAAG,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,GAAG,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,GAAG,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,KAAKC,QAAQ,KAAK,MAAM,MACxhIC,OAAOC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,IAAI,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,KAAK,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OAAO,KAAKC,QAAQ,OA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AI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,OAAO,IAAI,OAAO,IAAI,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,KAAK,OAAO,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAM,QAAQ,MAAO,QACzjxxvlhloBC,cAAcgBC,cAAc,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI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","file":"362e71987217a004fc3f.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/Seed-Recovery/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 127);\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        var hi = c >> 8;\n        var lo = c & 0xff;\n        if (hi)\n          res.push(hi, lo);\n        else\n          res.push(lo);\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      r.strip();\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n","/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');\nvar core_Discover_pb = require('../core/Discover_pb.js');\ngoog.exportSymbol('proto.protocol.Account', null, global);\ngoog.exportSymbol('proto.protocol.Account.Frozen', null, global);\ngoog.exportSymbol('proto.protocol.AccountId', null, global);\ngoog.exportSymbol('proto.protocol.AccountType', null, global);\ngoog.exportSymbol('proto.protocol.Block', null, global);\ngoog.exportSymbol('proto.protocol.BlockHeader', null, global);\ngoog.exportSymbol('proto.protocol.BlockHeader.raw', null, global);\ngoog.exportSymbol('proto.protocol.BlockInventory', null, global);\ngoog.exportSymbol('proto.protocol.BlockInventory.BlockId', null, global);\ngoog.exportSymbol('proto.protocol.BlockInventory.Type', null, global);\ngoog.exportSymbol('proto.protocol.ChainInventory', null, global);\ngoog.exportSymbol('proto.protocol.ChainInventory.BlockId', null, global);\ngoog.exportSymbol('proto.protocol.DisconnectMessage', null, global);\ngoog.exportSymbol('proto.protocol.DynamicProperties', null, global);\ngoog.exportSymbol('proto.protocol.HelloMessage', null, global);\ngoog.exportSymbol('proto.protocol.HelloMessage.BlockId', null, global);\ngoog.exportSymbol('proto.protocol.Inventory', null, global);\ngoog.exportSymbol('proto.protocol.Inventory.InventoryType', null, global);\ngoog.exportSymbol('proto.protocol.Items', null, global);\ngoog.exportSymbol('proto.protocol.Items.ItemType', null, global);\ngoog.exportSymbol('proto.protocol.ReasonCode', null, global);\ngoog.exportSymbol('proto.protocol.TXInput', null, global);\ngoog.exportSymbol('proto.protocol.TXInput.raw', null, global);\ngoog.exportSymbol('proto.protocol.TXOutput', null, global);\ngoog.exportSymbol('proto.protocol.TXOutputs', null, global);\ngoog.exportSymbol('proto.protocol.Transaction', null, global);\ngoog.exportSymbol('proto.protocol.Transaction.Contract', null, global);\ngoog.exportSymbol('proto.protocol.Transaction.Contract.ContractType', null, global);\ngoog.exportSymbol('proto.protocol.Transaction.Result', null, global);\ngoog.exportSymbol('proto.protocol.Transaction.Result.code', null, global);\ngoog.exportSymbol('proto.protocol.Transaction.raw', null, global);\ngoog.exportSymbol('proto.protocol.Transactions', null, global);\ngoog.exportSymbol('proto.protocol.Vote', null, global);\ngoog.exportSymbol('proto.protocol.Votes', null, global);\ngoog.exportSymbol('proto.protocol.Witness', null, global);\ngoog.exportSymbol('proto.protocol.acuthrity', null, global);\ngoog.exportSymbol('proto.protocol.permision', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.AccountId = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.AccountId, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.AccountId.displayName = 'proto.protocol.AccountId';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.AccountId.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.AccountId.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.AccountId} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.AccountId.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    name: msg.getName_asB64(),\n    address: msg.getAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.AccountId}\n */\nproto.protocol.AccountId.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.AccountId;\n  return proto.protocol.AccountId.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.AccountId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.AccountId}\n */\nproto.protocol.AccountId.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setName(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.AccountId.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.AccountId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.AccountId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.AccountId.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes name = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.AccountId.prototype.getName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes name = 1;\n * This is a type-conversion wrapper around `getName()`\n * @return {string}\n */\nproto.protocol.AccountId.prototype.getName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getName()));\n};\n\n\n/**\n * optional bytes name = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getName()`\n * @return {!Uint8Array}\n */\nproto.protocol.AccountId.prototype.getName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getName()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.AccountId.prototype.setName = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes address = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.AccountId.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes address = 2;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nproto.protocol.AccountId.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nproto.protocol.AccountId.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.AccountId.prototype.setAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.Vote = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.Vote, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.Vote.displayName = 'proto.protocol.Vote';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.Vote.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.Vote.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.Vote} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Vote.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    voteAddress: msg.getVoteAddress_asB64(),\n    voteCount: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.Vote}\n */\nproto.protocol.Vote.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.Vote;\n  return proto.protocol.Vote.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.Vote} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.Vote}\n */\nproto.protocol.Vote.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setVoteAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setVoteCount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.Vote.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.Vote.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.Vote} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Vote.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getVoteAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getVoteCount();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes vote_address = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.Vote.prototype.getVoteAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes vote_address = 1;\n * This is a type-conversion wrapper around `getVoteAddress()`\n * @return {string}\n */\nproto.protocol.Vote.prototype.getVoteAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getVoteAddress()));\n};\n\n\n/**\n * optional bytes vote_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getVoteAddress()`\n * @return {!Uint8Array}\n */\nproto.protocol.Vote.prototype.getVoteAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getVoteAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.Vote.prototype.setVoteAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 vote_count = 2;\n * @return {number}\n */\nproto.protocol.Vote.prototype.getVoteCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.Vote.prototype.setVoteCount = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.Account = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.protocol.Account.repeatedFields_, null);\n};\ngoog.inherits(proto.protocol.Account, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.Account.displayName = 'proto.protocol.Account';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.protocol.Account.repeatedFields_ = [5,7,16];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.Account.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.Account.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.Account} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Account.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    accountName: msg.getAccountName_asB64(),\n    type: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    address: msg.getAddress_asB64(),\n    balance: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    votesList: jspb.Message.toObjectList(msg.getVotesList(),\n    proto.protocol.Vote.toObject, includeInstance),\n    assetMap: (f = msg.getAssetMap()) ? f.toObject(includeInstance, undefined) : [],\n    frozenList: jspb.Message.toObjectList(msg.getFrozenList(),\n    proto.protocol.Account.Frozen.toObject, includeInstance),\n    netUsage: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    createTime: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    latestOprationTime: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    allowance: jspb.Message.getFieldWithDefault(msg, 11, 0),\n    latestWithdrawTime: jspb.Message.getFieldWithDefault(msg, 12, 0),\n    code: msg.getCode_asB64(),\n    isWitness: jspb.Message.getFieldWithDefault(msg, 14, false),\n    isCommittee: jspb.Message.getFieldWithDefault(msg, 15, false),\n    frozenSupplyList: jspb.Message.toObjectList(msg.getFrozenSupplyList(),\n    proto.protocol.Account.Frozen.toObject, includeInstance),\n    assetIssuedName: msg.getAssetIssuedName_asB64(),\n    latestAssetOperationTimeMap: (f = msg.getLatestAssetOperationTimeMap()) ? f.toObject(includeInstance, undefined) : [],\n    freeNetUsage: jspb.Message.getFieldWithDefault(msg, 19, 0),\n    freeAssetNetUsageMap: (f = msg.getFreeAssetNetUsageMap()) ? f.toObject(includeInstance, undefined) : [],\n    latestConsumeTime: jspb.Message.getFieldWithDefault(msg, 21, 0),\n    latestConsumeFreeTime: jspb.Message.getFieldWithDefault(msg, 22, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.Account}\n */\nproto.protocol.Account.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.Account;\n  return proto.protocol.Account.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.Account} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.Account}\n */\nproto.protocol.Account.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAccountName(value);\n      break;\n    case 2:\n      var value = /** @type {!proto.protocol.AccountType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBalance(value);\n      break;\n    case 5:\n      var value = new proto.protocol.Vote;\n      reader.readMessage(value,proto.protocol.Vote.deserializeBinaryFromReader);\n      msg.addVotes(value);\n      break;\n    case 6:\n      var value = msg.getAssetMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64);\n         });\n      break;\n    case 7:\n      var value = new proto.protocol.Account.Frozen;\n      reader.readMessage(value,proto.protocol.Account.Frozen.deserializeBinaryFromReader);\n      msg.addFrozen(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNetUsage(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setCreateTime(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestOprationTime(value);\n      break;\n    case 11:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAllowance(value);\n      break;\n    case 12:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestWithdrawTime(value);\n      break;\n    case 13:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setCode(value);\n      break;\n    case 14:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsWitness(value);\n      break;\n    case 15:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsCommittee(value);\n      break;\n    case 16:\n      var value = new proto.protocol.Account.Frozen;\n      reader.readMessage(value,proto.protocol.Account.Frozen.deserializeBinaryFromReader);\n      msg.addFrozenSupply(value);\n      break;\n    case 17:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAssetIssuedName(value);\n      break;\n    case 18:\n      var value = msg.getLatestAssetOperationTimeMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64);\n         });\n      break;\n    case 19:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFreeNetUsage(value);\n      break;\n    case 20:\n      var value = msg.getFreeAssetNetUsageMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64);\n         });\n      break;\n    case 21:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestConsumeTime(value);\n      break;\n    case 22:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestConsumeFreeTime(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.Account.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.Account.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.Account} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Account.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAccountName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      2,\n      f\n    );\n  }\n  f = message.getAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getVotesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      5,\n      f,\n      proto.protocol.Vote.serializeBinaryToWriter\n    );\n  }\n  f = message.getAssetMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getFrozenList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      7,\n      f,\n      proto.protocol.Account.Frozen.serializeBinaryToWriter\n    );\n  }\n  f = message.getNetUsage();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getCreateTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getLatestOprationTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      10,\n      f\n    );\n  }\n  f = message.getAllowance();\n  if (f !== 0) {\n    writer.writeInt64(\n      11,\n      f\n    );\n  }\n  f = message.getLatestWithdrawTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      12,\n      f\n    );\n  }\n  f = message.getCode_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      13,\n      f\n    );\n  }\n  f = message.getIsWitness();\n  if (f) {\n    writer.writeBool(\n      14,\n      f\n    );\n  }\n  f = message.getIsCommittee();\n  if (f) {\n    writer.writeBool(\n      15,\n      f\n    );\n  }\n  f = message.getFrozenSupplyList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      16,\n      f,\n      proto.protocol.Account.Frozen.serializeBinaryToWriter\n    );\n  }\n  f = message.getAssetIssuedName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      17,\n      f\n    );\n  }\n  f = message.getLatestAssetOperationTimeMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(18, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getFreeNetUsage();\n  if (f !== 0) {\n    writer.writeInt64(\n      19,\n      f\n    );\n  }\n  f = message.getFreeAssetNetUsageMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(20, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getLatestConsumeTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      21,\n      f\n    );\n  }\n  f = message.getLatestConsumeFreeTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      22,\n      f\n    );\n  }\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.Account.Frozen = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.Account.Frozen, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.Account.Frozen.displayName = 'proto.protocol.Account.Frozen';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.Account.Frozen.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.Account.Frozen.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.Account.Frozen} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Account.Frozen.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    frozenBalance: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    expireTime: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.Account.Frozen}\n */\nproto.protocol.Account.Frozen.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.Account.Frozen;\n  return proto.protocol.Account.Frozen.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.Account.Frozen} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.Account.Frozen}\n */\nproto.protocol.Account.Frozen.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFrozenBalance(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpireTime(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.Account.Frozen.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.Account.Frozen.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.Account.Frozen} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Account.Frozen.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFrozenBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getExpireTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 frozen_balance = 1;\n * @return {number}\n */\nproto.protocol.Account.Frozen.prototype.getFrozenBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.Account.Frozen.prototype.setFrozenBalance = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int64 expire_time = 2;\n * @return {number}\n */\nproto.protocol.Account.Frozen.prototype.getExpireTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.Account.Frozen.prototype.setExpireTime = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bytes account_name = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.Account.prototype.getAccountName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes account_name = 1;\n * This is a type-conversion wrapper around `getAccountName()`\n * @return {string}\n */\nproto.protocol.Account.prototype.getAccountName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAccountName()));\n};\n\n\n/**\n * optional bytes account_name = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAccountName()`\n * @return {!Uint8Array}\n */\nproto.protocol.Account.prototype.getAccountName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAccountName()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.Account.prototype.setAccountName = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional AccountType type = 2;\n * @return {!proto.protocol.AccountType}\n */\nproto.protocol.Account.prototype.getType = function() {\n  return /** @type {!proto.protocol.AccountType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {!proto.protocol.AccountType} value */\nproto.protocol.Account.prototype.setType = function(value) {\n  jspb.Message.setProto3EnumField(this, 2, value);\n};\n\n\n/**\n * optional bytes address = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.Account.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes address = 3;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nproto.protocol.Account.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nproto.protocol.Account.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.Account.prototype.setAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 balance = 4;\n * @return {number}\n */\nproto.protocol.Account.prototype.getBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.Account.prototype.setBalance = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * repeated Vote votes = 5;\n * @return {!Array.<!proto.protocol.Vote>}\n */\nproto.protocol.Account.prototype.getVotesList = function() {\n  return /** @type{!Array.<!proto.protocol.Vote>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.protocol.Vote, 5));\n};\n\n\n/** @param {!Array.<!proto.protocol.Vote>} value */\nproto.protocol.Account.prototype.setVotesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n\n/**\n * @param {!proto.protocol.Vote=} opt_value\n * @param {number=} opt_index\n * @return {!proto.protocol.Vote}\n */\nproto.protocol.Account.prototype.addVotes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.protocol.Vote, opt_index);\n};\n\n\nproto.protocol.Account.prototype.clearVotesList = function() {\n  this.setVotesList([]);\n};\n\n\n/**\n * map<string, int64> asset = 6;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nproto.protocol.Account.prototype.getAssetMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 6, opt_noLazyCreate,\n      null));\n};\n\n\nproto.protocol.Account.prototype.clearAssetMap = function() {\n  this.getAssetMap().clear();\n};\n\n\n/**\n * repeated Frozen frozen = 7;\n * @return {!Array.<!proto.protocol.Account.Frozen>}\n */\nproto.protocol.Account.prototype.getFrozenList = function() {\n  return /** @type{!Array.<!proto.protocol.Account.Frozen>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.protocol.Account.Frozen, 7));\n};\n\n\n/** @param {!Array.<!proto.protocol.Account.Frozen>} value */\nproto.protocol.Account.prototype.setFrozenList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 7, value);\n};\n\n\n/**\n * @param {!proto.protocol.Account.Frozen=} opt_value\n * @param {number=} opt_index\n * @return {!proto.protocol.Account.Frozen}\n */\nproto.protocol.Account.prototype.addFrozen = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.protocol.Account.Frozen, opt_index);\n};\n\n\nproto.protocol.Account.prototype.clearFrozenList = function() {\n  this.setFrozenList([]);\n};\n\n\n/**\n * optional int64 net_usage = 8;\n * @return {number}\n */\nproto.protocol.Account.prototype.getNetUsage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.Account.prototype.setNetUsage = function(value) {\n  jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * optional int64 create_time = 9;\n * @return {number}\n */\nproto.protocol.Account.prototype.getCreateTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.Account.prototype.setCreateTime = function(value) {\n  jspb.Message.setProto3IntField(this, 9, value);\n};\n\n\n/**\n * optional int64 latest_opration_time = 10;\n * @return {number}\n */\nproto.protocol.Account.prototype.getLatestOprationTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.Account.prototype.setLatestOprationTime = function(value) {\n  jspb.Message.setProto3IntField(this, 10, value);\n};\n\n\n/**\n * optional int64 allowance = 11;\n * @return {number}\n */\nproto.protocol.Account.prototype.getAllowance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.Account.prototype.setAllowance = function(value) {\n  jspb.Message.setProto3IntField(this, 11, value);\n};\n\n\n/**\n * optional int64 latest_withdraw_time = 12;\n * @return {number}\n */\nproto.protocol.Account.prototype.getLatestWithdrawTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.Account.prototype.setLatestWithdrawTime = function(value) {\n  jspb.Message.setProto3IntField(this, 12, value);\n};\n\n\n/**\n * optional bytes code = 13;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.Account.prototype.getCode = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 13, \"\"));\n};\n\n\n/**\n * optional bytes code = 13;\n * This is a type-conversion wrapper around `getCode()`\n * @return {string}\n */\nproto.protocol.Account.prototype.getCode_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getCode()));\n};\n\n\n/**\n * optional bytes code = 13;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getCode()`\n * @return {!Uint8Array}\n */\nproto.protocol.Account.prototype.getCode_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getCode()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.Account.prototype.setCode = function(value) {\n  jspb.Message.setProto3BytesField(this, 13, value);\n};\n\n\n/**\n * optional bool is_witness = 14;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.protocol.Account.prototype.getIsWitness = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 14, false));\n};\n\n\n/** @param {boolean} value */\nproto.protocol.Account.prototype.setIsWitness = function(value) {\n  jspb.Message.setProto3BooleanField(this, 14, value);\n};\n\n\n/**\n * optional bool is_committee = 15;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.protocol.Account.prototype.getIsCommittee = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 15, false));\n};\n\n\n/** @param {boolean} value */\nproto.protocol.Account.prototype.setIsCommittee = function(value) {\n  jspb.Message.setProto3BooleanField(this, 15, value);\n};\n\n\n/**\n * repeated Frozen frozen_supply = 16;\n * @return {!Array.<!proto.protocol.Account.Frozen>}\n */\nproto.protocol.Account.prototype.getFrozenSupplyList = function() {\n  return /** @type{!Array.<!proto.protocol.Account.Frozen>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.protocol.Account.Frozen, 16));\n};\n\n\n/** @param {!Array.<!proto.protocol.Account.Frozen>} value */\nproto.protocol.Account.prototype.setFrozenSupplyList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 16, value);\n};\n\n\n/**\n * @param {!proto.protocol.Account.Frozen=} opt_value\n * @param {number=} opt_index\n * @return {!proto.protocol.Account.Frozen}\n */\nproto.protocol.Account.prototype.addFrozenSupply = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.protocol.Account.Frozen, opt_index);\n};\n\n\nproto.protocol.Account.prototype.clearFrozenSupplyList = function() {\n  this.setFrozenSupplyList([]);\n};\n\n\n/**\n * optional bytes asset_issued_name = 17;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.Account.prototype.getAssetIssuedName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 17, \"\"));\n};\n\n\n/**\n * optional bytes asset_issued_name = 17;\n * This is a type-conversion wrapper around `getAssetIssuedName()`\n * @return {string}\n */\nproto.protocol.Account.prototype.getAssetIssuedName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAssetIssuedName()));\n};\n\n\n/**\n * optional bytes asset_issued_name = 17;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAssetIssuedName()`\n * @return {!Uint8Array}\n */\nproto.protocol.Account.prototype.getAssetIssuedName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAssetIssuedName()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.Account.prototype.setAssetIssuedName = function(value) {\n  jspb.Message.setProto3BytesField(this, 17, value);\n};\n\n\n/**\n * map<string, int64> latest_asset_operation_time = 18;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nproto.protocol.Account.prototype.getLatestAssetOperationTimeMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 18, opt_noLazyCreate,\n      null));\n};\n\n\nproto.protocol.Account.prototype.clearLatestAssetOperationTimeMap = function() {\n  this.getLatestAssetOperationTimeMap().clear();\n};\n\n\n/**\n * optional int64 free_net_usage = 19;\n * @return {number}\n */\nproto.protocol.Account.prototype.getFreeNetUsage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.Account.prototype.setFreeNetUsage = function(value) {\n  jspb.Message.setProto3IntField(this, 19, value);\n};\n\n\n/**\n * map<string, int64> free_asset_net_usage = 20;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nproto.protocol.Account.prototype.getFreeAssetNetUsageMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 20, opt_noLazyCreate,\n      null));\n};\n\n\nproto.protocol.Account.prototype.clearFreeAssetNetUsageMap = function() {\n  this.getFreeAssetNetUsageMap().clear();\n};\n\n\n/**\n * optional int64 latest_consume_time = 21;\n * @return {number}\n */\nproto.protocol.Account.prototype.getLatestConsumeTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.Account.prototype.setLatestConsumeTime = function(value) {\n  jspb.Message.setProto3IntField(this, 21, value);\n};\n\n\n/**\n * optional int64 latest_consume_free_time = 22;\n * @return {number}\n */\nproto.protocol.Account.prototype.getLatestConsumeFreeTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.Account.prototype.setLatestConsumeFreeTime = function(value) {\n  jspb.Message.setProto3IntField(this, 22, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.acuthrity = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.acuthrity, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.acuthrity.displayName = 'proto.protocol.acuthrity';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.acuthrity.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.acuthrity.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.acuthrity} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.acuthrity.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    account: (f = msg.getAccount()) && proto.protocol.AccountId.toObject(includeInstance, f),\n    permissionName: msg.getPermissionName_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.acuthrity}\n */\nproto.protocol.acuthrity.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.acuthrity;\n  return proto.protocol.acuthrity.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.acuthrity} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.acuthrity}\n */\nproto.protocol.acuthrity.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.protocol.AccountId;\n      reader.readMessage(value,proto.protocol.AccountId.deserializeBinaryFromReader);\n      msg.setAccount(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPermissionName(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.acuthrity.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.acuthrity.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.acuthrity} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.acuthrity.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAccount();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.protocol.AccountId.serializeBinaryToWriter\n    );\n  }\n  f = message.getPermissionName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional AccountId account = 1;\n * @return {?proto.protocol.AccountId}\n */\nproto.protocol.acuthrity.prototype.getAccount = function() {\n  return /** @type{?proto.protocol.AccountId} */ (\n    jspb.Message.getWrapperField(this, proto.protocol.AccountId, 1));\n};\n\n\n/** @param {?proto.protocol.AccountId|undefined} value */\nproto.protocol.acuthrity.prototype.setAccount = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.protocol.acuthrity.prototype.clearAccount = function() {\n  this.setAccount(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.protocol.acuthrity.prototype.hasAccount = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes permission_name = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.acuthrity.prototype.getPermissionName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes permission_name = 2;\n * This is a type-conversion wrapper around `getPermissionName()`\n * @return {string}\n */\nproto.protocol.acuthrity.prototype.getPermissionName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPermissionName()));\n};\n\n\n/**\n * optional bytes permission_name = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPermissionName()`\n * @return {!Uint8Array}\n */\nproto.protocol.acuthrity.prototype.getPermissionName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPermissionName()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.acuthrity.prototype.setPermissionName = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.permision = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.permision, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.permision.displayName = 'proto.protocol.permision';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.permision.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.permision.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.permision} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.permision.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    account: (f = msg.getAccount()) && proto.protocol.AccountId.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.permision}\n */\nproto.protocol.permision.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.permision;\n  return proto.protocol.permision.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.permision} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.permision}\n */\nproto.protocol.permision.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.protocol.AccountId;\n      reader.readMessage(value,proto.protocol.AccountId.deserializeBinaryFromReader);\n      msg.setAccount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.permision.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.permision.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.permision} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.permision.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAccount();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.protocol.AccountId.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional AccountId account = 1;\n * @return {?proto.protocol.AccountId}\n */\nproto.protocol.permision.prototype.getAccount = function() {\n  return /** @type{?proto.protocol.AccountId} */ (\n    jspb.Message.getWrapperField(this, proto.protocol.AccountId, 1));\n};\n\n\n/** @param {?proto.protocol.AccountId|undefined} value */\nproto.protocol.permision.prototype.setAccount = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.protocol.permision.prototype.clearAccount = function() {\n  this.setAccount(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.protocol.permision.prototype.hasAccount = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.Witness = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.Witness, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.Witness.displayName = 'proto.protocol.Witness';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.Witness.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.Witness.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.Witness} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Witness.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: msg.getAddress_asB64(),\n    votecount: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    pubkey: msg.getPubkey_asB64(),\n    url: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    totalproduced: jspb.Message.getFieldWithDefault(msg, 5, 0),\n    totalmissed: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    latestblocknum: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    latestslotnum: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    isjobs: jspb.Message.getFieldWithDefault(msg, 9, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.Witness}\n */\nproto.protocol.Witness.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.Witness;\n  return proto.protocol.Witness.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.Witness} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.Witness}\n */\nproto.protocol.Witness.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setVotecount(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPubkey(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUrl(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalproduced(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalmissed(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestblocknum(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLatestslotnum(value);\n      break;\n    case 9:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setIsjobs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.Witness.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.Witness.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.Witness} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Witness.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getVotecount();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getPubkey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getUrl();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getTotalproduced();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n  f = message.getTotalmissed();\n  if (f !== 0) {\n    writer.writeInt64(\n      6,\n      f\n    );\n  }\n  f = message.getLatestblocknum();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getLatestslotnum();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getIsjobs();\n  if (f) {\n    writer.writeBool(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes address = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.Witness.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes address = 1;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nproto.protocol.Witness.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nproto.protocol.Witness.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.Witness.prototype.setAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 voteCount = 2;\n * @return {number}\n */\nproto.protocol.Witness.prototype.getVotecount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.Witness.prototype.setVotecount = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bytes pubKey = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.Witness.prototype.getPubkey = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes pubKey = 3;\n * This is a type-conversion wrapper around `getPubkey()`\n * @return {string}\n */\nproto.protocol.Witness.prototype.getPubkey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPubkey()));\n};\n\n\n/**\n * optional bytes pubKey = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPubkey()`\n * @return {!Uint8Array}\n */\nproto.protocol.Witness.prototype.getPubkey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPubkey()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.Witness.prototype.setPubkey = function(value) {\n  jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional string url = 4;\n * @return {string}\n */\nproto.protocol.Witness.prototype.getUrl = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/** @param {string} value */\nproto.protocol.Witness.prototype.setUrl = function(value) {\n  jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional int64 totalProduced = 5;\n * @return {number}\n */\nproto.protocol.Witness.prototype.getTotalproduced = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.Witness.prototype.setTotalproduced = function(value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n/**\n * optional int64 totalMissed = 6;\n * @return {number}\n */\nproto.protocol.Witness.prototype.getTotalmissed = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.Witness.prototype.setTotalmissed = function(value) {\n  jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional int64 latestBlockNum = 7;\n * @return {number}\n */\nproto.protocol.Witness.prototype.getLatestblocknum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.Witness.prototype.setLatestblocknum = function(value) {\n  jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional int64 latestSlotNum = 8;\n * @return {number}\n */\nproto.protocol.Witness.prototype.getLatestslotnum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.Witness.prototype.setLatestslotnum = function(value) {\n  jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * optional bool isJobs = 9;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.protocol.Witness.prototype.getIsjobs = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));\n};\n\n\n/** @param {boolean} value */\nproto.protocol.Witness.prototype.setIsjobs = function(value) {\n  jspb.Message.setProto3BooleanField(this, 9, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.Votes = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.protocol.Votes.repeatedFields_, null);\n};\ngoog.inherits(proto.protocol.Votes, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.Votes.displayName = 'proto.protocol.Votes';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.protocol.Votes.repeatedFields_ = [2,3];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.Votes.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.Votes.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.Votes} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Votes.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: msg.getAddress_asB64(),\n    oldVotesList: jspb.Message.toObjectList(msg.getOldVotesList(),\n    proto.protocol.Vote.toObject, includeInstance),\n    newVotesList: jspb.Message.toObjectList(msg.getNewVotesList(),\n    proto.protocol.Vote.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.Votes}\n */\nproto.protocol.Votes.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.Votes;\n  return proto.protocol.Votes.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.Votes} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.Votes}\n */\nproto.protocol.Votes.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = new proto.protocol.Vote;\n      reader.readMessage(value,proto.protocol.Vote.deserializeBinaryFromReader);\n      msg.addOldVotes(value);\n      break;\n    case 3:\n      var value = new proto.protocol.Vote;\n      reader.readMessage(value,proto.protocol.Vote.deserializeBinaryFromReader);\n      msg.addNewVotes(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.Votes.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.Votes.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.Votes} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Votes.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getOldVotesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.protocol.Vote.serializeBinaryToWriter\n    );\n  }\n  f = message.getNewVotesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.protocol.Vote.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional bytes address = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.Votes.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes address = 1;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nproto.protocol.Votes.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nproto.protocol.Votes.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.Votes.prototype.setAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * repeated Vote old_votes = 2;\n * @return {!Array.<!proto.protocol.Vote>}\n */\nproto.protocol.Votes.prototype.getOldVotesList = function() {\n  return /** @type{!Array.<!proto.protocol.Vote>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.protocol.Vote, 2));\n};\n\n\n/** @param {!Array.<!proto.protocol.Vote>} value */\nproto.protocol.Votes.prototype.setOldVotesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.protocol.Vote=} opt_value\n * @param {number=} opt_index\n * @return {!proto.protocol.Vote}\n */\nproto.protocol.Votes.prototype.addOldVotes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.protocol.Vote, opt_index);\n};\n\n\nproto.protocol.Votes.prototype.clearOldVotesList = function() {\n  this.setOldVotesList([]);\n};\n\n\n/**\n * repeated Vote new_votes = 3;\n * @return {!Array.<!proto.protocol.Vote>}\n */\nproto.protocol.Votes.prototype.getNewVotesList = function() {\n  return /** @type{!Array.<!proto.protocol.Vote>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.protocol.Vote, 3));\n};\n\n\n/** @param {!Array.<!proto.protocol.Vote>} value */\nproto.protocol.Votes.prototype.setNewVotesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.protocol.Vote=} opt_value\n * @param {number=} opt_index\n * @return {!proto.protocol.Vote}\n */\nproto.protocol.Votes.prototype.addNewVotes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.protocol.Vote, opt_index);\n};\n\n\nproto.protocol.Votes.prototype.clearNewVotesList = function() {\n  this.setNewVotesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.TXOutput = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.TXOutput, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.TXOutput.displayName = 'proto.protocol.TXOutput';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.TXOutput.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.TXOutput.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.TXOutput} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.TXOutput.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    value: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    pubkeyhash: msg.getPubkeyhash_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.TXOutput}\n */\nproto.protocol.TXOutput.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.TXOutput;\n  return proto.protocol.TXOutput.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.TXOutput} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.TXOutput}\n */\nproto.protocol.TXOutput.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setValue(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPubkeyhash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.TXOutput.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.TXOutput.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.TXOutput} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.TXOutput.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValue();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getPubkeyhash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 value = 1;\n * @return {number}\n */\nproto.protocol.TXOutput.prototype.getValue = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.TXOutput.prototype.setValue = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional bytes pubKeyHash = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.TXOutput.prototype.getPubkeyhash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes pubKeyHash = 2;\n * This is a type-conversion wrapper around `getPubkeyhash()`\n * @return {string}\n */\nproto.protocol.TXOutput.prototype.getPubkeyhash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPubkeyhash()));\n};\n\n\n/**\n * optional bytes pubKeyHash = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPubkeyhash()`\n * @return {!Uint8Array}\n */\nproto.protocol.TXOutput.prototype.getPubkeyhash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPubkeyhash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.TXOutput.prototype.setPubkeyhash = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.TXInput = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.TXInput, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.TXInput.displayName = 'proto.protocol.TXInput';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.TXInput.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.TXInput.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.TXInput} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.TXInput.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    rawData: (f = msg.getRawData()) && proto.protocol.TXInput.raw.toObject(includeInstance, f),\n    signature: msg.getSignature_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.TXInput}\n */\nproto.protocol.TXInput.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.TXInput;\n  return proto.protocol.TXInput.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.TXInput} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.TXInput}\n */\nproto.protocol.TXInput.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.protocol.TXInput.raw;\n      reader.readMessage(value,proto.protocol.TXInput.raw.deserializeBinaryFromReader);\n      msg.setRawData(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setSignature(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.TXInput.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.TXInput.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.TXInput} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.TXInput.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRawData();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.protocol.TXInput.raw.serializeBinaryToWriter\n    );\n  }\n  f = message.getSignature_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.TXInput.raw = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.TXInput.raw, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.TXInput.raw.displayName = 'proto.protocol.TXInput.raw';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.TXInput.raw.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.TXInput.raw.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.TXInput.raw} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.TXInput.raw.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    txid: msg.getTxid_asB64(),\n    vout: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    pubkey: msg.getPubkey_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.TXInput.raw}\n */\nproto.protocol.TXInput.raw.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.TXInput.raw;\n  return proto.protocol.TXInput.raw.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.TXInput.raw} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.TXInput.raw}\n */\nproto.protocol.TXInput.raw.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTxid(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setVout(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setPubkey(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.TXInput.raw.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.TXInput.raw.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.TXInput.raw} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.TXInput.raw.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTxid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getVout();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getPubkey_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes txID = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.TXInput.raw.prototype.getTxid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes txID = 1;\n * This is a type-conversion wrapper around `getTxid()`\n * @return {string}\n */\nproto.protocol.TXInput.raw.prototype.getTxid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTxid()));\n};\n\n\n/**\n * optional bytes txID = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTxid()`\n * @return {!Uint8Array}\n */\nproto.protocol.TXInput.raw.prototype.getTxid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTxid()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.TXInput.raw.prototype.setTxid = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 vout = 2;\n * @return {number}\n */\nproto.protocol.TXInput.raw.prototype.getVout = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.TXInput.raw.prototype.setVout = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bytes pubKey = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.TXInput.raw.prototype.getPubkey = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes pubKey = 3;\n * This is a type-conversion wrapper around `getPubkey()`\n * @return {string}\n */\nproto.protocol.TXInput.raw.prototype.getPubkey_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getPubkey()));\n};\n\n\n/**\n * optional bytes pubKey = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getPubkey()`\n * @return {!Uint8Array}\n */\nproto.protocol.TXInput.raw.prototype.getPubkey_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getPubkey()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.TXInput.raw.prototype.setPubkey = function(value) {\n  jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional raw raw_data = 1;\n * @return {?proto.protocol.TXInput.raw}\n */\nproto.protocol.TXInput.prototype.getRawData = function() {\n  return /** @type{?proto.protocol.TXInput.raw} */ (\n    jspb.Message.getWrapperField(this, proto.protocol.TXInput.raw, 1));\n};\n\n\n/** @param {?proto.protocol.TXInput.raw|undefined} value */\nproto.protocol.TXInput.prototype.setRawData = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.protocol.TXInput.prototype.clearRawData = function() {\n  this.setRawData(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.protocol.TXInput.prototype.hasRawData = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes signature = 4;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.TXInput.prototype.getSignature = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes signature = 4;\n * This is a type-conversion wrapper around `getSignature()`\n * @return {string}\n */\nproto.protocol.TXInput.prototype.getSignature_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getSignature()));\n};\n\n\n/**\n * optional bytes signature = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignature()`\n * @return {!Uint8Array}\n */\nproto.protocol.TXInput.prototype.getSignature_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getSignature()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.TXInput.prototype.setSignature = function(value) {\n  jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.TXOutputs = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.protocol.TXOutputs.repeatedFields_, null);\n};\ngoog.inherits(proto.protocol.TXOutputs, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.TXOutputs.displayName = 'proto.protocol.TXOutputs';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.protocol.TXOutputs.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.TXOutputs.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.TXOutputs.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.TXOutputs} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.TXOutputs.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    outputsList: jspb.Message.toObjectList(msg.getOutputsList(),\n    proto.protocol.TXOutput.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.TXOutputs}\n */\nproto.protocol.TXOutputs.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.TXOutputs;\n  return proto.protocol.TXOutputs.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.TXOutputs} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.TXOutputs}\n */\nproto.protocol.TXOutputs.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.protocol.TXOutput;\n      reader.readMessage(value,proto.protocol.TXOutput.deserializeBinaryFromReader);\n      msg.addOutputs(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.TXOutputs.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.TXOutputs.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.TXOutputs} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.TXOutputs.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOutputsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.protocol.TXOutput.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated TXOutput outputs = 1;\n * @return {!Array.<!proto.protocol.TXOutput>}\n */\nproto.protocol.TXOutputs.prototype.getOutputsList = function() {\n  return /** @type{!Array.<!proto.protocol.TXOutput>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.protocol.TXOutput, 1));\n};\n\n\n/** @param {!Array.<!proto.protocol.TXOutput>} value */\nproto.protocol.TXOutputs.prototype.setOutputsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.protocol.TXOutput=} opt_value\n * @param {number=} opt_index\n * @return {!proto.protocol.TXOutput}\n */\nproto.protocol.TXOutputs.prototype.addOutputs = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protocol.TXOutput, opt_index);\n};\n\n\nproto.protocol.TXOutputs.prototype.clearOutputsList = function() {\n  this.setOutputsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.Transaction = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.protocol.Transaction.repeatedFields_, null);\n};\ngoog.inherits(proto.protocol.Transaction, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.Transaction.displayName = 'proto.protocol.Transaction';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.protocol.Transaction.repeatedFields_ = [2,5];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.Transaction.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.Transaction.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.Transaction} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Transaction.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    rawData: (f = msg.getRawData()) && proto.protocol.Transaction.raw.toObject(includeInstance, f),\n    signatureList: msg.getSignatureList_asB64(),\n    retList: jspb.Message.toObjectList(msg.getRetList(),\n    proto.protocol.Transaction.Result.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.Transaction}\n */\nproto.protocol.Transaction.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.Transaction;\n  return proto.protocol.Transaction.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.Transaction} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.Transaction}\n */\nproto.protocol.Transaction.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.protocol.Transaction.raw;\n      reader.readMessage(value,proto.protocol.Transaction.raw.deserializeBinaryFromReader);\n      msg.setRawData(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addSignature(value);\n      break;\n    case 5:\n      var value = new proto.protocol.Transaction.Result;\n      reader.readMessage(value,proto.protocol.Transaction.Result.deserializeBinaryFromReader);\n      msg.addRet(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.Transaction.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.Transaction.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.Transaction} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Transaction.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRawData();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.protocol.Transaction.raw.serializeBinaryToWriter\n    );\n  }\n  f = message.getSignatureList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      2,\n      f\n    );\n  }\n  f = message.getRetList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      5,\n      f,\n      proto.protocol.Transaction.Result.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.Transaction.Contract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.Transaction.Contract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.Transaction.Contract.displayName = 'proto.protocol.Transaction.Contract';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.Transaction.Contract.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.Transaction.Contract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.Transaction.Contract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Transaction.Contract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    parameter: (f = msg.getParameter()) && google_protobuf_any_pb.Any.toObject(includeInstance, f),\n    provider: msg.getProvider_asB64(),\n    contractname: msg.getContractname_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.Transaction.Contract}\n */\nproto.protocol.Transaction.Contract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.Transaction.Contract;\n  return proto.protocol.Transaction.Contract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.Transaction.Contract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.Transaction.Contract}\n */\nproto.protocol.Transaction.Contract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.protocol.Transaction.Contract.ContractType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    case 2:\n      var value = new google_protobuf_any_pb.Any;\n      reader.readMessage(value,google_protobuf_any_pb.Any.deserializeBinaryFromReader);\n      msg.setParameter(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setProvider(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setContractname(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.Transaction.Contract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.Transaction.Contract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.Transaction.Contract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Transaction.Contract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getParameter();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      google_protobuf_any_pb.Any.serializeBinaryToWriter\n    );\n  }\n  f = message.getProvider_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getContractname_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.protocol.Transaction.Contract.ContractType = {\n  ACCOUNTCREATECONTRACT: 0,\n  TRANSFERCONTRACT: 1,\n  TRANSFERASSETCONTRACT: 2,\n  VOTEASSETCONTRACT: 3,\n  VOTEWITNESSCONTRACT: 4,\n  WITNESSCREATECONTRACT: 5,\n  ASSETISSUECONTRACT: 6,\n  DEPLOYCONTRACT: 7,\n  WITNESSUPDATECONTRACT: 8,\n  PARTICIPATEASSETISSUECONTRACT: 9,\n  ACCOUNTUPDATECONTRACT: 10,\n  FREEZEBALANCECONTRACT: 11,\n  UNFREEZEBALANCECONTRACT: 12,\n  WITHDRAWBALANCECONTRACT: 13,\n  UNFREEZEASSETCONTRACT: 14,\n  UPDATEASSETCONTRACT: 15,\n  CUSTOMCONTRACT: 20\n};\n\n/**\n * optional ContractType type = 1;\n * @return {!proto.protocol.Transaction.Contract.ContractType}\n */\nproto.protocol.Transaction.Contract.prototype.getType = function() {\n  return /** @type {!proto.protocol.Transaction.Contract.ContractType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.protocol.Transaction.Contract.ContractType} value */\nproto.protocol.Transaction.Contract.prototype.setType = function(value) {\n  jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * optional google.protobuf.Any parameter = 2;\n * @return {?proto.google.protobuf.Any}\n */\nproto.protocol.Transaction.Contract.prototype.getParameter = function() {\n  return /** @type{?proto.google.protobuf.Any} */ (\n    jspb.Message.getWrapperField(this, google_protobuf_any_pb.Any, 2));\n};\n\n\n/** @param {?proto.google.protobuf.Any|undefined} value */\nproto.protocol.Transaction.Contract.prototype.setParameter = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.protocol.Transaction.Contract.prototype.clearParameter = function() {\n  this.setParameter(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.protocol.Transaction.Contract.prototype.hasParameter = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional bytes provider = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.Transaction.Contract.prototype.getProvider = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes provider = 3;\n * This is a type-conversion wrapper around `getProvider()`\n * @return {string}\n */\nproto.protocol.Transaction.Contract.prototype.getProvider_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getProvider()));\n};\n\n\n/**\n * optional bytes provider = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getProvider()`\n * @return {!Uint8Array}\n */\nproto.protocol.Transaction.Contract.prototype.getProvider_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getProvider()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.Transaction.Contract.prototype.setProvider = function(value) {\n  jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional bytes ContractName = 4;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.Transaction.Contract.prototype.getContractname = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes ContractName = 4;\n * This is a type-conversion wrapper around `getContractname()`\n * @return {string}\n */\nproto.protocol.Transaction.Contract.prototype.getContractname_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getContractname()));\n};\n\n\n/**\n * optional bytes ContractName = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getContractname()`\n * @return {!Uint8Array}\n */\nproto.protocol.Transaction.Contract.prototype.getContractname_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getContractname()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.Transaction.Contract.prototype.setContractname = function(value) {\n  jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.Transaction.Result = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.Transaction.Result, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.Transaction.Result.displayName = 'proto.protocol.Transaction.Result';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.Transaction.Result.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.Transaction.Result.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.Transaction.Result} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Transaction.Result.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    fee: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    ret: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.Transaction.Result}\n */\nproto.protocol.Transaction.Result.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.Transaction.Result;\n  return proto.protocol.Transaction.Result.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.Transaction.Result} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.Transaction.Result}\n */\nproto.protocol.Transaction.Result.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFee(value);\n      break;\n    case 2:\n      var value = /** @type {!proto.protocol.Transaction.Result.code} */ (reader.readEnum());\n      msg.setRet(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.Transaction.Result.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.Transaction.Result.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.Transaction.Result} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Transaction.Result.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFee();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getRet();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.protocol.Transaction.Result.code = {\n  SUCESS: 0,\n  FAILED: 1\n};\n\n/**\n * optional int64 fee = 1;\n * @return {number}\n */\nproto.protocol.Transaction.Result.prototype.getFee = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.Transaction.Result.prototype.setFee = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional code ret = 2;\n * @return {!proto.protocol.Transaction.Result.code}\n */\nproto.protocol.Transaction.Result.prototype.getRet = function() {\n  return /** @type {!proto.protocol.Transaction.Result.code} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {!proto.protocol.Transaction.Result.code} value */\nproto.protocol.Transaction.Result.prototype.setRet = function(value) {\n  jspb.Message.setProto3EnumField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.Transaction.raw = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.protocol.Transaction.raw.repeatedFields_, null);\n};\ngoog.inherits(proto.protocol.Transaction.raw, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.Transaction.raw.displayName = 'proto.protocol.Transaction.raw';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.protocol.Transaction.raw.repeatedFields_ = [9,11];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.Transaction.raw.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.Transaction.raw.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.Transaction.raw} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Transaction.raw.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    refBlockBytes: msg.getRefBlockBytes_asB64(),\n    refBlockNum: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    refBlockHash: msg.getRefBlockHash_asB64(),\n    expiration: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    authsList: jspb.Message.toObjectList(msg.getAuthsList(),\n    proto.protocol.acuthrity.toObject, includeInstance),\n    data: msg.getData_asB64(),\n    contractList: jspb.Message.toObjectList(msg.getContractList(),\n    proto.protocol.Transaction.Contract.toObject, includeInstance),\n    scripts: msg.getScripts_asB64(),\n    timestamp: jspb.Message.getFieldWithDefault(msg, 14, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.Transaction.raw}\n */\nproto.protocol.Transaction.raw.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.Transaction.raw;\n  return proto.protocol.Transaction.raw.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.Transaction.raw} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.Transaction.raw}\n */\nproto.protocol.Transaction.raw.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRefBlockBytes(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRefBlockNum(value);\n      break;\n    case 4:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setRefBlockHash(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setExpiration(value);\n      break;\n    case 9:\n      var value = new proto.protocol.acuthrity;\n      reader.readMessage(value,proto.protocol.acuthrity.deserializeBinaryFromReader);\n      msg.addAuths(value);\n      break;\n    case 10:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setData(value);\n      break;\n    case 11:\n      var value = new proto.protocol.Transaction.Contract;\n      reader.readMessage(value,proto.protocol.Transaction.Contract.deserializeBinaryFromReader);\n      msg.addContract(value);\n      break;\n    case 12:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setScripts(value);\n      break;\n    case 14:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimestamp(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.Transaction.raw.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.Transaction.raw.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.Transaction.raw} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Transaction.raw.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRefBlockBytes_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getRefBlockNum();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getRefBlockHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      4,\n      f\n    );\n  }\n  f = message.getExpiration();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getAuthsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      9,\n      f,\n      proto.protocol.acuthrity.serializeBinaryToWriter\n    );\n  }\n  f = message.getData_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      10,\n      f\n    );\n  }\n  f = message.getContractList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      11,\n      f,\n      proto.protocol.Transaction.Contract.serializeBinaryToWriter\n    );\n  }\n  f = message.getScripts_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      12,\n      f\n    );\n  }\n  f = message.getTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      14,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes ref_block_bytes = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.Transaction.raw.prototype.getRefBlockBytes = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes ref_block_bytes = 1;\n * This is a type-conversion wrapper around `getRefBlockBytes()`\n * @return {string}\n */\nproto.protocol.Transaction.raw.prototype.getRefBlockBytes_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRefBlockBytes()));\n};\n\n\n/**\n * optional bytes ref_block_bytes = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRefBlockBytes()`\n * @return {!Uint8Array}\n */\nproto.protocol.Transaction.raw.prototype.getRefBlockBytes_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRefBlockBytes()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.Transaction.raw.prototype.setRefBlockBytes = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 ref_block_num = 3;\n * @return {number}\n */\nproto.protocol.Transaction.raw.prototype.getRefBlockNum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.Transaction.raw.prototype.setRefBlockNum = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional bytes ref_block_hash = 4;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.Transaction.raw.prototype.getRefBlockHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * optional bytes ref_block_hash = 4;\n * This is a type-conversion wrapper around `getRefBlockHash()`\n * @return {string}\n */\nproto.protocol.Transaction.raw.prototype.getRefBlockHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getRefBlockHash()));\n};\n\n\n/**\n * optional bytes ref_block_hash = 4;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getRefBlockHash()`\n * @return {!Uint8Array}\n */\nproto.protocol.Transaction.raw.prototype.getRefBlockHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getRefBlockHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.Transaction.raw.prototype.setRefBlockHash = function(value) {\n  jspb.Message.setProto3BytesField(this, 4, value);\n};\n\n\n/**\n * optional int64 expiration = 8;\n * @return {number}\n */\nproto.protocol.Transaction.raw.prototype.getExpiration = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.Transaction.raw.prototype.setExpiration = function(value) {\n  jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * repeated acuthrity auths = 9;\n * @return {!Array.<!proto.protocol.acuthrity>}\n */\nproto.protocol.Transaction.raw.prototype.getAuthsList = function() {\n  return /** @type{!Array.<!proto.protocol.acuthrity>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.protocol.acuthrity, 9));\n};\n\n\n/** @param {!Array.<!proto.protocol.acuthrity>} value */\nproto.protocol.Transaction.raw.prototype.setAuthsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 9, value);\n};\n\n\n/**\n * @param {!proto.protocol.acuthrity=} opt_value\n * @param {number=} opt_index\n * @return {!proto.protocol.acuthrity}\n */\nproto.protocol.Transaction.raw.prototype.addAuths = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.protocol.acuthrity, opt_index);\n};\n\n\nproto.protocol.Transaction.raw.prototype.clearAuthsList = function() {\n  this.setAuthsList([]);\n};\n\n\n/**\n * optional bytes data = 10;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.Transaction.raw.prototype.getData = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, \"\"));\n};\n\n\n/**\n * optional bytes data = 10;\n * This is a type-conversion wrapper around `getData()`\n * @return {string}\n */\nproto.protocol.Transaction.raw.prototype.getData_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getData()));\n};\n\n\n/**\n * optional bytes data = 10;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getData()`\n * @return {!Uint8Array}\n */\nproto.protocol.Transaction.raw.prototype.getData_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getData()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.Transaction.raw.prototype.setData = function(value) {\n  jspb.Message.setProto3BytesField(this, 10, value);\n};\n\n\n/**\n * repeated Contract contract = 11;\n * @return {!Array.<!proto.protocol.Transaction.Contract>}\n */\nproto.protocol.Transaction.raw.prototype.getContractList = function() {\n  return /** @type{!Array.<!proto.protocol.Transaction.Contract>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.protocol.Transaction.Contract, 11));\n};\n\n\n/** @param {!Array.<!proto.protocol.Transaction.Contract>} value */\nproto.protocol.Transaction.raw.prototype.setContractList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 11, value);\n};\n\n\n/**\n * @param {!proto.protocol.Transaction.Contract=} opt_value\n * @param {number=} opt_index\n * @return {!proto.protocol.Transaction.Contract}\n */\nproto.protocol.Transaction.raw.prototype.addContract = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.protocol.Transaction.Contract, opt_index);\n};\n\n\nproto.protocol.Transaction.raw.prototype.clearContractList = function() {\n  this.setContractList([]);\n};\n\n\n/**\n * optional bytes scripts = 12;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.Transaction.raw.prototype.getScripts = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, \"\"));\n};\n\n\n/**\n * optional bytes scripts = 12;\n * This is a type-conversion wrapper around `getScripts()`\n * @return {string}\n */\nproto.protocol.Transaction.raw.prototype.getScripts_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getScripts()));\n};\n\n\n/**\n * optional bytes scripts = 12;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getScripts()`\n * @return {!Uint8Array}\n */\nproto.protocol.Transaction.raw.prototype.getScripts_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getScripts()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.Transaction.raw.prototype.setScripts = function(value) {\n  jspb.Message.setProto3BytesField(this, 12, value);\n};\n\n\n/**\n * optional int64 timestamp = 14;\n * @return {number}\n */\nproto.protocol.Transaction.raw.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.Transaction.raw.prototype.setTimestamp = function(value) {\n  jspb.Message.setProto3IntField(this, 14, value);\n};\n\n\n/**\n * optional raw raw_data = 1;\n * @return {?proto.protocol.Transaction.raw}\n */\nproto.protocol.Transaction.prototype.getRawData = function() {\n  return /** @type{?proto.protocol.Transaction.raw} */ (\n    jspb.Message.getWrapperField(this, proto.protocol.Transaction.raw, 1));\n};\n\n\n/** @param {?proto.protocol.Transaction.raw|undefined} value */\nproto.protocol.Transaction.prototype.setRawData = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.protocol.Transaction.prototype.clearRawData = function() {\n  this.setRawData(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.protocol.Transaction.prototype.hasRawData = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * repeated bytes signature = 2;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nproto.protocol.Transaction.prototype.getSignatureList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));\n};\n\n\n/**\n * repeated bytes signature = 2;\n * This is a type-conversion wrapper around `getSignatureList()`\n * @return {!Array.<string>}\n */\nproto.protocol.Transaction.prototype.getSignatureList_asB64 = function() {\n  return /** @type {!Array.<string>} */ (jspb.Message.bytesListAsB64(\n      this.getSignatureList()));\n};\n\n\n/**\n * repeated bytes signature = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getSignatureList()`\n * @return {!Array.<!Uint8Array>}\n */\nproto.protocol.Transaction.prototype.getSignatureList_asU8 = function() {\n  return /** @type {!Array.<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getSignatureList()));\n};\n\n\n/** @param {!(Array<!Uint8Array>|Array<string>)} value */\nproto.protocol.Transaction.prototype.setSignatureList = function(value) {\n  jspb.Message.setField(this, 2, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n */\nproto.protocol.Transaction.prototype.addSignature = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n\n\nproto.protocol.Transaction.prototype.clearSignatureList = function() {\n  this.setSignatureList([]);\n};\n\n\n/**\n * repeated Result ret = 5;\n * @return {!Array.<!proto.protocol.Transaction.Result>}\n */\nproto.protocol.Transaction.prototype.getRetList = function() {\n  return /** @type{!Array.<!proto.protocol.Transaction.Result>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.protocol.Transaction.Result, 5));\n};\n\n\n/** @param {!Array.<!proto.protocol.Transaction.Result>} value */\nproto.protocol.Transaction.prototype.setRetList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n\n/**\n * @param {!proto.protocol.Transaction.Result=} opt_value\n * @param {number=} opt_index\n * @return {!proto.protocol.Transaction.Result}\n */\nproto.protocol.Transaction.prototype.addRet = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.protocol.Transaction.Result, opt_index);\n};\n\n\nproto.protocol.Transaction.prototype.clearRetList = function() {\n  this.setRetList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.Transactions = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.protocol.Transactions.repeatedFields_, null);\n};\ngoog.inherits(proto.protocol.Transactions, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.Transactions.displayName = 'proto.protocol.Transactions';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.protocol.Transactions.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.Transactions.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.Transactions.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.Transactions} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Transactions.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    transactionsList: jspb.Message.toObjectList(msg.getTransactionsList(),\n    proto.protocol.Transaction.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.Transactions}\n */\nproto.protocol.Transactions.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.Transactions;\n  return proto.protocol.Transactions.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.Transactions} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.Transactions}\n */\nproto.protocol.Transactions.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.protocol.Transaction;\n      reader.readMessage(value,proto.protocol.Transaction.deserializeBinaryFromReader);\n      msg.addTransactions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.Transactions.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.Transactions.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.Transactions} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Transactions.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTransactionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.protocol.Transaction.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Transaction transactions = 1;\n * @return {!Array.<!proto.protocol.Transaction>}\n */\nproto.protocol.Transactions.prototype.getTransactionsList = function() {\n  return /** @type{!Array.<!proto.protocol.Transaction>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.protocol.Transaction, 1));\n};\n\n\n/** @param {!Array.<!proto.protocol.Transaction>} value */\nproto.protocol.Transactions.prototype.setTransactionsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.protocol.Transaction=} opt_value\n * @param {number=} opt_index\n * @return {!proto.protocol.Transaction}\n */\nproto.protocol.Transactions.prototype.addTransactions = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protocol.Transaction, opt_index);\n};\n\n\nproto.protocol.Transactions.prototype.clearTransactionsList = function() {\n  this.setTransactionsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.BlockHeader = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.BlockHeader, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.BlockHeader.displayName = 'proto.protocol.BlockHeader';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.BlockHeader.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.BlockHeader.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.BlockHeader} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.BlockHeader.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    rawData: (f = msg.getRawData()) && proto.protocol.BlockHeader.raw.toObject(includeInstance, f),\n    witnessSignature: msg.getWitnessSignature_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.BlockHeader}\n */\nproto.protocol.BlockHeader.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.BlockHeader;\n  return proto.protocol.BlockHeader.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.BlockHeader} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.BlockHeader}\n */\nproto.protocol.BlockHeader.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.protocol.BlockHeader.raw;\n      reader.readMessage(value,proto.protocol.BlockHeader.raw.deserializeBinaryFromReader);\n      msg.setRawData(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setWitnessSignature(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.BlockHeader.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.BlockHeader.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.BlockHeader} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.BlockHeader.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getRawData();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.protocol.BlockHeader.raw.serializeBinaryToWriter\n    );\n  }\n  f = message.getWitnessSignature_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.BlockHeader.raw = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.BlockHeader.raw, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.BlockHeader.raw.displayName = 'proto.protocol.BlockHeader.raw';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.BlockHeader.raw.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.BlockHeader.raw.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.BlockHeader.raw} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.BlockHeader.raw.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    timestamp: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    txtrieroot: msg.getTxtrieroot_asB64(),\n    parenthash: msg.getParenthash_asB64(),\n    number: jspb.Message.getFieldWithDefault(msg, 7, 0),\n    witnessId: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    witnessAddress: msg.getWitnessAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.BlockHeader.raw}\n */\nproto.protocol.BlockHeader.raw.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.BlockHeader.raw;\n  return proto.protocol.BlockHeader.raw.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.BlockHeader.raw} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.BlockHeader.raw}\n */\nproto.protocol.BlockHeader.raw.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimestamp(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTxtrieroot(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setParenthash(value);\n      break;\n    case 7:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNumber(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setWitnessId(value);\n      break;\n    case 9:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setWitnessAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.BlockHeader.raw.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.BlockHeader.raw.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.BlockHeader.raw} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.BlockHeader.raw.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getTxtrieroot_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getParenthash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getNumber();\n  if (f !== 0) {\n    writer.writeInt64(\n      7,\n      f\n    );\n  }\n  f = message.getWitnessId();\n  if (f !== 0) {\n    writer.writeInt64(\n      8,\n      f\n    );\n  }\n  f = message.getWitnessAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      9,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 timestamp = 1;\n * @return {number}\n */\nproto.protocol.BlockHeader.raw.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.BlockHeader.raw.prototype.setTimestamp = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional bytes txTrieRoot = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.BlockHeader.raw.prototype.getTxtrieroot = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes txTrieRoot = 2;\n * This is a type-conversion wrapper around `getTxtrieroot()`\n * @return {string}\n */\nproto.protocol.BlockHeader.raw.prototype.getTxtrieroot_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTxtrieroot()));\n};\n\n\n/**\n * optional bytes txTrieRoot = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTxtrieroot()`\n * @return {!Uint8Array}\n */\nproto.protocol.BlockHeader.raw.prototype.getTxtrieroot_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTxtrieroot()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.BlockHeader.raw.prototype.setTxtrieroot = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional bytes parentHash = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.BlockHeader.raw.prototype.getParenthash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes parentHash = 3;\n * This is a type-conversion wrapper around `getParenthash()`\n * @return {string}\n */\nproto.protocol.BlockHeader.raw.prototype.getParenthash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getParenthash()));\n};\n\n\n/**\n * optional bytes parentHash = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getParenthash()`\n * @return {!Uint8Array}\n */\nproto.protocol.BlockHeader.raw.prototype.getParenthash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getParenthash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.BlockHeader.raw.prototype.setParenthash = function(value) {\n  jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 number = 7;\n * @return {number}\n */\nproto.protocol.BlockHeader.raw.prototype.getNumber = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.BlockHeader.raw.prototype.setNumber = function(value) {\n  jspb.Message.setProto3IntField(this, 7, value);\n};\n\n\n/**\n * optional int64 witness_id = 8;\n * @return {number}\n */\nproto.protocol.BlockHeader.raw.prototype.getWitnessId = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.BlockHeader.raw.prototype.setWitnessId = function(value) {\n  jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * optional bytes witness_address = 9;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.BlockHeader.raw.prototype.getWitnessAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\n};\n\n\n/**\n * optional bytes witness_address = 9;\n * This is a type-conversion wrapper around `getWitnessAddress()`\n * @return {string}\n */\nproto.protocol.BlockHeader.raw.prototype.getWitnessAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getWitnessAddress()));\n};\n\n\n/**\n * optional bytes witness_address = 9;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getWitnessAddress()`\n * @return {!Uint8Array}\n */\nproto.protocol.BlockHeader.raw.prototype.getWitnessAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getWitnessAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.BlockHeader.raw.prototype.setWitnessAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 9, value);\n};\n\n\n/**\n * optional raw raw_data = 1;\n * @return {?proto.protocol.BlockHeader.raw}\n */\nproto.protocol.BlockHeader.prototype.getRawData = function() {\n  return /** @type{?proto.protocol.BlockHeader.raw} */ (\n    jspb.Message.getWrapperField(this, proto.protocol.BlockHeader.raw, 1));\n};\n\n\n/** @param {?proto.protocol.BlockHeader.raw|undefined} value */\nproto.protocol.BlockHeader.prototype.setRawData = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.protocol.BlockHeader.prototype.clearRawData = function() {\n  this.setRawData(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.protocol.BlockHeader.prototype.hasRawData = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes witness_signature = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.BlockHeader.prototype.getWitnessSignature = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes witness_signature = 2;\n * This is a type-conversion wrapper around `getWitnessSignature()`\n * @return {string}\n */\nproto.protocol.BlockHeader.prototype.getWitnessSignature_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getWitnessSignature()));\n};\n\n\n/**\n * optional bytes witness_signature = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getWitnessSignature()`\n * @return {!Uint8Array}\n */\nproto.protocol.BlockHeader.prototype.getWitnessSignature_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getWitnessSignature()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.BlockHeader.prototype.setWitnessSignature = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.Block = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.protocol.Block.repeatedFields_, null);\n};\ngoog.inherits(proto.protocol.Block, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.Block.displayName = 'proto.protocol.Block';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.protocol.Block.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.Block.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.Block.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.Block} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Block.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    transactionsList: jspb.Message.toObjectList(msg.getTransactionsList(),\n    proto.protocol.Transaction.toObject, includeInstance),\n    blockHeader: (f = msg.getBlockHeader()) && proto.protocol.BlockHeader.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.Block}\n */\nproto.protocol.Block.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.Block;\n  return proto.protocol.Block.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.Block} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.Block}\n */\nproto.protocol.Block.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.protocol.Transaction;\n      reader.readMessage(value,proto.protocol.Transaction.deserializeBinaryFromReader);\n      msg.addTransactions(value);\n      break;\n    case 2:\n      var value = new proto.protocol.BlockHeader;\n      reader.readMessage(value,proto.protocol.BlockHeader.deserializeBinaryFromReader);\n      msg.setBlockHeader(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.Block.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.Block.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.Block} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Block.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTransactionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.protocol.Transaction.serializeBinaryToWriter\n    );\n  }\n  f = message.getBlockHeader();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.protocol.BlockHeader.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Transaction transactions = 1;\n * @return {!Array.<!proto.protocol.Transaction>}\n */\nproto.protocol.Block.prototype.getTransactionsList = function() {\n  return /** @type{!Array.<!proto.protocol.Transaction>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.protocol.Transaction, 1));\n};\n\n\n/** @param {!Array.<!proto.protocol.Transaction>} value */\nproto.protocol.Block.prototype.setTransactionsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.protocol.Transaction=} opt_value\n * @param {number=} opt_index\n * @return {!proto.protocol.Transaction}\n */\nproto.protocol.Block.prototype.addTransactions = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protocol.Transaction, opt_index);\n};\n\n\nproto.protocol.Block.prototype.clearTransactionsList = function() {\n  this.setTransactionsList([]);\n};\n\n\n/**\n * optional BlockHeader block_header = 2;\n * @return {?proto.protocol.BlockHeader}\n */\nproto.protocol.Block.prototype.getBlockHeader = function() {\n  return /** @type{?proto.protocol.BlockHeader} */ (\n    jspb.Message.getWrapperField(this, proto.protocol.BlockHeader, 2));\n};\n\n\n/** @param {?proto.protocol.BlockHeader|undefined} value */\nproto.protocol.Block.prototype.setBlockHeader = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.protocol.Block.prototype.clearBlockHeader = function() {\n  this.setBlockHeader(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.protocol.Block.prototype.hasBlockHeader = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.ChainInventory = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.protocol.ChainInventory.repeatedFields_, null);\n};\ngoog.inherits(proto.protocol.ChainInventory, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.ChainInventory.displayName = 'proto.protocol.ChainInventory';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.protocol.ChainInventory.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.ChainInventory.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.ChainInventory.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.ChainInventory} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.ChainInventory.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    idsList: jspb.Message.toObjectList(msg.getIdsList(),\n    proto.protocol.ChainInventory.BlockId.toObject, includeInstance),\n    remainNum: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.ChainInventory}\n */\nproto.protocol.ChainInventory.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.ChainInventory;\n  return proto.protocol.ChainInventory.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.ChainInventory} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.ChainInventory}\n */\nproto.protocol.ChainInventory.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.protocol.ChainInventory.BlockId;\n      reader.readMessage(value,proto.protocol.ChainInventory.BlockId.deserializeBinaryFromReader);\n      msg.addIds(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setRemainNum(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.ChainInventory.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.ChainInventory.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.ChainInventory} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.ChainInventory.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getIdsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.protocol.ChainInventory.BlockId.serializeBinaryToWriter\n    );\n  }\n  f = message.getRemainNum();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.ChainInventory.BlockId = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.ChainInventory.BlockId, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.ChainInventory.BlockId.displayName = 'proto.protocol.ChainInventory.BlockId';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.ChainInventory.BlockId.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.ChainInventory.BlockId.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.ChainInventory.BlockId} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.ChainInventory.BlockId.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    hash: msg.getHash_asB64(),\n    number: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.ChainInventory.BlockId}\n */\nproto.protocol.ChainInventory.BlockId.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.ChainInventory.BlockId;\n  return proto.protocol.ChainInventory.BlockId.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.ChainInventory.BlockId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.ChainInventory.BlockId}\n */\nproto.protocol.ChainInventory.BlockId.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setHash(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNumber(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.ChainInventory.BlockId.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.ChainInventory.BlockId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.ChainInventory.BlockId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.ChainInventory.BlockId.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getNumber();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes hash = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.ChainInventory.BlockId.prototype.getHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes hash = 1;\n * This is a type-conversion wrapper around `getHash()`\n * @return {string}\n */\nproto.protocol.ChainInventory.BlockId.prototype.getHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getHash()));\n};\n\n\n/**\n * optional bytes hash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHash()`\n * @return {!Uint8Array}\n */\nproto.protocol.ChainInventory.BlockId.prototype.getHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.ChainInventory.BlockId.prototype.setHash = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 number = 2;\n * @return {number}\n */\nproto.protocol.ChainInventory.BlockId.prototype.getNumber = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.ChainInventory.BlockId.prototype.setNumber = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * repeated BlockId ids = 1;\n * @return {!Array.<!proto.protocol.ChainInventory.BlockId>}\n */\nproto.protocol.ChainInventory.prototype.getIdsList = function() {\n  return /** @type{!Array.<!proto.protocol.ChainInventory.BlockId>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.protocol.ChainInventory.BlockId, 1));\n};\n\n\n/** @param {!Array.<!proto.protocol.ChainInventory.BlockId>} value */\nproto.protocol.ChainInventory.prototype.setIdsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.protocol.ChainInventory.BlockId=} opt_value\n * @param {number=} opt_index\n * @return {!proto.protocol.ChainInventory.BlockId}\n */\nproto.protocol.ChainInventory.prototype.addIds = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protocol.ChainInventory.BlockId, opt_index);\n};\n\n\nproto.protocol.ChainInventory.prototype.clearIdsList = function() {\n  this.setIdsList([]);\n};\n\n\n/**\n * optional int64 remain_num = 2;\n * @return {number}\n */\nproto.protocol.ChainInventory.prototype.getRemainNum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.ChainInventory.prototype.setRemainNum = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.BlockInventory = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.protocol.BlockInventory.repeatedFields_, null);\n};\ngoog.inherits(proto.protocol.BlockInventory, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.BlockInventory.displayName = 'proto.protocol.BlockInventory';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.protocol.BlockInventory.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.BlockInventory.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.BlockInventory.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.BlockInventory} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.BlockInventory.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    idsList: jspb.Message.toObjectList(msg.getIdsList(),\n    proto.protocol.BlockInventory.BlockId.toObject, includeInstance),\n    type: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.BlockInventory}\n */\nproto.protocol.BlockInventory.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.BlockInventory;\n  return proto.protocol.BlockInventory.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.BlockInventory} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.BlockInventory}\n */\nproto.protocol.BlockInventory.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.protocol.BlockInventory.BlockId;\n      reader.readMessage(value,proto.protocol.BlockInventory.BlockId.deserializeBinaryFromReader);\n      msg.addIds(value);\n      break;\n    case 2:\n      var value = /** @type {!proto.protocol.BlockInventory.Type} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.BlockInventory.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.BlockInventory.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.BlockInventory} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.BlockInventory.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getIdsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.protocol.BlockInventory.BlockId.serializeBinaryToWriter\n    );\n  }\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.protocol.BlockInventory.Type = {\n  SYNC: 0,\n  ADVTISE: 1,\n  FETCH: 2\n};\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.BlockInventory.BlockId = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.BlockInventory.BlockId, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.BlockInventory.BlockId.displayName = 'proto.protocol.BlockInventory.BlockId';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.BlockInventory.BlockId.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.BlockInventory.BlockId.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.BlockInventory.BlockId} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.BlockInventory.BlockId.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    hash: msg.getHash_asB64(),\n    number: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.BlockInventory.BlockId}\n */\nproto.protocol.BlockInventory.BlockId.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.BlockInventory.BlockId;\n  return proto.protocol.BlockInventory.BlockId.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.BlockInventory.BlockId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.BlockInventory.BlockId}\n */\nproto.protocol.BlockInventory.BlockId.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setHash(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNumber(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.BlockInventory.BlockId.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.BlockInventory.BlockId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.BlockInventory.BlockId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.BlockInventory.BlockId.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getNumber();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes hash = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.BlockInventory.BlockId.prototype.getHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes hash = 1;\n * This is a type-conversion wrapper around `getHash()`\n * @return {string}\n */\nproto.protocol.BlockInventory.BlockId.prototype.getHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getHash()));\n};\n\n\n/**\n * optional bytes hash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHash()`\n * @return {!Uint8Array}\n */\nproto.protocol.BlockInventory.BlockId.prototype.getHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.BlockInventory.BlockId.prototype.setHash = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 number = 2;\n * @return {number}\n */\nproto.protocol.BlockInventory.BlockId.prototype.getNumber = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.BlockInventory.BlockId.prototype.setNumber = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * repeated BlockId ids = 1;\n * @return {!Array.<!proto.protocol.BlockInventory.BlockId>}\n */\nproto.protocol.BlockInventory.prototype.getIdsList = function() {\n  return /** @type{!Array.<!proto.protocol.BlockInventory.BlockId>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.protocol.BlockInventory.BlockId, 1));\n};\n\n\n/** @param {!Array.<!proto.protocol.BlockInventory.BlockId>} value */\nproto.protocol.BlockInventory.prototype.setIdsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.protocol.BlockInventory.BlockId=} opt_value\n * @param {number=} opt_index\n * @return {!proto.protocol.BlockInventory.BlockId}\n */\nproto.protocol.BlockInventory.prototype.addIds = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protocol.BlockInventory.BlockId, opt_index);\n};\n\n\nproto.protocol.BlockInventory.prototype.clearIdsList = function() {\n  this.setIdsList([]);\n};\n\n\n/**\n * optional Type type = 2;\n * @return {!proto.protocol.BlockInventory.Type}\n */\nproto.protocol.BlockInventory.prototype.getType = function() {\n  return /** @type {!proto.protocol.BlockInventory.Type} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {!proto.protocol.BlockInventory.Type} value */\nproto.protocol.BlockInventory.prototype.setType = function(value) {\n  jspb.Message.setProto3EnumField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.Inventory = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.protocol.Inventory.repeatedFields_, null);\n};\ngoog.inherits(proto.protocol.Inventory, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.Inventory.displayName = 'proto.protocol.Inventory';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.protocol.Inventory.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.Inventory.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.Inventory.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.Inventory} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Inventory.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    idsList: msg.getIdsList_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.Inventory}\n */\nproto.protocol.Inventory.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.Inventory;\n  return proto.protocol.Inventory.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.Inventory} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.Inventory}\n */\nproto.protocol.Inventory.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.protocol.Inventory.InventoryType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addIds(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.Inventory.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.Inventory.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.Inventory} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Inventory.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getIdsList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.protocol.Inventory.InventoryType = {\n  TRX: 0,\n  BLOCK: 1\n};\n\n/**\n * optional InventoryType type = 1;\n * @return {!proto.protocol.Inventory.InventoryType}\n */\nproto.protocol.Inventory.prototype.getType = function() {\n  return /** @type {!proto.protocol.Inventory.InventoryType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.protocol.Inventory.InventoryType} value */\nproto.protocol.Inventory.prototype.setType = function(value) {\n  jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * repeated bytes ids = 2;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nproto.protocol.Inventory.prototype.getIdsList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));\n};\n\n\n/**\n * repeated bytes ids = 2;\n * This is a type-conversion wrapper around `getIdsList()`\n * @return {!Array.<string>}\n */\nproto.protocol.Inventory.prototype.getIdsList_asB64 = function() {\n  return /** @type {!Array.<string>} */ (jspb.Message.bytesListAsB64(\n      this.getIdsList()));\n};\n\n\n/**\n * repeated bytes ids = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getIdsList()`\n * @return {!Array.<!Uint8Array>}\n */\nproto.protocol.Inventory.prototype.getIdsList_asU8 = function() {\n  return /** @type {!Array.<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getIdsList()));\n};\n\n\n/** @param {!(Array<!Uint8Array>|Array<string>)} value */\nproto.protocol.Inventory.prototype.setIdsList = function(value) {\n  jspb.Message.setField(this, 2, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n */\nproto.protocol.Inventory.prototype.addIds = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n\n\nproto.protocol.Inventory.prototype.clearIdsList = function() {\n  this.setIdsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.Items = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.protocol.Items.repeatedFields_, null);\n};\ngoog.inherits(proto.protocol.Items, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.Items.displayName = 'proto.protocol.Items';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.protocol.Items.repeatedFields_ = [2,3,4];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.Items.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.Items.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.Items} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Items.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    blocksList: jspb.Message.toObjectList(msg.getBlocksList(),\n    proto.protocol.Block.toObject, includeInstance),\n    blockHeadersList: jspb.Message.toObjectList(msg.getBlockHeadersList(),\n    proto.protocol.BlockHeader.toObject, includeInstance),\n    transactionsList: jspb.Message.toObjectList(msg.getTransactionsList(),\n    proto.protocol.Transaction.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.Items}\n */\nproto.protocol.Items.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.Items;\n  return proto.protocol.Items.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.Items} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.Items}\n */\nproto.protocol.Items.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.protocol.Items.ItemType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    case 2:\n      var value = new proto.protocol.Block;\n      reader.readMessage(value,proto.protocol.Block.deserializeBinaryFromReader);\n      msg.addBlocks(value);\n      break;\n    case 3:\n      var value = new proto.protocol.BlockHeader;\n      reader.readMessage(value,proto.protocol.BlockHeader.deserializeBinaryFromReader);\n      msg.addBlockHeaders(value);\n      break;\n    case 4:\n      var value = new proto.protocol.Transaction;\n      reader.readMessage(value,proto.protocol.Transaction.deserializeBinaryFromReader);\n      msg.addTransactions(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.Items.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.Items.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.Items} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Items.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getBlocksList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.protocol.Block.serializeBinaryToWriter\n    );\n  }\n  f = message.getBlockHeadersList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      3,\n      f,\n      proto.protocol.BlockHeader.serializeBinaryToWriter\n    );\n  }\n  f = message.getTransactionsList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      4,\n      f,\n      proto.protocol.Transaction.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.protocol.Items.ItemType = {\n  ERR: 0,\n  TRX: 1,\n  BLOCK: 2,\n  BLOCKHEADER: 3\n};\n\n/**\n * optional ItemType type = 1;\n * @return {!proto.protocol.Items.ItemType}\n */\nproto.protocol.Items.prototype.getType = function() {\n  return /** @type {!proto.protocol.Items.ItemType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.protocol.Items.ItemType} value */\nproto.protocol.Items.prototype.setType = function(value) {\n  jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * repeated Block blocks = 2;\n * @return {!Array.<!proto.protocol.Block>}\n */\nproto.protocol.Items.prototype.getBlocksList = function() {\n  return /** @type{!Array.<!proto.protocol.Block>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.protocol.Block, 2));\n};\n\n\n/** @param {!Array.<!proto.protocol.Block>} value */\nproto.protocol.Items.prototype.setBlocksList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.protocol.Block=} opt_value\n * @param {number=} opt_index\n * @return {!proto.protocol.Block}\n */\nproto.protocol.Items.prototype.addBlocks = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.protocol.Block, opt_index);\n};\n\n\nproto.protocol.Items.prototype.clearBlocksList = function() {\n  this.setBlocksList([]);\n};\n\n\n/**\n * repeated BlockHeader block_headers = 3;\n * @return {!Array.<!proto.protocol.BlockHeader>}\n */\nproto.protocol.Items.prototype.getBlockHeadersList = function() {\n  return /** @type{!Array.<!proto.protocol.BlockHeader>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.protocol.BlockHeader, 3));\n};\n\n\n/** @param {!Array.<!proto.protocol.BlockHeader>} value */\nproto.protocol.Items.prototype.setBlockHeadersList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 3, value);\n};\n\n\n/**\n * @param {!proto.protocol.BlockHeader=} opt_value\n * @param {number=} opt_index\n * @return {!proto.protocol.BlockHeader}\n */\nproto.protocol.Items.prototype.addBlockHeaders = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.protocol.BlockHeader, opt_index);\n};\n\n\nproto.protocol.Items.prototype.clearBlockHeadersList = function() {\n  this.setBlockHeadersList([]);\n};\n\n\n/**\n * repeated Transaction transactions = 4;\n * @return {!Array.<!proto.protocol.Transaction>}\n */\nproto.protocol.Items.prototype.getTransactionsList = function() {\n  return /** @type{!Array.<!proto.protocol.Transaction>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.protocol.Transaction, 4));\n};\n\n\n/** @param {!Array.<!proto.protocol.Transaction>} value */\nproto.protocol.Items.prototype.setTransactionsList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 4, value);\n};\n\n\n/**\n * @param {!proto.protocol.Transaction=} opt_value\n * @param {number=} opt_index\n * @return {!proto.protocol.Transaction}\n */\nproto.protocol.Items.prototype.addTransactions = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.protocol.Transaction, opt_index);\n};\n\n\nproto.protocol.Items.prototype.clearTransactionsList = function() {\n  this.setTransactionsList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.DynamicProperties = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.DynamicProperties, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.DynamicProperties.displayName = 'proto.protocol.DynamicProperties';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.DynamicProperties.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.DynamicProperties.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.DynamicProperties} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.DynamicProperties.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    lastSolidityBlockNum: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.DynamicProperties}\n */\nproto.protocol.DynamicProperties.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.DynamicProperties;\n  return proto.protocol.DynamicProperties.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.DynamicProperties} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.DynamicProperties}\n */\nproto.protocol.DynamicProperties.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLastSolidityBlockNum(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.DynamicProperties.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.DynamicProperties.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.DynamicProperties} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.DynamicProperties.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getLastSolidityBlockNum();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 last_solidity_block_num = 1;\n * @return {number}\n */\nproto.protocol.DynamicProperties.prototype.getLastSolidityBlockNum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.DynamicProperties.prototype.setLastSolidityBlockNum = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.DisconnectMessage = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.DisconnectMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.DisconnectMessage.displayName = 'proto.protocol.DisconnectMessage';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.DisconnectMessage.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.DisconnectMessage.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.DisconnectMessage} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.DisconnectMessage.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    reason: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.DisconnectMessage}\n */\nproto.protocol.DisconnectMessage.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.DisconnectMessage;\n  return proto.protocol.DisconnectMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.DisconnectMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.DisconnectMessage}\n */\nproto.protocol.DisconnectMessage.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.protocol.ReasonCode} */ (reader.readEnum());\n      msg.setReason(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.DisconnectMessage.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.DisconnectMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.DisconnectMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.DisconnectMessage.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getReason();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional ReasonCode reason = 1;\n * @return {!proto.protocol.ReasonCode}\n */\nproto.protocol.DisconnectMessage.prototype.getReason = function() {\n  return /** @type {!proto.protocol.ReasonCode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.protocol.ReasonCode} value */\nproto.protocol.DisconnectMessage.prototype.setReason = function(value) {\n  jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.HelloMessage = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.HelloMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.HelloMessage.displayName = 'proto.protocol.HelloMessage';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.HelloMessage.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.HelloMessage.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.HelloMessage} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.HelloMessage.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    from: (f = msg.getFrom()) && core_Discover_pb.Endpoint.toObject(includeInstance, f),\n    version: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    timestamp: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    genesisblockid: (f = msg.getGenesisblockid()) && proto.protocol.HelloMessage.BlockId.toObject(includeInstance, f),\n    solidblockid: (f = msg.getSolidblockid()) && proto.protocol.HelloMessage.BlockId.toObject(includeInstance, f),\n    headblockid: (f = msg.getHeadblockid()) && proto.protocol.HelloMessage.BlockId.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.HelloMessage}\n */\nproto.protocol.HelloMessage.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.HelloMessage;\n  return proto.protocol.HelloMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.HelloMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.HelloMessage}\n */\nproto.protocol.HelloMessage.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new core_Discover_pb.Endpoint;\n      reader.readMessage(value,core_Discover_pb.Endpoint.deserializeBinaryFromReader);\n      msg.setFrom(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setVersion(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimestamp(value);\n      break;\n    case 4:\n      var value = new proto.protocol.HelloMessage.BlockId;\n      reader.readMessage(value,proto.protocol.HelloMessage.BlockId.deserializeBinaryFromReader);\n      msg.setGenesisblockid(value);\n      break;\n    case 5:\n      var value = new proto.protocol.HelloMessage.BlockId;\n      reader.readMessage(value,proto.protocol.HelloMessage.BlockId.deserializeBinaryFromReader);\n      msg.setSolidblockid(value);\n      break;\n    case 6:\n      var value = new proto.protocol.HelloMessage.BlockId;\n      reader.readMessage(value,proto.protocol.HelloMessage.BlockId.deserializeBinaryFromReader);\n      msg.setHeadblockid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.HelloMessage.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.HelloMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.HelloMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.HelloMessage.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFrom();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      core_Discover_pb.Endpoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getVersion();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getGenesisblockid();\n  if (f != null) {\n    writer.writeMessage(\n      4,\n      f,\n      proto.protocol.HelloMessage.BlockId.serializeBinaryToWriter\n    );\n  }\n  f = message.getSolidblockid();\n  if (f != null) {\n    writer.writeMessage(\n      5,\n      f,\n      proto.protocol.HelloMessage.BlockId.serializeBinaryToWriter\n    );\n  }\n  f = message.getHeadblockid();\n  if (f != null) {\n    writer.writeMessage(\n      6,\n      f,\n      proto.protocol.HelloMessage.BlockId.serializeBinaryToWriter\n    );\n  }\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.HelloMessage.BlockId = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.HelloMessage.BlockId, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.HelloMessage.BlockId.displayName = 'proto.protocol.HelloMessage.BlockId';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.HelloMessage.BlockId.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.HelloMessage.BlockId.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.HelloMessage.BlockId} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.HelloMessage.BlockId.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    hash: msg.getHash_asB64(),\n    number: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.HelloMessage.BlockId}\n */\nproto.protocol.HelloMessage.BlockId.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.HelloMessage.BlockId;\n  return proto.protocol.HelloMessage.BlockId.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.HelloMessage.BlockId} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.HelloMessage.BlockId}\n */\nproto.protocol.HelloMessage.BlockId.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setHash(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNumber(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.HelloMessage.BlockId.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.HelloMessage.BlockId.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.HelloMessage.BlockId} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.HelloMessage.BlockId.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getNumber();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes hash = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.HelloMessage.BlockId.prototype.getHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes hash = 1;\n * This is a type-conversion wrapper around `getHash()`\n * @return {string}\n */\nproto.protocol.HelloMessage.BlockId.prototype.getHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getHash()));\n};\n\n\n/**\n * optional bytes hash = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHash()`\n * @return {!Uint8Array}\n */\nproto.protocol.HelloMessage.BlockId.prototype.getHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.HelloMessage.BlockId.prototype.setHash = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 number = 2;\n * @return {number}\n */\nproto.protocol.HelloMessage.BlockId.prototype.getNumber = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.HelloMessage.BlockId.prototype.setNumber = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional Endpoint from = 1;\n * @return {?proto.protocol.Endpoint}\n */\nproto.protocol.HelloMessage.prototype.getFrom = function() {\n  return /** @type{?proto.protocol.Endpoint} */ (\n    jspb.Message.getWrapperField(this, core_Discover_pb.Endpoint, 1));\n};\n\n\n/** @param {?proto.protocol.Endpoint|undefined} value */\nproto.protocol.HelloMessage.prototype.setFrom = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.protocol.HelloMessage.prototype.clearFrom = function() {\n  this.setFrom(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.protocol.HelloMessage.prototype.hasFrom = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional int32 version = 2;\n * @return {number}\n */\nproto.protocol.HelloMessage.prototype.getVersion = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.HelloMessage.prototype.setVersion = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int64 timestamp = 3;\n * @return {number}\n */\nproto.protocol.HelloMessage.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.HelloMessage.prototype.setTimestamp = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional BlockId genesisBlockId = 4;\n * @return {?proto.protocol.HelloMessage.BlockId}\n */\nproto.protocol.HelloMessage.prototype.getGenesisblockid = function() {\n  return /** @type{?proto.protocol.HelloMessage.BlockId} */ (\n    jspb.Message.getWrapperField(this, proto.protocol.HelloMessage.BlockId, 4));\n};\n\n\n/** @param {?proto.protocol.HelloMessage.BlockId|undefined} value */\nproto.protocol.HelloMessage.prototype.setGenesisblockid = function(value) {\n  jspb.Message.setWrapperField(this, 4, value);\n};\n\n\nproto.protocol.HelloMessage.prototype.clearGenesisblockid = function() {\n  this.setGenesisblockid(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.protocol.HelloMessage.prototype.hasGenesisblockid = function() {\n  return jspb.Message.getField(this, 4) != null;\n};\n\n\n/**\n * optional BlockId solidBlockId = 5;\n * @return {?proto.protocol.HelloMessage.BlockId}\n */\nproto.protocol.HelloMessage.prototype.getSolidblockid = function() {\n  return /** @type{?proto.protocol.HelloMessage.BlockId} */ (\n    jspb.Message.getWrapperField(this, proto.protocol.HelloMessage.BlockId, 5));\n};\n\n\n/** @param {?proto.protocol.HelloMessage.BlockId|undefined} value */\nproto.protocol.HelloMessage.prototype.setSolidblockid = function(value) {\n  jspb.Message.setWrapperField(this, 5, value);\n};\n\n\nproto.protocol.HelloMessage.prototype.clearSolidblockid = function() {\n  this.setSolidblockid(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.protocol.HelloMessage.prototype.hasSolidblockid = function() {\n  return jspb.Message.getField(this, 5) != null;\n};\n\n\n/**\n * optional BlockId headBlockId = 6;\n * @return {?proto.protocol.HelloMessage.BlockId}\n */\nproto.protocol.HelloMessage.prototype.getHeadblockid = function() {\n  return /** @type{?proto.protocol.HelloMessage.BlockId} */ (\n    jspb.Message.getWrapperField(this, proto.protocol.HelloMessage.BlockId, 6));\n};\n\n\n/** @param {?proto.protocol.HelloMessage.BlockId|undefined} value */\nproto.protocol.HelloMessage.prototype.setHeadblockid = function(value) {\n  jspb.Message.setWrapperField(this, 6, value);\n};\n\n\nproto.protocol.HelloMessage.prototype.clearHeadblockid = function() {\n  this.setHeadblockid(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.protocol.HelloMessage.prototype.hasHeadblockid = function() {\n  return jspb.Message.getField(this, 6) != null;\n};\n\n\n/**\n * @enum {number}\n */\nproto.protocol.AccountType = {\n  NORMAL: 0,\n  ASSETISSUE: 1,\n  CONTRACT: 2\n};\n\n/**\n * @enum {number}\n */\nproto.protocol.ReasonCode = {\n  REQUESTED: 0,\n  BAD_PROTOCOL: 2,\n  TOO_MANY_PEERS: 4,\n  DUPLICATE_PEER: 5,\n  INCOMPATIBLE_PROTOCOL: 6,\n  NULL_IDENTITY: 7,\n  PEER_QUITING: 8,\n  UNEXPECTED_IDENTITY: 9,\n  LOCAL_IDENTITY: 10,\n  PING_TIMEOUT: 11,\n  USER_REASON: 16,\n  RESET: 17,\n  SYNC_FAIL: 18,\n  FETCH_FAIL: 19,\n  BAD_TX: 20,\n  BAD_BLOCK: 21,\n  FORKED: 22,\n  UNLINKABLE: 23,\n  INCOMPATIBLE_VERSION: 24,\n  INCOMPATIBLE_CHAIN: 25,\n  TIME_OUT: 32,\n  CONNECT_FAIL: 33,\n  UNKNOWN: 255\n};\n\ngoog.object.extend(exports, proto.protocol);\n","const {hexStr2byteArray, base64EncodeToString, base64DecodeFromString} = require(\"./lib/code\");\nconst base58 = require('./lib/base58');\nconst TextDecoder = require('text-encoding').TextDecoder;\nconst btoa = require(\"btoa\");\n\nfunction base58AddressToUint8Array(address){\n    let decoded = base58.decode58(address);\n    let check = decoded.splice(-4, 4);\n    return new Uint8Array(decoded);\n}\n\nfunction base64StringToString(b64){\n    return Buffer.from(result.message, 'base64').toString();\n}\n\nfunction uint8ToBase64(u8){\n    let decoder = new TextDecoder('utf8');\n    return btoa(decoder.decode(u8));\n}\n\nfunction stringToUint8Array(str) {\n    return Uint8Array.from(base64DecodeFromString(btoa(str)));\n}\n\nmodule.exports = {\n    hexStr2byteArray,\n    base64EncodeToString,\n    base64DecodeFromString,\n    base64StringToString,\n    base58AddressToUint8Array,\n    stringToUint8Array,\n    uint8ToBase64\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","var $jscomp={scope:{},getGlobal:function(a){return\"undefined\"!=typeof window&&window===a?a:\"undefined\"!=typeof global?global:a}};$jscomp.global=$jscomp.getGlobal(this);$jscomp.initSymbol=function(){$jscomp.global.Symbol||($jscomp.global.Symbol=$jscomp.Symbol);$jscomp.initSymbol=function(){}};$jscomp.symbolCounter_=0;$jscomp.Symbol=function(a){return\"jscomp_symbol_\"+a+$jscomp.symbolCounter_++};\n$jscomp.initSymbolIterator=function(){$jscomp.initSymbol();$jscomp.global.Symbol.iterator||($jscomp.global.Symbol.iterator=$jscomp.global.Symbol(\"iterator\"));$jscomp.initSymbolIterator=function(){}};$jscomp.makeIterator=function(a){$jscomp.initSymbolIterator();$jscomp.initSymbol();$jscomp.initSymbolIterator();var b=a[Symbol.iterator];if(b)return b.call(a);var c=0;return{next:function(){return c<a.length?{done:!1,value:a[c++]}:{done:!0}}}};\n$jscomp.arrayFromIterator=function(a){for(var b,c=[];!(b=a.next()).done;)c.push(b.value);return c};$jscomp.arrayFromIterable=function(a){return a instanceof Array?a:$jscomp.arrayFromIterator($jscomp.makeIterator(a))};$jscomp.inherits=function(a,b){function c(){}c.prototype=b.prototype;a.prototype=new c;a.prototype.constructor=a;for(var d in b)if(Object.defineProperties){var e=Object.getOwnPropertyDescriptor(b,d);e&&Object.defineProperty(a,d,e)}else a[d]=b[d]};$jscomp.array=$jscomp.array||{};\n$jscomp.iteratorFromArray=function(a,b){$jscomp.initSymbolIterator();a instanceof String&&(a+=\"\");var c=0,d={next:function(){if(c<a.length){var e=c++;return{value:b(e,a[e]),done:!1}}d.next=function(){return{done:!0,value:void 0}};return d.next()}};$jscomp.initSymbol();$jscomp.initSymbolIterator();d[Symbol.iterator]=function(){return d};return d};\n$jscomp.findInternal=function(a,b,c){a instanceof String&&(a=String(a));for(var d=a.length,e=0;e<d;e++){var f=a[e];if(b.call(c,f,e,a))return{i:e,v:f}}return{i:-1,v:void 0}};\n$jscomp.array.from=function(a,b,c){$jscomp.initSymbolIterator();b=null!=b?b:function(a){return a};var d=[];$jscomp.initSymbol();$jscomp.initSymbolIterator();var e=a[Symbol.iterator];\"function\"==typeof e&&(a=e.call(a));if(\"function\"==typeof a.next)for(;!(e=a.next()).done;)d.push(b.call(c,e.value));else for(var e=a.length,f=0;f<e;f++)d.push(b.call(c,a[f]));return d};$jscomp.array.of=function(a){return $jscomp.array.from(arguments)};\n$jscomp.array.entries=function(){return $jscomp.iteratorFromArray(this,function(a,b){return[a,b]})};$jscomp.array.installHelper_=function(a,b){!Array.prototype[a]&&Object.defineProperties&&Object.defineProperty&&Object.defineProperty(Array.prototype,a,{configurable:!0,enumerable:!1,writable:!0,value:b})};$jscomp.array.entries$install=function(){$jscomp.array.installHelper_(\"entries\",$jscomp.array.entries)};$jscomp.array.keys=function(){return $jscomp.iteratorFromArray(this,function(a){return a})};\n$jscomp.array.keys$install=function(){$jscomp.array.installHelper_(\"keys\",$jscomp.array.keys)};$jscomp.array.values=function(){return $jscomp.iteratorFromArray(this,function(a,b){return b})};$jscomp.array.values$install=function(){$jscomp.array.installHelper_(\"values\",$jscomp.array.values)};\n$jscomp.array.copyWithin=function(a,b,c){var d=this.length;a=Number(a);b=Number(b);c=Number(null!=c?c:d);if(a<b)for(c=Math.min(c,d);b<c;)b in this?this[a++]=this[b++]:(delete this[a++],b++);else for(c=Math.min(c,d+b-a),a+=c-b;c>b;)--c in this?this[--a]=this[c]:delete this[a];return this};$jscomp.array.copyWithin$install=function(){$jscomp.array.installHelper_(\"copyWithin\",$jscomp.array.copyWithin)};\n$jscomp.array.fill=function(a,b,c){var d=this.length||0;0>b&&(b=Math.max(0,d+b));if(null==c||c>d)c=d;c=Number(c);0>c&&(c=Math.max(0,d+c));for(b=Number(b||0);b<c;b++)this[b]=a;return this};$jscomp.array.fill$install=function(){$jscomp.array.installHelper_(\"fill\",$jscomp.array.fill)};$jscomp.array.find=function(a,b){return $jscomp.findInternal(this,a,b).v};$jscomp.array.find$install=function(){$jscomp.array.installHelper_(\"find\",$jscomp.array.find)};\n$jscomp.array.findIndex=function(a,b){return $jscomp.findInternal(this,a,b).i};$jscomp.array.findIndex$install=function(){$jscomp.array.installHelper_(\"findIndex\",$jscomp.array.findIndex)};$jscomp.ASSUME_NO_NATIVE_MAP=!1;\n$jscomp.Map$isConformant=function(){if($jscomp.ASSUME_NO_NATIVE_MAP)return!1;var a=$jscomp.global.Map;if(!a||!a.prototype.entries||\"function\"!=typeof Object.seal)return!1;try{var b=Object.seal({x:4}),c=new a($jscomp.makeIterator([[b,\"s\"]]));if(\"s\"!=c.get(b)||1!=c.size||c.get({x:4})||c.set({x:4},\"t\")!=c||2!=c.size)return!1;var d=c.entries(),e=d.next();if(e.done||e.value[0]!=b||\"s\"!=e.value[1])return!1;e=d.next();return e.done||4!=e.value[0].x||\"t\"!=e.value[1]||!d.next().done?!1:!0}catch(f){return!1}};\n$jscomp.Map=function(a){this.data_={};this.head_=$jscomp.Map.createHead();this.size=0;if(a){a=$jscomp.makeIterator(a);for(var b;!(b=a.next()).done;)b=b.value,this.set(b[0],b[1])}};\n$jscomp.Map.prototype.set=function(a,b){var c=$jscomp.Map.maybeGetEntry(this,a);c.list||(c.list=this.data_[c.id]=[]);c.entry?c.entry.value=b:(c.entry={next:this.head_,previous:this.head_.previous,head:this.head_,key:a,value:b},c.list.push(c.entry),this.head_.previous.next=c.entry,this.head_.previous=c.entry,this.size++);return this};\n$jscomp.Map.prototype[\"delete\"]=function(a){a=$jscomp.Map.maybeGetEntry(this,a);return a.entry&&a.list?(a.list.splice(a.index,1),a.list.length||delete this.data_[a.id],a.entry.previous.next=a.entry.next,a.entry.next.previous=a.entry.previous,a.entry.head=null,this.size--,!0):!1};$jscomp.Map.prototype.clear=function(){this.data_={};this.head_=this.head_.previous=$jscomp.Map.createHead();this.size=0};$jscomp.Map.prototype.has=function(a){return!!$jscomp.Map.maybeGetEntry(this,a).entry};\n$jscomp.Map.prototype.get=function(a){return(a=$jscomp.Map.maybeGetEntry(this,a).entry)&&a.value};$jscomp.Map.prototype.entries=function(){return $jscomp.Map.makeIterator_(this,function(a){return[a.key,a.value]})};$jscomp.Map.prototype.keys=function(){return $jscomp.Map.makeIterator_(this,function(a){return a.key})};$jscomp.Map.prototype.values=function(){return $jscomp.Map.makeIterator_(this,function(a){return a.value})};\n$jscomp.Map.prototype.forEach=function(a,b){for(var c=this.entries(),d;!(d=c.next()).done;)d=d.value,a.call(b,d[1],d[0],this)};$jscomp.Map.maybeGetEntry=function(a,b){var c=$jscomp.Map.getId(b),d=a.data_[c];if(d&&Object.prototype.hasOwnProperty.call(a.data_,c))for(var e=0;e<d.length;e++){var f=d[e];if(b!==b&&f.key!==f.key||b===f.key)return{id:c,list:d,index:e,entry:f}}return{id:c,list:d,index:-1,entry:void 0}};\n$jscomp.Map.makeIterator_=function(a,b){var c=a.head_,d={next:function(){if(c){for(;c.head!=a.head_;)c=c.previous;for(;c.next!=c.head;)return c=c.next,{done:!1,value:b(c)};c=null}return{done:!0,value:void 0}}};$jscomp.initSymbol();$jscomp.initSymbolIterator();d[Symbol.iterator]=function(){return d};return d};$jscomp.Map.mapIndex_=0;$jscomp.Map.createHead=function(){var a={};return a.previous=a.next=a.head=a};\n$jscomp.Map.getId=function(a){if(!(a instanceof Object))return\"p_\"+a;if(!($jscomp.Map.idKey in a))try{$jscomp.Map.defineProperty(a,$jscomp.Map.idKey,{value:++$jscomp.Map.mapIndex_})}catch(b){}return $jscomp.Map.idKey in a?a[$jscomp.Map.idKey]:\"o_ \"+a};$jscomp.Map.defineProperty=Object.defineProperty?function(a,b,c){Object.defineProperty(a,b,{value:String(c)})}:function(a,b,c){a[b]=String(c)};$jscomp.Map.Entry=function(){};\n$jscomp.Map$install=function(){$jscomp.initSymbol();$jscomp.initSymbolIterator();$jscomp.Map$isConformant()?$jscomp.Map=$jscomp.global.Map:($jscomp.initSymbol(),$jscomp.initSymbolIterator(),$jscomp.Map.prototype[Symbol.iterator]=$jscomp.Map.prototype.entries,$jscomp.initSymbol(),$jscomp.Map.idKey=Symbol(\"map-id-key\"),$jscomp.Map$install=function(){})};$jscomp.math=$jscomp.math||{};\n$jscomp.math.clz32=function(a){a=Number(a)>>>0;if(0===a)return 32;var b=0;0===(a&4294901760)&&(a<<=16,b+=16);0===(a&4278190080)&&(a<<=8,b+=8);0===(a&4026531840)&&(a<<=4,b+=4);0===(a&3221225472)&&(a<<=2,b+=2);0===(a&2147483648)&&b++;return b};$jscomp.math.imul=function(a,b){a=Number(a);b=Number(b);var c=a&65535,d=b&65535;return c*d+((a>>>16&65535)*d+c*(b>>>16&65535)<<16>>>0)|0};$jscomp.math.sign=function(a){a=Number(a);return 0===a||isNaN(a)?a:0<a?1:-1};\n$jscomp.math.log10=function(a){return Math.log(a)/Math.LN10};$jscomp.math.log2=function(a){return Math.log(a)/Math.LN2};$jscomp.math.log1p=function(a){a=Number(a);if(.25>a&&-.25<a){for(var b=a,c=1,d=a,e=0,f=1;e!=d;)b*=a,f*=-1,d=(e=d)+f*b/++c;return d}return Math.log(1+a)};$jscomp.math.expm1=function(a){a=Number(a);if(.25>a&&-.25<a){for(var b=a,c=1,d=a,e=0;e!=d;)b*=a/++c,d=(e=d)+b;return d}return Math.exp(a)-1};$jscomp.math.cosh=function(a){a=Number(a);return(Math.exp(a)+Math.exp(-a))/2};\n$jscomp.math.sinh=function(a){a=Number(a);return 0===a?a:(Math.exp(a)-Math.exp(-a))/2};$jscomp.math.tanh=function(a){a=Number(a);if(0===a)return a;var b=Math.exp(-2*Math.abs(a)),b=(1-b)/(1+b);return 0>a?-b:b};$jscomp.math.acosh=function(a){a=Number(a);return Math.log(a+Math.sqrt(a*a-1))};$jscomp.math.asinh=function(a){a=Number(a);if(0===a)return a;var b=Math.log(Math.abs(a)+Math.sqrt(a*a+1));return 0>a?-b:b};\n$jscomp.math.atanh=function(a){a=Number(a);return($jscomp.math.log1p(a)-$jscomp.math.log1p(-a))/2};$jscomp.math.hypot=function(a,b,c){a=Number(a);b=Number(b);var d,e,f,g=Math.max(Math.abs(a),Math.abs(b));for(d=2;d<arguments.length;d++)g=Math.max(g,Math.abs(arguments[d]));if(1E100<g||1E-100>g){a/=g;b/=g;f=a*a+b*b;for(d=2;d<arguments.length;d++)e=Number(arguments[d])/g,f+=e*e;return Math.sqrt(f)*g}f=a*a+b*b;for(d=2;d<arguments.length;d++)e=Number(arguments[d]),f+=e*e;return Math.sqrt(f)};\n$jscomp.math.trunc=function(a){a=Number(a);if(isNaN(a)||Infinity===a||-Infinity===a||0===a)return a;var b=Math.floor(Math.abs(a));return 0>a?-b:b};$jscomp.math.cbrt=function(a){if(0===a)return a;a=Number(a);var b=Math.pow(Math.abs(a),1/3);return 0>a?-b:b};$jscomp.number=$jscomp.number||{};$jscomp.number.isFinite=function(a){return\"number\"!==typeof a?!1:!isNaN(a)&&Infinity!==a&&-Infinity!==a};$jscomp.number.isInteger=function(a){return $jscomp.number.isFinite(a)?a===Math.floor(a):!1};\n$jscomp.number.isNaN=function(a){return\"number\"===typeof a&&isNaN(a)};$jscomp.number.isSafeInteger=function(a){return $jscomp.number.isInteger(a)&&Math.abs(a)<=$jscomp.number.MAX_SAFE_INTEGER};$jscomp.number.EPSILON=function(){return Math.pow(2,-52)}();$jscomp.number.MAX_SAFE_INTEGER=function(){return 9007199254740991}();$jscomp.number.MIN_SAFE_INTEGER=function(){return-9007199254740991}();$jscomp.object=$jscomp.object||{};\n$jscomp.object.assign=function(a,b){for(var c=1;c<arguments.length;c++){var d=arguments[c];if(d)for(var e in d)Object.prototype.hasOwnProperty.call(d,e)&&(a[e]=d[e])}return a};$jscomp.object.is=function(a,b){return a===b?0!==a||1/a===1/b:a!==a&&b!==b};$jscomp.ASSUME_NO_NATIVE_SET=!1;\n$jscomp.Set$isConformant=function(){if($jscomp.ASSUME_NO_NATIVE_SET)return!1;var a=$jscomp.global.Set;if(!a||!a.prototype.entries||\"function\"!=typeof Object.seal)return!1;try{var b=Object.seal({x:4}),c=new a($jscomp.makeIterator([b]));if(!c.has(b)||1!=c.size||c.add(b)!=c||1!=c.size||c.add({x:4})!=c||2!=c.size)return!1;var d=c.entries(),e=d.next();if(e.done||e.value[0]!=b||e.value[1]!=b)return!1;e=d.next();return e.done||e.value[0]==b||4!=e.value[0].x||e.value[1]!=e.value[0]?!1:d.next().done}catch(f){return!1}};\n$jscomp.Set=function(a){this.map_=new $jscomp.Map;if(a){a=$jscomp.makeIterator(a);for(var b;!(b=a.next()).done;)this.add(b.value)}this.size=this.map_.size};$jscomp.Set.prototype.add=function(a){this.map_.set(a,a);this.size=this.map_.size;return this};$jscomp.Set.prototype[\"delete\"]=function(a){a=this.map_[\"delete\"](a);this.size=this.map_.size;return a};$jscomp.Set.prototype.clear=function(){this.map_.clear();this.size=0};$jscomp.Set.prototype.has=function(a){return this.map_.has(a)};\n$jscomp.Set.prototype.entries=function(){return this.map_.entries()};$jscomp.Set.prototype.values=function(){return this.map_.values()};$jscomp.Set.prototype.forEach=function(a,b){var c=this;this.map_.forEach(function(d){return a.call(b,d,d,c)})};$jscomp.Set$install=function(){$jscomp.Map$install();$jscomp.Set$isConformant()?$jscomp.Set=$jscomp.global.Set:($jscomp.initSymbol(),$jscomp.initSymbolIterator(),$jscomp.Set.prototype[Symbol.iterator]=$jscomp.Set.prototype.values,$jscomp.Set$install=function(){})};\n$jscomp.string=$jscomp.string||{};$jscomp.checkStringArgs=function(a,b,c){if(null==a)throw new TypeError(\"The 'this' value for String.prototype.\"+c+\" must not be null or undefined\");if(b instanceof RegExp)throw new TypeError(\"First argument to String.prototype.\"+c+\" must not be a regular expression\");return a+\"\"};\n$jscomp.string.fromCodePoint=function(a){for(var b=\"\",c=0;c<arguments.length;c++){var d=Number(arguments[c]);if(0>d||1114111<d||d!==Math.floor(d))throw new RangeError(\"invalid_code_point \"+d);65535>=d?b+=String.fromCharCode(d):(d-=65536,b+=String.fromCharCode(d>>>10&1023|55296),b+=String.fromCharCode(d&1023|56320))}return b};\n$jscomp.string.repeat=function(a){var b=$jscomp.checkStringArgs(this,null,\"repeat\");if(0>a||1342177279<a)throw new RangeError(\"Invalid count value\");a|=0;for(var c=\"\";a;)if(a&1&&(c+=b),a>>>=1)b+=b;return c};$jscomp.string.repeat$install=function(){String.prototype.repeat||(String.prototype.repeat=$jscomp.string.repeat)};\n$jscomp.string.codePointAt=function(a){var b=$jscomp.checkStringArgs(this,null,\"codePointAt\"),c=b.length;a=Number(a)||0;if(0<=a&&a<c){a|=0;var d=b.charCodeAt(a);if(55296>d||56319<d||a+1===c)return d;a=b.charCodeAt(a+1);return 56320>a||57343<a?d:1024*(d-55296)+a+9216}};$jscomp.string.codePointAt$install=function(){String.prototype.codePointAt||(String.prototype.codePointAt=$jscomp.string.codePointAt)};\n$jscomp.string.includes=function(a,b){return-1!==$jscomp.checkStringArgs(this,a,\"includes\").indexOf(a,b||0)};$jscomp.string.includes$install=function(){String.prototype.includes||(String.prototype.includes=$jscomp.string.includes)};$jscomp.string.startsWith=function(a,b){var c=$jscomp.checkStringArgs(this,a,\"startsWith\");a+=\"\";for(var d=c.length,e=a.length,f=Math.max(0,Math.min(b|0,c.length)),g=0;g<e&&f<d;)if(c[f++]!=a[g++])return!1;return g>=e};\n$jscomp.string.startsWith$install=function(){String.prototype.startsWith||(String.prototype.startsWith=$jscomp.string.startsWith)};$jscomp.string.endsWith=function(a,b){var c=$jscomp.checkStringArgs(this,a,\"endsWith\");a+=\"\";void 0===b&&(b=c.length);for(var d=Math.max(0,Math.min(b|0,c.length)),e=a.length;0<e&&0<d;)if(c[--d]!=a[--e])return!1;return 0>=e};$jscomp.string.endsWith$install=function(){String.prototype.endsWith||(String.prototype.endsWith=$jscomp.string.endsWith)};\nvar COMPILED=!0,goog=goog||{};goog.global=this;goog.isDef=function(a){return void 0!==a};goog.exportPath_=function(a,b,c){a=a.split(\".\");c=c||goog.global;a[0]in c||!c.execScript||c.execScript(\"var \"+a[0]);for(var d;a.length&&(d=a.shift());)!a.length&&goog.isDef(b)?c[d]=b:c=c[d]?c[d]:c[d]={}};\ngoog.define=function(a,b){var c=b;COMPILED||(goog.global.CLOSURE_UNCOMPILED_DEFINES&&Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES,a)?c=goog.global.CLOSURE_UNCOMPILED_DEFINES[a]:goog.global.CLOSURE_DEFINES&&Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES,a)&&(c=goog.global.CLOSURE_DEFINES[a]));goog.exportPath_(a,c)};goog.DEBUG=!0;goog.LOCALE=\"en\";goog.TRUSTED_SITE=!0;goog.STRICT_MODE_COMPATIBLE=!1;goog.DISALLOW_TEST_ONLY_CODE=COMPILED&&!goog.DEBUG;\ngoog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING=!1;goog.provide=function(a){if(!COMPILED&&goog.isProvided_(a))throw Error('Namespace \"'+a+'\" already declared.');goog.constructNamespace_(a)};goog.constructNamespace_=function(a,b){if(!COMPILED){delete goog.implicitNamespaces_[a];for(var c=a;(c=c.substring(0,c.lastIndexOf(\".\")))&&!goog.getObjectByName(c);)goog.implicitNamespaces_[c]=!0}goog.exportPath_(a,b)};goog.VALID_MODULE_RE_=/^[a-zA-Z_$][a-zA-Z0-9._$]*$/;\ngoog.module=function(a){if(!goog.isString(a)||!a||-1==a.search(goog.VALID_MODULE_RE_))throw Error(\"Invalid module identifier\");if(!goog.isInModuleLoader_())throw Error(\"Module \"+a+\" has been loaded incorrectly.\");if(goog.moduleLoaderState_.moduleName)throw Error(\"goog.module may only be called once per module.\");goog.moduleLoaderState_.moduleName=a;if(!COMPILED){if(goog.isProvided_(a))throw Error('Namespace \"'+a+'\" already declared.');delete goog.implicitNamespaces_[a]}};goog.module.get=function(a){return goog.module.getInternal_(a)};\ngoog.module.getInternal_=function(a){if(!COMPILED)return goog.isProvided_(a)?a in goog.loadedModules_?goog.loadedModules_[a]:goog.getObjectByName(a):null};goog.moduleLoaderState_=null;goog.isInModuleLoader_=function(){return null!=goog.moduleLoaderState_};\ngoog.module.declareLegacyNamespace=function(){if(!COMPILED&&!goog.isInModuleLoader_())throw Error(\"goog.module.declareLegacyNamespace must be called from within a goog.module\");if(!COMPILED&&!goog.moduleLoaderState_.moduleName)throw Error(\"goog.module must be called prior to goog.module.declareLegacyNamespace.\");goog.moduleLoaderState_.declareLegacyNamespace=!0};\ngoog.setTestOnly=function(a){if(goog.DISALLOW_TEST_ONLY_CODE)throw a=a||\"\",Error(\"Importing test-only code into non-debug environment\"+(a?\": \"+a:\".\"));};goog.forwardDeclare=function(a){};COMPILED||(goog.isProvided_=function(a){return a in goog.loadedModules_||!goog.implicitNamespaces_[a]&&goog.isDefAndNotNull(goog.getObjectByName(a))},goog.implicitNamespaces_={\"goog.module\":!0});\ngoog.getObjectByName=function(a,b){for(var c=a.split(\".\"),d=b||goog.global,e;e=c.shift();)if(goog.isDefAndNotNull(d[e]))d=d[e];else return null;return d};goog.globalize=function(a,b){var c=b||goog.global,d;for(d in a)c[d]=a[d]};goog.addDependency=function(a,b,c,d){if(goog.DEPENDENCIES_ENABLED){var e;a=a.replace(/\\\\/g,\"/\");for(var f=goog.dependencies_,g=0;e=b[g];g++)f.nameToPath[e]=a,f.pathIsModule[a]=!!d;for(d=0;b=c[d];d++)a in f.requires||(f.requires[a]={}),f.requires[a][b]=!0}};\ngoog.ENABLE_DEBUG_LOADER=!0;goog.logToConsole_=function(a){goog.global.console&&goog.global.console.error(a)};goog.require=function(a){if(!COMPILED){goog.ENABLE_DEBUG_LOADER&&goog.IS_OLD_IE_&&goog.maybeProcessDeferredDep_(a);if(goog.isProvided_(a))return goog.isInModuleLoader_()?goog.module.getInternal_(a):null;if(goog.ENABLE_DEBUG_LOADER){var b=goog.getPathFromDeps_(a);if(b)return goog.writeScripts_(b),null}a=\"goog.require could not find: \"+a;goog.logToConsole_(a);throw Error(a);}};\ngoog.basePath=\"\";goog.nullFunction=function(){};goog.abstractMethod=function(){throw Error(\"unimplemented abstract method\");};goog.addSingletonGetter=function(a){a.getInstance=function(){if(a.instance_)return a.instance_;goog.DEBUG&&(goog.instantiatedSingletons_[goog.instantiatedSingletons_.length]=a);return a.instance_=new a}};goog.instantiatedSingletons_=[];goog.LOAD_MODULE_USING_EVAL=!0;goog.SEAL_MODULE_EXPORTS=goog.DEBUG;goog.loadedModules_={};goog.DEPENDENCIES_ENABLED=!COMPILED&&goog.ENABLE_DEBUG_LOADER;\ngoog.DEPENDENCIES_ENABLED&&(goog.dependencies_={pathIsModule:{},nameToPath:{},requires:{},visited:{},written:{},deferred:{}},goog.inHtmlDocument_=function(){var a=goog.global.document;return null!=a&&\"write\"in a},goog.findBasePath_=function(){if(goog.isDef(goog.global.CLOSURE_BASE_PATH))goog.basePath=goog.global.CLOSURE_BASE_PATH;else if(goog.inHtmlDocument_())for(var a=goog.global.document.getElementsByTagName(\"SCRIPT\"),b=a.length-1;0<=b;--b){var c=a[b].src,d=c.lastIndexOf(\"?\"),d=-1==d?c.length:\nd;if(\"base.js\"==c.substr(d-7,7)){goog.basePath=c.substr(0,d-7);break}}},goog.importScript_=function(a,b){(goog.global.CLOSURE_IMPORT_SCRIPT||goog.writeScriptTag_)(a,b)&&(goog.dependencies_.written[a]=!0)},goog.IS_OLD_IE_=!(goog.global.atob||!goog.global.document||!goog.global.document.all),goog.importModule_=function(a){goog.importScript_(\"\",'goog.retrieveAndExecModule_(\"'+a+'\");')&&(goog.dependencies_.written[a]=!0)},goog.queuedModules_=[],goog.wrapModule_=function(a,b){return goog.LOAD_MODULE_USING_EVAL&&\ngoog.isDef(goog.global.JSON)?\"goog.loadModule(\"+goog.global.JSON.stringify(b+\"\\n//# sourceURL=\"+a+\"\\n\")+\");\":'goog.loadModule(function(exports) {\"use strict\";'+b+\"\\n;return exports});\\n//# sourceURL=\"+a+\"\\n\"},goog.loadQueuedModules_=function(){var a=goog.queuedModules_.length;if(0<a){var b=goog.queuedModules_;goog.queuedModules_=[];for(var c=0;c<a;c++)goog.maybeProcessDeferredPath_(b[c])}},goog.maybeProcessDeferredDep_=function(a){goog.isDeferredModule_(a)&&goog.allDepsAreAvailable_(a)&&(a=goog.getPathFromDeps_(a),\ngoog.maybeProcessDeferredPath_(goog.basePath+a))},goog.isDeferredModule_=function(a){return(a=goog.getPathFromDeps_(a))&&goog.dependencies_.pathIsModule[a]?goog.basePath+a in goog.dependencies_.deferred:!1},goog.allDepsAreAvailable_=function(a){if((a=goog.getPathFromDeps_(a))&&a in goog.dependencies_.requires)for(var b in goog.dependencies_.requires[a])if(!goog.isProvided_(b)&&!goog.isDeferredModule_(b))return!1;return!0},goog.maybeProcessDeferredPath_=function(a){if(a in goog.dependencies_.deferred){var b=\ngoog.dependencies_.deferred[a];delete goog.dependencies_.deferred[a];goog.globalEval(b)}},goog.loadModuleFromUrl=function(a){goog.retrieveAndExecModule_(a)},goog.loadModule=function(a){var b=goog.moduleLoaderState_;try{goog.moduleLoaderState_={moduleName:void 0,declareLegacyNamespace:!1};var c;if(goog.isFunction(a))c=a.call(goog.global,{});else if(goog.isString(a))c=goog.loadModuleFromSource_.call(goog.global,a);else throw Error(\"Invalid module definition\");var d=goog.moduleLoaderState_.moduleName;\nif(!goog.isString(d)||!d)throw Error('Invalid module name \"'+d+'\"');goog.moduleLoaderState_.declareLegacyNamespace?goog.constructNamespace_(d,c):goog.SEAL_MODULE_EXPORTS&&Object.seal&&Object.seal(c);goog.loadedModules_[d]=c}finally{goog.moduleLoaderState_=b}},goog.loadModuleFromSource_=function(a){eval(a);return{}},goog.writeScriptSrcNode_=function(a){goog.global.document.write('<script type=\"text/javascript\" src=\"'+a+'\">\\x3c/script>')},goog.appendScriptSrcNode_=function(a){var b=goog.global.document,\nc=b.createElement(\"script\");c.type=\"text/javascript\";c.src=a;c.defer=!1;c.async=!1;b.head.appendChild(c)},goog.writeScriptTag_=function(a,b){if(goog.inHtmlDocument_()){var c=goog.global.document;if(!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING&&\"complete\"==c.readyState){if(/\\bdeps.js$/.test(a))return!1;throw Error('Cannot write \"'+a+'\" after document load');}var d=goog.IS_OLD_IE_;void 0===b?d?(d=\" onreadystatechange='goog.onScriptLoad_(this, \"+ ++goog.lastNonModuleScriptIndex_+\")' \",c.write('<script type=\"text/javascript\" src=\"'+\na+'\"'+d+\">\\x3c/script>\")):goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING?goog.appendScriptSrcNode_(a):goog.writeScriptSrcNode_(a):c.write('<script type=\"text/javascript\">'+b+\"\\x3c/script>\");return!0}return!1},goog.lastNonModuleScriptIndex_=0,goog.onScriptLoad_=function(a,b){\"complete\"==a.readyState&&goog.lastNonModuleScriptIndex_==b&&goog.loadQueuedModules_();return!0},goog.writeScripts_=function(a){function b(a){if(!(a in e.written||a in e.visited)){e.visited[a]=!0;if(a in e.requires)for(var f in e.requires[a])if(!goog.isProvided_(f))if(f in\ne.nameToPath)b(e.nameToPath[f]);else throw Error(\"Undefined nameToPath for \"+f);a in d||(d[a]=!0,c.push(a))}}var c=[],d={},e=goog.dependencies_;b(a);for(a=0;a<c.length;a++){var f=c[a];goog.dependencies_.written[f]=!0}var g=goog.moduleLoaderState_;goog.moduleLoaderState_=null;for(a=0;a<c.length;a++)if(f=c[a])e.pathIsModule[f]?goog.importModule_(goog.basePath+f):goog.importScript_(goog.basePath+f);else throw goog.moduleLoaderState_=g,Error(\"Undefined script input\");goog.moduleLoaderState_=g},goog.getPathFromDeps_=\nfunction(a){return a in goog.dependencies_.nameToPath?goog.dependencies_.nameToPath[a]:null},goog.findBasePath_(),goog.global.CLOSURE_NO_DEPS||goog.importScript_(goog.basePath+\"deps.js\"));goog.normalizePath_=function(a){a=a.split(\"/\");for(var b=0;b<a.length;)\".\"==a[b]?a.splice(b,1):b&&\"..\"==a[b]&&a[b-1]&&\"..\"!=a[b-1]?a.splice(--b,2):b++;return a.join(\"/\")};\ngoog.loadFileSync_=function(a){if(goog.global.CLOSURE_LOAD_FILE_SYNC)return goog.global.CLOSURE_LOAD_FILE_SYNC(a);var b=new goog.global.XMLHttpRequest;b.open(\"get\",a,!1);b.send();return b.responseText};\ngoog.retrieveAndExecModule_=function(a){if(!COMPILED){var b=a;a=goog.normalizePath_(a);var c=goog.global.CLOSURE_IMPORT_SCRIPT||goog.writeScriptTag_,d=goog.loadFileSync_(a);if(null!=d)d=goog.wrapModule_(a,d),goog.IS_OLD_IE_?(goog.dependencies_.deferred[b]=d,goog.queuedModules_.push(b)):c(a,d);else throw Error(\"load of \"+a+\"failed\");}};\ngoog.typeOf=function(a){var b=typeof a;if(\"object\"==b)if(a){if(a instanceof Array)return\"array\";if(a instanceof Object)return b;var c=Object.prototype.toString.call(a);if(\"[object Window]\"==c)return\"object\";if(\"[object Array]\"==c||\"number\"==typeof a.length&&\"undefined\"!=typeof a.splice&&\"undefined\"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable(\"splice\"))return\"array\";if(\"[object Function]\"==c||\"undefined\"!=typeof a.call&&\"undefined\"!=typeof a.propertyIsEnumerable&&!a.propertyIsEnumerable(\"call\"))return\"function\"}else return\"null\";\nelse if(\"function\"==b&&\"undefined\"==typeof a.call)return\"object\";return b};goog.isNull=function(a){return null===a};goog.isDefAndNotNull=function(a){return null!=a};goog.isArray=function(a){return\"array\"==goog.typeOf(a)};goog.isArrayLike=function(a){var b=goog.typeOf(a);return\"array\"==b||\"object\"==b&&\"number\"==typeof a.length};goog.isDateLike=function(a){return goog.isObject(a)&&\"function\"==typeof a.getFullYear};goog.isString=function(a){return\"string\"==typeof a};\ngoog.isBoolean=function(a){return\"boolean\"==typeof a};goog.isNumber=function(a){return\"number\"==typeof a};goog.isFunction=function(a){return\"function\"==goog.typeOf(a)};goog.isObject=function(a){var b=typeof a;return\"object\"==b&&null!=a||\"function\"==b};goog.getUid=function(a){return a[goog.UID_PROPERTY_]||(a[goog.UID_PROPERTY_]=++goog.uidCounter_)};goog.hasUid=function(a){return!!a[goog.UID_PROPERTY_]};\ngoog.removeUid=function(a){null!==a&&\"removeAttribute\"in a&&a.removeAttribute(goog.UID_PROPERTY_);try{delete a[goog.UID_PROPERTY_]}catch(b){}};goog.UID_PROPERTY_=\"closure_uid_\"+(1E9*Math.random()>>>0);goog.uidCounter_=0;goog.getHashCode=goog.getUid;goog.removeHashCode=goog.removeUid;goog.cloneObject=function(a){var b=goog.typeOf(a);if(\"object\"==b||\"array\"==b){if(a.clone)return a.clone();var b=\"array\"==b?[]:{},c;for(c in a)b[c]=goog.cloneObject(a[c]);return b}return a};\ngoog.bindNative_=function(a,b,c){return a.call.apply(a.bind,arguments)};goog.bindJs_=function(a,b,c){if(!a)throw Error();if(2<arguments.length){var d=Array.prototype.slice.call(arguments,2);return function(){var c=Array.prototype.slice.call(arguments);Array.prototype.unshift.apply(c,d);return a.apply(b,c)}}return function(){return a.apply(b,arguments)}};\ngoog.bind=function(a,b,c){Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf(\"native code\")?goog.bind=goog.bindNative_:goog.bind=goog.bindJs_;return goog.bind.apply(null,arguments)};goog.partial=function(a,b){var c=Array.prototype.slice.call(arguments,1);return function(){var b=c.slice();b.push.apply(b,arguments);return a.apply(this,b)}};goog.mixin=function(a,b){for(var c in b)a[c]=b[c]};goog.now=goog.TRUSTED_SITE&&Date.now||function(){return+new Date};\ngoog.globalEval=function(a){if(goog.global.execScript)goog.global.execScript(a,\"JavaScript\");else if(goog.global.eval){if(null==goog.evalWorksForGlobals_)if(goog.global.eval(\"var _evalTest_ = 1;\"),\"undefined\"!=typeof goog.global._evalTest_){try{delete goog.global._evalTest_}catch(d){}goog.evalWorksForGlobals_=!0}else goog.evalWorksForGlobals_=!1;if(goog.evalWorksForGlobals_)goog.global.eval(a);else{var b=goog.global.document,c=b.createElement(\"SCRIPT\");c.type=\"text/javascript\";c.defer=!1;c.appendChild(b.createTextNode(a));\nb.body.appendChild(c);b.body.removeChild(c)}}else throw Error(\"goog.globalEval not available\");};goog.evalWorksForGlobals_=null;goog.getCssName=function(a,b){var c=function(a){return goog.cssNameMapping_[a]||a},d=function(a){a=a.split(\"-\");for(var b=[],d=0;d<a.length;d++)b.push(c(a[d]));return b.join(\"-\")},d=goog.cssNameMapping_?\"BY_WHOLE\"==goog.cssNameMappingStyle_?c:d:function(a){return a};return b?a+\"-\"+d(b):d(a)};\ngoog.setCssNameMapping=function(a,b){goog.cssNameMapping_=a;goog.cssNameMappingStyle_=b};!COMPILED&&goog.global.CLOSURE_CSS_NAME_MAPPING&&(goog.cssNameMapping_=goog.global.CLOSURE_CSS_NAME_MAPPING);goog.getMsg=function(a,b){b&&(a=a.replace(/\\{\\$([^}]+)}/g,function(a,d){return null!=b&&d in b?b[d]:a}));return a};goog.getMsgWithFallback=function(a,b){return a};goog.exportSymbol=function(a,b,c){goog.exportPath_(a,b,c)};goog.exportProperty=function(a,b,c){a[b]=c};\ngoog.inherits=function(a,b){function c(){}c.prototype=b.prototype;a.superClass_=b.prototype;a.prototype=new c;a.prototype.constructor=a;a.base=function(a,c,f){for(var g=Array(arguments.length-2),h=2;h<arguments.length;h++)g[h-2]=arguments[h];return b.prototype[c].apply(a,g)}};\ngoog.base=function(a,b,c){var d=arguments.callee.caller;if(goog.STRICT_MODE_COMPATIBLE||goog.DEBUG&&!d)throw Error(\"arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C\");if(d.superClass_){for(var e=Array(arguments.length-1),f=1;f<arguments.length;f++)e[f-1]=arguments[f];return d.superClass_.constructor.apply(a,e)}e=Array(arguments.length-2);for(f=2;f<arguments.length;f++)e[f-2]=arguments[f];for(var f=!1,g=a.constructor;g;g=\ng.superClass_&&g.superClass_.constructor)if(g.prototype[b]===d)f=!0;else if(f)return g.prototype[b].apply(a,e);if(a[b]===d)return a.constructor.prototype[b].apply(a,e);throw Error(\"goog.base called from a method of one name to a method of a different name\");};goog.scope=function(a){a.call(goog.global)};COMPILED||(goog.global.COMPILED=COMPILED);\ngoog.defineClass=function(a,b){var c=b.constructor,d=b.statics;c&&c!=Object.prototype.constructor||(c=function(){throw Error(\"cannot instantiate an interface (no constructor defined).\");});c=goog.defineClass.createSealingConstructor_(c,a);a&&goog.inherits(c,a);delete b.constructor;delete b.statics;goog.defineClass.applyProperties_(c.prototype,b);null!=d&&(d instanceof Function?d(c):goog.defineClass.applyProperties_(c,d));return c};goog.defineClass.SEAL_CLASS_INSTANCES=goog.DEBUG;\ngoog.defineClass.createSealingConstructor_=function(a,b){if(goog.defineClass.SEAL_CLASS_INSTANCES&&Object.seal instanceof Function){if(b&&b.prototype&&b.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_])return a;var c=function(){var b=a.apply(this,arguments)||this;b[goog.UID_PROPERTY_]=b[goog.UID_PROPERTY_];this.constructor===c&&Object.seal(b);return b};return c}return a};goog.defineClass.OBJECT_PROTOTYPE_FIELDS_=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\ngoog.defineClass.applyProperties_=function(a,b){for(var c in b)Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c]);for(var d=0;d<goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;d++)c=goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[d],Object.prototype.hasOwnProperty.call(b,c)&&(a[c]=b[c])};goog.tagUnsealableClass=function(a){!COMPILED&&goog.defineClass.SEAL_CLASS_INSTANCES&&(a.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]=!0)};goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_=\"goog_defineClass_legacy_unsealable\";goog.dom={};goog.dom.NodeType={ELEMENT:1,ATTRIBUTE:2,TEXT:3,CDATA_SECTION:4,ENTITY_REFERENCE:5,ENTITY:6,PROCESSING_INSTRUCTION:7,COMMENT:8,DOCUMENT:9,DOCUMENT_TYPE:10,DOCUMENT_FRAGMENT:11,NOTATION:12};goog.debug={};goog.debug.Error=function(a){if(Error.captureStackTrace)Error.captureStackTrace(this,goog.debug.Error);else{var b=Error().stack;b&&(this.stack=b)}a&&(this.message=String(a));this.reportErrorToServer=!0};goog.inherits(goog.debug.Error,Error);goog.debug.Error.prototype.name=\"CustomError\";goog.string={};goog.string.DETECT_DOUBLE_ESCAPING=!1;goog.string.FORCE_NON_DOM_HTML_UNESCAPING=!1;goog.string.Unicode={NBSP:\"\\u00a0\"};goog.string.startsWith=function(a,b){return 0==a.lastIndexOf(b,0)};goog.string.endsWith=function(a,b){var c=a.length-b.length;return 0<=c&&a.indexOf(b,c)==c};goog.string.caseInsensitiveStartsWith=function(a,b){return 0==goog.string.caseInsensitiveCompare(b,a.substr(0,b.length))};\ngoog.string.caseInsensitiveEndsWith=function(a,b){return 0==goog.string.caseInsensitiveCompare(b,a.substr(a.length-b.length,b.length))};goog.string.caseInsensitiveEquals=function(a,b){return a.toLowerCase()==b.toLowerCase()};goog.string.subs=function(a,b){for(var c=a.split(\"%s\"),d=\"\",e=Array.prototype.slice.call(arguments,1);e.length&&1<c.length;)d+=c.shift()+e.shift();return d+c.join(\"%s\")};goog.string.collapseWhitespace=function(a){return a.replace(/[\\s\\xa0]+/g,\" \").replace(/^\\s+|\\s+$/g,\"\")};\ngoog.string.isEmptyOrWhitespace=function(a){return/^[\\s\\xa0]*$/.test(a)};goog.string.isEmptyString=function(a){return 0==a.length};goog.string.isEmpty=goog.string.isEmptyOrWhitespace;goog.string.isEmptyOrWhitespaceSafe=function(a){return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(a))};goog.string.isEmptySafe=goog.string.isEmptyOrWhitespaceSafe;goog.string.isBreakingWhitespace=function(a){return!/[^\\t\\n\\r ]/.test(a)};goog.string.isAlpha=function(a){return!/[^a-zA-Z]/.test(a)};\ngoog.string.isNumeric=function(a){return!/[^0-9]/.test(a)};goog.string.isAlphaNumeric=function(a){return!/[^a-zA-Z0-9]/.test(a)};goog.string.isSpace=function(a){return\" \"==a};goog.string.isUnicodeChar=function(a){return 1==a.length&&\" \"<=a&&\"~\">=a||\"\\u0080\"<=a&&\"\\ufffd\">=a};goog.string.stripNewlines=function(a){return a.replace(/(\\r\\n|\\r|\\n)+/g,\" \")};goog.string.canonicalizeNewlines=function(a){return a.replace(/(\\r\\n|\\r|\\n)/g,\"\\n\")};\ngoog.string.normalizeWhitespace=function(a){return a.replace(/\\xa0|\\s/g,\" \")};goog.string.normalizeSpaces=function(a){return a.replace(/\\xa0|[ \\t]+/g,\" \")};goog.string.collapseBreakingSpaces=function(a){return a.replace(/[\\t\\r\\n ]+/g,\" \").replace(/^[\\t\\r\\n ]+|[\\t\\r\\n ]+$/g,\"\")};goog.string.trim=goog.TRUSTED_SITE&&String.prototype.trim?function(a){return a.trim()}:function(a){return a.replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g,\"\")};goog.string.trimLeft=function(a){return a.replace(/^[\\s\\xa0]+/,\"\")};\ngoog.string.trimRight=function(a){return a.replace(/[\\s\\xa0]+$/,\"\")};goog.string.caseInsensitiveCompare=function(a,b){var c=String(a).toLowerCase(),d=String(b).toLowerCase();return c<d?-1:c==d?0:1};\ngoog.string.numberAwareCompare_=function(a,b,c){if(a==b)return 0;if(!a)return-1;if(!b)return 1;for(var d=a.toLowerCase().match(c),e=b.toLowerCase().match(c),f=Math.min(d.length,e.length),g=0;g<f;g++){c=d[g];var h=e[g];if(c!=h)return a=parseInt(c,10),!isNaN(a)&&(b=parseInt(h,10),!isNaN(b)&&a-b)?a-b:c<h?-1:1}return d.length!=e.length?d.length-e.length:a<b?-1:1};goog.string.intAwareCompare=function(a,b){return goog.string.numberAwareCompare_(a,b,/\\d+|\\D+/g)};\ngoog.string.floatAwareCompare=function(a,b){return goog.string.numberAwareCompare_(a,b,/\\d+|\\.\\d+|\\D+/g)};goog.string.numerateCompare=goog.string.floatAwareCompare;goog.string.urlEncode=function(a){return encodeURIComponent(String(a))};goog.string.urlDecode=function(a){return decodeURIComponent(a.replace(/\\+/g,\" \"))};goog.string.newLineToBr=function(a,b){return a.replace(/(\\r\\n|\\r|\\n)/g,b?\"<br />\":\"<br>\")};\ngoog.string.htmlEscape=function(a,b){if(b)a=a.replace(goog.string.AMP_RE_,\"&amp;\").replace(goog.string.LT_RE_,\"&lt;\").replace(goog.string.GT_RE_,\"&gt;\").replace(goog.string.QUOT_RE_,\"&quot;\").replace(goog.string.SINGLE_QUOTE_RE_,\"&#39;\").replace(goog.string.NULL_RE_,\"&#0;\"),goog.string.DETECT_DOUBLE_ESCAPING&&(a=a.replace(goog.string.E_RE_,\"&#101;\"));else{if(!goog.string.ALL_RE_.test(a))return a;-1!=a.indexOf(\"&\")&&(a=a.replace(goog.string.AMP_RE_,\"&amp;\"));-1!=a.indexOf(\"<\")&&(a=a.replace(goog.string.LT_RE_,\n\"&lt;\"));-1!=a.indexOf(\">\")&&(a=a.replace(goog.string.GT_RE_,\"&gt;\"));-1!=a.indexOf('\"')&&(a=a.replace(goog.string.QUOT_RE_,\"&quot;\"));-1!=a.indexOf(\"'\")&&(a=a.replace(goog.string.SINGLE_QUOTE_RE_,\"&#39;\"));-1!=a.indexOf(\"\\x00\")&&(a=a.replace(goog.string.NULL_RE_,\"&#0;\"));goog.string.DETECT_DOUBLE_ESCAPING&&-1!=a.indexOf(\"e\")&&(a=a.replace(goog.string.E_RE_,\"&#101;\"))}return a};goog.string.AMP_RE_=/&/g;goog.string.LT_RE_=/</g;goog.string.GT_RE_=/>/g;goog.string.QUOT_RE_=/\"/g;\ngoog.string.SINGLE_QUOTE_RE_=/'/g;goog.string.NULL_RE_=/\\x00/g;goog.string.E_RE_=/e/g;goog.string.ALL_RE_=goog.string.DETECT_DOUBLE_ESCAPING?/[\\x00&<>\"'e]/:/[\\x00&<>\"']/;goog.string.unescapeEntities=function(a){return goog.string.contains(a,\"&\")?!goog.string.FORCE_NON_DOM_HTML_UNESCAPING&&\"document\"in goog.global?goog.string.unescapeEntitiesUsingDom_(a):goog.string.unescapePureXmlEntities_(a):a};\ngoog.string.unescapeEntitiesWithDocument=function(a,b){return goog.string.contains(a,\"&\")?goog.string.unescapeEntitiesUsingDom_(a,b):a};\ngoog.string.unescapeEntitiesUsingDom_=function(a,b){var c={\"&amp;\":\"&\",\"&lt;\":\"<\",\"&gt;\":\">\",\"&quot;\":'\"'},d;d=b?b.createElement(\"div\"):goog.global.document.createElement(\"div\");return a.replace(goog.string.HTML_ENTITY_PATTERN_,function(a,b){var g=c[a];if(g)return g;if(\"#\"==b.charAt(0)){var h=Number(\"0\"+b.substr(1));isNaN(h)||(g=String.fromCharCode(h))}g||(d.innerHTML=a+\" \",g=d.firstChild.nodeValue.slice(0,-1));return c[a]=g})};\ngoog.string.unescapePureXmlEntities_=function(a){return a.replace(/&([^;]+);/g,function(a,c){switch(c){case \"amp\":return\"&\";case \"lt\":return\"<\";case \"gt\":return\">\";case \"quot\":return'\"';default:if(\"#\"==c.charAt(0)){var d=Number(\"0\"+c.substr(1));if(!isNaN(d))return String.fromCharCode(d)}return a}})};goog.string.HTML_ENTITY_PATTERN_=/&([^;\\s<&]+);?/g;goog.string.whitespaceEscape=function(a,b){return goog.string.newLineToBr(a.replace(/  /g,\" &#160;\"),b)};\ngoog.string.preserveSpaces=function(a){return a.replace(/(^|[\\n ]) /g,\"$1\"+goog.string.Unicode.NBSP)};goog.string.stripQuotes=function(a,b){for(var c=b.length,d=0;d<c;d++){var e=1==c?b:b.charAt(d);if(a.charAt(0)==e&&a.charAt(a.length-1)==e)return a.substring(1,a.length-1)}return a};goog.string.truncate=function(a,b,c){c&&(a=goog.string.unescapeEntities(a));a.length>b&&(a=a.substring(0,b-3)+\"...\");c&&(a=goog.string.htmlEscape(a));return a};\ngoog.string.truncateMiddle=function(a,b,c,d){c&&(a=goog.string.unescapeEntities(a));if(d&&a.length>b){d>b&&(d=b);var e=a.length-d;a=a.substring(0,b-d)+\"...\"+a.substring(e)}else a.length>b&&(d=Math.floor(b/2),e=a.length-d,a=a.substring(0,d+b%2)+\"...\"+a.substring(e));c&&(a=goog.string.htmlEscape(a));return a};goog.string.specialEscapeChars_={\"\\x00\":\"\\\\0\",\"\\b\":\"\\\\b\",\"\\f\":\"\\\\f\",\"\\n\":\"\\\\n\",\"\\r\":\"\\\\r\",\"\\t\":\"\\\\t\",\"\\x0B\":\"\\\\x0B\",'\"':'\\\\\"',\"\\\\\":\"\\\\\\\\\",\"<\":\"<\"};goog.string.jsEscapeCache_={\"'\":\"\\\\'\"};\ngoog.string.quote=function(a){a=String(a);for(var b=['\"'],c=0;c<a.length;c++){var d=a.charAt(c),e=d.charCodeAt(0);b[c+1]=goog.string.specialEscapeChars_[d]||(31<e&&127>e?d:goog.string.escapeChar(d))}b.push('\"');return b.join(\"\")};goog.string.escapeString=function(a){for(var b=[],c=0;c<a.length;c++)b[c]=goog.string.escapeChar(a.charAt(c));return b.join(\"\")};\ngoog.string.escapeChar=function(a){if(a in goog.string.jsEscapeCache_)return goog.string.jsEscapeCache_[a];if(a in goog.string.specialEscapeChars_)return goog.string.jsEscapeCache_[a]=goog.string.specialEscapeChars_[a];var b,c=a.charCodeAt(0);if(31<c&&127>c)b=a;else{if(256>c){if(b=\"\\\\x\",16>c||256<c)b+=\"0\"}else b=\"\\\\u\",4096>c&&(b+=\"0\");b+=c.toString(16).toUpperCase()}return goog.string.jsEscapeCache_[a]=b};goog.string.contains=function(a,b){return-1!=a.indexOf(b)};\ngoog.string.caseInsensitiveContains=function(a,b){return goog.string.contains(a.toLowerCase(),b.toLowerCase())};goog.string.countOf=function(a,b){return a&&b?a.split(b).length-1:0};goog.string.removeAt=function(a,b,c){var d=a;0<=b&&b<a.length&&0<c&&(d=a.substr(0,b)+a.substr(b+c,a.length-b-c));return d};goog.string.remove=function(a,b){var c=new RegExp(goog.string.regExpEscape(b),\"\");return a.replace(c,\"\")};\ngoog.string.removeAll=function(a,b){var c=new RegExp(goog.string.regExpEscape(b),\"g\");return a.replace(c,\"\")};goog.string.regExpEscape=function(a){return String(a).replace(/([-()\\[\\]{}+?*.$\\^|,:#<!\\\\])/g,\"\\\\$1\").replace(/\\x08/g,\"\\\\x08\")};goog.string.repeat=String.prototype.repeat?function(a,b){return a.repeat(b)}:function(a,b){return Array(b+1).join(a)};\ngoog.string.padNumber=function(a,b,c){a=goog.isDef(c)?a.toFixed(c):String(a);c=a.indexOf(\".\");-1==c&&(c=a.length);return goog.string.repeat(\"0\",Math.max(0,b-c))+a};goog.string.makeSafe=function(a){return null==a?\"\":String(a)};goog.string.buildString=function(a){return Array.prototype.join.call(arguments,\"\")};goog.string.getRandomString=function(){return Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^goog.now()).toString(36)};\ngoog.string.compareVersions=function(a,b){for(var c=0,d=goog.string.trim(String(a)).split(\".\"),e=goog.string.trim(String(b)).split(\".\"),f=Math.max(d.length,e.length),g=0;0==c&&g<f;g++){var h=d[g]||\"\",k=e[g]||\"\",l=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\"),p=RegExp(\"(\\\\d*)(\\\\D*)\",\"g\");do{var m=l.exec(h)||[\"\",\"\",\"\"],n=p.exec(k)||[\"\",\"\",\"\"];if(0==m[0].length&&0==n[0].length)break;var c=0==m[1].length?0:parseInt(m[1],10),q=0==n[1].length?0:parseInt(n[1],10),c=goog.string.compareElements_(c,q)||goog.string.compareElements_(0==\nm[2].length,0==n[2].length)||goog.string.compareElements_(m[2],n[2])}while(0==c)}return c};goog.string.compareElements_=function(a,b){return a<b?-1:a>b?1:0};goog.string.hashCode=function(a){for(var b=0,c=0;c<a.length;++c)b=31*b+a.charCodeAt(c)>>>0;return b};goog.string.uniqueStringCounter_=2147483648*Math.random()|0;goog.string.createUniqueString=function(){return\"goog_\"+goog.string.uniqueStringCounter_++};\ngoog.string.toNumber=function(a){var b=Number(a);return 0==b&&goog.string.isEmptyOrWhitespace(a)?NaN:b};goog.string.isLowerCamelCase=function(a){return/^[a-z]+([A-Z][a-z]*)*$/.test(a)};goog.string.isUpperCamelCase=function(a){return/^([A-Z][a-z]*)+$/.test(a)};goog.string.toCamelCase=function(a){return String(a).replace(/\\-([a-z])/g,function(a,c){return c.toUpperCase()})};goog.string.toSelectorCase=function(a){return String(a).replace(/([A-Z])/g,\"-$1\").toLowerCase()};\ngoog.string.toTitleCase=function(a,b){var c=goog.isString(b)?goog.string.regExpEscape(b):\"\\\\s\";return a.replace(new RegExp(\"(^\"+(c?\"|[\"+c+\"]+\":\"\")+\")([a-z])\",\"g\"),function(a,b,c){return b+c.toUpperCase()})};goog.string.capitalize=function(a){return String(a.charAt(0)).toUpperCase()+String(a.substr(1)).toLowerCase()};goog.string.parseInt=function(a){isFinite(a)&&(a=String(a));return goog.isString(a)?/^\\s*-?0x/i.test(a)?parseInt(a,16):parseInt(a,10):NaN};\ngoog.string.splitLimit=function(a,b,c){a=a.split(b);for(var d=[];0<c&&a.length;)d.push(a.shift()),c--;a.length&&d.push(a.join(b));return d};goog.string.editDistance=function(a,b){var c=[],d=[];if(a==b)return 0;if(!a.length||!b.length)return Math.max(a.length,b.length);for(var e=0;e<b.length+1;e++)c[e]=e;for(e=0;e<a.length;e++){d[0]=e+1;for(var f=0;f<b.length;f++)d[f+1]=Math.min(d[f]+1,c[f+1]+1,c[f]+Number(a[e]!=b[f]));for(f=0;f<c.length;f++)c[f]=d[f]}return d[b.length]};goog.asserts={};goog.asserts.ENABLE_ASSERTS=goog.DEBUG;goog.asserts.AssertionError=function(a,b){b.unshift(a);goog.debug.Error.call(this,goog.string.subs.apply(null,b));b.shift();this.messagePattern=a};goog.inherits(goog.asserts.AssertionError,goog.debug.Error);goog.asserts.AssertionError.prototype.name=\"AssertionError\";goog.asserts.DEFAULT_ERROR_HANDLER=function(a){throw a;};goog.asserts.errorHandler_=goog.asserts.DEFAULT_ERROR_HANDLER;\ngoog.asserts.doAssertFailure_=function(a,b,c,d){var e=\"Assertion failed\";if(c)var e=e+(\": \"+c),f=d;else a&&(e+=\": \"+a,f=b);a=new goog.asserts.AssertionError(\"\"+e,f||[]);goog.asserts.errorHandler_(a)};goog.asserts.setErrorHandler=function(a){goog.asserts.ENABLE_ASSERTS&&(goog.asserts.errorHandler_=a)};goog.asserts.assert=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!a&&goog.asserts.doAssertFailure_(\"\",null,b,Array.prototype.slice.call(arguments,2));return a};\ngoog.asserts.fail=function(a,b){goog.asserts.ENABLE_ASSERTS&&goog.asserts.errorHandler_(new goog.asserts.AssertionError(\"Failure\"+(a?\": \"+a:\"\"),Array.prototype.slice.call(arguments,1)))};goog.asserts.assertNumber=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isNumber(a)&&goog.asserts.doAssertFailure_(\"Expected number but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};\ngoog.asserts.assertString=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isString(a)&&goog.asserts.doAssertFailure_(\"Expected string but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertFunction=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isFunction(a)&&goog.asserts.doAssertFailure_(\"Expected function but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};\ngoog.asserts.assertObject=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isObject(a)&&goog.asserts.doAssertFailure_(\"Expected object but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertArray=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isArray(a)&&goog.asserts.doAssertFailure_(\"Expected array but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};\ngoog.asserts.assertBoolean=function(a,b,c){goog.asserts.ENABLE_ASSERTS&&!goog.isBoolean(a)&&goog.asserts.doAssertFailure_(\"Expected boolean but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};goog.asserts.assertElement=function(a,b,c){!goog.asserts.ENABLE_ASSERTS||goog.isObject(a)&&a.nodeType==goog.dom.NodeType.ELEMENT||goog.asserts.doAssertFailure_(\"Expected Element but got %s: %s.\",[goog.typeOf(a),a],b,Array.prototype.slice.call(arguments,2));return a};\ngoog.asserts.assertInstanceof=function(a,b,c,d){!goog.asserts.ENABLE_ASSERTS||a instanceof b||goog.asserts.doAssertFailure_(\"Expected instanceof %s but got %s.\",[goog.asserts.getType_(b),goog.asserts.getType_(a)],c,Array.prototype.slice.call(arguments,3));return a};goog.asserts.assertObjectPrototypeIsIntact=function(){for(var a in Object.prototype)goog.asserts.fail(a+\" should not be enumerable in Object.prototype.\")};\ngoog.asserts.getType_=function(a){return a instanceof Function?a.displayName||a.name||\"unknown type name\":a instanceof Object?a.constructor.displayName||a.constructor.name||Object.prototype.toString.call(a):null===a?\"null\":typeof a};var jspb={Map:function(a,b){this.arr_=a;this.valueCtor_=b;this.map_={};this.arrClean=!0;0<this.arr_.length&&this.loadFromArray_()}};jspb.Map.prototype.loadFromArray_=function(){for(var a=0;a<this.arr_.length;a++){var b=this.arr_[a],c=b[0];this.map_[c.toString()]=new jspb.Map.Entry_(c,b[1])}this.arrClean=!0};\njspb.Map.prototype.toArray=function(){if(this.arrClean){if(this.valueCtor_){var a=this.map_,b;for(b in a)if(Object.prototype.hasOwnProperty.call(a,b)){var c=a[b].valueWrapper;c&&c.toArray()}}}else{this.arr_.length=0;a=this.stringKeys_();a.sort();for(b=0;b<a.length;b++){var d=this.map_[a[b]];(c=d.valueWrapper)&&c.toArray();this.arr_.push([d.key,d.value])}this.arrClean=!0}return this.arr_};\njspb.Map.prototype.toObject=function(a,b){for(var c=this.toArray(),d=[],e=0;e<c.length;e++){var f=this.map_[c[e][0].toString()];this.wrapEntry_(f);var g=f.valueWrapper;g?(goog.asserts.assert(b),d.push([f.key,b(a,g)])):d.push([f.key,f.value])}return d};jspb.Map.fromObject=function(a,b,c){b=new jspb.Map([],b);for(var d=0;d<a.length;d++){var e=a[d][0],f=c(a[d][1]);b.set(e,f)}return b};jspb.Map.ArrayIteratorIterable_=function(a){this.idx_=0;this.arr_=a};\njspb.Map.ArrayIteratorIterable_.prototype.next=function(){return this.idx_<this.arr_.length?{done:!1,value:this.arr_[this.idx_++]}:{done:!0,value:void 0}};$jscomp.initSymbol();\"undefined\"!=typeof Symbol&&($jscomp.initSymbol(),$jscomp.initSymbolIterator(),jspb.Map.ArrayIteratorIterable_.prototype[Symbol.iterator]=function(){return this});jspb.Map.prototype.getLength=function(){return this.stringKeys_().length};jspb.Map.prototype.clear=function(){this.map_={};this.arrClean=!1};\njspb.Map.prototype.del=function(a){a=a.toString();var b=this.map_.hasOwnProperty(a);delete this.map_[a];this.arrClean=!1;return b};jspb.Map.prototype.getEntryList=function(){var a=[],b=this.stringKeys_();b.sort();for(var c=0;c<b.length;c++){var d=this.map_[b[c]];a.push([d.key,d.value])}return a};jspb.Map.prototype.entries=function(){var a=[],b=this.stringKeys_();b.sort();for(var c=0;c<b.length;c++){var d=this.map_[b[c]];a.push([d.key,this.wrapEntry_(d)])}return new jspb.Map.ArrayIteratorIterable_(a)};\njspb.Map.prototype.keys=function(){var a=[],b=this.stringKeys_();b.sort();for(var c=0;c<b.length;c++)a.push(this.map_[b[c]].key);return new jspb.Map.ArrayIteratorIterable_(a)};jspb.Map.prototype.values=function(){var a=[],b=this.stringKeys_();b.sort();for(var c=0;c<b.length;c++)a.push(this.wrapEntry_(this.map_[b[c]]));return new jspb.Map.ArrayIteratorIterable_(a)};\njspb.Map.prototype.forEach=function(a,b){var c=this.stringKeys_();c.sort();for(var d=0;d<c.length;d++){var e=this.map_[c[d]];a.call(b,this.wrapEntry_(e),e.key,this)}};jspb.Map.prototype.set=function(a,b){var c=new jspb.Map.Entry_(a);this.valueCtor_?(c.valueWrapper=b,c.value=b.toArray()):c.value=b;this.map_[a.toString()]=c;this.arrClean=!1;return this};jspb.Map.prototype.wrapEntry_=function(a){return this.valueCtor_?(a.valueWrapper||(a.valueWrapper=new this.valueCtor_(a.value)),a.valueWrapper):a.value};\njspb.Map.prototype.get=function(a){if(a=this.map_[a.toString()])return this.wrapEntry_(a)};jspb.Map.prototype.has=function(a){return a.toString()in this.map_};jspb.Map.prototype.serializeBinary=function(a,b,c,d,e){var f=this.stringKeys_();f.sort();for(var g=0;g<f.length;g++){var h=this.map_[f[g]];b.beginSubMessage(a);c.call(b,1,h.key);this.valueCtor_?d.call(b,2,this.wrapEntry_(h),e):d.call(b,2,h.value);b.endSubMessage()}};\njspb.Map.deserializeBinary=function(a,b,c,d,e,f){for(var g=void 0;b.nextField()&&!b.isEndGroup();){var h=b.getFieldNumber();1==h?f=c.call(b):2==h&&(a.valueCtor_?(goog.asserts.assert(e),g=new a.valueCtor_,d.call(b,g,e)):g=d.call(b))}goog.asserts.assert(void 0!=f);goog.asserts.assert(void 0!=g);a.set(f,g)};jspb.Map.prototype.stringKeys_=function(){var a=this.map_,b=[],c;for(c in a)Object.prototype.hasOwnProperty.call(a,c)&&b.push(c);return b};\njspb.Map.Entry_=function(a,b){this.key=a;this.value=b;this.valueWrapper=void 0};goog.array={};goog.NATIVE_ARRAY_PROTOTYPES=goog.TRUSTED_SITE;goog.array.ASSUME_NATIVE_FUNCTIONS=!1;goog.array.peek=function(a){return a[a.length-1]};goog.array.last=goog.array.peek;\ngoog.array.indexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.indexOf)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.indexOf.call(a,b,c)}:function(a,b,c){c=null==c?0:0>c?Math.max(0,a.length+c):c;if(goog.isString(a))return goog.isString(b)&&1==b.length?a.indexOf(b,c):-1;for(;c<a.length;c++)if(c in a&&a[c]===b)return c;return-1};\ngoog.array.lastIndexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.lastIndexOf)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.lastIndexOf.call(a,b,null==c?a.length-1:c)}:function(a,b,c){c=null==c?a.length-1:c;0>c&&(c=Math.max(0,a.length+c));if(goog.isString(a))return goog.isString(b)&&1==b.length?a.lastIndexOf(b,c):-1;for(;0<=c;c--)if(c in a&&a[c]===b)return c;return-1};\ngoog.array.forEach=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.forEach)?function(a,b,c){goog.asserts.assert(null!=a.length);Array.prototype.forEach.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(\"\"):a,f=0;f<d;f++)f in e&&b.call(c,e[f],f,a)};goog.array.forEachRight=function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(\"\"):a,d=d-1;0<=d;--d)d in e&&b.call(c,e[d],d,a)};\ngoog.array.filter=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.filter)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.filter.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=[],f=0,g=goog.isString(a)?a.split(\"\"):a,h=0;h<d;h++)if(h in g){var k=g[h];b.call(c,k,h,a)&&(e[f++]=k)}return e};\ngoog.array.map=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.map)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.map.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=Array(d),f=goog.isString(a)?a.split(\"\"):a,g=0;g<d;g++)g in f&&(e[g]=b.call(c,f[g],g,a));return e};\ngoog.array.reduce=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduce)?function(a,b,c,d){goog.asserts.assert(null!=a.length);d&&(b=goog.bind(b,d));return Array.prototype.reduce.call(a,b,c)}:function(a,b,c,d){var e=c;goog.array.forEach(a,function(c,g){e=b.call(d,e,c,g,a)});return e};\ngoog.array.reduceRight=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduceRight)?function(a,b,c,d){goog.asserts.assert(null!=a.length);goog.asserts.assert(null!=b);d&&(b=goog.bind(b,d));return Array.prototype.reduceRight.call(a,b,c)}:function(a,b,c,d){var e=c;goog.array.forEachRight(a,function(c,g){e=b.call(d,e,c,g,a)});return e};\ngoog.array.some=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.some)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.some.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(\"\"):a,f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return!0;return!1};\ngoog.array.every=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.every)?function(a,b,c){goog.asserts.assert(null!=a.length);return Array.prototype.every.call(a,b,c)}:function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(\"\"):a,f=0;f<d;f++)if(f in e&&!b.call(c,e[f],f,a))return!1;return!0};goog.array.count=function(a,b,c){var d=0;goog.array.forEach(a,function(a,f,g){b.call(c,a,f,g)&&++d},c);return d};\ngoog.array.find=function(a,b,c){b=goog.array.findIndex(a,b,c);return 0>b?null:goog.isString(a)?a.charAt(b):a[b]};goog.array.findIndex=function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(\"\"):a,f=0;f<d;f++)if(f in e&&b.call(c,e[f],f,a))return f;return-1};goog.array.findRight=function(a,b,c){b=goog.array.findIndexRight(a,b,c);return 0>b?null:goog.isString(a)?a.charAt(b):a[b]};\ngoog.array.findIndexRight=function(a,b,c){for(var d=a.length,e=goog.isString(a)?a.split(\"\"):a,d=d-1;0<=d;d--)if(d in e&&b.call(c,e[d],d,a))return d;return-1};goog.array.contains=function(a,b){return 0<=goog.array.indexOf(a,b)};goog.array.isEmpty=function(a){return 0==a.length};goog.array.clear=function(a){if(!goog.isArray(a))for(var b=a.length-1;0<=b;b--)delete a[b];a.length=0};goog.array.insert=function(a,b){goog.array.contains(a,b)||a.push(b)};\ngoog.array.insertAt=function(a,b,c){goog.array.splice(a,c,0,b)};goog.array.insertArrayAt=function(a,b,c){goog.partial(goog.array.splice,a,c,0).apply(null,b)};goog.array.insertBefore=function(a,b,c){var d;2==arguments.length||0>(d=goog.array.indexOf(a,c))?a.push(b):goog.array.insertAt(a,b,d)};goog.array.remove=function(a,b){var c=goog.array.indexOf(a,b),d;(d=0<=c)&&goog.array.removeAt(a,c);return d};\ngoog.array.removeAt=function(a,b){goog.asserts.assert(null!=a.length);return 1==Array.prototype.splice.call(a,b,1).length};goog.array.removeIf=function(a,b,c){b=goog.array.findIndex(a,b,c);return 0<=b?(goog.array.removeAt(a,b),!0):!1};goog.array.removeAllIf=function(a,b,c){var d=0;goog.array.forEachRight(a,function(e,f){b.call(c,e,f,a)&&goog.array.removeAt(a,f)&&d++});return d};goog.array.concat=function(a){return Array.prototype.concat.apply(Array.prototype,arguments)};\ngoog.array.join=function(a){return Array.prototype.concat.apply(Array.prototype,arguments)};goog.array.toArray=function(a){var b=a.length;if(0<b){for(var c=Array(b),d=0;d<b;d++)c[d]=a[d];return c}return[]};goog.array.clone=goog.array.toArray;goog.array.extend=function(a,b){for(var c=1;c<arguments.length;c++){var d=arguments[c];if(goog.isArrayLike(d)){var e=a.length||0,f=d.length||0;a.length=e+f;for(var g=0;g<f;g++)a[e+g]=d[g]}else a.push(d)}};\ngoog.array.splice=function(a,b,c,d){goog.asserts.assert(null!=a.length);return Array.prototype.splice.apply(a,goog.array.slice(arguments,1))};goog.array.slice=function(a,b,c){goog.asserts.assert(null!=a.length);return 2>=arguments.length?Array.prototype.slice.call(a,b):Array.prototype.slice.call(a,b,c)};\ngoog.array.removeDuplicates=function(a,b,c){b=b||a;var d=function(a){return goog.isObject(a)?\"o\"+goog.getUid(a):(typeof a).charAt(0)+a};c=c||d;for(var d={},e=0,f=0;f<a.length;){var g=a[f++],h=c(g);Object.prototype.hasOwnProperty.call(d,h)||(d[h]=!0,b[e++]=g)}b.length=e};goog.array.binarySearch=function(a,b,c){return goog.array.binarySearch_(a,c||goog.array.defaultCompare,!1,b)};goog.array.binarySelect=function(a,b,c){return goog.array.binarySearch_(a,b,!0,void 0,c)};\ngoog.array.binarySearch_=function(a,b,c,d,e){for(var f=0,g=a.length,h;f<g;){var k=f+g>>1,l;l=c?b.call(e,a[k],k,a):b(d,a[k]);0<l?f=k+1:(g=k,h=!l)}return h?f:~f};goog.array.sort=function(a,b){a.sort(b||goog.array.defaultCompare)};goog.array.stableSort=function(a,b){for(var c=0;c<a.length;c++)a[c]={index:c,value:a[c]};var d=b||goog.array.defaultCompare;goog.array.sort(a,function(a,b){return d(a.value,b.value)||a.index-b.index});for(c=0;c<a.length;c++)a[c]=a[c].value};\ngoog.array.sortByKey=function(a,b,c){var d=c||goog.array.defaultCompare;goog.array.sort(a,function(a,c){return d(b(a),b(c))})};goog.array.sortObjectsByKey=function(a,b,c){goog.array.sortByKey(a,function(a){return a[b]},c)};goog.array.isSorted=function(a,b,c){b=b||goog.array.defaultCompare;for(var d=1;d<a.length;d++){var e=b(a[d-1],a[d]);if(0<e||0==e&&c)return!1}return!0};\ngoog.array.equals=function(a,b,c){if(!goog.isArrayLike(a)||!goog.isArrayLike(b)||a.length!=b.length)return!1;var d=a.length;c=c||goog.array.defaultCompareEquality;for(var e=0;e<d;e++)if(!c(a[e],b[e]))return!1;return!0};goog.array.compare3=function(a,b,c){c=c||goog.array.defaultCompare;for(var d=Math.min(a.length,b.length),e=0;e<d;e++){var f=c(a[e],b[e]);if(0!=f)return f}return goog.array.defaultCompare(a.length,b.length)};goog.array.defaultCompare=function(a,b){return a>b?1:a<b?-1:0};\ngoog.array.inverseDefaultCompare=function(a,b){return-goog.array.defaultCompare(a,b)};goog.array.defaultCompareEquality=function(a,b){return a===b};goog.array.binaryInsert=function(a,b,c){c=goog.array.binarySearch(a,b,c);return 0>c?(goog.array.insertAt(a,b,-(c+1)),!0):!1};goog.array.binaryRemove=function(a,b,c){b=goog.array.binarySearch(a,b,c);return 0<=b?goog.array.removeAt(a,b):!1};\ngoog.array.bucket=function(a,b,c){for(var d={},e=0;e<a.length;e++){var f=a[e],g=b.call(c,f,e,a);goog.isDef(g)&&(d[g]||(d[g]=[])).push(f)}return d};goog.array.toObject=function(a,b,c){var d={};goog.array.forEach(a,function(e,f){d[b.call(c,e,f,a)]=e});return d};goog.array.range=function(a,b,c){var d=[],e=0,f=a;c=c||1;void 0!==b&&(e=a,f=b);if(0>c*(f-e))return[];if(0<c)for(a=e;a<f;a+=c)d.push(a);else for(a=e;a>f;a+=c)d.push(a);return d};\ngoog.array.repeat=function(a,b){for(var c=[],d=0;d<b;d++)c[d]=a;return c};goog.array.flatten=function(a){for(var b=[],c=0;c<arguments.length;c++){var d=arguments[c];if(goog.isArray(d))for(var e=0;e<d.length;e+=8192)for(var f=goog.array.slice(d,e,e+8192),f=goog.array.flatten.apply(null,f),g=0;g<f.length;g++)b.push(f[g]);else b.push(d)}return b};\ngoog.array.rotate=function(a,b){goog.asserts.assert(null!=a.length);a.length&&(b%=a.length,0<b?Array.prototype.unshift.apply(a,a.splice(-b,b)):0>b&&Array.prototype.push.apply(a,a.splice(0,-b)));return a};goog.array.moveItem=function(a,b,c){goog.asserts.assert(0<=b&&b<a.length);goog.asserts.assert(0<=c&&c<a.length);b=Array.prototype.splice.call(a,b,1);Array.prototype.splice.call(a,c,0,b[0])};\ngoog.array.zip=function(a){if(!arguments.length)return[];for(var b=[],c=arguments[0].length,d=1;d<arguments.length;d++)arguments[d].length<c&&(c=arguments[d].length);for(d=0;d<c;d++){for(var e=[],f=0;f<arguments.length;f++)e.push(arguments[f][d]);b.push(e)}return b};goog.array.shuffle=function(a,b){for(var c=b||Math.random,d=a.length-1;0<d;d--){var e=Math.floor(c()*(d+1)),f=a[d];a[d]=a[e];a[e]=f}};goog.array.copyByIndex=function(a,b){var c=[];goog.array.forEach(b,function(b){c.push(a[b])});return c};goog.crypt={};goog.crypt.stringToByteArray=function(a){for(var b=[],c=0,d=0;d<a.length;d++){for(var e=a.charCodeAt(d);255<e;)b[c++]=e&255,e>>=8;b[c++]=e}return b};goog.crypt.byteArrayToString=function(a){if(8192>=a.length)return String.fromCharCode.apply(null,a);for(var b=\"\",c=0;c<a.length;c+=8192)var d=goog.array.slice(a,c,c+8192),b=b+String.fromCharCode.apply(null,d);return b};goog.crypt.byteArrayToHex=function(a){return goog.array.map(a,function(a){a=a.toString(16);return 1<a.length?a:\"0\"+a}).join(\"\")};\ngoog.crypt.hexToByteArray=function(a){goog.asserts.assert(0==a.length%2,\"Key string length must be multiple of 2\");for(var b=[],c=0;c<a.length;c+=2)b.push(parseInt(a.substring(c,c+2),16));return b};\ngoog.crypt.stringToUtf8ByteArray=function(a){for(var b=[],c=0,d=0;d<a.length;d++){var e=a.charCodeAt(d);128>e?b[c++]=e:(2048>e?b[c++]=e>>6|192:(55296==(e&64512)&&d+1<a.length&&56320==(a.charCodeAt(d+1)&64512)?(e=65536+((e&1023)<<10)+(a.charCodeAt(++d)&1023),b[c++]=e>>18|240,b[c++]=e>>12&63|128):b[c++]=e>>12|224,b[c++]=e>>6&63|128),b[c++]=e&63|128)}return b};\ngoog.crypt.utf8ByteArrayToString=function(a){for(var b=[],c=0,d=0;c<a.length;){var e=a[c++];if(128>e)b[d++]=String.fromCharCode(e);else if(191<e&&224>e){var f=a[c++];b[d++]=String.fromCharCode((e&31)<<6|f&63)}else if(239<e&&365>e){var f=a[c++],g=a[c++],h=a[c++],e=((e&7)<<18|(f&63)<<12|(g&63)<<6|h&63)-65536;b[d++]=String.fromCharCode(55296+(e>>10));b[d++]=String.fromCharCode(56320+(e&1023))}else f=a[c++],g=a[c++],b[d++]=String.fromCharCode((e&15)<<12|(f&63)<<6|g&63)}return b.join(\"\")};\ngoog.crypt.xorByteArray=function(a,b){goog.asserts.assert(a.length==b.length,\"XOR array lengths must match\");for(var c=[],d=0;d<a.length;d++)c.push(a[d]^b[d]);return c};goog.labs={};goog.labs.userAgent={};goog.labs.userAgent.util={};goog.labs.userAgent.util.getNativeUserAgentString_=function(){var a=goog.labs.userAgent.util.getNavigator_();return a&&(a=a.userAgent)?a:\"\"};goog.labs.userAgent.util.getNavigator_=function(){return goog.global.navigator};goog.labs.userAgent.util.userAgent_=goog.labs.userAgent.util.getNativeUserAgentString_();goog.labs.userAgent.util.setUserAgent=function(a){goog.labs.userAgent.util.userAgent_=a||goog.labs.userAgent.util.getNativeUserAgentString_()};\ngoog.labs.userAgent.util.getUserAgent=function(){return goog.labs.userAgent.util.userAgent_};goog.labs.userAgent.util.matchUserAgent=function(a){var b=goog.labs.userAgent.util.getUserAgent();return goog.string.contains(b,a)};goog.labs.userAgent.util.matchUserAgentIgnoreCase=function(a){var b=goog.labs.userAgent.util.getUserAgent();return goog.string.caseInsensitiveContains(b,a)};\ngoog.labs.userAgent.util.extractVersionTuples=function(a){for(var b=RegExp(\"(\\\\w[\\\\w ]+)/([^\\\\s]+)\\\\s*(?:\\\\((.*?)\\\\))?\",\"g\"),c=[],d;d=b.exec(a);)c.push([d[1],d[2],d[3]||void 0]);return c};goog.labs.userAgent.platform={};goog.labs.userAgent.platform.isAndroid=function(){return goog.labs.userAgent.util.matchUserAgent(\"Android\")};goog.labs.userAgent.platform.isIpod=function(){return goog.labs.userAgent.util.matchUserAgent(\"iPod\")};goog.labs.userAgent.platform.isIphone=function(){return goog.labs.userAgent.util.matchUserAgent(\"iPhone\")&&!goog.labs.userAgent.util.matchUserAgent(\"iPod\")&&!goog.labs.userAgent.util.matchUserAgent(\"iPad\")};goog.labs.userAgent.platform.isIpad=function(){return goog.labs.userAgent.util.matchUserAgent(\"iPad\")};\ngoog.labs.userAgent.platform.isIos=function(){return goog.labs.userAgent.platform.isIphone()||goog.labs.userAgent.platform.isIpad()||goog.labs.userAgent.platform.isIpod()};goog.labs.userAgent.platform.isMacintosh=function(){return goog.labs.userAgent.util.matchUserAgent(\"Macintosh\")};goog.labs.userAgent.platform.isLinux=function(){return goog.labs.userAgent.util.matchUserAgent(\"Linux\")};goog.labs.userAgent.platform.isWindows=function(){return goog.labs.userAgent.util.matchUserAgent(\"Windows\")};\ngoog.labs.userAgent.platform.isChromeOS=function(){return goog.labs.userAgent.util.matchUserAgent(\"CrOS\")};\ngoog.labs.userAgent.platform.getVersion=function(){var a=goog.labs.userAgent.util.getUserAgent(),b=\"\";goog.labs.userAgent.platform.isWindows()?(b=/Windows (?:NT|Phone) ([0-9.]+)/,b=(a=b.exec(a))?a[1]:\"0.0\"):goog.labs.userAgent.platform.isIos()?(b=/(?:iPhone|iPod|iPad|CPU)\\s+OS\\s+(\\S+)/,b=(a=b.exec(a))&&a[1].replace(/_/g,\".\")):goog.labs.userAgent.platform.isMacintosh()?(b=/Mac OS X ([0-9_.]+)/,b=(a=b.exec(a))?a[1].replace(/_/g,\".\"):\"10\"):goog.labs.userAgent.platform.isAndroid()?(b=/Android\\s+([^\\);]+)(\\)|;)/,\nb=(a=b.exec(a))&&a[1]):goog.labs.userAgent.platform.isChromeOS()&&(b=/(?:CrOS\\s+(?:i686|x86_64)\\s+([0-9.]+))/,b=(a=b.exec(a))&&a[1]);return b||\"\"};goog.labs.userAgent.platform.isVersionOrHigher=function(a){return 0<=goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(),a)};goog.object={};goog.object.forEach=function(a,b,c){for(var d in a)b.call(c,a[d],d,a)};goog.object.filter=function(a,b,c){var d={},e;for(e in a)b.call(c,a[e],e,a)&&(d[e]=a[e]);return d};goog.object.map=function(a,b,c){var d={},e;for(e in a)d[e]=b.call(c,a[e],e,a);return d};goog.object.some=function(a,b,c){for(var d in a)if(b.call(c,a[d],d,a))return!0;return!1};goog.object.every=function(a,b,c){for(var d in a)if(!b.call(c,a[d],d,a))return!1;return!0};\ngoog.object.getCount=function(a){var b=0,c;for(c in a)b++;return b};goog.object.getAnyKey=function(a){for(var b in a)return b};goog.object.getAnyValue=function(a){for(var b in a)return a[b]};goog.object.contains=function(a,b){return goog.object.containsValue(a,b)};goog.object.getValues=function(a){var b=[],c=0,d;for(d in a)b[c++]=a[d];return b};goog.object.getKeys=function(a){var b=[],c=0,d;for(d in a)b[c++]=d;return b};\ngoog.object.getValueByKeys=function(a,b){for(var c=goog.isArrayLike(b),d=c?b:arguments,c=c?0:1;c<d.length&&(a=a[d[c]],goog.isDef(a));c++);return a};goog.object.containsKey=function(a,b){return null!==a&&b in a};goog.object.containsValue=function(a,b){for(var c in a)if(a[c]==b)return!0;return!1};goog.object.findKey=function(a,b,c){for(var d in a)if(b.call(c,a[d],d,a))return d};goog.object.findValue=function(a,b,c){return(b=goog.object.findKey(a,b,c))&&a[b]};\ngoog.object.isEmpty=function(a){for(var b in a)return!1;return!0};goog.object.clear=function(a){for(var b in a)delete a[b]};goog.object.remove=function(a,b){var c;(c=b in a)&&delete a[b];return c};goog.object.add=function(a,b,c){if(null!==a&&b in a)throw Error('The object already contains the key \"'+b+'\"');goog.object.set(a,b,c)};goog.object.get=function(a,b,c){return null!==a&&b in a?a[b]:c};goog.object.set=function(a,b,c){a[b]=c};\ngoog.object.setIfUndefined=function(a,b,c){return b in a?a[b]:a[b]=c};goog.object.setWithReturnValueIfNotSet=function(a,b,c){if(b in a)return a[b];c=c();return a[b]=c};goog.object.equals=function(a,b){for(var c in a)if(!(c in b)||a[c]!==b[c])return!1;for(c in b)if(!(c in a))return!1;return!0};goog.object.clone=function(a){var b={},c;for(c in a)b[c]=a[c];return b};\ngoog.object.unsafeClone=function(a){var b=goog.typeOf(a);if(\"object\"==b||\"array\"==b){if(goog.isFunction(a.clone))return a.clone();var b=\"array\"==b?[]:{},c;for(c in a)b[c]=goog.object.unsafeClone(a[c]);return b}return a};goog.object.transpose=function(a){var b={},c;for(c in a)b[a[c]]=c;return b};goog.object.PROTOTYPE_FIELDS_=\"constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf\".split(\" \");\ngoog.object.extend=function(a,b){for(var c,d,e=1;e<arguments.length;e++){d=arguments[e];for(c in d)a[c]=d[c];for(var f=0;f<goog.object.PROTOTYPE_FIELDS_.length;f++)c=goog.object.PROTOTYPE_FIELDS_[f],Object.prototype.hasOwnProperty.call(d,c)&&(a[c]=d[c])}};\ngoog.object.create=function(a){var b=arguments.length;if(1==b&&goog.isArray(arguments[0]))return goog.object.create.apply(null,arguments[0]);if(b%2)throw Error(\"Uneven number of arguments\");for(var c={},d=0;d<b;d+=2)c[arguments[d]]=arguments[d+1];return c};goog.object.createSet=function(a){var b=arguments.length;if(1==b&&goog.isArray(arguments[0]))return goog.object.createSet.apply(null,arguments[0]);for(var c={},d=0;d<b;d++)c[arguments[d]]=!0;return c};\ngoog.object.createImmutableView=function(a){var b=a;Object.isFrozen&&!Object.isFrozen(a)&&(b=Object.create(a),Object.freeze(b));return b};goog.object.isImmutableView=function(a){return!!Object.isFrozen&&Object.isFrozen(a)};goog.labs.userAgent.browser={};goog.labs.userAgent.browser.matchOpera_=function(){return goog.labs.userAgent.util.matchUserAgent(\"Opera\")||goog.labs.userAgent.util.matchUserAgent(\"OPR\")};goog.labs.userAgent.browser.matchIE_=function(){return goog.labs.userAgent.util.matchUserAgent(\"Trident\")||goog.labs.userAgent.util.matchUserAgent(\"MSIE\")};goog.labs.userAgent.browser.matchEdge_=function(){return goog.labs.userAgent.util.matchUserAgent(\"Edge\")};goog.labs.userAgent.browser.matchFirefox_=function(){return goog.labs.userAgent.util.matchUserAgent(\"Firefox\")};\ngoog.labs.userAgent.browser.matchSafari_=function(){return goog.labs.userAgent.util.matchUserAgent(\"Safari\")&&!(goog.labs.userAgent.browser.matchChrome_()||goog.labs.userAgent.browser.matchCoast_()||goog.labs.userAgent.browser.matchOpera_()||goog.labs.userAgent.browser.matchEdge_()||goog.labs.userAgent.browser.isSilk()||goog.labs.userAgent.util.matchUserAgent(\"Android\"))};goog.labs.userAgent.browser.matchCoast_=function(){return goog.labs.userAgent.util.matchUserAgent(\"Coast\")};\ngoog.labs.userAgent.browser.matchIosWebview_=function(){return(goog.labs.userAgent.util.matchUserAgent(\"iPad\")||goog.labs.userAgent.util.matchUserAgent(\"iPhone\"))&&!goog.labs.userAgent.browser.matchSafari_()&&!goog.labs.userAgent.browser.matchChrome_()&&!goog.labs.userAgent.browser.matchCoast_()&&goog.labs.userAgent.util.matchUserAgent(\"AppleWebKit\")};\ngoog.labs.userAgent.browser.matchChrome_=function(){return(goog.labs.userAgent.util.matchUserAgent(\"Chrome\")||goog.labs.userAgent.util.matchUserAgent(\"CriOS\"))&&!goog.labs.userAgent.browser.matchOpera_()&&!goog.labs.userAgent.browser.matchEdge_()};goog.labs.userAgent.browser.matchAndroidBrowser_=function(){return goog.labs.userAgent.util.matchUserAgent(\"Android\")&&!(goog.labs.userAgent.browser.isChrome()||goog.labs.userAgent.browser.isFirefox()||goog.labs.userAgent.browser.isOpera()||goog.labs.userAgent.browser.isSilk())};\ngoog.labs.userAgent.browser.isOpera=goog.labs.userAgent.browser.matchOpera_;goog.labs.userAgent.browser.isIE=goog.labs.userAgent.browser.matchIE_;goog.labs.userAgent.browser.isEdge=goog.labs.userAgent.browser.matchEdge_;goog.labs.userAgent.browser.isFirefox=goog.labs.userAgent.browser.matchFirefox_;goog.labs.userAgent.browser.isSafari=goog.labs.userAgent.browser.matchSafari_;goog.labs.userAgent.browser.isCoast=goog.labs.userAgent.browser.matchCoast_;goog.labs.userAgent.browser.isIosWebview=goog.labs.userAgent.browser.matchIosWebview_;\ngoog.labs.userAgent.browser.isChrome=goog.labs.userAgent.browser.matchChrome_;goog.labs.userAgent.browser.isAndroidBrowser=goog.labs.userAgent.browser.matchAndroidBrowser_;goog.labs.userAgent.browser.isSilk=function(){return goog.labs.userAgent.util.matchUserAgent(\"Silk\")};\ngoog.labs.userAgent.browser.getVersion=function(){function a(a){a=goog.array.find(a,d);return c[a]||\"\"}var b=goog.labs.userAgent.util.getUserAgent();if(goog.labs.userAgent.browser.isIE())return goog.labs.userAgent.browser.getIEVersion_(b);var b=goog.labs.userAgent.util.extractVersionTuples(b),c={};goog.array.forEach(b,function(a){c[a[0]]=a[1]});var d=goog.partial(goog.object.containsKey,c);return goog.labs.userAgent.browser.isOpera()?a([\"Version\",\"Opera\",\"OPR\"]):goog.labs.userAgent.browser.isEdge()?\na([\"Edge\"]):goog.labs.userAgent.browser.isChrome()?a([\"Chrome\",\"CriOS\"]):(b=b[2])&&b[1]||\"\"};goog.labs.userAgent.browser.isVersionOrHigher=function(a){return 0<=goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(),a)};\ngoog.labs.userAgent.browser.getIEVersion_=function(a){var b=/rv: *([\\d\\.]*)/.exec(a);if(b&&b[1])return b[1];var b=\"\",c=/MSIE +([\\d\\.]+)/.exec(a);if(c&&c[1])if(a=/Trident\\/(\\d.\\d)/.exec(a),\"7.0\"==c[1])if(a&&a[1])switch(a[1]){case \"4.0\":b=\"8.0\";break;case \"5.0\":b=\"9.0\";break;case \"6.0\":b=\"10.0\";break;case \"7.0\":b=\"11.0\"}else b=\"7.0\";else b=c[1];return b};goog.labs.userAgent.engine={};goog.labs.userAgent.engine.isPresto=function(){return goog.labs.userAgent.util.matchUserAgent(\"Presto\")};goog.labs.userAgent.engine.isTrident=function(){return goog.labs.userAgent.util.matchUserAgent(\"Trident\")||goog.labs.userAgent.util.matchUserAgent(\"MSIE\")};goog.labs.userAgent.engine.isEdge=function(){return goog.labs.userAgent.util.matchUserAgent(\"Edge\")};\ngoog.labs.userAgent.engine.isWebKit=function(){return goog.labs.userAgent.util.matchUserAgentIgnoreCase(\"WebKit\")&&!goog.labs.userAgent.engine.isEdge()};goog.labs.userAgent.engine.isGecko=function(){return goog.labs.userAgent.util.matchUserAgent(\"Gecko\")&&!goog.labs.userAgent.engine.isWebKit()&&!goog.labs.userAgent.engine.isTrident()&&!goog.labs.userAgent.engine.isEdge()};\ngoog.labs.userAgent.engine.getVersion=function(){var a=goog.labs.userAgent.util.getUserAgent();if(a){var a=goog.labs.userAgent.util.extractVersionTuples(a),b=goog.labs.userAgent.engine.getEngineTuple_(a);if(b)return\"Gecko\"==b[0]?goog.labs.userAgent.engine.getVersionForKey_(a,\"Firefox\"):b[1];var a=a[0],c;if(a&&(c=a[2])&&(c=/Trident\\/([^\\s;]+)/.exec(c)))return c[1]}return\"\"};\ngoog.labs.userAgent.engine.getEngineTuple_=function(a){if(!goog.labs.userAgent.engine.isEdge())return a[1];for(var b=0;b<a.length;b++){var c=a[b];if(\"Edge\"==c[0])return c}};goog.labs.userAgent.engine.isVersionOrHigher=function(a){return 0<=goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(),a)};goog.labs.userAgent.engine.getVersionForKey_=function(a,b){var c=goog.array.find(a,function(a){return b==a[0]});return c&&c[1]||\"\"};goog.userAgent={};goog.userAgent.ASSUME_IE=!1;goog.userAgent.ASSUME_EDGE=!1;goog.userAgent.ASSUME_GECKO=!1;goog.userAgent.ASSUME_WEBKIT=!1;goog.userAgent.ASSUME_MOBILE_WEBKIT=!1;goog.userAgent.ASSUME_OPERA=!1;goog.userAgent.ASSUME_ANY_VERSION=!1;goog.userAgent.BROWSER_KNOWN_=goog.userAgent.ASSUME_IE||goog.userAgent.ASSUME_EDGE||goog.userAgent.ASSUME_GECKO||goog.userAgent.ASSUME_MOBILE_WEBKIT||goog.userAgent.ASSUME_WEBKIT||goog.userAgent.ASSUME_OPERA;goog.userAgent.getUserAgentString=function(){return goog.labs.userAgent.util.getUserAgent()};\ngoog.userAgent.getNavigator=function(){return goog.global.navigator||null};goog.userAgent.OPERA=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_OPERA:goog.labs.userAgent.browser.isOpera();goog.userAgent.IE=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_IE:goog.labs.userAgent.browser.isIE();goog.userAgent.EDGE=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_EDGE:goog.labs.userAgent.engine.isEdge();goog.userAgent.EDGE_OR_IE=goog.userAgent.EDGE||goog.userAgent.IE;\ngoog.userAgent.GECKO=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_GECKO:goog.labs.userAgent.engine.isGecko();goog.userAgent.WEBKIT=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_WEBKIT||goog.userAgent.ASSUME_MOBILE_WEBKIT:goog.labs.userAgent.engine.isWebKit();goog.userAgent.isMobile_=function(){return goog.userAgent.WEBKIT&&goog.labs.userAgent.util.matchUserAgent(\"Mobile\")};goog.userAgent.MOBILE=goog.userAgent.ASSUME_MOBILE_WEBKIT||goog.userAgent.isMobile_();goog.userAgent.SAFARI=goog.userAgent.WEBKIT;\ngoog.userAgent.determinePlatform_=function(){var a=goog.userAgent.getNavigator();return a&&a.platform||\"\"};goog.userAgent.PLATFORM=goog.userAgent.determinePlatform_();goog.userAgent.ASSUME_MAC=!1;goog.userAgent.ASSUME_WINDOWS=!1;goog.userAgent.ASSUME_LINUX=!1;goog.userAgent.ASSUME_X11=!1;goog.userAgent.ASSUME_ANDROID=!1;goog.userAgent.ASSUME_IPHONE=!1;goog.userAgent.ASSUME_IPAD=!1;\ngoog.userAgent.PLATFORM_KNOWN_=goog.userAgent.ASSUME_MAC||goog.userAgent.ASSUME_WINDOWS||goog.userAgent.ASSUME_LINUX||goog.userAgent.ASSUME_X11||goog.userAgent.ASSUME_ANDROID||goog.userAgent.ASSUME_IPHONE||goog.userAgent.ASSUME_IPAD;goog.userAgent.MAC=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_MAC:goog.labs.userAgent.platform.isMacintosh();goog.userAgent.WINDOWS=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_WINDOWS:goog.labs.userAgent.platform.isWindows();\ngoog.userAgent.isLegacyLinux_=function(){return goog.labs.userAgent.platform.isLinux()||goog.labs.userAgent.platform.isChromeOS()};goog.userAgent.LINUX=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_LINUX:goog.userAgent.isLegacyLinux_();goog.userAgent.isX11_=function(){var a=goog.userAgent.getNavigator();return!!a&&goog.string.contains(a.appVersion||\"\",\"X11\")};goog.userAgent.X11=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_X11:goog.userAgent.isX11_();\ngoog.userAgent.ANDROID=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_ANDROID:goog.labs.userAgent.platform.isAndroid();goog.userAgent.IPHONE=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPHONE:goog.labs.userAgent.platform.isIphone();goog.userAgent.IPAD=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPAD:goog.labs.userAgent.platform.isIpad();goog.userAgent.operaVersion_=function(){var a=goog.global.opera.version;try{return a()}catch(b){return a}};\ngoog.userAgent.determineVersion_=function(){if(goog.userAgent.OPERA&&goog.global.opera)return goog.userAgent.operaVersion_();var a=\"\",b=goog.userAgent.getVersionRegexResult_();b&&(a=b?b[1]:\"\");return goog.userAgent.IE&&(b=goog.userAgent.getDocumentMode_(),b>parseFloat(a))?String(b):a};\ngoog.userAgent.getVersionRegexResult_=function(){var a=goog.userAgent.getUserAgentString();if(goog.userAgent.GECKO)return/rv\\:([^\\);]+)(\\)|;)/.exec(a);if(goog.userAgent.EDGE)return/Edge\\/([\\d\\.]+)/.exec(a);if(goog.userAgent.IE)return/\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(a);if(goog.userAgent.WEBKIT)return/WebKit\\/(\\S+)/.exec(a)};goog.userAgent.getDocumentMode_=function(){var a=goog.global.document;return a?a.documentMode:void 0};goog.userAgent.VERSION=goog.userAgent.determineVersion_();\ngoog.userAgent.compare=function(a,b){return goog.string.compareVersions(a,b)};goog.userAgent.isVersionOrHigherCache_={};goog.userAgent.isVersionOrHigher=function(a){return goog.userAgent.ASSUME_ANY_VERSION||goog.userAgent.isVersionOrHigherCache_[a]||(goog.userAgent.isVersionOrHigherCache_[a]=0<=goog.string.compareVersions(goog.userAgent.VERSION,a))};goog.userAgent.isVersion=goog.userAgent.isVersionOrHigher;\ngoog.userAgent.isDocumentModeOrHigher=function(a){return Number(goog.userAgent.DOCUMENT_MODE)>=a};goog.userAgent.isDocumentMode=goog.userAgent.isDocumentModeOrHigher;goog.userAgent.DOCUMENT_MODE=function(){var a=goog.global.document,b=goog.userAgent.getDocumentMode_();return a&&goog.userAgent.IE?b||(\"CSS1Compat\"==a.compatMode?parseInt(goog.userAgent.VERSION,10):5):void 0}();goog.userAgent.product={};goog.userAgent.product.ASSUME_FIREFOX=!1;goog.userAgent.product.ASSUME_IPHONE=!1;goog.userAgent.product.ASSUME_IPAD=!1;goog.userAgent.product.ASSUME_ANDROID=!1;goog.userAgent.product.ASSUME_CHROME=!1;goog.userAgent.product.ASSUME_SAFARI=!1;\ngoog.userAgent.product.PRODUCT_KNOWN_=goog.userAgent.ASSUME_IE||goog.userAgent.ASSUME_EDGE||goog.userAgent.ASSUME_OPERA||goog.userAgent.product.ASSUME_FIREFOX||goog.userAgent.product.ASSUME_IPHONE||goog.userAgent.product.ASSUME_IPAD||goog.userAgent.product.ASSUME_ANDROID||goog.userAgent.product.ASSUME_CHROME||goog.userAgent.product.ASSUME_SAFARI;goog.userAgent.product.OPERA=goog.userAgent.OPERA;goog.userAgent.product.IE=goog.userAgent.IE;goog.userAgent.product.EDGE=goog.userAgent.EDGE;\ngoog.userAgent.product.FIREFOX=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_FIREFOX:goog.labs.userAgent.browser.isFirefox();goog.userAgent.product.isIphoneOrIpod_=function(){return goog.labs.userAgent.platform.isIphone()||goog.labs.userAgent.platform.isIpod()};goog.userAgent.product.IPHONE=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_IPHONE:goog.userAgent.product.isIphoneOrIpod_();\ngoog.userAgent.product.IPAD=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_IPAD:goog.labs.userAgent.platform.isIpad();goog.userAgent.product.ANDROID=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_ANDROID:goog.labs.userAgent.browser.isAndroidBrowser();goog.userAgent.product.CHROME=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_CHROME:goog.labs.userAgent.browser.isChrome();\ngoog.userAgent.product.isSafariDesktop_=function(){return goog.labs.userAgent.browser.isSafari()&&!goog.labs.userAgent.platform.isIos()};goog.userAgent.product.SAFARI=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_SAFARI:goog.userAgent.product.isSafariDesktop_();goog.crypt.base64={};goog.crypt.base64.byteToCharMap_=null;goog.crypt.base64.charToByteMap_=null;goog.crypt.base64.byteToCharMapWebSafe_=null;goog.crypt.base64.ENCODED_VALS_BASE=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";goog.crypt.base64.ENCODED_VALS=goog.crypt.base64.ENCODED_VALS_BASE+\"+/=\";goog.crypt.base64.ENCODED_VALS_WEBSAFE=goog.crypt.base64.ENCODED_VALS_BASE+\"-_.\";\ngoog.crypt.base64.ASSUME_NATIVE_SUPPORT_=goog.userAgent.GECKO||goog.userAgent.WEBKIT&&!goog.userAgent.product.SAFARI||goog.userAgent.OPERA;goog.crypt.base64.HAS_NATIVE_ENCODE_=goog.crypt.base64.ASSUME_NATIVE_SUPPORT_||\"function\"==typeof goog.global.btoa;goog.crypt.base64.HAS_NATIVE_DECODE_=goog.crypt.base64.ASSUME_NATIVE_SUPPORT_||!goog.userAgent.product.SAFARI&&!goog.userAgent.IE&&\"function\"==typeof goog.global.atob;\ngoog.crypt.base64.encodeByteArray=function(a,b){goog.asserts.assert(goog.isArrayLike(a),\"encodeByteArray takes an array as a parameter\");goog.crypt.base64.init_();for(var c=b?goog.crypt.base64.byteToCharMapWebSafe_:goog.crypt.base64.byteToCharMap_,d=[],e=0;e<a.length;e+=3){var f=a[e],g=e+1<a.length,h=g?a[e+1]:0,k=e+2<a.length,l=k?a[e+2]:0,p=f>>2,f=(f&3)<<4|h>>4,h=(h&15)<<2|l>>6,l=l&63;k||(l=64,g||(h=64));d.push(c[p],c[f],c[h],c[l])}return d.join(\"\")};\ngoog.crypt.base64.encodeString=function(a,b){return goog.crypt.base64.HAS_NATIVE_ENCODE_&&!b?goog.global.btoa(a):goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(a),b)};goog.crypt.base64.decodeString=function(a,b){if(goog.crypt.base64.HAS_NATIVE_DECODE_&&!b)return goog.global.atob(a);var c=\"\";goog.crypt.base64.decodeStringInternal_(a,function(a){c+=String.fromCharCode(a)});return c};\ngoog.crypt.base64.decodeStringToByteArray=function(a,b){var c=[];goog.crypt.base64.decodeStringInternal_(a,function(a){c.push(a)});return c};goog.crypt.base64.decodeStringToUint8Array=function(a){goog.asserts.assert(!goog.userAgent.IE||goog.userAgent.isVersionOrHigher(\"10\"),\"Browser does not support typed arrays\");var b=new Uint8Array(Math.ceil(3*a.length/4)),c=0;goog.crypt.base64.decodeStringInternal_(a,function(a){b[c++]=a});return b.subarray(0,c)};\ngoog.crypt.base64.decodeStringInternal_=function(a,b){function c(b){for(;d<a.length;){var c=a.charAt(d++),e=goog.crypt.base64.charToByteMap_[c];if(null!=e)return e;if(!goog.string.isEmptyOrWhitespace(c))throw Error(\"Unknown base64 encoding at char: \"+c);}return b}goog.crypt.base64.init_();for(var d=0;;){var e=c(-1),f=c(0),g=c(64),h=c(64);if(64===h&&-1===e)break;b(e<<2|f>>4);64!=g&&(b(f<<4&240|g>>2),64!=h&&b(g<<6&192|h))}};\ngoog.crypt.base64.init_=function(){if(!goog.crypt.base64.byteToCharMap_){goog.crypt.base64.byteToCharMap_={};goog.crypt.base64.charToByteMap_={};goog.crypt.base64.byteToCharMapWebSafe_={};for(var a=0;a<goog.crypt.base64.ENCODED_VALS.length;a++)goog.crypt.base64.byteToCharMap_[a]=goog.crypt.base64.ENCODED_VALS.charAt(a),goog.crypt.base64.charToByteMap_[goog.crypt.base64.byteToCharMap_[a]]=a,goog.crypt.base64.byteToCharMapWebSafe_[a]=goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(a),a>=goog.crypt.base64.ENCODED_VALS_BASE.length&&\n(goog.crypt.base64.charToByteMap_[goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(a)]=a)}};jspb.ExtensionFieldInfo=function(a,b,c,d,e){this.fieldIndex=a;this.fieldName=b;this.ctor=c;this.toObjectFn=d;this.isRepeated=e};jspb.ExtensionFieldBinaryInfo=function(a,b,c,d,e,f){this.fieldInfo=a;this.binaryReaderFn=b;this.binaryWriterFn=c;this.binaryMessageSerializeFn=d;this.binaryMessageDeserializeFn=e;this.isPacked=f};jspb.ExtensionFieldInfo.prototype.isMessageType=function(){return!!this.ctor};jspb.Message=function(){};jspb.Message.GENERATE_TO_OBJECT=!0;jspb.Message.GENERATE_FROM_OBJECT=!goog.DISALLOW_TEST_ONLY_CODE;\njspb.Message.GENERATE_TO_STRING=!0;jspb.Message.ASSUME_LOCAL_ARRAYS=!1;jspb.Message.SERIALIZE_EMPTY_TRAILING_FIELDS=!0;jspb.Message.SUPPORTS_UINT8ARRAY_=\"function\"==typeof Uint8Array;jspb.Message.prototype.getJsPbMessageId=function(){return this.messageId_};jspb.Message.getIndex_=function(a,b){return b+a.arrayIndexOffset_};jspb.Message.getFieldNumber_=function(a,b){return b-a.arrayIndexOffset_};\njspb.Message.initialize=function(a,b,c,d,e,f){a.wrappers_=null;b||(b=c?[c]:[]);a.messageId_=c?String(c):void 0;a.arrayIndexOffset_=0===c?-1:0;a.array=b;jspb.Message.initPivotAndExtensionObject_(a,d);a.convertedFloatingPointFields_={};jspb.Message.SERIALIZE_EMPTY_TRAILING_FIELDS||(a.repeatedFields=e);if(e)for(b=0;b<e.length;b++)c=e[b],c<a.pivot_?(c=jspb.Message.getIndex_(a,c),a.array[c]=a.array[c]||jspb.Message.EMPTY_LIST_SENTINEL_):(jspb.Message.maybeInitEmptyExtensionObject_(a),a.extensionObject_[c]=\na.extensionObject_[c]||jspb.Message.EMPTY_LIST_SENTINEL_);if(f&&f.length)for(b=0;b<f.length;b++)jspb.Message.computeOneofCase(a,f[b])};jspb.Message.EMPTY_LIST_SENTINEL_=goog.DEBUG&&Object.freeze?Object.freeze([]):[];jspb.Message.isArray_=function(a){return jspb.Message.ASSUME_LOCAL_ARRAYS?a instanceof Array:goog.isArray(a)};\njspb.Message.initPivotAndExtensionObject_=function(a,b){if(a.array.length){var c=a.array.length-1,d=a.array[c];if(d&&\"object\"==typeof d&&!jspb.Message.isArray_(d)&&!(jspb.Message.SUPPORTS_UINT8ARRAY_&&d instanceof Uint8Array)){a.pivot_=jspb.Message.getFieldNumber_(a,c);a.extensionObject_=d;return}}-1<b?(a.pivot_=b,a.extensionObject_=null):a.pivot_=Number.MAX_VALUE};\njspb.Message.maybeInitEmptyExtensionObject_=function(a){var b=jspb.Message.getIndex_(a,a.pivot_);a.array[b]||(a.extensionObject_=a.array[b]={})};jspb.Message.toObjectList=function(a,b,c){for(var d=[],e=0;e<a.length;e++)d[e]=b.call(a[e],c,a[e]);return d};\njspb.Message.toObjectExtension=function(a,b,c,d,e){for(var f in c){var g=c[f],h=d.call(a,g);if(null!=h){for(var k in g.fieldName)if(g.fieldName.hasOwnProperty(k))break;b[k]=g.toObjectFn?g.isRepeated?jspb.Message.toObjectList(h,g.toObjectFn,e):g.toObjectFn(e,h):h}}};\njspb.Message.serializeBinaryExtensions=function(a,b,c,d){for(var e in c){var f=c[e],g=f.fieldInfo;if(!f.binaryWriterFn)throw Error(\"Message extension present that was generated without binary serialization support\");var h=d.call(a,g);if(null!=h)if(g.isMessageType())if(f.binaryMessageSerializeFn)f.binaryWriterFn.call(b,g.fieldIndex,h,f.binaryMessageSerializeFn);else throw Error(\"Message extension present holding submessage without binary support enabled, and message is being serialized to binary format\");\nelse f.binaryWriterFn.call(b,g.fieldIndex,h)}};jspb.Message.readBinaryExtension=function(a,b,c,d,e){var f=c[b.getFieldNumber()];if(f){c=f.fieldInfo;if(!f.binaryReaderFn)throw Error(\"Deserializing extension whose generated code does not support binary format\");var g;c.isMessageType()?(g=new c.ctor,f.binaryReaderFn.call(b,g,f.binaryMessageDeserializeFn)):g=f.binaryReaderFn.call(b);c.isRepeated&&!f.isPacked?(b=d.call(a,c))?b.push(g):e.call(a,c,[g]):e.call(a,c,g)}else b.skipField()};\njspb.Message.getField=function(a,b){if(b<a.pivot_){var c=jspb.Message.getIndex_(a,b),d=a.array[c];return d===jspb.Message.EMPTY_LIST_SENTINEL_?a.array[c]=[]:d}if(a.extensionObject_)return d=a.extensionObject_[b],d===jspb.Message.EMPTY_LIST_SENTINEL_?a.extensionObject_[b]=[]:d};\njspb.Message.getRepeatedField=function(a,b){if(b<a.pivot_){var c=jspb.Message.getIndex_(a,b),d=a.array[c];return d===jspb.Message.EMPTY_LIST_SENTINEL_?a.array[c]=[]:d}d=a.extensionObject_[b];return d===jspb.Message.EMPTY_LIST_SENTINEL_?a.extensionObject_[b]=[]:d};jspb.Message.getOptionalFloatingPointField=function(a,b){var c=jspb.Message.getField(a,b);return null==c?c:+c};\njspb.Message.getRepeatedFloatingPointField=function(a,b){var c=jspb.Message.getRepeatedField(a,b);a.convertedFloatingPointFields_||(a.convertedFloatingPointFields_={});if(!a.convertedFloatingPointFields_[b]){for(var d=0;d<c.length;d++)c[d]=+c[d];a.convertedFloatingPointFields_[b]=!0}return c};\njspb.Message.bytesAsB64=function(a){if(null==a||goog.isString(a))return a;if(jspb.Message.SUPPORTS_UINT8ARRAY_&&a instanceof Uint8Array)return goog.crypt.base64.encodeByteArray(a);goog.asserts.fail(\"Cannot coerce to b64 string: \"+goog.typeOf(a));return null};jspb.Message.bytesAsU8=function(a){if(null==a||a instanceof Uint8Array)return a;if(goog.isString(a))return goog.crypt.base64.decodeStringToUint8Array(a);goog.asserts.fail(\"Cannot coerce to Uint8Array: \"+goog.typeOf(a));return null};\njspb.Message.bytesListAsB64=function(a){jspb.Message.assertConsistentTypes_(a);return!a.length||goog.isString(a[0])?a:goog.array.map(a,jspb.Message.bytesAsB64)};jspb.Message.bytesListAsU8=function(a){jspb.Message.assertConsistentTypes_(a);return!a.length||a[0]instanceof Uint8Array?a:goog.array.map(a,jspb.Message.bytesAsU8)};\njspb.Message.assertConsistentTypes_=function(a){if(goog.DEBUG&&a&&1<a.length){var b=goog.typeOf(a[0]);goog.array.forEach(a,function(a){goog.typeOf(a)!=b&&goog.asserts.fail(\"Inconsistent type in JSPB repeated field array. Got \"+goog.typeOf(a)+\" expected \"+b)})}};jspb.Message.getFieldWithDefault=function(a,b,c){a=jspb.Message.getField(a,b);return null==a?c:a};jspb.Message.getFieldProto3=jspb.Message.getFieldWithDefault;\njspb.Message.getMapField=function(a,b,c,d){a.wrappers_||(a.wrappers_={});if(b in a.wrappers_)return a.wrappers_[b];if(!c)return c=jspb.Message.getField(a,b),c||(c=[],jspb.Message.setField(a,b,c)),a.wrappers_[b]=new jspb.Map(c,d)};jspb.Message.setField=function(a,b,c){b<a.pivot_?a.array[jspb.Message.getIndex_(a,b)]=c:(jspb.Message.maybeInitEmptyExtensionObject_(a),a.extensionObject_[b]=c)};jspb.Message.setProto3IntField=function(a,b,c){jspb.Message.setFieldIgnoringDefault_(a,b,c,0)};\njspb.Message.setProto3StringIntField=function(a,b,c){jspb.Message.setFieldIgnoringDefault_(a,b,c,\"0\")};jspb.Message.setProto3FloatField=function(a,b,c){jspb.Message.setFieldIgnoringDefault_(a,b,c,0)};jspb.Message.setProto3BooleanField=function(a,b,c){jspb.Message.setFieldIgnoringDefault_(a,b,c,!1)};jspb.Message.setProto3StringField=function(a,b,c){jspb.Message.setFieldIgnoringDefault_(a,b,c,\"\")};jspb.Message.setProto3BytesField=function(a,b,c){jspb.Message.setFieldIgnoringDefault_(a,b,c,\"\")};\njspb.Message.setProto3EnumField=function(a,b,c){jspb.Message.setFieldIgnoringDefault_(a,b,c,0)};jspb.Message.setFieldIgnoringDefault_=function(a,b,c,d){c!=d?jspb.Message.setField(a,b,c):a.array[jspb.Message.getIndex_(a,b)]=null};jspb.Message.addToRepeatedField=function(a,b,c,d){a=jspb.Message.getRepeatedField(a,b);void 0!=d?a.splice(d,0,c):a.push(c)};\njspb.Message.setOneofField=function(a,b,c,d){(c=jspb.Message.computeOneofCase(a,c))&&c!==b&&void 0!==d&&(a.wrappers_&&c in a.wrappers_&&(a.wrappers_[c]=void 0),jspb.Message.setField(a,c,void 0));jspb.Message.setField(a,b,d)};jspb.Message.computeOneofCase=function(a,b){for(var c,d,e=0;e<b.length;e++){var f=b[e],g=jspb.Message.getField(a,f);null!=g&&(c=f,d=g,jspb.Message.setField(a,f,void 0))}return c?(jspb.Message.setField(a,c,d),c):0};\njspb.Message.getWrapperField=function(a,b,c,d){a.wrappers_||(a.wrappers_={});if(!a.wrappers_[c]){var e=jspb.Message.getField(a,c);if(d||e)a.wrappers_[c]=new b(e)}return a.wrappers_[c]};jspb.Message.getRepeatedWrapperField=function(a,b,c){jspb.Message.wrapRepeatedField_(a,b,c);b=a.wrappers_[c];b==jspb.Message.EMPTY_LIST_SENTINEL_&&(b=a.wrappers_[c]=[]);return b};\njspb.Message.wrapRepeatedField_=function(a,b,c){a.wrappers_||(a.wrappers_={});if(!a.wrappers_[c]){for(var d=jspb.Message.getRepeatedField(a,c),e=[],f=0;f<d.length;f++)e[f]=new b(d[f]);a.wrappers_[c]=e}};jspb.Message.setWrapperField=function(a,b,c){a.wrappers_||(a.wrappers_={});var d=c?c.toArray():c;a.wrappers_[b]=c;jspb.Message.setField(a,b,d)};\njspb.Message.setOneofWrapperField=function(a,b,c,d){a.wrappers_||(a.wrappers_={});var e=d?d.toArray():d;a.wrappers_[b]=d;jspb.Message.setOneofField(a,b,c,e)};jspb.Message.setRepeatedWrapperField=function(a,b,c){a.wrappers_||(a.wrappers_={});c=c||[];for(var d=[],e=0;e<c.length;e++)d[e]=c[e].toArray();a.wrappers_[b]=c;jspb.Message.setField(a,b,d)};\njspb.Message.addToRepeatedWrapperField=function(a,b,c,d,e){jspb.Message.wrapRepeatedField_(a,d,b);var f=a.wrappers_[b];f||(f=a.wrappers_[b]=[]);c=c?c:new d;a=jspb.Message.getRepeatedField(a,b);void 0!=e?(f.splice(e,0,c),a.splice(e,0,c.toArray())):(f.push(c),a.push(c.toArray()));return c};jspb.Message.toMap=function(a,b,c,d){for(var e={},f=0;f<a.length;f++)e[b.call(a[f])]=c?c.call(a[f],d,a[f]):a[f];return e};\njspb.Message.prototype.syncMapFields_=function(){if(this.wrappers_)for(var a in this.wrappers_){var b=this.wrappers_[a];if(goog.isArray(b))for(var c=0;c<b.length;c++)b[c]&&b[c].toArray();else b&&b.toArray()}};jspb.Message.prototype.toArray=function(){this.syncMapFields_();return this.array};jspb.Message.GENERATE_TO_STRING&&(jspb.Message.prototype.toString=function(){this.syncMapFields_();return this.array.toString()});\njspb.Message.prototype.getExtension=function(a){if(this.extensionObject_){this.wrappers_||(this.wrappers_={});var b=a.fieldIndex;if(a.isRepeated){if(a.isMessageType())return this.wrappers_[b]||(this.wrappers_[b]=goog.array.map(this.extensionObject_[b]||[],function(b){return new a.ctor(b)})),this.wrappers_[b]}else if(a.isMessageType())return!this.wrappers_[b]&&this.extensionObject_[b]&&(this.wrappers_[b]=new a.ctor(this.extensionObject_[b])),this.wrappers_[b];return this.extensionObject_[b]}};\njspb.Message.prototype.setExtension=function(a,b){this.wrappers_||(this.wrappers_={});jspb.Message.maybeInitEmptyExtensionObject_(this);var c=a.fieldIndex;a.isRepeated?(b=b||[],a.isMessageType()?(this.wrappers_[c]=b,this.extensionObject_[c]=goog.array.map(b,function(a){return a.toArray()})):this.extensionObject_[c]=b):a.isMessageType()?(this.wrappers_[c]=b,this.extensionObject_[c]=b?b.toArray():b):this.extensionObject_[c]=b;return this};\njspb.Message.difference=function(a,b){if(!(a instanceof b.constructor))throw Error(\"Messages have different types.\");var c=a.toArray(),d=b.toArray(),e=[],f=0,g=c.length>d.length?c.length:d.length;a.getJsPbMessageId()&&(e[0]=a.getJsPbMessageId(),f=1);for(;f<g;f++)jspb.Message.compareFields(c[f],d[f])||(e[f]=d[f]);return new a.constructor(e)};jspb.Message.equals=function(a,b){return a==b||!(!a||!b)&&a instanceof b.constructor&&jspb.Message.compareFields(a.toArray(),b.toArray())};\njspb.Message.compareExtensions=function(a,b){a=a||{};b=b||{};var c={},d;for(d in a)c[d]=0;for(d in b)c[d]=0;for(d in c)if(!jspb.Message.compareFields(a[d],b[d]))return!1;return!0};\njspb.Message.compareFields=function(a,b){if(a==b)return!0;if(!goog.isObject(a)||!goog.isObject(b))return goog.isNumber(a)&&isNaN(a)||goog.isNumber(b)&&isNaN(b)?String(a)==String(b):!1;if(a.constructor!=b.constructor)return!1;if(jspb.Message.SUPPORTS_UINT8ARRAY_&&a.constructor===Uint8Array){if(a.length!=b.length)return!1;for(var c=0;c<a.length;c++)if(a[c]!=b[c])return!1;return!0}if(a.constructor===Array){for(var d=void 0,e=void 0,f=Math.max(a.length,b.length),c=0;c<f;c++){var g=a[c],h=b[c];g&&g.constructor==\nObject&&(goog.asserts.assert(void 0===d),goog.asserts.assert(c===a.length-1),d=g,g=void 0);h&&h.constructor==Object&&(goog.asserts.assert(void 0===e),goog.asserts.assert(c===b.length-1),e=h,h=void 0);if(!jspb.Message.compareFields(g,h))return!1}return d||e?(d=d||{},e=e||{},jspb.Message.compareExtensions(d,e)):!0}if(a.constructor===Object)return jspb.Message.compareExtensions(a,b);throw Error(\"Invalid type in JSPB array\");};jspb.Message.prototype.cloneMessage=function(){return jspb.Message.cloneMessage(this)};\njspb.Message.prototype.clone=function(){return jspb.Message.cloneMessage(this)};jspb.Message.clone=function(a){return jspb.Message.cloneMessage(a)};jspb.Message.cloneMessage=function(a){return new a.constructor(jspb.Message.clone_(a.toArray()))};\njspb.Message.copyInto=function(a,b){goog.asserts.assertInstanceof(a,jspb.Message);goog.asserts.assertInstanceof(b,jspb.Message);goog.asserts.assert(a.constructor==b.constructor,\"Copy source and target message should have the same type.\");for(var c=jspb.Message.clone(a),d=b.toArray(),e=c.toArray(),f=d.length=0;f<e.length;f++)d[f]=e[f];b.wrappers_=c.wrappers_;b.extensionObject_=c.extensionObject_};\njspb.Message.clone_=function(a){var b;if(goog.isArray(a)){for(var c=Array(a.length),d=0;d<a.length;d++)b=a[d],null!=b&&(c[d]=\"object\"==typeof b?jspb.Message.clone_(goog.asserts.assert(b)):b);return c}if(jspb.Message.SUPPORTS_UINT8ARRAY_&&a instanceof Uint8Array)return new Uint8Array(a);c={};for(d in a)b=a[d],null!=b&&(c[d]=\"object\"==typeof b?jspb.Message.clone_(goog.asserts.assert(b)):b);return c};jspb.Message.registerMessageType=function(a,b){jspb.Message.registry_[a]=b;b.messageId=a};\njspb.Message.registry_={};jspb.Message.messageSetExtensions={};jspb.Message.messageSetExtensionsBinary={};jspb.arith={};jspb.arith.UInt64=function(a,b){this.lo=a;this.hi=b};jspb.arith.UInt64.prototype.cmp=function(a){return this.hi<a.hi||this.hi==a.hi&&this.lo<a.lo?-1:this.hi==a.hi&&this.lo==a.lo?0:1};jspb.arith.UInt64.prototype.rightShift=function(){return new jspb.arith.UInt64((this.lo>>>1|(this.hi&1)<<31)>>>0,this.hi>>>1>>>0)};jspb.arith.UInt64.prototype.leftShift=function(){return new jspb.arith.UInt64(this.lo<<1>>>0,(this.hi<<1|this.lo>>>31)>>>0)};\njspb.arith.UInt64.prototype.msb=function(){return!!(this.hi&2147483648)};jspb.arith.UInt64.prototype.lsb=function(){return!!(this.lo&1)};jspb.arith.UInt64.prototype.zero=function(){return 0==this.lo&&0==this.hi};jspb.arith.UInt64.prototype.add=function(a){return new jspb.arith.UInt64((this.lo+a.lo&4294967295)>>>0>>>0,((this.hi+a.hi&4294967295)>>>0)+(4294967296<=this.lo+a.lo?1:0)>>>0)};\njspb.arith.UInt64.prototype.sub=function(a){return new jspb.arith.UInt64((this.lo-a.lo&4294967295)>>>0>>>0,((this.hi-a.hi&4294967295)>>>0)-(0>this.lo-a.lo?1:0)>>>0)};jspb.arith.UInt64.mul32x32=function(a,b){for(var c=a&65535,d=a>>>16,e=b&65535,f=b>>>16,g=c*e+65536*(c*f&65535)+65536*(d*e&65535),c=d*f+(c*f>>>16)+(d*e>>>16);4294967296<=g;)g-=4294967296,c+=1;return new jspb.arith.UInt64(g>>>0,c>>>0)};\njspb.arith.UInt64.prototype.mul=function(a){var b=jspb.arith.UInt64.mul32x32(this.lo,a);a=jspb.arith.UInt64.mul32x32(this.hi,a);a.hi=a.lo;a.lo=0;return b.add(a)};\njspb.arith.UInt64.prototype.div=function(a){if(0==a)return[];var b=new jspb.arith.UInt64(0,0),c=new jspb.arith.UInt64(this.lo,this.hi);a=new jspb.arith.UInt64(a,0);for(var d=new jspb.arith.UInt64(1,0);!a.msb();)a=a.leftShift(),d=d.leftShift();for(;!d.zero();)0>=a.cmp(c)&&(b=b.add(d),c=c.sub(a)),a=a.rightShift(),d=d.rightShift();return[b,c]};jspb.arith.UInt64.prototype.toString=function(){for(var a=\"\",b=this;!b.zero();)var b=b.div(10),c=b[0],a=b[1].lo+a,b=c;\"\"==a&&(a=\"0\");return a};\njspb.arith.UInt64.fromString=function(a){for(var b=new jspb.arith.UInt64(0,0),c=new jspb.arith.UInt64(0,0),d=0;d<a.length;d++){if(\"0\">a[d]||\"9\"<a[d])return null;var e=parseInt(a[d],10);c.lo=e;b=b.mul(10).add(c)}return b};jspb.arith.UInt64.prototype.clone=function(){return new jspb.arith.UInt64(this.lo,this.hi)};jspb.arith.Int64=function(a,b){this.lo=a;this.hi=b};\njspb.arith.Int64.prototype.add=function(a){return new jspb.arith.Int64((this.lo+a.lo&4294967295)>>>0>>>0,((this.hi+a.hi&4294967295)>>>0)+(4294967296<=this.lo+a.lo?1:0)>>>0)};jspb.arith.Int64.prototype.sub=function(a){return new jspb.arith.Int64((this.lo-a.lo&4294967295)>>>0>>>0,((this.hi-a.hi&4294967295)>>>0)-(0>this.lo-a.lo?1:0)>>>0)};jspb.arith.Int64.prototype.clone=function(){return new jspb.arith.Int64(this.lo,this.hi)};\njspb.arith.Int64.prototype.toString=function(){var a=0!=(this.hi&2147483648),b=new jspb.arith.UInt64(this.lo,this.hi);a&&(b=(new jspb.arith.UInt64(0,0)).sub(b));return(a?\"-\":\"\")+b.toString()};jspb.arith.Int64.fromString=function(a){var b=0<a.length&&\"-\"==a[0];b&&(a=a.substring(1));a=jspb.arith.UInt64.fromString(a);if(null===a)return null;b&&(a=(new jspb.arith.UInt64(0,0)).sub(a));return new jspb.arith.Int64(a.lo,a.hi)};jspb.BinaryConstants={};jspb.ConstBinaryMessage=function(){};jspb.BinaryMessage=function(){};jspb.BinaryConstants.FieldType={INVALID:-1,DOUBLE:1,FLOAT:2,INT64:3,UINT64:4,INT32:5,FIXED64:6,FIXED32:7,BOOL:8,STRING:9,GROUP:10,MESSAGE:11,BYTES:12,UINT32:13,ENUM:14,SFIXED32:15,SFIXED64:16,SINT32:17,SINT64:18,FHASH64:30,VHASH64:31};jspb.BinaryConstants.WireType={INVALID:-1,VARINT:0,FIXED64:1,DELIMITED:2,START_GROUP:3,END_GROUP:4,FIXED32:5};\njspb.BinaryConstants.FieldTypeToWireType=function(a){var b=jspb.BinaryConstants.FieldType,c=jspb.BinaryConstants.WireType;switch(a){case b.INT32:case b.INT64:case b.UINT32:case b.UINT64:case b.SINT32:case b.SINT64:case b.BOOL:case b.ENUM:case b.VHASH64:return c.VARINT;case b.DOUBLE:case b.FIXED64:case b.SFIXED64:case b.FHASH64:return c.FIXED64;case b.STRING:case b.MESSAGE:case b.BYTES:return c.DELIMITED;case b.FLOAT:case b.FIXED32:case b.SFIXED32:return c.FIXED32;default:return c.INVALID}};\njspb.BinaryConstants.INVALID_FIELD_NUMBER=-1;jspb.BinaryConstants.FLOAT32_EPS=1.401298464324817E-45;jspb.BinaryConstants.FLOAT32_MIN=1.1754943508222875E-38;jspb.BinaryConstants.FLOAT32_MAX=3.4028234663852886E38;jspb.BinaryConstants.FLOAT64_EPS=4.9E-324;jspb.BinaryConstants.FLOAT64_MIN=2.2250738585072014E-308;jspb.BinaryConstants.FLOAT64_MAX=1.7976931348623157E308;jspb.BinaryConstants.TWO_TO_20=1048576;jspb.BinaryConstants.TWO_TO_23=8388608;jspb.BinaryConstants.TWO_TO_31=2147483648;\njspb.BinaryConstants.TWO_TO_32=4294967296;jspb.BinaryConstants.TWO_TO_52=4503599627370496;jspb.BinaryConstants.TWO_TO_63=0x7fffffffffffffff;jspb.BinaryConstants.TWO_TO_64=1.8446744073709552E19;jspb.BinaryConstants.ZERO_HASH=\"\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\";jspb.utils={};jspb.utils.split64Low=0;jspb.utils.split64High=0;jspb.utils.splitUint64=function(a){var b=a>>>0;a=Math.floor((a-b)/jspb.BinaryConstants.TWO_TO_32)>>>0;jspb.utils.split64Low=b;jspb.utils.split64High=a};jspb.utils.splitInt64=function(a){var b=0>a;a=Math.abs(a);var c=a>>>0;a=Math.floor((a-c)/jspb.BinaryConstants.TWO_TO_32);a>>>=0;b&&(a=~a>>>0,c=(~c>>>0)+1,4294967295<c&&(c=0,a++,4294967295<a&&(a=0)));jspb.utils.split64Low=c;jspb.utils.split64High=a};\njspb.utils.splitZigzag64=function(a){var b=0>a;a=2*Math.abs(a);jspb.utils.splitUint64(a);a=jspb.utils.split64Low;var c=jspb.utils.split64High;b&&(0==a?0==c?c=a=4294967295:(c--,a=4294967295):a--);jspb.utils.split64Low=a;jspb.utils.split64High=c};\njspb.utils.splitFloat32=function(a){var b=0>a?1:0;a=b?-a:a;var c;0===a?0<1/a?(jspb.utils.split64High=0,jspb.utils.split64Low=0):(jspb.utils.split64High=0,jspb.utils.split64Low=2147483648):isNaN(a)?(jspb.utils.split64High=0,jspb.utils.split64Low=2147483647):a>jspb.BinaryConstants.FLOAT32_MAX?(jspb.utils.split64High=0,jspb.utils.split64Low=(b<<31|2139095040)>>>0):a<jspb.BinaryConstants.FLOAT32_MIN?(a=Math.round(a/Math.pow(2,-149)),jspb.utils.split64High=0,jspb.utils.split64Low=(b<<31|a)>>>0):(c=Math.floor(Math.log(a)/\nMath.LN2),a*=Math.pow(2,-c),a=Math.round(a*jspb.BinaryConstants.TWO_TO_23)&8388607,jspb.utils.split64High=0,jspb.utils.split64Low=(b<<31|c+127<<23|a)>>>0)};\njspb.utils.splitFloat64=function(a){var b=0>a?1:0;a=b?-a:a;if(0===a)jspb.utils.split64High=0<1/a?0:2147483648,jspb.utils.split64Low=0;else if(isNaN(a))jspb.utils.split64High=2147483647,jspb.utils.split64Low=4294967295;else if(a>jspb.BinaryConstants.FLOAT64_MAX)jspb.utils.split64High=(b<<31|2146435072)>>>0,jspb.utils.split64Low=0;else if(a<jspb.BinaryConstants.FLOAT64_MIN){var c=a/Math.pow(2,-1074);a=c/jspb.BinaryConstants.TWO_TO_32;jspb.utils.split64High=(b<<31|a)>>>0;jspb.utils.split64Low=c>>>0}else{var d=\nMath.floor(Math.log(a)/Math.LN2);1024==d&&(d=1023);c=a*Math.pow(2,-d);a=c*jspb.BinaryConstants.TWO_TO_20&1048575;c=c*jspb.BinaryConstants.TWO_TO_52>>>0;jspb.utils.split64High=(b<<31|d+1023<<20|a)>>>0;jspb.utils.split64Low=c}};\njspb.utils.splitHash64=function(a){var b=a.charCodeAt(0),c=a.charCodeAt(1),d=a.charCodeAt(2),e=a.charCodeAt(3),f=a.charCodeAt(4),g=a.charCodeAt(5),h=a.charCodeAt(6);a=a.charCodeAt(7);jspb.utils.split64Low=b+(c<<8)+(d<<16)+(e<<24)>>>0;jspb.utils.split64High=f+(g<<8)+(h<<16)+(a<<24)>>>0};jspb.utils.joinUint64=function(a,b){return b*jspb.BinaryConstants.TWO_TO_32+a};\njspb.utils.joinInt64=function(a,b){var c=b&2147483648;c&&(a=~a+1>>>0,b=~b>>>0,0==a&&(b=b+1>>>0));var d=jspb.utils.joinUint64(a,b);return c?-d:d};jspb.utils.joinZigzag64=function(a,b){var c=a&1;a=(a>>>1|b<<31)>>>0;b>>>=1;c&&(a=a+1>>>0,0==a&&(b=b+1>>>0));var d=jspb.utils.joinUint64(a,b);return c?-d:d};jspb.utils.joinFloat32=function(a,b){var c=2*(a>>31)+1,d=a>>>23&255,e=a&8388607;return 255==d?e?NaN:Infinity*c:0==d?c*Math.pow(2,-149)*e:c*Math.pow(2,d-150)*(e+Math.pow(2,23))};\njspb.utils.joinFloat64=function(a,b){var c=2*(b>>31)+1,d=b>>>20&2047,e=jspb.BinaryConstants.TWO_TO_32*(b&1048575)+a;return 2047==d?e?NaN:Infinity*c:0==d?c*Math.pow(2,-1074)*e:c*Math.pow(2,d-1075)*(e+jspb.BinaryConstants.TWO_TO_52)};jspb.utils.joinHash64=function(a,b){return String.fromCharCode(a>>>0&255,a>>>8&255,a>>>16&255,a>>>24&255,b>>>0&255,b>>>8&255,b>>>16&255,b>>>24&255)};jspb.utils.DIGITS=\"0123456789abcdef\".split(\"\");\njspb.utils.joinUnsignedDecimalString=function(a,b){function c(a){for(var b=1E7,c=0;7>c;c++){var b=b/10,d=a/b%10>>>0;if(0!=d||h)h=!0,k+=g[d]}}if(2097151>=b)return\"\"+(jspb.BinaryConstants.TWO_TO_32*b+a);var d=(a>>>24|b<<8)>>>0&16777215,e=b>>16&65535,f=(a&16777215)+6777216*d+6710656*e,d=d+8147497*e,e=2*e;1E7<=f&&(d+=Math.floor(f/1E7),f%=1E7);1E7<=d&&(e+=Math.floor(d/1E7),d%=1E7);var g=jspb.utils.DIGITS,h=!1,k=\"\";(e||h)&&c(e);(d||h)&&c(d);(f||h)&&c(f);return k};\njspb.utils.joinSignedDecimalString=function(a,b){var c=b&2147483648;c&&(a=~a+1>>>0,b=~b+(0==a?1:0)>>>0);var d=jspb.utils.joinUnsignedDecimalString(a,b);return c?\"-\"+d:d};jspb.utils.hash64ToDecimalString=function(a,b){jspb.utils.splitHash64(a);var c=jspb.utils.split64Low,d=jspb.utils.split64High;return b?jspb.utils.joinSignedDecimalString(c,d):jspb.utils.joinUnsignedDecimalString(c,d)};\njspb.utils.hash64ArrayToDecimalStrings=function(a,b){for(var c=Array(a.length),d=0;d<a.length;d++)c[d]=jspb.utils.hash64ToDecimalString(a[d],b);return c};\njspb.utils.decimalStringToHash64=function(a){function b(a,b){for(var c=0;8>c&&(1!==a||0<b);c++){var d=a*e[c]+b;e[c]=d&255;b=d>>>8}}function c(){for(var a=0;8>a;a++)e[a]=~e[a]&255}goog.asserts.assert(0<a.length);var d=!1;\"-\"===a[0]&&(d=!0,a=a.slice(1));for(var e=[0,0,0,0,0,0,0,0],f=0;f<a.length;f++)b(10,jspb.utils.DIGITS.indexOf(a[f]));d&&(c(),b(1,1));return goog.crypt.byteArrayToString(e)};jspb.utils.splitDecimalString=function(a){jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(a))};\njspb.utils.hash64ToHexString=function(a){var b=Array(18);b[0]=\"0\";b[1]=\"x\";for(var c=0;8>c;c++){var d=a.charCodeAt(7-c);b[2*c+2]=jspb.utils.DIGITS[d>>4];b[2*c+3]=jspb.utils.DIGITS[d&15]}return b.join(\"\")};jspb.utils.hexStringToHash64=function(a){a=a.toLowerCase();goog.asserts.assert(18==a.length);goog.asserts.assert(\"0\"==a[0]);goog.asserts.assert(\"x\"==a[1]);for(var b=\"\",c=0;8>c;c++)var d=jspb.utils.DIGITS.indexOf(a[2*c+2]),e=jspb.utils.DIGITS.indexOf(a[2*c+3]),b=String.fromCharCode(16*d+e)+b;return b};\njspb.utils.hash64ToNumber=function(a,b){jspb.utils.splitHash64(a);var c=jspb.utils.split64Low,d=jspb.utils.split64High;return b?jspb.utils.joinInt64(c,d):jspb.utils.joinUint64(c,d)};jspb.utils.numberToHash64=function(a){jspb.utils.splitInt64(a);return jspb.utils.joinHash64(jspb.utils.split64Low,jspb.utils.split64High)};jspb.utils.countVarints=function(a,b,c){for(var d=0,e=b;e<c;e++)d+=a[e]>>7;return c-b-d};\njspb.utils.countVarintFields=function(a,b,c,d){var e=0;d=8*d+jspb.BinaryConstants.WireType.VARINT;if(128>d)for(;b<c&&a[b++]==d;)for(e++;;){var f=a[b++];if(0==(f&128))break}else for(;b<c;){for(f=d;128<f;){if(a[b]!=(f&127|128))return e;b++;f>>=7}if(a[b++]!=f)break;for(e++;f=a[b++],0!=(f&128););}return e};jspb.utils.countFixedFields_=function(a,b,c,d,e){var f=0;if(128>d)for(;b<c&&a[b++]==d;)f++,b+=e;else for(;b<c;){for(var g=d;128<g;){if(a[b++]!=(g&127|128))return f;g>>=7}if(a[b++]!=g)break;f++;b+=e}return f};\njspb.utils.countFixed32Fields=function(a,b,c,d){return jspb.utils.countFixedFields_(a,b,c,8*d+jspb.BinaryConstants.WireType.FIXED32,4)};jspb.utils.countFixed64Fields=function(a,b,c,d){return jspb.utils.countFixedFields_(a,b,c,8*d+jspb.BinaryConstants.WireType.FIXED64,8)};\njspb.utils.countDelimitedFields=function(a,b,c,d){var e=0;for(d=8*d+jspb.BinaryConstants.WireType.DELIMITED;b<c;){for(var f=d;128<f;){if(a[b++]!=(f&127|128))return e;f>>=7}if(a[b++]!=f)break;e++;for(var g=0,h=1;f=a[b++],g+=(f&127)*h,h*=128,0!=(f&128););b+=g}return e};jspb.utils.debugBytesToTextFormat=function(a){var b='\"';if(a){a=jspb.utils.byteSourceToUint8Array(a);for(var c=0;c<a.length;c++)b+=\"\\\\x\",16>a[c]&&(b+=\"0\"),b+=a[c].toString(16)}return b+'\"'};\njspb.utils.debugScalarToTextFormat=function(a){return goog.isString(a)?goog.string.quote(a):a.toString()};jspb.utils.stringToByteArray=function(a){for(var b=new Uint8Array(a.length),c=0;c<a.length;c++){var d=a.charCodeAt(c);if(255<d)throw Error(\"Conversion error: string contains codepoint outside of byte range\");b[c]=d}return b};\njspb.utils.byteSourceToUint8Array=function(a){if(a.constructor===Uint8Array)return a;if(a.constructor===ArrayBuffer||a.constructor===Buffer||a.constructor===Array)return new Uint8Array(a);if(a.constructor===String)return goog.crypt.base64.decodeStringToUint8Array(a);goog.asserts.fail(\"Type not convertible to Uint8Array.\");return new Uint8Array(0)};jspb.BinaryEncoder=function(){this.buffer_=[]};jspb.BinaryEncoder.prototype.length=function(){return this.buffer_.length};jspb.BinaryEncoder.prototype.end=function(){var a=this.buffer_;this.buffer_=[];return a};\njspb.BinaryEncoder.prototype.writeSplitVarint64=function(a,b){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(b==Math.floor(b));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_32);for(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_32);0<b||127<a;)this.buffer_.push(a&127|128),a=(a>>>7|b<<25)>>>0,b>>>=7;this.buffer_.push(a)};\njspb.BinaryEncoder.prototype.writeSplitFixed64=function(a,b){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(b==Math.floor(b));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_32);goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_32);this.writeUint32(a);this.writeUint32(b)};\njspb.BinaryEncoder.prototype.writeUnsignedVarint32=function(a){goog.asserts.assert(a==Math.floor(a));for(goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_32);127<a;)this.buffer_.push(a&127|128),a>>>=7;this.buffer_.push(a)};\njspb.BinaryEncoder.prototype.writeSignedVarint32=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_31&&a<jspb.BinaryConstants.TWO_TO_31);if(0<=a)this.writeUnsignedVarint32(a);else{for(var b=0;9>b;b++)this.buffer_.push(a&127|128),a>>=7;this.buffer_.push(1)}};\njspb.BinaryEncoder.prototype.writeUnsignedVarint64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_64);jspb.utils.splitInt64(a);this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)};\njspb.BinaryEncoder.prototype.writeSignedVarint64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_63&&a<jspb.BinaryConstants.TWO_TO_63);jspb.utils.splitInt64(a);this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)};\njspb.BinaryEncoder.prototype.writeZigzagVarint32=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_31&&a<jspb.BinaryConstants.TWO_TO_31);this.writeUnsignedVarint32((a<<1^a>>31)>>>0)};jspb.BinaryEncoder.prototype.writeZigzagVarint64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_63&&a<jspb.BinaryConstants.TWO_TO_63);jspb.utils.splitZigzag64(a);this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)};\njspb.BinaryEncoder.prototype.writeZigzagVarint64String=function(a){this.writeZigzagVarint64(parseInt(a,10))};jspb.BinaryEncoder.prototype.writeUint8=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&256>a);this.buffer_.push(a>>>0&255)};jspb.BinaryEncoder.prototype.writeUint16=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&65536>a);this.buffer_.push(a>>>0&255);this.buffer_.push(a>>>8&255)};\njspb.BinaryEncoder.prototype.writeUint32=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_32);this.buffer_.push(a>>>0&255);this.buffer_.push(a>>>8&255);this.buffer_.push(a>>>16&255);this.buffer_.push(a>>>24&255)};jspb.BinaryEncoder.prototype.writeUint64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(0<=a&&a<jspb.BinaryConstants.TWO_TO_64);jspb.utils.splitUint64(a);this.writeUint32(jspb.utils.split64Low);this.writeUint32(jspb.utils.split64High)};\njspb.BinaryEncoder.prototype.writeInt8=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(-128<=a&&128>a);this.buffer_.push(a>>>0&255)};jspb.BinaryEncoder.prototype.writeInt16=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(-32768<=a&&32768>a);this.buffer_.push(a>>>0&255);this.buffer_.push(a>>>8&255)};\njspb.BinaryEncoder.prototype.writeInt32=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_31&&a<jspb.BinaryConstants.TWO_TO_31);this.buffer_.push(a>>>0&255);this.buffer_.push(a>>>8&255);this.buffer_.push(a>>>16&255);this.buffer_.push(a>>>24&255)};\njspb.BinaryEncoder.prototype.writeInt64=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_63&&a<jspb.BinaryConstants.TWO_TO_63);jspb.utils.splitInt64(a);this.writeSplitFixed64(jspb.utils.split64Low,jspb.utils.split64High)};\njspb.BinaryEncoder.prototype.writeInt64String=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(+a>=-jspb.BinaryConstants.TWO_TO_63&&+a<jspb.BinaryConstants.TWO_TO_63);jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(a));this.writeSplitFixed64(jspb.utils.split64Low,jspb.utils.split64High)};jspb.BinaryEncoder.prototype.writeFloat=function(a){goog.asserts.assert(a>=-jspb.BinaryConstants.FLOAT32_MAX&&a<=jspb.BinaryConstants.FLOAT32_MAX);jspb.utils.splitFloat32(a);this.writeUint32(jspb.utils.split64Low)};\njspb.BinaryEncoder.prototype.writeDouble=function(a){goog.asserts.assert(a>=-jspb.BinaryConstants.FLOAT64_MAX&&a<=jspb.BinaryConstants.FLOAT64_MAX);jspb.utils.splitFloat64(a);this.writeUint32(jspb.utils.split64Low);this.writeUint32(jspb.utils.split64High)};jspb.BinaryEncoder.prototype.writeBool=function(a){goog.asserts.assert(goog.isBoolean(a)||goog.isNumber(a));this.buffer_.push(a?1:0)};\njspb.BinaryEncoder.prototype.writeEnum=function(a){goog.asserts.assert(a==Math.floor(a));goog.asserts.assert(a>=-jspb.BinaryConstants.TWO_TO_31&&a<jspb.BinaryConstants.TWO_TO_31);this.writeSignedVarint32(a)};jspb.BinaryEncoder.prototype.writeBytes=function(a){this.buffer_.push.apply(this.buffer_,a)};jspb.BinaryEncoder.prototype.writeVarintHash64=function(a){jspb.utils.splitHash64(a);this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)};\njspb.BinaryEncoder.prototype.writeFixedHash64=function(a){jspb.utils.splitHash64(a);this.writeUint32(jspb.utils.split64Low);this.writeUint32(jspb.utils.split64High)};\njspb.BinaryEncoder.prototype.writeString=function(a){for(var b=this.buffer_.length,c=0;c<a.length;c++){var d=a.charCodeAt(c);if(128>d)this.buffer_.push(d);else if(2048>d)this.buffer_.push(d>>6|192),this.buffer_.push(d&63|128);else if(65536>d)if(55296<=d&&56319>=d&&c+1<a.length){var e=a.charCodeAt(c+1);56320<=e&&57343>=e&&(d=1024*(d-55296)+e-56320+65536,this.buffer_.push(d>>18|240),this.buffer_.push(d>>12&63|128),this.buffer_.push(d>>6&63|128),this.buffer_.push(d&63|128),c++)}else this.buffer_.push(d>>\n12|224),this.buffer_.push(d>>6&63|128),this.buffer_.push(d&63|128)}return this.buffer_.length-b};jspb.BinaryWriter=function(){this.blocks_=[];this.totalLength_=0;this.encoder_=new jspb.BinaryEncoder;this.bookmarks_=[]};jspb.BinaryWriter.prototype.appendUint8Array_=function(a){var b=this.encoder_.end();this.blocks_.push(b);this.blocks_.push(a);this.totalLength_+=b.length+a.length};\njspb.BinaryWriter.prototype.beginDelimited_=function(a){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);a=this.encoder_.end();this.blocks_.push(a);this.totalLength_+=a.length;a.push(this.totalLength_);return a};jspb.BinaryWriter.prototype.endDelimited_=function(a){var b=a.pop(),b=this.totalLength_+this.encoder_.length()-b;for(goog.asserts.assert(0<=b);127<b;)a.push(b&127|128),b>>>=7,this.totalLength_++;a.push(b);this.totalLength_++};\njspb.BinaryWriter.prototype.writeSerializedMessage=function(a,b,c){this.appendUint8Array_(a.subarray(b,c))};jspb.BinaryWriter.prototype.maybeWriteSerializedMessage=function(a,b,c){null!=a&&null!=b&&null!=c&&this.writeSerializedMessage(a,b,c)};jspb.BinaryWriter.prototype.reset=function(){this.blocks_=[];this.encoder_.end();this.totalLength_=0;this.bookmarks_=[]};\njspb.BinaryWriter.prototype.getResultBuffer=function(){goog.asserts.assert(0==this.bookmarks_.length);for(var a=new Uint8Array(this.totalLength_+this.encoder_.length()),b=this.blocks_,c=b.length,d=0,e=0;e<c;e++){var f=b[e];a.set(f,d);d+=f.length}b=this.encoder_.end();a.set(b,d);d+=b.length;goog.asserts.assert(d==a.length);this.blocks_=[a];return a};jspb.BinaryWriter.prototype.getResultBase64String=function(a){return goog.crypt.base64.encodeByteArray(this.getResultBuffer(),a)};\njspb.BinaryWriter.prototype.beginSubMessage=function(a){this.bookmarks_.push(this.beginDelimited_(a))};jspb.BinaryWriter.prototype.endSubMessage=function(){goog.asserts.assert(0<=this.bookmarks_.length);this.endDelimited_(this.bookmarks_.pop())};jspb.BinaryWriter.prototype.writeFieldHeader_=function(a,b){goog.asserts.assert(1<=a&&a==Math.floor(a));this.encoder_.writeUnsignedVarint32(8*a+b)};\njspb.BinaryWriter.prototype.writeAny=function(a,b,c){var d=jspb.BinaryConstants.FieldType;switch(a){case d.DOUBLE:this.writeDouble(b,c);break;case d.FLOAT:this.writeFloat(b,c);break;case d.INT64:this.writeInt64(b,c);break;case d.UINT64:this.writeUint64(b,c);break;case d.INT32:this.writeInt32(b,c);break;case d.FIXED64:this.writeFixed64(b,c);break;case d.FIXED32:this.writeFixed32(b,c);break;case d.BOOL:this.writeBool(b,c);break;case d.STRING:this.writeString(b,c);break;case d.GROUP:goog.asserts.fail(\"Group field type not supported in writeAny()\");\nbreak;case d.MESSAGE:goog.asserts.fail(\"Message field type not supported in writeAny()\");break;case d.BYTES:this.writeBytes(b,c);break;case d.UINT32:this.writeUint32(b,c);break;case d.ENUM:this.writeEnum(b,c);break;case d.SFIXED32:this.writeSfixed32(b,c);break;case d.SFIXED64:this.writeSfixed64(b,c);break;case d.SINT32:this.writeSint32(b,c);break;case d.SINT64:this.writeSint64(b,c);break;case d.FHASH64:this.writeFixedHash64(b,c);break;case d.VHASH64:this.writeVarintHash64(b,c);break;default:goog.asserts.fail(\"Invalid field type in writeAny()\")}};\njspb.BinaryWriter.prototype.writeUnsignedVarint32_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeUnsignedVarint32(b))};jspb.BinaryWriter.prototype.writeSignedVarint32_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint32(b))};jspb.BinaryWriter.prototype.writeUnsignedVarint64_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeUnsignedVarint64(b))};\njspb.BinaryWriter.prototype.writeSignedVarint64_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint64(b))};jspb.BinaryWriter.prototype.writeZigzagVarint32_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint32(b))};jspb.BinaryWriter.prototype.writeZigzagVarint64_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint64(b))};\njspb.BinaryWriter.prototype.writeZigzagVarint64String_=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint64String(b))};jspb.BinaryWriter.prototype.writeInt32=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_31&&b<jspb.BinaryConstants.TWO_TO_31),this.writeSignedVarint32_(a,b))};\njspb.BinaryWriter.prototype.writeInt32String=function(a,b){if(null!=b){var c=parseInt(b,10);goog.asserts.assert(c>=-jspb.BinaryConstants.TWO_TO_31&&c<jspb.BinaryConstants.TWO_TO_31);this.writeSignedVarint32_(a,c)}};jspb.BinaryWriter.prototype.writeInt64=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_63&&b<jspb.BinaryConstants.TWO_TO_63),this.writeSignedVarint64_(a,b))};\njspb.BinaryWriter.prototype.writeInt64String=function(a,b){if(null!=b){var c=jspb.arith.Int64.fromString(b);this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT);this.encoder_.writeSplitVarint64(c.lo,c.hi)}};jspb.BinaryWriter.prototype.writeUint32=function(a,b){null!=b&&(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_32),this.writeUnsignedVarint32_(a,b))};\njspb.BinaryWriter.prototype.writeUint32String=function(a,b){if(null!=b){var c=parseInt(b,10);goog.asserts.assert(0<=c&&c<jspb.BinaryConstants.TWO_TO_32);this.writeUnsignedVarint32_(a,c)}};jspb.BinaryWriter.prototype.writeUint64=function(a,b){null!=b&&(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_64),this.writeUnsignedVarint64_(a,b))};\njspb.BinaryWriter.prototype.writeUint64String=function(a,b){if(null!=b){var c=jspb.arith.UInt64.fromString(b);this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT);this.encoder_.writeSplitVarint64(c.lo,c.hi)}};jspb.BinaryWriter.prototype.writeSint32=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_31&&b<jspb.BinaryConstants.TWO_TO_31),this.writeZigzagVarint32_(a,b))};\njspb.BinaryWriter.prototype.writeSint64=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_63&&b<jspb.BinaryConstants.TWO_TO_63),this.writeZigzagVarint64_(a,b))};jspb.BinaryWriter.prototype.writeSint64String=function(a,b){null!=b&&(goog.asserts.assert(+b>=-jspb.BinaryConstants.TWO_TO_63&&+b<jspb.BinaryConstants.TWO_TO_63),this.writeZigzagVarint64String_(a,b))};\njspb.BinaryWriter.prototype.writeFixed32=function(a,b){null!=b&&(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_32),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeUint32(b))};jspb.BinaryWriter.prototype.writeFixed64=function(a,b){null!=b&&(goog.asserts.assert(0<=b&&b<jspb.BinaryConstants.TWO_TO_64),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeUint64(b))};\njspb.BinaryWriter.prototype.writeFixed64String=function(a,b){if(null!=b){var c=jspb.arith.UInt64.fromString(b);this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64);this.encoder_.writeSplitFixed64(c.lo,c.hi)}};jspb.BinaryWriter.prototype.writeSfixed32=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_31&&b<jspb.BinaryConstants.TWO_TO_31),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeInt32(b))};\njspb.BinaryWriter.prototype.writeSfixed64=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_63&&b<jspb.BinaryConstants.TWO_TO_63),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeInt64(b))};jspb.BinaryWriter.prototype.writeSfixed64String=function(a,b){if(null!=b){var c=jspb.arith.Int64.fromString(b);this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64);this.encoder_.writeSplitFixed64(c.lo,c.hi)}};\njspb.BinaryWriter.prototype.writeFloat=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeFloat(b))};jspb.BinaryWriter.prototype.writeDouble=function(a,b){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeDouble(b))};jspb.BinaryWriter.prototype.writeBool=function(a,b){null!=b&&(goog.asserts.assert(goog.isBoolean(b)||goog.isNumber(b)),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeBool(b))};\njspb.BinaryWriter.prototype.writeEnum=function(a,b){null!=b&&(goog.asserts.assert(b>=-jspb.BinaryConstants.TWO_TO_31&&b<jspb.BinaryConstants.TWO_TO_31),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint32(b))};jspb.BinaryWriter.prototype.writeString=function(a,b){if(null!=b){var c=this.beginDelimited_(a);this.encoder_.writeString(b);this.endDelimited_(c)}};\njspb.BinaryWriter.prototype.writeBytes=function(a,b){if(null!=b){var c=jspb.utils.byteSourceToUint8Array(b);this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(c.length);this.appendUint8Array_(c)}};jspb.BinaryWriter.prototype.writeMessage=function(a,b,c){null!=b&&(a=this.beginDelimited_(a),c(b,this),this.endDelimited_(a))};\njspb.BinaryWriter.prototype.writeGroup=function(a,b,c){null!=b&&(this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.START_GROUP),c(b,this),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.END_GROUP))};jspb.BinaryWriter.prototype.writeFixedHash64=function(a,b){null!=b&&(goog.asserts.assert(8==b.length),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeFixedHash64(b))};\njspb.BinaryWriter.prototype.writeVarintHash64=function(a,b){null!=b&&(goog.asserts.assert(8==b.length),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeVarintHash64(b))};jspb.BinaryWriter.prototype.writeRepeatedInt32=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSignedVarint32_(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedInt32String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeInt32String(a,b[c])};\njspb.BinaryWriter.prototype.writeRepeatedInt64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSignedVarint64_(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedInt64String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeInt64String(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedUint32=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeUnsignedVarint32_(a,b[c])};\njspb.BinaryWriter.prototype.writeRepeatedUint32String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeUint32String(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedUint64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeUnsignedVarint64_(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedUint64String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeUint64String(a,b[c])};\njspb.BinaryWriter.prototype.writeRepeatedSint32=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeZigzagVarint32_(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedSint64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeZigzagVarint64_(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedSint64String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeZigzagVarint64String_(a,b[c])};\njspb.BinaryWriter.prototype.writeRepeatedFixed32=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFixed32(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedFixed64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFixed64(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedFixed64String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFixed64String(a,b[c])};\njspb.BinaryWriter.prototype.writeRepeatedSfixed32=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSfixed32(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedSfixed64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSfixed64(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedSfixed64String=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeSfixed64String(a,b[c])};\njspb.BinaryWriter.prototype.writeRepeatedFloat=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFloat(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedDouble=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeDouble(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedBool=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeBool(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedEnum=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeEnum(a,b[c])};\njspb.BinaryWriter.prototype.writeRepeatedString=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeString(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedBytes=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeBytes(a,b[c])};jspb.BinaryWriter.prototype.writeRepeatedMessage=function(a,b,c){if(null!=b)for(var d=0;d<b.length;d++){var e=this.beginDelimited_(a);c(b[d],this);this.endDelimited_(e)}};\njspb.BinaryWriter.prototype.writeRepeatedGroup=function(a,b,c){if(null!=b)for(var d=0;d<b.length;d++)this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.START_GROUP),c(b[d],this),this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.END_GROUP)};jspb.BinaryWriter.prototype.writeRepeatedFixedHash64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeFixedHash64(a,b[c])};\njspb.BinaryWriter.prototype.writeRepeatedVarintHash64=function(a,b){if(null!=b)for(var c=0;c<b.length;c++)this.writeVarintHash64(a,b[c])};jspb.BinaryWriter.prototype.writePackedInt32=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeSignedVarint32(b[d]);this.endDelimited_(c)}};\njspb.BinaryWriter.prototype.writePackedInt32String=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeSignedVarint32(parseInt(b[d],10));this.endDelimited_(c)}};jspb.BinaryWriter.prototype.writePackedInt64=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeSignedVarint64(b[d]);this.endDelimited_(c)}};\njspb.BinaryWriter.prototype.writePackedInt64String=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++){var e=jspb.arith.Int64.fromString(b[d]);this.encoder_.writeSplitVarint64(e.lo,e.hi)}this.endDelimited_(c)}};jspb.BinaryWriter.prototype.writePackedUint32=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeUnsignedVarint32(b[d]);this.endDelimited_(c)}};\njspb.BinaryWriter.prototype.writePackedUint32String=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeUnsignedVarint32(parseInt(b[d],10));this.endDelimited_(c)}};jspb.BinaryWriter.prototype.writePackedUint64=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeUnsignedVarint64(b[d]);this.endDelimited_(c)}};\njspb.BinaryWriter.prototype.writePackedUint64String=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++){var e=jspb.arith.UInt64.fromString(b[d]);this.encoder_.writeSplitVarint64(e.lo,e.hi)}this.endDelimited_(c)}};jspb.BinaryWriter.prototype.writePackedSint32=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeZigzagVarint32(b[d]);this.endDelimited_(c)}};\njspb.BinaryWriter.prototype.writePackedSint64=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeZigzagVarint64(b[d]);this.endDelimited_(c)}};jspb.BinaryWriter.prototype.writePackedSint64String=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeZigzagVarint64(parseInt(b[d],10));this.endDelimited_(c)}};\njspb.BinaryWriter.prototype.writePackedFixed32=function(a,b){if(null!=b&&b.length){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(4*b.length);for(var c=0;c<b.length;c++)this.encoder_.writeUint32(b[c])}};jspb.BinaryWriter.prototype.writePackedFixed64=function(a,b){if(null!=b&&b.length){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(8*b.length);for(var c=0;c<b.length;c++)this.encoder_.writeUint64(b[c])}};\njspb.BinaryWriter.prototype.writePackedFixed64String=function(a,b){if(null!=b&&b.length){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(8*b.length);for(var c=0;c<b.length;c++){var d=jspb.arith.UInt64.fromString(b[c]);this.encoder_.writeSplitFixed64(d.lo,d.hi)}}};\njspb.BinaryWriter.prototype.writePackedSfixed32=function(a,b){if(null!=b&&b.length){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(4*b.length);for(var c=0;c<b.length;c++)this.encoder_.writeInt32(b[c])}};jspb.BinaryWriter.prototype.writePackedSfixed64=function(a,b){if(null!=b&&b.length){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(8*b.length);for(var c=0;c<b.length;c++)this.encoder_.writeInt64(b[c])}};\njspb.BinaryWriter.prototype.writePackedSfixed64String=function(a,b){if(null!=b&&b.length){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(8*b.length);for(var c=0;c<b.length;c++)this.encoder_.writeInt64String(b[c])}};jspb.BinaryWriter.prototype.writePackedFloat=function(a,b){if(null!=b&&b.length){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(4*b.length);for(var c=0;c<b.length;c++)this.encoder_.writeFloat(b[c])}};\njspb.BinaryWriter.prototype.writePackedDouble=function(a,b){if(null!=b&&b.length){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(8*b.length);for(var c=0;c<b.length;c++)this.encoder_.writeDouble(b[c])}};jspb.BinaryWriter.prototype.writePackedBool=function(a,b){if(null!=b&&b.length){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(b.length);for(var c=0;c<b.length;c++)this.encoder_.writeBool(b[c])}};\njspb.BinaryWriter.prototype.writePackedEnum=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeEnum(b[d]);this.endDelimited_(c)}};jspb.BinaryWriter.prototype.writePackedFixedHash64=function(a,b){if(null!=b&&b.length){this.writeFieldHeader_(a,jspb.BinaryConstants.WireType.DELIMITED);this.encoder_.writeUnsignedVarint32(8*b.length);for(var c=0;c<b.length;c++)this.encoder_.writeFixedHash64(b[c])}};\njspb.BinaryWriter.prototype.writePackedVarintHash64=function(a,b){if(null!=b&&b.length){for(var c=this.beginDelimited_(a),d=0;d<b.length;d++)this.encoder_.writeVarintHash64(b[d]);this.endDelimited_(c)}};jspb.BinaryIterator=function(a,b,c){this.elements_=this.nextMethod_=this.decoder_=null;this.cursor_=0;this.nextValue_=null;this.atEnd_=!0;this.init_(a,b,c)};jspb.BinaryIterator.prototype.init_=function(a,b,c){a&&b&&(this.decoder_=a,this.nextMethod_=b);this.elements_=c||null;this.cursor_=0;this.nextValue_=null;this.atEnd_=!this.decoder_&&!this.elements_;this.next()};jspb.BinaryIterator.instanceCache_=[];\njspb.BinaryIterator.alloc=function(a,b,c){if(jspb.BinaryIterator.instanceCache_.length){var d=jspb.BinaryIterator.instanceCache_.pop();d.init_(a,b,c);return d}return new jspb.BinaryIterator(a,b,c)};jspb.BinaryIterator.prototype.free=function(){this.clear();100>jspb.BinaryIterator.instanceCache_.length&&jspb.BinaryIterator.instanceCache_.push(this)};\njspb.BinaryIterator.prototype.clear=function(){this.decoder_&&this.decoder_.free();this.elements_=this.nextMethod_=this.decoder_=null;this.cursor_=0;this.nextValue_=null;this.atEnd_=!0};jspb.BinaryIterator.prototype.get=function(){return this.nextValue_};jspb.BinaryIterator.prototype.atEnd=function(){return this.atEnd_};\njspb.BinaryIterator.prototype.next=function(){var a=this.nextValue_;this.decoder_?this.decoder_.atEnd()?(this.nextValue_=null,this.atEnd_=!0):this.nextValue_=this.nextMethod_.call(this.decoder_):this.elements_&&(this.cursor_==this.elements_.length?(this.nextValue_=null,this.atEnd_=!0):this.nextValue_=this.elements_[this.cursor_++]);return a};jspb.BinaryDecoder=function(a,b,c){this.bytes_=null;this.tempHigh_=this.tempLow_=this.cursor_=this.end_=this.start_=0;this.error_=!1;a&&this.setBlock(a,b,c)};\njspb.BinaryDecoder.instanceCache_=[];jspb.BinaryDecoder.alloc=function(a,b,c){if(jspb.BinaryDecoder.instanceCache_.length){var d=jspb.BinaryDecoder.instanceCache_.pop();a&&d.setBlock(a,b,c);return d}return new jspb.BinaryDecoder(a,b,c)};jspb.BinaryDecoder.prototype.free=function(){this.clear();100>jspb.BinaryDecoder.instanceCache_.length&&jspb.BinaryDecoder.instanceCache_.push(this)};jspb.BinaryDecoder.prototype.clone=function(){return jspb.BinaryDecoder.alloc(this.bytes_,this.start_,this.end_-this.start_)};\njspb.BinaryDecoder.prototype.clear=function(){this.bytes_=null;this.cursor_=this.end_=this.start_=0;this.error_=!1};jspb.BinaryDecoder.prototype.getBuffer=function(){return this.bytes_};jspb.BinaryDecoder.prototype.setBlock=function(a,b,c){this.bytes_=jspb.utils.byteSourceToUint8Array(a);this.start_=goog.isDef(b)?b:0;this.end_=goog.isDef(c)?this.start_+c:this.bytes_.length;this.cursor_=this.start_};jspb.BinaryDecoder.prototype.getEnd=function(){return this.end_};\njspb.BinaryDecoder.prototype.setEnd=function(a){this.end_=a};jspb.BinaryDecoder.prototype.reset=function(){this.cursor_=this.start_};jspb.BinaryDecoder.prototype.getCursor=function(){return this.cursor_};jspb.BinaryDecoder.prototype.setCursor=function(a){this.cursor_=a};jspb.BinaryDecoder.prototype.advance=function(a){this.cursor_+=a;goog.asserts.assert(this.cursor_<=this.end_)};jspb.BinaryDecoder.prototype.atEnd=function(){return this.cursor_==this.end_};\njspb.BinaryDecoder.prototype.pastEnd=function(){return this.cursor_>this.end_};jspb.BinaryDecoder.prototype.getError=function(){return this.error_||0>this.cursor_||this.cursor_>this.end_};\njspb.BinaryDecoder.prototype.readSplitVarint64_=function(){for(var a,b=0,c,d=0;4>d;d++)if(a=this.bytes_[this.cursor_++],b|=(a&127)<<7*d,128>a){this.tempLow_=b>>>0;this.tempHigh_=0;return}a=this.bytes_[this.cursor_++];b|=(a&127)<<28;c=0|(a&127)>>4;if(128>a)this.tempLow_=b>>>0,this.tempHigh_=c>>>0;else{for(d=0;5>d;d++)if(a=this.bytes_[this.cursor_++],c|=(a&127)<<7*d+3,128>a){this.tempLow_=b>>>0;this.tempHigh_=c>>>0;return}goog.asserts.fail(\"Failed to read varint, encoding is invalid.\");this.error_=\n!0}};jspb.BinaryDecoder.prototype.skipVarint=function(){for(;this.bytes_[this.cursor_]&128;)this.cursor_++;this.cursor_++};jspb.BinaryDecoder.prototype.unskipVarint=function(a){for(;128<a;)this.cursor_--,a>>>=7;this.cursor_--};\njspb.BinaryDecoder.prototype.readUnsignedVarint32=function(){var a,b=this.bytes_;a=b[this.cursor_+0];var c=a&127;if(128>a)return this.cursor_+=1,goog.asserts.assert(this.cursor_<=this.end_),c;a=b[this.cursor_+1];c|=(a&127)<<7;if(128>a)return this.cursor_+=2,goog.asserts.assert(this.cursor_<=this.end_),c;a=b[this.cursor_+2];c|=(a&127)<<14;if(128>a)return this.cursor_+=3,goog.asserts.assert(this.cursor_<=this.end_),c;a=b[this.cursor_+3];c|=(a&127)<<21;if(128>a)return this.cursor_+=4,goog.asserts.assert(this.cursor_<=\nthis.end_),c;a=b[this.cursor_+4];c|=(a&15)<<28;if(128>a)return this.cursor_+=5,goog.asserts.assert(this.cursor_<=this.end_),c>>>0;this.cursor_+=5;128<=b[this.cursor_++]&&128<=b[this.cursor_++]&&128<=b[this.cursor_++]&&128<=b[this.cursor_++]&&128<=b[this.cursor_++]&&goog.asserts.assert(!1);goog.asserts.assert(this.cursor_<=this.end_);return c};jspb.BinaryDecoder.prototype.readSignedVarint32=jspb.BinaryDecoder.prototype.readUnsignedVarint32;jspb.BinaryDecoder.prototype.readUnsignedVarint32String=function(){return this.readUnsignedVarint32().toString()};\njspb.BinaryDecoder.prototype.readSignedVarint32String=function(){return this.readSignedVarint32().toString()};jspb.BinaryDecoder.prototype.readZigzagVarint32=function(){var a=this.readUnsignedVarint32();return a>>>1^-(a&1)};jspb.BinaryDecoder.prototype.readUnsignedVarint64=function(){this.readSplitVarint64_();return jspb.utils.joinUint64(this.tempLow_,this.tempHigh_)};\njspb.BinaryDecoder.prototype.readUnsignedVarint64String=function(){this.readSplitVarint64_();return jspb.utils.joinUnsignedDecimalString(this.tempLow_,this.tempHigh_)};jspb.BinaryDecoder.prototype.readSignedVarint64=function(){this.readSplitVarint64_();return jspb.utils.joinInt64(this.tempLow_,this.tempHigh_)};jspb.BinaryDecoder.prototype.readSignedVarint64String=function(){this.readSplitVarint64_();return jspb.utils.joinSignedDecimalString(this.tempLow_,this.tempHigh_)};\njspb.BinaryDecoder.prototype.readZigzagVarint64=function(){this.readSplitVarint64_();return jspb.utils.joinZigzag64(this.tempLow_,this.tempHigh_)};jspb.BinaryDecoder.prototype.readZigzagVarint64String=function(){return this.readZigzagVarint64().toString()};jspb.BinaryDecoder.prototype.readUint8=function(){var a=this.bytes_[this.cursor_+0];this.cursor_+=1;goog.asserts.assert(this.cursor_<=this.end_);return a};\njspb.BinaryDecoder.prototype.readUint16=function(){var a=this.bytes_[this.cursor_+0],b=this.bytes_[this.cursor_+1];this.cursor_+=2;goog.asserts.assert(this.cursor_<=this.end_);return a<<0|b<<8};jspb.BinaryDecoder.prototype.readUint32=function(){var a=this.bytes_[this.cursor_+0],b=this.bytes_[this.cursor_+1],c=this.bytes_[this.cursor_+2],d=this.bytes_[this.cursor_+3];this.cursor_+=4;goog.asserts.assert(this.cursor_<=this.end_);return(a<<0|b<<8|c<<16|d<<24)>>>0};\njspb.BinaryDecoder.prototype.readUint64=function(){var a=this.readUint32(),b=this.readUint32();return jspb.utils.joinUint64(a,b)};jspb.BinaryDecoder.prototype.readUint64String=function(){var a=this.readUint32(),b=this.readUint32();return jspb.utils.joinUnsignedDecimalString(a,b)};jspb.BinaryDecoder.prototype.readInt8=function(){var a=this.bytes_[this.cursor_+0];this.cursor_+=1;goog.asserts.assert(this.cursor_<=this.end_);return a<<24>>24};\njspb.BinaryDecoder.prototype.readInt16=function(){var a=this.bytes_[this.cursor_+0],b=this.bytes_[this.cursor_+1];this.cursor_+=2;goog.asserts.assert(this.cursor_<=this.end_);return(a<<0|b<<8)<<16>>16};jspb.BinaryDecoder.prototype.readInt32=function(){var a=this.bytes_[this.cursor_+0],b=this.bytes_[this.cursor_+1],c=this.bytes_[this.cursor_+2],d=this.bytes_[this.cursor_+3];this.cursor_+=4;goog.asserts.assert(this.cursor_<=this.end_);return a<<0|b<<8|c<<16|d<<24};\njspb.BinaryDecoder.prototype.readInt64=function(){var a=this.readUint32(),b=this.readUint32();return jspb.utils.joinInt64(a,b)};jspb.BinaryDecoder.prototype.readInt64String=function(){var a=this.readUint32(),b=this.readUint32();return jspb.utils.joinSignedDecimalString(a,b)};jspb.BinaryDecoder.prototype.readFloat=function(){var a=this.readUint32();return jspb.utils.joinFloat32(a,0)};\njspb.BinaryDecoder.prototype.readDouble=function(){var a=this.readUint32(),b=this.readUint32();return jspb.utils.joinFloat64(a,b)};jspb.BinaryDecoder.prototype.readBool=function(){return!!this.bytes_[this.cursor_++]};jspb.BinaryDecoder.prototype.readEnum=function(){return this.readSignedVarint32()};\njspb.BinaryDecoder.prototype.readString=function(a){var b=this.bytes_,c=this.cursor_;a=c+a;for(var d=[],e=\"\";c<a;){var f=b[c++];if(128>f)d.push(f);else if(192>f)continue;else if(224>f){var g=b[c++];d.push((f&31)<<6|g&63)}else if(240>f){var g=b[c++],h=b[c++];d.push((f&15)<<12|(g&63)<<6|h&63)}else if(248>f){var g=b[c++],h=b[c++],k=b[c++],f=(f&7)<<18|(g&63)<<12|(h&63)<<6|k&63,f=f-65536;d.push((f>>10&1023)+55296,(f&1023)+56320)}8192<=d.length&&(e+=String.fromCharCode.apply(null,d),d.length=0)}e+=goog.crypt.byteArrayToString(d);\nthis.cursor_=c;return e};jspb.BinaryDecoder.prototype.readStringWithLength=function(){var a=this.readUnsignedVarint32();return this.readString(a)};jspb.BinaryDecoder.prototype.readBytes=function(a){if(0>a||this.cursor_+a>this.bytes_.length)return this.error_=!0,goog.asserts.fail(\"Invalid byte length!\"),new Uint8Array(0);var b=this.bytes_.subarray(this.cursor_,this.cursor_+a);this.cursor_+=a;goog.asserts.assert(this.cursor_<=this.end_);return b};\njspb.BinaryDecoder.prototype.readVarintHash64=function(){this.readSplitVarint64_();return jspb.utils.joinHash64(this.tempLow_,this.tempHigh_)};jspb.BinaryDecoder.prototype.readFixedHash64=function(){var a=this.bytes_,b=this.cursor_,c=a[b+0],d=a[b+1],e=a[b+2],f=a[b+3],g=a[b+4],h=a[b+5],k=a[b+6],a=a[b+7];this.cursor_+=8;return String.fromCharCode(c,d,e,f,g,h,k,a)};jspb.BinaryReader=function(a,b,c){this.decoder_=jspb.BinaryDecoder.alloc(a,b,c);this.fieldCursor_=this.decoder_.getCursor();this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER;this.nextWireType_=jspb.BinaryConstants.WireType.INVALID;this.error_=!1;this.readCallbacks_=null};jspb.BinaryReader.instanceCache_=[];\njspb.BinaryReader.alloc=function(a,b,c){if(jspb.BinaryReader.instanceCache_.length){var d=jspb.BinaryReader.instanceCache_.pop();a&&d.decoder_.setBlock(a,b,c);return d}return new jspb.BinaryReader(a,b,c)};jspb.BinaryReader.prototype.alloc=jspb.BinaryReader.alloc;\njspb.BinaryReader.prototype.free=function(){this.decoder_.clear();this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER;this.nextWireType_=jspb.BinaryConstants.WireType.INVALID;this.error_=!1;this.readCallbacks_=null;100>jspb.BinaryReader.instanceCache_.length&&jspb.BinaryReader.instanceCache_.push(this)};jspb.BinaryReader.prototype.getFieldCursor=function(){return this.fieldCursor_};jspb.BinaryReader.prototype.getCursor=function(){return this.decoder_.getCursor()};\njspb.BinaryReader.prototype.getBuffer=function(){return this.decoder_.getBuffer()};jspb.BinaryReader.prototype.getFieldNumber=function(){return this.nextField_};jspb.BinaryReader.prototype.getWireType=function(){return this.nextWireType_};jspb.BinaryReader.prototype.isEndGroup=function(){return this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP};jspb.BinaryReader.prototype.getError=function(){return this.error_||this.decoder_.getError()};\njspb.BinaryReader.prototype.setBlock=function(a,b,c){this.decoder_.setBlock(a,b,c);this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER;this.nextWireType_=jspb.BinaryConstants.WireType.INVALID};jspb.BinaryReader.prototype.reset=function(){this.decoder_.reset();this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER;this.nextWireType_=jspb.BinaryConstants.WireType.INVALID};jspb.BinaryReader.prototype.advance=function(a){this.decoder_.advance(a)};\njspb.BinaryReader.prototype.nextField=function(){if(this.decoder_.atEnd())return!1;if(this.getError())return goog.asserts.fail(\"Decoder hit an error\"),!1;this.fieldCursor_=this.decoder_.getCursor();var a=this.decoder_.readUnsignedVarint32(),b=a>>>3,a=a&7;if(a!=jspb.BinaryConstants.WireType.VARINT&&a!=jspb.BinaryConstants.WireType.FIXED32&&a!=jspb.BinaryConstants.WireType.FIXED64&&a!=jspb.BinaryConstants.WireType.DELIMITED&&a!=jspb.BinaryConstants.WireType.START_GROUP&&a!=jspb.BinaryConstants.WireType.END_GROUP)return goog.asserts.fail(\"Invalid wire type\"),\nthis.error_=!0,!1;this.nextField_=b;this.nextWireType_=a;return!0};jspb.BinaryReader.prototype.unskipHeader=function(){this.decoder_.unskipVarint(this.nextField_<<3|this.nextWireType_)};jspb.BinaryReader.prototype.skipMatchingFields=function(){var a=this.nextField_;for(this.unskipHeader();this.nextField()&&this.getFieldNumber()==a;)this.skipField();this.decoder_.atEnd()||this.unskipHeader()};\njspb.BinaryReader.prototype.skipVarintField=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.VARINT?(goog.asserts.fail(\"Invalid wire type for skipVarintField\"),this.skipField()):this.decoder_.skipVarint()};jspb.BinaryReader.prototype.skipDelimitedField=function(){if(this.nextWireType_!=jspb.BinaryConstants.WireType.DELIMITED)goog.asserts.fail(\"Invalid wire type for skipDelimitedField\"),this.skipField();else{var a=this.decoder_.readUnsignedVarint32();this.decoder_.advance(a)}};\njspb.BinaryReader.prototype.skipFixed32Field=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.FIXED32?(goog.asserts.fail(\"Invalid wire type for skipFixed32Field\"),this.skipField()):this.decoder_.advance(4)};jspb.BinaryReader.prototype.skipFixed64Field=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.FIXED64?(goog.asserts.fail(\"Invalid wire type for skipFixed64Field\"),this.skipField()):this.decoder_.advance(8)};\njspb.BinaryReader.prototype.skipGroup=function(){var a=[this.nextField_];do{if(!this.nextField()){goog.asserts.fail(\"Unmatched start-group tag: stream EOF\");this.error_=!0;break}if(this.nextWireType_==jspb.BinaryConstants.WireType.START_GROUP)a.push(this.nextField_);else if(this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP&&this.nextField_!=a.pop()){goog.asserts.fail(\"Unmatched end-group tag\");this.error_=!0;break}}while(0<a.length)};\njspb.BinaryReader.prototype.skipField=function(){switch(this.nextWireType_){case jspb.BinaryConstants.WireType.VARINT:this.skipVarintField();break;case jspb.BinaryConstants.WireType.FIXED64:this.skipFixed64Field();break;case jspb.BinaryConstants.WireType.DELIMITED:this.skipDelimitedField();break;case jspb.BinaryConstants.WireType.FIXED32:this.skipFixed32Field();break;case jspb.BinaryConstants.WireType.START_GROUP:this.skipGroup();break;default:goog.asserts.fail(\"Invalid wire encoding for field.\")}};\njspb.BinaryReader.prototype.registerReadCallback=function(a,b){goog.isNull(this.readCallbacks_)&&(this.readCallbacks_={});goog.asserts.assert(!this.readCallbacks_[a]);this.readCallbacks_[a]=b};jspb.BinaryReader.prototype.runReadCallback=function(a){goog.asserts.assert(!goog.isNull(this.readCallbacks_));a=this.readCallbacks_[a];goog.asserts.assert(a);return a(this)};\njspb.BinaryReader.prototype.readAny=function(a){this.nextWireType_=jspb.BinaryConstants.FieldTypeToWireType(a);var b=jspb.BinaryConstants.FieldType;switch(a){case b.DOUBLE:return this.readDouble();case b.FLOAT:return this.readFloat();case b.INT64:return this.readInt64();case b.UINT64:return this.readUint64();case b.INT32:return this.readInt32();case b.FIXED64:return this.readFixed64();case b.FIXED32:return this.readFixed32();case b.BOOL:return this.readBool();case b.STRING:return this.readString();\ncase b.GROUP:goog.asserts.fail(\"Group field type not supported in readAny()\");case b.MESSAGE:goog.asserts.fail(\"Message field type not supported in readAny()\");case b.BYTES:return this.readBytes();case b.UINT32:return this.readUint32();case b.ENUM:return this.readEnum();case b.SFIXED32:return this.readSfixed32();case b.SFIXED64:return this.readSfixed64();case b.SINT32:return this.readSint32();case b.SINT64:return this.readSint64();case b.FHASH64:return this.readFixedHash64();case b.VHASH64:return this.readVarintHash64();\ndefault:goog.asserts.fail(\"Invalid field type in readAny()\")}return 0};jspb.BinaryReader.prototype.readMessage=function(a,b){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var c=this.decoder_.getEnd(),d=this.decoder_.readUnsignedVarint32(),d=this.decoder_.getCursor()+d;this.decoder_.setEnd(d);b(a,this);this.decoder_.setCursor(d);this.decoder_.setEnd(c)};\njspb.BinaryReader.prototype.readGroup=function(a,b,c){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.START_GROUP);goog.asserts.assert(this.nextField_==a);c(b,this);this.error_||this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP||(goog.asserts.fail(\"Group submessage did not end with an END_GROUP tag\"),this.error_=!0)};\njspb.BinaryReader.prototype.getFieldDecoder=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var a=this.decoder_.readUnsignedVarint32(),b=this.decoder_.getCursor(),c=b+a,a=jspb.BinaryDecoder.alloc(this.decoder_.getBuffer(),b,a);this.decoder_.setCursor(c);return a};jspb.BinaryReader.prototype.readInt32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint32()};\njspb.BinaryReader.prototype.readInt32String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint32String()};jspb.BinaryReader.prototype.readInt64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint64()};jspb.BinaryReader.prototype.readInt64String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint64String()};\njspb.BinaryReader.prototype.readUint32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readUnsignedVarint32()};jspb.BinaryReader.prototype.readUint32String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readUnsignedVarint32String()};jspb.BinaryReader.prototype.readUint64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readUnsignedVarint64()};\njspb.BinaryReader.prototype.readUint64String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readUnsignedVarint64String()};jspb.BinaryReader.prototype.readSint32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readZigzagVarint32()};jspb.BinaryReader.prototype.readSint64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readZigzagVarint64()};\njspb.BinaryReader.prototype.readSint64String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readZigzagVarint64String()};jspb.BinaryReader.prototype.readFixed32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32);return this.decoder_.readUint32()};jspb.BinaryReader.prototype.readFixed64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readUint64()};\njspb.BinaryReader.prototype.readFixed64String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readUint64String()};jspb.BinaryReader.prototype.readSfixed32=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32);return this.decoder_.readInt32()};jspb.BinaryReader.prototype.readSfixed32String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32);return this.decoder_.readInt32().toString()};\njspb.BinaryReader.prototype.readSfixed64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readInt64()};jspb.BinaryReader.prototype.readSfixed64String=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readInt64String()};jspb.BinaryReader.prototype.readFloat=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32);return this.decoder_.readFloat()};\njspb.BinaryReader.prototype.readDouble=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readDouble()};jspb.BinaryReader.prototype.readBool=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return!!this.decoder_.readUnsignedVarint32()};jspb.BinaryReader.prototype.readEnum=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readSignedVarint64()};\njspb.BinaryReader.prototype.readString=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var a=this.decoder_.readUnsignedVarint32();return this.decoder_.readString(a)};jspb.BinaryReader.prototype.readBytes=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var a=this.decoder_.readUnsignedVarint32();return this.decoder_.readBytes(a)};\njspb.BinaryReader.prototype.readVarintHash64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT);return this.decoder_.readVarintHash64()};jspb.BinaryReader.prototype.readFixedHash64=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64);return this.decoder_.readFixedHash64()};\njspb.BinaryReader.prototype.readPackedField_=function(a){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);for(var b=this.decoder_.readUnsignedVarint32(),b=this.decoder_.getCursor()+b,c=[];this.decoder_.getCursor()<b;)c.push(a.call(this.decoder_));return c};jspb.BinaryReader.prototype.readPackedInt32=function(){return this.readPackedField_(this.decoder_.readSignedVarint32)};jspb.BinaryReader.prototype.readPackedInt32String=function(){return this.readPackedField_(this.decoder_.readSignedVarint32String)};\njspb.BinaryReader.prototype.readPackedInt64=function(){return this.readPackedField_(this.decoder_.readSignedVarint64)};jspb.BinaryReader.prototype.readPackedInt64String=function(){return this.readPackedField_(this.decoder_.readSignedVarint64String)};jspb.BinaryReader.prototype.readPackedUint32=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint32)};jspb.BinaryReader.prototype.readPackedUint32String=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint32String)};\njspb.BinaryReader.prototype.readPackedUint64=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint64)};jspb.BinaryReader.prototype.readPackedUint64String=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint64String)};jspb.BinaryReader.prototype.readPackedSint32=function(){return this.readPackedField_(this.decoder_.readZigzagVarint32)};jspb.BinaryReader.prototype.readPackedSint64=function(){return this.readPackedField_(this.decoder_.readZigzagVarint64)};\njspb.BinaryReader.prototype.readPackedSint64String=function(){return this.readPackedField_(this.decoder_.readZigzagVarint64String)};jspb.BinaryReader.prototype.readPackedFixed32=function(){return this.readPackedField_(this.decoder_.readUint32)};jspb.BinaryReader.prototype.readPackedFixed64=function(){return this.readPackedField_(this.decoder_.readUint64)};jspb.BinaryReader.prototype.readPackedFixed64String=function(){return this.readPackedField_(this.decoder_.readUint64String)};\njspb.BinaryReader.prototype.readPackedSfixed32=function(){return this.readPackedField_(this.decoder_.readInt32)};jspb.BinaryReader.prototype.readPackedSfixed64=function(){return this.readPackedField_(this.decoder_.readInt64)};jspb.BinaryReader.prototype.readPackedSfixed64String=function(){return this.readPackedField_(this.decoder_.readInt64String)};jspb.BinaryReader.prototype.readPackedFloat=function(){return this.readPackedField_(this.decoder_.readFloat)};\njspb.BinaryReader.prototype.readPackedDouble=function(){return this.readPackedField_(this.decoder_.readDouble)};jspb.BinaryReader.prototype.readPackedBool=function(){return this.readPackedField_(this.decoder_.readBool)};jspb.BinaryReader.prototype.readPackedEnum=function(){return this.readPackedField_(this.decoder_.readEnum)};jspb.BinaryReader.prototype.readPackedVarintHash64=function(){return this.readPackedField_(this.decoder_.readVarintHash64)};\njspb.BinaryReader.prototype.readPackedFixedHash64=function(){return this.readPackedField_(this.decoder_.readFixedHash64)};jspb.Export={};exports.Map=jspb.Map;exports.Message=jspb.Message;exports.BinaryReader=jspb.BinaryReader;exports.BinaryWriter=jspb.BinaryWriter;exports.ExtensionFieldInfo=jspb.ExtensionFieldInfo;exports.ExtensionFieldBinaryInfo=jspb.ExtensionFieldBinaryInfo;exports.exportSymbol=goog.exportSymbol;exports.inherits=goog.inherits;exports.object={extend:goog.object.extend};exports.typeOf=goog.typeOf;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","const {ADDRESS_PREFIX, ADDRESS_PREFIX_BYTE} = require(\"./address\");\nconst base64EncodeToString = require(\"../lib/code\").base64EncodeToString;\nconst {base64DecodeFromString, hexStr2byteArray} = require(\"../lib/code\");\nconst {encode58, decode58} = require(\"../lib/base58\");\nconst EC = require('elliptic').ec;\nconst { keccak256 } = require('js-sha3');\nconst jsSHA = require(\"../lib/sha256\");\nconst ADDRESS_SIZE = require(\"./address\").ADDRESS_SIZE;\nconst { byte2hexStr, byteArray2hexStr } = require(\"./bytes\");\n\n/**\n * Sign A Transaction by priKey.\n * signature is 65 bytes, r[32] || s[32] || id[1](<27)\n * @returns  a Transaction object signed\n * @param priKeyBytes: privateKey for ECC\n * @param transaction: a Transaction object unSigned\n */\nfunction signTransaction(priKeyBytes, transaction) {\n  if (typeof priKeyBytes === 'string') {\n    priKeyBytes = hexStr2byteArray(priKeyBytes);\n  }\n\n  let raw = transaction.getRawData();\n  let rawBytes = raw.serializeBinary();\n  let hashBytes = SHA256(rawBytes);\n  let signBytes = ECKeySign(hashBytes, priKeyBytes);\n  let uint8Array = new Uint8Array(signBytes);\n  let count = raw.getContractList().length;\n  for (let i = 0; i < count; i++) {\n    transaction.addSignature(uint8Array);\n  }\n  return transaction;\n}\n\nfunction arrayToBase64String(a) {\n  return btoa(String.fromCharCode(...a));\n}\n\nfunction signBytes(privateKey, contents) {\n\n  if (typeof privateKey === 'string') {\n    privateKey = hexStr2byteArray(privateKey);\n  }\n\n  let hashBytes = SHA256(contents);\n  return ECKeySign(hashBytes, privateKey);\n}\n\n//return bytes of rowdata, use to sign.\nfunction getRowBytesFromTransactionBase64(base64Data) {\n  let bytesDecode = base64DecodeFromString(base64Data);\n  let transaction = proto.protocol.Transaction.deserializeBinary(bytesDecode);\n  let raw = transaction.getRawData();\n  return raw.serializeBinary();\n}\n\n//gen Ecc priKey for bytes\nfunction genPriKey() {\n  let ec = new EC('secp256k1');\n  let key = ec.genKeyPair();\n  let priKey = key.getPrivate();\n  let priKeyHex = priKey.toString('hex');\n  while (priKeyHex.length < 64) {\n    priKeyHex = \"0\" + priKeyHex;\n  }\n\n  return hexStr2byteArray(priKeyHex);\n}\n\n//return address by bytes, pubBytes is byte[]\nfunction computeAddress(pubBytes) {\n  if (pubBytes.length === 65) {\n    pubBytes = pubBytes.slice(1);\n  }\n\n  var hash = keccak256(pubBytes).toString();\n  var addressHex = hash.substring(24);\n  addressHex = ADDRESS_PREFIX + addressHex;\n  return hexStr2byteArray(addressHex);\n}\n\n//return address by bytes, priKeyBytes is byte[]\nfunction getAddressFromPriKey(priKeyBytes) {\n  let pubBytes = getPubKeyFromPriKey(priKeyBytes);\n  return computeAddress(pubBytes);\n}\n\n//return address by Base58Check String,\nfunction getBase58CheckAddress(addressBytes) {\n  var hash0 = SHA256(addressBytes);\n  var hash1 = SHA256(hash0);\n  var checkSum = hash1.slice(0, 4);\n  checkSum = addressBytes.concat(checkSum);\n  return encode58(checkSum);\n}\n\nfunction decode58Check(addressStr) {\n\n  let decodeCheck = decode58(addressStr);\n  if (decodeCheck.length <= 4) {\n    console.error(\"ERROR CHECK\");\n    return null;\n  }\n\n  var decodeData = decodeCheck.slice(0, decodeCheck.length - 4);\n  var hash0 = SHA256(decodeData);\n  var hash1 = SHA256(hash0);\n\n  if (hash1[0] === decodeCheck[decodeData.length] &&\n    hash1[1] === decodeCheck[decodeData.length + 1] &&\n    hash1[2] === decodeCheck[decodeData.length + 2] &&\n    hash1[3] === decodeCheck[decodeData.length + 3]) {\n    return decodeData;\n  }\n\n  return null;\n}\n\nfunction isAddressValid(base58Str) {\n  if (typeof(base58Str) !== 'string') {\n    return false;\n  }\n  if (base58Str.length !== ADDRESS_SIZE) {\n    return false;\n  }\n  var address = decode58(base58Str);\n\n  if (address.length !== 25) {\n    return false;\n  }\n  if (address[0] !== ADDRESS_PREFIX_BYTE) {\n    return false;\n  }\n  var checkSum = address.slice(21);\n  address = address.slice(0, 21);\n  var hash0 = SHA256(address);\n  var hash1 = SHA256(hash0);\n  var checkSum1 = hash1.slice(0, 4);\n  if (checkSum[0] == checkSum1[0] && checkSum[1] == checkSum1[1] && checkSum[2]\n      == checkSum1[2] && checkSum[3] == checkSum1[3]\n  ) {\n    return true\n  }\n  return false;\n}\n\n//return address by Base58Check String, priKeyBytes is base64String\nfunction getBase58CheckAddressFromPriKeyBase64String(priKeyBase64String) {\n  var priKeyBytes = base64DecodeFromString(priKeyBase64String);\n  var pubBytes = getPubKeyFromPriKey(priKeyBytes);\n  var addressBytes = computeAddress(pubBytes);\n  return getBase58CheckAddress(addressBytes);\n}\n\n//return address by String, priKeyBytes is base64String\nfunction getHexStrAddressFromPriKeyBase64String(priKeyBase64String) {\n  let priKeyBytes = base64DecodeFromString(priKeyBase64String);\n  let pubBytes = getPubKeyFromPriKey(priKeyBytes);\n  let addressBytes = computeAddress(pubBytes);\n  let addressHex = byteArray2hexStr(addressBytes);\n  return addressHex;\n}\n//return address by String, priKeyBytes is base64String\nfunction getAddressFromPriKeyBase64String(priKeyBase64String) {\n  let priKeyBytes = base64DecodeFromString(priKeyBase64String);\n  let pubBytes = getPubKeyFromPriKey(priKeyBytes);\n  let addressBytes = computeAddress(pubBytes);\n  let addressBase64 = base64EncodeToString(addressBytes);\n  return addressBase64;\n}\n\n//return pubkey by 65 bytes, priKeyBytes is byte[]\nfunction getPubKeyFromPriKey(priKeyBytes) {\n  var ec = new EC('secp256k1');\n  var key = ec.keyFromPrivate(priKeyBytes, 'bytes');\n  var pubkey = key.getPublic();\n  var x = pubkey.x;\n  var y = pubkey.y;\n  var xHex = x.toString('hex');\n  while (xHex.length < 64) {\n    xHex = \"0\" + xHex;\n  }\n  var yHex = y.toString('hex');\n  while (yHex.length < 64) {\n    yHex = \"0\" + yHex;\n  }\n  var pubkeyHex = \"04\" + xHex + yHex;\n  var pubkeyBytes = hexStr2byteArray(pubkeyHex);\n  return pubkeyBytes;\n}\n\n//return sign by 65 bytes r s id. id < 27\nfunction ECKeySign(hashBytes, priKeyBytes) {\n  let ec = new EC('secp256k1');\n  let key = ec.keyFromPrivate(priKeyBytes, 'bytes');\n  let signature = key.sign(hashBytes);\n  let r = signature.r;\n  let s = signature.s;\n  let id = signature.recoveryParam;\n\n  let rHex = r.toString('hex');\n  while (rHex.length < 64) {\n    rHex = \"0\" + rHex;\n  }\n  let sHex = s.toString('hex');\n  while (sHex.length < 64) {\n    sHex = \"0\" + sHex;\n  }\n  let idHex = byte2hexStr(id);\n  let signHex = rHex + sHex + idHex;\n  return hexStr2byteArray(signHex);\n}\n\n//toDO:\n//return 32 bytes\nfunction SHA256(msgBytes) {\n  let shaObj = new jsSHA(\"SHA-256\", \"HEX\");\n  let msgHex = byteArray2hexStr(msgBytes);\n  shaObj.update(msgHex);\n  let hashHex = shaObj.getHash(\"HEX\");\n  return hexStr2byteArray(hashHex);\n}\n\nfunction passwordToAddress(password) {\n  let com_priKeyBytes = base64DecodeFromString(password);\n  let com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n  return getBase58CheckAddress(com_addressBytes);\n}\n\nfunction pkToAddress(privateKey) {\n  let com_priKeyBytes = hexStr2byteArray(privateKey);\n  let com_addressBytes = getAddressFromPriKey(com_priKeyBytes);\n  return getBase58CheckAddress(com_addressBytes);\n}\n\nmodule.exports = {\n  signTransaction,\n  passwordToAddress,\n  genPriKey,\n  getAddressFromPriKey,\n  getPubKeyFromPriKey,\n  getBase58CheckAddress,\n  isAddressValid,\n  getBase58CheckAddressFromPriKeyBase64String,\n  pkToAddress,\n  decode58Check,\n  signBytes,\n  SHA256\n};\n","/* eslint-disable */\nfunction bin2String(array) {\n  return String.fromCharCode.apply(String, array);\n}\n\n//比较两个byteArray是否相等\nfunction arrayEquals(array1, array2) {\n  if (array1.length != array2.length) {\n    return false;\n  }\n  var i;\n  for (i = 0; i < array1.length; i++) {\n    if (array1[i] != array2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n//从base64字符串中解析TransAction对象\nfunction getTransActionFromBase64String(base64String) {\n  var bytesDecode = base64DecodeFromString(base64String);\n  var transaction = proto.protocol.Transaction.deserializeBinary(bytesDecode);\n  //ToDo : ret is success\n  return transaction;\n}\n\n//Return a list contains contract object\n//从TransAction对象中获得合约列表\nfunction getContractListFromTransaction(transaction) {\n  var raw = transaction.getRawData();\n  var type = raw.getType();\n  if (type != 1) {\n    layer.alert(\"Invalid transaction type !!!!\" + type);\n    return null;\n  }\n  var contractList = raw.getContractList();\n  var count = contractList.length;\n  if (count == 0) {\n    layer.alert(\"No contract !!!!\");\n    return null;\n  }\n\n  array = new Array(count);\n  var unpack = proto.google.protobuf.Any.prototype.unpack;\n  while (count > 0) {\n    count--;\n    var oneContract = contractList[count];\n    var any = oneContract.getParameter();\n    var contarcType = oneContract.getType();\n    var obje;\n    switch (contarcType) {\n      case proto.protocol.Transaction.Contract.ContractType.ACCOUNTCREATECONTRACT:\n        obje = any.unpack(\n            proto.protocol.AccountCreateContract.deserializeBinary,\n            \"protocol.AccountCreateContract\");\n        break;\n\n      case proto.protocol.Transaction.Contract.ContractType.TRANSFERCONTRACT:\n        obje = any.unpack(\n            proto.protocol.TransferContract.deserializeBinary,\n            \"protocol.TransferContract\");\n        break;\n\n      case proto.protocol.Transaction.Contract.ContractType.TRANSFERASSETCONTRACT:\n        obje = any.unpack(\n            proto.protocol.TransferAsstContract.deserializeBinary,\n            \"protocol.TransferAssetContract\");\n        break;\n\n      case proto.protocol.Transaction.Contract.ContractType.VOTEASSETCONTRACT:\n        obje = any.unpack(\n            proto.protocol.VoteAssetContract.deserializeBinary,\n            \"protocol.VoteAssetContract\");\n        break;\n\n      case proto.protocol.Transaction.Contract.ContractType.VOTEWITNESSCONTRACT:\n        obje = any.unpack(\n            proto.protocol.VoteWitnessContract.deserializeBinary,\n            \"protocol.VoteWitnessContract\");\n        break;\n\n      case proto.protocol.Transaction.Contract.ContractType.WITNESSCREATECONTRACT:\n        obje = any.unpack(\n            proto.protocol.WitnessCreateContract.deserializeBinary,\n            \"protocol.WitnessCreateContract\");\n        break;\n\n      case proto.protocol.Transaction.Contract.ContractType.ASSETISSUECONTRACT:\n        obje = any.unpack(\n            proto.protocol.AssetIssueContract.deserializeBinary,\n            \"protocol.AssetIssueContract\");\n        break;\n\n      case proto.protocol.Transaction.Contract.ContractType.DEPLOYCONTRACT:\n        obje = any.unpack(\n            proto.protocol.DeployContract.deserializeBinary,\n            \"protocol.DeployContract\");\n        break;\n\n      case proto.protocol.Transaction.Contract.ContractType.WITNESSUPDATECONTRACT:\n        obje = any.unpack(\n            proto.protocol.WitnessUpdateContract.deserializeBinary,\n            \"protocol.WitnessUpdateContract\");\n        break;\n    }\n    array[count] = obje;\n  }\n  return array;\n}\n\n//字符串转byteArray数据格式\nfunction stringToBytes(str) {\n  var bytes = new Array();\n  var len, c;\n  len = str.length;\n  for (var i = 0; i < len; i++) {\n    c = str.charCodeAt(i);\n    if (c >= 0x010000 && c <= 0x10FFFF) {\n      bytes.push(((c >> 18) & 0x07) | 0xF0);\n      bytes.push(((c >> 12) & 0x3F) | 0x80);\n      bytes.push(((c >> 6) & 0x3F) | 0x80);\n      bytes.push((c & 0x3F) | 0x80);\n    } else if (c >= 0x000800 && c <= 0x00FFFF) {\n      bytes.push(((c >> 12) & 0x0F) | 0xE0);\n      bytes.push(((c >> 6) & 0x3F) | 0x80);\n      bytes.push((c & 0x3F) | 0x80);\n    } else if (c >= 0x000080 && c <= 0x0007FF) {\n      bytes.push(((c >> 6) & 0x1F) | 0xC0);\n      bytes.push((c & 0x3F) | 0x80);\n    } else {\n      bytes.push(c & 0xFF);\n    }\n  }\n  return bytes;\n\n}\n\n//byteArray数据格式转字符串\nfunction bytesToString(arr) {\n  if (typeof arr === 'string') {\n    return arr;\n  }\n  var str = '',\n      _arr = arr;\n  for (var i = 0; i < _arr.length; i++) {\n    var one = _arr[i].toString(2),\n        v = one.match(/^1+?(?=0)/);\n    if (v && one.length == 8) {\n      var bytesLength = v[0].length;\n      var store = _arr[i].toString(2).slice(7 - bytesLength);\n      for (var st = 1; st < bytesLength; st++) {\n        store += _arr[st + i].toString(2).slice(2);\n      }\n      str += String.fromCharCode(parseInt(store, 2));\n      i += bytesLength - 1;\n    } else {\n      str += String.fromCharCode(_arr[i]);\n    }\n  }\n  return str;\n}\n\nfunction hextoString(hex) {\n  var arr = hex.split(\"\")\n  var out = \"\"\n  for (var i = 0; i < arr.length / 2; i++) {\n    var tmp = \"0x\" + arr[i * 2] + arr[i * 2 + 1]\n    var charValue = String.fromCharCode(tmp);\n    out += charValue\n  }\n  return out\n}\n\n/* Convert a hex char to value */\nfunction hexChar2byte(c) {\n  var d = 0;\n  if (c >= 'A' && c <= 'F') {\n    d = c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n  }\n  else if (c >= 'a' && c <= 'f') {\n    d = c.charCodeAt(0) - 'a'.charCodeAt(0) + 10;\n  }\n  else if (c >= '0' && c <= '9') {\n    d = c.charCodeAt(0) - '0'.charCodeAt(0);\n  }\n  return d;\n}\n\n/* Check if a char is hex char */\nfunction isHexChar(c) {\n  if ((c >= 'A' && c <= 'F') ||\n      (c >= 'a' && c <= 'f') ||\n      (c >= '0' && c <= '9')) {\n    return 1;\n  }\n  return 0;\n}\n\n/* Convert HEX string to byte array */\n\n//16进制的ASCII字符串转为byteArray格式。\nfunction hexStr2byteArray(str) {\n  var byteArray = Array();\n  var d = 0;\n  var j = 0;\n  var k = 0;\n\n  for (let i = 0; i < str.length; i++) {\n    var c = str.charAt(i);\n    if (isHexChar(c)) {\n      d <<= 4;\n      d += hexChar2byte(c);\n      j++;\n      if (0 === (j % 2)) {\n        byteArray[k++] = d;\n        d = 0;\n      }\n    }\n  }\n  return byteArray;\n}\n\n\n/* Convert a byte to string */\nfunction byte2hexStr(byte) {\n  var hexByteMap = \"0123456789ABCDEF\";\n  var str = \"\";\n  str += hexByteMap.charAt(byte >> 4);\n  str += hexByteMap.charAt(byte & 0x0f);\n  return str;\n}\n\n/* Convert byte arry to HEX string */\n\n//byteArray格式数据转为16进制的ASCII字符串。\nfunction byteArray2hexStr(byteArray) {\n  var str = \"\";\n  for (var i = 0; i < (byteArray.length - 1); i++) {\n    str += byte2hexStr(byteArray[i]);\n  }\n  str += byte2hexStr(byteArray[i]);\n  return str;\n}\n\n//从base64字符串中解码出原文，格式为byteArray格式\nfunction base64DecodeFromString(string64) {\n  var b = new Base64();\n  var decodeBytes = b.decodeToByteArray(string64);\n  return decodeBytes;\n}\n\n//return baset64 String\n//将byteArray格式数据编码为base64字符串\nfunction base64EncodeToString(bytes) {\n  // var string = bytesToString(bytes);\n  var b = new Base64();\n  var string64 = b.encodeIgnoreUtf8(bytes);\n  return string64\n}\n\nfunction Base64() {\n\n  // private property\n  let _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  // public method for encoding\n  this.encode = function (input) {\n    var output = \"\";\n    var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n    var i = 0;\n//    input = _utf8_encode(input);\n    while (i < input.length) {\n      chr1 = input.charCodeAt(i++);\n      chr2 = input.charCodeAt(i++);\n      chr3 = input.charCodeAt(i++);\n      enc1 = chr1 >> 2;\n      enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n      enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n      enc4 = chr3 & 63;\n      if (isNaN(chr2)) {\n        enc3 = enc4 = 64;\n      } else if (isNaN(chr3)) {\n        enc4 = 64;\n      }\n      output = output +\n          _keyStr.charAt(enc1) + _keyStr.charAt(enc2) +\n          _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\n    }\n    return output;\n  }\n\n  // public method for encoding\n  this.encodeIgnoreUtf8 = function (inputBytes) {\n    var output = \"\";\n    var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n    var i = 0;\n//    input = _utf8_encode(input);\n    while (i < inputBytes.length) {\n      chr1 = inputBytes[i++];\n      chr2 = inputBytes[i++];\n      chr3 = inputBytes[i++];\n      enc1 = chr1 >> 2;\n      enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n      enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n      enc4 = chr3 & 63;\n      if (isNaN(chr2)) {\n        enc3 = enc4 = 64;\n      } else if (isNaN(chr3)) {\n        enc4 = 64;\n      }\n      output = output +\n          _keyStr.charAt(enc1) + _keyStr.charAt(enc2) +\n          _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\n    }\n    return output;\n  }\n\n  // public method for decoding\n  this.decode = function (input) {\n    var output = \"\";\n    var chr1, chr2, chr3;\n    var enc1, enc2, enc3, enc4;\n    var i = 0;\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n    while (i < input.length) {\n      enc1 = _keyStr.indexOf(input.charAt(i++));\n      enc2 = _keyStr.indexOf(input.charAt(i++));\n      enc3 = _keyStr.indexOf(input.charAt(i++));\n      enc4 = _keyStr.indexOf(input.charAt(i++));\n      chr1 = (enc1 << 2) | (enc2 >> 4);\n      chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n      chr3 = ((enc3 & 3) << 6) | enc4;\n      output = output + String.fromCharCode(chr1);\n      if (enc3 != 64) {\n        output = output + String.fromCharCode(chr2);\n      }\n      if (enc4 != 64) {\n        output = output + String.fromCharCode(chr3);\n      }\n    }\n    output = this._utf8_decode(output);\n    return output;\n  }\n\n  // public method for decoding\n  this.decodeToByteArray = function (input) {\n    var output = \"\";\n    var chr1, chr2, chr3;\n    var enc1, enc2, enc3, enc4;\n    var i = 0;\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n    while (i < input.length) {\n      enc1 = _keyStr.indexOf(input.charAt(i++));\n      enc2 = _keyStr.indexOf(input.charAt(i++));\n      enc3 = _keyStr.indexOf(input.charAt(i++));\n      enc4 = _keyStr.indexOf(input.charAt(i++));\n      chr1 = (enc1 << 2) | (enc2 >> 4);\n      chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n      chr3 = ((enc3 & 3) << 6) | enc4;\n      output = output + String.fromCharCode(chr1);\n      if (enc3 != 64) {\n        output = output + String.fromCharCode(chr2);\n      }\n      if (enc4 != 64) {\n        output = output + String.fromCharCode(chr3);\n      }\n    }\n    var outBytes = this._out2ByteArray(output);\n    return outBytes;\n  };\n\n  // private method for UTF-8 decoding\n  this._out2ByteArray = function (utftext) {\n    let byteArray = new Array(utftext.length)\n    let i = 0;\n    let c = 0;\n    let c1 = 0;\n    let c2 = 0;\n    while (i < utftext.length) {\n      c = utftext.charCodeAt(i);\n      byteArray[i] = c;\n      i++;\n    }\n    return byteArray;\n  };\n\n  // private method for UTF-8 encoding\n  this._utf8_encode = function (string) {\n    string = string.replace(/\\r\\n/g, \"\\n\");\n    var utftext = \"\";\n    for (var n = 0; n < string.length; n++) {\n      var c = string.charCodeAt(n);\n      if (c < 128) {\n        utftext += String.fromCharCode(c);\n      } else if ((c > 127) && (c < 2048)) {\n        utftext += String.fromCharCode((c >> 6) | 192);\n        utftext += String.fromCharCode((c & 63) | 128);\n      } else {\n        utftext += String.fromCharCode((c >> 12) | 224);\n        utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n        utftext += String.fromCharCode((c & 63) | 128);\n      }\n\n    }\n    return utftext;\n  }\n\n  // private method for UTF-8 decoding\n  this._utf8_decode = function (utftext) {\n    var string = \"\";\n    var i = 0;\n    var c = c1 = c2 = 0;\n    while (i < utftext.length) {\n      c = utftext.charCodeAt(i);\n      if (c < 128) {\n        string += String.fromCharCode(c);\n        i++;\n      } else if ((c > 191) && (c < 224)) {\n        c2 = utftext.charCodeAt(i + 1);\n        string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n        i += 2;\n      } else {\n        c2 = utftext.charCodeAt(i + 1);\n        c3 = utftext.charCodeAt(i + 2);\n        string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3\n            & 63));\n        i += 3;\n      }\n    }\n    return string;\n  }\n}\n\n//yyyy-MM-DD HH-mm-ss\nfunction strToDate(str) {\n  var tempStrs = str.split(\" \");\n  var dateStrs = tempStrs[0].split(\"-\");\n  var year = parseInt(dateStrs[0], 10);\n  var month = parseInt(dateStrs[1], 10) - 1;\n  var day = parseInt(dateStrs[2], 10);\n  if (tempStrs.length > 1) {\n    var timeStrs = tempStrs[1].split(\"-\");\n    var hour = parseInt(timeStrs [0], 10);\n    var minute = parseInt(timeStrs[1], 10) - 1;\n    var second = parseInt(timeStrs[2], 10);\n    return new Date(year, month, day, hour, minute, second);\n  }\n\n  return new Date(year, month, day);\n}\n\nfunction isNumber(c) {\n  if (c >= '0' && c <= '9') {\n    return 1;\n  }\n  return 0;\n}\n\n//return 1: address  --- 20Bytes HexString\n//return 2: blockNumber ------ Decimal number\n//return 3: assetName ------ String\n//return other: error\nfunction getStringType(str) {\n  if (null == str) {\n    return -1;\n  }\n\n  if (typeof(str) != 'string') {\n    return -1;\n  }\n\n  if (str.length == 0 || str == \"\") {\n    return -1;\n  }\n\n  var i = 0;\n  if (str.length == 40) {\n    for (; i < 40; i++) {\n      var c = str.charAt(i);\n      if (!isHexChar(c)) {\n        break;\n      }\n    }\n  }\n  if (i == 40) {\n    return 1;  //40 Hex, Address\n  }\n\n  for (i = 0; i < str.length; i++) {\n    var c = str.charAt(i);\n    if (!isNumber(c)) {\n      break;\n    }\n  }\n  if (i == str.length) {\n    return 2;  //Alll Decimal number, BlockNumber\n  }\n\n  for (i = 0; i < str.length; i++) {\n    var c = str.charAt(i);\n    if (c > ' ') {\n      return 3;   //At least one visible character\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = {\n  base64EncodeToString,\n  base64DecodeFromString,\n  hexStr2byteArray,\n  stringToBytes,\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","module.exports = function(module) {\r\n\tif (!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif (!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n","var md5 = require('create-hash/md5')\nvar rmd160 = require('ripemd160')\nvar sha = require('sha.js')\n\nvar checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar Buffer = require('safe-buffer').Buffer\nvar ZEROS = Buffer.alloc(128)\nvar sizes = {\n  md5: 16,\n  sha1: 20,\n  sha224: 28,\n  sha256: 32,\n  sha384: 48,\n  sha512: 64,\n  rmd160: 20,\n  ripemd160: 20\n}\n\nfunction Hmac (alg, key, saltLen) {\n  var hash = getDigest(alg)\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  if (key.length > blocksize) {\n    key = hash(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)\n  ipad.copy(ipad1, 0, 0, blocksize)\n  this.ipad1 = ipad1\n  this.ipad2 = ipad\n  this.opad = opad\n  this.alg = alg\n  this.blocksize = blocksize\n  this.hash = hash\n  this.size = sizes[alg]\n}\n\nHmac.prototype.run = function (data, ipad) {\n  data.copy(ipad, this.blocksize)\n  var h = this.hash(ipad)\n  h.copy(this.opad, this.blocksize)\n  return this.hash(this.opad)\n}\n\nfunction getDigest (alg) {\n  function shaFunc (data) {\n    return sha(alg).update(data).digest()\n  }\n\n  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160\n  if (alg === 'md5') return md5\n  return shaFunc\n}\n\nfunction pbkdf2 (password, salt, iterations, keylen, digest) {\n  checkParameters(password, salt, iterations, keylen)\n\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)\n  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)\n\n  digest = digest || 'sha1'\n\n  var hmac = new Hmac(digest, password, salt.length)\n\n  var DK = Buffer.allocUnsafe(keylen)\n  var block1 = Buffer.allocUnsafe(salt.length + 4)\n  salt.copy(block1, 0, 0, salt.length)\n\n  var destPos = 0\n  var hLen = sizes[digest]\n  var l = Math.ceil(keylen / hLen)\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length)\n\n    var T = hmac.run(block1, hmac.ipad1)\n    var U = T\n\n    for (var j = 1; j < iterations; j++) {\n      U = hmac.run(U, hmac.ipad2)\n      for (var k = 0; k < hLen; k++) T[k] ^= U[k]\n    }\n\n    T.copy(DK, destPos)\n    destPos += hLen\n  }\n\n  return DK\n}\n\nmodule.exports = pbkdf2\n","var defaultEncoding\n/* istanbul ignore next */\nif (process.browser) {\n  defaultEncoding = 'utf-8'\n} else {\n  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)\n\n  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'\n}\nmodule.exports = defaultEncoding\n","var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs\n\nfunction checkBuffer (buf, name) {\n  if (typeof buf !== 'string' && !Buffer.isBuffer(buf)) {\n    throw new TypeError(name + ' must be a buffer or string')\n  }\n}\n\nmodule.exports = function (password, salt, iterations, keylen) {\n  checkBuffer(password, 'Password')\n  checkBuffer(salt, 'Salt')\n\n  if (typeof iterations !== 'number') {\n    throw new TypeError('Iterations not a number')\n  }\n\n  if (iterations < 0) {\n    throw new TypeError('Bad iterations')\n  }\n\n  if (typeof keylen !== 'number') {\n    throw new TypeError('Key length not a number')\n  }\n\n  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */\n    throw new TypeError('Bad key length')\n  }\n}\n","var inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._ah = 0x6a09e667\n  this._bh = 0xbb67ae85\n  this._ch = 0x3c6ef372\n  this._dh = 0xa54ff53a\n  this._eh = 0x510e527f\n  this._fh = 0x9b05688c\n  this._gh = 0x1f83d9ab\n  this._hh = 0x5be0cd19\n\n  this._al = 0xf3bcc908\n  this._bl = 0x84caa73b\n  this._cl = 0xfe94f82b\n  this._dl = 0x5f1d36f1\n  this._el = 0xade682d1\n  this._fl = 0x2b3e6c1f\n  this._gl = 0xfb41bd6b\n  this._hl = 0x137e2179\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nfunction getCarry (a, b) {\n  return (a >>> 0) < (b >>> 0) ? 1 : 0\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var ah = this._ah | 0\n  var bh = this._bh | 0\n  var ch = this._ch | 0\n  var dh = this._dh | 0\n  var eh = this._eh | 0\n  var fh = this._fh | 0\n  var gh = this._gh | 0\n  var hh = this._hh | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  for (var i = 0; i < 32; i += 2) {\n    W[i] = M.readInt32BE(i * 4)\n    W[i + 1] = M.readInt32BE(i * 4 + 4)\n  }\n  for (; i < 160; i += 2) {\n    var xh = W[i - 15 * 2]\n    var xl = W[i - 15 * 2 + 1]\n    var gamma0 = Gamma0(xh, xl)\n    var gamma0l = Gamma0l(xl, xh)\n\n    xh = W[i - 2 * 2]\n    xl = W[i - 2 * 2 + 1]\n    var gamma1 = Gamma1(xh, xl)\n    var gamma1l = Gamma1l(xl, xh)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7h = W[i - 7 * 2]\n    var Wi7l = W[i - 7 * 2 + 1]\n\n    var Wi16h = W[i - 16 * 2]\n    var Wi16l = W[i - 16 * 2 + 1]\n\n    var Wil = (gamma0l + Wi7l) | 0\n    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0\n    Wil = (Wil + gamma1l) | 0\n    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0\n    Wil = (Wil + Wi16l) | 0\n    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0\n\n    W[i] = Wih\n    W[i + 1] = Wil\n  }\n\n  for (var j = 0; j < 160; j += 2) {\n    Wih = W[j]\n    Wil = W[j + 1]\n\n    var majh = maj(ah, bh, ch)\n    var majl = maj(al, bl, cl)\n\n    var sigma0h = sigma0(ah, al)\n    var sigma0l = sigma0(al, ah)\n    var sigma1h = sigma1(eh, el)\n    var sigma1l = sigma1(el, eh)\n\n    // t1 = h + sigma1 + ch + K[j] + W[j]\n    var Kih = K[j]\n    var Kil = K[j + 1]\n\n    var chh = Ch(eh, fh, gh)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = (hl + sigma1l) | 0\n    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0\n    t1l = (t1l + chl) | 0\n    t1h = (t1h + chh + getCarry(t1l, chl)) | 0\n    t1l = (t1l + Kil) | 0\n    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0\n    t1l = (t1l + Wil) | 0\n    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0\n\n    // t2 = sigma0 + maj\n    var t2l = (sigma0l + majl) | 0\n    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0\n\n    hh = gh\n    hl = gl\n    gh = fh\n    gl = fl\n    fh = eh\n    fl = el\n    el = (dl + t1l) | 0\n    eh = (dh + t1h + getCarry(el, dl)) | 0\n    dh = ch\n    dl = cl\n    ch = bh\n    cl = bl\n    bh = ah\n    bl = al\n    al = (t1l + t2l) | 0\n    ah = (t1h + t2h + getCarry(al, t1l)) | 0\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0\n  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0\n  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0\n  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0\n  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0\n  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0\n  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0\n  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n  writeInt64BE(this._gh, this._gl, 48)\n  writeInt64BE(this._hh, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n","var exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')\n\n  return new Algorithm()\n}\n\nexports.sha = require('./sha')\nexports.sha1 = require('./sha1')\nexports.sha224 = require('./sha224')\nexports.sha256 = require('./sha256')\nexports.sha384 = require('./sha384')\nexports.sha512 = require('./sha512')\n","'use strict'\nvar Buffer = require('buffer').Buffer\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\n\nvar ARRAY16 = new Array(16)\n\nvar zl = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]\n\nvar zr = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]\n\nvar sl = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]\n\nvar sr = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]\n\nvar hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]\nvar hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]\n\nfunction RIPEMD160 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n}\n\ninherits(RIPEMD160, HashBase)\n\nRIPEMD160.prototype._update = function () {\n  var words = ARRAY16\n  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)\n\n  var al = this._a | 0\n  var bl = this._b | 0\n  var cl = this._c | 0\n  var dl = this._d | 0\n  var el = this._e | 0\n\n  var ar = this._a | 0\n  var br = this._b | 0\n  var cr = this._c | 0\n  var dr = this._d | 0\n  var er = this._e | 0\n\n  // computation\n  for (var i = 0; i < 80; i += 1) {\n    var tl\n    var tr\n    if (i < 16) {\n      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])\n      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])\n    } else if (i < 32) {\n      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])\n      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])\n    } else if (i < 48) {\n      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])\n      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])\n    } else if (i < 64) {\n      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])\n      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])\n    } else { // if (i<80) {\n      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])\n      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])\n    }\n\n    al = el\n    el = dl\n    dl = rotl(cl, 10)\n    cl = bl\n    bl = tl\n\n    ar = er\n    er = dr\n    dr = rotl(cr, 10)\n    cr = br\n    br = tr\n  }\n\n  // update state\n  var t = (this._b + cl + dr) | 0\n  this._b = (this._c + dl + er) | 0\n  this._c = (this._d + el + ar) | 0\n  this._d = (this._e + al + br) | 0\n  this._e = (this._a + bl + cr) | 0\n  this._a = t\n}\n\nRIPEMD160.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  buffer.writeInt32LE(this._e, 16)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fn1 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn2 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn3 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn4 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn5 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0\n}\n\nmodule.exports = RIPEMD160\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","module.exports = require('events').EventEmitter;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar inherits = require('inherits')\n\nfunction throwIfNotStringOrBuffer (val, prefix) {\n  if (!Buffer.isBuffer(val) && typeof val !== 'string') {\n    throw new TypeError(prefix + ' must be a string or a buffer')\n  }\n}\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  throwIfNotStringOrBuffer(data, 'Data')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n","'use strict'\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\n\nvar ARRAY16 = new Array(16)\n\nfunction MD5 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n}\n\ninherits(MD5, HashBase)\n\nMD5.prototype._update = function () {\n  var M = ARRAY16\n  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)\n\n  var a = this._a\n  var b = this._b\n  var c = this._c\n  var d = this._d\n\n  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)\n  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)\n  c = fnF(c, d, a, b, M[2], 0x242070db, 17)\n  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)\n  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)\n  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)\n  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)\n  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)\n  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)\n  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)\n  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)\n  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)\n  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)\n  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)\n  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)\n  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)\n\n  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)\n  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)\n  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)\n  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)\n  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)\n  d = fnG(d, a, b, c, M[10], 0x02441453, 9)\n  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)\n  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)\n  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)\n  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)\n  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)\n  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)\n  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)\n  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)\n  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)\n  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)\n\n  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)\n  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)\n  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)\n  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)\n  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)\n  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)\n  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)\n  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)\n  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)\n  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)\n  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)\n  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)\n  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)\n  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)\n  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)\n  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)\n\n  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)\n  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)\n  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)\n  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)\n  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)\n  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)\n  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)\n  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)\n  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)\n  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)\n  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)\n  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)\n  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)\n  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)\n  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)\n  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)\n\n  this._a = (this._a + a) | 0\n  this._b = (this._b + b) | 0\n  this._c = (this._c + c) | 0\n  this._d = (this._d + d) | 0\n}\n\nMD5.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = new Buffer(16)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fnF (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnG (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnH (a, b, c, d, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnI (a, b, c, d, m, k, s) {\n  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0\n}\n\nmodule.exports = MD5\n","/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar core_Tron_pb = require('../core/Tron_pb.js');\nvar core_Contract_pb = require('../core/Contract_pb.js');\n//var google_api_annotations_pb = require('../google/api/annotations_pb.js');\ngoog.exportSymbol('proto.protocol.AccountNetMessage', null, global);\ngoog.exportSymbol('proto.protocol.AccountPaginated', null, global);\ngoog.exportSymbol('proto.protocol.Address', null, global);\ngoog.exportSymbol('proto.protocol.AssetIssueList', null, global);\ngoog.exportSymbol('proto.protocol.BlockLimit', null, global);\ngoog.exportSymbol('proto.protocol.BlockList', null, global);\ngoog.exportSymbol('proto.protocol.BlockReference', null, global);\ngoog.exportSymbol('proto.protocol.BytesMessage', null, global);\ngoog.exportSymbol('proto.protocol.EmptyMessage', null, global);\ngoog.exportSymbol('proto.protocol.Node', null, global);\ngoog.exportSymbol('proto.protocol.NodeList', null, global);\ngoog.exportSymbol('proto.protocol.NumberMessage', null, global);\ngoog.exportSymbol('proto.protocol.Return', null, global);\ngoog.exportSymbol('proto.protocol.Return.response_code', null, global);\ngoog.exportSymbol('proto.protocol.TimeMessage', null, global);\ngoog.exportSymbol('proto.protocol.TimePaginatedMessage', null, global);\ngoog.exportSymbol('proto.protocol.TransactionLimit', null, global);\ngoog.exportSymbol('proto.protocol.TransactionList', null, global);\ngoog.exportSymbol('proto.protocol.WitnessList', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.Return = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.Return, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.Return.displayName = 'proto.protocol.Return';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.Return.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.Return.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.Return} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Return.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    result: jspb.Message.getFieldWithDefault(msg, 1, false),\n    code: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    message: msg.getMessage_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.Return}\n */\nproto.protocol.Return.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.Return;\n  return proto.protocol.Return.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.Return} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.Return}\n */\nproto.protocol.Return.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setResult(value);\n      break;\n    case 2:\n      var value = /** @type {!proto.protocol.Return.response_code} */ (reader.readEnum());\n      msg.setCode(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.Return.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.Return.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.Return} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Return.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getResult();\n  if (f) {\n    writer.writeBool(\n      1,\n      f\n    );\n  }\n  f = message.getCode();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      2,\n      f\n    );\n  }\n  f = message.getMessage_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * @enum {number}\n */\nproto.protocol.Return.response_code = {\n  SUCCESS: 0,\n  SIGERROR: 1,\n  CONTRACT_VALIDATE_ERROR: 2,\n  CONTRACT_EXE_ERROR: 3,\n  BANDWITH_ERROR: 4,\n  DUP_TRANSACTION_ERROR: 5,\n  TAPOS_ERROR: 6,\n  TOO_BIG_TRANSACTION_ERROR: 7,\n  TRANSACTION_EXPIRATION_ERROR: 8,\n  SERVER_BUSY: 9,\n  OTHER_ERROR: 20\n};\n\n/**\n * optional bool result = 1;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.protocol.Return.prototype.getResult = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));\n};\n\n\n/** @param {boolean} value */\nproto.protocol.Return.prototype.setResult = function(value) {\n  jspb.Message.setProto3BooleanField(this, 1, value);\n};\n\n\n/**\n * optional response_code code = 2;\n * @return {!proto.protocol.Return.response_code}\n */\nproto.protocol.Return.prototype.getCode = function() {\n  return /** @type {!proto.protocol.Return.response_code} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {!proto.protocol.Return.response_code} value */\nproto.protocol.Return.prototype.setCode = function(value) {\n  jspb.Message.setProto3EnumField(this, 2, value);\n};\n\n\n/**\n * optional bytes message = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.Return.prototype.getMessage = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes message = 3;\n * This is a type-conversion wrapper around `getMessage()`\n * @return {string}\n */\nproto.protocol.Return.prototype.getMessage_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getMessage()));\n};\n\n\n/**\n * optional bytes message = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getMessage()`\n * @return {!Uint8Array}\n */\nproto.protocol.Return.prototype.getMessage_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getMessage()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.Return.prototype.setMessage = function(value) {\n  jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.BlockReference = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.BlockReference, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.BlockReference.displayName = 'proto.protocol.BlockReference';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.BlockReference.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.BlockReference.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.BlockReference} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.BlockReference.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    blockNum: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    blockHash: msg.getBlockHash_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.BlockReference}\n */\nproto.protocol.BlockReference.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.BlockReference;\n  return proto.protocol.BlockReference.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.BlockReference} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.BlockReference}\n */\nproto.protocol.BlockReference.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBlockNum(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setBlockHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.BlockReference.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.BlockReference.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.BlockReference} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.BlockReference.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBlockNum();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getBlockHash_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 block_num = 1;\n * @return {number}\n */\nproto.protocol.BlockReference.prototype.getBlockNum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.BlockReference.prototype.setBlockNum = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional bytes block_hash = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.BlockReference.prototype.getBlockHash = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes block_hash = 2;\n * This is a type-conversion wrapper around `getBlockHash()`\n * @return {string}\n */\nproto.protocol.BlockReference.prototype.getBlockHash_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getBlockHash()));\n};\n\n\n/**\n * optional bytes block_hash = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getBlockHash()`\n * @return {!Uint8Array}\n */\nproto.protocol.BlockReference.prototype.getBlockHash_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getBlockHash()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.BlockReference.prototype.setBlockHash = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.WitnessList = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.protocol.WitnessList.repeatedFields_, null);\n};\ngoog.inherits(proto.protocol.WitnessList, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.WitnessList.displayName = 'proto.protocol.WitnessList';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.protocol.WitnessList.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.WitnessList.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.WitnessList.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.WitnessList} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.WitnessList.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    witnessesList: jspb.Message.toObjectList(msg.getWitnessesList(),\n    core_Tron_pb.Witness.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.WitnessList}\n */\nproto.protocol.WitnessList.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.WitnessList;\n  return proto.protocol.WitnessList.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.WitnessList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.WitnessList}\n */\nproto.protocol.WitnessList.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new core_Tron_pb.Witness;\n      reader.readMessage(value,core_Tron_pb.Witness.deserializeBinaryFromReader);\n      msg.addWitnesses(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.WitnessList.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.WitnessList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.WitnessList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.WitnessList.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getWitnessesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      core_Tron_pb.Witness.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Witness witnesses = 1;\n * @return {!Array.<!proto.protocol.Witness>}\n */\nproto.protocol.WitnessList.prototype.getWitnessesList = function() {\n  return /** @type{!Array.<!proto.protocol.Witness>} */ (\n    jspb.Message.getRepeatedWrapperField(this, core_Tron_pb.Witness, 1));\n};\n\n\n/** @param {!Array.<!proto.protocol.Witness>} value */\nproto.protocol.WitnessList.prototype.setWitnessesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.protocol.Witness=} opt_value\n * @param {number=} opt_index\n * @return {!proto.protocol.Witness}\n */\nproto.protocol.WitnessList.prototype.addWitnesses = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protocol.Witness, opt_index);\n};\n\n\nproto.protocol.WitnessList.prototype.clearWitnessesList = function() {\n  this.setWitnessesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.AssetIssueList = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.protocol.AssetIssueList.repeatedFields_, null);\n};\ngoog.inherits(proto.protocol.AssetIssueList, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.AssetIssueList.displayName = 'proto.protocol.AssetIssueList';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.protocol.AssetIssueList.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.AssetIssueList.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.AssetIssueList.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.AssetIssueList} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.AssetIssueList.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    assetissueList: jspb.Message.toObjectList(msg.getAssetissueList(),\n    core_Contract_pb.AssetIssueContract.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.AssetIssueList}\n */\nproto.protocol.AssetIssueList.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.AssetIssueList;\n  return proto.protocol.AssetIssueList.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.AssetIssueList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.AssetIssueList}\n */\nproto.protocol.AssetIssueList.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new core_Contract_pb.AssetIssueContract;\n      reader.readMessage(value,core_Contract_pb.AssetIssueContract.deserializeBinaryFromReader);\n      msg.addAssetissue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.AssetIssueList.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.AssetIssueList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.AssetIssueList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.AssetIssueList.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAssetissueList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      core_Contract_pb.AssetIssueContract.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated AssetIssueContract assetIssue = 1;\n * @return {!Array.<!proto.protocol.AssetIssueContract>}\n */\nproto.protocol.AssetIssueList.prototype.getAssetissueList = function() {\n  return /** @type{!Array.<!proto.protocol.AssetIssueContract>} */ (\n    jspb.Message.getRepeatedWrapperField(this, core_Contract_pb.AssetIssueContract, 1));\n};\n\n\n/** @param {!Array.<!proto.protocol.AssetIssueContract>} value */\nproto.protocol.AssetIssueList.prototype.setAssetissueList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.protocol.AssetIssueContract=} opt_value\n * @param {number=} opt_index\n * @return {!proto.protocol.AssetIssueContract}\n */\nproto.protocol.AssetIssueList.prototype.addAssetissue = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protocol.AssetIssueContract, opt_index);\n};\n\n\nproto.protocol.AssetIssueList.prototype.clearAssetissueList = function() {\n  this.setAssetissueList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.BlockList = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.protocol.BlockList.repeatedFields_, null);\n};\ngoog.inherits(proto.protocol.BlockList, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.BlockList.displayName = 'proto.protocol.BlockList';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.protocol.BlockList.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.BlockList.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.BlockList.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.BlockList} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.BlockList.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    blockList: jspb.Message.toObjectList(msg.getBlockList(),\n    core_Tron_pb.Block.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.BlockList}\n */\nproto.protocol.BlockList.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.BlockList;\n  return proto.protocol.BlockList.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.BlockList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.BlockList}\n */\nproto.protocol.BlockList.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new core_Tron_pb.Block;\n      reader.readMessage(value,core_Tron_pb.Block.deserializeBinaryFromReader);\n      msg.addBlock(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.BlockList.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.BlockList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.BlockList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.BlockList.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBlockList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      core_Tron_pb.Block.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Block block = 1;\n * @return {!Array.<!proto.protocol.Block>}\n */\nproto.protocol.BlockList.prototype.getBlockList = function() {\n  return /** @type{!Array.<!proto.protocol.Block>} */ (\n    jspb.Message.getRepeatedWrapperField(this, core_Tron_pb.Block, 1));\n};\n\n\n/** @param {!Array.<!proto.protocol.Block>} value */\nproto.protocol.BlockList.prototype.setBlockList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.protocol.Block=} opt_value\n * @param {number=} opt_index\n * @return {!proto.protocol.Block}\n */\nproto.protocol.BlockList.prototype.addBlock = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protocol.Block, opt_index);\n};\n\n\nproto.protocol.BlockList.prototype.clearBlockList = function() {\n  this.setBlockList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.TransactionList = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.protocol.TransactionList.repeatedFields_, null);\n};\ngoog.inherits(proto.protocol.TransactionList, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.TransactionList.displayName = 'proto.protocol.TransactionList';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.protocol.TransactionList.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.TransactionList.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.TransactionList.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.TransactionList} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.TransactionList.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    transactionList: jspb.Message.toObjectList(msg.getTransactionList(),\n    core_Tron_pb.Transaction.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.TransactionList}\n */\nproto.protocol.TransactionList.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.TransactionList;\n  return proto.protocol.TransactionList.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.TransactionList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.TransactionList}\n */\nproto.protocol.TransactionList.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new core_Tron_pb.Transaction;\n      reader.readMessage(value,core_Tron_pb.Transaction.deserializeBinaryFromReader);\n      msg.addTransaction(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.TransactionList.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.TransactionList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.TransactionList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.TransactionList.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTransactionList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      core_Tron_pb.Transaction.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Transaction transaction = 1;\n * @return {!Array.<!proto.protocol.Transaction>}\n */\nproto.protocol.TransactionList.prototype.getTransactionList = function() {\n  return /** @type{!Array.<!proto.protocol.Transaction>} */ (\n    jspb.Message.getRepeatedWrapperField(this, core_Tron_pb.Transaction, 1));\n};\n\n\n/** @param {!Array.<!proto.protocol.Transaction>} value */\nproto.protocol.TransactionList.prototype.setTransactionList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.protocol.Transaction=} opt_value\n * @param {number=} opt_index\n * @return {!proto.protocol.Transaction}\n */\nproto.protocol.TransactionList.prototype.addTransaction = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protocol.Transaction, opt_index);\n};\n\n\nproto.protocol.TransactionList.prototype.clearTransactionList = function() {\n  this.setTransactionList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.NodeList = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.protocol.NodeList.repeatedFields_, null);\n};\ngoog.inherits(proto.protocol.NodeList, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.NodeList.displayName = 'proto.protocol.NodeList';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.protocol.NodeList.repeatedFields_ = [1];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.NodeList.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.NodeList.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.NodeList} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.NodeList.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    nodesList: jspb.Message.toObjectList(msg.getNodesList(),\n    proto.protocol.Node.toObject, includeInstance)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.NodeList}\n */\nproto.protocol.NodeList.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.NodeList;\n  return proto.protocol.NodeList.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.NodeList} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.NodeList}\n */\nproto.protocol.NodeList.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.protocol.Node;\n      reader.readMessage(value,proto.protocol.Node.deserializeBinaryFromReader);\n      msg.addNodes(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.NodeList.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.NodeList.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.NodeList} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.NodeList.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNodesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      1,\n      f,\n      proto.protocol.Node.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * repeated Node nodes = 1;\n * @return {!Array.<!proto.protocol.Node>}\n */\nproto.protocol.NodeList.prototype.getNodesList = function() {\n  return /** @type{!Array.<!proto.protocol.Node>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.protocol.Node, 1));\n};\n\n\n/** @param {!Array.<!proto.protocol.Node>} value */\nproto.protocol.NodeList.prototype.setNodesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 1, value);\n};\n\n\n/**\n * @param {!proto.protocol.Node=} opt_value\n * @param {number=} opt_index\n * @return {!proto.protocol.Node}\n */\nproto.protocol.NodeList.prototype.addNodes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protocol.Node, opt_index);\n};\n\n\nproto.protocol.NodeList.prototype.clearNodesList = function() {\n  this.setNodesList([]);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.Node = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.Node, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.Node.displayName = 'proto.protocol.Node';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.Node.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.Node.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.Node} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Node.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: (f = msg.getAddress()) && proto.protocol.Address.toObject(includeInstance, f)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.Node}\n */\nproto.protocol.Node.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.Node;\n  return proto.protocol.Node.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.Node} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.Node}\n */\nproto.protocol.Node.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.protocol.Address;\n      reader.readMessage(value,proto.protocol.Address.deserializeBinaryFromReader);\n      msg.setAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.Node.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.Node.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.Node} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Node.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.protocol.Address.serializeBinaryToWriter\n    );\n  }\n};\n\n\n/**\n * optional Address address = 1;\n * @return {?proto.protocol.Address}\n */\nproto.protocol.Node.prototype.getAddress = function() {\n  return /** @type{?proto.protocol.Address} */ (\n    jspb.Message.getWrapperField(this, proto.protocol.Address, 1));\n};\n\n\n/** @param {?proto.protocol.Address|undefined} value */\nproto.protocol.Node.prototype.setAddress = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.protocol.Node.prototype.clearAddress = function() {\n  this.setAddress(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.protocol.Node.prototype.hasAddress = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.Address = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.Address, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.Address.displayName = 'proto.protocol.Address';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.Address.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.Address.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.Address} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Address.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    host: msg.getHost_asB64(),\n    port: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.Address}\n */\nproto.protocol.Address.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.Address;\n  return proto.protocol.Address.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.Address} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.Address}\n */\nproto.protocol.Address.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setHost(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPort(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.Address.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.Address.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.Address} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Address.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getHost_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getPort();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes host = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.Address.prototype.getHost = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes host = 1;\n * This is a type-conversion wrapper around `getHost()`\n * @return {string}\n */\nproto.protocol.Address.prototype.getHost_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getHost()));\n};\n\n\n/**\n * optional bytes host = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getHost()`\n * @return {!Uint8Array}\n */\nproto.protocol.Address.prototype.getHost_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getHost()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.Address.prototype.setHost = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int32 port = 2;\n * @return {number}\n */\nproto.protocol.Address.prototype.getPort = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.Address.prototype.setPort = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.EmptyMessage = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.EmptyMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.EmptyMessage.displayName = 'proto.protocol.EmptyMessage';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.EmptyMessage.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.EmptyMessage.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.EmptyMessage} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.EmptyMessage.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.EmptyMessage}\n */\nproto.protocol.EmptyMessage.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.EmptyMessage;\n  return proto.protocol.EmptyMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.EmptyMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.EmptyMessage}\n */\nproto.protocol.EmptyMessage.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.EmptyMessage.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.EmptyMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.EmptyMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.EmptyMessage.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.NumberMessage = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.NumberMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.NumberMessage.displayName = 'proto.protocol.NumberMessage';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.NumberMessage.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.NumberMessage.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.NumberMessage} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.NumberMessage.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    num: jspb.Message.getFieldWithDefault(msg, 1, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.NumberMessage}\n */\nproto.protocol.NumberMessage.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.NumberMessage;\n  return proto.protocol.NumberMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.NumberMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.NumberMessage}\n */\nproto.protocol.NumberMessage.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNum(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.NumberMessage.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.NumberMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.NumberMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.NumberMessage.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getNum();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 num = 1;\n * @return {number}\n */\nproto.protocol.NumberMessage.prototype.getNum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.NumberMessage.prototype.setNum = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.BytesMessage = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.BytesMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.BytesMessage.displayName = 'proto.protocol.BytesMessage';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.BytesMessage.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.BytesMessage.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.BytesMessage} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.BytesMessage.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    value: msg.getValue_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.BytesMessage}\n */\nproto.protocol.BytesMessage.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.BytesMessage;\n  return proto.protocol.BytesMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.BytesMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.BytesMessage}\n */\nproto.protocol.BytesMessage.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.BytesMessage.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.BytesMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.BytesMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.BytesMessage.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getValue_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes value = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.BytesMessage.prototype.getValue = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes value = 1;\n * This is a type-conversion wrapper around `getValue()`\n * @return {string}\n */\nproto.protocol.BytesMessage.prototype.getValue_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getValue()));\n};\n\n\n/**\n * optional bytes value = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getValue()`\n * @return {!Uint8Array}\n */\nproto.protocol.BytesMessage.prototype.getValue_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getValue()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.BytesMessage.prototype.setValue = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.TimeMessage = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.TimeMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.TimeMessage.displayName = 'proto.protocol.TimeMessage';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.TimeMessage.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.TimeMessage.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.TimeMessage} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.TimeMessage.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    begininmilliseconds: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    endinmilliseconds: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.TimeMessage}\n */\nproto.protocol.TimeMessage.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.TimeMessage;\n  return proto.protocol.TimeMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.TimeMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.TimeMessage}\n */\nproto.protocol.TimeMessage.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setBegininmilliseconds(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setEndinmilliseconds(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.TimeMessage.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.TimeMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.TimeMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.TimeMessage.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getBegininmilliseconds();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getEndinmilliseconds();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 beginInMilliseconds = 1;\n * @return {number}\n */\nproto.protocol.TimeMessage.prototype.getBegininmilliseconds = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.TimeMessage.prototype.setBegininmilliseconds = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int64 endInMilliseconds = 2;\n * @return {number}\n */\nproto.protocol.TimeMessage.prototype.getEndinmilliseconds = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.TimeMessage.prototype.setEndinmilliseconds = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.BlockLimit = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.BlockLimit, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.BlockLimit.displayName = 'proto.protocol.BlockLimit';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.BlockLimit.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.BlockLimit.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.BlockLimit} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.BlockLimit.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    startnum: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    endnum: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.BlockLimit}\n */\nproto.protocol.BlockLimit.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.BlockLimit;\n  return proto.protocol.BlockLimit.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.BlockLimit} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.BlockLimit}\n */\nproto.protocol.BlockLimit.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setStartnum(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setEndnum(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.BlockLimit.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.BlockLimit.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.BlockLimit} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.BlockLimit.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getStartnum();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getEndnum();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 startNum = 1;\n * @return {number}\n */\nproto.protocol.BlockLimit.prototype.getStartnum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.BlockLimit.prototype.setStartnum = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int64 endNum = 2;\n * @return {number}\n */\nproto.protocol.BlockLimit.prototype.getEndnum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.BlockLimit.prototype.setEndnum = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.TransactionLimit = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.TransactionLimit, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.TransactionLimit.displayName = 'proto.protocol.TransactionLimit';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.TransactionLimit.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.TransactionLimit.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.TransactionLimit} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.TransactionLimit.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    transactionid: msg.getTransactionid_asB64(),\n    limitnum: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.TransactionLimit}\n */\nproto.protocol.TransactionLimit.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.TransactionLimit;\n  return proto.protocol.TransactionLimit.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.TransactionLimit} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.TransactionLimit}\n */\nproto.protocol.TransactionLimit.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTransactionid(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLimitnum(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.TransactionLimit.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.TransactionLimit.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.TransactionLimit} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.TransactionLimit.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTransactionid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getLimitnum();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes transactionId = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.TransactionLimit.prototype.getTransactionid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes transactionId = 1;\n * This is a type-conversion wrapper around `getTransactionid()`\n * @return {string}\n */\nproto.protocol.TransactionLimit.prototype.getTransactionid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTransactionid()));\n};\n\n\n/**\n * optional bytes transactionId = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTransactionid()`\n * @return {!Uint8Array}\n */\nproto.protocol.TransactionLimit.prototype.getTransactionid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTransactionid()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.TransactionLimit.prototype.setTransactionid = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 limitNum = 2;\n * @return {number}\n */\nproto.protocol.TransactionLimit.prototype.getLimitnum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.TransactionLimit.prototype.setLimitnum = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.AccountPaginated = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.AccountPaginated, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.AccountPaginated.displayName = 'proto.protocol.AccountPaginated';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.AccountPaginated.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.AccountPaginated.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.AccountPaginated} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.AccountPaginated.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    account: (f = msg.getAccount()) && core_Tron_pb.Account.toObject(includeInstance, f),\n    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    limit: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.AccountPaginated}\n */\nproto.protocol.AccountPaginated.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.AccountPaginated;\n  return proto.protocol.AccountPaginated.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.AccountPaginated} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.AccountPaginated}\n */\nproto.protocol.AccountPaginated.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new core_Tron_pb.Account;\n      reader.readMessage(value,core_Tron_pb.Account.deserializeBinaryFromReader);\n      msg.setAccount(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setOffset(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLimit(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.AccountPaginated.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.AccountPaginated.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.AccountPaginated} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.AccountPaginated.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAccount();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      core_Tron_pb.Account.serializeBinaryToWriter\n    );\n  }\n  f = message.getOffset();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional Account account = 1;\n * @return {?proto.protocol.Account}\n */\nproto.protocol.AccountPaginated.prototype.getAccount = function() {\n  return /** @type{?proto.protocol.Account} */ (\n    jspb.Message.getWrapperField(this, core_Tron_pb.Account, 1));\n};\n\n\n/** @param {?proto.protocol.Account|undefined} value */\nproto.protocol.AccountPaginated.prototype.setAccount = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.protocol.AccountPaginated.prototype.clearAccount = function() {\n  this.setAccount(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.protocol.AccountPaginated.prototype.hasAccount = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional int64 offset = 2;\n * @return {number}\n */\nproto.protocol.AccountPaginated.prototype.getOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.AccountPaginated.prototype.setOffset = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int64 limit = 3;\n * @return {number}\n */\nproto.protocol.AccountPaginated.prototype.getLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.AccountPaginated.prototype.setLimit = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.TimePaginatedMessage = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.TimePaginatedMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.TimePaginatedMessage.displayName = 'proto.protocol.TimePaginatedMessage';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.TimePaginatedMessage.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.TimePaginatedMessage.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.TimePaginatedMessage} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.TimePaginatedMessage.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    timemessage: (f = msg.getTimemessage()) && proto.protocol.TimeMessage.toObject(includeInstance, f),\n    offset: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    limit: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.TimePaginatedMessage}\n */\nproto.protocol.TimePaginatedMessage.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.TimePaginatedMessage;\n  return proto.protocol.TimePaginatedMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.TimePaginatedMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.TimePaginatedMessage}\n */\nproto.protocol.TimePaginatedMessage.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.protocol.TimeMessage;\n      reader.readMessage(value,proto.protocol.TimeMessage.deserializeBinaryFromReader);\n      msg.setTimemessage(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setOffset(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setLimit(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.TimePaginatedMessage.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.TimePaginatedMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.TimePaginatedMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.TimePaginatedMessage.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTimemessage();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.protocol.TimeMessage.serializeBinaryToWriter\n    );\n  }\n  f = message.getOffset();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional TimeMessage timeMessage = 1;\n * @return {?proto.protocol.TimeMessage}\n */\nproto.protocol.TimePaginatedMessage.prototype.getTimemessage = function() {\n  return /** @type{?proto.protocol.TimeMessage} */ (\n    jspb.Message.getWrapperField(this, proto.protocol.TimeMessage, 1));\n};\n\n\n/** @param {?proto.protocol.TimeMessage|undefined} value */\nproto.protocol.TimePaginatedMessage.prototype.setTimemessage = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.protocol.TimePaginatedMessage.prototype.clearTimemessage = function() {\n  this.setTimemessage(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.protocol.TimePaginatedMessage.prototype.hasTimemessage = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional int64 offset = 2;\n * @return {number}\n */\nproto.protocol.TimePaginatedMessage.prototype.getOffset = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.TimePaginatedMessage.prototype.setOffset = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int64 limit = 3;\n * @return {number}\n */\nproto.protocol.TimePaginatedMessage.prototype.getLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.TimePaginatedMessage.prototype.setLimit = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.AccountNetMessage = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.AccountNetMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.AccountNetMessage.displayName = 'proto.protocol.AccountNetMessage';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.AccountNetMessage.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.AccountNetMessage.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.AccountNetMessage} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.AccountNetMessage.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    freenetused: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    freenetlimit: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    netused: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    netlimit: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    assetnetusedMap: (f = msg.getAssetnetusedMap()) ? f.toObject(includeInstance, undefined) : [],\n    assetnetlimitMap: (f = msg.getAssetnetlimitMap()) ? f.toObject(includeInstance, undefined) : []\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.AccountNetMessage}\n */\nproto.protocol.AccountNetMessage.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.AccountNetMessage;\n  return proto.protocol.AccountNetMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.AccountNetMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.AccountNetMessage}\n */\nproto.protocol.AccountNetMessage.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFreenetused(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFreenetlimit(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNetused(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNetlimit(value);\n      break;\n    case 5:\n      var value = msg.getAssetnetusedMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64);\n         });\n      break;\n    case 6:\n      var value = msg.getAssetnetlimitMap();\n      reader.readMessage(value, function(message, reader) {\n        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readInt64);\n         });\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.AccountNetMessage.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.AccountNetMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.AccountNetMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.AccountNetMessage.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFreenetused();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getFreenetlimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getNetused();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n  f = message.getNetlimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getAssetnetusedMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(5, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n  f = message.getAssetnetlimitMap(true);\n  if (f && f.getLength() > 0) {\n    f.serializeBinary(6, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeInt64);\n  }\n};\n\n\n/**\n * optional int64 freeNetUsed = 1;\n * @return {number}\n */\nproto.protocol.AccountNetMessage.prototype.getFreenetused = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.AccountNetMessage.prototype.setFreenetused = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int64 freeNetLimit = 2;\n * @return {number}\n */\nproto.protocol.AccountNetMessage.prototype.getFreenetlimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.AccountNetMessage.prototype.setFreenetlimit = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int64 NetUsed = 3;\n * @return {number}\n */\nproto.protocol.AccountNetMessage.prototype.getNetused = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.AccountNetMessage.prototype.setNetused = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int64 NetLimit = 4;\n * @return {number}\n */\nproto.protocol.AccountNetMessage.prototype.getNetlimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.AccountNetMessage.prototype.setNetlimit = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * map<string, int64> assetNetUsed = 5;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nproto.protocol.AccountNetMessage.prototype.getAssetnetusedMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 5, opt_noLazyCreate,\n      null));\n};\n\n\nproto.protocol.AccountNetMessage.prototype.clearAssetnetusedMap = function() {\n  this.getAssetnetusedMap().clear();\n};\n\n\n/**\n * map<string, int64> assetNetLimit = 6;\n * @param {boolean=} opt_noLazyCreate Do not create the map if\n * empty, instead returning `undefined`\n * @return {!jspb.Map<string,number>}\n */\nproto.protocol.AccountNetMessage.prototype.getAssetnetlimitMap = function(opt_noLazyCreate) {\n  return /** @type {!jspb.Map<string,number>} */ (\n      jspb.Message.getMapField(this, 6, opt_noLazyCreate,\n      null));\n};\n\n\nproto.protocol.AccountNetMessage.prototype.clearAssetnetlimitMap = function() {\n  this.getAssetnetlimitMap().clear();\n};\n\n\ngoog.object.extend(exports, proto.protocol);\n","/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\nvar core_Tron_pb = require('../core/Tron_pb.js');\ngoog.exportSymbol('proto.protocol.AccountCreateContract', null, global);\ngoog.exportSymbol('proto.protocol.AccountUpdateContract', null, global);\ngoog.exportSymbol('proto.protocol.AssetIssueContract', null, global);\ngoog.exportSymbol('proto.protocol.AssetIssueContract.FrozenSupply', null, global);\ngoog.exportSymbol('proto.protocol.DeployContract', null, global);\ngoog.exportSymbol('proto.protocol.FreezeBalanceContract', null, global);\ngoog.exportSymbol('proto.protocol.ParticipateAssetIssueContract', null, global);\ngoog.exportSymbol('proto.protocol.TransferAssetContract', null, global);\ngoog.exportSymbol('proto.protocol.TransferContract', null, global);\ngoog.exportSymbol('proto.protocol.UnfreezeAssetContract', null, global);\ngoog.exportSymbol('proto.protocol.UnfreezeBalanceContract', null, global);\ngoog.exportSymbol('proto.protocol.UpdateAssetContract', null, global);\ngoog.exportSymbol('proto.protocol.VoteAssetContract', null, global);\ngoog.exportSymbol('proto.protocol.VoteWitnessContract', null, global);\ngoog.exportSymbol('proto.protocol.VoteWitnessContract.Vote', null, global);\ngoog.exportSymbol('proto.protocol.WithdrawBalanceContract', null, global);\ngoog.exportSymbol('proto.protocol.WitnessCreateContract', null, global);\ngoog.exportSymbol('proto.protocol.WitnessUpdateContract', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.AccountCreateContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.AccountCreateContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.AccountCreateContract.displayName = 'proto.protocol.AccountCreateContract';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.AccountCreateContract.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.AccountCreateContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.AccountCreateContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.AccountCreateContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    type: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    accountName: msg.getAccountName_asB64(),\n    ownerAddress: msg.getOwnerAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.AccountCreateContract}\n */\nproto.protocol.AccountCreateContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.AccountCreateContract;\n  return proto.protocol.AccountCreateContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.AccountCreateContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.AccountCreateContract}\n */\nproto.protocol.AccountCreateContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!proto.protocol.AccountType} */ (reader.readEnum());\n      msg.setType(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAccountName(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.AccountCreateContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.AccountCreateContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.AccountCreateContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.AccountCreateContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getType();\n  if (f !== 0.0) {\n    writer.writeEnum(\n      1,\n      f\n    );\n  }\n  f = message.getAccountName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional AccountType type = 1;\n * @return {!proto.protocol.AccountType}\n */\nproto.protocol.AccountCreateContract.prototype.getType = function() {\n  return /** @type {!proto.protocol.AccountType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {!proto.protocol.AccountType} value */\nproto.protocol.AccountCreateContract.prototype.setType = function(value) {\n  jspb.Message.setProto3EnumField(this, 1, value);\n};\n\n\n/**\n * optional bytes account_name = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.AccountCreateContract.prototype.getAccountName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes account_name = 2;\n * This is a type-conversion wrapper around `getAccountName()`\n * @return {string}\n */\nproto.protocol.AccountCreateContract.prototype.getAccountName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAccountName()));\n};\n\n\n/**\n * optional bytes account_name = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAccountName()`\n * @return {!Uint8Array}\n */\nproto.protocol.AccountCreateContract.prototype.getAccountName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAccountName()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.AccountCreateContract.prototype.setAccountName = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional bytes owner_address = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.AccountCreateContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 3;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nproto.protocol.AccountCreateContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nproto.protocol.AccountCreateContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.AccountCreateContract.prototype.setOwnerAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.AccountUpdateContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.AccountUpdateContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.AccountUpdateContract.displayName = 'proto.protocol.AccountUpdateContract';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.AccountUpdateContract.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.AccountUpdateContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.AccountUpdateContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.AccountUpdateContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    accountName: msg.getAccountName_asB64(),\n    ownerAddress: msg.getOwnerAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.AccountUpdateContract}\n */\nproto.protocol.AccountUpdateContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.AccountUpdateContract;\n  return proto.protocol.AccountUpdateContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.AccountUpdateContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.AccountUpdateContract}\n */\nproto.protocol.AccountUpdateContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAccountName(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.AccountUpdateContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.AccountUpdateContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.AccountUpdateContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.AccountUpdateContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAccountName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes account_name = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.AccountUpdateContract.prototype.getAccountName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes account_name = 1;\n * This is a type-conversion wrapper around `getAccountName()`\n * @return {string}\n */\nproto.protocol.AccountUpdateContract.prototype.getAccountName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAccountName()));\n};\n\n\n/**\n * optional bytes account_name = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAccountName()`\n * @return {!Uint8Array}\n */\nproto.protocol.AccountUpdateContract.prototype.getAccountName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAccountName()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.AccountUpdateContract.prototype.setAccountName = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes owner_address = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.AccountUpdateContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 2;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nproto.protocol.AccountUpdateContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nproto.protocol.AccountUpdateContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.AccountUpdateContract.prototype.setOwnerAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.TransferContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.TransferContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.TransferContract.displayName = 'proto.protocol.TransferContract';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.TransferContract.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.TransferContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.TransferContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.TransferContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    toAddress: msg.getToAddress_asB64(),\n    amount: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.TransferContract}\n */\nproto.protocol.TransferContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.TransferContract;\n  return proto.protocol.TransferContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.TransferContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.TransferContract}\n */\nproto.protocol.TransferContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setToAddress(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.TransferContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.TransferContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.TransferContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.TransferContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getToAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.TransferContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nproto.protocol.TransferContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nproto.protocol.TransferContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.TransferContract.prototype.setOwnerAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes to_address = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.TransferContract.prototype.getToAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes to_address = 2;\n * This is a type-conversion wrapper around `getToAddress()`\n * @return {string}\n */\nproto.protocol.TransferContract.prototype.getToAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getToAddress()));\n};\n\n\n/**\n * optional bytes to_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getToAddress()`\n * @return {!Uint8Array}\n */\nproto.protocol.TransferContract.prototype.getToAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getToAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.TransferContract.prototype.setToAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional int64 amount = 3;\n * @return {number}\n */\nproto.protocol.TransferContract.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.TransferContract.prototype.setAmount = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.TransferAssetContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.TransferAssetContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.TransferAssetContract.displayName = 'proto.protocol.TransferAssetContract';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.TransferAssetContract.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.TransferAssetContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.TransferAssetContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.TransferAssetContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    assetName: msg.getAssetName_asB64(),\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    toAddress: msg.getToAddress_asB64(),\n    amount: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.TransferAssetContract}\n */\nproto.protocol.TransferAssetContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.TransferAssetContract;\n  return proto.protocol.TransferAssetContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.TransferAssetContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.TransferAssetContract}\n */\nproto.protocol.TransferAssetContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAssetName(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setToAddress(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.TransferAssetContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.TransferAssetContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.TransferAssetContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.TransferAssetContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAssetName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getToAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes asset_name = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.TransferAssetContract.prototype.getAssetName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes asset_name = 1;\n * This is a type-conversion wrapper around `getAssetName()`\n * @return {string}\n */\nproto.protocol.TransferAssetContract.prototype.getAssetName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAssetName()));\n};\n\n\n/**\n * optional bytes asset_name = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAssetName()`\n * @return {!Uint8Array}\n */\nproto.protocol.TransferAssetContract.prototype.getAssetName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAssetName()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.TransferAssetContract.prototype.setAssetName = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes owner_address = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.TransferAssetContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 2;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nproto.protocol.TransferAssetContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nproto.protocol.TransferAssetContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.TransferAssetContract.prototype.setOwnerAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional bytes to_address = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.TransferAssetContract.prototype.getToAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes to_address = 3;\n * This is a type-conversion wrapper around `getToAddress()`\n * @return {string}\n */\nproto.protocol.TransferAssetContract.prototype.getToAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getToAddress()));\n};\n\n\n/**\n * optional bytes to_address = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getToAddress()`\n * @return {!Uint8Array}\n */\nproto.protocol.TransferAssetContract.prototype.getToAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getToAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.TransferAssetContract.prototype.setToAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 amount = 4;\n * @return {number}\n */\nproto.protocol.TransferAssetContract.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.TransferAssetContract.prototype.setAmount = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.VoteAssetContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.protocol.VoteAssetContract.repeatedFields_, null);\n};\ngoog.inherits(proto.protocol.VoteAssetContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.VoteAssetContract.displayName = 'proto.protocol.VoteAssetContract';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.protocol.VoteAssetContract.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.VoteAssetContract.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.VoteAssetContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.VoteAssetContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.VoteAssetContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    voteAddressList: msg.getVoteAddressList_asB64(),\n    support: jspb.Message.getFieldWithDefault(msg, 3, false),\n    count: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.VoteAssetContract}\n */\nproto.protocol.VoteAssetContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.VoteAssetContract;\n  return proto.protocol.VoteAssetContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.VoteAssetContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.VoteAssetContract}\n */\nproto.protocol.VoteAssetContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.addVoteAddress(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSupport(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setCount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.VoteAssetContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.VoteAssetContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.VoteAssetContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.VoteAssetContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getVoteAddressList_asU8();\n  if (f.length > 0) {\n    writer.writeRepeatedBytes(\n      2,\n      f\n    );\n  }\n  f = message.getSupport();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n  f = message.getCount();\n  if (f !== 0) {\n    writer.writeInt32(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.VoteAssetContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nproto.protocol.VoteAssetContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nproto.protocol.VoteAssetContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.VoteAssetContract.prototype.setOwnerAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * repeated bytes vote_address = 2;\n * @return {!(Array<!Uint8Array>|Array<string>)}\n */\nproto.protocol.VoteAssetContract.prototype.getVoteAddressList = function() {\n  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));\n};\n\n\n/**\n * repeated bytes vote_address = 2;\n * This is a type-conversion wrapper around `getVoteAddressList()`\n * @return {!Array.<string>}\n */\nproto.protocol.VoteAssetContract.prototype.getVoteAddressList_asB64 = function() {\n  return /** @type {!Array.<string>} */ (jspb.Message.bytesListAsB64(\n      this.getVoteAddressList()));\n};\n\n\n/**\n * repeated bytes vote_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getVoteAddressList()`\n * @return {!Array.<!Uint8Array>}\n */\nproto.protocol.VoteAssetContract.prototype.getVoteAddressList_asU8 = function() {\n  return /** @type {!Array.<!Uint8Array>} */ (jspb.Message.bytesListAsU8(\n      this.getVoteAddressList()));\n};\n\n\n/** @param {!(Array<!Uint8Array>|Array<string>)} value */\nproto.protocol.VoteAssetContract.prototype.setVoteAddressList = function(value) {\n  jspb.Message.setField(this, 2, value || []);\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @param {number=} opt_index\n */\nproto.protocol.VoteAssetContract.prototype.addVoteAddress = function(value, opt_index) {\n  jspb.Message.addToRepeatedField(this, 2, value, opt_index);\n};\n\n\nproto.protocol.VoteAssetContract.prototype.clearVoteAddressList = function() {\n  this.setVoteAddressList([]);\n};\n\n\n/**\n * optional bool support = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.protocol.VoteAssetContract.prototype.getSupport = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.protocol.VoteAssetContract.prototype.setSupport = function(value) {\n  jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n/**\n * optional int32 count = 5;\n * @return {number}\n */\nproto.protocol.VoteAssetContract.prototype.getCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.VoteAssetContract.prototype.setCount = function(value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.VoteWitnessContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.protocol.VoteWitnessContract.repeatedFields_, null);\n};\ngoog.inherits(proto.protocol.VoteWitnessContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.VoteWitnessContract.displayName = 'proto.protocol.VoteWitnessContract';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.protocol.VoteWitnessContract.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.VoteWitnessContract.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.VoteWitnessContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.VoteWitnessContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.VoteWitnessContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    votesList: jspb.Message.toObjectList(msg.getVotesList(),\n    proto.protocol.VoteWitnessContract.Vote.toObject, includeInstance),\n    support: jspb.Message.getFieldWithDefault(msg, 3, false)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.VoteWitnessContract}\n */\nproto.protocol.VoteWitnessContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.VoteWitnessContract;\n  return proto.protocol.VoteWitnessContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.VoteWitnessContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.VoteWitnessContract}\n */\nproto.protocol.VoteWitnessContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = new proto.protocol.VoteWitnessContract.Vote;\n      reader.readMessage(value,proto.protocol.VoteWitnessContract.Vote.deserializeBinaryFromReader);\n      msg.addVotes(value);\n      break;\n    case 3:\n      var value = /** @type {boolean} */ (reader.readBool());\n      msg.setSupport(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.VoteWitnessContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.VoteWitnessContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.VoteWitnessContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.VoteWitnessContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getVotesList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.protocol.VoteWitnessContract.Vote.serializeBinaryToWriter\n    );\n  }\n  f = message.getSupport();\n  if (f) {\n    writer.writeBool(\n      3,\n      f\n    );\n  }\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.VoteWitnessContract.Vote = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.VoteWitnessContract.Vote, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.VoteWitnessContract.Vote.displayName = 'proto.protocol.VoteWitnessContract.Vote';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.VoteWitnessContract.Vote.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.VoteWitnessContract.Vote.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.VoteWitnessContract.Vote} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.VoteWitnessContract.Vote.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    voteAddress: msg.getVoteAddress_asB64(),\n    voteCount: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.VoteWitnessContract.Vote}\n */\nproto.protocol.VoteWitnessContract.Vote.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.VoteWitnessContract.Vote;\n  return proto.protocol.VoteWitnessContract.Vote.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.VoteWitnessContract.Vote} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.VoteWitnessContract.Vote}\n */\nproto.protocol.VoteWitnessContract.Vote.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setVoteAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setVoteCount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.VoteWitnessContract.Vote.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.VoteWitnessContract.Vote.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.VoteWitnessContract.Vote} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.VoteWitnessContract.Vote.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getVoteAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getVoteCount();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes vote_address = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.VoteWitnessContract.Vote.prototype.getVoteAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes vote_address = 1;\n * This is a type-conversion wrapper around `getVoteAddress()`\n * @return {string}\n */\nproto.protocol.VoteWitnessContract.Vote.prototype.getVoteAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getVoteAddress()));\n};\n\n\n/**\n * optional bytes vote_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getVoteAddress()`\n * @return {!Uint8Array}\n */\nproto.protocol.VoteWitnessContract.Vote.prototype.getVoteAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getVoteAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.VoteWitnessContract.Vote.prototype.setVoteAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 vote_count = 2;\n * @return {number}\n */\nproto.protocol.VoteWitnessContract.Vote.prototype.getVoteCount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.VoteWitnessContract.Vote.prototype.setVoteCount = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.VoteWitnessContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nproto.protocol.VoteWitnessContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nproto.protocol.VoteWitnessContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.VoteWitnessContract.prototype.setOwnerAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * repeated Vote votes = 2;\n * @return {!Array.<!proto.protocol.VoteWitnessContract.Vote>}\n */\nproto.protocol.VoteWitnessContract.prototype.getVotesList = function() {\n  return /** @type{!Array.<!proto.protocol.VoteWitnessContract.Vote>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.protocol.VoteWitnessContract.Vote, 2));\n};\n\n\n/** @param {!Array.<!proto.protocol.VoteWitnessContract.Vote>} value */\nproto.protocol.VoteWitnessContract.prototype.setVotesList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.protocol.VoteWitnessContract.Vote=} opt_value\n * @param {number=} opt_index\n * @return {!proto.protocol.VoteWitnessContract.Vote}\n */\nproto.protocol.VoteWitnessContract.prototype.addVotes = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.protocol.VoteWitnessContract.Vote, opt_index);\n};\n\n\nproto.protocol.VoteWitnessContract.prototype.clearVotesList = function() {\n  this.setVotesList([]);\n};\n\n\n/**\n * optional bool support = 3;\n * Note that Boolean fields may be set to 0/1 when serialized from a Java server.\n * You should avoid comparisons like {@code val === true/false} in those cases.\n * @return {boolean}\n */\nproto.protocol.VoteWitnessContract.prototype.getSupport = function() {\n  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));\n};\n\n\n/** @param {boolean} value */\nproto.protocol.VoteWitnessContract.prototype.setSupport = function(value) {\n  jspb.Message.setProto3BooleanField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.WitnessCreateContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.WitnessCreateContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.WitnessCreateContract.displayName = 'proto.protocol.WitnessCreateContract';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.WitnessCreateContract.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.WitnessCreateContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.WitnessCreateContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.WitnessCreateContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    url: msg.getUrl_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.WitnessCreateContract}\n */\nproto.protocol.WitnessCreateContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.WitnessCreateContract;\n  return proto.protocol.WitnessCreateContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.WitnessCreateContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.WitnessCreateContract}\n */\nproto.protocol.WitnessCreateContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setUrl(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.WitnessCreateContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.WitnessCreateContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.WitnessCreateContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.WitnessCreateContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getUrl_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.WitnessCreateContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nproto.protocol.WitnessCreateContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nproto.protocol.WitnessCreateContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.WitnessCreateContract.prototype.setOwnerAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes url = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.WitnessCreateContract.prototype.getUrl = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes url = 2;\n * This is a type-conversion wrapper around `getUrl()`\n * @return {string}\n */\nproto.protocol.WitnessCreateContract.prototype.getUrl_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getUrl()));\n};\n\n\n/**\n * optional bytes url = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getUrl()`\n * @return {!Uint8Array}\n */\nproto.protocol.WitnessCreateContract.prototype.getUrl_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getUrl()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.WitnessCreateContract.prototype.setUrl = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.WitnessUpdateContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.WitnessUpdateContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.WitnessUpdateContract.displayName = 'proto.protocol.WitnessUpdateContract';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.WitnessUpdateContract.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.WitnessUpdateContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.WitnessUpdateContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.WitnessUpdateContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    updateUrl: msg.getUpdateUrl_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.WitnessUpdateContract}\n */\nproto.protocol.WitnessUpdateContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.WitnessUpdateContract;\n  return proto.protocol.WitnessUpdateContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.WitnessUpdateContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.WitnessUpdateContract}\n */\nproto.protocol.WitnessUpdateContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 12:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setUpdateUrl(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.WitnessUpdateContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.WitnessUpdateContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.WitnessUpdateContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.WitnessUpdateContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getUpdateUrl_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      12,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.WitnessUpdateContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nproto.protocol.WitnessUpdateContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nproto.protocol.WitnessUpdateContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.WitnessUpdateContract.prototype.setOwnerAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes update_url = 12;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.WitnessUpdateContract.prototype.getUpdateUrl = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, \"\"));\n};\n\n\n/**\n * optional bytes update_url = 12;\n * This is a type-conversion wrapper around `getUpdateUrl()`\n * @return {string}\n */\nproto.protocol.WitnessUpdateContract.prototype.getUpdateUrl_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getUpdateUrl()));\n};\n\n\n/**\n * optional bytes update_url = 12;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getUpdateUrl()`\n * @return {!Uint8Array}\n */\nproto.protocol.WitnessUpdateContract.prototype.getUpdateUrl_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getUpdateUrl()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.WitnessUpdateContract.prototype.setUpdateUrl = function(value) {\n  jspb.Message.setProto3BytesField(this, 12, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.AssetIssueContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.protocol.AssetIssueContract.repeatedFields_, null);\n};\ngoog.inherits(proto.protocol.AssetIssueContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.AssetIssueContract.displayName = 'proto.protocol.AssetIssueContract';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.protocol.AssetIssueContract.repeatedFields_ = [5];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.AssetIssueContract.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.AssetIssueContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.AssetIssueContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.AssetIssueContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    name: msg.getName_asB64(),\n    abbr: msg.getAbbr_asB64(),\n    totalSupply: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    frozenSupplyList: jspb.Message.toObjectList(msg.getFrozenSupplyList(),\n    proto.protocol.AssetIssueContract.FrozenSupply.toObject, includeInstance),\n    trxNum: jspb.Message.getFieldWithDefault(msg, 6, 0),\n    num: jspb.Message.getFieldWithDefault(msg, 8, 0),\n    startTime: jspb.Message.getFieldWithDefault(msg, 9, 0),\n    endTime: jspb.Message.getFieldWithDefault(msg, 10, 0),\n    voteScore: jspb.Message.getFieldWithDefault(msg, 16, 0),\n    description: msg.getDescription_asB64(),\n    url: msg.getUrl_asB64(),\n    freeAssetNetLimit: jspb.Message.getFieldWithDefault(msg, 22, 0),\n    publicFreeAssetNetLimit: jspb.Message.getFieldWithDefault(msg, 23, 0),\n    publicFreeAssetNetUsage: jspb.Message.getFieldWithDefault(msg, 24, 0),\n    publicLatestFreeNetTime: jspb.Message.getFieldWithDefault(msg, 25, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.AssetIssueContract}\n */\nproto.protocol.AssetIssueContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.AssetIssueContract;\n  return proto.protocol.AssetIssueContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.AssetIssueContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.AssetIssueContract}\n */\nproto.protocol.AssetIssueContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setName(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAbbr(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTotalSupply(value);\n      break;\n    case 5:\n      var value = new proto.protocol.AssetIssueContract.FrozenSupply;\n      reader.readMessage(value,proto.protocol.AssetIssueContract.FrozenSupply.deserializeBinaryFromReader);\n      msg.addFrozenSupply(value);\n      break;\n    case 6:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setTrxNum(value);\n      break;\n    case 8:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setNum(value);\n      break;\n    case 9:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setStartTime(value);\n      break;\n    case 10:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setEndTime(value);\n      break;\n    case 16:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setVoteScore(value);\n      break;\n    case 20:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDescription(value);\n      break;\n    case 21:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setUrl(value);\n      break;\n    case 22:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFreeAssetNetLimit(value);\n      break;\n    case 23:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPublicFreeAssetNetLimit(value);\n      break;\n    case 24:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPublicFreeAssetNetUsage(value);\n      break;\n    case 25:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setPublicLatestFreeNetTime(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.AssetIssueContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.AssetIssueContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.AssetIssueContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.AssetIssueContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getAbbr_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getTotalSupply();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getFrozenSupplyList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      5,\n      f,\n      proto.protocol.AssetIssueContract.FrozenSupply.serializeBinaryToWriter\n    );\n  }\n  f = message.getTrxNum();\n  if (f !== 0) {\n    writer.writeInt32(\n      6,\n      f\n    );\n  }\n  f = message.getNum();\n  if (f !== 0) {\n    writer.writeInt32(\n      8,\n      f\n    );\n  }\n  f = message.getStartTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      9,\n      f\n    );\n  }\n  f = message.getEndTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      10,\n      f\n    );\n  }\n  f = message.getVoteScore();\n  if (f !== 0) {\n    writer.writeInt32(\n      16,\n      f\n    );\n  }\n  f = message.getDescription_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      20,\n      f\n    );\n  }\n  f = message.getUrl_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      21,\n      f\n    );\n  }\n  f = message.getFreeAssetNetLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      22,\n      f\n    );\n  }\n  f = message.getPublicFreeAssetNetLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      23,\n      f\n    );\n  }\n  f = message.getPublicFreeAssetNetUsage();\n  if (f !== 0) {\n    writer.writeInt64(\n      24,\n      f\n    );\n  }\n  f = message.getPublicLatestFreeNetTime();\n  if (f !== 0) {\n    writer.writeInt64(\n      25,\n      f\n    );\n  }\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.AssetIssueContract.FrozenSupply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.AssetIssueContract.FrozenSupply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.AssetIssueContract.FrozenSupply.displayName = 'proto.protocol.AssetIssueContract.FrozenSupply';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.AssetIssueContract.FrozenSupply.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.AssetIssueContract.FrozenSupply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.AssetIssueContract.FrozenSupply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.AssetIssueContract.FrozenSupply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    frozenAmount: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    frozenDays: jspb.Message.getFieldWithDefault(msg, 2, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.AssetIssueContract.FrozenSupply}\n */\nproto.protocol.AssetIssueContract.FrozenSupply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.AssetIssueContract.FrozenSupply;\n  return proto.protocol.AssetIssueContract.FrozenSupply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.AssetIssueContract.FrozenSupply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.AssetIssueContract.FrozenSupply}\n */\nproto.protocol.AssetIssueContract.FrozenSupply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFrozenAmount(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFrozenDays(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.AssetIssueContract.FrozenSupply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.AssetIssueContract.FrozenSupply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.AssetIssueContract.FrozenSupply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.AssetIssueContract.FrozenSupply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFrozenAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      1,\n      f\n    );\n  }\n  f = message.getFrozenDays();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int64 frozen_amount = 1;\n * @return {number}\n */\nproto.protocol.AssetIssueContract.FrozenSupply.prototype.getFrozenAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.AssetIssueContract.FrozenSupply.prototype.setFrozenAmount = function(value) {\n  jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional int64 frozen_days = 2;\n * @return {number}\n */\nproto.protocol.AssetIssueContract.FrozenSupply.prototype.getFrozenDays = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.AssetIssueContract.FrozenSupply.prototype.setFrozenDays = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.AssetIssueContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nproto.protocol.AssetIssueContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nproto.protocol.AssetIssueContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.AssetIssueContract.prototype.setOwnerAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes name = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.AssetIssueContract.prototype.getName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes name = 2;\n * This is a type-conversion wrapper around `getName()`\n * @return {string}\n */\nproto.protocol.AssetIssueContract.prototype.getName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getName()));\n};\n\n\n/**\n * optional bytes name = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getName()`\n * @return {!Uint8Array}\n */\nproto.protocol.AssetIssueContract.prototype.getName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getName()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.AssetIssueContract.prototype.setName = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional bytes abbr = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.AssetIssueContract.prototype.getAbbr = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes abbr = 3;\n * This is a type-conversion wrapper around `getAbbr()`\n * @return {string}\n */\nproto.protocol.AssetIssueContract.prototype.getAbbr_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAbbr()));\n};\n\n\n/**\n * optional bytes abbr = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAbbr()`\n * @return {!Uint8Array}\n */\nproto.protocol.AssetIssueContract.prototype.getAbbr_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAbbr()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.AssetIssueContract.prototype.setAbbr = function(value) {\n  jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 total_supply = 4;\n * @return {number}\n */\nproto.protocol.AssetIssueContract.prototype.getTotalSupply = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.AssetIssueContract.prototype.setTotalSupply = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * repeated FrozenSupply frozen_supply = 5;\n * @return {!Array.<!proto.protocol.AssetIssueContract.FrozenSupply>}\n */\nproto.protocol.AssetIssueContract.prototype.getFrozenSupplyList = function() {\n  return /** @type{!Array.<!proto.protocol.AssetIssueContract.FrozenSupply>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.protocol.AssetIssueContract.FrozenSupply, 5));\n};\n\n\n/** @param {!Array.<!proto.protocol.AssetIssueContract.FrozenSupply>} value */\nproto.protocol.AssetIssueContract.prototype.setFrozenSupplyList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 5, value);\n};\n\n\n/**\n * @param {!proto.protocol.AssetIssueContract.FrozenSupply=} opt_value\n * @param {number=} opt_index\n * @return {!proto.protocol.AssetIssueContract.FrozenSupply}\n */\nproto.protocol.AssetIssueContract.prototype.addFrozenSupply = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.protocol.AssetIssueContract.FrozenSupply, opt_index);\n};\n\n\nproto.protocol.AssetIssueContract.prototype.clearFrozenSupplyList = function() {\n  this.setFrozenSupplyList([]);\n};\n\n\n/**\n * optional int32 trx_num = 6;\n * @return {number}\n */\nproto.protocol.AssetIssueContract.prototype.getTrxNum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.AssetIssueContract.prototype.setTrxNum = function(value) {\n  jspb.Message.setProto3IntField(this, 6, value);\n};\n\n\n/**\n * optional int32 num = 8;\n * @return {number}\n */\nproto.protocol.AssetIssueContract.prototype.getNum = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.AssetIssueContract.prototype.setNum = function(value) {\n  jspb.Message.setProto3IntField(this, 8, value);\n};\n\n\n/**\n * optional int64 start_time = 9;\n * @return {number}\n */\nproto.protocol.AssetIssueContract.prototype.getStartTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.AssetIssueContract.prototype.setStartTime = function(value) {\n  jspb.Message.setProto3IntField(this, 9, value);\n};\n\n\n/**\n * optional int64 end_time = 10;\n * @return {number}\n */\nproto.protocol.AssetIssueContract.prototype.getEndTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.AssetIssueContract.prototype.setEndTime = function(value) {\n  jspb.Message.setProto3IntField(this, 10, value);\n};\n\n\n/**\n * optional int32 vote_score = 16;\n * @return {number}\n */\nproto.protocol.AssetIssueContract.prototype.getVoteScore = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.AssetIssueContract.prototype.setVoteScore = function(value) {\n  jspb.Message.setProto3IntField(this, 16, value);\n};\n\n\n/**\n * optional bytes description = 20;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.AssetIssueContract.prototype.getDescription = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 20, \"\"));\n};\n\n\n/**\n * optional bytes description = 20;\n * This is a type-conversion wrapper around `getDescription()`\n * @return {string}\n */\nproto.protocol.AssetIssueContract.prototype.getDescription_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDescription()));\n};\n\n\n/**\n * optional bytes description = 20;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDescription()`\n * @return {!Uint8Array}\n */\nproto.protocol.AssetIssueContract.prototype.getDescription_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDescription()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.AssetIssueContract.prototype.setDescription = function(value) {\n  jspb.Message.setProto3BytesField(this, 20, value);\n};\n\n\n/**\n * optional bytes url = 21;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.AssetIssueContract.prototype.getUrl = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 21, \"\"));\n};\n\n\n/**\n * optional bytes url = 21;\n * This is a type-conversion wrapper around `getUrl()`\n * @return {string}\n */\nproto.protocol.AssetIssueContract.prototype.getUrl_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getUrl()));\n};\n\n\n/**\n * optional bytes url = 21;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getUrl()`\n * @return {!Uint8Array}\n */\nproto.protocol.AssetIssueContract.prototype.getUrl_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getUrl()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.AssetIssueContract.prototype.setUrl = function(value) {\n  jspb.Message.setProto3BytesField(this, 21, value);\n};\n\n\n/**\n * optional int64 free_asset_net_limit = 22;\n * @return {number}\n */\nproto.protocol.AssetIssueContract.prototype.getFreeAssetNetLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.AssetIssueContract.prototype.setFreeAssetNetLimit = function(value) {\n  jspb.Message.setProto3IntField(this, 22, value);\n};\n\n\n/**\n * optional int64 public_free_asset_net_limit = 23;\n * @return {number}\n */\nproto.protocol.AssetIssueContract.prototype.getPublicFreeAssetNetLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.AssetIssueContract.prototype.setPublicFreeAssetNetLimit = function(value) {\n  jspb.Message.setProto3IntField(this, 23, value);\n};\n\n\n/**\n * optional int64 public_free_asset_net_usage = 24;\n * @return {number}\n */\nproto.protocol.AssetIssueContract.prototype.getPublicFreeAssetNetUsage = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.AssetIssueContract.prototype.setPublicFreeAssetNetUsage = function(value) {\n  jspb.Message.setProto3IntField(this, 24, value);\n};\n\n\n/**\n * optional int64 public_latest_free_net_time = 25;\n * @return {number}\n */\nproto.protocol.AssetIssueContract.prototype.getPublicLatestFreeNetTime = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.AssetIssueContract.prototype.setPublicLatestFreeNetTime = function(value) {\n  jspb.Message.setProto3IntField(this, 25, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.ParticipateAssetIssueContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.ParticipateAssetIssueContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.ParticipateAssetIssueContract.displayName = 'proto.protocol.ParticipateAssetIssueContract';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.ParticipateAssetIssueContract.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.ParticipateAssetIssueContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.ParticipateAssetIssueContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.ParticipateAssetIssueContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    toAddress: msg.getToAddress_asB64(),\n    assetName: msg.getAssetName_asB64(),\n    amount: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.ParticipateAssetIssueContract}\n */\nproto.protocol.ParticipateAssetIssueContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.ParticipateAssetIssueContract;\n  return proto.protocol.ParticipateAssetIssueContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.ParticipateAssetIssueContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.ParticipateAssetIssueContract}\n */\nproto.protocol.ParticipateAssetIssueContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setToAddress(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAssetName(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setAmount(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.ParticipateAssetIssueContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.ParticipateAssetIssueContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.ParticipateAssetIssueContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.ParticipateAssetIssueContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getToAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getAssetName_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getAmount();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.ParticipateAssetIssueContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nproto.protocol.ParticipateAssetIssueContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nproto.protocol.ParticipateAssetIssueContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.ParticipateAssetIssueContract.prototype.setOwnerAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes to_address = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.ParticipateAssetIssueContract.prototype.getToAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes to_address = 2;\n * This is a type-conversion wrapper around `getToAddress()`\n * @return {string}\n */\nproto.protocol.ParticipateAssetIssueContract.prototype.getToAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getToAddress()));\n};\n\n\n/**\n * optional bytes to_address = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getToAddress()`\n * @return {!Uint8Array}\n */\nproto.protocol.ParticipateAssetIssueContract.prototype.getToAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getToAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.ParticipateAssetIssueContract.prototype.setToAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional bytes asset_name = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.ParticipateAssetIssueContract.prototype.getAssetName = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes asset_name = 3;\n * This is a type-conversion wrapper around `getAssetName()`\n * @return {string}\n */\nproto.protocol.ParticipateAssetIssueContract.prototype.getAssetName_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAssetName()));\n};\n\n\n/**\n * optional bytes asset_name = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAssetName()`\n * @return {!Uint8Array}\n */\nproto.protocol.ParticipateAssetIssueContract.prototype.getAssetName_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAssetName()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.ParticipateAssetIssueContract.prototype.setAssetName = function(value) {\n  jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 amount = 4;\n * @return {number}\n */\nproto.protocol.ParticipateAssetIssueContract.prototype.getAmount = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.ParticipateAssetIssueContract.prototype.setAmount = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.DeployContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.DeployContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.DeployContract.displayName = 'proto.protocol.DeployContract';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.DeployContract.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.DeployContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.DeployContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.DeployContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    script: msg.getScript_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.DeployContract}\n */\nproto.protocol.DeployContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.DeployContract;\n  return proto.protocol.DeployContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.DeployContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.DeployContract}\n */\nproto.protocol.DeployContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setScript(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.DeployContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.DeployContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.DeployContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.DeployContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getScript_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.DeployContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nproto.protocol.DeployContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nproto.protocol.DeployContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.DeployContract.prototype.setOwnerAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes script = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.DeployContract.prototype.getScript = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes script = 2;\n * This is a type-conversion wrapper around `getScript()`\n * @return {string}\n */\nproto.protocol.DeployContract.prototype.getScript_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getScript()));\n};\n\n\n/**\n * optional bytes script = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getScript()`\n * @return {!Uint8Array}\n */\nproto.protocol.DeployContract.prototype.getScript_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getScript()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.DeployContract.prototype.setScript = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.FreezeBalanceContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.FreezeBalanceContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.FreezeBalanceContract.displayName = 'proto.protocol.FreezeBalanceContract';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.FreezeBalanceContract.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.FreezeBalanceContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.FreezeBalanceContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.FreezeBalanceContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    frozenBalance: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    frozenDuration: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.FreezeBalanceContract}\n */\nproto.protocol.FreezeBalanceContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.FreezeBalanceContract;\n  return proto.protocol.FreezeBalanceContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.FreezeBalanceContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.FreezeBalanceContract}\n */\nproto.protocol.FreezeBalanceContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFrozenBalance(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setFrozenDuration(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.FreezeBalanceContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.FreezeBalanceContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.FreezeBalanceContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.FreezeBalanceContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getFrozenBalance();\n  if (f !== 0) {\n    writer.writeInt64(\n      2,\n      f\n    );\n  }\n  f = message.getFrozenDuration();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.FreezeBalanceContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nproto.protocol.FreezeBalanceContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nproto.protocol.FreezeBalanceContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.FreezeBalanceContract.prototype.setOwnerAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int64 frozen_balance = 2;\n * @return {number}\n */\nproto.protocol.FreezeBalanceContract.prototype.getFrozenBalance = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.FreezeBalanceContract.prototype.setFrozenBalance = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int64 frozen_duration = 3;\n * @return {number}\n */\nproto.protocol.FreezeBalanceContract.prototype.getFrozenDuration = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.FreezeBalanceContract.prototype.setFrozenDuration = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.UnfreezeBalanceContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.UnfreezeBalanceContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.UnfreezeBalanceContract.displayName = 'proto.protocol.UnfreezeBalanceContract';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.UnfreezeBalanceContract.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.UnfreezeBalanceContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.UnfreezeBalanceContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.UnfreezeBalanceContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.UnfreezeBalanceContract}\n */\nproto.protocol.UnfreezeBalanceContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.UnfreezeBalanceContract;\n  return proto.protocol.UnfreezeBalanceContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.UnfreezeBalanceContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.UnfreezeBalanceContract}\n */\nproto.protocol.UnfreezeBalanceContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.UnfreezeBalanceContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.UnfreezeBalanceContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.UnfreezeBalanceContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.UnfreezeBalanceContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.UnfreezeBalanceContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nproto.protocol.UnfreezeBalanceContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nproto.protocol.UnfreezeBalanceContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.UnfreezeBalanceContract.prototype.setOwnerAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.UnfreezeAssetContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.UnfreezeAssetContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.UnfreezeAssetContract.displayName = 'proto.protocol.UnfreezeAssetContract';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.UnfreezeAssetContract.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.UnfreezeAssetContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.UnfreezeAssetContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.UnfreezeAssetContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.UnfreezeAssetContract}\n */\nproto.protocol.UnfreezeAssetContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.UnfreezeAssetContract;\n  return proto.protocol.UnfreezeAssetContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.UnfreezeAssetContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.UnfreezeAssetContract}\n */\nproto.protocol.UnfreezeAssetContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.UnfreezeAssetContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.UnfreezeAssetContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.UnfreezeAssetContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.UnfreezeAssetContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.UnfreezeAssetContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nproto.protocol.UnfreezeAssetContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nproto.protocol.UnfreezeAssetContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.UnfreezeAssetContract.prototype.setOwnerAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.WithdrawBalanceContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.WithdrawBalanceContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.WithdrawBalanceContract.displayName = 'proto.protocol.WithdrawBalanceContract';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.WithdrawBalanceContract.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.WithdrawBalanceContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.WithdrawBalanceContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.WithdrawBalanceContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.WithdrawBalanceContract}\n */\nproto.protocol.WithdrawBalanceContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.WithdrawBalanceContract;\n  return proto.protocol.WithdrawBalanceContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.WithdrawBalanceContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.WithdrawBalanceContract}\n */\nproto.protocol.WithdrawBalanceContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.WithdrawBalanceContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.WithdrawBalanceContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.WithdrawBalanceContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.WithdrawBalanceContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.WithdrawBalanceContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nproto.protocol.WithdrawBalanceContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nproto.protocol.WithdrawBalanceContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.WithdrawBalanceContract.prototype.setOwnerAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.UpdateAssetContract = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.UpdateAssetContract, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.UpdateAssetContract.displayName = 'proto.protocol.UpdateAssetContract';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.UpdateAssetContract.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.UpdateAssetContract.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.UpdateAssetContract} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.UpdateAssetContract.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    ownerAddress: msg.getOwnerAddress_asB64(),\n    description: msg.getDescription_asB64(),\n    url: msg.getUrl_asB64(),\n    newLimit: jspb.Message.getFieldWithDefault(msg, 4, 0),\n    newPublicLimit: jspb.Message.getFieldWithDefault(msg, 5, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.UpdateAssetContract}\n */\nproto.protocol.UpdateAssetContract.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.UpdateAssetContract;\n  return proto.protocol.UpdateAssetContract.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.UpdateAssetContract} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.UpdateAssetContract}\n */\nproto.protocol.UpdateAssetContract.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setOwnerAddress(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setDescription(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setUrl(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNewLimit(value);\n      break;\n    case 5:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setNewPublicLimit(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.UpdateAssetContract.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.UpdateAssetContract.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.UpdateAssetContract} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.UpdateAssetContract.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getOwnerAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getDescription_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getUrl_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n  f = message.getNewLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n  f = message.getNewPublicLimit();\n  if (f !== 0) {\n    writer.writeInt64(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.UpdateAssetContract.prototype.getOwnerAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {string}\n */\nproto.protocol.UpdateAssetContract.prototype.getOwnerAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getOwnerAddress()));\n};\n\n\n/**\n * optional bytes owner_address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getOwnerAddress()`\n * @return {!Uint8Array}\n */\nproto.protocol.UpdateAssetContract.prototype.getOwnerAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getOwnerAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.UpdateAssetContract.prototype.setOwnerAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional bytes description = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.UpdateAssetContract.prototype.getDescription = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes description = 2;\n * This is a type-conversion wrapper around `getDescription()`\n * @return {string}\n */\nproto.protocol.UpdateAssetContract.prototype.getDescription_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getDescription()));\n};\n\n\n/**\n * optional bytes description = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getDescription()`\n * @return {!Uint8Array}\n */\nproto.protocol.UpdateAssetContract.prototype.getDescription_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getDescription()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.UpdateAssetContract.prototype.setDescription = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional bytes url = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.UpdateAssetContract.prototype.getUrl = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes url = 3;\n * This is a type-conversion wrapper around `getUrl()`\n * @return {string}\n */\nproto.protocol.UpdateAssetContract.prototype.getUrl_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getUrl()));\n};\n\n\n/**\n * optional bytes url = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getUrl()`\n * @return {!Uint8Array}\n */\nproto.protocol.UpdateAssetContract.prototype.getUrl_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getUrl()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.UpdateAssetContract.prototype.setUrl = function(value) {\n  jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n/**\n * optional int64 new_limit = 4;\n * @return {number}\n */\nproto.protocol.UpdateAssetContract.prototype.getNewLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.UpdateAssetContract.prototype.setNewLimit = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n/**\n * optional int64 new_public_limit = 5;\n * @return {number}\n */\nproto.protocol.UpdateAssetContract.prototype.getNewPublicLimit = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.UpdateAssetContract.prototype.setNewPublicLimit = function(value) {\n  jspb.Message.setProto3IntField(this, 5, value);\n};\n\n\ngoog.object.extend(exports, proto.protocol);\n","/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.google.protobuf.Any', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.google.protobuf.Any = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.google.protobuf.Any, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.google.protobuf.Any.displayName = 'proto.google.protobuf.Any';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.google.protobuf.Any.prototype.toObject = function(opt_includeInstance) {\n  return proto.google.protobuf.Any.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.google.protobuf.Any} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.Any.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    typeUrl: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    value: msg.getValue_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.google.protobuf.Any}\n */\nproto.google.protobuf.Any.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.google.protobuf.Any;\n  return proto.google.protobuf.Any.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.google.protobuf.Any} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.google.protobuf.Any}\n */\nproto.google.protobuf.Any.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setTypeUrl(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setValue(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.google.protobuf.Any.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.google.protobuf.Any.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.google.protobuf.Any} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.google.protobuf.Any.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getTypeUrl();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getValue_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string type_url = 1;\n * @return {string}\n */\nproto.google.protobuf.Any.prototype.getTypeUrl = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/** @param {string} value */\nproto.google.protobuf.Any.prototype.setTypeUrl = function(value) {\n  jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional bytes value = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.google.protobuf.Any.prototype.getValue = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes value = 2;\n * This is a type-conversion wrapper around `getValue()`\n * @return {string}\n */\nproto.google.protobuf.Any.prototype.getValue_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getValue()));\n};\n\n\n/**\n * optional bytes value = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getValue()`\n * @return {!Uint8Array}\n */\nproto.google.protobuf.Any.prototype.getValue_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getValue()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.google.protobuf.Any.prototype.setValue = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\ngoog.object.extend(exports, proto.google.protobuf);\n/* This code will be inserted into generated code for\n * google/protobuf/any.proto. */\n\n/**\n * Returns the type name contained in this instance, if any.\n * @return {string|undefined}\n */\nproto.google.protobuf.Any.prototype.getTypeName = function() {\n  return this.getTypeUrl().split('/').pop();\n};\n\n\n/**\n * Packs the given message instance into this Any.\n * @param {!Uint8Array} serialized The serialized data to pack.\n * @param {string} name The type name of this message object.\n * @param {string=} opt_typeUrlPrefix the type URL prefix.\n */\nproto.google.protobuf.Any.prototype.pack = function(serialized, name,\n                                                    opt_typeUrlPrefix) {\n  if (!opt_typeUrlPrefix) {\n    opt_typeUrlPrefix = 'type.googleapis.com/';\n  }\n\n  if (opt_typeUrlPrefix.substr(-1) != '/') {\n    this.setTypeUrl(opt_typeUrlPrefix + '/' + name);\n  } else {\n    this.setTypeUrl(opt_typeUrlPrefix + name);\n  }\n\n  this.setValue(serialized);\n};\n\n\n/**\n * @template T\n * Unpacks this Any into the given message object.\n * @param {function(Uint8Array):T} deserialize Function that will deserialize\n *     the binary data properly.\n * @param {string} name The expected type name of this message object.\n * @return {?T} If the name matched the expected name, returns the deserialized\n *     object, otherwise returns null.\n */\nproto.google.protobuf.Any.prototype.unpack = function(deserialize, name) {\n  if (this.getTypeName() == name) {\n    return deserialize(this.getValue_asU8());\n  } else {\n    return null;\n  }\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","let isTestNet = process.env.NET === 'testnet';\n\nconst ADDRESS_SIZE = isTestNet ? 35 : 34;\nconst ADDRESS_PREFIX = isTestNet ? \"a0\" : \"41\";\nconst ADDRESS_PREFIX_BYTE = isTestNet ? 0xa0 : 0x41;\n\nmodule.exports = {\n  ADDRESS_SIZE,\n  ADDRESS_PREFIX,\n  ADDRESS_PREFIX_BYTE,\n};\n","const {Base64} = require(\"./base64\");\n\n\n/* Convert a byte to string */\nfunction byte2hexStr(byte) {\n  var hexByteMap = \"0123456789ABCDEF\";\n  var str = \"\";\n  str += hexByteMap.charAt(byte >> 4);\n  str += hexByteMap.charAt(byte & 0x0f);\n  return str;\n}\n\n/**\n * Converts a byte array to string\n *\n * @param {Uint8Array} arr byte array\n * @returns {string}\n */\nfunction bytesToString(arr) {\n  if (typeof arr === 'string') {\n    return arr;\n  }\n  let str = '',\n    _arr = arr;\n  for (let i = 0; i < _arr.length; i++) {\n    let one = _arr[i].toString(2), v = one.match(/^1+?(?=0)/);\n    if (v && one.length === 8) {\n      let bytesLength = v[0].length;\n      let store = _arr[i].toString(2).slice(7 - bytesLength);\n      for (let st = 1; st < bytesLength; st++) {\n        store += _arr[st + i].toString(2).slice(2);\n      }\n      str += String.fromCharCode(parseInt(store, 2));\n      i += bytesLength - 1;\n    } else {\n      str += String.fromCharCode(_arr[i]);\n    }\n  }\n  return str;\n}\n\n/**\n * Converts a hex string to a decoded string\n *\n * @param {string} hex\n * @returns {string}\n */\nfunction hextoString(hex) {\n  let arr = hex.split(\"\");\n  let out = \"\";\n  for (let i = 0; i < arr.length / 2; i++) {\n    let tmp = \"0x\" + arr[i * 2] + arr[i * 2 + 1];\n    out += String.fromCharCode(tmp);\n  }\n  return out;\n}\n\nfunction base64DecodeFromString(string64) {\n  return new Base64().decodeToByteArray(string64);\n}\n\n\nfunction byteArray2hexStr(byteArray) {\n  let str = \"\";\n  for (let i = 0; i < (byteArray.length); i++) {\n    str += byte2hexStr(byteArray[i]);\n  }\n  return str;\n}\n\nfunction longToByteArray(/*long*/long) {\n  let byteArray = [0, 0, 0, 0, 0, 0, 0, 0];\n  for (let index = 0; index < byteArray.length; index ++ ) {\n    let byte = long & 0xff;\n    byteArray [ index ] = byte;\n    long = (long - byte) / 256 ;\n  }\n  return byteArray;\n}\n\nmodule.exports = {\n  byteArray2hexStr,\n  hextoString,\n  base64DecodeFromString,\n  bytesToString,\n  byte2hexStr,\n  longToByteArray\n};\n","var ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\nvar ALPHABET_MAP = {}\nfor(var i = 0; i < ALPHABET.length; i++) {\n  ALPHABET_MAP[ALPHABET.charAt(i)] = i\n}\nvar BASE = 58\n\nfunction encode58(buffer) {\n  if (buffer.length === 0) return ''\n\n  var i, j, digits = [0]\n  for (i = 0; i < buffer.length; i++) {\n    for (j = 0; j < digits.length; j++) digits[j] <<= 8\n\n    digits[0] += buffer[i]\n\n    var carry = 0\n    for (j = 0; j < digits.length; ++j) {\n      digits[j] += carry\n\n      carry = (digits[j] / BASE) | 0\n      digits[j] %= BASE\n    }\n\n    while (carry) {\n      digits.push(carry % BASE)\n\n      carry = (carry / BASE) | 0\n    }\n  }\n\n  // deal with leading zeros\n  for (i = 0; buffer[i] === 0 && i < buffer.length - 1; i++) digits.push(0)\n\n  return digits.reverse().map(function(digit) { return ALPHABET[digit] }).join('')\n}\n\nfunction decode58(string) {\n  if (string.length === 0) return []\n\n  var i, j, bytes = [0]\n  for (i = 0; i < string.length; i++) {\n    var c = string[i]\n    if (!(c in ALPHABET_MAP)) throw new Error('Non-base58 character')\n\n    for (j = 0; j < bytes.length; j++) bytes[j] *= BASE\n    bytes[0] += ALPHABET_MAP[c]\n\n    var carry = 0\n    for (j = 0; j < bytes.length; ++j) {\n      bytes[j] += carry\n\n      carry = bytes[j] >> 8\n      bytes[j] &= 0xff\n    }\n\n    while (carry) {\n      bytes.push(carry & 0xff)\n\n      carry >>= 8\n    }\n  }\n\n  // deal with leading zeros\n  for (i = 0; string[i] === '1' && i < string.length - 1; i++) bytes.push(0)\n\n  return bytes.reverse()\n}\n\nmodule.exports = {\n  encode58,\n  decode58,\n};\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","module.exports = {\n    transactions : require(\"./transaction.js\"),\n    witnesses : require(\"./witness.js\"),\n    accounts : require(\"./account.js\"),\n    blocks : require(\"./block.js\"),\n    api : require(\"./api.js\"),\n    utils : require(\"./utils.js\")\n};\n","const utils = require('./utils');\n\nconst {Return} = require(\"./protocol/api/api_pb\");\n\nfunction returnFromBase64(ret){\n    return Return.deserializeBinary(utils.base64DecodeFromString(ret));\n}\n\nmodule.exports = {\n    returnFromBase64\n};\n","const utils = require('./utils');\n\nconst {Block} = require(\"./protocol/core/Tron_pb\");\nconst {SHA256} = require(\"./utils/crypto\");\n\nfunction getBlockHash(block){\n    let raw = block.getBlockHeader().getRawData();\n    let rawBytes = raw.serializeBinary();\n    return SHA256(rawBytes);\n}\nfunction blockFromBase64(blockString){\n    return Block.deserializeBinary(utils.base64DecodeFromString(blockString));\n}\n\nmodule.exports = {\n    blockFromBase64,\n    getBlockHash\n};\n","!function(globals) {\n'use strict'\n\nvar convertString = {\n  bytesToString: function(bytes) {\n    return bytes.map(function(x){ return String.fromCharCode(x) }).join('')\n  },\n  stringToBytes: function(str) {\n    return str.split('').map(function(x) { return x.charCodeAt(0) })\n  }\n}\n\n//http://hossa.in/2012/07/20/utf-8-in-javascript.html\nconvertString.UTF8 = {\n   bytesToString: function(bytes) {\n    return decodeURIComponent(escape(convertString.bytesToString(bytes)))\n  },\n  stringToBytes: function(str) {\n   return convertString.stringToBytes(unescape(encodeURIComponent(str)))\n  }\n}\n\nif (typeof module !== 'undefined' && module.exports) { //CommonJS\n  module.exports = convertString\n} else {\n  globals.convertString = convertString\n}\n\n}(this);","!function(globals) {\n'use strict'\n\nvar convertHex = {\n  bytesToHex: function(bytes) {\n    /*if (typeof bytes.byteLength != 'undefined') {\n      var newBytes = []\n\n      if (typeof bytes.buffer != 'undefined')\n        bytes = new DataView(bytes.buffer)\n      else\n        bytes = new DataView(bytes)\n\n      for (var i = 0; i < bytes.byteLength; ++i) {\n        newBytes.push(bytes.getUint8(i))\n      }\n      bytes = newBytes\n    }*/\n    return arrBytesToHex(bytes)\n  },\n  hexToBytes: function(hex) {\n    if (hex.length % 2 === 1) throw new Error(\"hexToBytes can't have a string with an odd number of characters.\")\n    if (hex.indexOf('0x') === 0) hex = hex.slice(2)\n    return hex.match(/../g).map(function(x) { return parseInt(x,16) })\n  }\n}\n\n\n// PRIVATE\n\nfunction arrBytesToHex(bytes) {\n  return bytes.map(function(x) { return padLeft(x.toString(16),2) }).join('')\n}\n\nfunction padLeft(orig, len) {\n  if (orig.length > len) return orig\n  return Array(len - orig.length + 1).join('0') + orig\n}\n\n\nif (typeof module !== 'undefined' && module.exports) { //CommonJS\n  module.exports = convertHex\n} else {\n  globals.convertHex = convertHex\n}\n\n}(this);","!function(globals) {\n'use strict'\n\nvar _imports = {}\n\nif (typeof module !== 'undefined' && module.exports) { //CommonJS\n  _imports.bytesToHex = require('convert-hex').bytesToHex\n  _imports.convertString = require('convert-string')\n  module.exports = sha256\n} else {\n  _imports.bytesToHex = globals.convertHex.bytesToHex\n  _imports.convertString = globals.convertString\n  globals.sha256 = sha256\n}\n\n/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n\n// Initialization round constants tables\nvar K = []\n\n// Compute constants\n!function () {\n  function isPrime(n) {\n    var sqrtN = Math.sqrt(n);\n    for (var factor = 2; factor <= sqrtN; factor++) {\n      if (!(n % factor)) return false\n    }\n\n    return true\n  }\n\n  function getFractionalBits(n) {\n    return ((n - (n | 0)) * 0x100000000) | 0\n  }\n\n  var n = 2\n  var nPrime = 0\n  while (nPrime < 64) {\n    if (isPrime(n)) {\n      K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3))\n      nPrime++\n    }\n\n    n++\n  }\n}()\n\nvar bytesToWords = function (bytes) {\n  var words = []\n  for (var i = 0, b = 0; i < bytes.length; i++, b += 8) {\n    words[b >>> 5] |= bytes[i] << (24 - b % 32)\n  }\n  return words\n}\n\nvar wordsToBytes = function (words) {\n  var bytes = []\n  for (var b = 0; b < words.length * 32; b += 8) {\n    bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF)\n  }\n  return bytes\n}\n\n// Reusable object\nvar W = []\n\nvar processBlock = function (H, M, offset) {\n  // Working variables\n  var a = H[0], b = H[1], c = H[2], d = H[3]\n  var e = H[4], f = H[5], g = H[6], h = H[7]\n\n    // Computation\n  for (var i = 0; i < 64; i++) {\n    if (i < 16) {\n      W[i] = M[offset + i] | 0\n    } else {\n      var gamma0x = W[i - 15]\n      var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n                    ((gamma0x << 14) | (gamma0x >>> 18)) ^\n                    (gamma0x >>> 3)\n\n      var gamma1x = W[i - 2];\n      var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n                    ((gamma1x << 13) | (gamma1x >>> 19)) ^\n                    (gamma1x >>> 10)\n\n      W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n    }\n\n    var ch  = (e & f) ^ (~e & g);\n    var maj = (a & b) ^ (a & c) ^ (b & c);\n\n    var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n    var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n    var t1 = h + sigma1 + ch + K[i] + W[i];\n    var t2 = sigma0 + maj;\n\n    h = g;\n    g = f;\n    f = e;\n    e = (d + t1) | 0;\n    d = c;\n    c = b;\n    b = a;\n    a = (t1 + t2) | 0;\n  }\n\n  // Intermediate hash value\n  H[0] = (H[0] + a) | 0;\n  H[1] = (H[1] + b) | 0;\n  H[2] = (H[2] + c) | 0;\n  H[3] = (H[3] + d) | 0;\n  H[4] = (H[4] + e) | 0;\n  H[5] = (H[5] + f) | 0;\n  H[6] = (H[6] + g) | 0;\n  H[7] = (H[7] + h) | 0;\n}\n\nfunction sha256(message, options) {;\n  if (message.constructor === String) {\n    message = _imports.convertString.UTF8.stringToBytes(message);\n  }\n\n  var H =[ 0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A,\n           0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19 ];\n\n  var m = bytesToWords(message);\n  var l = message.length * 8;\n\n  m[l >> 5] |= 0x80 << (24 - l % 32);\n  m[((l + 64 >> 9) << 4) + 15] = l;\n\n  for (var i=0 ; i<m.length; i += 16) {\n    processBlock(H, m, i);\n  }\n\n  var digestbytes = wordsToBytes(H);\n  return options && options.asBytes ? digestbytes :\n         options && options.asString ? _imports.convertString.bytesToString(digestbytes) :\n         _imports.bytesToHex(digestbytes)\n}\n\nsha256.x2 = function(message, options) {\n  return sha256(sha256(message, { asBytes:true }), options)\n}\n\n}(this);\n","(function (root) {\n   \"use strict\";\n\n/***** unorm.js *****/\n\n/*\n * UnicodeNormalizer 1.0.0\n * Copyright (c) 2008 Matsuza\n * Dual licensed under the MIT (MIT-LICENSE.txt) and GPL (GPL-LICENSE.txt) licenses.\n * $Date: 2008-06-05 16:44:17 +0200 (Thu, 05 Jun 2008) $\n * $Rev: 13309 $\n */\n\n   var DEFAULT_FEATURE = [null, 0, {}];\n   var CACHE_THRESHOLD = 10;\n   var SBase = 0xAC00, LBase = 0x1100, VBase = 0x1161, TBase = 0x11A7, LCount = 19, VCount = 21, TCount = 28;\n   var NCount = VCount * TCount; // 588\n   var SCount = LCount * NCount; // 11172\n\n   var UChar = function(cp, feature){\n      this.codepoint = cp;\n      this.feature = feature;\n   };\n\n   // Strategies\n   var cache = {};\n   var cacheCounter = [];\n   for (var i = 0; i <= 0xFF; ++i){\n      cacheCounter[i] = 0;\n   }\n\n   function fromCache(next, cp, needFeature){\n      var ret = cache[cp];\n      if(!ret){\n         ret = next(cp, needFeature);\n         if(!!ret.feature && ++cacheCounter[(cp >> 8) & 0xFF] > CACHE_THRESHOLD){\n            cache[cp] = ret;\n         }\n      }\n      return ret;\n   }\n\n   function fromData(next, cp, needFeature){\n      var hash = cp & 0xFF00;\n      var dunit = UChar.udata[hash] || {};\n      var f = dunit[cp];\n      return f ? new UChar(cp, f) : new UChar(cp, DEFAULT_FEATURE);\n   }\n   function fromCpOnly(next, cp, needFeature){\n      return !!needFeature ? next(cp, needFeature) : new UChar(cp, null);\n   }\n   function fromRuleBasedJamo(next, cp, needFeature){\n      var j;\n      if(cp < LBase || (LBase + LCount <= cp && cp < SBase) || (SBase + SCount < cp)){\n         return next(cp, needFeature);\n      }\n      if(LBase <= cp && cp < LBase + LCount){\n         var c = {};\n         var base = (cp - LBase) * VCount;\n         for (j = 0; j < VCount; ++j){\n            c[VBase + j] = SBase + TCount * (j + base);\n         }\n         return new UChar(cp, [,,c]);\n      }\n\n      var SIndex = cp - SBase;\n      var TIndex = SIndex % TCount;\n      var feature = [];\n      if(TIndex !== 0){\n         feature[0] = [SBase + SIndex - TIndex, TBase + TIndex];\n      } else {\n         feature[0] = [LBase + Math.floor(SIndex / NCount), VBase + Math.floor((SIndex % NCount) / TCount)];\n         feature[2] = {};\n         for (j = 1; j < TCount; ++j){\n            feature[2][TBase + j] = cp + j;\n         }\n      }\n      return new UChar(cp, feature);\n   }\n   function fromCpFilter(next, cp, needFeature){\n      return cp < 60 || 13311 < cp && cp < 42607 ? new UChar(cp, DEFAULT_FEATURE) : next(cp, needFeature);\n   }\n\n   var strategies = [fromCpFilter, fromCache, fromCpOnly, fromRuleBasedJamo, fromData];\n\n   UChar.fromCharCode = strategies.reduceRight(function (next, strategy) {\n      return function (cp, needFeature) {\n         return strategy(next, cp, needFeature);\n      };\n   }, null);\n\n   UChar.isHighSurrogate = function(cp){\n      return cp >= 0xD800 && cp <= 0xDBFF;\n   };\n   UChar.isLowSurrogate = function(cp){\n      return cp >= 0xDC00 && cp <= 0xDFFF;\n   };\n\n   UChar.prototype.prepFeature = function(){\n      if(!this.feature){\n         this.feature = UChar.fromCharCode(this.codepoint, true).feature;\n      }\n   };\n\n   UChar.prototype.toString = function(){\n      if(this.codepoint < 0x10000){\n         return String.fromCharCode(this.codepoint);\n      } else {\n         var x = this.codepoint - 0x10000;\n         return String.fromCharCode(Math.floor(x / 0x400) + 0xD800, x % 0x400 + 0xDC00);\n      }\n   };\n\n   UChar.prototype.getDecomp = function(){\n      this.prepFeature();\n      return this.feature[0] || null;\n   };\n\n   UChar.prototype.isCompatibility = function(){\n      this.prepFeature();\n      return !!this.feature[1] && (this.feature[1] & (1 << 8));\n   };\n   UChar.prototype.isExclude = function(){\n      this.prepFeature();\n      return !!this.feature[1] && (this.feature[1] & (1 << 9));\n   };\n   UChar.prototype.getCanonicalClass = function(){\n      this.prepFeature();\n      return !!this.feature[1] ? (this.feature[1] & 0xff) : 0;\n   };\n   UChar.prototype.getComposite = function(following){\n      this.prepFeature();\n      if(!this.feature[2]){\n         return null;\n      }\n      var cp = this.feature[2][following.codepoint];\n      return cp ? UChar.fromCharCode(cp) : null;\n   };\n\n   var UCharIterator = function(str){\n      this.str = str;\n      this.cursor = 0;\n   };\n   UCharIterator.prototype.next = function(){\n      if(!!this.str && this.cursor < this.str.length){\n         var cp = this.str.charCodeAt(this.cursor++);\n         var d;\n         if(UChar.isHighSurrogate(cp) && this.cursor < this.str.length && UChar.isLowSurrogate((d = this.str.charCodeAt(this.cursor)))){\n            cp = (cp - 0xD800) * 0x400 + (d -0xDC00) + 0x10000;\n            ++this.cursor;\n         }\n         return UChar.fromCharCode(cp);\n      } else {\n         this.str = null;\n         return null;\n      }\n   };\n\n   var RecursDecompIterator = function(it, cano){\n      this.it = it;\n      this.canonical = cano;\n      this.resBuf = [];\n   };\n\n   RecursDecompIterator.prototype.next = function(){\n      function recursiveDecomp(cano, uchar){\n         var decomp = uchar.getDecomp();\n         if(!!decomp && !(cano && uchar.isCompatibility())){\n            var ret = [];\n            for(var i = 0; i < decomp.length; ++i){\n               var a = recursiveDecomp(cano, UChar.fromCharCode(decomp[i]));\n                ret = ret.concat(a);\n            }\n            return ret;\n         } else {\n            return [uchar];\n         }\n      }\n      if(this.resBuf.length === 0){\n         var uchar = this.it.next();\n         if(!uchar){\n            return null;\n         }\n         this.resBuf = recursiveDecomp(this.canonical, uchar);\n      }\n      return this.resBuf.shift();\n   };\n\n   var DecompIterator = function(it){\n      this.it = it;\n      this.resBuf = [];\n   };\n\n   DecompIterator.prototype.next = function(){\n      var cc;\n      if(this.resBuf.length === 0){\n         do{\n            var uchar = this.it.next();\n            if(!uchar){\n               break;\n            }\n            cc = uchar.getCanonicalClass();\n            var inspt = this.resBuf.length;\n            if(cc !== 0){\n               for(; inspt > 0; --inspt){\n                  var uchar2 = this.resBuf[inspt - 1];\n                  var cc2 = uchar2.getCanonicalClass();\n                  if(cc2 <= cc){\n                     break;\n                  }\n               }\n            }\n            this.resBuf.splice(inspt, 0, uchar);\n         } while(cc !== 0);\n      }\n      return this.resBuf.shift();\n   };\n\n   var CompIterator = function(it){\n      this.it = it;\n      this.procBuf = [];\n      this.resBuf = [];\n      this.lastClass = null;\n   };\n\n   CompIterator.prototype.next = function(){\n      while(this.resBuf.length === 0){\n         var uchar = this.it.next();\n         if(!uchar){\n            this.resBuf = this.procBuf;\n            this.procBuf = [];\n            break;\n         }\n         if(this.procBuf.length === 0){\n            this.lastClass = uchar.getCanonicalClass();\n            this.procBuf.push(uchar);\n         } else {\n            var starter = this.procBuf[0];\n            var composite = starter.getComposite(uchar);\n            var cc = uchar.getCanonicalClass();\n            if(!!composite && (this.lastClass < cc || this.lastClass === 0)){\n               this.procBuf[0] = composite;\n            } else {\n               if(cc === 0){\n                  this.resBuf = this.procBuf;\n                  this.procBuf = [];\n               }\n               this.lastClass = cc;\n               this.procBuf.push(uchar);\n            }\n         }\n      }\n      return this.resBuf.shift();\n   };\n\n   var createIterator = function(mode, str){\n      switch(mode){\n         case \"NFD\":\n            return new DecompIterator(new RecursDecompIterator(new UCharIterator(str), true));\n         case \"NFKD\":\n            return new DecompIterator(new RecursDecompIterator(new UCharIterator(str), false));\n         case \"NFC\":\n            return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(str), true)));\n         case \"NFKC\":\n            return new CompIterator(new DecompIterator(new RecursDecompIterator(new UCharIterator(str), false)));\n      }\n      throw mode + \" is invalid\";\n   };\n   var normalize = function(mode, str){\n      var it = createIterator(mode, str);\n      var ret = \"\";\n      var uchar;\n      while(!!(uchar = it.next())){\n         ret += uchar.toString();\n      }\n      return ret;\n   };\n\n   /* API functions */\n   function nfd(str){\n      return normalize(\"NFD\", str);\n   }\n\n   function nfkd(str){\n      return normalize(\"NFKD\", str);\n   }\n\n   function nfc(str){\n      return normalize(\"NFC\", str);\n   }\n\n   function nfkc(str){\n      return normalize(\"NFKC\", str);\n   }\n\n/* Unicode data */\nUChar.udata={\n0:{60:[,,{824:8814}],61:[,,{824:8800}],62:[,,{824:8815}],65:[,,{768:192,769:193,770:194,771:195,772:256,774:258,775:550,776:196,777:7842,778:197,780:461,783:512,785:514,803:7840,805:7680,808:260}],66:[,,{775:7682,803:7684,817:7686}],67:[,,{769:262,770:264,775:266,780:268,807:199}],68:[,,{775:7690,780:270,803:7692,807:7696,813:7698,817:7694}],69:[,,{768:200,769:201,770:202,771:7868,772:274,774:276,775:278,776:203,777:7866,780:282,783:516,785:518,803:7864,807:552,808:280,813:7704,816:7706}],70:[,,{775:7710}],71:[,,{769:500,770:284,772:7712,774:286,775:288,780:486,807:290}],72:[,,{770:292,775:7714,776:7718,780:542,803:7716,807:7720,814:7722}],73:[,,{768:204,769:205,770:206,771:296,772:298,774:300,775:304,776:207,777:7880,780:463,783:520,785:522,803:7882,808:302,816:7724}],74:[,,{770:308}],75:[,,{769:7728,780:488,803:7730,807:310,817:7732}],76:[,,{769:313,780:317,803:7734,807:315,813:7740,817:7738}],77:[,,{769:7742,775:7744,803:7746}],78:[,,{768:504,769:323,771:209,775:7748,780:327,803:7750,807:325,813:7754,817:7752}],79:[,,{768:210,769:211,770:212,771:213,772:332,774:334,775:558,776:214,777:7886,779:336,780:465,783:524,785:526,795:416,803:7884,808:490}],80:[,,{769:7764,775:7766}],82:[,,{769:340,775:7768,780:344,783:528,785:530,803:7770,807:342,817:7774}],83:[,,{769:346,770:348,775:7776,780:352,803:7778,806:536,807:350}],84:[,,{775:7786,780:356,803:7788,806:538,807:354,813:7792,817:7790}],85:[,,{768:217,769:218,770:219,771:360,772:362,774:364,776:220,777:7910,778:366,779:368,780:467,783:532,785:534,795:431,803:7908,804:7794,808:370,813:7798,816:7796}],86:[,,{771:7804,803:7806}],87:[,,{768:7808,769:7810,770:372,775:7814,776:7812,803:7816}],88:[,,{775:7818,776:7820}],89:[,,{768:7922,769:221,770:374,771:7928,772:562,775:7822,776:376,777:7926,803:7924}],90:[,,{769:377,770:7824,775:379,780:381,803:7826,817:7828}],97:[,,{768:224,769:225,770:226,771:227,772:257,774:259,775:551,776:228,777:7843,778:229,780:462,783:513,785:515,803:7841,805:7681,808:261}],98:[,,{775:7683,803:7685,817:7687}],99:[,,{769:263,770:265,775:267,780:269,807:231}],100:[,,{775:7691,780:271,803:7693,807:7697,813:7699,817:7695}],101:[,,{768:232,769:233,770:234,771:7869,772:275,774:277,775:279,776:235,777:7867,780:283,783:517,785:519,803:7865,807:553,808:281,813:7705,816:7707}],102:[,,{775:7711}],103:[,,{769:501,770:285,772:7713,774:287,775:289,780:487,807:291}],104:[,,{770:293,775:7715,776:7719,780:543,803:7717,807:7721,814:7723,817:7830}],105:[,,{768:236,769:237,770:238,771:297,772:299,774:301,776:239,777:7881,780:464,783:521,785:523,803:7883,808:303,816:7725}],106:[,,{770:309,780:496}],107:[,,{769:7729,780:489,803:7731,807:311,817:7733}],108:[,,{769:314,780:318,803:7735,807:316,813:7741,817:7739}],109:[,,{769:7743,775:7745,803:7747}],110:[,,{768:505,769:324,771:241,775:7749,780:328,803:7751,807:326,813:7755,817:7753}],111:[,,{768:242,769:243,770:244,771:245,772:333,774:335,775:559,776:246,777:7887,779:337,780:466,783:525,785:527,795:417,803:7885,808:491}],112:[,,{769:7765,775:7767}],114:[,,{769:341,775:7769,780:345,783:529,785:531,803:7771,807:343,817:7775}],115:[,,{769:347,770:349,775:7777,780:353,803:7779,806:537,807:351}],116:[,,{775:7787,776:7831,780:357,803:7789,806:539,807:355,813:7793,817:7791}],117:[,,{768:249,769:250,770:251,771:361,772:363,774:365,776:252,777:7911,778:367,779:369,780:468,783:533,785:535,795:432,803:7909,804:7795,808:371,813:7799,816:7797}],118:[,,{771:7805,803:7807}],119:[,,{768:7809,769:7811,770:373,775:7815,776:7813,778:7832,803:7817}],120:[,,{775:7819,776:7821}],121:[,,{768:7923,769:253,770:375,771:7929,772:563,775:7823,776:255,777:7927,778:7833,803:7925}],122:[,,{769:378,770:7825,775:380,780:382,803:7827,817:7829}],160:[[32],256],168:[[32,776],256,{768:8173,769:901,834:8129}],170:[[97],256],175:[[32,772],256],178:[[50],256],179:[[51],256],180:[[32,769],256],181:[[956],256],184:[[32,807],256],185:[[49],256],186:[[111],256],188:[[49,8260,52],256],189:[[49,8260,50],256],190:[[51,8260,52],256],192:[[65,768]],193:[[65,769]],194:[[65,770],,{768:7846,769:7844,771:7850,777:7848}],195:[[65,771]],196:[[65,776],,{772:478}],197:[[65,778],,{769:506}],198:[,,{769:508,772:482}],199:[[67,807],,{769:7688}],200:[[69,768]],201:[[69,769]],202:[[69,770],,{768:7872,769:7870,771:7876,777:7874}],203:[[69,776]],204:[[73,768]],205:[[73,769]],206:[[73,770]],207:[[73,776],,{769:7726}],209:[[78,771]],210:[[79,768]],211:[[79,769]],212:[[79,770],,{768:7890,769:7888,771:7894,777:7892}],213:[[79,771],,{769:7756,772:556,776:7758}],214:[[79,776],,{772:554}],216:[,,{769:510}],217:[[85,768]],218:[[85,769]],219:[[85,770]],220:[[85,776],,{768:475,769:471,772:469,780:473}],221:[[89,769]],224:[[97,768]],225:[[97,769]],226:[[97,770],,{768:7847,769:7845,771:7851,777:7849}],227:[[97,771]],228:[[97,776],,{772:479}],229:[[97,778],,{769:507}],230:[,,{769:509,772:483}],231:[[99,807],,{769:7689}],232:[[101,768]],233:[[101,769]],234:[[101,770],,{768:7873,769:7871,771:7877,777:7875}],235:[[101,776]],236:[[105,768]],237:[[105,769]],238:[[105,770]],239:[[105,776],,{769:7727}],241:[[110,771]],242:[[111,768]],243:[[111,769]],244:[[111,770],,{768:7891,769:7889,771:7895,777:7893}],245:[[111,771],,{769:7757,772:557,776:7759}],246:[[111,776],,{772:555}],248:[,,{769:511}],249:[[117,768]],250:[[117,769]],251:[[117,770]],252:[[117,776],,{768:476,769:472,772:470,780:474}],253:[[121,769]],255:[[121,776]]},\n256:{256:[[65,772]],257:[[97,772]],258:[[65,774],,{768:7856,769:7854,771:7860,777:7858}],259:[[97,774],,{768:7857,769:7855,771:7861,777:7859}],260:[[65,808]],261:[[97,808]],262:[[67,769]],263:[[99,769]],264:[[67,770]],265:[[99,770]],266:[[67,775]],267:[[99,775]],268:[[67,780]],269:[[99,780]],270:[[68,780]],271:[[100,780]],274:[[69,772],,{768:7700,769:7702}],275:[[101,772],,{768:7701,769:7703}],276:[[69,774]],277:[[101,774]],278:[[69,775]],279:[[101,775]],280:[[69,808]],281:[[101,808]],282:[[69,780]],283:[[101,780]],284:[[71,770]],285:[[103,770]],286:[[71,774]],287:[[103,774]],288:[[71,775]],289:[[103,775]],290:[[71,807]],291:[[103,807]],292:[[72,770]],293:[[104,770]],296:[[73,771]],297:[[105,771]],298:[[73,772]],299:[[105,772]],300:[[73,774]],301:[[105,774]],302:[[73,808]],303:[[105,808]],304:[[73,775]],306:[[73,74],256],307:[[105,106],256],308:[[74,770]],309:[[106,770]],310:[[75,807]],311:[[107,807]],313:[[76,769]],314:[[108,769]],315:[[76,807]],316:[[108,807]],317:[[76,780]],318:[[108,780]],319:[[76,183],256],320:[[108,183],256],323:[[78,769]],324:[[110,769]],325:[[78,807]],326:[[110,807]],327:[[78,780]],328:[[110,780]],329:[[700,110],256],332:[[79,772],,{768:7760,769:7762}],333:[[111,772],,{768:7761,769:7763}],334:[[79,774]],335:[[111,774]],336:[[79,779]],337:[[111,779]],340:[[82,769]],341:[[114,769]],342:[[82,807]],343:[[114,807]],344:[[82,780]],345:[[114,780]],346:[[83,769],,{775:7780}],347:[[115,769],,{775:7781}],348:[[83,770]],349:[[115,770]],350:[[83,807]],351:[[115,807]],352:[[83,780],,{775:7782}],353:[[115,780],,{775:7783}],354:[[84,807]],355:[[116,807]],356:[[84,780]],357:[[116,780]],360:[[85,771],,{769:7800}],361:[[117,771],,{769:7801}],362:[[85,772],,{776:7802}],363:[[117,772],,{776:7803}],364:[[85,774]],365:[[117,774]],366:[[85,778]],367:[[117,778]],368:[[85,779]],369:[[117,779]],370:[[85,808]],371:[[117,808]],372:[[87,770]],373:[[119,770]],374:[[89,770]],375:[[121,770]],376:[[89,776]],377:[[90,769]],378:[[122,769]],379:[[90,775]],380:[[122,775]],381:[[90,780]],382:[[122,780]],383:[[115],256,{775:7835}],416:[[79,795],,{768:7900,769:7898,771:7904,777:7902,803:7906}],417:[[111,795],,{768:7901,769:7899,771:7905,777:7903,803:7907}],431:[[85,795],,{768:7914,769:7912,771:7918,777:7916,803:7920}],432:[[117,795],,{768:7915,769:7913,771:7919,777:7917,803:7921}],439:[,,{780:494}],452:[[68,381],256],453:[[68,382],256],454:[[100,382],256],455:[[76,74],256],456:[[76,106],256],457:[[108,106],256],458:[[78,74],256],459:[[78,106],256],460:[[110,106],256],461:[[65,780]],462:[[97,780]],463:[[73,780]],464:[[105,780]],465:[[79,780]],466:[[111,780]],467:[[85,780]],468:[[117,780]],469:[[220,772]],470:[[252,772]],471:[[220,769]],472:[[252,769]],473:[[220,780]],474:[[252,780]],475:[[220,768]],476:[[252,768]],478:[[196,772]],479:[[228,772]],480:[[550,772]],481:[[551,772]],482:[[198,772]],483:[[230,772]],486:[[71,780]],487:[[103,780]],488:[[75,780]],489:[[107,780]],490:[[79,808],,{772:492}],491:[[111,808],,{772:493}],492:[[490,772]],493:[[491,772]],494:[[439,780]],495:[[658,780]],496:[[106,780]],497:[[68,90],256],498:[[68,122],256],499:[[100,122],256],500:[[71,769]],501:[[103,769]],504:[[78,768]],505:[[110,768]],506:[[197,769]],507:[[229,769]],508:[[198,769]],509:[[230,769]],510:[[216,769]],511:[[248,769]],66045:[,220]},\n512:{512:[[65,783]],513:[[97,783]],514:[[65,785]],515:[[97,785]],516:[[69,783]],517:[[101,783]],518:[[69,785]],519:[[101,785]],520:[[73,783]],521:[[105,783]],522:[[73,785]],523:[[105,785]],524:[[79,783]],525:[[111,783]],526:[[79,785]],527:[[111,785]],528:[[82,783]],529:[[114,783]],530:[[82,785]],531:[[114,785]],532:[[85,783]],533:[[117,783]],534:[[85,785]],535:[[117,785]],536:[[83,806]],537:[[115,806]],538:[[84,806]],539:[[116,806]],542:[[72,780]],543:[[104,780]],550:[[65,775],,{772:480}],551:[[97,775],,{772:481}],552:[[69,807],,{774:7708}],553:[[101,807],,{774:7709}],554:[[214,772]],555:[[246,772]],556:[[213,772]],557:[[245,772]],558:[[79,775],,{772:560}],559:[[111,775],,{772:561}],560:[[558,772]],561:[[559,772]],562:[[89,772]],563:[[121,772]],658:[,,{780:495}],688:[[104],256],689:[[614],256],690:[[106],256],691:[[114],256],692:[[633],256],693:[[635],256],694:[[641],256],695:[[119],256],696:[[121],256],728:[[32,774],256],729:[[32,775],256],730:[[32,778],256],731:[[32,808],256],732:[[32,771],256],733:[[32,779],256],736:[[611],256],737:[[108],256],738:[[115],256],739:[[120],256],740:[[661],256],66272:[,220]},\n768:{768:[,230],769:[,230],770:[,230],771:[,230],772:[,230],773:[,230],774:[,230],775:[,230],776:[,230,{769:836}],777:[,230],778:[,230],779:[,230],780:[,230],781:[,230],782:[,230],783:[,230],784:[,230],785:[,230],786:[,230],787:[,230],788:[,230],789:[,232],790:[,220],791:[,220],792:[,220],793:[,220],794:[,232],795:[,216],796:[,220],797:[,220],798:[,220],799:[,220],800:[,220],801:[,202],802:[,202],803:[,220],804:[,220],805:[,220],806:[,220],807:[,202],808:[,202],809:[,220],810:[,220],811:[,220],812:[,220],813:[,220],814:[,220],815:[,220],816:[,220],817:[,220],818:[,220],819:[,220],820:[,1],821:[,1],822:[,1],823:[,1],824:[,1],825:[,220],826:[,220],827:[,220],828:[,220],829:[,230],830:[,230],831:[,230],832:[[768],230],833:[[769],230],834:[,230],835:[[787],230],836:[[776,769],230],837:[,240],838:[,230],839:[,220],840:[,220],841:[,220],842:[,230],843:[,230],844:[,230],845:[,220],846:[,220],848:[,230],849:[,230],850:[,230],851:[,220],852:[,220],853:[,220],854:[,220],855:[,230],856:[,232],857:[,220],858:[,220],859:[,230],860:[,233],861:[,234],862:[,234],863:[,233],864:[,234],865:[,234],866:[,233],867:[,230],868:[,230],869:[,230],870:[,230],871:[,230],872:[,230],873:[,230],874:[,230],875:[,230],876:[,230],877:[,230],878:[,230],879:[,230],884:[[697]],890:[[32,837],256],894:[[59]],900:[[32,769],256],901:[[168,769]],902:[[913,769]],903:[[183]],904:[[917,769]],905:[[919,769]],906:[[921,769]],908:[[927,769]],910:[[933,769]],911:[[937,769]],912:[[970,769]],913:[,,{768:8122,769:902,772:8121,774:8120,787:7944,788:7945,837:8124}],917:[,,{768:8136,769:904,787:7960,788:7961}],919:[,,{768:8138,769:905,787:7976,788:7977,837:8140}],921:[,,{768:8154,769:906,772:8153,774:8152,776:938,787:7992,788:7993}],927:[,,{768:8184,769:908,787:8008,788:8009}],929:[,,{788:8172}],933:[,,{768:8170,769:910,772:8169,774:8168,776:939,788:8025}],937:[,,{768:8186,769:911,787:8040,788:8041,837:8188}],938:[[921,776]],939:[[933,776]],940:[[945,769],,{837:8116}],941:[[949,769]],942:[[951,769],,{837:8132}],943:[[953,769]],944:[[971,769]],945:[,,{768:8048,769:940,772:8113,774:8112,787:7936,788:7937,834:8118,837:8115}],949:[,,{768:8050,769:941,787:7952,788:7953}],951:[,,{768:8052,769:942,787:7968,788:7969,834:8134,837:8131}],953:[,,{768:8054,769:943,772:8145,774:8144,776:970,787:7984,788:7985,834:8150}],959:[,,{768:8056,769:972,787:8000,788:8001}],961:[,,{787:8164,788:8165}],965:[,,{768:8058,769:973,772:8161,774:8160,776:971,787:8016,788:8017,834:8166}],969:[,,{768:8060,769:974,787:8032,788:8033,834:8182,837:8179}],970:[[953,776],,{768:8146,769:912,834:8151}],971:[[965,776],,{768:8162,769:944,834:8167}],972:[[959,769]],973:[[965,769]],974:[[969,769],,{837:8180}],976:[[946],256],977:[[952],256],978:[[933],256,{769:979,776:980}],979:[[978,769]],980:[[978,776]],981:[[966],256],982:[[960],256],1008:[[954],256],1009:[[961],256],1010:[[962],256],1012:[[920],256],1013:[[949],256],1017:[[931],256],66422:[,230],66423:[,230],66424:[,230],66425:[,230],66426:[,230]},\n1024:{1024:[[1045,768]],1025:[[1045,776]],1027:[[1043,769]],1030:[,,{776:1031}],1031:[[1030,776]],1036:[[1050,769]],1037:[[1048,768]],1038:[[1059,774]],1040:[,,{774:1232,776:1234}],1043:[,,{769:1027}],1045:[,,{768:1024,774:1238,776:1025}],1046:[,,{774:1217,776:1244}],1047:[,,{776:1246}],1048:[,,{768:1037,772:1250,774:1049,776:1252}],1049:[[1048,774]],1050:[,,{769:1036}],1054:[,,{776:1254}],1059:[,,{772:1262,774:1038,776:1264,779:1266}],1063:[,,{776:1268}],1067:[,,{776:1272}],1069:[,,{776:1260}],1072:[,,{774:1233,776:1235}],1075:[,,{769:1107}],1077:[,,{768:1104,774:1239,776:1105}],1078:[,,{774:1218,776:1245}],1079:[,,{776:1247}],1080:[,,{768:1117,772:1251,774:1081,776:1253}],1081:[[1080,774]],1082:[,,{769:1116}],1086:[,,{776:1255}],1091:[,,{772:1263,774:1118,776:1265,779:1267}],1095:[,,{776:1269}],1099:[,,{776:1273}],1101:[,,{776:1261}],1104:[[1077,768]],1105:[[1077,776]],1107:[[1075,769]],1110:[,,{776:1111}],1111:[[1110,776]],1116:[[1082,769]],1117:[[1080,768]],1118:[[1091,774]],1140:[,,{783:1142}],1141:[,,{783:1143}],1142:[[1140,783]],1143:[[1141,783]],1155:[,230],1156:[,230],1157:[,230],1158:[,230],1159:[,230],1217:[[1046,774]],1218:[[1078,774]],1232:[[1040,774]],1233:[[1072,774]],1234:[[1040,776]],1235:[[1072,776]],1238:[[1045,774]],1239:[[1077,774]],1240:[,,{776:1242}],1241:[,,{776:1243}],1242:[[1240,776]],1243:[[1241,776]],1244:[[1046,776]],1245:[[1078,776]],1246:[[1047,776]],1247:[[1079,776]],1250:[[1048,772]],1251:[[1080,772]],1252:[[1048,776]],1253:[[1080,776]],1254:[[1054,776]],1255:[[1086,776]],1256:[,,{776:1258}],1257:[,,{776:1259}],1258:[[1256,776]],1259:[[1257,776]],1260:[[1069,776]],1261:[[1101,776]],1262:[[1059,772]],1263:[[1091,772]],1264:[[1059,776]],1265:[[1091,776]],1266:[[1059,779]],1267:[[1091,779]],1268:[[1063,776]],1269:[[1095,776]],1272:[[1067,776]],1273:[[1099,776]]},\n1280:{1415:[[1381,1410],256],1425:[,220],1426:[,230],1427:[,230],1428:[,230],1429:[,230],1430:[,220],1431:[,230],1432:[,230],1433:[,230],1434:[,222],1435:[,220],1436:[,230],1437:[,230],1438:[,230],1439:[,230],1440:[,230],1441:[,230],1442:[,220],1443:[,220],1444:[,220],1445:[,220],1446:[,220],1447:[,220],1448:[,230],1449:[,230],1450:[,220],1451:[,230],1452:[,230],1453:[,222],1454:[,228],1455:[,230],1456:[,10],1457:[,11],1458:[,12],1459:[,13],1460:[,14],1461:[,15],1462:[,16],1463:[,17],1464:[,18],1465:[,19],1466:[,19],1467:[,20],1468:[,21],1469:[,22],1471:[,23],1473:[,24],1474:[,25],1476:[,230],1477:[,220],1479:[,18]},\n1536:{1552:[,230],1553:[,230],1554:[,230],1555:[,230],1556:[,230],1557:[,230],1558:[,230],1559:[,230],1560:[,30],1561:[,31],1562:[,32],1570:[[1575,1619]],1571:[[1575,1620]],1572:[[1608,1620]],1573:[[1575,1621]],1574:[[1610,1620]],1575:[,,{1619:1570,1620:1571,1621:1573}],1608:[,,{1620:1572}],1610:[,,{1620:1574}],1611:[,27],1612:[,28],1613:[,29],1614:[,30],1615:[,31],1616:[,32],1617:[,33],1618:[,34],1619:[,230],1620:[,230],1621:[,220],1622:[,220],1623:[,230],1624:[,230],1625:[,230],1626:[,230],1627:[,230],1628:[,220],1629:[,230],1630:[,230],1631:[,220],1648:[,35],1653:[[1575,1652],256],1654:[[1608,1652],256],1655:[[1735,1652],256],1656:[[1610,1652],256],1728:[[1749,1620]],1729:[,,{1620:1730}],1730:[[1729,1620]],1746:[,,{1620:1747}],1747:[[1746,1620]],1749:[,,{1620:1728}],1750:[,230],1751:[,230],1752:[,230],1753:[,230],1754:[,230],1755:[,230],1756:[,230],1759:[,230],1760:[,230],1761:[,230],1762:[,230],1763:[,220],1764:[,230],1767:[,230],1768:[,230],1770:[,220],1771:[,230],1772:[,230],1773:[,220]},\n1792:{1809:[,36],1840:[,230],1841:[,220],1842:[,230],1843:[,230],1844:[,220],1845:[,230],1846:[,230],1847:[,220],1848:[,220],1849:[,220],1850:[,230],1851:[,220],1852:[,220],1853:[,230],1854:[,220],1855:[,230],1856:[,230],1857:[,230],1858:[,220],1859:[,230],1860:[,220],1861:[,230],1862:[,220],1863:[,230],1864:[,220],1865:[,230],1866:[,230],2027:[,230],2028:[,230],2029:[,230],2030:[,230],2031:[,230],2032:[,230],2033:[,230],2034:[,220],2035:[,230]},\n2048:{2070:[,230],2071:[,230],2072:[,230],2073:[,230],2075:[,230],2076:[,230],2077:[,230],2078:[,230],2079:[,230],2080:[,230],2081:[,230],2082:[,230],2083:[,230],2085:[,230],2086:[,230],2087:[,230],2089:[,230],2090:[,230],2091:[,230],2092:[,230],2093:[,230],2137:[,220],2138:[,220],2139:[,220],2276:[,230],2277:[,230],2278:[,220],2279:[,230],2280:[,230],2281:[,220],2282:[,230],2283:[,230],2284:[,230],2285:[,220],2286:[,220],2287:[,220],2288:[,27],2289:[,28],2290:[,29],2291:[,230],2292:[,230],2293:[,230],2294:[,220],2295:[,230],2296:[,230],2297:[,220],2298:[,220],2299:[,230],2300:[,230],2301:[,230],2302:[,230],2303:[,230]},\n2304:{2344:[,,{2364:2345}],2345:[[2344,2364]],2352:[,,{2364:2353}],2353:[[2352,2364]],2355:[,,{2364:2356}],2356:[[2355,2364]],2364:[,7],2381:[,9],2385:[,230],2386:[,220],2387:[,230],2388:[,230],2392:[[2325,2364],512],2393:[[2326,2364],512],2394:[[2327,2364],512],2395:[[2332,2364],512],2396:[[2337,2364],512],2397:[[2338,2364],512],2398:[[2347,2364],512],2399:[[2351,2364],512],2492:[,7],2503:[,,{2494:2507,2519:2508}],2507:[[2503,2494]],2508:[[2503,2519]],2509:[,9],2524:[[2465,2492],512],2525:[[2466,2492],512],2527:[[2479,2492],512]},\n2560:{2611:[[2610,2620],512],2614:[[2616,2620],512],2620:[,7],2637:[,9],2649:[[2582,2620],512],2650:[[2583,2620],512],2651:[[2588,2620],512],2654:[[2603,2620],512],2748:[,7],2765:[,9],68109:[,220],68111:[,230],68152:[,230],68153:[,1],68154:[,220],68159:[,9],68325:[,230],68326:[,220]},\n2816:{2876:[,7],2887:[,,{2878:2891,2902:2888,2903:2892}],2888:[[2887,2902]],2891:[[2887,2878]],2892:[[2887,2903]],2893:[,9],2908:[[2849,2876],512],2909:[[2850,2876],512],2962:[,,{3031:2964}],2964:[[2962,3031]],3014:[,,{3006:3018,3031:3020}],3015:[,,{3006:3019}],3018:[[3014,3006]],3019:[[3015,3006]],3020:[[3014,3031]],3021:[,9]},\n3072:{3142:[,,{3158:3144}],3144:[[3142,3158]],3149:[,9],3157:[,84],3158:[,91],3260:[,7],3263:[,,{3285:3264}],3264:[[3263,3285]],3270:[,,{3266:3274,3285:3271,3286:3272}],3271:[[3270,3285]],3272:[[3270,3286]],3274:[[3270,3266],,{3285:3275}],3275:[[3274,3285]],3277:[,9]},\n3328:{3398:[,,{3390:3402,3415:3404}],3399:[,,{3390:3403}],3402:[[3398,3390]],3403:[[3399,3390]],3404:[[3398,3415]],3405:[,9],3530:[,9],3545:[,,{3530:3546,3535:3548,3551:3550}],3546:[[3545,3530]],3548:[[3545,3535],,{3530:3549}],3549:[[3548,3530]],3550:[[3545,3551]]},\n3584:{3635:[[3661,3634],256],3640:[,103],3641:[,103],3642:[,9],3656:[,107],3657:[,107],3658:[,107],3659:[,107],3763:[[3789,3762],256],3768:[,118],3769:[,118],3784:[,122],3785:[,122],3786:[,122],3787:[,122],3804:[[3755,3737],256],3805:[[3755,3745],256]},\n3840:{3852:[[3851],256],3864:[,220],3865:[,220],3893:[,220],3895:[,220],3897:[,216],3907:[[3906,4023],512],3917:[[3916,4023],512],3922:[[3921,4023],512],3927:[[3926,4023],512],3932:[[3931,4023],512],3945:[[3904,4021],512],3953:[,129],3954:[,130],3955:[[3953,3954],512],3956:[,132],3957:[[3953,3956],512],3958:[[4018,3968],512],3959:[[4018,3969],256],3960:[[4019,3968],512],3961:[[4019,3969],256],3962:[,130],3963:[,130],3964:[,130],3965:[,130],3968:[,130],3969:[[3953,3968],512],3970:[,230],3971:[,230],3972:[,9],3974:[,230],3975:[,230],3987:[[3986,4023],512],3997:[[3996,4023],512],4002:[[4001,4023],512],4007:[[4006,4023],512],4012:[[4011,4023],512],4025:[[3984,4021],512],4038:[,220]},\n4096:{4133:[,,{4142:4134}],4134:[[4133,4142]],4151:[,7],4153:[,9],4154:[,9],4237:[,220],4348:[[4316],256],69702:[,9],69759:[,9],69785:[,,{69818:69786}],69786:[[69785,69818]],69787:[,,{69818:69788}],69788:[[69787,69818]],69797:[,,{69818:69803}],69803:[[69797,69818]],69817:[,9],69818:[,7]},\n4352:{69888:[,230],69889:[,230],69890:[,230],69934:[[69937,69927]],69935:[[69938,69927]],69937:[,,{69927:69934}],69938:[,,{69927:69935}],69939:[,9],69940:[,9],70003:[,7],70080:[,9]},\n4608:{70197:[,9],70198:[,7],70377:[,7],70378:[,9]},\n4864:{4957:[,230],4958:[,230],4959:[,230],70460:[,7],70471:[,,{70462:70475,70487:70476}],70475:[[70471,70462]],70476:[[70471,70487]],70477:[,9],70502:[,230],70503:[,230],70504:[,230],70505:[,230],70506:[,230],70507:[,230],70508:[,230],70512:[,230],70513:[,230],70514:[,230],70515:[,230],70516:[,230]},\n5120:{70841:[,,{70832:70844,70842:70843,70845:70846}],70843:[[70841,70842]],70844:[[70841,70832]],70846:[[70841,70845]],70850:[,9],70851:[,7]},\n5376:{71096:[,,{71087:71098}],71097:[,,{71087:71099}],71098:[[71096,71087]],71099:[[71097,71087]],71103:[,9],71104:[,7]},\n5632:{71231:[,9],71350:[,9],71351:[,7]},\n5888:{5908:[,9],5940:[,9],6098:[,9],6109:[,230]},\n6144:{6313:[,228]},\n6400:{6457:[,222],6458:[,230],6459:[,220]},\n6656:{6679:[,230],6680:[,220],6752:[,9],6773:[,230],6774:[,230],6775:[,230],6776:[,230],6777:[,230],6778:[,230],6779:[,230],6780:[,230],6783:[,220],6832:[,230],6833:[,230],6834:[,230],6835:[,230],6836:[,230],6837:[,220],6838:[,220],6839:[,220],6840:[,220],6841:[,220],6842:[,220],6843:[,230],6844:[,230],6845:[,220]},\n6912:{6917:[,,{6965:6918}],6918:[[6917,6965]],6919:[,,{6965:6920}],6920:[[6919,6965]],6921:[,,{6965:6922}],6922:[[6921,6965]],6923:[,,{6965:6924}],6924:[[6923,6965]],6925:[,,{6965:6926}],6926:[[6925,6965]],6929:[,,{6965:6930}],6930:[[6929,6965]],6964:[,7],6970:[,,{6965:6971}],6971:[[6970,6965]],6972:[,,{6965:6973}],6973:[[6972,6965]],6974:[,,{6965:6976}],6975:[,,{6965:6977}],6976:[[6974,6965]],6977:[[6975,6965]],6978:[,,{6965:6979}],6979:[[6978,6965]],6980:[,9],7019:[,230],7020:[,220],7021:[,230],7022:[,230],7023:[,230],7024:[,230],7025:[,230],7026:[,230],7027:[,230],7082:[,9],7083:[,9],7142:[,7],7154:[,9],7155:[,9]},\n7168:{7223:[,7],7376:[,230],7377:[,230],7378:[,230],7380:[,1],7381:[,220],7382:[,220],7383:[,220],7384:[,220],7385:[,220],7386:[,230],7387:[,230],7388:[,220],7389:[,220],7390:[,220],7391:[,220],7392:[,230],7394:[,1],7395:[,1],7396:[,1],7397:[,1],7398:[,1],7399:[,1],7400:[,1],7405:[,220],7412:[,230],7416:[,230],7417:[,230]},\n7424:{7468:[[65],256],7469:[[198],256],7470:[[66],256],7472:[[68],256],7473:[[69],256],7474:[[398],256],7475:[[71],256],7476:[[72],256],7477:[[73],256],7478:[[74],256],7479:[[75],256],7480:[[76],256],7481:[[77],256],7482:[[78],256],7484:[[79],256],7485:[[546],256],7486:[[80],256],7487:[[82],256],7488:[[84],256],7489:[[85],256],7490:[[87],256],7491:[[97],256],7492:[[592],256],7493:[[593],256],7494:[[7426],256],7495:[[98],256],7496:[[100],256],7497:[[101],256],7498:[[601],256],7499:[[603],256],7500:[[604],256],7501:[[103],256],7503:[[107],256],7504:[[109],256],7505:[[331],256],7506:[[111],256],7507:[[596],256],7508:[[7446],256],7509:[[7447],256],7510:[[112],256],7511:[[116],256],7512:[[117],256],7513:[[7453],256],7514:[[623],256],7515:[[118],256],7516:[[7461],256],7517:[[946],256],7518:[[947],256],7519:[[948],256],7520:[[966],256],7521:[[967],256],7522:[[105],256],7523:[[114],256],7524:[[117],256],7525:[[118],256],7526:[[946],256],7527:[[947],256],7528:[[961],256],7529:[[966],256],7530:[[967],256],7544:[[1085],256],7579:[[594],256],7580:[[99],256],7581:[[597],256],7582:[[240],256],7583:[[604],256],7584:[[102],256],7585:[[607],256],7586:[[609],256],7587:[[613],256],7588:[[616],256],7589:[[617],256],7590:[[618],256],7591:[[7547],256],7592:[[669],256],7593:[[621],256],7594:[[7557],256],7595:[[671],256],7596:[[625],256],7597:[[624],256],7598:[[626],256],7599:[[627],256],7600:[[628],256],7601:[[629],256],7602:[[632],256],7603:[[642],256],7604:[[643],256],7605:[[427],256],7606:[[649],256],7607:[[650],256],7608:[[7452],256],7609:[[651],256],7610:[[652],256],7611:[[122],256],7612:[[656],256],7613:[[657],256],7614:[[658],256],7615:[[952],256],7616:[,230],7617:[,230],7618:[,220],7619:[,230],7620:[,230],7621:[,230],7622:[,230],7623:[,230],7624:[,230],7625:[,230],7626:[,220],7627:[,230],7628:[,230],7629:[,234],7630:[,214],7631:[,220],7632:[,202],7633:[,230],7634:[,230],7635:[,230],7636:[,230],7637:[,230],7638:[,230],7639:[,230],7640:[,230],7641:[,230],7642:[,230],7643:[,230],7644:[,230],7645:[,230],7646:[,230],7647:[,230],7648:[,230],7649:[,230],7650:[,230],7651:[,230],7652:[,230],7653:[,230],7654:[,230],7655:[,230],7656:[,230],7657:[,230],7658:[,230],7659:[,230],7660:[,230],7661:[,230],7662:[,230],7663:[,230],7664:[,230],7665:[,230],7666:[,230],7667:[,230],7668:[,230],7669:[,230],7676:[,233],7677:[,220],7678:[,230],7679:[,220]},\n7680:{7680:[[65,805]],7681:[[97,805]],7682:[[66,775]],7683:[[98,775]],7684:[[66,803]],7685:[[98,803]],7686:[[66,817]],7687:[[98,817]],7688:[[199,769]],7689:[[231,769]],7690:[[68,775]],7691:[[100,775]],7692:[[68,803]],7693:[[100,803]],7694:[[68,817]],7695:[[100,817]],7696:[[68,807]],7697:[[100,807]],7698:[[68,813]],7699:[[100,813]],7700:[[274,768]],7701:[[275,768]],7702:[[274,769]],7703:[[275,769]],7704:[[69,813]],7705:[[101,813]],7706:[[69,816]],7707:[[101,816]],7708:[[552,774]],7709:[[553,774]],7710:[[70,775]],7711:[[102,775]],7712:[[71,772]],7713:[[103,772]],7714:[[72,775]],7715:[[104,775]],7716:[[72,803]],7717:[[104,803]],7718:[[72,776]],7719:[[104,776]],7720:[[72,807]],7721:[[104,807]],7722:[[72,814]],7723:[[104,814]],7724:[[73,816]],7725:[[105,816]],7726:[[207,769]],7727:[[239,769]],7728:[[75,769]],7729:[[107,769]],7730:[[75,803]],7731:[[107,803]],7732:[[75,817]],7733:[[107,817]],7734:[[76,803],,{772:7736}],7735:[[108,803],,{772:7737}],7736:[[7734,772]],7737:[[7735,772]],7738:[[76,817]],7739:[[108,817]],7740:[[76,813]],7741:[[108,813]],7742:[[77,769]],7743:[[109,769]],7744:[[77,775]],7745:[[109,775]],7746:[[77,803]],7747:[[109,803]],7748:[[78,775]],7749:[[110,775]],7750:[[78,803]],7751:[[110,803]],7752:[[78,817]],7753:[[110,817]],7754:[[78,813]],7755:[[110,813]],7756:[[213,769]],7757:[[245,769]],7758:[[213,776]],7759:[[245,776]],7760:[[332,768]],7761:[[333,768]],7762:[[332,769]],7763:[[333,769]],7764:[[80,769]],7765:[[112,769]],7766:[[80,775]],7767:[[112,775]],7768:[[82,775]],7769:[[114,775]],7770:[[82,803],,{772:7772}],7771:[[114,803],,{772:7773}],7772:[[7770,772]],7773:[[7771,772]],7774:[[82,817]],7775:[[114,817]],7776:[[83,775]],7777:[[115,775]],7778:[[83,803],,{775:7784}],7779:[[115,803],,{775:7785}],7780:[[346,775]],7781:[[347,775]],7782:[[352,775]],7783:[[353,775]],7784:[[7778,775]],7785:[[7779,775]],7786:[[84,775]],7787:[[116,775]],7788:[[84,803]],7789:[[116,803]],7790:[[84,817]],7791:[[116,817]],7792:[[84,813]],7793:[[116,813]],7794:[[85,804]],7795:[[117,804]],7796:[[85,816]],7797:[[117,816]],7798:[[85,813]],7799:[[117,813]],7800:[[360,769]],7801:[[361,769]],7802:[[362,776]],7803:[[363,776]],7804:[[86,771]],7805:[[118,771]],7806:[[86,803]],7807:[[118,803]],7808:[[87,768]],7809:[[119,768]],7810:[[87,769]],7811:[[119,769]],7812:[[87,776]],7813:[[119,776]],7814:[[87,775]],7815:[[119,775]],7816:[[87,803]],7817:[[119,803]],7818:[[88,775]],7819:[[120,775]],7820:[[88,776]],7821:[[120,776]],7822:[[89,775]],7823:[[121,775]],7824:[[90,770]],7825:[[122,770]],7826:[[90,803]],7827:[[122,803]],7828:[[90,817]],7829:[[122,817]],7830:[[104,817]],7831:[[116,776]],7832:[[119,778]],7833:[[121,778]],7834:[[97,702],256],7835:[[383,775]],7840:[[65,803],,{770:7852,774:7862}],7841:[[97,803],,{770:7853,774:7863}],7842:[[65,777]],7843:[[97,777]],7844:[[194,769]],7845:[[226,769]],7846:[[194,768]],7847:[[226,768]],7848:[[194,777]],7849:[[226,777]],7850:[[194,771]],7851:[[226,771]],7852:[[7840,770]],7853:[[7841,770]],7854:[[258,769]],7855:[[259,769]],7856:[[258,768]],7857:[[259,768]],7858:[[258,777]],7859:[[259,777]],7860:[[258,771]],7861:[[259,771]],7862:[[7840,774]],7863:[[7841,774]],7864:[[69,803],,{770:7878}],7865:[[101,803],,{770:7879}],7866:[[69,777]],7867:[[101,777]],7868:[[69,771]],7869:[[101,771]],7870:[[202,769]],7871:[[234,769]],7872:[[202,768]],7873:[[234,768]],7874:[[202,777]],7875:[[234,777]],7876:[[202,771]],7877:[[234,771]],7878:[[7864,770]],7879:[[7865,770]],7880:[[73,777]],7881:[[105,777]],7882:[[73,803]],7883:[[105,803]],7884:[[79,803],,{770:7896}],7885:[[111,803],,{770:7897}],7886:[[79,777]],7887:[[111,777]],7888:[[212,769]],7889:[[244,769]],7890:[[212,768]],7891:[[244,768]],7892:[[212,777]],7893:[[244,777]],7894:[[212,771]],7895:[[244,771]],7896:[[7884,770]],7897:[[7885,770]],7898:[[416,769]],7899:[[417,769]],7900:[[416,768]],7901:[[417,768]],7902:[[416,777]],7903:[[417,777]],7904:[[416,771]],7905:[[417,771]],7906:[[416,803]],7907:[[417,803]],7908:[[85,803]],7909:[[117,803]],7910:[[85,777]],7911:[[117,777]],7912:[[431,769]],7913:[[432,769]],7914:[[431,768]],7915:[[432,768]],7916:[[431,777]],7917:[[432,777]],7918:[[431,771]],7919:[[432,771]],7920:[[431,803]],7921:[[432,803]],7922:[[89,768]],7923:[[121,768]],7924:[[89,803]],7925:[[121,803]],7926:[[89,777]],7927:[[121,777]],7928:[[89,771]],7929:[[121,771]]},\n7936:{7936:[[945,787],,{768:7938,769:7940,834:7942,837:8064}],7937:[[945,788],,{768:7939,769:7941,834:7943,837:8065}],7938:[[7936,768],,{837:8066}],7939:[[7937,768],,{837:8067}],7940:[[7936,769],,{837:8068}],7941:[[7937,769],,{837:8069}],7942:[[7936,834],,{837:8070}],7943:[[7937,834],,{837:8071}],7944:[[913,787],,{768:7946,769:7948,834:7950,837:8072}],7945:[[913,788],,{768:7947,769:7949,834:7951,837:8073}],7946:[[7944,768],,{837:8074}],7947:[[7945,768],,{837:8075}],7948:[[7944,769],,{837:8076}],7949:[[7945,769],,{837:8077}],7950:[[7944,834],,{837:8078}],7951:[[7945,834],,{837:8079}],7952:[[949,787],,{768:7954,769:7956}],7953:[[949,788],,{768:7955,769:7957}],7954:[[7952,768]],7955:[[7953,768]],7956:[[7952,769]],7957:[[7953,769]],7960:[[917,787],,{768:7962,769:7964}],7961:[[917,788],,{768:7963,769:7965}],7962:[[7960,768]],7963:[[7961,768]],7964:[[7960,769]],7965:[[7961,769]],7968:[[951,787],,{768:7970,769:7972,834:7974,837:8080}],7969:[[951,788],,{768:7971,769:7973,834:7975,837:8081}],7970:[[7968,768],,{837:8082}],7971:[[7969,768],,{837:8083}],7972:[[7968,769],,{837:8084}],7973:[[7969,769],,{837:8085}],7974:[[7968,834],,{837:8086}],7975:[[7969,834],,{837:8087}],7976:[[919,787],,{768:7978,769:7980,834:7982,837:8088}],7977:[[919,788],,{768:7979,769:7981,834:7983,837:8089}],7978:[[7976,768],,{837:8090}],7979:[[7977,768],,{837:8091}],7980:[[7976,769],,{837:8092}],7981:[[7977,769],,{837:8093}],7982:[[7976,834],,{837:8094}],7983:[[7977,834],,{837:8095}],7984:[[953,787],,{768:7986,769:7988,834:7990}],7985:[[953,788],,{768:7987,769:7989,834:7991}],7986:[[7984,768]],7987:[[7985,768]],7988:[[7984,769]],7989:[[7985,769]],7990:[[7984,834]],7991:[[7985,834]],7992:[[921,787],,{768:7994,769:7996,834:7998}],7993:[[921,788],,{768:7995,769:7997,834:7999}],7994:[[7992,768]],7995:[[7993,768]],7996:[[7992,769]],7997:[[7993,769]],7998:[[7992,834]],7999:[[7993,834]],8000:[[959,787],,{768:8002,769:8004}],8001:[[959,788],,{768:8003,769:8005}],8002:[[8000,768]],8003:[[8001,768]],8004:[[8000,769]],8005:[[8001,769]],8008:[[927,787],,{768:8010,769:8012}],8009:[[927,788],,{768:8011,769:8013}],8010:[[8008,768]],8011:[[8009,768]],8012:[[8008,769]],8013:[[8009,769]],8016:[[965,787],,{768:8018,769:8020,834:8022}],8017:[[965,788],,{768:8019,769:8021,834:8023}],8018:[[8016,768]],8019:[[8017,768]],8020:[[8016,769]],8021:[[8017,769]],8022:[[8016,834]],8023:[[8017,834]],8025:[[933,788],,{768:8027,769:8029,834:8031}],8027:[[8025,768]],8029:[[8025,769]],8031:[[8025,834]],8032:[[969,787],,{768:8034,769:8036,834:8038,837:8096}],8033:[[969,788],,{768:8035,769:8037,834:8039,837:8097}],8034:[[8032,768],,{837:8098}],8035:[[8033,768],,{837:8099}],8036:[[8032,769],,{837:8100}],8037:[[8033,769],,{837:8101}],8038:[[8032,834],,{837:8102}],8039:[[8033,834],,{837:8103}],8040:[[937,787],,{768:8042,769:8044,834:8046,837:8104}],8041:[[937,788],,{768:8043,769:8045,834:8047,837:8105}],8042:[[8040,768],,{837:8106}],8043:[[8041,768],,{837:8107}],8044:[[8040,769],,{837:8108}],8045:[[8041,769],,{837:8109}],8046:[[8040,834],,{837:8110}],8047:[[8041,834],,{837:8111}],8048:[[945,768],,{837:8114}],8049:[[940]],8050:[[949,768]],8051:[[941]],8052:[[951,768],,{837:8130}],8053:[[942]],8054:[[953,768]],8055:[[943]],8056:[[959,768]],8057:[[972]],8058:[[965,768]],8059:[[973]],8060:[[969,768],,{837:8178}],8061:[[974]],8064:[[7936,837]],8065:[[7937,837]],8066:[[7938,837]],8067:[[7939,837]],8068:[[7940,837]],8069:[[7941,837]],8070:[[7942,837]],8071:[[7943,837]],8072:[[7944,837]],8073:[[7945,837]],8074:[[7946,837]],8075:[[7947,837]],8076:[[7948,837]],8077:[[7949,837]],8078:[[7950,837]],8079:[[7951,837]],8080:[[7968,837]],8081:[[7969,837]],8082:[[7970,837]],8083:[[7971,837]],8084:[[7972,837]],8085:[[7973,837]],8086:[[7974,837]],8087:[[7975,837]],8088:[[7976,837]],8089:[[7977,837]],8090:[[7978,837]],8091:[[7979,837]],8092:[[7980,837]],8093:[[7981,837]],8094:[[7982,837]],8095:[[7983,837]],8096:[[8032,837]],8097:[[8033,837]],8098:[[8034,837]],8099:[[8035,837]],8100:[[8036,837]],8101:[[8037,837]],8102:[[8038,837]],8103:[[8039,837]],8104:[[8040,837]],8105:[[8041,837]],8106:[[8042,837]],8107:[[8043,837]],8108:[[8044,837]],8109:[[8045,837]],8110:[[8046,837]],8111:[[8047,837]],8112:[[945,774]],8113:[[945,772]],8114:[[8048,837]],8115:[[945,837]],8116:[[940,837]],8118:[[945,834],,{837:8119}],8119:[[8118,837]],8120:[[913,774]],8121:[[913,772]],8122:[[913,768]],8123:[[902]],8124:[[913,837]],8125:[[32,787],256],8126:[[953]],8127:[[32,787],256,{768:8141,769:8142,834:8143}],8128:[[32,834],256],8129:[[168,834]],8130:[[8052,837]],8131:[[951,837]],8132:[[942,837]],8134:[[951,834],,{837:8135}],8135:[[8134,837]],8136:[[917,768]],8137:[[904]],8138:[[919,768]],8139:[[905]],8140:[[919,837]],8141:[[8127,768]],8142:[[8127,769]],8143:[[8127,834]],8144:[[953,774]],8145:[[953,772]],8146:[[970,768]],8147:[[912]],8150:[[953,834]],8151:[[970,834]],8152:[[921,774]],8153:[[921,772]],8154:[[921,768]],8155:[[906]],8157:[[8190,768]],8158:[[8190,769]],8159:[[8190,834]],8160:[[965,774]],8161:[[965,772]],8162:[[971,768]],8163:[[944]],8164:[[961,787]],8165:[[961,788]],8166:[[965,834]],8167:[[971,834]],8168:[[933,774]],8169:[[933,772]],8170:[[933,768]],8171:[[910]],8172:[[929,788]],8173:[[168,768]],8174:[[901]],8175:[[96]],8178:[[8060,837]],8179:[[969,837]],8180:[[974,837]],8182:[[969,834],,{837:8183}],8183:[[8182,837]],8184:[[927,768]],8185:[[908]],8186:[[937,768]],8187:[[911]],8188:[[937,837]],8189:[[180]],8190:[[32,788],256,{768:8157,769:8158,834:8159}]},\n8192:{8192:[[8194]],8193:[[8195]],8194:[[32],256],8195:[[32],256],8196:[[32],256],8197:[[32],256],8198:[[32],256],8199:[[32],256],8200:[[32],256],8201:[[32],256],8202:[[32],256],8209:[[8208],256],8215:[[32,819],256],8228:[[46],256],8229:[[46,46],256],8230:[[46,46,46],256],8239:[[32],256],8243:[[8242,8242],256],8244:[[8242,8242,8242],256],8246:[[8245,8245],256],8247:[[8245,8245,8245],256],8252:[[33,33],256],8254:[[32,773],256],8263:[[63,63],256],8264:[[63,33],256],8265:[[33,63],256],8279:[[8242,8242,8242,8242],256],8287:[[32],256],8304:[[48],256],8305:[[105],256],8308:[[52],256],8309:[[53],256],8310:[[54],256],8311:[[55],256],8312:[[56],256],8313:[[57],256],8314:[[43],256],8315:[[8722],256],8316:[[61],256],8317:[[40],256],8318:[[41],256],8319:[[110],256],8320:[[48],256],8321:[[49],256],8322:[[50],256],8323:[[51],256],8324:[[52],256],8325:[[53],256],8326:[[54],256],8327:[[55],256],8328:[[56],256],8329:[[57],256],8330:[[43],256],8331:[[8722],256],8332:[[61],256],8333:[[40],256],8334:[[41],256],8336:[[97],256],8337:[[101],256],8338:[[111],256],8339:[[120],256],8340:[[601],256],8341:[[104],256],8342:[[107],256],8343:[[108],256],8344:[[109],256],8345:[[110],256],8346:[[112],256],8347:[[115],256],8348:[[116],256],8360:[[82,115],256],8400:[,230],8401:[,230],8402:[,1],8403:[,1],8404:[,230],8405:[,230],8406:[,230],8407:[,230],8408:[,1],8409:[,1],8410:[,1],8411:[,230],8412:[,230],8417:[,230],8421:[,1],8422:[,1],8423:[,230],8424:[,220],8425:[,230],8426:[,1],8427:[,1],8428:[,220],8429:[,220],8430:[,220],8431:[,220],8432:[,230]},\n8448:{8448:[[97,47,99],256],8449:[[97,47,115],256],8450:[[67],256],8451:[[176,67],256],8453:[[99,47,111],256],8454:[[99,47,117],256],8455:[[400],256],8457:[[176,70],256],8458:[[103],256],8459:[[72],256],8460:[[72],256],8461:[[72],256],8462:[[104],256],8463:[[295],256],8464:[[73],256],8465:[[73],256],8466:[[76],256],8467:[[108],256],8469:[[78],256],8470:[[78,111],256],8473:[[80],256],8474:[[81],256],8475:[[82],256],8476:[[82],256],8477:[[82],256],8480:[[83,77],256],8481:[[84,69,76],256],8482:[[84,77],256],8484:[[90],256],8486:[[937]],8488:[[90],256],8490:[[75]],8491:[[197]],8492:[[66],256],8493:[[67],256],8495:[[101],256],8496:[[69],256],8497:[[70],256],8499:[[77],256],8500:[[111],256],8501:[[1488],256],8502:[[1489],256],8503:[[1490],256],8504:[[1491],256],8505:[[105],256],8507:[[70,65,88],256],8508:[[960],256],8509:[[947],256],8510:[[915],256],8511:[[928],256],8512:[[8721],256],8517:[[68],256],8518:[[100],256],8519:[[101],256],8520:[[105],256],8521:[[106],256],8528:[[49,8260,55],256],8529:[[49,8260,57],256],8530:[[49,8260,49,48],256],8531:[[49,8260,51],256],8532:[[50,8260,51],256],8533:[[49,8260,53],256],8534:[[50,8260,53],256],8535:[[51,8260,53],256],8536:[[52,8260,53],256],8537:[[49,8260,54],256],8538:[[53,8260,54],256],8539:[[49,8260,56],256],8540:[[51,8260,56],256],8541:[[53,8260,56],256],8542:[[55,8260,56],256],8543:[[49,8260],256],8544:[[73],256],8545:[[73,73],256],8546:[[73,73,73],256],8547:[[73,86],256],8548:[[86],256],8549:[[86,73],256],8550:[[86,73,73],256],8551:[[86,73,73,73],256],8552:[[73,88],256],8553:[[88],256],8554:[[88,73],256],8555:[[88,73,73],256],8556:[[76],256],8557:[[67],256],8558:[[68],256],8559:[[77],256],8560:[[105],256],8561:[[105,105],256],8562:[[105,105,105],256],8563:[[105,118],256],8564:[[118],256],8565:[[118,105],256],8566:[[118,105,105],256],8567:[[118,105,105,105],256],8568:[[105,120],256],8569:[[120],256],8570:[[120,105],256],8571:[[120,105,105],256],8572:[[108],256],8573:[[99],256],8574:[[100],256],8575:[[109],256],8585:[[48,8260,51],256],8592:[,,{824:8602}],8594:[,,{824:8603}],8596:[,,{824:8622}],8602:[[8592,824]],8603:[[8594,824]],8622:[[8596,824]],8653:[[8656,824]],8654:[[8660,824]],8655:[[8658,824]],8656:[,,{824:8653}],8658:[,,{824:8655}],8660:[,,{824:8654}]},\n8704:{8707:[,,{824:8708}],8708:[[8707,824]],8712:[,,{824:8713}],8713:[[8712,824]],8715:[,,{824:8716}],8716:[[8715,824]],8739:[,,{824:8740}],8740:[[8739,824]],8741:[,,{824:8742}],8742:[[8741,824]],8748:[[8747,8747],256],8749:[[8747,8747,8747],256],8751:[[8750,8750],256],8752:[[8750,8750,8750],256],8764:[,,{824:8769}],8769:[[8764,824]],8771:[,,{824:8772}],8772:[[8771,824]],8773:[,,{824:8775}],8775:[[8773,824]],8776:[,,{824:8777}],8777:[[8776,824]],8781:[,,{824:8813}],8800:[[61,824]],8801:[,,{824:8802}],8802:[[8801,824]],8804:[,,{824:8816}],8805:[,,{824:8817}],8813:[[8781,824]],8814:[[60,824]],8815:[[62,824]],8816:[[8804,824]],8817:[[8805,824]],8818:[,,{824:8820}],8819:[,,{824:8821}],8820:[[8818,824]],8821:[[8819,824]],8822:[,,{824:8824}],8823:[,,{824:8825}],8824:[[8822,824]],8825:[[8823,824]],8826:[,,{824:8832}],8827:[,,{824:8833}],8828:[,,{824:8928}],8829:[,,{824:8929}],8832:[[8826,824]],8833:[[8827,824]],8834:[,,{824:8836}],8835:[,,{824:8837}],8836:[[8834,824]],8837:[[8835,824]],8838:[,,{824:8840}],8839:[,,{824:8841}],8840:[[8838,824]],8841:[[8839,824]],8849:[,,{824:8930}],8850:[,,{824:8931}],8866:[,,{824:8876}],8872:[,,{824:8877}],8873:[,,{824:8878}],8875:[,,{824:8879}],8876:[[8866,824]],8877:[[8872,824]],8878:[[8873,824]],8879:[[8875,824]],8882:[,,{824:8938}],8883:[,,{824:8939}],8884:[,,{824:8940}],8885:[,,{824:8941}],8928:[[8828,824]],8929:[[8829,824]],8930:[[8849,824]],8931:[[8850,824]],8938:[[8882,824]],8939:[[8883,824]],8940:[[8884,824]],8941:[[8885,824]]},\n8960:{9001:[[12296]],9002:[[12297]]},\n9216:{9312:[[49],256],9313:[[50],256],9314:[[51],256],9315:[[52],256],9316:[[53],256],9317:[[54],256],9318:[[55],256],9319:[[56],256],9320:[[57],256],9321:[[49,48],256],9322:[[49,49],256],9323:[[49,50],256],9324:[[49,51],256],9325:[[49,52],256],9326:[[49,53],256],9327:[[49,54],256],9328:[[49,55],256],9329:[[49,56],256],9330:[[49,57],256],9331:[[50,48],256],9332:[[40,49,41],256],9333:[[40,50,41],256],9334:[[40,51,41],256],9335:[[40,52,41],256],9336:[[40,53,41],256],9337:[[40,54,41],256],9338:[[40,55,41],256],9339:[[40,56,41],256],9340:[[40,57,41],256],9341:[[40,49,48,41],256],9342:[[40,49,49,41],256],9343:[[40,49,50,41],256],9344:[[40,49,51,41],256],9345:[[40,49,52,41],256],9346:[[40,49,53,41],256],9347:[[40,49,54,41],256],9348:[[40,49,55,41],256],9349:[[40,49,56,41],256],9350:[[40,49,57,41],256],9351:[[40,50,48,41],256],9352:[[49,46],256],9353:[[50,46],256],9354:[[51,46],256],9355:[[52,46],256],9356:[[53,46],256],9357:[[54,46],256],9358:[[55,46],256],9359:[[56,46],256],9360:[[57,46],256],9361:[[49,48,46],256],9362:[[49,49,46],256],9363:[[49,50,46],256],9364:[[49,51,46],256],9365:[[49,52,46],256],9366:[[49,53,46],256],9367:[[49,54,46],256],9368:[[49,55,46],256],9369:[[49,56,46],256],9370:[[49,57,46],256],9371:[[50,48,46],256],9372:[[40,97,41],256],9373:[[40,98,41],256],9374:[[40,99,41],256],9375:[[40,100,41],256],9376:[[40,101,41],256],9377:[[40,102,41],256],9378:[[40,103,41],256],9379:[[40,104,41],256],9380:[[40,105,41],256],9381:[[40,106,41],256],9382:[[40,107,41],256],9383:[[40,108,41],256],9384:[[40,109,41],256],9385:[[40,110,41],256],9386:[[40,111,41],256],9387:[[40,112,41],256],9388:[[40,113,41],256],9389:[[40,114,41],256],9390:[[40,115,41],256],9391:[[40,116,41],256],9392:[[40,117,41],256],9393:[[40,118,41],256],9394:[[40,119,41],256],9395:[[40,120,41],256],9396:[[40,121,41],256],9397:[[40,122,41],256],9398:[[65],256],9399:[[66],256],9400:[[67],256],9401:[[68],256],9402:[[69],256],9403:[[70],256],9404:[[71],256],9405:[[72],256],9406:[[73],256],9407:[[74],256],9408:[[75],256],9409:[[76],256],9410:[[77],256],9411:[[78],256],9412:[[79],256],9413:[[80],256],9414:[[81],256],9415:[[82],256],9416:[[83],256],9417:[[84],256],9418:[[85],256],9419:[[86],256],9420:[[87],256],9421:[[88],256],9422:[[89],256],9423:[[90],256],9424:[[97],256],9425:[[98],256],9426:[[99],256],9427:[[100],256],9428:[[101],256],9429:[[102],256],9430:[[103],256],9431:[[104],256],9432:[[105],256],9433:[[106],256],9434:[[107],256],9435:[[108],256],9436:[[109],256],9437:[[110],256],9438:[[111],256],9439:[[112],256],9440:[[113],256],9441:[[114],256],9442:[[115],256],9443:[[116],256],9444:[[117],256],9445:[[118],256],9446:[[119],256],9447:[[120],256],9448:[[121],256],9449:[[122],256],9450:[[48],256]},\n10752:{10764:[[8747,8747,8747,8747],256],10868:[[58,58,61],256],10869:[[61,61],256],10870:[[61,61,61],256],10972:[[10973,824],512]},\n11264:{11388:[[106],256],11389:[[86],256],11503:[,230],11504:[,230],11505:[,230]},\n11520:{11631:[[11617],256],11647:[,9],11744:[,230],11745:[,230],11746:[,230],11747:[,230],11748:[,230],11749:[,230],11750:[,230],11751:[,230],11752:[,230],11753:[,230],11754:[,230],11755:[,230],11756:[,230],11757:[,230],11758:[,230],11759:[,230],11760:[,230],11761:[,230],11762:[,230],11763:[,230],11764:[,230],11765:[,230],11766:[,230],11767:[,230],11768:[,230],11769:[,230],11770:[,230],11771:[,230],11772:[,230],11773:[,230],11774:[,230],11775:[,230]},\n11776:{11935:[[27597],256],12019:[[40863],256]},\n12032:{12032:[[19968],256],12033:[[20008],256],12034:[[20022],256],12035:[[20031],256],12036:[[20057],256],12037:[[20101],256],12038:[[20108],256],12039:[[20128],256],12040:[[20154],256],12041:[[20799],256],12042:[[20837],256],12043:[[20843],256],12044:[[20866],256],12045:[[20886],256],12046:[[20907],256],12047:[[20960],256],12048:[[20981],256],12049:[[20992],256],12050:[[21147],256],12051:[[21241],256],12052:[[21269],256],12053:[[21274],256],12054:[[21304],256],12055:[[21313],256],12056:[[21340],256],12057:[[21353],256],12058:[[21378],256],12059:[[21430],256],12060:[[21448],256],12061:[[21475],256],12062:[[22231],256],12063:[[22303],256],12064:[[22763],256],12065:[[22786],256],12066:[[22794],256],12067:[[22805],256],12068:[[22823],256],12069:[[22899],256],12070:[[23376],256],12071:[[23424],256],12072:[[23544],256],12073:[[23567],256],12074:[[23586],256],12075:[[23608],256],12076:[[23662],256],12077:[[23665],256],12078:[[24027],256],12079:[[24037],256],12080:[[24049],256],12081:[[24062],256],12082:[[24178],256],12083:[[24186],256],12084:[[24191],256],12085:[[24308],256],12086:[[24318],256],12087:[[24331],256],12088:[[24339],256],12089:[[24400],256],12090:[[24417],256],12091:[[24435],256],12092:[[24515],256],12093:[[25096],256],12094:[[25142],256],12095:[[25163],256],12096:[[25903],256],12097:[[25908],256],12098:[[25991],256],12099:[[26007],256],12100:[[26020],256],12101:[[26041],256],12102:[[26080],256],12103:[[26085],256],12104:[[26352],256],12105:[[26376],256],12106:[[26408],256],12107:[[27424],256],12108:[[27490],256],12109:[[27513],256],12110:[[27571],256],12111:[[27595],256],12112:[[27604],256],12113:[[27611],256],12114:[[27663],256],12115:[[27668],256],12116:[[27700],256],12117:[[28779],256],12118:[[29226],256],12119:[[29238],256],12120:[[29243],256],12121:[[29247],256],12122:[[29255],256],12123:[[29273],256],12124:[[29275],256],12125:[[29356],256],12126:[[29572],256],12127:[[29577],256],12128:[[29916],256],12129:[[29926],256],12130:[[29976],256],12131:[[29983],256],12132:[[29992],256],12133:[[30000],256],12134:[[30091],256],12135:[[30098],256],12136:[[30326],256],12137:[[30333],256],12138:[[30382],256],12139:[[30399],256],12140:[[30446],256],12141:[[30683],256],12142:[[30690],256],12143:[[30707],256],12144:[[31034],256],12145:[[31160],256],12146:[[31166],256],12147:[[31348],256],12148:[[31435],256],12149:[[31481],256],12150:[[31859],256],12151:[[31992],256],12152:[[32566],256],12153:[[32593],256],12154:[[32650],256],12155:[[32701],256],12156:[[32769],256],12157:[[32780],256],12158:[[32786],256],12159:[[32819],256],12160:[[32895],256],12161:[[32905],256],12162:[[33251],256],12163:[[33258],256],12164:[[33267],256],12165:[[33276],256],12166:[[33292],256],12167:[[33307],256],12168:[[33311],256],12169:[[33390],256],12170:[[33394],256],12171:[[33400],256],12172:[[34381],256],12173:[[34411],256],12174:[[34880],256],12175:[[34892],256],12176:[[34915],256],12177:[[35198],256],12178:[[35211],256],12179:[[35282],256],12180:[[35328],256],12181:[[35895],256],12182:[[35910],256],12183:[[35925],256],12184:[[35960],256],12185:[[35997],256],12186:[[36196],256],12187:[[36208],256],12188:[[36275],256],12189:[[36523],256],12190:[[36554],256],12191:[[36763],256],12192:[[36784],256],12193:[[36789],256],12194:[[37009],256],12195:[[37193],256],12196:[[37318],256],12197:[[37324],256],12198:[[37329],256],12199:[[38263],256],12200:[[38272],256],12201:[[38428],256],12202:[[38582],256],12203:[[38585],256],12204:[[38632],256],12205:[[38737],256],12206:[[38750],256],12207:[[38754],256],12208:[[38761],256],12209:[[38859],256],12210:[[38893],256],12211:[[38899],256],12212:[[38913],256],12213:[[39080],256],12214:[[39131],256],12215:[[39135],256],12216:[[39318],256],12217:[[39321],256],12218:[[39340],256],12219:[[39592],256],12220:[[39640],256],12221:[[39647],256],12222:[[39717],256],12223:[[39727],256],12224:[[39730],256],12225:[[39740],256],12226:[[39770],256],12227:[[40165],256],12228:[[40565],256],12229:[[40575],256],12230:[[40613],256],12231:[[40635],256],12232:[[40643],256],12233:[[40653],256],12234:[[40657],256],12235:[[40697],256],12236:[[40701],256],12237:[[40718],256],12238:[[40723],256],12239:[[40736],256],12240:[[40763],256],12241:[[40778],256],12242:[[40786],256],12243:[[40845],256],12244:[[40860],256],12245:[[40864],256]},\n12288:{12288:[[32],256],12330:[,218],12331:[,228],12332:[,232],12333:[,222],12334:[,224],12335:[,224],12342:[[12306],256],12344:[[21313],256],12345:[[21316],256],12346:[[21317],256],12358:[,,{12441:12436}],12363:[,,{12441:12364}],12364:[[12363,12441]],12365:[,,{12441:12366}],12366:[[12365,12441]],12367:[,,{12441:12368}],12368:[[12367,12441]],12369:[,,{12441:12370}],12370:[[12369,12441]],12371:[,,{12441:12372}],12372:[[12371,12441]],12373:[,,{12441:12374}],12374:[[12373,12441]],12375:[,,{12441:12376}],12376:[[12375,12441]],12377:[,,{12441:12378}],12378:[[12377,12441]],12379:[,,{12441:12380}],12380:[[12379,12441]],12381:[,,{12441:12382}],12382:[[12381,12441]],12383:[,,{12441:12384}],12384:[[12383,12441]],12385:[,,{12441:12386}],12386:[[12385,12441]],12388:[,,{12441:12389}],12389:[[12388,12441]],12390:[,,{12441:12391}],12391:[[12390,12441]],12392:[,,{12441:12393}],12393:[[12392,12441]],12399:[,,{12441:12400,12442:12401}],12400:[[12399,12441]],12401:[[12399,12442]],12402:[,,{12441:12403,12442:12404}],12403:[[12402,12441]],12404:[[12402,12442]],12405:[,,{12441:12406,12442:12407}],12406:[[12405,12441]],12407:[[12405,12442]],12408:[,,{12441:12409,12442:12410}],12409:[[12408,12441]],12410:[[12408,12442]],12411:[,,{12441:12412,12442:12413}],12412:[[12411,12441]],12413:[[12411,12442]],12436:[[12358,12441]],12441:[,8],12442:[,8],12443:[[32,12441],256],12444:[[32,12442],256],12445:[,,{12441:12446}],12446:[[12445,12441]],12447:[[12424,12426],256],12454:[,,{12441:12532}],12459:[,,{12441:12460}],12460:[[12459,12441]],12461:[,,{12441:12462}],12462:[[12461,12441]],12463:[,,{12441:12464}],12464:[[12463,12441]],12465:[,,{12441:12466}],12466:[[12465,12441]],12467:[,,{12441:12468}],12468:[[12467,12441]],12469:[,,{12441:12470}],12470:[[12469,12441]],12471:[,,{12441:12472}],12472:[[12471,12441]],12473:[,,{12441:12474}],12474:[[12473,12441]],12475:[,,{12441:12476}],12476:[[12475,12441]],12477:[,,{12441:12478}],12478:[[12477,12441]],12479:[,,{12441:12480}],12480:[[12479,12441]],12481:[,,{12441:12482}],12482:[[12481,12441]],12484:[,,{12441:12485}],12485:[[12484,12441]],12486:[,,{12441:12487}],12487:[[12486,12441]],12488:[,,{12441:12489}],12489:[[12488,12441]],12495:[,,{12441:12496,12442:12497}],12496:[[12495,12441]],12497:[[12495,12442]],12498:[,,{12441:12499,12442:12500}],12499:[[12498,12441]],12500:[[12498,12442]],12501:[,,{12441:12502,12442:12503}],12502:[[12501,12441]],12503:[[12501,12442]],12504:[,,{12441:12505,12442:12506}],12505:[[12504,12441]],12506:[[12504,12442]],12507:[,,{12441:12508,12442:12509}],12508:[[12507,12441]],12509:[[12507,12442]],12527:[,,{12441:12535}],12528:[,,{12441:12536}],12529:[,,{12441:12537}],12530:[,,{12441:12538}],12532:[[12454,12441]],12535:[[12527,12441]],12536:[[12528,12441]],12537:[[12529,12441]],12538:[[12530,12441]],12541:[,,{12441:12542}],12542:[[12541,12441]],12543:[[12467,12488],256]},\n12544:{12593:[[4352],256],12594:[[4353],256],12595:[[4522],256],12596:[[4354],256],12597:[[4524],256],12598:[[4525],256],12599:[[4355],256],12600:[[4356],256],12601:[[4357],256],12602:[[4528],256],12603:[[4529],256],12604:[[4530],256],12605:[[4531],256],12606:[[4532],256],12607:[[4533],256],12608:[[4378],256],12609:[[4358],256],12610:[[4359],256],12611:[[4360],256],12612:[[4385],256],12613:[[4361],256],12614:[[4362],256],12615:[[4363],256],12616:[[4364],256],12617:[[4365],256],12618:[[4366],256],12619:[[4367],256],12620:[[4368],256],12621:[[4369],256],12622:[[4370],256],12623:[[4449],256],12624:[[4450],256],12625:[[4451],256],12626:[[4452],256],12627:[[4453],256],12628:[[4454],256],12629:[[4455],256],12630:[[4456],256],12631:[[4457],256],12632:[[4458],256],12633:[[4459],256],12634:[[4460],256],12635:[[4461],256],12636:[[4462],256],12637:[[4463],256],12638:[[4464],256],12639:[[4465],256],12640:[[4466],256],12641:[[4467],256],12642:[[4468],256],12643:[[4469],256],12644:[[4448],256],12645:[[4372],256],12646:[[4373],256],12647:[[4551],256],12648:[[4552],256],12649:[[4556],256],12650:[[4558],256],12651:[[4563],256],12652:[[4567],256],12653:[[4569],256],12654:[[4380],256],12655:[[4573],256],12656:[[4575],256],12657:[[4381],256],12658:[[4382],256],12659:[[4384],256],12660:[[4386],256],12661:[[4387],256],12662:[[4391],256],12663:[[4393],256],12664:[[4395],256],12665:[[4396],256],12666:[[4397],256],12667:[[4398],256],12668:[[4399],256],12669:[[4402],256],12670:[[4406],256],12671:[[4416],256],12672:[[4423],256],12673:[[4428],256],12674:[[4593],256],12675:[[4594],256],12676:[[4439],256],12677:[[4440],256],12678:[[4441],256],12679:[[4484],256],12680:[[4485],256],12681:[[4488],256],12682:[[4497],256],12683:[[4498],256],12684:[[4500],256],12685:[[4510],256],12686:[[4513],256],12690:[[19968],256],12691:[[20108],256],12692:[[19977],256],12693:[[22235],256],12694:[[19978],256],12695:[[20013],256],12696:[[19979],256],12697:[[30002],256],12698:[[20057],256],12699:[[19993],256],12700:[[19969],256],12701:[[22825],256],12702:[[22320],256],12703:[[20154],256]},\n12800:{12800:[[40,4352,41],256],12801:[[40,4354,41],256],12802:[[40,4355,41],256],12803:[[40,4357,41],256],12804:[[40,4358,41],256],12805:[[40,4359,41],256],12806:[[40,4361,41],256],12807:[[40,4363,41],256],12808:[[40,4364,41],256],12809:[[40,4366,41],256],12810:[[40,4367,41],256],12811:[[40,4368,41],256],12812:[[40,4369,41],256],12813:[[40,4370,41],256],12814:[[40,4352,4449,41],256],12815:[[40,4354,4449,41],256],12816:[[40,4355,4449,41],256],12817:[[40,4357,4449,41],256],12818:[[40,4358,4449,41],256],12819:[[40,4359,4449,41],256],12820:[[40,4361,4449,41],256],12821:[[40,4363,4449,41],256],12822:[[40,4364,4449,41],256],12823:[[40,4366,4449,41],256],12824:[[40,4367,4449,41],256],12825:[[40,4368,4449,41],256],12826:[[40,4369,4449,41],256],12827:[[40,4370,4449,41],256],12828:[[40,4364,4462,41],256],12829:[[40,4363,4457,4364,4453,4523,41],256],12830:[[40,4363,4457,4370,4462,41],256],12832:[[40,19968,41],256],12833:[[40,20108,41],256],12834:[[40,19977,41],256],12835:[[40,22235,41],256],12836:[[40,20116,41],256],12837:[[40,20845,41],256],12838:[[40,19971,41],256],12839:[[40,20843,41],256],12840:[[40,20061,41],256],12841:[[40,21313,41],256],12842:[[40,26376,41],256],12843:[[40,28779,41],256],12844:[[40,27700,41],256],12845:[[40,26408,41],256],12846:[[40,37329,41],256],12847:[[40,22303,41],256],12848:[[40,26085,41],256],12849:[[40,26666,41],256],12850:[[40,26377,41],256],12851:[[40,31038,41],256],12852:[[40,21517,41],256],12853:[[40,29305,41],256],12854:[[40,36001,41],256],12855:[[40,31069,41],256],12856:[[40,21172,41],256],12857:[[40,20195,41],256],12858:[[40,21628,41],256],12859:[[40,23398,41],256],12860:[[40,30435,41],256],12861:[[40,20225,41],256],12862:[[40,36039,41],256],12863:[[40,21332,41],256],12864:[[40,31085,41],256],12865:[[40,20241,41],256],12866:[[40,33258,41],256],12867:[[40,33267,41],256],12868:[[21839],256],12869:[[24188],256],12870:[[25991],256],12871:[[31631],256],12880:[[80,84,69],256],12881:[[50,49],256],12882:[[50,50],256],12883:[[50,51],256],12884:[[50,52],256],12885:[[50,53],256],12886:[[50,54],256],12887:[[50,55],256],12888:[[50,56],256],12889:[[50,57],256],12890:[[51,48],256],12891:[[51,49],256],12892:[[51,50],256],12893:[[51,51],256],12894:[[51,52],256],12895:[[51,53],256],12896:[[4352],256],12897:[[4354],256],12898:[[4355],256],12899:[[4357],256],12900:[[4358],256],12901:[[4359],256],12902:[[4361],256],12903:[[4363],256],12904:[[4364],256],12905:[[4366],256],12906:[[4367],256],12907:[[4368],256],12908:[[4369],256],12909:[[4370],256],12910:[[4352,4449],256],12911:[[4354,4449],256],12912:[[4355,4449],256],12913:[[4357,4449],256],12914:[[4358,4449],256],12915:[[4359,4449],256],12916:[[4361,4449],256],12917:[[4363,4449],256],12918:[[4364,4449],256],12919:[[4366,4449],256],12920:[[4367,4449],256],12921:[[4368,4449],256],12922:[[4369,4449],256],12923:[[4370,4449],256],12924:[[4366,4449,4535,4352,4457],256],12925:[[4364,4462,4363,4468],256],12926:[[4363,4462],256],12928:[[19968],256],12929:[[20108],256],12930:[[19977],256],12931:[[22235],256],12932:[[20116],256],12933:[[20845],256],12934:[[19971],256],12935:[[20843],256],12936:[[20061],256],12937:[[21313],256],12938:[[26376],256],12939:[[28779],256],12940:[[27700],256],12941:[[26408],256],12942:[[37329],256],12943:[[22303],256],12944:[[26085],256],12945:[[26666],256],12946:[[26377],256],12947:[[31038],256],12948:[[21517],256],12949:[[29305],256],12950:[[36001],256],12951:[[31069],256],12952:[[21172],256],12953:[[31192],256],12954:[[30007],256],12955:[[22899],256],12956:[[36969],256],12957:[[20778],256],12958:[[21360],256],12959:[[27880],256],12960:[[38917],256],12961:[[20241],256],12962:[[20889],256],12963:[[27491],256],12964:[[19978],256],12965:[[20013],256],12966:[[19979],256],12967:[[24038],256],12968:[[21491],256],12969:[[21307],256],12970:[[23447],256],12971:[[23398],256],12972:[[30435],256],12973:[[20225],256],12974:[[36039],256],12975:[[21332],256],12976:[[22812],256],12977:[[51,54],256],12978:[[51,55],256],12979:[[51,56],256],12980:[[51,57],256],12981:[[52,48],256],12982:[[52,49],256],12983:[[52,50],256],12984:[[52,51],256],12985:[[52,52],256],12986:[[52,53],256],12987:[[52,54],256],12988:[[52,55],256],12989:[[52,56],256],12990:[[52,57],256],12991:[[53,48],256],12992:[[49,26376],256],12993:[[50,26376],256],12994:[[51,26376],256],12995:[[52,26376],256],12996:[[53,26376],256],12997:[[54,26376],256],12998:[[55,26376],256],12999:[[56,26376],256],13000:[[57,26376],256],13001:[[49,48,26376],256],13002:[[49,49,26376],256],13003:[[49,50,26376],256],13004:[[72,103],256],13005:[[101,114,103],256],13006:[[101,86],256],13007:[[76,84,68],256],13008:[[12450],256],13009:[[12452],256],13010:[[12454],256],13011:[[12456],256],13012:[[12458],256],13013:[[12459],256],13014:[[12461],256],13015:[[12463],256],13016:[[12465],256],13017:[[12467],256],13018:[[12469],256],13019:[[12471],256],13020:[[12473],256],13021:[[12475],256],13022:[[12477],256],13023:[[12479],256],13024:[[12481],256],13025:[[12484],256],13026:[[12486],256],13027:[[12488],256],13028:[[12490],256],13029:[[12491],256],13030:[[12492],256],13031:[[12493],256],13032:[[12494],256],13033:[[12495],256],13034:[[12498],256],13035:[[12501],256],13036:[[12504],256],13037:[[12507],256],13038:[[12510],256],13039:[[12511],256],13040:[[12512],256],13041:[[12513],256],13042:[[12514],256],13043:[[12516],256],13044:[[12518],256],13045:[[12520],256],13046:[[12521],256],13047:[[12522],256],13048:[[12523],256],13049:[[12524],256],13050:[[12525],256],13051:[[12527],256],13052:[[12528],256],13053:[[12529],256],13054:[[12530],256]},\n13056:{13056:[[12450,12497,12540,12488],256],13057:[[12450,12523,12501,12449],256],13058:[[12450,12531,12506,12450],256],13059:[[12450,12540,12523],256],13060:[[12452,12491,12531,12464],256],13061:[[12452,12531,12481],256],13062:[[12454,12457,12531],256],13063:[[12456,12473,12463,12540,12489],256],13064:[[12456,12540,12459,12540],256],13065:[[12458,12531,12473],256],13066:[[12458,12540,12512],256],13067:[[12459,12452,12522],256],13068:[[12459,12521,12483,12488],256],13069:[[12459,12525,12522,12540],256],13070:[[12460,12525,12531],256],13071:[[12460,12531,12510],256],13072:[[12462,12460],256],13073:[[12462,12491,12540],256],13074:[[12461,12517,12522,12540],256],13075:[[12462,12523,12480,12540],256],13076:[[12461,12525],256],13077:[[12461,12525,12464,12521,12512],256],13078:[[12461,12525,12513,12540,12488,12523],256],13079:[[12461,12525,12527,12483,12488],256],13080:[[12464,12521,12512],256],13081:[[12464,12521,12512,12488,12531],256],13082:[[12463,12523,12476,12452,12525],256],13083:[[12463,12525,12540,12493],256],13084:[[12465,12540,12473],256],13085:[[12467,12523,12490],256],13086:[[12467,12540,12509],256],13087:[[12469,12452,12463,12523],256],13088:[[12469,12531,12481,12540,12512],256],13089:[[12471,12522,12531,12464],256],13090:[[12475,12531,12481],256],13091:[[12475,12531,12488],256],13092:[[12480,12540,12473],256],13093:[[12487,12471],256],13094:[[12489,12523],256],13095:[[12488,12531],256],13096:[[12490,12494],256],13097:[[12494,12483,12488],256],13098:[[12495,12452,12484],256],13099:[[12497,12540,12475,12531,12488],256],13100:[[12497,12540,12484],256],13101:[[12496,12540,12524,12523],256],13102:[[12500,12450,12473,12488,12523],256],13103:[[12500,12463,12523],256],13104:[[12500,12467],256],13105:[[12499,12523],256],13106:[[12501,12449,12521,12483,12489],256],13107:[[12501,12451,12540,12488],256],13108:[[12502,12483,12471,12455,12523],256],13109:[[12501,12521,12531],256],13110:[[12504,12463,12479,12540,12523],256],13111:[[12506,12477],256],13112:[[12506,12491,12498],256],13113:[[12504,12523,12484],256],13114:[[12506,12531,12473],256],13115:[[12506,12540,12472],256],13116:[[12505,12540,12479],256],13117:[[12509,12452,12531,12488],256],13118:[[12508,12523,12488],256],13119:[[12507,12531],256],13120:[[12509,12531,12489],256],13121:[[12507,12540,12523],256],13122:[[12507,12540,12531],256],13123:[[12510,12452,12463,12525],256],13124:[[12510,12452,12523],256],13125:[[12510,12483,12495],256],13126:[[12510,12523,12463],256],13127:[[12510,12531,12471,12519,12531],256],13128:[[12511,12463,12525,12531],256],13129:[[12511,12522],256],13130:[[12511,12522,12496,12540,12523],256],13131:[[12513,12460],256],13132:[[12513,12460,12488,12531],256],13133:[[12513,12540,12488,12523],256],13134:[[12516,12540,12489],256],13135:[[12516,12540,12523],256],13136:[[12518,12450,12531],256],13137:[[12522,12483,12488,12523],256],13138:[[12522,12521],256],13139:[[12523,12500,12540],256],13140:[[12523,12540,12502,12523],256],13141:[[12524,12512],256],13142:[[12524,12531,12488,12466,12531],256],13143:[[12527,12483,12488],256],13144:[[48,28857],256],13145:[[49,28857],256],13146:[[50,28857],256],13147:[[51,28857],256],13148:[[52,28857],256],13149:[[53,28857],256],13150:[[54,28857],256],13151:[[55,28857],256],13152:[[56,28857],256],13153:[[57,28857],256],13154:[[49,48,28857],256],13155:[[49,49,28857],256],13156:[[49,50,28857],256],13157:[[49,51,28857],256],13158:[[49,52,28857],256],13159:[[49,53,28857],256],13160:[[49,54,28857],256],13161:[[49,55,28857],256],13162:[[49,56,28857],256],13163:[[49,57,28857],256],13164:[[50,48,28857],256],13165:[[50,49,28857],256],13166:[[50,50,28857],256],13167:[[50,51,28857],256],13168:[[50,52,28857],256],13169:[[104,80,97],256],13170:[[100,97],256],13171:[[65,85],256],13172:[[98,97,114],256],13173:[[111,86],256],13174:[[112,99],256],13175:[[100,109],256],13176:[[100,109,178],256],13177:[[100,109,179],256],13178:[[73,85],256],13179:[[24179,25104],256],13180:[[26157,21644],256],13181:[[22823,27491],256],13182:[[26126,27835],256],13183:[[26666,24335,20250,31038],256],13184:[[112,65],256],13185:[[110,65],256],13186:[[956,65],256],13187:[[109,65],256],13188:[[107,65],256],13189:[[75,66],256],13190:[[77,66],256],13191:[[71,66],256],13192:[[99,97,108],256],13193:[[107,99,97,108],256],13194:[[112,70],256],13195:[[110,70],256],13196:[[956,70],256],13197:[[956,103],256],13198:[[109,103],256],13199:[[107,103],256],13200:[[72,122],256],13201:[[107,72,122],256],13202:[[77,72,122],256],13203:[[71,72,122],256],13204:[[84,72,122],256],13205:[[956,8467],256],13206:[[109,8467],256],13207:[[100,8467],256],13208:[[107,8467],256],13209:[[102,109],256],13210:[[110,109],256],13211:[[956,109],256],13212:[[109,109],256],13213:[[99,109],256],13214:[[107,109],256],13215:[[109,109,178],256],13216:[[99,109,178],256],13217:[[109,178],256],13218:[[107,109,178],256],13219:[[109,109,179],256],13220:[[99,109,179],256],13221:[[109,179],256],13222:[[107,109,179],256],13223:[[109,8725,115],256],13224:[[109,8725,115,178],256],13225:[[80,97],256],13226:[[107,80,97],256],13227:[[77,80,97],256],13228:[[71,80,97],256],13229:[[114,97,100],256],13230:[[114,97,100,8725,115],256],13231:[[114,97,100,8725,115,178],256],13232:[[112,115],256],13233:[[110,115],256],13234:[[956,115],256],13235:[[109,115],256],13236:[[112,86],256],13237:[[110,86],256],13238:[[956,86],256],13239:[[109,86],256],13240:[[107,86],256],13241:[[77,86],256],13242:[[112,87],256],13243:[[110,87],256],13244:[[956,87],256],13245:[[109,87],256],13246:[[107,87],256],13247:[[77,87],256],13248:[[107,937],256],13249:[[77,937],256],13250:[[97,46,109,46],256],13251:[[66,113],256],13252:[[99,99],256],13253:[[99,100],256],13254:[[67,8725,107,103],256],13255:[[67,111,46],256],13256:[[100,66],256],13257:[[71,121],256],13258:[[104,97],256],13259:[[72,80],256],13260:[[105,110],256],13261:[[75,75],256],13262:[[75,77],256],13263:[[107,116],256],13264:[[108,109],256],13265:[[108,110],256],13266:[[108,111,103],256],13267:[[108,120],256],13268:[[109,98],256],13269:[[109,105,108],256],13270:[[109,111,108],256],13271:[[80,72],256],13272:[[112,46,109,46],256],13273:[[80,80,77],256],13274:[[80,82],256],13275:[[115,114],256],13276:[[83,118],256],13277:[[87,98],256],13278:[[86,8725,109],256],13279:[[65,8725,109],256],13280:[[49,26085],256],13281:[[50,26085],256],13282:[[51,26085],256],13283:[[52,26085],256],13284:[[53,26085],256],13285:[[54,26085],256],13286:[[55,26085],256],13287:[[56,26085],256],13288:[[57,26085],256],13289:[[49,48,26085],256],13290:[[49,49,26085],256],13291:[[49,50,26085],256],13292:[[49,51,26085],256],13293:[[49,52,26085],256],13294:[[49,53,26085],256],13295:[[49,54,26085],256],13296:[[49,55,26085],256],13297:[[49,56,26085],256],13298:[[49,57,26085],256],13299:[[50,48,26085],256],13300:[[50,49,26085],256],13301:[[50,50,26085],256],13302:[[50,51,26085],256],13303:[[50,52,26085],256],13304:[[50,53,26085],256],13305:[[50,54,26085],256],13306:[[50,55,26085],256],13307:[[50,56,26085],256],13308:[[50,57,26085],256],13309:[[51,48,26085],256],13310:[[51,49,26085],256],13311:[[103,97,108],256]},\n27136:{92912:[,1],92913:[,1],92914:[,1],92915:[,1],92916:[,1]},\n27392:{92976:[,230],92977:[,230],92978:[,230],92979:[,230],92980:[,230],92981:[,230],92982:[,230]},\n42496:{42607:[,230],42612:[,230],42613:[,230],42614:[,230],42615:[,230],42616:[,230],42617:[,230],42618:[,230],42619:[,230],42620:[,230],42621:[,230],42652:[[1098],256],42653:[[1100],256],42655:[,230],42736:[,230],42737:[,230]},\n42752:{42864:[[42863],256],43000:[[294],256],43001:[[339],256]},\n43008:{43014:[,9],43204:[,9],43232:[,230],43233:[,230],43234:[,230],43235:[,230],43236:[,230],43237:[,230],43238:[,230],43239:[,230],43240:[,230],43241:[,230],43242:[,230],43243:[,230],43244:[,230],43245:[,230],43246:[,230],43247:[,230],43248:[,230],43249:[,230]},\n43264:{43307:[,220],43308:[,220],43309:[,220],43347:[,9],43443:[,7],43456:[,9]},\n43520:{43696:[,230],43698:[,230],43699:[,230],43700:[,220],43703:[,230],43704:[,230],43710:[,230],43711:[,230],43713:[,230],43766:[,9]},\n43776:{43868:[[42791],256],43869:[[43831],256],43870:[[619],256],43871:[[43858],256],44013:[,9]},\n48128:{113822:[,1]},\n53504:{119134:[[119127,119141],512],119135:[[119128,119141],512],119136:[[119135,119150],512],119137:[[119135,119151],512],119138:[[119135,119152],512],119139:[[119135,119153],512],119140:[[119135,119154],512],119141:[,216],119142:[,216],119143:[,1],119144:[,1],119145:[,1],119149:[,226],119150:[,216],119151:[,216],119152:[,216],119153:[,216],119154:[,216],119163:[,220],119164:[,220],119165:[,220],119166:[,220],119167:[,220],119168:[,220],119169:[,220],119170:[,220],119173:[,230],119174:[,230],119175:[,230],119176:[,230],119177:[,230],119178:[,220],119179:[,220],119210:[,230],119211:[,230],119212:[,230],119213:[,230],119227:[[119225,119141],512],119228:[[119226,119141],512],119229:[[119227,119150],512],119230:[[119228,119150],512],119231:[[119227,119151],512],119232:[[119228,119151],512]},\n53760:{119362:[,230],119363:[,230],119364:[,230]},\n54272:{119808:[[65],256],119809:[[66],256],119810:[[67],256],119811:[[68],256],119812:[[69],256],119813:[[70],256],119814:[[71],256],119815:[[72],256],119816:[[73],256],119817:[[74],256],119818:[[75],256],119819:[[76],256],119820:[[77],256],119821:[[78],256],119822:[[79],256],119823:[[80],256],119824:[[81],256],119825:[[82],256],119826:[[83],256],119827:[[84],256],119828:[[85],256],119829:[[86],256],119830:[[87],256],119831:[[88],256],119832:[[89],256],119833:[[90],256],119834:[[97],256],119835:[[98],256],119836:[[99],256],119837:[[100],256],119838:[[101],256],119839:[[102],256],119840:[[103],256],119841:[[104],256],119842:[[105],256],119843:[[106],256],119844:[[107],256],119845:[[108],256],119846:[[109],256],119847:[[110],256],119848:[[111],256],119849:[[112],256],119850:[[113],256],119851:[[114],256],119852:[[115],256],119853:[[116],256],119854:[[117],256],119855:[[118],256],119856:[[119],256],119857:[[120],256],119858:[[121],256],119859:[[122],256],119860:[[65],256],119861:[[66],256],119862:[[67],256],119863:[[68],256],119864:[[69],256],119865:[[70],256],119866:[[71],256],119867:[[72],256],119868:[[73],256],119869:[[74],256],119870:[[75],256],119871:[[76],256],119872:[[77],256],119873:[[78],256],119874:[[79],256],119875:[[80],256],119876:[[81],256],119877:[[82],256],119878:[[83],256],119879:[[84],256],119880:[[85],256],119881:[[86],256],119882:[[87],256],119883:[[88],256],119884:[[89],256],119885:[[90],256],119886:[[97],256],119887:[[98],256],119888:[[99],256],119889:[[100],256],119890:[[101],256],119891:[[102],256],119892:[[103],256],119894:[[105],256],119895:[[106],256],119896:[[107],256],119897:[[108],256],119898:[[109],256],119899:[[110],256],119900:[[111],256],119901:[[112],256],119902:[[113],256],119903:[[114],256],119904:[[115],256],119905:[[116],256],119906:[[117],256],119907:[[118],256],119908:[[119],256],119909:[[120],256],119910:[[121],256],119911:[[122],256],119912:[[65],256],119913:[[66],256],119914:[[67],256],119915:[[68],256],119916:[[69],256],119917:[[70],256],119918:[[71],256],119919:[[72],256],119920:[[73],256],119921:[[74],256],119922:[[75],256],119923:[[76],256],119924:[[77],256],119925:[[78],256],119926:[[79],256],119927:[[80],256],119928:[[81],256],119929:[[82],256],119930:[[83],256],119931:[[84],256],119932:[[85],256],119933:[[86],256],119934:[[87],256],119935:[[88],256],119936:[[89],256],119937:[[90],256],119938:[[97],256],119939:[[98],256],119940:[[99],256],119941:[[100],256],119942:[[101],256],119943:[[102],256],119944:[[103],256],119945:[[104],256],119946:[[105],256],119947:[[106],256],119948:[[107],256],119949:[[108],256],119950:[[109],256],119951:[[110],256],119952:[[111],256],119953:[[112],256],119954:[[113],256],119955:[[114],256],119956:[[115],256],119957:[[116],256],119958:[[117],256],119959:[[118],256],119960:[[119],256],119961:[[120],256],119962:[[121],256],119963:[[122],256],119964:[[65],256],119966:[[67],256],119967:[[68],256],119970:[[71],256],119973:[[74],256],119974:[[75],256],119977:[[78],256],119978:[[79],256],119979:[[80],256],119980:[[81],256],119982:[[83],256],119983:[[84],256],119984:[[85],256],119985:[[86],256],119986:[[87],256],119987:[[88],256],119988:[[89],256],119989:[[90],256],119990:[[97],256],119991:[[98],256],119992:[[99],256],119993:[[100],256],119995:[[102],256],119997:[[104],256],119998:[[105],256],119999:[[106],256],120000:[[107],256],120001:[[108],256],120002:[[109],256],120003:[[110],256],120005:[[112],256],120006:[[113],256],120007:[[114],256],120008:[[115],256],120009:[[116],256],120010:[[117],256],120011:[[118],256],120012:[[119],256],120013:[[120],256],120014:[[121],256],120015:[[122],256],120016:[[65],256],120017:[[66],256],120018:[[67],256],120019:[[68],256],120020:[[69],256],120021:[[70],256],120022:[[71],256],120023:[[72],256],120024:[[73],256],120025:[[74],256],120026:[[75],256],120027:[[76],256],120028:[[77],256],120029:[[78],256],120030:[[79],256],120031:[[80],256],120032:[[81],256],120033:[[82],256],120034:[[83],256],120035:[[84],256],120036:[[85],256],120037:[[86],256],120038:[[87],256],120039:[[88],256],120040:[[89],256],120041:[[90],256],120042:[[97],256],120043:[[98],256],120044:[[99],256],120045:[[100],256],120046:[[101],256],120047:[[102],256],120048:[[103],256],120049:[[104],256],120050:[[105],256],120051:[[106],256],120052:[[107],256],120053:[[108],256],120054:[[109],256],120055:[[110],256],120056:[[111],256],120057:[[112],256],120058:[[113],256],120059:[[114],256],120060:[[115],256],120061:[[116],256],120062:[[117],256],120063:[[118],256]},\n54528:{120064:[[119],256],120065:[[120],256],120066:[[121],256],120067:[[122],256],120068:[[65],256],120069:[[66],256],120071:[[68],256],120072:[[69],256],120073:[[70],256],120074:[[71],256],120077:[[74],256],120078:[[75],256],120079:[[76],256],120080:[[77],256],120081:[[78],256],120082:[[79],256],120083:[[80],256],120084:[[81],256],120086:[[83],256],120087:[[84],256],120088:[[85],256],120089:[[86],256],120090:[[87],256],120091:[[88],256],120092:[[89],256],120094:[[97],256],120095:[[98],256],120096:[[99],256],120097:[[100],256],120098:[[101],256],120099:[[102],256],120100:[[103],256],120101:[[104],256],120102:[[105],256],120103:[[106],256],120104:[[107],256],120105:[[108],256],120106:[[109],256],120107:[[110],256],120108:[[111],256],120109:[[112],256],120110:[[113],256],120111:[[114],256],120112:[[115],256],120113:[[116],256],120114:[[117],256],120115:[[118],256],120116:[[119],256],120117:[[120],256],120118:[[121],256],120119:[[122],256],120120:[[65],256],120121:[[66],256],120123:[[68],256],120124:[[69],256],120125:[[70],256],120126:[[71],256],120128:[[73],256],120129:[[74],256],120130:[[75],256],120131:[[76],256],120132:[[77],256],120134:[[79],256],120138:[[83],256],120139:[[84],256],120140:[[85],256],120141:[[86],256],120142:[[87],256],120143:[[88],256],120144:[[89],256],120146:[[97],256],120147:[[98],256],120148:[[99],256],120149:[[100],256],120150:[[101],256],120151:[[102],256],120152:[[103],256],120153:[[104],256],120154:[[105],256],120155:[[106],256],120156:[[107],256],120157:[[108],256],120158:[[109],256],120159:[[110],256],120160:[[111],256],120161:[[112],256],120162:[[113],256],120163:[[114],256],120164:[[115],256],120165:[[116],256],120166:[[117],256],120167:[[118],256],120168:[[119],256],120169:[[120],256],120170:[[121],256],120171:[[122],256],120172:[[65],256],120173:[[66],256],120174:[[67],256],120175:[[68],256],120176:[[69],256],120177:[[70],256],120178:[[71],256],120179:[[72],256],120180:[[73],256],120181:[[74],256],120182:[[75],256],120183:[[76],256],120184:[[77],256],120185:[[78],256],120186:[[79],256],120187:[[80],256],120188:[[81],256],120189:[[82],256],120190:[[83],256],120191:[[84],256],120192:[[85],256],120193:[[86],256],120194:[[87],256],120195:[[88],256],120196:[[89],256],120197:[[90],256],120198:[[97],256],120199:[[98],256],120200:[[99],256],120201:[[100],256],120202:[[101],256],120203:[[102],256],120204:[[103],256],120205:[[104],256],120206:[[105],256],120207:[[106],256],120208:[[107],256],120209:[[108],256],120210:[[109],256],120211:[[110],256],120212:[[111],256],120213:[[112],256],120214:[[113],256],120215:[[114],256],120216:[[115],256],120217:[[116],256],120218:[[117],256],120219:[[118],256],120220:[[119],256],120221:[[120],256],120222:[[121],256],120223:[[122],256],120224:[[65],256],120225:[[66],256],120226:[[67],256],120227:[[68],256],120228:[[69],256],120229:[[70],256],120230:[[71],256],120231:[[72],256],120232:[[73],256],120233:[[74],256],120234:[[75],256],120235:[[76],256],120236:[[77],256],120237:[[78],256],120238:[[79],256],120239:[[80],256],120240:[[81],256],120241:[[82],256],120242:[[83],256],120243:[[84],256],120244:[[85],256],120245:[[86],256],120246:[[87],256],120247:[[88],256],120248:[[89],256],120249:[[90],256],120250:[[97],256],120251:[[98],256],120252:[[99],256],120253:[[100],256],120254:[[101],256],120255:[[102],256],120256:[[103],256],120257:[[104],256],120258:[[105],256],120259:[[106],256],120260:[[107],256],120261:[[108],256],120262:[[109],256],120263:[[110],256],120264:[[111],256],120265:[[112],256],120266:[[113],256],120267:[[114],256],120268:[[115],256],120269:[[116],256],120270:[[117],256],120271:[[118],256],120272:[[119],256],120273:[[120],256],120274:[[121],256],120275:[[122],256],120276:[[65],256],120277:[[66],256],120278:[[67],256],120279:[[68],256],120280:[[69],256],120281:[[70],256],120282:[[71],256],120283:[[72],256],120284:[[73],256],120285:[[74],256],120286:[[75],256],120287:[[76],256],120288:[[77],256],120289:[[78],256],120290:[[79],256],120291:[[80],256],120292:[[81],256],120293:[[82],256],120294:[[83],256],120295:[[84],256],120296:[[85],256],120297:[[86],256],120298:[[87],256],120299:[[88],256],120300:[[89],256],120301:[[90],256],120302:[[97],256],120303:[[98],256],120304:[[99],256],120305:[[100],256],120306:[[101],256],120307:[[102],256],120308:[[103],256],120309:[[104],256],120310:[[105],256],120311:[[106],256],120312:[[107],256],120313:[[108],256],120314:[[109],256],120315:[[110],256],120316:[[111],256],120317:[[112],256],120318:[[113],256],120319:[[114],256]},\n54784:{120320:[[115],256],120321:[[116],256],120322:[[117],256],120323:[[118],256],120324:[[119],256],120325:[[120],256],120326:[[121],256],120327:[[122],256],120328:[[65],256],120329:[[66],256],120330:[[67],256],120331:[[68],256],120332:[[69],256],120333:[[70],256],120334:[[71],256],120335:[[72],256],120336:[[73],256],120337:[[74],256],120338:[[75],256],120339:[[76],256],120340:[[77],256],120341:[[78],256],120342:[[79],256],120343:[[80],256],120344:[[81],256],120345:[[82],256],120346:[[83],256],120347:[[84],256],120348:[[85],256],120349:[[86],256],120350:[[87],256],120351:[[88],256],120352:[[89],256],120353:[[90],256],120354:[[97],256],120355:[[98],256],120356:[[99],256],120357:[[100],256],120358:[[101],256],120359:[[102],256],120360:[[103],256],120361:[[104],256],120362:[[105],256],120363:[[106],256],120364:[[107],256],120365:[[108],256],120366:[[109],256],120367:[[110],256],120368:[[111],256],120369:[[112],256],120370:[[113],256],120371:[[114],256],120372:[[115],256],120373:[[116],256],120374:[[117],256],120375:[[118],256],120376:[[119],256],120377:[[120],256],120378:[[121],256],120379:[[122],256],120380:[[65],256],120381:[[66],256],120382:[[67],256],120383:[[68],256],120384:[[69],256],120385:[[70],256],120386:[[71],256],120387:[[72],256],120388:[[73],256],120389:[[74],256],120390:[[75],256],120391:[[76],256],120392:[[77],256],120393:[[78],256],120394:[[79],256],120395:[[80],256],120396:[[81],256],120397:[[82],256],120398:[[83],256],120399:[[84],256],120400:[[85],256],120401:[[86],256],120402:[[87],256],120403:[[88],256],120404:[[89],256],120405:[[90],256],120406:[[97],256],120407:[[98],256],120408:[[99],256],120409:[[100],256],120410:[[101],256],120411:[[102],256],120412:[[103],256],120413:[[104],256],120414:[[105],256],120415:[[106],256],120416:[[107],256],120417:[[108],256],120418:[[109],256],120419:[[110],256],120420:[[111],256],120421:[[112],256],120422:[[113],256],120423:[[114],256],120424:[[115],256],120425:[[116],256],120426:[[117],256],120427:[[118],256],120428:[[119],256],120429:[[120],256],120430:[[121],256],120431:[[122],256],120432:[[65],256],120433:[[66],256],120434:[[67],256],120435:[[68],256],120436:[[69],256],120437:[[70],256],120438:[[71],256],120439:[[72],256],120440:[[73],256],120441:[[74],256],120442:[[75],256],120443:[[76],256],120444:[[77],256],120445:[[78],256],120446:[[79],256],120447:[[80],256],120448:[[81],256],120449:[[82],256],120450:[[83],256],120451:[[84],256],120452:[[85],256],120453:[[86],256],120454:[[87],256],120455:[[88],256],120456:[[89],256],120457:[[90],256],120458:[[97],256],120459:[[98],256],120460:[[99],256],120461:[[100],256],120462:[[101],256],120463:[[102],256],120464:[[103],256],120465:[[104],256],120466:[[105],256],120467:[[106],256],120468:[[107],256],120469:[[108],256],120470:[[109],256],120471:[[110],256],120472:[[111],256],120473:[[112],256],120474:[[113],256],120475:[[114],256],120476:[[115],256],120477:[[116],256],120478:[[117],256],120479:[[118],256],120480:[[119],256],120481:[[120],256],120482:[[121],256],120483:[[122],256],120484:[[305],256],120485:[[567],256],120488:[[913],256],120489:[[914],256],120490:[[915],256],120491:[[916],256],120492:[[917],256],120493:[[918],256],120494:[[919],256],120495:[[920],256],120496:[[921],256],120497:[[922],256],120498:[[923],256],120499:[[924],256],120500:[[925],256],120501:[[926],256],120502:[[927],256],120503:[[928],256],120504:[[929],256],120505:[[1012],256],120506:[[931],256],120507:[[932],256],120508:[[933],256],120509:[[934],256],120510:[[935],256],120511:[[936],256],120512:[[937],256],120513:[[8711],256],120514:[[945],256],120515:[[946],256],120516:[[947],256],120517:[[948],256],120518:[[949],256],120519:[[950],256],120520:[[951],256],120521:[[952],256],120522:[[953],256],120523:[[954],256],120524:[[955],256],120525:[[956],256],120526:[[957],256],120527:[[958],256],120528:[[959],256],120529:[[960],256],120530:[[961],256],120531:[[962],256],120532:[[963],256],120533:[[964],256],120534:[[965],256],120535:[[966],256],120536:[[967],256],120537:[[968],256],120538:[[969],256],120539:[[8706],256],120540:[[1013],256],120541:[[977],256],120542:[[1008],256],120543:[[981],256],120544:[[1009],256],120545:[[982],256],120546:[[913],256],120547:[[914],256],120548:[[915],256],120549:[[916],256],120550:[[917],256],120551:[[918],256],120552:[[919],256],120553:[[920],256],120554:[[921],256],120555:[[922],256],120556:[[923],256],120557:[[924],256],120558:[[925],256],120559:[[926],256],120560:[[927],256],120561:[[928],256],120562:[[929],256],120563:[[1012],256],120564:[[931],256],120565:[[932],256],120566:[[933],256],120567:[[934],256],120568:[[935],256],120569:[[936],256],120570:[[937],256],120571:[[8711],256],120572:[[945],256],120573:[[946],256],120574:[[947],256],120575:[[948],256]},\n55040:{120576:[[949],256],120577:[[950],256],120578:[[951],256],120579:[[952],256],120580:[[953],256],120581:[[954],256],120582:[[955],256],120583:[[956],256],120584:[[957],256],120585:[[958],256],120586:[[959],256],120587:[[960],256],120588:[[961],256],120589:[[962],256],120590:[[963],256],120591:[[964],256],120592:[[965],256],120593:[[966],256],120594:[[967],256],120595:[[968],256],120596:[[969],256],120597:[[8706],256],120598:[[1013],256],120599:[[977],256],120600:[[1008],256],120601:[[981],256],120602:[[1009],256],120603:[[982],256],120604:[[913],256],120605:[[914],256],120606:[[915],256],120607:[[916],256],120608:[[917],256],120609:[[918],256],120610:[[919],256],120611:[[920],256],120612:[[921],256],120613:[[922],256],120614:[[923],256],120615:[[924],256],120616:[[925],256],120617:[[926],256],120618:[[927],256],120619:[[928],256],120620:[[929],256],120621:[[1012],256],120622:[[931],256],120623:[[932],256],120624:[[933],256],120625:[[934],256],120626:[[935],256],120627:[[936],256],120628:[[937],256],120629:[[8711],256],120630:[[945],256],120631:[[946],256],120632:[[947],256],120633:[[948],256],120634:[[949],256],120635:[[950],256],120636:[[951],256],120637:[[952],256],120638:[[953],256],120639:[[954],256],120640:[[955],256],120641:[[956],256],120642:[[957],256],120643:[[958],256],120644:[[959],256],120645:[[960],256],120646:[[961],256],120647:[[962],256],120648:[[963],256],120649:[[964],256],120650:[[965],256],120651:[[966],256],120652:[[967],256],120653:[[968],256],120654:[[969],256],120655:[[8706],256],120656:[[1013],256],120657:[[977],256],120658:[[1008],256],120659:[[981],256],120660:[[1009],256],120661:[[982],256],120662:[[913],256],120663:[[914],256],120664:[[915],256],120665:[[916],256],120666:[[917],256],120667:[[918],256],120668:[[919],256],120669:[[920],256],120670:[[921],256],120671:[[922],256],120672:[[923],256],120673:[[924],256],120674:[[925],256],120675:[[926],256],120676:[[927],256],120677:[[928],256],120678:[[929],256],120679:[[1012],256],120680:[[931],256],120681:[[932],256],120682:[[933],256],120683:[[934],256],120684:[[935],256],120685:[[936],256],120686:[[937],256],120687:[[8711],256],120688:[[945],256],120689:[[946],256],120690:[[947],256],120691:[[948],256],120692:[[949],256],120693:[[950],256],120694:[[951],256],120695:[[952],256],120696:[[953],256],120697:[[954],256],120698:[[955],256],120699:[[956],256],120700:[[957],256],120701:[[958],256],120702:[[959],256],120703:[[960],256],120704:[[961],256],120705:[[962],256],120706:[[963],256],120707:[[964],256],120708:[[965],256],120709:[[966],256],120710:[[967],256],120711:[[968],256],120712:[[969],256],120713:[[8706],256],120714:[[1013],256],120715:[[977],256],120716:[[1008],256],120717:[[981],256],120718:[[1009],256],120719:[[982],256],120720:[[913],256],120721:[[914],256],120722:[[915],256],120723:[[916],256],120724:[[917],256],120725:[[918],256],120726:[[919],256],120727:[[920],256],120728:[[921],256],120729:[[922],256],120730:[[923],256],120731:[[924],256],120732:[[925],256],120733:[[926],256],120734:[[927],256],120735:[[928],256],120736:[[929],256],120737:[[1012],256],120738:[[931],256],120739:[[932],256],120740:[[933],256],120741:[[934],256],120742:[[935],256],120743:[[936],256],120744:[[937],256],120745:[[8711],256],120746:[[945],256],120747:[[946],256],120748:[[947],256],120749:[[948],256],120750:[[949],256],120751:[[950],256],120752:[[951],256],120753:[[952],256],120754:[[953],256],120755:[[954],256],120756:[[955],256],120757:[[956],256],120758:[[957],256],120759:[[958],256],120760:[[959],256],120761:[[960],256],120762:[[961],256],120763:[[962],256],120764:[[963],256],120765:[[964],256],120766:[[965],256],120767:[[966],256],120768:[[967],256],120769:[[968],256],120770:[[969],256],120771:[[8706],256],120772:[[1013],256],120773:[[977],256],120774:[[1008],256],120775:[[981],256],120776:[[1009],256],120777:[[982],256],120778:[[988],256],120779:[[989],256],120782:[[48],256],120783:[[49],256],120784:[[50],256],120785:[[51],256],120786:[[52],256],120787:[[53],256],120788:[[54],256],120789:[[55],256],120790:[[56],256],120791:[[57],256],120792:[[48],256],120793:[[49],256],120794:[[50],256],120795:[[51],256],120796:[[52],256],120797:[[53],256],120798:[[54],256],120799:[[55],256],120800:[[56],256],120801:[[57],256],120802:[[48],256],120803:[[49],256],120804:[[50],256],120805:[[51],256],120806:[[52],256],120807:[[53],256],120808:[[54],256],120809:[[55],256],120810:[[56],256],120811:[[57],256],120812:[[48],256],120813:[[49],256],120814:[[50],256],120815:[[51],256],120816:[[52],256],120817:[[53],256],120818:[[54],256],120819:[[55],256],120820:[[56],256],120821:[[57],256],120822:[[48],256],120823:[[49],256],120824:[[50],256],120825:[[51],256],120826:[[52],256],120827:[[53],256],120828:[[54],256],120829:[[55],256],120830:[[56],256],120831:[[57],256]},\n59392:{125136:[,220],125137:[,220],125138:[,220],125139:[,220],125140:[,220],125141:[,220],125142:[,220]},\n60928:{126464:[[1575],256],126465:[[1576],256],126466:[[1580],256],126467:[[1583],256],126469:[[1608],256],126470:[[1586],256],126471:[[1581],256],126472:[[1591],256],126473:[[1610],256],126474:[[1603],256],126475:[[1604],256],126476:[[1605],256],126477:[[1606],256],126478:[[1587],256],126479:[[1593],256],126480:[[1601],256],126481:[[1589],256],126482:[[1602],256],126483:[[1585],256],126484:[[1588],256],126485:[[1578],256],126486:[[1579],256],126487:[[1582],256],126488:[[1584],256],126489:[[1590],256],126490:[[1592],256],126491:[[1594],256],126492:[[1646],256],126493:[[1722],256],126494:[[1697],256],126495:[[1647],256],126497:[[1576],256],126498:[[1580],256],126500:[[1607],256],126503:[[1581],256],126505:[[1610],256],126506:[[1603],256],126507:[[1604],256],126508:[[1605],256],126509:[[1606],256],126510:[[1587],256],126511:[[1593],256],126512:[[1601],256],126513:[[1589],256],126514:[[1602],256],126516:[[1588],256],126517:[[1578],256],126518:[[1579],256],126519:[[1582],256],126521:[[1590],256],126523:[[1594],256],126530:[[1580],256],126535:[[1581],256],126537:[[1610],256],126539:[[1604],256],126541:[[1606],256],126542:[[1587],256],126543:[[1593],256],126545:[[1589],256],126546:[[1602],256],126548:[[1588],256],126551:[[1582],256],126553:[[1590],256],126555:[[1594],256],126557:[[1722],256],126559:[[1647],256],126561:[[1576],256],126562:[[1580],256],126564:[[1607],256],126567:[[1581],256],126568:[[1591],256],126569:[[1610],256],126570:[[1603],256],126572:[[1605],256],126573:[[1606],256],126574:[[1587],256],126575:[[1593],256],126576:[[1601],256],126577:[[1589],256],126578:[[1602],256],126580:[[1588],256],126581:[[1578],256],126582:[[1579],256],126583:[[1582],256],126585:[[1590],256],126586:[[1592],256],126587:[[1594],256],126588:[[1646],256],126590:[[1697],256],126592:[[1575],256],126593:[[1576],256],126594:[[1580],256],126595:[[1583],256],126596:[[1607],256],126597:[[1608],256],126598:[[1586],256],126599:[[1581],256],126600:[[1591],256],126601:[[1610],256],126603:[[1604],256],126604:[[1605],256],126605:[[1606],256],126606:[[1587],256],126607:[[1593],256],126608:[[1601],256],126609:[[1589],256],126610:[[1602],256],126611:[[1585],256],126612:[[1588],256],126613:[[1578],256],126614:[[1579],256],126615:[[1582],256],126616:[[1584],256],126617:[[1590],256],126618:[[1592],256],126619:[[1594],256],126625:[[1576],256],126626:[[1580],256],126627:[[1583],256],126629:[[1608],256],126630:[[1586],256],126631:[[1581],256],126632:[[1591],256],126633:[[1610],256],126635:[[1604],256],126636:[[1605],256],126637:[[1606],256],126638:[[1587],256],126639:[[1593],256],126640:[[1601],256],126641:[[1589],256],126642:[[1602],256],126643:[[1585],256],126644:[[1588],256],126645:[[1578],256],126646:[[1579],256],126647:[[1582],256],126648:[[1584],256],126649:[[1590],256],126650:[[1592],256],126651:[[1594],256]},\n61696:{127232:[[48,46],256],127233:[[48,44],256],127234:[[49,44],256],127235:[[50,44],256],127236:[[51,44],256],127237:[[52,44],256],127238:[[53,44],256],127239:[[54,44],256],127240:[[55,44],256],127241:[[56,44],256],127242:[[57,44],256],127248:[[40,65,41],256],127249:[[40,66,41],256],127250:[[40,67,41],256],127251:[[40,68,41],256],127252:[[40,69,41],256],127253:[[40,70,41],256],127254:[[40,71,41],256],127255:[[40,72,41],256],127256:[[40,73,41],256],127257:[[40,74,41],256],127258:[[40,75,41],256],127259:[[40,76,41],256],127260:[[40,77,41],256],127261:[[40,78,41],256],127262:[[40,79,41],256],127263:[[40,80,41],256],127264:[[40,81,41],256],127265:[[40,82,41],256],127266:[[40,83,41],256],127267:[[40,84,41],256],127268:[[40,85,41],256],127269:[[40,86,41],256],127270:[[40,87,41],256],127271:[[40,88,41],256],127272:[[40,89,41],256],127273:[[40,90,41],256],127274:[[12308,83,12309],256],127275:[[67],256],127276:[[82],256],127277:[[67,68],256],127278:[[87,90],256],127280:[[65],256],127281:[[66],256],127282:[[67],256],127283:[[68],256],127284:[[69],256],127285:[[70],256],127286:[[71],256],127287:[[72],256],127288:[[73],256],127289:[[74],256],127290:[[75],256],127291:[[76],256],127292:[[77],256],127293:[[78],256],127294:[[79],256],127295:[[80],256],127296:[[81],256],127297:[[82],256],127298:[[83],256],127299:[[84],256],127300:[[85],256],127301:[[86],256],127302:[[87],256],127303:[[88],256],127304:[[89],256],127305:[[90],256],127306:[[72,86],256],127307:[[77,86],256],127308:[[83,68],256],127309:[[83,83],256],127310:[[80,80,86],256],127311:[[87,67],256],127338:[[77,67],256],127339:[[77,68],256],127376:[[68,74],256]},\n61952:{127488:[[12411,12363],256],127489:[[12467,12467],256],127490:[[12469],256],127504:[[25163],256],127505:[[23383],256],127506:[[21452],256],127507:[[12487],256],127508:[[20108],256],127509:[[22810],256],127510:[[35299],256],127511:[[22825],256],127512:[[20132],256],127513:[[26144],256],127514:[[28961],256],127515:[[26009],256],127516:[[21069],256],127517:[[24460],256],127518:[[20877],256],127519:[[26032],256],127520:[[21021],256],127521:[[32066],256],127522:[[29983],256],127523:[[36009],256],127524:[[22768],256],127525:[[21561],256],127526:[[28436],256],127527:[[25237],256],127528:[[25429],256],127529:[[19968],256],127530:[[19977],256],127531:[[36938],256],127532:[[24038],256],127533:[[20013],256],127534:[[21491],256],127535:[[25351],256],127536:[[36208],256],127537:[[25171],256],127538:[[31105],256],127539:[[31354],256],127540:[[21512],256],127541:[[28288],256],127542:[[26377],256],127543:[[26376],256],127544:[[30003],256],127545:[[21106],256],127546:[[21942],256],127552:[[12308,26412,12309],256],127553:[[12308,19977,12309],256],127554:[[12308,20108,12309],256],127555:[[12308,23433,12309],256],127556:[[12308,28857,12309],256],127557:[[12308,25171,12309],256],127558:[[12308,30423,12309],256],127559:[[12308,21213,12309],256],127560:[[12308,25943,12309],256],127568:[[24471],256],127569:[[21487],256]},\n63488:{194560:[[20029]],194561:[[20024]],194562:[[20033]],194563:[[131362]],194564:[[20320]],194565:[[20398]],194566:[[20411]],194567:[[20482]],194568:[[20602]],194569:[[20633]],194570:[[20711]],194571:[[20687]],194572:[[13470]],194573:[[132666]],194574:[[20813]],194575:[[20820]],194576:[[20836]],194577:[[20855]],194578:[[132380]],194579:[[13497]],194580:[[20839]],194581:[[20877]],194582:[[132427]],194583:[[20887]],194584:[[20900]],194585:[[20172]],194586:[[20908]],194587:[[20917]],194588:[[168415]],194589:[[20981]],194590:[[20995]],194591:[[13535]],194592:[[21051]],194593:[[21062]],194594:[[21106]],194595:[[21111]],194596:[[13589]],194597:[[21191]],194598:[[21193]],194599:[[21220]],194600:[[21242]],194601:[[21253]],194602:[[21254]],194603:[[21271]],194604:[[21321]],194605:[[21329]],194606:[[21338]],194607:[[21363]],194608:[[21373]],194609:[[21375]],194610:[[21375]],194611:[[21375]],194612:[[133676]],194613:[[28784]],194614:[[21450]],194615:[[21471]],194616:[[133987]],194617:[[21483]],194618:[[21489]],194619:[[21510]],194620:[[21662]],194621:[[21560]],194622:[[21576]],194623:[[21608]],194624:[[21666]],194625:[[21750]],194626:[[21776]],194627:[[21843]],194628:[[21859]],194629:[[21892]],194630:[[21892]],194631:[[21913]],194632:[[21931]],194633:[[21939]],194634:[[21954]],194635:[[22294]],194636:[[22022]],194637:[[22295]],194638:[[22097]],194639:[[22132]],194640:[[20999]],194641:[[22766]],194642:[[22478]],194643:[[22516]],194644:[[22541]],194645:[[22411]],194646:[[22578]],194647:[[22577]],194648:[[22700]],194649:[[136420]],194650:[[22770]],194651:[[22775]],194652:[[22790]],194653:[[22810]],194654:[[22818]],194655:[[22882]],194656:[[136872]],194657:[[136938]],194658:[[23020]],194659:[[23067]],194660:[[23079]],194661:[[23000]],194662:[[23142]],194663:[[14062]],194664:[[14076]],194665:[[23304]],194666:[[23358]],194667:[[23358]],194668:[[137672]],194669:[[23491]],194670:[[23512]],194671:[[23527]],194672:[[23539]],194673:[[138008]],194674:[[23551]],194675:[[23558]],194676:[[24403]],194677:[[23586]],194678:[[14209]],194679:[[23648]],194680:[[23662]],194681:[[23744]],194682:[[23693]],194683:[[138724]],194684:[[23875]],194685:[[138726]],194686:[[23918]],194687:[[23915]],194688:[[23932]],194689:[[24033]],194690:[[24034]],194691:[[14383]],194692:[[24061]],194693:[[24104]],194694:[[24125]],194695:[[24169]],194696:[[14434]],194697:[[139651]],194698:[[14460]],194699:[[24240]],194700:[[24243]],194701:[[24246]],194702:[[24266]],194703:[[172946]],194704:[[24318]],194705:[[140081]],194706:[[140081]],194707:[[33281]],194708:[[24354]],194709:[[24354]],194710:[[14535]],194711:[[144056]],194712:[[156122]],194713:[[24418]],194714:[[24427]],194715:[[14563]],194716:[[24474]],194717:[[24525]],194718:[[24535]],194719:[[24569]],194720:[[24705]],194721:[[14650]],194722:[[14620]],194723:[[24724]],194724:[[141012]],194725:[[24775]],194726:[[24904]],194727:[[24908]],194728:[[24910]],194729:[[24908]],194730:[[24954]],194731:[[24974]],194732:[[25010]],194733:[[24996]],194734:[[25007]],194735:[[25054]],194736:[[25074]],194737:[[25078]],194738:[[25104]],194739:[[25115]],194740:[[25181]],194741:[[25265]],194742:[[25300]],194743:[[25424]],194744:[[142092]],194745:[[25405]],194746:[[25340]],194747:[[25448]],194748:[[25475]],194749:[[25572]],194750:[[142321]],194751:[[25634]],194752:[[25541]],194753:[[25513]],194754:[[14894]],194755:[[25705]],194756:[[25726]],194757:[[25757]],194758:[[25719]],194759:[[14956]],194760:[[25935]],194761:[[25964]],194762:[[143370]],194763:[[26083]],194764:[[26360]],194765:[[26185]],194766:[[15129]],194767:[[26257]],194768:[[15112]],194769:[[15076]],194770:[[20882]],194771:[[20885]],194772:[[26368]],194773:[[26268]],194774:[[32941]],194775:[[17369]],194776:[[26391]],194777:[[26395]],194778:[[26401]],194779:[[26462]],194780:[[26451]],194781:[[144323]],194782:[[15177]],194783:[[26618]],194784:[[26501]],194785:[[26706]],194786:[[26757]],194787:[[144493]],194788:[[26766]],194789:[[26655]],194790:[[26900]],194791:[[15261]],194792:[[26946]],194793:[[27043]],194794:[[27114]],194795:[[27304]],194796:[[145059]],194797:[[27355]],194798:[[15384]],194799:[[27425]],194800:[[145575]],194801:[[27476]],194802:[[15438]],194803:[[27506]],194804:[[27551]],194805:[[27578]],194806:[[27579]],194807:[[146061]],194808:[[138507]],194809:[[146170]],194810:[[27726]],194811:[[146620]],194812:[[27839]],194813:[[27853]],194814:[[27751]],194815:[[27926]]},\n63744:{63744:[[35912]],63745:[[26356]],63746:[[36554]],63747:[[36040]],63748:[[28369]],63749:[[20018]],63750:[[21477]],63751:[[40860]],63752:[[40860]],63753:[[22865]],63754:[[37329]],63755:[[21895]],63756:[[22856]],63757:[[25078]],63758:[[30313]],63759:[[32645]],63760:[[34367]],63761:[[34746]],63762:[[35064]],63763:[[37007]],63764:[[27138]],63765:[[27931]],63766:[[28889]],63767:[[29662]],63768:[[33853]],63769:[[37226]],63770:[[39409]],63771:[[20098]],63772:[[21365]],63773:[[27396]],63774:[[29211]],63775:[[34349]],63776:[[40478]],63777:[[23888]],63778:[[28651]],63779:[[34253]],63780:[[35172]],63781:[[25289]],63782:[[33240]],63783:[[34847]],63784:[[24266]],63785:[[26391]],63786:[[28010]],63787:[[29436]],63788:[[37070]],63789:[[20358]],63790:[[20919]],63791:[[21214]],63792:[[25796]],63793:[[27347]],63794:[[29200]],63795:[[30439]],63796:[[32769]],63797:[[34310]],63798:[[34396]],63799:[[36335]],63800:[[38706]],63801:[[39791]],63802:[[40442]],63803:[[30860]],63804:[[31103]],63805:[[32160]],63806:[[33737]],63807:[[37636]],63808:[[40575]],63809:[[35542]],63810:[[22751]],63811:[[24324]],63812:[[31840]],63813:[[32894]],63814:[[29282]],63815:[[30922]],63816:[[36034]],63817:[[38647]],63818:[[22744]],63819:[[23650]],63820:[[27155]],63821:[[28122]],63822:[[28431]],63823:[[32047]],63824:[[32311]],63825:[[38475]],63826:[[21202]],63827:[[32907]],63828:[[20956]],63829:[[20940]],63830:[[31260]],63831:[[32190]],63832:[[33777]],63833:[[38517]],63834:[[35712]],63835:[[25295]],63836:[[27138]],63837:[[35582]],63838:[[20025]],63839:[[23527]],63840:[[24594]],63841:[[29575]],63842:[[30064]],63843:[[21271]],63844:[[30971]],63845:[[20415]],63846:[[24489]],63847:[[19981]],63848:[[27852]],63849:[[25976]],63850:[[32034]],63851:[[21443]],63852:[[22622]],63853:[[30465]],63854:[[33865]],63855:[[35498]],63856:[[27578]],63857:[[36784]],63858:[[27784]],63859:[[25342]],63860:[[33509]],63861:[[25504]],63862:[[30053]],63863:[[20142]],63864:[[20841]],63865:[[20937]],63866:[[26753]],63867:[[31975]],63868:[[33391]],63869:[[35538]],63870:[[37327]],63871:[[21237]],63872:[[21570]],63873:[[22899]],63874:[[24300]],63875:[[26053]],63876:[[28670]],63877:[[31018]],63878:[[38317]],63879:[[39530]],63880:[[40599]],63881:[[40654]],63882:[[21147]],63883:[[26310]],63884:[[27511]],63885:[[36706]],63886:[[24180]],63887:[[24976]],63888:[[25088]],63889:[[25754]],63890:[[28451]],63891:[[29001]],63892:[[29833]],63893:[[31178]],63894:[[32244]],63895:[[32879]],63896:[[36646]],63897:[[34030]],63898:[[36899]],63899:[[37706]],63900:[[21015]],63901:[[21155]],63902:[[21693]],63903:[[28872]],63904:[[35010]],63905:[[35498]],63906:[[24265]],63907:[[24565]],63908:[[25467]],63909:[[27566]],63910:[[31806]],63911:[[29557]],63912:[[20196]],63913:[[22265]],63914:[[23527]],63915:[[23994]],63916:[[24604]],63917:[[29618]],63918:[[29801]],63919:[[32666]],63920:[[32838]],63921:[[37428]],63922:[[38646]],63923:[[38728]],63924:[[38936]],63925:[[20363]],63926:[[31150]],63927:[[37300]],63928:[[38584]],63929:[[24801]],63930:[[20102]],63931:[[20698]],63932:[[23534]],63933:[[23615]],63934:[[26009]],63935:[[27138]],63936:[[29134]],63937:[[30274]],63938:[[34044]],63939:[[36988]],63940:[[40845]],63941:[[26248]],63942:[[38446]],63943:[[21129]],63944:[[26491]],63945:[[26611]],63946:[[27969]],63947:[[28316]],63948:[[29705]],63949:[[30041]],63950:[[30827]],63951:[[32016]],63952:[[39006]],63953:[[20845]],63954:[[25134]],63955:[[38520]],63956:[[20523]],63957:[[23833]],63958:[[28138]],63959:[[36650]],63960:[[24459]],63961:[[24900]],63962:[[26647]],63963:[[29575]],63964:[[38534]],63965:[[21033]],63966:[[21519]],63967:[[23653]],63968:[[26131]],63969:[[26446]],63970:[[26792]],63971:[[27877]],63972:[[29702]],63973:[[30178]],63974:[[32633]],63975:[[35023]],63976:[[35041]],63977:[[37324]],63978:[[38626]],63979:[[21311]],63980:[[28346]],63981:[[21533]],63982:[[29136]],63983:[[29848]],63984:[[34298]],63985:[[38563]],63986:[[40023]],63987:[[40607]],63988:[[26519]],63989:[[28107]],63990:[[33256]],63991:[[31435]],63992:[[31520]],63993:[[31890]],63994:[[29376]],63995:[[28825]],63996:[[35672]],63997:[[20160]],63998:[[33590]],63999:[[21050]],194816:[[27966]],194817:[[28023]],194818:[[27969]],194819:[[28009]],194820:[[28024]],194821:[[28037]],194822:[[146718]],194823:[[27956]],194824:[[28207]],194825:[[28270]],194826:[[15667]],194827:[[28363]],194828:[[28359]],194829:[[147153]],194830:[[28153]],194831:[[28526]],194832:[[147294]],194833:[[147342]],194834:[[28614]],194835:[[28729]],194836:[[28702]],194837:[[28699]],194838:[[15766]],194839:[[28746]],194840:[[28797]],194841:[[28791]],194842:[[28845]],194843:[[132389]],194844:[[28997]],194845:[[148067]],194846:[[29084]],194847:[[148395]],194848:[[29224]],194849:[[29237]],194850:[[29264]],194851:[[149000]],194852:[[29312]],194853:[[29333]],194854:[[149301]],194855:[[149524]],194856:[[29562]],194857:[[29579]],194858:[[16044]],194859:[[29605]],194860:[[16056]],194861:[[16056]],194862:[[29767]],194863:[[29788]],194864:[[29809]],194865:[[29829]],194866:[[29898]],194867:[[16155]],194868:[[29988]],194869:[[150582]],194870:[[30014]],194871:[[150674]],194872:[[30064]],194873:[[139679]],194874:[[30224]],194875:[[151457]],194876:[[151480]],194877:[[151620]],194878:[[16380]],194879:[[16392]],194880:[[30452]],194881:[[151795]],194882:[[151794]],194883:[[151833]],194884:[[151859]],194885:[[30494]],194886:[[30495]],194887:[[30495]],194888:[[30538]],194889:[[16441]],194890:[[30603]],194891:[[16454]],194892:[[16534]],194893:[[152605]],194894:[[30798]],194895:[[30860]],194896:[[30924]],194897:[[16611]],194898:[[153126]],194899:[[31062]],194900:[[153242]],194901:[[153285]],194902:[[31119]],194903:[[31211]],194904:[[16687]],194905:[[31296]],194906:[[31306]],194907:[[31311]],194908:[[153980]],194909:[[154279]],194910:[[154279]],194911:[[31470]],194912:[[16898]],194913:[[154539]],194914:[[31686]],194915:[[31689]],194916:[[16935]],194917:[[154752]],194918:[[31954]],194919:[[17056]],194920:[[31976]],194921:[[31971]],194922:[[32000]],194923:[[155526]],194924:[[32099]],194925:[[17153]],194926:[[32199]],194927:[[32258]],194928:[[32325]],194929:[[17204]],194930:[[156200]],194931:[[156231]],194932:[[17241]],194933:[[156377]],194934:[[32634]],194935:[[156478]],194936:[[32661]],194937:[[32762]],194938:[[32773]],194939:[[156890]],194940:[[156963]],194941:[[32864]],194942:[[157096]],194943:[[32880]],194944:[[144223]],194945:[[17365]],194946:[[32946]],194947:[[33027]],194948:[[17419]],194949:[[33086]],194950:[[23221]],194951:[[157607]],194952:[[157621]],194953:[[144275]],194954:[[144284]],194955:[[33281]],194956:[[33284]],194957:[[36766]],194958:[[17515]],194959:[[33425]],194960:[[33419]],194961:[[33437]],194962:[[21171]],194963:[[33457]],194964:[[33459]],194965:[[33469]],194966:[[33510]],194967:[[158524]],194968:[[33509]],194969:[[33565]],194970:[[33635]],194971:[[33709]],194972:[[33571]],194973:[[33725]],194974:[[33767]],194975:[[33879]],194976:[[33619]],194977:[[33738]],194978:[[33740]],194979:[[33756]],194980:[[158774]],194981:[[159083]],194982:[[158933]],194983:[[17707]],194984:[[34033]],194985:[[34035]],194986:[[34070]],194987:[[160714]],194988:[[34148]],194989:[[159532]],194990:[[17757]],194991:[[17761]],194992:[[159665]],194993:[[159954]],194994:[[17771]],194995:[[34384]],194996:[[34396]],194997:[[34407]],194998:[[34409]],194999:[[34473]],195000:[[34440]],195001:[[34574]],195002:[[34530]],195003:[[34681]],195004:[[34600]],195005:[[34667]],195006:[[34694]],195007:[[17879]],195008:[[34785]],195009:[[34817]],195010:[[17913]],195011:[[34912]],195012:[[34915]],195013:[[161383]],195014:[[35031]],195015:[[35038]],195016:[[17973]],195017:[[35066]],195018:[[13499]],195019:[[161966]],195020:[[162150]],195021:[[18110]],195022:[[18119]],195023:[[35488]],195024:[[35565]],195025:[[35722]],195026:[[35925]],195027:[[162984]],195028:[[36011]],195029:[[36033]],195030:[[36123]],195031:[[36215]],195032:[[163631]],195033:[[133124]],195034:[[36299]],195035:[[36284]],195036:[[36336]],195037:[[133342]],195038:[[36564]],195039:[[36664]],195040:[[165330]],195041:[[165357]],195042:[[37012]],195043:[[37105]],195044:[[37137]],195045:[[165678]],195046:[[37147]],195047:[[37432]],195048:[[37591]],195049:[[37592]],195050:[[37500]],195051:[[37881]],195052:[[37909]],195053:[[166906]],195054:[[38283]],195055:[[18837]],195056:[[38327]],195057:[[167287]],195058:[[18918]],195059:[[38595]],195060:[[23986]],195061:[[38691]],195062:[[168261]],195063:[[168474]],195064:[[19054]],195065:[[19062]],195066:[[38880]],195067:[[168970]],195068:[[19122]],195069:[[169110]],195070:[[38923]],195071:[[38923]]},\n64000:{64000:[[20999]],64001:[[24230]],64002:[[25299]],64003:[[31958]],64004:[[23429]],64005:[[27934]],64006:[[26292]],64007:[[36667]],64008:[[34892]],64009:[[38477]],64010:[[35211]],64011:[[24275]],64012:[[20800]],64013:[[21952]],64016:[[22618]],64018:[[26228]],64021:[[20958]],64022:[[29482]],64023:[[30410]],64024:[[31036]],64025:[[31070]],64026:[[31077]],64027:[[31119]],64028:[[38742]],64029:[[31934]],64030:[[32701]],64032:[[34322]],64034:[[35576]],64037:[[36920]],64038:[[37117]],64042:[[39151]],64043:[[39164]],64044:[[39208]],64045:[[40372]],64046:[[37086]],64047:[[38583]],64048:[[20398]],64049:[[20711]],64050:[[20813]],64051:[[21193]],64052:[[21220]],64053:[[21329]],64054:[[21917]],64055:[[22022]],64056:[[22120]],64057:[[22592]],64058:[[22696]],64059:[[23652]],64060:[[23662]],64061:[[24724]],64062:[[24936]],64063:[[24974]],64064:[[25074]],64065:[[25935]],64066:[[26082]],64067:[[26257]],64068:[[26757]],64069:[[28023]],64070:[[28186]],64071:[[28450]],64072:[[29038]],64073:[[29227]],64074:[[29730]],64075:[[30865]],64076:[[31038]],64077:[[31049]],64078:[[31048]],64079:[[31056]],64080:[[31062]],64081:[[31069]],64082:[[31117]],64083:[[31118]],64084:[[31296]],64085:[[31361]],64086:[[31680]],64087:[[32244]],64088:[[32265]],64089:[[32321]],64090:[[32626]],64091:[[32773]],64092:[[33261]],64093:[[33401]],64094:[[33401]],64095:[[33879]],64096:[[35088]],64097:[[35222]],64098:[[35585]],64099:[[35641]],64100:[[36051]],64101:[[36104]],64102:[[36790]],64103:[[36920]],64104:[[38627]],64105:[[38911]],64106:[[38971]],64107:[[24693]],64108:[[148206]],64109:[[33304]],64112:[[20006]],64113:[[20917]],64114:[[20840]],64115:[[20352]],64116:[[20805]],64117:[[20864]],64118:[[21191]],64119:[[21242]],64120:[[21917]],64121:[[21845]],64122:[[21913]],64123:[[21986]],64124:[[22618]],64125:[[22707]],64126:[[22852]],64127:[[22868]],64128:[[23138]],64129:[[23336]],64130:[[24274]],64131:[[24281]],64132:[[24425]],64133:[[24493]],64134:[[24792]],64135:[[24910]],64136:[[24840]],64137:[[24974]],64138:[[24928]],64139:[[25074]],64140:[[25140]],64141:[[25540]],64142:[[25628]],64143:[[25682]],64144:[[25942]],64145:[[26228]],64146:[[26391]],64147:[[26395]],64148:[[26454]],64149:[[27513]],64150:[[27578]],64151:[[27969]],64152:[[28379]],64153:[[28363]],64154:[[28450]],64155:[[28702]],64156:[[29038]],64157:[[30631]],64158:[[29237]],64159:[[29359]],64160:[[29482]],64161:[[29809]],64162:[[29958]],64163:[[30011]],64164:[[30237]],64165:[[30239]],64166:[[30410]],64167:[[30427]],64168:[[30452]],64169:[[30538]],64170:[[30528]],64171:[[30924]],64172:[[31409]],64173:[[31680]],64174:[[31867]],64175:[[32091]],64176:[[32244]],64177:[[32574]],64178:[[32773]],64179:[[33618]],64180:[[33775]],64181:[[34681]],64182:[[35137]],64183:[[35206]],64184:[[35222]],64185:[[35519]],64186:[[35576]],64187:[[35531]],64188:[[35585]],64189:[[35582]],64190:[[35565]],64191:[[35641]],64192:[[35722]],64193:[[36104]],64194:[[36664]],64195:[[36978]],64196:[[37273]],64197:[[37494]],64198:[[38524]],64199:[[38627]],64200:[[38742]],64201:[[38875]],64202:[[38911]],64203:[[38923]],64204:[[38971]],64205:[[39698]],64206:[[40860]],64207:[[141386]],64208:[[141380]],64209:[[144341]],64210:[[15261]],64211:[[16408]],64212:[[16441]],64213:[[152137]],64214:[[154832]],64215:[[163539]],64216:[[40771]],64217:[[40846]],195072:[[38953]],195073:[[169398]],195074:[[39138]],195075:[[19251]],195076:[[39209]],195077:[[39335]],195078:[[39362]],195079:[[39422]],195080:[[19406]],195081:[[170800]],195082:[[39698]],195083:[[40000]],195084:[[40189]],195085:[[19662]],195086:[[19693]],195087:[[40295]],195088:[[172238]],195089:[[19704]],195090:[[172293]],195091:[[172558]],195092:[[172689]],195093:[[40635]],195094:[[19798]],195095:[[40697]],195096:[[40702]],195097:[[40709]],195098:[[40719]],195099:[[40726]],195100:[[40763]],195101:[[173568]]},\n64256:{64256:[[102,102],256],64257:[[102,105],256],64258:[[102,108],256],64259:[[102,102,105],256],64260:[[102,102,108],256],64261:[[383,116],256],64262:[[115,116],256],64275:[[1396,1398],256],64276:[[1396,1381],256],64277:[[1396,1387],256],64278:[[1406,1398],256],64279:[[1396,1389],256],64285:[[1497,1460],512],64286:[,26],64287:[[1522,1463],512],64288:[[1506],256],64289:[[1488],256],64290:[[1491],256],64291:[[1492],256],64292:[[1499],256],64293:[[1500],256],64294:[[1501],256],64295:[[1512],256],64296:[[1514],256],64297:[[43],256],64298:[[1513,1473],512],64299:[[1513,1474],512],64300:[[64329,1473],512],64301:[[64329,1474],512],64302:[[1488,1463],512],64303:[[1488,1464],512],64304:[[1488,1468],512],64305:[[1489,1468],512],64306:[[1490,1468],512],64307:[[1491,1468],512],64308:[[1492,1468],512],64309:[[1493,1468],512],64310:[[1494,1468],512],64312:[[1496,1468],512],64313:[[1497,1468],512],64314:[[1498,1468],512],64315:[[1499,1468],512],64316:[[1500,1468],512],64318:[[1502,1468],512],64320:[[1504,1468],512],64321:[[1505,1468],512],64323:[[1507,1468],512],64324:[[1508,1468],512],64326:[[1510,1468],512],64327:[[1511,1468],512],64328:[[1512,1468],512],64329:[[1513,1468],512],64330:[[1514,1468],512],64331:[[1493,1465],512],64332:[[1489,1471],512],64333:[[1499,1471],512],64334:[[1508,1471],512],64335:[[1488,1500],256],64336:[[1649],256],64337:[[1649],256],64338:[[1659],256],64339:[[1659],256],64340:[[1659],256],64341:[[1659],256],64342:[[1662],256],64343:[[1662],256],64344:[[1662],256],64345:[[1662],256],64346:[[1664],256],64347:[[1664],256],64348:[[1664],256],64349:[[1664],256],64350:[[1658],256],64351:[[1658],256],64352:[[1658],256],64353:[[1658],256],64354:[[1663],256],64355:[[1663],256],64356:[[1663],256],64357:[[1663],256],64358:[[1657],256],64359:[[1657],256],64360:[[1657],256],64361:[[1657],256],64362:[[1700],256],64363:[[1700],256],64364:[[1700],256],64365:[[1700],256],64366:[[1702],256],64367:[[1702],256],64368:[[1702],256],64369:[[1702],256],64370:[[1668],256],64371:[[1668],256],64372:[[1668],256],64373:[[1668],256],64374:[[1667],256],64375:[[1667],256],64376:[[1667],256],64377:[[1667],256],64378:[[1670],256],64379:[[1670],256],64380:[[1670],256],64381:[[1670],256],64382:[[1671],256],64383:[[1671],256],64384:[[1671],256],64385:[[1671],256],64386:[[1677],256],64387:[[1677],256],64388:[[1676],256],64389:[[1676],256],64390:[[1678],256],64391:[[1678],256],64392:[[1672],256],64393:[[1672],256],64394:[[1688],256],64395:[[1688],256],64396:[[1681],256],64397:[[1681],256],64398:[[1705],256],64399:[[1705],256],64400:[[1705],256],64401:[[1705],256],64402:[[1711],256],64403:[[1711],256],64404:[[1711],256],64405:[[1711],256],64406:[[1715],256],64407:[[1715],256],64408:[[1715],256],64409:[[1715],256],64410:[[1713],256],64411:[[1713],256],64412:[[1713],256],64413:[[1713],256],64414:[[1722],256],64415:[[1722],256],64416:[[1723],256],64417:[[1723],256],64418:[[1723],256],64419:[[1723],256],64420:[[1728],256],64421:[[1728],256],64422:[[1729],256],64423:[[1729],256],64424:[[1729],256],64425:[[1729],256],64426:[[1726],256],64427:[[1726],256],64428:[[1726],256],64429:[[1726],256],64430:[[1746],256],64431:[[1746],256],64432:[[1747],256],64433:[[1747],256],64467:[[1709],256],64468:[[1709],256],64469:[[1709],256],64470:[[1709],256],64471:[[1735],256],64472:[[1735],256],64473:[[1734],256],64474:[[1734],256],64475:[[1736],256],64476:[[1736],256],64477:[[1655],256],64478:[[1739],256],64479:[[1739],256],64480:[[1733],256],64481:[[1733],256],64482:[[1737],256],64483:[[1737],256],64484:[[1744],256],64485:[[1744],256],64486:[[1744],256],64487:[[1744],256],64488:[[1609],256],64489:[[1609],256],64490:[[1574,1575],256],64491:[[1574,1575],256],64492:[[1574,1749],256],64493:[[1574,1749],256],64494:[[1574,1608],256],64495:[[1574,1608],256],64496:[[1574,1735],256],64497:[[1574,1735],256],64498:[[1574,1734],256],64499:[[1574,1734],256],64500:[[1574,1736],256],64501:[[1574,1736],256],64502:[[1574,1744],256],64503:[[1574,1744],256],64504:[[1574,1744],256],64505:[[1574,1609],256],64506:[[1574,1609],256],64507:[[1574,1609],256],64508:[[1740],256],64509:[[1740],256],64510:[[1740],256],64511:[[1740],256]},\n64512:{64512:[[1574,1580],256],64513:[[1574,1581],256],64514:[[1574,1605],256],64515:[[1574,1609],256],64516:[[1574,1610],256],64517:[[1576,1580],256],64518:[[1576,1581],256],64519:[[1576,1582],256],64520:[[1576,1605],256],64521:[[1576,1609],256],64522:[[1576,1610],256],64523:[[1578,1580],256],64524:[[1578,1581],256],64525:[[1578,1582],256],64526:[[1578,1605],256],64527:[[1578,1609],256],64528:[[1578,1610],256],64529:[[1579,1580],256],64530:[[1579,1605],256],64531:[[1579,1609],256],64532:[[1579,1610],256],64533:[[1580,1581],256],64534:[[1580,1605],256],64535:[[1581,1580],256],64536:[[1581,1605],256],64537:[[1582,1580],256],64538:[[1582,1581],256],64539:[[1582,1605],256],64540:[[1587,1580],256],64541:[[1587,1581],256],64542:[[1587,1582],256],64543:[[1587,1605],256],64544:[[1589,1581],256],64545:[[1589,1605],256],64546:[[1590,1580],256],64547:[[1590,1581],256],64548:[[1590,1582],256],64549:[[1590,1605],256],64550:[[1591,1581],256],64551:[[1591,1605],256],64552:[[1592,1605],256],64553:[[1593,1580],256],64554:[[1593,1605],256],64555:[[1594,1580],256],64556:[[1594,1605],256],64557:[[1601,1580],256],64558:[[1601,1581],256],64559:[[1601,1582],256],64560:[[1601,1605],256],64561:[[1601,1609],256],64562:[[1601,1610],256],64563:[[1602,1581],256],64564:[[1602,1605],256],64565:[[1602,1609],256],64566:[[1602,1610],256],64567:[[1603,1575],256],64568:[[1603,1580],256],64569:[[1603,1581],256],64570:[[1603,1582],256],64571:[[1603,1604],256],64572:[[1603,1605],256],64573:[[1603,1609],256],64574:[[1603,1610],256],64575:[[1604,1580],256],64576:[[1604,1581],256],64577:[[1604,1582],256],64578:[[1604,1605],256],64579:[[1604,1609],256],64580:[[1604,1610],256],64581:[[1605,1580],256],64582:[[1605,1581],256],64583:[[1605,1582],256],64584:[[1605,1605],256],64585:[[1605,1609],256],64586:[[1605,1610],256],64587:[[1606,1580],256],64588:[[1606,1581],256],64589:[[1606,1582],256],64590:[[1606,1605],256],64591:[[1606,1609],256],64592:[[1606,1610],256],64593:[[1607,1580],256],64594:[[1607,1605],256],64595:[[1607,1609],256],64596:[[1607,1610],256],64597:[[1610,1580],256],64598:[[1610,1581],256],64599:[[1610,1582],256],64600:[[1610,1605],256],64601:[[1610,1609],256],64602:[[1610,1610],256],64603:[[1584,1648],256],64604:[[1585,1648],256],64605:[[1609,1648],256],64606:[[32,1612,1617],256],64607:[[32,1613,1617],256],64608:[[32,1614,1617],256],64609:[[32,1615,1617],256],64610:[[32,1616,1617],256],64611:[[32,1617,1648],256],64612:[[1574,1585],256],64613:[[1574,1586],256],64614:[[1574,1605],256],64615:[[1574,1606],256],64616:[[1574,1609],256],64617:[[1574,1610],256],64618:[[1576,1585],256],64619:[[1576,1586],256],64620:[[1576,1605],256],64621:[[1576,1606],256],64622:[[1576,1609],256],64623:[[1576,1610],256],64624:[[1578,1585],256],64625:[[1578,1586],256],64626:[[1578,1605],256],64627:[[1578,1606],256],64628:[[1578,1609],256],64629:[[1578,1610],256],64630:[[1579,1585],256],64631:[[1579,1586],256],64632:[[1579,1605],256],64633:[[1579,1606],256],64634:[[1579,1609],256],64635:[[1579,1610],256],64636:[[1601,1609],256],64637:[[1601,1610],256],64638:[[1602,1609],256],64639:[[1602,1610],256],64640:[[1603,1575],256],64641:[[1603,1604],256],64642:[[1603,1605],256],64643:[[1603,1609],256],64644:[[1603,1610],256],64645:[[1604,1605],256],64646:[[1604,1609],256],64647:[[1604,1610],256],64648:[[1605,1575],256],64649:[[1605,1605],256],64650:[[1606,1585],256],64651:[[1606,1586],256],64652:[[1606,1605],256],64653:[[1606,1606],256],64654:[[1606,1609],256],64655:[[1606,1610],256],64656:[[1609,1648],256],64657:[[1610,1585],256],64658:[[1610,1586],256],64659:[[1610,1605],256],64660:[[1610,1606],256],64661:[[1610,1609],256],64662:[[1610,1610],256],64663:[[1574,1580],256],64664:[[1574,1581],256],64665:[[1574,1582],256],64666:[[1574,1605],256],64667:[[1574,1607],256],64668:[[1576,1580],256],64669:[[1576,1581],256],64670:[[1576,1582],256],64671:[[1576,1605],256],64672:[[1576,1607],256],64673:[[1578,1580],256],64674:[[1578,1581],256],64675:[[1578,1582],256],64676:[[1578,1605],256],64677:[[1578,1607],256],64678:[[1579,1605],256],64679:[[1580,1581],256],64680:[[1580,1605],256],64681:[[1581,1580],256],64682:[[1581,1605],256],64683:[[1582,1580],256],64684:[[1582,1605],256],64685:[[1587,1580],256],64686:[[1587,1581],256],64687:[[1587,1582],256],64688:[[1587,1605],256],64689:[[1589,1581],256],64690:[[1589,1582],256],64691:[[1589,1605],256],64692:[[1590,1580],256],64693:[[1590,1581],256],64694:[[1590,1582],256],64695:[[1590,1605],256],64696:[[1591,1581],256],64697:[[1592,1605],256],64698:[[1593,1580],256],64699:[[1593,1605],256],64700:[[1594,1580],256],64701:[[1594,1605],256],64702:[[1601,1580],256],64703:[[1601,1581],256],64704:[[1601,1582],256],64705:[[1601,1605],256],64706:[[1602,1581],256],64707:[[1602,1605],256],64708:[[1603,1580],256],64709:[[1603,1581],256],64710:[[1603,1582],256],64711:[[1603,1604],256],64712:[[1603,1605],256],64713:[[1604,1580],256],64714:[[1604,1581],256],64715:[[1604,1582],256],64716:[[1604,1605],256],64717:[[1604,1607],256],64718:[[1605,1580],256],64719:[[1605,1581],256],64720:[[1605,1582],256],64721:[[1605,1605],256],64722:[[1606,1580],256],64723:[[1606,1581],256],64724:[[1606,1582],256],64725:[[1606,1605],256],64726:[[1606,1607],256],64727:[[1607,1580],256],64728:[[1607,1605],256],64729:[[1607,1648],256],64730:[[1610,1580],256],64731:[[1610,1581],256],64732:[[1610,1582],256],64733:[[1610,1605],256],64734:[[1610,1607],256],64735:[[1574,1605],256],64736:[[1574,1607],256],64737:[[1576,1605],256],64738:[[1576,1607],256],64739:[[1578,1605],256],64740:[[1578,1607],256],64741:[[1579,1605],256],64742:[[1579,1607],256],64743:[[1587,1605],256],64744:[[1587,1607],256],64745:[[1588,1605],256],64746:[[1588,1607],256],64747:[[1603,1604],256],64748:[[1603,1605],256],64749:[[1604,1605],256],64750:[[1606,1605],256],64751:[[1606,1607],256],64752:[[1610,1605],256],64753:[[1610,1607],256],64754:[[1600,1614,1617],256],64755:[[1600,1615,1617],256],64756:[[1600,1616,1617],256],64757:[[1591,1609],256],64758:[[1591,1610],256],64759:[[1593,1609],256],64760:[[1593,1610],256],64761:[[1594,1609],256],64762:[[1594,1610],256],64763:[[1587,1609],256],64764:[[1587,1610],256],64765:[[1588,1609],256],64766:[[1588,1610],256],64767:[[1581,1609],256]},\n64768:{64768:[[1581,1610],256],64769:[[1580,1609],256],64770:[[1580,1610],256],64771:[[1582,1609],256],64772:[[1582,1610],256],64773:[[1589,1609],256],64774:[[1589,1610],256],64775:[[1590,1609],256],64776:[[1590,1610],256],64777:[[1588,1580],256],64778:[[1588,1581],256],64779:[[1588,1582],256],64780:[[1588,1605],256],64781:[[1588,1585],256],64782:[[1587,1585],256],64783:[[1589,1585],256],64784:[[1590,1585],256],64785:[[1591,1609],256],64786:[[1591,1610],256],64787:[[1593,1609],256],64788:[[1593,1610],256],64789:[[1594,1609],256],64790:[[1594,1610],256],64791:[[1587,1609],256],64792:[[1587,1610],256],64793:[[1588,1609],256],64794:[[1588,1610],256],64795:[[1581,1609],256],64796:[[1581,1610],256],64797:[[1580,1609],256],64798:[[1580,1610],256],64799:[[1582,1609],256],64800:[[1582,1610],256],64801:[[1589,1609],256],64802:[[1589,1610],256],64803:[[1590,1609],256],64804:[[1590,1610],256],64805:[[1588,1580],256],64806:[[1588,1581],256],64807:[[1588,1582],256],64808:[[1588,1605],256],64809:[[1588,1585],256],64810:[[1587,1585],256],64811:[[1589,1585],256],64812:[[1590,1585],256],64813:[[1588,1580],256],64814:[[1588,1581],256],64815:[[1588,1582],256],64816:[[1588,1605],256],64817:[[1587,1607],256],64818:[[1588,1607],256],64819:[[1591,1605],256],64820:[[1587,1580],256],64821:[[1587,1581],256],64822:[[1587,1582],256],64823:[[1588,1580],256],64824:[[1588,1581],256],64825:[[1588,1582],256],64826:[[1591,1605],256],64827:[[1592,1605],256],64828:[[1575,1611],256],64829:[[1575,1611],256],64848:[[1578,1580,1605],256],64849:[[1578,1581,1580],256],64850:[[1578,1581,1580],256],64851:[[1578,1581,1605],256],64852:[[1578,1582,1605],256],64853:[[1578,1605,1580],256],64854:[[1578,1605,1581],256],64855:[[1578,1605,1582],256],64856:[[1580,1605,1581],256],64857:[[1580,1605,1581],256],64858:[[1581,1605,1610],256],64859:[[1581,1605,1609],256],64860:[[1587,1581,1580],256],64861:[[1587,1580,1581],256],64862:[[1587,1580,1609],256],64863:[[1587,1605,1581],256],64864:[[1587,1605,1581],256],64865:[[1587,1605,1580],256],64866:[[1587,1605,1605],256],64867:[[1587,1605,1605],256],64868:[[1589,1581,1581],256],64869:[[1589,1581,1581],256],64870:[[1589,1605,1605],256],64871:[[1588,1581,1605],256],64872:[[1588,1581,1605],256],64873:[[1588,1580,1610],256],64874:[[1588,1605,1582],256],64875:[[1588,1605,1582],256],64876:[[1588,1605,1605],256],64877:[[1588,1605,1605],256],64878:[[1590,1581,1609],256],64879:[[1590,1582,1605],256],64880:[[1590,1582,1605],256],64881:[[1591,1605,1581],256],64882:[[1591,1605,1581],256],64883:[[1591,1605,1605],256],64884:[[1591,1605,1610],256],64885:[[1593,1580,1605],256],64886:[[1593,1605,1605],256],64887:[[1593,1605,1605],256],64888:[[1593,1605,1609],256],64889:[[1594,1605,1605],256],64890:[[1594,1605,1610],256],64891:[[1594,1605,1609],256],64892:[[1601,1582,1605],256],64893:[[1601,1582,1605],256],64894:[[1602,1605,1581],256],64895:[[1602,1605,1605],256],64896:[[1604,1581,1605],256],64897:[[1604,1581,1610],256],64898:[[1604,1581,1609],256],64899:[[1604,1580,1580],256],64900:[[1604,1580,1580],256],64901:[[1604,1582,1605],256],64902:[[1604,1582,1605],256],64903:[[1604,1605,1581],256],64904:[[1604,1605,1581],256],64905:[[1605,1581,1580],256],64906:[[1605,1581,1605],256],64907:[[1605,1581,1610],256],64908:[[1605,1580,1581],256],64909:[[1605,1580,1605],256],64910:[[1605,1582,1580],256],64911:[[1605,1582,1605],256],64914:[[1605,1580,1582],256],64915:[[1607,1605,1580],256],64916:[[1607,1605,1605],256],64917:[[1606,1581,1605],256],64918:[[1606,1581,1609],256],64919:[[1606,1580,1605],256],64920:[[1606,1580,1605],256],64921:[[1606,1580,1609],256],64922:[[1606,1605,1610],256],64923:[[1606,1605,1609],256],64924:[[1610,1605,1605],256],64925:[[1610,1605,1605],256],64926:[[1576,1582,1610],256],64927:[[1578,1580,1610],256],64928:[[1578,1580,1609],256],64929:[[1578,1582,1610],256],64930:[[1578,1582,1609],256],64931:[[1578,1605,1610],256],64932:[[1578,1605,1609],256],64933:[[1580,1605,1610],256],64934:[[1580,1581,1609],256],64935:[[1580,1605,1609],256],64936:[[1587,1582,1609],256],64937:[[1589,1581,1610],256],64938:[[1588,1581,1610],256],64939:[[1590,1581,1610],256],64940:[[1604,1580,1610],256],64941:[[1604,1605,1610],256],64942:[[1610,1581,1610],256],64943:[[1610,1580,1610],256],64944:[[1610,1605,1610],256],64945:[[1605,1605,1610],256],64946:[[1602,1605,1610],256],64947:[[1606,1581,1610],256],64948:[[1602,1605,1581],256],64949:[[1604,1581,1605],256],64950:[[1593,1605,1610],256],64951:[[1603,1605,1610],256],64952:[[1606,1580,1581],256],64953:[[1605,1582,1610],256],64954:[[1604,1580,1605],256],64955:[[1603,1605,1605],256],64956:[[1604,1580,1605],256],64957:[[1606,1580,1581],256],64958:[[1580,1581,1610],256],64959:[[1581,1580,1610],256],64960:[[1605,1580,1610],256],64961:[[1601,1605,1610],256],64962:[[1576,1581,1610],256],64963:[[1603,1605,1605],256],64964:[[1593,1580,1605],256],64965:[[1589,1605,1605],256],64966:[[1587,1582,1610],256],64967:[[1606,1580,1610],256],65008:[[1589,1604,1746],256],65009:[[1602,1604,1746],256],65010:[[1575,1604,1604,1607],256],65011:[[1575,1603,1576,1585],256],65012:[[1605,1581,1605,1583],256],65013:[[1589,1604,1593,1605],256],65014:[[1585,1587,1608,1604],256],65015:[[1593,1604,1610,1607],256],65016:[[1608,1587,1604,1605],256],65017:[[1589,1604,1609],256],65018:[[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605],256],65019:[[1580,1604,32,1580,1604,1575,1604,1607],256],65020:[[1585,1740,1575,1604],256]},\n65024:{65040:[[44],256],65041:[[12289],256],65042:[[12290],256],65043:[[58],256],65044:[[59],256],65045:[[33],256],65046:[[63],256],65047:[[12310],256],65048:[[12311],256],65049:[[8230],256],65056:[,230],65057:[,230],65058:[,230],65059:[,230],65060:[,230],65061:[,230],65062:[,230],65063:[,220],65064:[,220],65065:[,220],65066:[,220],65067:[,220],65068:[,220],65069:[,220],65072:[[8229],256],65073:[[8212],256],65074:[[8211],256],65075:[[95],256],65076:[[95],256],65077:[[40],256],65078:[[41],256],65079:[[123],256],65080:[[125],256],65081:[[12308],256],65082:[[12309],256],65083:[[12304],256],65084:[[12305],256],65085:[[12298],256],65086:[[12299],256],65087:[[12296],256],65088:[[12297],256],65089:[[12300],256],65090:[[12301],256],65091:[[12302],256],65092:[[12303],256],65095:[[91],256],65096:[[93],256],65097:[[8254],256],65098:[[8254],256],65099:[[8254],256],65100:[[8254],256],65101:[[95],256],65102:[[95],256],65103:[[95],256],65104:[[44],256],65105:[[12289],256],65106:[[46],256],65108:[[59],256],65109:[[58],256],65110:[[63],256],65111:[[33],256],65112:[[8212],256],65113:[[40],256],65114:[[41],256],65115:[[123],256],65116:[[125],256],65117:[[12308],256],65118:[[12309],256],65119:[[35],256],65120:[[38],256],65121:[[42],256],65122:[[43],256],65123:[[45],256],65124:[[60],256],65125:[[62],256],65126:[[61],256],65128:[[92],256],65129:[[36],256],65130:[[37],256],65131:[[64],256],65136:[[32,1611],256],65137:[[1600,1611],256],65138:[[32,1612],256],65140:[[32,1613],256],65142:[[32,1614],256],65143:[[1600,1614],256],65144:[[32,1615],256],65145:[[1600,1615],256],65146:[[32,1616],256],65147:[[1600,1616],256],65148:[[32,1617],256],65149:[[1600,1617],256],65150:[[32,1618],256],65151:[[1600,1618],256],65152:[[1569],256],65153:[[1570],256],65154:[[1570],256],65155:[[1571],256],65156:[[1571],256],65157:[[1572],256],65158:[[1572],256],65159:[[1573],256],65160:[[1573],256],65161:[[1574],256],65162:[[1574],256],65163:[[1574],256],65164:[[1574],256],65165:[[1575],256],65166:[[1575],256],65167:[[1576],256],65168:[[1576],256],65169:[[1576],256],65170:[[1576],256],65171:[[1577],256],65172:[[1577],256],65173:[[1578],256],65174:[[1578],256],65175:[[1578],256],65176:[[1578],256],65177:[[1579],256],65178:[[1579],256],65179:[[1579],256],65180:[[1579],256],65181:[[1580],256],65182:[[1580],256],65183:[[1580],256],65184:[[1580],256],65185:[[1581],256],65186:[[1581],256],65187:[[1581],256],65188:[[1581],256],65189:[[1582],256],65190:[[1582],256],65191:[[1582],256],65192:[[1582],256],65193:[[1583],256],65194:[[1583],256],65195:[[1584],256],65196:[[1584],256],65197:[[1585],256],65198:[[1585],256],65199:[[1586],256],65200:[[1586],256],65201:[[1587],256],65202:[[1587],256],65203:[[1587],256],65204:[[1587],256],65205:[[1588],256],65206:[[1588],256],65207:[[1588],256],65208:[[1588],256],65209:[[1589],256],65210:[[1589],256],65211:[[1589],256],65212:[[1589],256],65213:[[1590],256],65214:[[1590],256],65215:[[1590],256],65216:[[1590],256],65217:[[1591],256],65218:[[1591],256],65219:[[1591],256],65220:[[1591],256],65221:[[1592],256],65222:[[1592],256],65223:[[1592],256],65224:[[1592],256],65225:[[1593],256],65226:[[1593],256],65227:[[1593],256],65228:[[1593],256],65229:[[1594],256],65230:[[1594],256],65231:[[1594],256],65232:[[1594],256],65233:[[1601],256],65234:[[1601],256],65235:[[1601],256],65236:[[1601],256],65237:[[1602],256],65238:[[1602],256],65239:[[1602],256],65240:[[1602],256],65241:[[1603],256],65242:[[1603],256],65243:[[1603],256],65244:[[1603],256],65245:[[1604],256],65246:[[1604],256],65247:[[1604],256],65248:[[1604],256],65249:[[1605],256],65250:[[1605],256],65251:[[1605],256],65252:[[1605],256],65253:[[1606],256],65254:[[1606],256],65255:[[1606],256],65256:[[1606],256],65257:[[1607],256],65258:[[1607],256],65259:[[1607],256],65260:[[1607],256],65261:[[1608],256],65262:[[1608],256],65263:[[1609],256],65264:[[1609],256],65265:[[1610],256],65266:[[1610],256],65267:[[1610],256],65268:[[1610],256],65269:[[1604,1570],256],65270:[[1604,1570],256],65271:[[1604,1571],256],65272:[[1604,1571],256],65273:[[1604,1573],256],65274:[[1604,1573],256],65275:[[1604,1575],256],65276:[[1604,1575],256]},\n65280:{65281:[[33],256],65282:[[34],256],65283:[[35],256],65284:[[36],256],65285:[[37],256],65286:[[38],256],65287:[[39],256],65288:[[40],256],65289:[[41],256],65290:[[42],256],65291:[[43],256],65292:[[44],256],65293:[[45],256],65294:[[46],256],65295:[[47],256],65296:[[48],256],65297:[[49],256],65298:[[50],256],65299:[[51],256],65300:[[52],256],65301:[[53],256],65302:[[54],256],65303:[[55],256],65304:[[56],256],65305:[[57],256],65306:[[58],256],65307:[[59],256],65308:[[60],256],65309:[[61],256],65310:[[62],256],65311:[[63],256],65312:[[64],256],65313:[[65],256],65314:[[66],256],65315:[[67],256],65316:[[68],256],65317:[[69],256],65318:[[70],256],65319:[[71],256],65320:[[72],256],65321:[[73],256],65322:[[74],256],65323:[[75],256],65324:[[76],256],65325:[[77],256],65326:[[78],256],65327:[[79],256],65328:[[80],256],65329:[[81],256],65330:[[82],256],65331:[[83],256],65332:[[84],256],65333:[[85],256],65334:[[86],256],65335:[[87],256],65336:[[88],256],65337:[[89],256],65338:[[90],256],65339:[[91],256],65340:[[92],256],65341:[[93],256],65342:[[94],256],65343:[[95],256],65344:[[96],256],65345:[[97],256],65346:[[98],256],65347:[[99],256],65348:[[100],256],65349:[[101],256],65350:[[102],256],65351:[[103],256],65352:[[104],256],65353:[[105],256],65354:[[106],256],65355:[[107],256],65356:[[108],256],65357:[[109],256],65358:[[110],256],65359:[[111],256],65360:[[112],256],65361:[[113],256],65362:[[114],256],65363:[[115],256],65364:[[116],256],65365:[[117],256],65366:[[118],256],65367:[[119],256],65368:[[120],256],65369:[[121],256],65370:[[122],256],65371:[[123],256],65372:[[124],256],65373:[[125],256],65374:[[126],256],65375:[[10629],256],65376:[[10630],256],65377:[[12290],256],65378:[[12300],256],65379:[[12301],256],65380:[[12289],256],65381:[[12539],256],65382:[[12530],256],65383:[[12449],256],65384:[[12451],256],65385:[[12453],256],65386:[[12455],256],65387:[[12457],256],65388:[[12515],256],65389:[[12517],256],65390:[[12519],256],65391:[[12483],256],65392:[[12540],256],65393:[[12450],256],65394:[[12452],256],65395:[[12454],256],65396:[[12456],256],65397:[[12458],256],65398:[[12459],256],65399:[[12461],256],65400:[[12463],256],65401:[[12465],256],65402:[[12467],256],65403:[[12469],256],65404:[[12471],256],65405:[[12473],256],65406:[[12475],256],65407:[[12477],256],65408:[[12479],256],65409:[[12481],256],65410:[[12484],256],65411:[[12486],256],65412:[[12488],256],65413:[[12490],256],65414:[[12491],256],65415:[[12492],256],65416:[[12493],256],65417:[[12494],256],65418:[[12495],256],65419:[[12498],256],65420:[[12501],256],65421:[[12504],256],65422:[[12507],256],65423:[[12510],256],65424:[[12511],256],65425:[[12512],256],65426:[[12513],256],65427:[[12514],256],65428:[[12516],256],65429:[[12518],256],65430:[[12520],256],65431:[[12521],256],65432:[[12522],256],65433:[[12523],256],65434:[[12524],256],65435:[[12525],256],65436:[[12527],256],65437:[[12531],256],65438:[[12441],256],65439:[[12442],256],65440:[[12644],256],65441:[[12593],256],65442:[[12594],256],65443:[[12595],256],65444:[[12596],256],65445:[[12597],256],65446:[[12598],256],65447:[[12599],256],65448:[[12600],256],65449:[[12601],256],65450:[[12602],256],65451:[[12603],256],65452:[[12604],256],65453:[[12605],256],65454:[[12606],256],65455:[[12607],256],65456:[[12608],256],65457:[[12609],256],65458:[[12610],256],65459:[[12611],256],65460:[[12612],256],65461:[[12613],256],65462:[[12614],256],65463:[[12615],256],65464:[[12616],256],65465:[[12617],256],65466:[[12618],256],65467:[[12619],256],65468:[[12620],256],65469:[[12621],256],65470:[[12622],256],65474:[[12623],256],65475:[[12624],256],65476:[[12625],256],65477:[[12626],256],65478:[[12627],256],65479:[[12628],256],65482:[[12629],256],65483:[[12630],256],65484:[[12631],256],65485:[[12632],256],65486:[[12633],256],65487:[[12634],256],65490:[[12635],256],65491:[[12636],256],65492:[[12637],256],65493:[[12638],256],65494:[[12639],256],65495:[[12640],256],65498:[[12641],256],65499:[[12642],256],65500:[[12643],256],65504:[[162],256],65505:[[163],256],65506:[[172],256],65507:[[175],256],65508:[[166],256],65509:[[165],256],65510:[[8361],256],65512:[[9474],256],65513:[[8592],256],65514:[[8593],256],65515:[[8594],256],65516:[[8595],256],65517:[[9632],256],65518:[[9675],256]}\n\n};\n\n   /***** Module to export */\n   var unorm = {\n      nfc: nfc,\n      nfd: nfd,\n      nfkc: nfkc,\n      nfkd: nfkd\n   };\n\n   /*globals module:true,define:true*/\n\n   // CommonJS\n   if (typeof module === \"object\") {\n      module.exports = unorm;\n\n   // AMD\n   } else if (typeof define === \"function\" && define.amd) {\n      define(\"unorm\", function () {\n         return unorm;\n      });\n\n   // Global\n   } else {\n      root.unorm = unorm;\n   }\n\n   /***** Export as shim for String::normalize method *****/\n   /*\n      http://wiki.ecmascript.org/doku.php?id=harmony:specification_drafts#november_8_2013_draft_rev_21\n\n      21.1.3.12 String.prototype.normalize(form=\"NFC\")\n      When the normalize method is called with one argument form, the following steps are taken:\n\n      1. Let O be CheckObjectCoercible(this value).\n      2. Let S be ToString(O).\n      3. ReturnIfAbrupt(S).\n      4. If form is not provided or undefined let form be \"NFC\".\n      5. Let f be ToString(form).\n      6. ReturnIfAbrupt(f).\n      7. If f is not one of \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", then throw a RangeError Exception.\n      8. Let ns be the String value is the result of normalizing S into the normalization form named by f as specified in Unicode Standard Annex #15, UnicodeNormalizatoin Forms.\n      9. Return ns.\n\n      The length property of the normalize method is 0.\n\n      *NOTE* The normalize function is intentionally generic; it does not require that its this value be a String object. Therefore it can be transferred to other kinds of objects for use as a method.\n   */\n    unorm.shimApplied = false;\n\n   if (!String.prototype.normalize) {\n      String.prototype.normalize = function(form) {\n         var str = \"\" + this;\n         form =  form === undefined ? \"NFC\" : form;\n\n         if (form === \"NFC\") {\n            return unorm.nfc(str);\n         } else if (form === \"NFD\") {\n            return unorm.nfd(str);\n         } else if (form === \"NFKC\") {\n            return unorm.nfkc(str);\n         } else if (form === \"NFKD\") {\n            return unorm.nfkd(str);\n         } else {\n            throw new RangeError(\"Invalid normalization form: \" + form);\n         }\n      };\n\n      unorm.shimApplied = true;\n   }\n}(this));\n","'use strict'\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > 65536) throw new Error('requested too many random bytes')\n  // in case browserify  isn't using the Uint8Array version\n  var rawBytes = new global.Uint8Array(size)\n\n  // This will not work in older browsers.\n  // See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    crypto.getRandomValues(rawBytes)\n  }\n\n  // XXX: phantomjs doesn't like a buffer being passed here\n  var bytes = Buffer.from(rawBytes.buffer)\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n","var MD5 = require('md5.js')\n\nmodule.exports = function (buffer) {\n  return new MD5().update(buffer).digest()\n}\n","var checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar sync = require('./sync')\nvar Buffer = require('safe-buffer').Buffer\n\nvar ZERO_BUF\nvar subtle = global.crypto && global.crypto.subtle\nvar toBrowser = {\n  'sha': 'SHA-1',\n  'sha-1': 'SHA-1',\n  'sha1': 'SHA-1',\n  'sha256': 'SHA-256',\n  'sha-256': 'SHA-256',\n  'sha384': 'SHA-384',\n  'sha-384': 'SHA-384',\n  'sha-512': 'SHA-512',\n  'sha512': 'SHA-512'\n}\nvar checks = []\nfunction checkNative (algo) {\n  if (global.process && !global.process.browser) {\n    return Promise.resolve(false)\n  }\n  if (!subtle || !subtle.importKey || !subtle.deriveBits) {\n    return Promise.resolve(false)\n  }\n  if (checks[algo] !== undefined) {\n    return checks[algo]\n  }\n  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)\n  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)\n    .then(function () {\n      return true\n    }).catch(function () {\n      return false\n    })\n  checks[algo] = prom\n  return prom\n}\n\nfunction browserPbkdf2 (password, salt, iterations, length, algo) {\n  return subtle.importKey(\n    'raw', password, {name: 'PBKDF2'}, false, ['deriveBits']\n  ).then(function (key) {\n    return subtle.deriveBits({\n      name: 'PBKDF2',\n      salt: salt,\n      iterations: iterations,\n      hash: {\n        name: algo\n      }\n    }, key, length << 3)\n  }).then(function (res) {\n    return Buffer.from(res)\n  })\n}\n\nfunction resolvePromise (promise, callback) {\n  promise.then(function (out) {\n    process.nextTick(function () {\n      callback(null, out)\n    })\n  }, function (e) {\n    process.nextTick(function () {\n      callback(e)\n    })\n  })\n}\nmodule.exports = function (password, salt, iterations, keylen, digest, callback) {\n  if (typeof digest === 'function') {\n    callback = digest\n    digest = undefined\n  }\n\n  digest = digest || 'sha1'\n  var algo = toBrowser[digest.toLowerCase()]\n\n  if (!algo || typeof global.Promise !== 'function') {\n    return process.nextTick(function () {\n      var out\n      try {\n        out = sync(password, salt, iterations, keylen, digest)\n      } catch (e) {\n        return callback(e)\n      }\n      callback(null, out)\n    })\n  }\n\n  checkParameters(password, salt, iterations, keylen)\n  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)\n  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)\n\n  resolvePromise(checkNative(algo).then(function (resp) {\n    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)\n\n    return sync(password, salt, iterations, keylen, digest)\n  }), callback)\n}\n","exports.pbkdf2 = require('./lib/async')\nexports.pbkdf2Sync = require('./lib/sync')\n","var Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar StringDecoder = require('string_decoder').StringDecoder\nvar inherits = require('inherits')\n\nfunction CipherBase (hashMode) {\n  Transform.call(this)\n  this.hashMode = typeof hashMode === 'string'\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest\n  } else {\n    this.final = this._finalOrDigest\n  }\n  if (this._final) {\n    this.__final = this._final\n    this._final = null\n  }\n  this._decoder = null\n  this._encoding = null\n}\ninherits(CipherBase, Transform)\n\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  if (typeof data === 'string') {\n    data = Buffer.from(data, inputEnc)\n  }\n\n  var outData = this._update(data)\n  if (this.hashMode) return this\n\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc)\n  }\n\n  return outData\n}\n\nCipherBase.prototype.setAutoPadding = function () {}\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state')\n}\n\nCipherBase.prototype._transform = function (data, _, next) {\n  var err\n  try {\n    if (this.hashMode) {\n      this._update(data)\n    } else {\n      this.push(this._update(data))\n    }\n  } catch (e) {\n    err = e\n  } finally {\n    next(err)\n  }\n}\nCipherBase.prototype._flush = function (done) {\n  var err\n  try {\n    this.push(this.__final())\n  } catch (e) {\n    err = e\n  }\n\n  done(err)\n}\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this.__final() || Buffer.alloc(0)\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true)\n  }\n  return outData\n}\n\nCipherBase.prototype._toString = function (value, enc, fin) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc)\n    this._encoding = enc\n  }\n\n  if (this._encoding !== enc) throw new Error('can\\'t switch encodings')\n\n  var out = this._decoder.write(value)\n  if (fin) {\n    out += this._decoder.end()\n  }\n\n  return out\n}\n\nmodule.exports = CipherBase\n","var inherits = require('inherits')\nvar SHA512 = require('./sha512')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._ah = 0xcbbb9d5d\n  this._bh = 0x629a292a\n  this._ch = 0x9159015a\n  this._dh = 0x152fecd8\n  this._eh = 0x67332667\n  this._fh = 0x8eb44a87\n  this._gh = 0xdb0c2e0d\n  this._hh = 0x47b5481d\n\n  this._al = 0xc1059ed8\n  this._bl = 0x367cd507\n  this._cl = 0x3070dd17\n  this._dl = 0xf70e5939\n  this._el = 0xffc00b31\n  this._fl = 0x68581511\n  this._gl = 0x64f98fa7\n  this._hl = 0xbefa4fa4\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Sha256 = require('./sha256')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8\n  this._b = 0x367cd507\n  this._c = 0x3070dd17\n  this._d = 0xf70e5939\n  this._e = 0xffc00b31\n  this._f = 0x68581511\n  this._g = 0x64f98fa7\n  this._h = 0xbefa4fa4\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n","module.exports = require('./readable').PassThrough\n","module.exports = require('./readable').Transform\n","module.exports = require('./lib/_stream_duplex.js');\n","module.exports = require('./lib/_stream_writable.js');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","'use strict'\nvar inherits = require('inherits')\nvar MD5 = require('md5.js')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Base = require('cipher-base')\n\nfunction Hash (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === 'md5') return new MD5()\n  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()\n\n  return new Hash(sha(alg))\n}\n","var createHash = require('create-hash')\nvar pbkdf2 = require('pbkdf2').pbkdf2Sync\nvar randomBytes = require('randombytes')\n\n// use unorm until String.prototype.normalize gets better browser support\nvar unorm = require('unorm')\n\nvar ENGLISH_WORDLIST = require('./wordlists/english.json')\nvar FRENCH_WORDLIST = require('./wordlists/french.json')\nvar ITALIAN_WORDLIST = require('./wordlists/italian.json')\nvar JAPANESE_WORDLIST = require('./wordlists/japanese.json')\nvar SPANISH_WORDLIST = require('./wordlists/spanish.json')\nvar DEFAULT_WORDLIST = ENGLISH_WORDLIST\n\nfunction salt (password) {\n  return 'mnemonic' + (password || '')\n}\n\nfunction mnemonicToSeed (mnemonic, password) {\n  var mnemonicBuffer = new Buffer(unorm.nfkd(mnemonic), 'utf8')\n  var saltBuffer = new Buffer(salt(unorm.nfkd(password)), 'utf8')\n\n  return pbkdf2(mnemonicBuffer, saltBuffer, 2048, 64, 'sha512')\n}\n\nfunction mnemonicToSeedHex (mnemonic, password) {\n  return mnemonicToSeed(mnemonic, password).toString('hex')\n}\n\nfunction mnemonicToEntropy (mnemonic, wordlist) {\n  wordlist = wordlist || DEFAULT_WORDLIST\n\n  var words = unorm.nfkd(mnemonic).split(' ')\n  if (words.length % 3 !== 0) throw new Error('Invalid mnemonic')\n  if (words.some(function (word) {\n    return wordlist.indexOf(word) === -1\n  })) throw new Error('Invalid mnemonic')\n\n  // convert word indices to 11 bit binary strings\n  var bits = words.map(function (word) {\n    var index = wordlist.indexOf(word)\n    return lpad(index.toString(2), '0', 11)\n  }).join('')\n\n  // split the binary string into ENT/CS\n  var dividerIndex = Math.floor(bits.length / 33) * 32\n  var entropy = bits.slice(0, dividerIndex)\n  var checksum = bits.slice(dividerIndex)\n\n  // calculate the checksum and compare\n  var entropyBytes = entropy.match(/(.{1,8})/g).map(function (bin) {\n    return parseInt(bin, 2)\n  })\n  var entropyBuffer = new Buffer(entropyBytes)\n  var newChecksum = checksumBits(entropyBuffer)\n\n  // recreate properly chunked and padded bits to get the properly padded checksum\n  var bits2 = (entropy + newChecksum).match(/(.{1,11})/g).map(function (index) {\n    return lpad(index, '0', 11)\n  }).join('')\n\n  var dividerIndex2 = Math.floor(bits2.length / 33) * 32\n  var newChecksum2 = bits2.slice(dividerIndex2)\n\n  if (newChecksum2 !== checksum) {\n    throw new Error('Invalid mnemonic checksum')\n  }\n\n  return entropyBuffer.toString('hex')\n}\n\nfunction entropyToMnemonic (entropy, wordlist) {\n  wordlist = wordlist || DEFAULT_WORDLIST\n\n  var entropyBuffer = new Buffer(entropy, 'hex')\n  var entropyBits = bytesToBinary([].slice.call(entropyBuffer))\n  var checksum = checksumBits(entropyBuffer)\n\n  var bits = entropyBits + checksum\n  var chunks = bits.match(/(.{1,11})/g)\n\n  var words = chunks.map(function (binary) {\n    var index = parseInt(binary, 2)\n\n    return wordlist[index]\n  })\n\n  return wordlist === JAPANESE_WORDLIST ? words.join('\\u3000') : words.join(' ')\n}\n\nfunction generateMnemonic (strength, rng, wordlist) {\n  strength = strength || 128\n  rng = rng || randomBytes\n\n  var hex = rng(strength / 8).toString('hex')\n  return entropyToMnemonic(hex, wordlist)\n}\n\nfunction validateMnemonic (mnemonic, wordlist) {\n  try {\n    mnemonicToEntropy(mnemonic, wordlist)\n  } catch (e) {\n    return false\n  }\n\n  return true\n}\n\nfunction checksumBits (entropyBuffer) {\n  var hash = createHash('sha256').update(entropyBuffer).digest()\n\n  // Calculated constants from BIP39\n  var ENT = entropyBuffer.length * 8\n  var CS = ENT / 32\n\n  return bytesToBinary([].slice.call(hash)).slice(0, CS)\n}\n\n// =========== helper methods from bitcoinjs-lib ========\n\nfunction bytesToBinary (bytes) {\n  return bytes.map(function (x) {\n    return lpad(x.toString(2), '0', 8)\n  }).join('')\n}\n\nfunction lpad (str, padString, length) {\n  while (str.length < length) str = padString + str\n  return str\n}\n\nmodule.exports = {\n  mnemonicToSeed: mnemonicToSeed,\n  mnemonicToSeedHex: mnemonicToSeedHex,\n  mnemonicToEntropy: mnemonicToEntropy,\n  entropyToMnemonic: entropyToMnemonic,\n  generateMnemonic: generateMnemonic,\n  validateMnemonic: validateMnemonic,\n  wordlists: {\n    EN: ENGLISH_WORDLIST,\n    JA: JAPANESE_WORDLIST,\n\n    english: ENGLISH_WORDLIST,\n    french: FRENCH_WORDLIST,\n    italian: ITALIAN_WORDLIST,\n    japanese: JAPANESE_WORDLIST,\n    spanish: SPANISH_WORDLIST\n  }\n}\n","const utils = require('./utils');\nconst bip39 =  require('bip39');\nconst sha256 = require('sha256');\n\nconst {Account} = require(\"./protocol/core/Tron_pb\");\nconst {pkToAddress} = require(\"./utils/crypto\");\n\n\nfunction accountFromBase64(accountString){\n    return Account.deserializeBinary(utils.base64DecodeFromString(accountString));\n}\n\nfunction accountFromMnemonicString(mnemonic){\n    let words = mnemonic.split(\" \");\n    let privateKey = bip39.mnemonicToSeedHex(mnemonic);\n    let address = pkToAddress(privateKey);\n\n    return {\n        words,\n        privateKey,\n        address\n    };\n}\n\nfunction accountFromPrivateKey(privateKey){\n    let address = pkToAddress(privateKey);\n\n    return {\n        privateKey,\n        address\n    };\n}\n\nfunction getAccountAtIndex(privateKey, index){\n    let priv = sha256(privateKey + index);\n    let pub = pkToAddress(priv);\n\n    return {\n        priv : priv,\n        pub : pub\n    }\n}\n\nfunction generateRandomBip39(){\n    let mnemonic = bip39.generateMnemonic(256);\n    return accountFromMnemonicString(mnemonic);\n}\n\nmodule.exports = {\n    accountFromBase64,\n    privateKeyToAddress : pkToAddress,\n    generateRandomBip39,\n    accountFromMnemonicString,\n    accountFromPrivateKey,\n    getAccountAtIndex\n};","const utils = require('./utils');\n\nconst {WitnessList} = require(\"./protocol/api/api_pb\");\nconst {Witness} = require(\"./protocol/core/Tron_pb\");\nconst {getBase58CheckAddress,SHA256} = require(\"./utils/crypto\");\n\nfunction witnessesFromWitnessListBase64(witnesslist){\n    let witnesses = WitnessList.deserializeBinary(utils.base64DecodeFromString(witnesslist)).getWitnessesList();\n    let output = [];\n    for (let i = 0;i<witnesses.length;i++){\n        let witness = witnesses[i];\n        let w = witness.toObject();\n        w.address = getBase58CheckAddress(Array.from(witness.getAddress()));\n        output.push(w);\n    }\n    return output;\n}\n\nmodule.exports = {\n    witnessesFromWitnessListBase64\n};\n","/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.protocol.Endpoint', null, global);\ngoog.exportSymbol('proto.protocol.FindNeighbours', null, global);\ngoog.exportSymbol('proto.protocol.Neighbours', null, global);\ngoog.exportSymbol('proto.protocol.PingMessage', null, global);\ngoog.exportSymbol('proto.protocol.PongMessage', null, global);\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.Endpoint = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.Endpoint, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.Endpoint.displayName = 'proto.protocol.Endpoint';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.Endpoint.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.Endpoint.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.Endpoint} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Endpoint.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    address: msg.getAddress_asB64(),\n    port: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    nodeid: msg.getNodeid_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.Endpoint}\n */\nproto.protocol.Endpoint.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.Endpoint;\n  return proto.protocol.Endpoint.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.Endpoint} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.Endpoint}\n */\nproto.protocol.Endpoint.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setAddress(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setPort(value);\n      break;\n    case 3:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setNodeid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.Endpoint.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.Endpoint.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.Endpoint} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Endpoint.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getAddress_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n  f = message.getPort();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getNodeid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes address = 1;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.Endpoint.prototype.getAddress = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes address = 1;\n * This is a type-conversion wrapper around `getAddress()`\n * @return {string}\n */\nproto.protocol.Endpoint.prototype.getAddress_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getAddress()));\n};\n\n\n/**\n * optional bytes address = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getAddress()`\n * @return {!Uint8Array}\n */\nproto.protocol.Endpoint.prototype.getAddress_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getAddress()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.Endpoint.prototype.setAddress = function(value) {\n  jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n/**\n * optional int32 port = 2;\n * @return {number}\n */\nproto.protocol.Endpoint.prototype.getPort = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.Endpoint.prototype.setPort = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional bytes nodeId = 3;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.Endpoint.prototype.getNodeid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * optional bytes nodeId = 3;\n * This is a type-conversion wrapper around `getNodeid()`\n * @return {string}\n */\nproto.protocol.Endpoint.prototype.getNodeid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getNodeid()));\n};\n\n\n/**\n * optional bytes nodeId = 3;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getNodeid()`\n * @return {!Uint8Array}\n */\nproto.protocol.Endpoint.prototype.getNodeid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getNodeid()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.Endpoint.prototype.setNodeid = function(value) {\n  jspb.Message.setProto3BytesField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.PingMessage = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.PingMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.PingMessage.displayName = 'proto.protocol.PingMessage';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.PingMessage.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.PingMessage.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.PingMessage} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.PingMessage.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    from: (f = msg.getFrom()) && proto.protocol.Endpoint.toObject(includeInstance, f),\n    to: (f = msg.getTo()) && proto.protocol.Endpoint.toObject(includeInstance, f),\n    version: jspb.Message.getFieldWithDefault(msg, 3, 0),\n    timestamp: jspb.Message.getFieldWithDefault(msg, 4, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.PingMessage}\n */\nproto.protocol.PingMessage.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.PingMessage;\n  return proto.protocol.PingMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.PingMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.PingMessage}\n */\nproto.protocol.PingMessage.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.protocol.Endpoint;\n      reader.readMessage(value,proto.protocol.Endpoint.deserializeBinaryFromReader);\n      msg.setFrom(value);\n      break;\n    case 2:\n      var value = new proto.protocol.Endpoint;\n      reader.readMessage(value,proto.protocol.Endpoint.deserializeBinaryFromReader);\n      msg.setTo(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setVersion(value);\n      break;\n    case 4:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimestamp(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.PingMessage.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.PingMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.PingMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.PingMessage.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFrom();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.protocol.Endpoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getTo();\n  if (f != null) {\n    writer.writeMessage(\n      2,\n      f,\n      proto.protocol.Endpoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getVersion();\n  if (f !== 0) {\n    writer.writeInt32(\n      3,\n      f\n    );\n  }\n  f = message.getTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      4,\n      f\n    );\n  }\n};\n\n\n/**\n * optional Endpoint from = 1;\n * @return {?proto.protocol.Endpoint}\n */\nproto.protocol.PingMessage.prototype.getFrom = function() {\n  return /** @type{?proto.protocol.Endpoint} */ (\n    jspb.Message.getWrapperField(this, proto.protocol.Endpoint, 1));\n};\n\n\n/** @param {?proto.protocol.Endpoint|undefined} value */\nproto.protocol.PingMessage.prototype.setFrom = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.protocol.PingMessage.prototype.clearFrom = function() {\n  this.setFrom(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.protocol.PingMessage.prototype.hasFrom = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional Endpoint to = 2;\n * @return {?proto.protocol.Endpoint}\n */\nproto.protocol.PingMessage.prototype.getTo = function() {\n  return /** @type{?proto.protocol.Endpoint} */ (\n    jspb.Message.getWrapperField(this, proto.protocol.Endpoint, 2));\n};\n\n\n/** @param {?proto.protocol.Endpoint|undefined} value */\nproto.protocol.PingMessage.prototype.setTo = function(value) {\n  jspb.Message.setWrapperField(this, 2, value);\n};\n\n\nproto.protocol.PingMessage.prototype.clearTo = function() {\n  this.setTo(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.protocol.PingMessage.prototype.hasTo = function() {\n  return jspb.Message.getField(this, 2) != null;\n};\n\n\n/**\n * optional int32 version = 3;\n * @return {number}\n */\nproto.protocol.PingMessage.prototype.getVersion = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.PingMessage.prototype.setVersion = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n/**\n * optional int64 timestamp = 4;\n * @return {number}\n */\nproto.protocol.PingMessage.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.PingMessage.prototype.setTimestamp = function(value) {\n  jspb.Message.setProto3IntField(this, 4, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.PongMessage = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.PongMessage, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.PongMessage.displayName = 'proto.protocol.PongMessage';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.PongMessage.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.PongMessage.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.PongMessage} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.PongMessage.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    from: (f = msg.getFrom()) && proto.protocol.Endpoint.toObject(includeInstance, f),\n    echo: jspb.Message.getFieldWithDefault(msg, 2, 0),\n    timestamp: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.PongMessage}\n */\nproto.protocol.PongMessage.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.PongMessage;\n  return proto.protocol.PongMessage.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.PongMessage} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.PongMessage}\n */\nproto.protocol.PongMessage.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.protocol.Endpoint;\n      reader.readMessage(value,proto.protocol.Endpoint.deserializeBinaryFromReader);\n      msg.setFrom(value);\n      break;\n    case 2:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setEcho(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimestamp(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.PongMessage.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.PongMessage.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.PongMessage} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.PongMessage.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFrom();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.protocol.Endpoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getEcho();\n  if (f !== 0) {\n    writer.writeInt32(\n      2,\n      f\n    );\n  }\n  f = message.getTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional Endpoint from = 1;\n * @return {?proto.protocol.Endpoint}\n */\nproto.protocol.PongMessage.prototype.getFrom = function() {\n  return /** @type{?proto.protocol.Endpoint} */ (\n    jspb.Message.getWrapperField(this, proto.protocol.Endpoint, 1));\n};\n\n\n/** @param {?proto.protocol.Endpoint|undefined} value */\nproto.protocol.PongMessage.prototype.setFrom = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.protocol.PongMessage.prototype.clearFrom = function() {\n  this.setFrom(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.protocol.PongMessage.prototype.hasFrom = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional int32 echo = 2;\n * @return {number}\n */\nproto.protocol.PongMessage.prototype.getEcho = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.PongMessage.prototype.setEcho = function(value) {\n  jspb.Message.setProto3IntField(this, 2, value);\n};\n\n\n/**\n * optional int64 timestamp = 3;\n * @return {number}\n */\nproto.protocol.PongMessage.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.PongMessage.prototype.setTimestamp = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.FindNeighbours = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.protocol.FindNeighbours, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.FindNeighbours.displayName = 'proto.protocol.FindNeighbours';\n}\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.FindNeighbours.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.FindNeighbours.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.FindNeighbours} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.FindNeighbours.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    from: (f = msg.getFrom()) && proto.protocol.Endpoint.toObject(includeInstance, f),\n    targetid: msg.getTargetid_asB64(),\n    timestamp: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.FindNeighbours}\n */\nproto.protocol.FindNeighbours.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.FindNeighbours;\n  return proto.protocol.FindNeighbours.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.FindNeighbours} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.FindNeighbours}\n */\nproto.protocol.FindNeighbours.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.protocol.Endpoint;\n      reader.readMessage(value,proto.protocol.Endpoint.deserializeBinaryFromReader);\n      msg.setFrom(value);\n      break;\n    case 2:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setTargetid(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimestamp(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.FindNeighbours.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.FindNeighbours.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.FindNeighbours} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.FindNeighbours.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFrom();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.protocol.Endpoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getTargetid_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      2,\n      f\n    );\n  }\n  f = message.getTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional Endpoint from = 1;\n * @return {?proto.protocol.Endpoint}\n */\nproto.protocol.FindNeighbours.prototype.getFrom = function() {\n  return /** @type{?proto.protocol.Endpoint} */ (\n    jspb.Message.getWrapperField(this, proto.protocol.Endpoint, 1));\n};\n\n\n/** @param {?proto.protocol.Endpoint|undefined} value */\nproto.protocol.FindNeighbours.prototype.setFrom = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.protocol.FindNeighbours.prototype.clearFrom = function() {\n  this.setFrom(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.protocol.FindNeighbours.prototype.hasFrom = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * optional bytes targetId = 2;\n * @return {!(string|Uint8Array)}\n */\nproto.protocol.FindNeighbours.prototype.getTargetid = function() {\n  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * optional bytes targetId = 2;\n * This is a type-conversion wrapper around `getTargetid()`\n * @return {string}\n */\nproto.protocol.FindNeighbours.prototype.getTargetid_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getTargetid()));\n};\n\n\n/**\n * optional bytes targetId = 2;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getTargetid()`\n * @return {!Uint8Array}\n */\nproto.protocol.FindNeighbours.prototype.getTargetid_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getTargetid()));\n};\n\n\n/** @param {!(string|Uint8Array)} value */\nproto.protocol.FindNeighbours.prototype.setTargetid = function(value) {\n  jspb.Message.setProto3BytesField(this, 2, value);\n};\n\n\n/**\n * optional int64 timestamp = 3;\n * @return {number}\n */\nproto.protocol.FindNeighbours.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.FindNeighbours.prototype.setTimestamp = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\n\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.protocol.Neighbours = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.protocol.Neighbours.repeatedFields_, null);\n};\ngoog.inherits(proto.protocol.Neighbours, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  proto.protocol.Neighbours.displayName = 'proto.protocol.Neighbours';\n}\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.protocol.Neighbours.repeatedFields_ = [2];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto suitable for use in Soy templates.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.\n * @param {boolean=} opt_includeInstance Whether to include the JSPB instance\n *     for transitional soy proto support: http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.protocol.Neighbours.prototype.toObject = function(opt_includeInstance) {\n  return proto.protocol.Neighbours.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Whether to include the JSPB\n *     instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.protocol.Neighbours} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Neighbours.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    from: (f = msg.getFrom()) && proto.protocol.Endpoint.toObject(includeInstance, f),\n    neighboursList: jspb.Message.toObjectList(msg.getNeighboursList(),\n    proto.protocol.Endpoint.toObject, includeInstance),\n    timestamp: jspb.Message.getFieldWithDefault(msg, 3, 0)\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.protocol.Neighbours}\n */\nproto.protocol.Neighbours.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.protocol.Neighbours;\n  return proto.protocol.Neighbours.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.protocol.Neighbours} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.protocol.Neighbours}\n */\nproto.protocol.Neighbours.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = new proto.protocol.Endpoint;\n      reader.readMessage(value,proto.protocol.Endpoint.deserializeBinaryFromReader);\n      msg.setFrom(value);\n      break;\n    case 2:\n      var value = new proto.protocol.Endpoint;\n      reader.readMessage(value,proto.protocol.Endpoint.deserializeBinaryFromReader);\n      msg.addNeighbours(value);\n      break;\n    case 3:\n      var value = /** @type {number} */ (reader.readInt64());\n      msg.setTimestamp(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.protocol.Neighbours.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.protocol.Neighbours.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.protocol.Neighbours} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.protocol.Neighbours.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getFrom();\n  if (f != null) {\n    writer.writeMessage(\n      1,\n      f,\n      proto.protocol.Endpoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getNeighboursList();\n  if (f.length > 0) {\n    writer.writeRepeatedMessage(\n      2,\n      f,\n      proto.protocol.Endpoint.serializeBinaryToWriter\n    );\n  }\n  f = message.getTimestamp();\n  if (f !== 0) {\n    writer.writeInt64(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional Endpoint from = 1;\n * @return {?proto.protocol.Endpoint}\n */\nproto.protocol.Neighbours.prototype.getFrom = function() {\n  return /** @type{?proto.protocol.Endpoint} */ (\n    jspb.Message.getWrapperField(this, proto.protocol.Endpoint, 1));\n};\n\n\n/** @param {?proto.protocol.Endpoint|undefined} value */\nproto.protocol.Neighbours.prototype.setFrom = function(value) {\n  jspb.Message.setWrapperField(this, 1, value);\n};\n\n\nproto.protocol.Neighbours.prototype.clearFrom = function() {\n  this.setFrom(undefined);\n};\n\n\n/**\n * Returns whether this field is set.\n * @return {!boolean}\n */\nproto.protocol.Neighbours.prototype.hasFrom = function() {\n  return jspb.Message.getField(this, 1) != null;\n};\n\n\n/**\n * repeated Endpoint neighbours = 2;\n * @return {!Array.<!proto.protocol.Endpoint>}\n */\nproto.protocol.Neighbours.prototype.getNeighboursList = function() {\n  return /** @type{!Array.<!proto.protocol.Endpoint>} */ (\n    jspb.Message.getRepeatedWrapperField(this, proto.protocol.Endpoint, 2));\n};\n\n\n/** @param {!Array.<!proto.protocol.Endpoint>} value */\nproto.protocol.Neighbours.prototype.setNeighboursList = function(value) {\n  jspb.Message.setRepeatedWrapperField(this, 2, value);\n};\n\n\n/**\n * @param {!proto.protocol.Endpoint=} opt_value\n * @param {number=} opt_index\n * @return {!proto.protocol.Endpoint}\n */\nproto.protocol.Neighbours.prototype.addNeighbours = function(opt_value, opt_index) {\n  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.protocol.Endpoint, opt_index);\n};\n\n\nproto.protocol.Neighbours.prototype.clearNeighboursList = function() {\n  this.setNeighboursList([]);\n};\n\n\n/**\n * optional int64 timestamp = 3;\n * @return {number}\n */\nproto.protocol.Neighbours.prototype.getTimestamp = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));\n};\n\n\n/** @param {number} value */\nproto.protocol.Neighbours.prototype.setTimestamp = function(value) {\n  jspb.Message.setProto3IntField(this, 3, value);\n};\n\n\ngoog.object.extend(exports, proto.protocol);\n","/*\n A JavaScript implementation of the SHA family of hashes, as\n defined in FIPS PUB 180-4 and FIPS PUB 202, as well as the corresponding\n HMAC implementation as defined in FIPS PUB 198a\n\n Copyright Brian Turek 2008-2017\n Distributed under the BSD License\n See http://caligatio.github.com/jsSHA/ for more information\n\n Several functions taken from Paul Johnston\n*/\n'use strict';\n(function (I) {\n  function w(c, a, d) {\n    var l = 0, b = [], g = 0, f, n, k, e, h, q, y, p, m = !1, t = [], r = [], u,\n        z = !1;\n    d = d || {};\n    f = d.encoding || \"UTF8\";\n    u = d.numRounds || 1;\n    if (u !== parseInt(u, 10) || 1 > u) {\n      throw Error(\n          \"numRounds must a integer >= 1\");\n    }\n    if (0 === c.lastIndexOf(\"SHA-\", 0)) {\n      if (q = function (b, a) {\n            return A(b, a, c)\n          }, y = function (b, a, l, f) {\n            var g, e;\n            if (\"SHA-224\" === c || \"SHA-256\" === c) {\n              g = (a + 65 >>> 9 << 4)\n                  + 15, e = 16;\n            } else {\n              throw Error(\n                  \"Unexpected error in SHA-2 implementation\");\n            }\n            for (; b.length <= g;) {\n              b.push(0);\n            }\n            b[a >>> 5] |= 128 << 24 - a % 32;\n            a = a + l;\n            b[g] = a & 4294967295;\n            b[g - 1] = a / 4294967296 | 0;\n            l = b.length;\n            for (a = 0; a < l; a += e) {\n              f = A(b.slice(a, a + e), f, c);\n            }\n            if (\"SHA-224\" === c) {\n              b = [f[0], f[1], f[2], f[3], f[4], f[5],\n                f[6]];\n            } else if (\"SHA-256\" === c) {\n              b = f;\n            } else {\n              throw Error(\n                  \"Unexpected error in SHA-2 implementation\");\n            }\n            return b\n          }, p = function (b) {\n            return b.slice()\n          }, \"SHA-224\" === c) {\n        h = 512, e = 224;\n      } else if (\"SHA-256\"\n          === c) {\n        h = 512, e = 256;\n      } else {\n        throw Error(\n            \"Chosen SHA variant is not supported\");\n      }\n    } else {\n      throw Error(\n          \"Chosen SHA variant is not supported\");\n    }\n    k = B(a, f);\n    n = x(c);\n    this.setHMACKey = function (b, a, g) {\n      var e;\n      if (!0 === m) {\n        throw Error(\"HMAC key already set\");\n      }\n      if (!0 === z) {\n        throw Error(\"Cannot set HMAC key after calling update\");\n      }\n      f = (g || {}).encoding || \"UTF8\";\n      a = B(a, f)(b);\n      b = a.binLen;\n      a = a.value;\n      e = h >>> 3;\n      g = e / 4 - 1;\n      if (e < b / 8) {\n        for (a = y(a, b, 0, x(c)); a.length <= g;) {\n          a.push(0);\n        }\n        a[g] &= 4294967040\n      } else if (e > b / 8) {\n        for (; a.length <= g;) {\n          a.push(0);\n        }\n        a[g] &= 4294967040\n      }\n      for (b = 0; b <= g; b += 1) {\n        t[b] = a[b] ^ 909522486, r[b] = a[b]\n            ^ 1549556828;\n      }\n      n = q(t, n);\n      l = h;\n      m = !0\n    };\n    this.update = function (a) {\n      var c, f, e, d = 0, p = h >>> 5;\n      c = k(a, b, g);\n      a = c.binLen;\n      f = c.value;\n      c = a >>> 5;\n      for (e = 0; e < c; e += p) {\n        d + h <= a && (n = q(f.slice(e, e + p),\n            n), d += h);\n      }\n      l += d;\n      b = f.slice(d >>>\n          5);\n      g = a % h;\n      z = !0\n    };\n    this.getHash = function (a, f) {\n      var d, h, k, q;\n      if (!0 === m) {\n        throw Error(\"Cannot call getHash after setting HMAC key\");\n      }\n      k = C(f);\n      switch (a) {\n        case \"HEX\":\n          d = function (a) {\n            return D(a, e, k)\n          };\n          break;\n        case \"B64\":\n          d = function (a) {\n            return E(a, e, k)\n          };\n          break;\n        case \"BYTES\":\n          d = function (a) {\n            return F(a, e)\n          };\n          break;\n        case \"ARRAYBUFFER\":\n          try {\n            h = new ArrayBuffer(0)\n          } catch (v) {\n            throw Error(\"ARRAYBUFFER not supported by this environment\");\n          }\n          d = function (a) {\n            return G(a, e)\n          };\n          break;\n        default:\n          throw Error(\"format must be HEX, B64, BYTES, or ARRAYBUFFER\");\n      }\n      q = y(b.slice(), g, l, p(n));\n      for (h = 1; h < u; h += 1) {\n        q = y(q, e, 0, x(c));\n      }\n      return d(q)\n    };\n    this.getHMAC = function (a, f) {\n      var d, k, t, u;\n      if (!1 === m) {\n        throw Error(\n            \"Cannot call getHMAC without first setting HMAC key\");\n      }\n      t = C(f);\n      switch (a) {\n        case \"HEX\":\n          d = function (a) {\n            return D(a, e, t)\n          };\n          break;\n        case \"B64\":\n          d = function (a) {\n            return E(a, e, t)\n          };\n          break;\n        case \"BYTES\":\n          d = function (a) {\n            return F(a, e)\n          };\n          break;\n        case \"ARRAYBUFFER\":\n          try {\n            d = new ArrayBuffer(0)\n          } catch (v) {\n            throw Error(\"ARRAYBUFFER not supported by this environment\");\n          }\n          d = function (a) {\n            return G(a, e)\n          };\n          break;\n        default:\n          throw Error(\"outputFormat must be HEX, B64, BYTES, or ARRAYBUFFER\");\n      }\n      k = y(b.slice(), g, l, p(n));\n      u = q(r, x(c));\n      u = y(k, e, h, u);\n      return d(u)\n    }\n  }\n\n  function m() {\n  }\n\n  function D(c, a, d) {\n    var l = \"\";\n    a /= 8;\n    var b, g;\n    for (b = 0; b < a; b += 1) {\n      g = c[b >>> 2] >>> 8 * (3 + b % 4\n          * -1), l += \"0123456789abcdef\".charAt(g >>> 4 & 15)\n          + \"0123456789abcdef\".charAt(g & 15);\n    }\n    return d.outputUpper ? l.toUpperCase() : l\n  }\n\n  function E(c, a, d) {\n    var l = \"\", b = a / 8, g, f, n;\n    for (g = 0; g < b; g += 3) {\n      for (f = g + 1 < b ? c[g + 1 >>> 2] : 0, n = g\n      + 2 < b ? c[g + 2 >>> 2] : 0, n = (c[g >>> 2] >>> 8 * (3 + g % 4 * -1)\n          & 255) << 16 | (f >>> 8 * (3 + (g + 1) % 4 * -1) & 255) << 8 | n >>> 8\n          * (3 + (g + 2) % 4 * -1) & 255, f = 0; 4 > f; f += 1) {\n        8 * g + 6 * f <= a\n            ? l += \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".charAt(n\n            >>>\n            6 * (3 - f) & 63) : l += d.b64Pad;\n      }\n    }\n    return l\n  }\n\n  function F(c, a) {\n    var d = \"\", l = a / 8, b, g;\n    for (b = 0; b < l; b += 1) {\n      g = c[b >>> 2] >>> 8 * (3 + b % 4 * -1)\n          & 255, d += String.fromCharCode(g);\n    }\n    return d\n  }\n\n  function G(c, a) {\n    var d = a / 8, l, b = new ArrayBuffer(d), g;\n    g = new Uint8Array(b);\n    for (l = 0; l < d; l += 1) {\n      g[l] = c[l >>> 2] >>> 8 * (3 + l % 4 * -1) & 255;\n    }\n    return b\n  }\n\n  function C(c) {\n    var a = {outputUpper: !1, b64Pad: \"=\", shakeLen: -1};\n    c = c || {};\n    a.outputUpper = c.outputUpper || !1;\n    !0 === c.hasOwnProperty(\"b64Pad\") && (a.b64Pad = c.b64Pad);\n    if (\"boolean\" !== typeof a.outputUpper) {\n      throw Error(\n          \"Invalid outputUpper formatting option\");\n    }\n    if (\"string\" !== typeof a.b64Pad) {\n      throw Error(\n          \"Invalid b64Pad formatting option\");\n    }\n    return a\n  }\n\n  function B(c, a) {\n    var d;\n    switch (a) {\n      case \"UTF8\":\n      case \"UTF16BE\":\n      case \"UTF16LE\":\n        break;\n      default:\n        throw Error(\"encoding must be UTF8, UTF16BE, or UTF16LE\");\n    }\n    switch (c) {\n      case \"HEX\":\n        d = function (a, b, c) {\n          var f = a.length, d, k, e, h, q;\n          if (0 !== f % 2) {\n            throw Error(\n                \"String of HEX type must be in byte increments\");\n          }\n          b = b || [0];\n          c = c || 0;\n          q = c >>> 3;\n          for (d = 0; d < f; d += 2) {\n            k = parseInt(a.substr(d, 2), 16);\n            if (isNaN(k)) {\n              throw Error(\n                  \"String of HEX type contains invalid characters\");\n            }\n            h = (d >>> 1) + q;\n            for (e = h >>> 2; b.length <= e;) {\n              b.push(0);\n            }\n            b[e] |= k << 8 * (3 + h % 4 * -1)\n          }\n          return {value: b, binLen: 4 * f + c}\n        };\n        break;\n      case \"TEXT\":\n        d = function (c, b, d) {\n          var f, n, k = 0, e, h, q, m, p, r;\n          b = b || [0];\n          d = d || 0;\n          q = d >>> 3;\n          if (\"UTF8\" === a) {\n            for (r = 3, e = 0; e < c.length;\n                e += 1) {\n              for (f = c.charCodeAt(e), n = [], 128 > f ? n.push(f)\n                  : 2048 > f ? (n.push(192 | f >>> 6), n.push(128 | f & 63))\n                      : 55296 > f || 57344 <= f ? n.push(224 | f >>> 12, 128 | f\n                          >>> 6 & 63, 128 | f & 63) : (e += 1, f = 65536 + ((f\n                          & 1023) << 10 | c.charCodeAt(e) & 1023), n.push(240\n                          | f\n                          >>> 18, 128 | f >>> 12 & 63, 128 | f >>> 6 & 63, 128\n                          | f\n                          & 63)), h = 0; h < n.length; h += 1) {\n                p = k +\n                    q;\n                for (m = p >>> 2; b.length <= m;) {\n                  b.push(0);\n                }\n                b[m] |= n[h] << 8 * (r + p % 4 * -1);\n                k += 1\n              }\n            }\n          } else if (\"UTF16BE\" === a || \"UTF16LE\"\n              === a) {\n            for (r = 2, n = \"UTF16LE\" === a && !0 || \"UTF16LE\" !== a\n                && !1, e = 0; e < c.length; e += 1) {\n              f = c.charCodeAt(e);\n              !0 === n && (h = f & 255, f = h << 8 | f >>> 8);\n              p = k + q;\n              for (m = p >>> 2; b.length <= m;) {\n                b.push(0);\n              }\n              b[m] |= f << 8 * (r + p % 4 * -1);\n              k += 2\n            }\n          }\n          return {value: b, binLen: 8 * k + d}\n        };\n        break;\n      case \"B64\":\n        d = function (a, b, c) {\n          var f = 0, d, k, e, h, q, m, p;\n          if (-1 === a.search(/^[a-zA-Z0-9=+\\/]+$/)) {\n            throw Error(\n                \"Invalid character in base-64 string\");\n          }\n          k = a.indexOf(\"=\");\n          a = a.replace(/\\=/g,\n              \"\");\n          if (-1 !== k && k < a.length) {\n            throw Error(\n                \"Invalid '=' found in base-64 string\");\n          }\n          b = b || [0];\n          c = c || 0;\n          m = c >>> 3;\n          for (k = 0; k < a.length; k += 4) {\n            q = a.substr(k, 4);\n            for (e = h = 0; e < q.length;\n                e += 1) {\n              d = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".indexOf(\n                  q[e]), h |= d << 18 - 6 * e;\n            }\n            for (e = 0; e < q.length - 1; e += 1) {\n              p = f + m;\n              for (d = p >>> 2; b.length <= d;) {\n                b.push(0);\n              }\n              b[d] |= (h >>> 16 - 8 * e & 255) << 8 * (3 + p % 4 * -1);\n              f += 1\n            }\n          }\n          return {value: b, binLen: 8 * f + c}\n        };\n        break;\n      case \"BYTES\":\n        d = function (a, b, c) {\n          var d, n, k, e, h;\n          b = b || [0];\n          c = c || 0;\n          k = c >>> 3;\n          for (n = 0; n < a.length; n +=\n              1) {\n            d = a.charCodeAt(n), h = n + k, e = h >>> 2, b.length <= e\n            && b.push(0), b[e] |= d << 8 * (3 + h % 4 * -1);\n          }\n          return {value: b, binLen: 8 * a.length + c}\n        };\n        break;\n      case \"ARRAYBUFFER\":\n        try {\n          d = new ArrayBuffer(0)\n        } catch (l) {\n          throw Error(\"ARRAYBUFFER not supported by this environment\");\n        }\n        d = function (a, b, c) {\n          var d, n, k, e, h;\n          b = b || [0];\n          c = c || 0;\n          n = c >>> 3;\n          h = new Uint8Array(a);\n          for (d = 0; d < a.byteLength; d += 1) {\n            e = d + n, k = e >>> 2, b.length\n            <= k && b.push(0), b[k] |= h[d] << 8 * (3 + e % 4 * -1);\n          }\n          return {value: b, binLen: 8 * a.byteLength + c}\n        };\n        break;\n      default:\n        throw Error(\"format must be HEX, TEXT, B64, BYTES, or ARRAYBUFFER\");\n    }\n    return d\n  }\n\n  function r(c, a) {\n    return c >>> a | c << 32 - a\n  }\n\n  function J(c, a, d) {\n    return c & a ^ ~c & d\n  }\n\n  function K(c, a, d) {\n    return c & a ^ c & d ^ a & d\n  }\n\n  function L(c) {\n    return r(c, 2) ^ r(c, 13) ^ r(c, 22)\n  }\n\n  function M(c) {\n    return r(c, 6) ^ r(c, 11) ^ r(c, 25)\n  }\n\n  function N(c) {\n    return r(c, 7) ^ r(c, 18) ^ c >>> 3\n  }\n\n  function O(c) {\n    return r(c, 17) ^ r(c, 19) ^ c >>> 10\n  }\n\n  function P(c, a) {\n    var d = (c & 65535) + (a & 65535);\n    return ((c >>> 16) + (a >>> 16) + (d >>> 16) & 65535) << 16 | d & 65535\n  }\n\n  function Q(c, a, d, l) {\n    var b = (c & 65535) + (a & 65535) + (d & 65535) + (l & 65535);\n    return ((c >>> 16) + (a >>> 16) + (d >>> 16) + (l >>> 16) + (b >>>\n        16) & 65535) << 16 | b & 65535\n  }\n\n  function R(c, a, d, l, b) {\n    var g = (c & 65535) + (a & 65535) + (d & 65535) + (l & 65535) + (b & 65535);\n    return ((c >>> 16) + (a >>> 16) + (d >>> 16) + (l >>> 16) + (b >>> 16) + (g\n        >>> 16) & 65535) << 16 | g & 65535\n  }\n\n  function x(c) {\n    var a = [], d;\n    if (0 === c.lastIndexOf(\"SHA-\", 0)) {\n      switch (a = [3238371032, 914150663,\n        812702999, 4144912697, 4290775857, 1750603025, 1694076839,\n        3204075428], d = [1779033703, 3144134277, 1013904242, 2773480762,\n        1359893119, 2600822924, 528734635, 1541459225], c) {\n        case \"SHA-224\":\n          break;\n        case \"SHA-256\":\n          a = d;\n          break;\n        case \"SHA-384\":\n          a = [new m, new m,\n            new m, new m, new m, new m, new m, new m];\n          break;\n        case \"SHA-512\":\n          a = [new m, new m, new m, new m, new m, new m, new m, new m];\n          break;\n        default:\n          throw Error(\"Unknown SHA variant\");\n      }\n    } else {\n      throw Error(\"No SHA variants supported\");\n    }\n    return a\n  }\n\n  function A(c, a, d) {\n    var l, b, g, f, n, k, e, h, m, r, p, w, t, x, u, z, A, B, C, D, E, F,\n        v = [], G;\n    if (\"SHA-224\" === d || \"SHA-256\"\n        === d) {\n      r = 64, w = 1, F = Number, t = P, x = Q, u = R, z = N, A = O, B = L, C = M, E = K, D = J, G = H;\n    } else {\n      throw Error(\n          \"Unexpected error in SHA-2 implementation\");\n    }\n    d = a[0];\n    l = a[1];\n    b = a[2];\n    g = a[3];\n    f = a[4];\n    n = a[5];\n    k = a[6];\n    e = a[7];\n    for (p =\n        0; p < r; p += 1) {\n      16 > p ? (m = p * w, h = c.length <= m ? 0\n          : c[m], m = c.length <= m + 1 ? 0 : c[m + 1], v[p] = new F(h, m))\n          : v[p] = x(A(v[p - 2]), v[p - 7], z(v[p - 15]), v[p - 16]), h = u(e,\n          C(f), D(f, n, k), G[p], v[p]), m = t(B(d),\n          E(d, l, b)), e = k, k = n, n = f, f = t(g,\n          h), g = b, b = l, l = d, d = t(h, m);\n    }\n    a[0] = t(d, a[0]);\n    a[1] = t(l, a[1]);\n    a[2] = t(b, a[2]);\n    a[3] = t(g, a[3]);\n    a[4] = t(f, a[4]);\n    a[5] = t(n, a[5]);\n    a[6] = t(k, a[6]);\n    a[7] = t(e, a[7]);\n    return a\n  }\n\n  var H;\n  H = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993,\n    2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987,\n    1925078388, 2162078206,\n    2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628,\n    770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349,\n    2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895,\n    666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051,\n    2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771,\n    3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616,\n    659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779,\n    1955562222, 2024104815, 2227730452, 2361852424, 2428436474,\n    2756734187, 3204031479, 3329325298];\n  \"function\" === typeof define && define.amd ? define(function () {\n    return w\n  }) : \"undefined\" !== typeof exports ? (\"undefined\" !== typeof module\n  && module.exports && (module.exports = w), exports = w) : I.jsSHA = w\n})(this);\n","/* globals __webpack_amd_options__ */\r\nmodule.exports = __webpack_amd_options__;\r\n","/**\n * [js-sha3]{@link https://github.com/emn178/js-sha3}\n *\n * @version 0.7.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2015-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA3_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA3_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA3_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA3_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var SHAKE_PADDING = [31, 7936, 2031616, 520093696];\n  var CSHAKE_PADDING = [4, 1024, 262144, 67108864];\n  var KECCAK_PADDING = [1, 256, 65536, 16777216];\n  var PADDING = [6, 1536, 393216, 100663296];\n  var SHIFT = [0, 8, 16, 24];\n  var RC = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649,\n    0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0,\n    2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771,\n    2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648,\n    2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648];\n  var BITS = [224, 256, 384, 512];\n  var SHAKE_BITS = [128, 256];\n  var OUTPUT_TYPES = ['hex', 'buffer', 'arrayBuffer', 'array', 'digest'];\n  var CSHAKE_BYTEPAD = {\n    '128': 168,\n    '256': 136\n  };\n\n  if (root.JS_SHA3_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (bits, padding, outputType) {\n    return function (message) {\n      return new Keccak(bits, padding, bits).update(message)[outputType]();\n    };\n  };\n\n  var createShakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits) {\n      return new Keccak(bits, padding, outputBits).update(message)[outputType]();\n    };\n  };\n\n  var createCshakeOutputMethod = function (bits, padding, outputType) {\n    return function (message, outputBits, n, s) {\n      return methods['cshake' + bits].update(message, outputBits, n, s)[outputType]();\n    };\n  };\n\n  var createKmacOutputMethod = function (bits, padding, outputType) {\n    return function (key, message, outputBits, s) {\n      return methods['kmac' + bits].update(key, message, outputBits, s)[outputType]();\n    };\n  };\n\n  var createOutputMethods = function (method, createMethod, bits, padding) {\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createMethod(bits, padding, type);\n    }\n    return method;\n  };\n\n  var createMethod = function (bits, padding) {\n    var method = createOutputMethod(bits, padding, 'hex');\n    method.create = function () {\n      return new Keccak(bits, padding, bits);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    return createOutputMethods(method, createOutputMethod, bits, padding);\n  };\n\n  var createShakeMethod = function (bits, padding) {\n    var method = createShakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits) {\n      return new Keccak(bits, padding, outputBits);\n    };\n    method.update = function (message, outputBits) {\n      return method.create(outputBits).update(message);\n    };\n    return createOutputMethods(method, createShakeOutputMethod, bits, padding);\n  };\n\n  var createCshakeMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createCshakeOutputMethod(bits, padding, 'hex');\n    method.create = function (outputBits, n, s) {\n      if (!n && !s) {\n        return methods['shake' + bits].create(outputBits);\n      } else {\n        return new Keccak(bits, padding, outputBits).bytepad([n, s], w);\n      }\n    };\n    method.update = function (message, outputBits, n, s) {\n      return method.create(outputBits, n, s).update(message);\n    };\n    return createOutputMethods(method, createCshakeOutputMethod, bits, padding);\n  };\n\n  var createKmacMethod = function (bits, padding) {\n    var w = CSHAKE_BYTEPAD[bits];\n    var method = createKmacOutputMethod(bits, padding, 'hex');\n    method.create = function (key, outputBits, s) {\n      return new Kmac(bits, padding, outputBits).bytepad(['KMAC', s], w).bytepad([key], w);\n    };\n    method.update = function (key, message, outputBits, s) {\n      return method.create(key, outputBits, s).update(message);\n    };\n    return createOutputMethods(method, createKmacOutputMethod, bits, padding);\n  };\n\n  var algorithms = [\n    { name: 'keccak', padding: KECCAK_PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'sha3', padding: PADDING, bits: BITS, createMethod: createMethod },\n    { name: 'shake', padding: SHAKE_PADDING, bits: SHAKE_BITS, createMethod: createShakeMethod },\n    { name: 'cshake', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createCshakeMethod },\n    { name: 'kmac', padding: CSHAKE_PADDING, bits: SHAKE_BITS, createMethod: createKmacMethod }\n  ];\n\n  var methods = {}, methodNames = [];\n\n  for (var i = 0; i < algorithms.length; ++i) {\n    var algorithm = algorithms[i];\n    var bits = algorithm.bits;\n    for (var j = 0; j < bits.length; ++j) {\n      var methodName = algorithm.name + '_' + bits[j];\n      methodNames.push(methodName);\n      methods[methodName] = algorithm.createMethod(bits[j], algorithm.padding);\n      if (algorithm.name !== 'sha3') {\n        var newMethodName = algorithm.name + bits[j];\n        methodNames.push(newMethodName);\n        methods[newMethodName] = methods[methodName];\n      }\n    }\n  }\n\n  function Keccak(bits, padding, outputBits) {\n    this.blocks = [];\n    this.s = [];\n    this.padding = padding;\n    this.outputBits = outputBits;\n    this.reset = true;\n    this.finalized = false;\n    this.block = 0;\n    this.start = 0;\n    this.blockCount = (1600 - (bits << 1)) >> 5;\n    this.byteCount = this.blockCount << 2;\n    this.outputBlocks = outputBits >> 5;\n    this.extraBytes = (outputBits & 31) >> 3;\n\n    for (var i = 0; i < 50; ++i) {\n      this.s[i] = 0;\n    }\n  }\n\n  Keccak.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw ERROR;\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw ERROR;\n          }\n        }\n      } else {\n        throw ERROR;\n      }\n      notString = true;\n    }\n    var blocks = this.blocks, byteCount = this.byteCount, length = message.length,\n      blockCount = this.blockCount, index = 0, s = this.s, i, code;\n\n    while (index < length) {\n      if (this.reset) {\n        this.reset = false;\n        blocks[0] = this.block;\n        for (i = 1; i < blockCount + 1; ++i) {\n          blocks[i] = 0;\n        }\n      }\n      if (notString) {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < byteCount; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      if (i >= byteCount) {\n        this.start = i - byteCount;\n        this.block = blocks[blockCount];\n        for (i = 0; i < blockCount; ++i) {\n          s[i] ^= blocks[i];\n        }\n        f(s);\n        this.reset = true;\n      } else {\n        this.start = i;\n      }\n    }\n    return this;\n  };\n\n  Keccak.prototype.encode = function (x, right) {\n    var o = x & 255, n = 1;\n    var bytes = [o];\n    x = x >> 8;\n    o = x & 255;\n    while (o > 0) {\n      bytes.unshift(o);\n      x = x >> 8;\n      o = x & 255;\n      ++n;\n    }\n    if (right) {\n      bytes.push(n);\n    } else {\n      bytes.unshift(n);\n    }\n    this.update(bytes);\n    return bytes.length;\n  };\n\n  Keccak.prototype.encodeString = function (str) {\n    var notString, type = typeof str;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (str === null) {\n          throw ERROR;\n        } else if (ARRAY_BUFFER && str.constructor === ArrayBuffer) {\n          str = new Uint8Array(str);\n        } else if (!Array.isArray(str)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(str)) {\n            throw ERROR;\n          }\n        }\n      } else {\n        throw ERROR;\n      }\n      notString = true;\n    }\n    var bytes = 0, length = str.length;\n    if (notString) {\n      bytes = length;\n    } else {\n      for (var i = 0; i < str.length; ++i) {\n        var code = str.charCodeAt(i);\n        if (code < 0x80) {\n          bytes += 1;\n        } else if (code < 0x800) {\n          bytes += 2;\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes += 3;\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (str.charCodeAt(++i) & 0x3ff));\n          bytes += 4;\n        }\n      }\n    }\n    bytes += this.encode(bytes * 8);\n    this.update(str);\n    return bytes;\n  };\n\n  Keccak.prototype.bytepad = function (strs, w) {\n    var bytes = this.encode(w);\n    for (var i = 0; i < strs.length; ++i) {\n      bytes += this.encodeString(strs[i]);\n    }\n    var paddingBytes = w - bytes % w;\n    var zeros = [];\n    zeros.length = paddingBytes;\n    this.update(zeros);\n    return this;\n  };\n\n  Keccak.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex, blockCount = this.blockCount, s = this.s;\n    blocks[i >> 2] |= this.padding[i & 3];\n    if (this.lastByteIndex === this.byteCount) {\n      blocks[0] = blocks[blockCount];\n      for (i = 1; i < blockCount + 1; ++i) {\n        blocks[i] = 0;\n      }\n    }\n    blocks[blockCount - 1] |= 0x80000000;\n    for (i = 0; i < blockCount; ++i) {\n      s[i] ^= blocks[i];\n    }\n    f(s);\n  };\n\n  Keccak.prototype.toString = Keccak.prototype.hex = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var hex = '', block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        block = s[i];\n        hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F] +\n          HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F] +\n          HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F] +\n          HEX_CHARS[(block >> 28) & 0x0F] + HEX_CHARS[(block >> 24) & 0x0F];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n        i = 0;\n      }\n    }\n    if (extraBytes) {\n      block = s[i];\n      hex += HEX_CHARS[(block >> 4) & 0x0F] + HEX_CHARS[block & 0x0F];\n      if (extraBytes > 1) {\n        hex += HEX_CHARS[(block >> 12) & 0x0F] + HEX_CHARS[(block >> 8) & 0x0F];\n      }\n      if (extraBytes > 2) {\n        hex += HEX_CHARS[(block >> 20) & 0x0F] + HEX_CHARS[(block >> 16) & 0x0F];\n      }\n    }\n    return hex;\n  };\n\n  Keccak.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var bytes = this.outputBits >> 3;\n    var buffer;\n    if (extraBytes) {\n      buffer = new ArrayBuffer((outputBlocks + 1) << 2);\n    } else {\n      buffer = new ArrayBuffer(bytes);\n    }\n    var array = new Uint32Array(buffer);\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        array[j] = s[i];\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      array[i] = s[i];\n      buffer = buffer.slice(0, bytes);\n    }\n    return buffer;\n  };\n\n  Keccak.prototype.buffer = Keccak.prototype.arrayBuffer;\n\n  Keccak.prototype.digest = Keccak.prototype.array = function () {\n    this.finalize();\n\n    var blockCount = this.blockCount, s = this.s, outputBlocks = this.outputBlocks,\n      extraBytes = this.extraBytes, i = 0, j = 0;\n    var array = [], offset, block;\n    while (j < outputBlocks) {\n      for (i = 0; i < blockCount && j < outputBlocks; ++i, ++j) {\n        offset = j << 2;\n        block = s[i];\n        array[offset] = block & 0xFF;\n        array[offset + 1] = (block >> 8) & 0xFF;\n        array[offset + 2] = (block >> 16) & 0xFF;\n        array[offset + 3] = (block >> 24) & 0xFF;\n      }\n      if (j % blockCount === 0) {\n        f(s);\n      }\n    }\n    if (extraBytes) {\n      offset = j << 2;\n      block = s[i];\n      array[offset] = block & 0xFF;\n      if (extraBytes > 1) {\n        array[offset + 1] = (block >> 8) & 0xFF;\n      }\n      if (extraBytes > 2) {\n        array[offset + 2] = (block >> 16) & 0xFF;\n      }\n    }\n    return array;\n  };\n\n  function Kmac(bits, padding, outputBits) {\n    Keccak.call(this, bits, padding, outputBits);\n  }\n\n  Kmac.prototype = new Keccak();\n\n  Kmac.prototype.finalize = function () {\n    this.encode(this.outputBits, true);\n    return Keccak.prototype.finalize.call(this);\n  };\n\n  var f = function (s) {\n    var h, l, n, c0, c1, c2, c3, c4, c5, c6, c7, c8, c9,\n      b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16, b17,\n      b18, b19, b20, b21, b22, b23, b24, b25, b26, b27, b28, b29, b30, b31, b32, b33,\n      b34, b35, b36, b37, b38, b39, b40, b41, b42, b43, b44, b45, b46, b47, b48, b49;\n    for (n = 0; n < 48; n += 2) {\n      c0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40];\n      c1 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41];\n      c2 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42];\n      c3 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43];\n      c4 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44];\n      c5 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45];\n      c6 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46];\n      c7 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47];\n      c8 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48];\n      c9 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49];\n\n      h = c8 ^ ((c2 << 1) | (c3 >>> 31));\n      l = c9 ^ ((c3 << 1) | (c2 >>> 31));\n      s[0] ^= h;\n      s[1] ^= l;\n      s[10] ^= h;\n      s[11] ^= l;\n      s[20] ^= h;\n      s[21] ^= l;\n      s[30] ^= h;\n      s[31] ^= l;\n      s[40] ^= h;\n      s[41] ^= l;\n      h = c0 ^ ((c4 << 1) | (c5 >>> 31));\n      l = c1 ^ ((c5 << 1) | (c4 >>> 31));\n      s[2] ^= h;\n      s[3] ^= l;\n      s[12] ^= h;\n      s[13] ^= l;\n      s[22] ^= h;\n      s[23] ^= l;\n      s[32] ^= h;\n      s[33] ^= l;\n      s[42] ^= h;\n      s[43] ^= l;\n      h = c2 ^ ((c6 << 1) | (c7 >>> 31));\n      l = c3 ^ ((c7 << 1) | (c6 >>> 31));\n      s[4] ^= h;\n      s[5] ^= l;\n      s[14] ^= h;\n      s[15] ^= l;\n      s[24] ^= h;\n      s[25] ^= l;\n      s[34] ^= h;\n      s[35] ^= l;\n      s[44] ^= h;\n      s[45] ^= l;\n      h = c4 ^ ((c8 << 1) | (c9 >>> 31));\n      l = c5 ^ ((c9 << 1) | (c8 >>> 31));\n      s[6] ^= h;\n      s[7] ^= l;\n      s[16] ^= h;\n      s[17] ^= l;\n      s[26] ^= h;\n      s[27] ^= l;\n      s[36] ^= h;\n      s[37] ^= l;\n      s[46] ^= h;\n      s[47] ^= l;\n      h = c6 ^ ((c0 << 1) | (c1 >>> 31));\n      l = c7 ^ ((c1 << 1) | (c0 >>> 31));\n      s[8] ^= h;\n      s[9] ^= l;\n      s[18] ^= h;\n      s[19] ^= l;\n      s[28] ^= h;\n      s[29] ^= l;\n      s[38] ^= h;\n      s[39] ^= l;\n      s[48] ^= h;\n      s[49] ^= l;\n\n      b0 = s[0];\n      b1 = s[1];\n      b32 = (s[11] << 4) | (s[10] >>> 28);\n      b33 = (s[10] << 4) | (s[11] >>> 28);\n      b14 = (s[20] << 3) | (s[21] >>> 29);\n      b15 = (s[21] << 3) | (s[20] >>> 29);\n      b46 = (s[31] << 9) | (s[30] >>> 23);\n      b47 = (s[30] << 9) | (s[31] >>> 23);\n      b28 = (s[40] << 18) | (s[41] >>> 14);\n      b29 = (s[41] << 18) | (s[40] >>> 14);\n      b20 = (s[2] << 1) | (s[3] >>> 31);\n      b21 = (s[3] << 1) | (s[2] >>> 31);\n      b2 = (s[13] << 12) | (s[12] >>> 20);\n      b3 = (s[12] << 12) | (s[13] >>> 20);\n      b34 = (s[22] << 10) | (s[23] >>> 22);\n      b35 = (s[23] << 10) | (s[22] >>> 22);\n      b16 = (s[33] << 13) | (s[32] >>> 19);\n      b17 = (s[32] << 13) | (s[33] >>> 19);\n      b48 = (s[42] << 2) | (s[43] >>> 30);\n      b49 = (s[43] << 2) | (s[42] >>> 30);\n      b40 = (s[5] << 30) | (s[4] >>> 2);\n      b41 = (s[4] << 30) | (s[5] >>> 2);\n      b22 = (s[14] << 6) | (s[15] >>> 26);\n      b23 = (s[15] << 6) | (s[14] >>> 26);\n      b4 = (s[25] << 11) | (s[24] >>> 21);\n      b5 = (s[24] << 11) | (s[25] >>> 21);\n      b36 = (s[34] << 15) | (s[35] >>> 17);\n      b37 = (s[35] << 15) | (s[34] >>> 17);\n      b18 = (s[45] << 29) | (s[44] >>> 3);\n      b19 = (s[44] << 29) | (s[45] >>> 3);\n      b10 = (s[6] << 28) | (s[7] >>> 4);\n      b11 = (s[7] << 28) | (s[6] >>> 4);\n      b42 = (s[17] << 23) | (s[16] >>> 9);\n      b43 = (s[16] << 23) | (s[17] >>> 9);\n      b24 = (s[26] << 25) | (s[27] >>> 7);\n      b25 = (s[27] << 25) | (s[26] >>> 7);\n      b6 = (s[36] << 21) | (s[37] >>> 11);\n      b7 = (s[37] << 21) | (s[36] >>> 11);\n      b38 = (s[47] << 24) | (s[46] >>> 8);\n      b39 = (s[46] << 24) | (s[47] >>> 8);\n      b30 = (s[8] << 27) | (s[9] >>> 5);\n      b31 = (s[9] << 27) | (s[8] >>> 5);\n      b12 = (s[18] << 20) | (s[19] >>> 12);\n      b13 = (s[19] << 20) | (s[18] >>> 12);\n      b44 = (s[29] << 7) | (s[28] >>> 25);\n      b45 = (s[28] << 7) | (s[29] >>> 25);\n      b26 = (s[38] << 8) | (s[39] >>> 24);\n      b27 = (s[39] << 8) | (s[38] >>> 24);\n      b8 = (s[48] << 14) | (s[49] >>> 18);\n      b9 = (s[49] << 14) | (s[48] >>> 18);\n\n      s[0] = b0 ^ (~b2 & b4);\n      s[1] = b1 ^ (~b3 & b5);\n      s[10] = b10 ^ (~b12 & b14);\n      s[11] = b11 ^ (~b13 & b15);\n      s[20] = b20 ^ (~b22 & b24);\n      s[21] = b21 ^ (~b23 & b25);\n      s[30] = b30 ^ (~b32 & b34);\n      s[31] = b31 ^ (~b33 & b35);\n      s[40] = b40 ^ (~b42 & b44);\n      s[41] = b41 ^ (~b43 & b45);\n      s[2] = b2 ^ (~b4 & b6);\n      s[3] = b3 ^ (~b5 & b7);\n      s[12] = b12 ^ (~b14 & b16);\n      s[13] = b13 ^ (~b15 & b17);\n      s[22] = b22 ^ (~b24 & b26);\n      s[23] = b23 ^ (~b25 & b27);\n      s[32] = b32 ^ (~b34 & b36);\n      s[33] = b33 ^ (~b35 & b37);\n      s[42] = b42 ^ (~b44 & b46);\n      s[43] = b43 ^ (~b45 & b47);\n      s[4] = b4 ^ (~b6 & b8);\n      s[5] = b5 ^ (~b7 & b9);\n      s[14] = b14 ^ (~b16 & b18);\n      s[15] = b15 ^ (~b17 & b19);\n      s[24] = b24 ^ (~b26 & b28);\n      s[25] = b25 ^ (~b27 & b29);\n      s[34] = b34 ^ (~b36 & b38);\n      s[35] = b35 ^ (~b37 & b39);\n      s[44] = b44 ^ (~b46 & b48);\n      s[45] = b45 ^ (~b47 & b49);\n      s[6] = b6 ^ (~b8 & b0);\n      s[7] = b7 ^ (~b9 & b1);\n      s[16] = b16 ^ (~b18 & b10);\n      s[17] = b17 ^ (~b19 & b11);\n      s[26] = b26 ^ (~b28 & b20);\n      s[27] = b27 ^ (~b29 & b21);\n      s[36] = b36 ^ (~b38 & b30);\n      s[37] = b37 ^ (~b39 & b31);\n      s[46] = b46 ^ (~b48 & b40);\n      s[47] = b47 ^ (~b49 & b41);\n      s[8] = b8 ^ (~b0 & b2);\n      s[9] = b9 ^ (~b1 & b3);\n      s[18] = b18 ^ (~b10 & b12);\n      s[19] = b19 ^ (~b11 & b13);\n      s[28] = b28 ^ (~b20 & b22);\n      s[29] = b29 ^ (~b21 & b23);\n      s[38] = b38 ^ (~b30 & b32);\n      s[39] = b39 ^ (~b31 & b33);\n      s[48] = b48 ^ (~b40 & b42);\n      s[49] = b49 ^ (~b41 & b43);\n\n      s[0] ^= RC[n];\n      s[1] ^= RC[n + 1];\n    }\n  };\n\n  if (COMMON_JS) {\n    module.exports = methods;\n  } else {\n    for (i = 0; i < methodNames.length; ++i) {\n      root[methodNames[i]] = methods[methodNames[i]];\n    }\n    if (AMD) {\n      define(function () {\n        return methods;\n      });\n    }\n  }\n})();\n","'use strict';\n\nvar BN = require('bn.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength)\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n","'use strict';\n\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n","'use strict';\n\nvar hash = require('hash.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  var curve = elliptic.curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n               .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n  }\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0 && (r[1] & 0x80)) {\n    r = r.slice(1);\n  }\n  if (s[0] === 0 && (s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);\n\n    options = elliptic.curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof elliptic.curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray()\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  do {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  } while (true);\n};\n\nEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8'\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; true; iter++) {\n    var k = options.k ?\n        options.k(iter) :\n        new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n\n  if (!this.curve._maxwellTrick) {\n    var p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  var p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'\n      ]\n    ]\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'\n      ]\n    ]\n  }\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar elliptic = require('../elliptic');\n\nvar assert = elliptic.utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new elliptic.curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new elliptic.curve.edwards(options);\n  else\n    this.curve = new elliptic.curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve\n      });\n      return curve;\n    }\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'\n  ]\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'\n  ]\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'\n  ]\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'\n  ]\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650'\n  ]\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9'\n  ]\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658'\n  ]\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3'\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15'\n    }\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre\n  ]\n});\n","'use strict';\n\nvar curve = require('../curve');\nvar elliptic = require('../../elliptic');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nvar assert = elliptic.utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // E = a * C\n    var e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      var h = this.z.redSqr();\n      // J = F - 2 * H\n      var j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    var e = c.redAdd(d);\n    // H = (c * Z1)^2\n    var h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    var j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n                          this.y,\n                          this.z,\n                          this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n","'use strict';\n\nvar curve = require('../curve');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n","'use strict';\n\nvar curve = require('../curve');\nvar elliptic = require('../../elliptic');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = curve.base;\n\nvar assert = elliptic.utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 }\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n    var p = points[i];\n    var beta = p._getBeta();\n\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n  // Clean-up references to points and coefficients\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (var i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (var i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar elliptic = require('../../elliptic');\nvar utils = elliptic.utils;\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  for (var j = 0; j < naf.length; j += doubles.step) {\n    var nafW = 0;\n    for (var k = j + doubles.step - 1; k >= j; k--)\n      nafW = (nafW << 1) + naf[k];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (var j = 0; j < repr.length; j++) {\n      var nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--)\n      k++;\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n                                                       points,\n                                                       coeffs,\n                                                       len,\n                                                       jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  for (var i = 0; i < len; i++) {\n    var p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (var i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a]);\n      naf[b] = getNAF(coeffs[b], wndWidth[b]);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b] /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (var j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (var i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (var j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (var j = 0; j < len; j++) {\n      var z = tmp[j];\n      var p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (var i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n                          bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w) {\n  var naf = [];\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n  while (k.cmpn(1) >= 0) {\n    var z;\n    if (k.isOdd()) {\n      var mod = k.andln(ws - 1);\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n    naf.push(z);\n\n    // Optimization, shift by word if possible\n    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;\n    for (var i = 1; i < shift; i++)\n      naf.push(0);\n    k.iushrn(shift);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    []\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      var m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      var m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n           this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n                                     bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","\nexports.Base64 = function() {\n\n  // private property\n  _keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  // public method for encoding\n  this.encode = function (input) {\n    var output = \"\";\n    var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n    var i = 0;\n//    input = _utf8_encode(input);\n    while (i < input.length) {\n      chr1 = input.charCodeAt(i++);\n      chr2 = input.charCodeAt(i++);\n      chr3 = input.charCodeAt(i++);\n      enc1 = chr1 >> 2;\n      enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n      enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n      enc4 = chr3 & 63;\n      if (isNaN(chr2)) {\n        enc3 = enc4 = 64;\n      } else if (isNaN(chr3)) {\n        enc4 = 64;\n      }\n      output = output +\n        _keyStr.charAt(enc1) + _keyStr.charAt(enc2) +\n        _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\n    }\n    return output;\n  }\n\n  // public method for encoding\n  this.encodeIgnoreUtf8 = function (inputBytes) {\n    var output = \"\";\n    var chr1, chr2, chr3, enc1, enc2, enc3, enc4;\n    var i = 0;\n//    input = _utf8_encode(input);\n    while (i < inputBytes.length) {\n      chr1 = inputBytes[i++];\n      chr2 = inputBytes[i++];\n      chr3 = inputBytes[i++];\n      enc1 = chr1 >> 2;\n      enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n      enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n      enc4 = chr3 & 63;\n      if (isNaN(chr2)) {\n        enc3 = enc4 = 64;\n      } else if (isNaN(chr3)) {\n        enc4 = 64;\n      }\n      output = output +\n        _keyStr.charAt(enc1) + _keyStr.charAt(enc2) +\n        _keyStr.charAt(enc3) + _keyStr.charAt(enc4);\n    }\n    return output;\n  }\n\n  // public method for decoding\n  this.decode = function (input) {\n    var output = \"\";\n    var chr1, chr2, chr3;\n    var enc1, enc2, enc3, enc4;\n    var i = 0;\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n    while (i < input.length) {\n      enc1 = _keyStr.indexOf(input.charAt(i++));\n      enc2 = _keyStr.indexOf(input.charAt(i++));\n      enc3 = _keyStr.indexOf(input.charAt(i++));\n      enc4 = _keyStr.indexOf(input.charAt(i++));\n      chr1 = (enc1 << 2) | (enc2 >> 4);\n      chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n      chr3 = ((enc3 & 3) << 6) | enc4;\n      output = output + String.fromCharCode(chr1);\n      if (enc3 != 64) {\n        output = output + String.fromCharCode(chr2);\n      }\n      if (enc4 != 64) {\n        output = output + String.fromCharCode(chr3);\n      }\n    }\n    output = _utf8_decode(output);\n    return output;\n  }\n\n  // public method for decoding\n  this.decodeToByteArray = function (input) {\n    var output = \"\";\n    var chr1, chr2, chr3;\n    var enc1, enc2, enc3, enc4;\n    var i = 0;\n    input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n    while (i < input.length) {\n      enc1 = _keyStr.indexOf(input.charAt(i++));\n      enc2 = _keyStr.indexOf(input.charAt(i++));\n      enc3 = _keyStr.indexOf(input.charAt(i++));\n      enc4 = _keyStr.indexOf(input.charAt(i++));\n      chr1 = (enc1 << 2) | (enc2 >> 4);\n      chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n      chr3 = ((enc3 & 3) << 6) | enc4;\n      output = output + String.fromCharCode(chr1);\n      if (enc3 != 64) {\n        output = output + String.fromCharCode(chr2);\n      }\n      if (enc4 != 64) {\n        output = output + String.fromCharCode(chr3);\n      }\n    }\n    var outBytes = _out2ByteArray(output);\n    return outBytes;\n  }\n\n  // private method for UTF-8 decoding\n  _out2ByteArray = function (utftext) {\n    var byteArray = new Array(utftext.length)\n    var i = 0;\n    var c = c1 = c2 = 0;\n    while (i < utftext.length) {\n      c = utftext.charCodeAt(i);\n      byteArray[i] = c;\n      i++;\n    }\n    return byteArray;\n  }\n\n  // private method for UTF-8 encoding\n  _utf8_encode = function (string) {\n    string = string.replace(/\\r\\n/g, \"\\n\");\n    var utftext = \"\";\n    for (var n = 0; n < string.length; n++) {\n      var c = string.charCodeAt(n);\n      if (c < 128) {\n        utftext += String.fromCharCode(c);\n      } else if ((c > 127) && (c < 2048)) {\n        utftext += String.fromCharCode((c >> 6) | 192);\n        utftext += String.fromCharCode((c & 63) | 128);\n      } else {\n        utftext += String.fromCharCode((c >> 12) | 224);\n        utftext += String.fromCharCode(((c >> 6) & 63) | 128);\n        utftext += String.fromCharCode((c & 63) | 128);\n      }\n\n    }\n    return utftext;\n  }\n\n  // private method for UTF-8 decoding\n  _utf8_decode = function (utftext) {\n    var string = \"\";\n    var i = 0;\n    var c = c1 = c2 = 0;\n    while (i < utftext.length) {\n      c = utftext.charCodeAt(i);\n      if (c < 128) {\n        string += String.fromCharCode(c);\n        i++;\n      } else if ((c > 191) && (c < 224)) {\n        c2 = utftext.charCodeAt(i + 1);\n        string += String.fromCharCode(((c & 31) << 6) | (c2 & 63));\n        i += 2;\n      } else {\n        c2 = utftext.charCodeAt(i + 1);\n        c3 = utftext.charCodeAt(i + 2);\n        string += String.fromCharCode(((c & 15) << 12) | ((c2 & 63) << 6) | (c3\n          & 63));\n        i += 3;\n      }\n    }\n    return string;\n  }\n}\n","(function () {\n  \"use strict\";\n\n  function btoa(str) {\n    var buffer;\n\n    if (str instanceof Buffer) {\n      buffer = str;\n    } else {\n      buffer = Buffer.from(str.toString(), 'binary');\n    }\n\n    return buffer.toString('base64');\n  }\n\n  module.exports = btoa;\n}());\n","(function(global) {\n  'use strict';\n\n  if (typeof module !== \"undefined\" && module.exports) {\n    module.exports = global;\n  }\n\n  global[\"encoding-indexes\"] =\n{\n  \"big5\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,17392,19506,17923,17830,17784,160359,19831,17843,162993,19682,163013,15253,18230,18244,19527,19520,148159,144919,160594,159371,159954,19543,172881,18255,17882,19589,162924,19719,19108,18081,158499,29221,154196,137827,146950,147297,26189,22267,null,32149,22813,166841,15860,38708,162799,23515,138590,23204,13861,171696,23249,23479,23804,26478,34195,170309,29793,29853,14453,138579,145054,155681,16108,153822,15093,31484,40855,147809,166157,143850,133770,143966,17162,33924,40854,37935,18736,34323,22678,38730,37400,31184,31282,26208,27177,34973,29772,31685,26498,31276,21071,36934,13542,29636,155065,29894,40903,22451,18735,21580,16689,145038,22552,31346,162661,35727,18094,159368,16769,155033,31662,140476,40904,140481,140489,140492,40905,34052,144827,16564,40906,17633,175615,25281,28782,40907,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,12736,12737,12738,12739,12740,131340,12741,131281,131277,12742,12743,131275,139240,12744,131274,12745,12746,12747,12748,131342,12749,12750,256,193,461,192,274,201,282,200,332,211,465,210,null,7870,null,7872,202,257,225,462,224,593,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,null,7871,null,7873,234,609,9178,9179,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,172969,135493,null,25866,null,null,20029,28381,40270,37343,null,null,161589,25745,20250,20264,20392,20822,20852,20892,20964,21153,21160,21307,21326,21457,21464,22242,22768,22788,22791,22834,22836,23398,23454,23455,23706,24198,24635,25993,26622,26628,26725,27982,28860,30005,32420,32428,32442,32455,32463,32479,32518,32567,33402,33487,33647,35270,35774,35810,36710,36711,36718,29713,31996,32205,26950,31433,21031,null,null,null,null,37260,30904,37214,32956,null,36107,33014,133607,null,null,32927,40647,19661,40393,40460,19518,171510,159758,40458,172339,13761,null,28314,33342,29977,null,18705,39532,39567,40857,31111,164972,138698,132560,142054,20004,20097,20096,20103,20159,20203,20279,13388,20413,15944,20483,20616,13437,13459,13477,20870,22789,20955,20988,20997,20105,21113,21136,21287,13767,21417,13649,21424,13651,21442,21539,13677,13682,13953,21651,21667,21684,21689,21712,21743,21784,21795,21800,13720,21823,13733,13759,21975,13765,163204,21797,null,134210,134421,151851,21904,142534,14828,131905,36422,150968,169189,16467,164030,30586,142392,14900,18389,164189,158194,151018,25821,134524,135092,134357,135412,25741,36478,134806,134155,135012,142505,164438,148691,null,134470,170573,164073,18420,151207,142530,39602,14951,169460,16365,13574,152263,169940,161992,142660,40302,38933,null,17369,155813,25780,21731,142668,142282,135287,14843,135279,157402,157462,162208,25834,151634,134211,36456,139681,166732,132913,null,18443,131497,16378,22643,142733,null,148936,132348,155799,134988,134550,21881,16571,17338,null,19124,141926,135325,33194,39157,134556,25465,14846,141173,36288,22177,25724,15939,null,173569,134665,142031,142537,null,135368,145858,14738,14854,164507,13688,155209,139463,22098,134961,142514,169760,13500,27709,151099,null,null,161140,142987,139784,173659,167117,134778,134196,157724,32659,135375,141315,141625,13819,152035,134796,135053,134826,16275,134960,134471,135503,134732,null,134827,134057,134472,135360,135485,16377,140950,25650,135085,144372,161337,142286,134526,134527,142417,142421,14872,134808,135367,134958,173618,158544,167122,167321,167114,38314,21708,33476,21945,null,171715,39974,39606,161630,142830,28992,33133,33004,23580,157042,33076,14231,21343,164029,37302,134906,134671,134775,134907,13789,151019,13833,134358,22191,141237,135369,134672,134776,135288,135496,164359,136277,134777,151120,142756,23124,135197,135198,135413,135414,22428,134673,161428,164557,135093,134779,151934,14083,135094,135552,152280,172733,149978,137274,147831,164476,22681,21096,13850,153405,31666,23400,18432,19244,40743,18919,39967,39821,154484,143677,22011,13810,22153,20008,22786,138177,194680,38737,131206,20059,20155,13630,23587,24401,24516,14586,25164,25909,27514,27701,27706,28780,29227,20012,29357,149737,32594,31035,31993,32595,156266,13505,null,156491,32770,32896,157202,158033,21341,34916,35265,161970,35744,36125,38021,38264,38271,38376,167439,38886,39029,39118,39134,39267,170000,40060,40479,40644,27503,63751,20023,131207,38429,25143,38050,null,20539,28158,171123,40870,15817,34959,147790,28791,23797,19232,152013,13657,154928,24866,166450,36775,37366,29073,26393,29626,144001,172295,15499,137600,19216,30948,29698,20910,165647,16393,27235,172730,16931,34319,133743,31274,170311,166634,38741,28749,21284,139390,37876,30425,166371,40871,30685,20131,20464,20668,20015,20247,40872,21556,32139,22674,22736,138678,24210,24217,24514,141074,25995,144377,26905,27203,146531,27903,null,29184,148741,29580,16091,150035,23317,29881,35715,154788,153237,31379,31724,31939,32364,33528,34199,40873,34960,40874,36537,40875,36815,34143,39392,37409,40876,167353,136255,16497,17058,23066,null,null,null,39016,26475,17014,22333,null,34262,149883,33471,160013,19585,159092,23931,158485,159678,40877,40878,23446,40879,26343,32347,28247,31178,15752,17603,143958,141206,17306,17718,null,23765,146202,35577,23672,15634,144721,23928,40882,29015,17752,147692,138787,19575,14712,13386,131492,158785,35532,20404,131641,22975,33132,38998,170234,24379,134047,null,139713,166253,16642,18107,168057,16135,40883,172469,16632,14294,18167,158790,16764,165554,160767,17773,14548,152730,17761,17691,19849,19579,19830,17898,16328,150287,13921,17630,17597,16877,23870,23880,23894,15868,14351,23972,23993,14368,14392,24130,24253,24357,24451,14600,14612,14655,14669,24791,24893,23781,14729,25015,25017,25039,14776,25132,25232,25317,25368,14840,22193,14851,25570,25595,25607,25690,14923,25792,23829,22049,40863,14999,25990,15037,26111,26195,15090,26258,15138,26390,15170,26532,26624,15192,26698,26756,15218,15217,15227,26889,26947,29276,26980,27039,27013,15292,27094,15325,27237,27252,27249,27266,15340,27289,15346,27307,27317,27348,27382,27521,27585,27626,27765,27818,15563,27906,27910,27942,28033,15599,28068,28081,28181,28184,28201,28294,166336,28347,28386,28378,40831,28392,28393,28452,28468,15686,147265,28545,28606,15722,15733,29111,23705,15754,28716,15761,28752,28756,28783,28799,28809,131877,17345,13809,134872,147159,22462,159443,28990,153568,13902,27042,166889,23412,31305,153825,169177,31333,31357,154028,31419,31408,31426,31427,29137,156813,16842,31450,31453,31466,16879,21682,154625,31499,31573,31529,152334,154878,31650,31599,33692,154548,158847,31696,33825,31634,31672,154912,15789,154725,33938,31738,31750,31797,154817,31812,31875,149634,31910,26237,148856,31945,31943,31974,31860,31987,31989,31950,32359,17693,159300,32093,159446,29837,32137,32171,28981,32179,32210,147543,155689,32228,15635,32245,137209,32229,164717,32285,155937,155994,32366,32402,17195,37996,32295,32576,32577,32583,31030,156368,39393,32663,156497,32675,136801,131176,17756,145254,17667,164666,32762,156809,32773,32776,32797,32808,32815,172167,158915,32827,32828,32865,141076,18825,157222,146915,157416,26405,32935,166472,33031,33050,22704,141046,27775,156824,151480,25831,136330,33304,137310,27219,150117,150165,17530,33321,133901,158290,146814,20473,136445,34018,33634,158474,149927,144688,137075,146936,33450,26907,194964,16859,34123,33488,33562,134678,137140,14017,143741,144730,33403,33506,33560,147083,159139,158469,158615,144846,15807,33565,21996,33669,17675,159141,33708,33729,33747,13438,159444,27223,34138,13462,159298,143087,33880,154596,33905,15827,17636,27303,33866,146613,31064,33960,158614,159351,159299,34014,33807,33681,17568,33939,34020,154769,16960,154816,17731,34100,23282,159385,17703,34163,17686,26559,34326,165413,165435,34241,159880,34306,136578,159949,194994,17770,34344,13896,137378,21495,160666,34430,34673,172280,34798,142375,34737,34778,34831,22113,34412,26710,17935,34885,34886,161248,146873,161252,34910,34972,18011,34996,34997,25537,35013,30583,161551,35207,35210,35238,35241,35239,35260,166437,35303,162084,162493,35484,30611,37374,35472,162393,31465,162618,147343,18195,162616,29052,35596,35615,152624,152933,35647,35660,35661,35497,150138,35728,35739,35503,136927,17941,34895,35995,163156,163215,195028,14117,163155,36054,163224,163261,36114,36099,137488,36059,28764,36113,150729,16080,36215,36265,163842,135188,149898,15228,164284,160012,31463,36525,36534,36547,37588,36633,36653,164709,164882,36773,37635,172703,133712,36787,18730,166366,165181,146875,24312,143970,36857,172052,165564,165121,140069,14720,159447,36919,165180,162494,36961,165228,165387,37032,165651,37060,165606,37038,37117,37223,15088,37289,37316,31916,166195,138889,37390,27807,37441,37474,153017,37561,166598,146587,166668,153051,134449,37676,37739,166625,166891,28815,23235,166626,166629,18789,37444,166892,166969,166911,37747,37979,36540,38277,38310,37926,38304,28662,17081,140922,165592,135804,146990,18911,27676,38523,38550,16748,38563,159445,25050,38582,30965,166624,38589,21452,18849,158904,131700,156688,168111,168165,150225,137493,144138,38705,34370,38710,18959,17725,17797,150249,28789,23361,38683,38748,168405,38743,23370,168427,38751,37925,20688,143543,143548,38793,38815,38833,38846,38848,38866,38880,152684,38894,29724,169011,38911,38901,168989,162170,19153,38964,38963,38987,39014,15118,160117,15697,132656,147804,153350,39114,39095,39112,39111,19199,159015,136915,21936,39137,39142,39148,37752,39225,150057,19314,170071,170245,39413,39436,39483,39440,39512,153381,14020,168113,170965,39648,39650,170757,39668,19470,39700,39725,165376,20532,39732,158120,14531,143485,39760,39744,171326,23109,137315,39822,148043,39938,39935,39948,171624,40404,171959,172434,172459,172257,172323,172511,40318,40323,172340,40462,26760,40388,139611,172435,172576,137531,172595,40249,172217,172724,40592,40597,40606,40610,19764,40618,40623,148324,40641,15200,14821,15645,20274,14270,166955,40706,40712,19350,37924,159138,40727,40726,40761,22175,22154,40773,39352,168075,38898,33919,40802,40809,31452,40846,29206,19390,149877,149947,29047,150008,148296,150097,29598,166874,137466,31135,166270,167478,37737,37875,166468,37612,37761,37835,166252,148665,29207,16107,30578,31299,28880,148595,148472,29054,137199,28835,137406,144793,16071,137349,152623,137208,14114,136955,137273,14049,137076,137425,155467,14115,136896,22363,150053,136190,135848,136134,136374,34051,145062,34051,33877,149908,160101,146993,152924,147195,159826,17652,145134,170397,159526,26617,14131,15381,15847,22636,137506,26640,16471,145215,147681,147595,147727,158753,21707,22174,157361,22162,135135,134056,134669,37830,166675,37788,20216,20779,14361,148534,20156,132197,131967,20299,20362,153169,23144,131499,132043,14745,131850,132116,13365,20265,131776,167603,131701,35546,131596,20120,20685,20749,20386,20227,150030,147082,20290,20526,20588,20609,20428,20453,20568,20732,20825,20827,20829,20830,28278,144789,147001,147135,28018,137348,147081,20904,20931,132576,17629,132259,132242,132241,36218,166556,132878,21081,21156,133235,21217,37742,18042,29068,148364,134176,149932,135396,27089,134685,29817,16094,29849,29716,29782,29592,19342,150204,147597,21456,13700,29199,147657,21940,131909,21709,134086,22301,37469,38644,37734,22493,22413,22399,13886,22731,23193,166470,136954,137071,136976,23084,22968,37519,23166,23247,23058,153926,137715,137313,148117,14069,27909,29763,23073,155267,23169,166871,132115,37856,29836,135939,28933,18802,37896,166395,37821,14240,23582,23710,24158,24136,137622,137596,146158,24269,23375,137475,137476,14081,137376,14045,136958,14035,33066,166471,138682,144498,166312,24332,24334,137511,137131,23147,137019,23364,34324,161277,34912,24702,141408,140843,24539,16056,140719,140734,168072,159603,25024,131134,131142,140827,24985,24984,24693,142491,142599,149204,168269,25713,149093,142186,14889,142114,144464,170218,142968,25399,173147,25782,25393,25553,149987,142695,25252,142497,25659,25963,26994,15348,143502,144045,149897,144043,21773,144096,137433,169023,26318,144009,143795,15072,16784,152964,166690,152975,136956,152923,152613,30958,143619,137258,143924,13412,143887,143746,148169,26254,159012,26219,19347,26160,161904,138731,26211,144082,144097,26142,153714,14545,145466,145340,15257,145314,144382,29904,15254,26511,149034,26806,26654,15300,27326,14435,145365,148615,27187,27218,27337,27397,137490,25873,26776,27212,15319,27258,27479,147392,146586,37792,37618,166890,166603,37513,163870,166364,37991,28069,28427,149996,28007,147327,15759,28164,147516,23101,28170,22599,27940,30786,28987,148250,148086,28913,29264,29319,29332,149391,149285,20857,150180,132587,29818,147192,144991,150090,149783,155617,16134,16049,150239,166947,147253,24743,16115,29900,29756,37767,29751,17567,159210,17745,30083,16227,150745,150790,16216,30037,30323,173510,15129,29800,166604,149931,149902,15099,15821,150094,16127,149957,149747,37370,22322,37698,166627,137316,20703,152097,152039,30584,143922,30478,30479,30587,149143,145281,14942,149744,29752,29851,16063,150202,150215,16584,150166,156078,37639,152961,30750,30861,30856,30930,29648,31065,161601,153315,16654,31131,33942,31141,27181,147194,31290,31220,16750,136934,16690,37429,31217,134476,149900,131737,146874,137070,13719,21867,13680,13994,131540,134157,31458,23129,141045,154287,154268,23053,131675,30960,23082,154566,31486,16889,31837,31853,16913,154547,155324,155302,31949,150009,137136,31886,31868,31918,27314,32220,32263,32211,32590,156257,155996,162632,32151,155266,17002,158581,133398,26582,131150,144847,22468,156690,156664,149858,32733,31527,133164,154345,154947,31500,155150,39398,34373,39523,27164,144447,14818,150007,157101,39455,157088,33920,160039,158929,17642,33079,17410,32966,33033,33090,157620,39107,158274,33378,33381,158289,33875,159143,34320,160283,23174,16767,137280,23339,137377,23268,137432,34464,195004,146831,34861,160802,23042,34926,20293,34951,35007,35046,35173,35149,153219,35156,161669,161668,166901,166873,166812,166393,16045,33955,18165,18127,14322,35389,35356,169032,24397,37419,148100,26068,28969,28868,137285,40301,35999,36073,163292,22938,30659,23024,17262,14036,36394,36519,150537,36656,36682,17140,27736,28603,140065,18587,28537,28299,137178,39913,14005,149807,37051,37015,21873,18694,37307,37892,166475,16482,166652,37927,166941,166971,34021,35371,38297,38311,38295,38294,167220,29765,16066,149759,150082,148458,16103,143909,38543,167655,167526,167525,16076,149997,150136,147438,29714,29803,16124,38721,168112,26695,18973,168083,153567,38749,37736,166281,166950,166703,156606,37562,23313,35689,18748,29689,147995,38811,38769,39224,134950,24001,166853,150194,38943,169178,37622,169431,37349,17600,166736,150119,166756,39132,166469,16128,37418,18725,33812,39227,39245,162566,15869,39323,19311,39338,39516,166757,153800,27279,39457,23294,39471,170225,19344,170312,39356,19389,19351,37757,22642,135938,22562,149944,136424,30788,141087,146872,26821,15741,37976,14631,24912,141185,141675,24839,40015,40019,40059,39989,39952,39807,39887,171565,39839,172533,172286,40225,19630,147716,40472,19632,40204,172468,172269,172275,170287,40357,33981,159250,159711,158594,34300,17715,159140,159364,159216,33824,34286,159232,145367,155748,31202,144796,144960,18733,149982,15714,37851,37566,37704,131775,30905,37495,37965,20452,13376,36964,152925,30781,30804,30902,30795,137047,143817,149825,13978,20338,28634,28633,28702,28702,21524,147893,22459,22771,22410,40214,22487,28980,13487,147884,29163,158784,151447,23336,137141,166473,24844,23246,23051,17084,148616,14124,19323,166396,37819,37816,137430,134941,33906,158912,136211,148218,142374,148417,22932,146871,157505,32168,155995,155812,149945,149899,166394,37605,29666,16105,29876,166755,137375,16097,150195,27352,29683,29691,16086,150078,150164,137177,150118,132007,136228,149989,29768,149782,28837,149878,37508,29670,37727,132350,37681,166606,166422,37766,166887,153045,18741,166530,29035,149827,134399,22180,132634,134123,134328,21762,31172,137210,32254,136898,150096,137298,17710,37889,14090,166592,149933,22960,137407,137347,160900,23201,14050,146779,14000,37471,23161,166529,137314,37748,15565,133812,19094,14730,20724,15721,15692,136092,29045,17147,164376,28175,168164,17643,27991,163407,28775,27823,15574,147437,146989,28162,28428,15727,132085,30033,14012,13512,18048,16090,18545,22980,37486,18750,36673,166940,158656,22546,22472,14038,136274,28926,148322,150129,143331,135856,140221,26809,26983,136088,144613,162804,145119,166531,145366,144378,150687,27162,145069,158903,33854,17631,17614,159014,159057,158850,159710,28439,160009,33597,137018,33773,158848,159827,137179,22921,23170,137139,23137,23153,137477,147964,14125,23023,137020,14023,29070,37776,26266,148133,23150,23083,148115,27179,147193,161590,148571,148170,28957,148057,166369,20400,159016,23746,148686,163405,148413,27148,148054,135940,28838,28979,148457,15781,27871,194597,150095,32357,23019,23855,15859,24412,150109,137183,32164,33830,21637,146170,144128,131604,22398,133333,132633,16357,139166,172726,28675,168283,23920,29583,31955,166489,168992,20424,32743,29389,29456,162548,29496,29497,153334,29505,29512,16041,162584,36972,29173,149746,29665,33270,16074,30476,16081,27810,22269,29721,29726,29727,16098,16112,16116,16122,29907,16142,16211,30018,30061,30066,30093,16252,30152,30172,16320,30285,16343,30324,16348,30330,151388,29064,22051,35200,22633,16413,30531,16441,26465,16453,13787,30616,16490,16495,23646,30654,30667,22770,30744,28857,30748,16552,30777,30791,30801,30822,33864,152885,31027,26627,31026,16643,16649,31121,31129,36795,31238,36796,16743,31377,16818,31420,33401,16836,31439,31451,16847,20001,31586,31596,31611,31762,31771,16992,17018,31867,31900,17036,31928,17044,31981,36755,28864,134351,32207,32212,32208,32253,32686,32692,29343,17303,32800,32805,31545,32814,32817,32852,15820,22452,28832,32951,33001,17389,33036,29482,33038,33042,30048,33044,17409,15161,33110,33113,33114,17427,22586,33148,33156,17445,33171,17453,33189,22511,33217,33252,33364,17551,33446,33398,33482,33496,33535,17584,33623,38505,27018,33797,28917,33892,24803,33928,17668,33982,34017,34040,34064,34104,34130,17723,34159,34160,34272,17783,34418,34450,34482,34543,38469,34699,17926,17943,34990,35071,35108,35143,35217,162151,35369,35384,35476,35508,35921,36052,36082,36124,18328,22623,36291,18413,20206,36410,21976,22356,36465,22005,36528,18487,36558,36578,36580,36589,36594,36791,36801,36810,36812,36915,39364,18605,39136,37395,18718,37416,37464,37483,37553,37550,37567,37603,37611,37619,37620,37629,37699,37764,37805,18757,18769,40639,37911,21249,37917,37933,37950,18794,37972,38009,38189,38306,18855,38388,38451,18917,26528,18980,38720,18997,38834,38850,22100,19172,24808,39097,19225,39153,22596,39182,39193,20916,39196,39223,39234,39261,39266,19312,39365,19357,39484,39695,31363,39785,39809,39901,39921,39924,19565,39968,14191,138178,40265,39994,40702,22096,40339,40381,40384,40444,38134,36790,40571,40620,40625,40637,40646,38108,40674,40689,40696,31432,40772,131220,131767,132000,26906,38083,22956,132311,22592,38081,14265,132565,132629,132726,136890,22359,29043,133826,133837,134079,21610,194619,134091,21662,134139,134203,134227,134245,134268,24807,134285,22138,134325,134365,134381,134511,134578,134600,26965,39983,34725,134660,134670,134871,135056,134957,134771,23584,135100,24075,135260,135247,135286,26398,135291,135304,135318,13895,135359,135379,135471,135483,21348,33965,135907,136053,135990,35713,136567,136729,137155,137159,20088,28859,137261,137578,137773,137797,138282,138352,138412,138952,25283,138965,139029,29080,26709,139333,27113,14024,139900,140247,140282,141098,141425,141647,33533,141671,141715,142037,35237,142056,36768,142094,38840,142143,38983,39613,142412,null,142472,142519,154600,142600,142610,142775,142741,142914,143220,143308,143411,143462,144159,144350,24497,26184,26303,162425,144743,144883,29185,149946,30679,144922,145174,32391,131910,22709,26382,26904,146087,161367,155618,146961,147129,161278,139418,18640,19128,147737,166554,148206,148237,147515,148276,148374,150085,132554,20946,132625,22943,138920,15294,146687,148484,148694,22408,149108,14747,149295,165352,170441,14178,139715,35678,166734,39382,149522,149755,150037,29193,150208,134264,22885,151205,151430,132985,36570,151596,21135,22335,29041,152217,152601,147274,150183,21948,152646,152686,158546,37332,13427,152895,161330,152926,18200,152930,152934,153543,149823,153693,20582,13563,144332,24798,153859,18300,166216,154286,154505,154630,138640,22433,29009,28598,155906,162834,36950,156082,151450,35682,156674,156746,23899,158711,36662,156804,137500,35562,150006,156808,147439,156946,19392,157119,157365,141083,37989,153569,24981,23079,194765,20411,22201,148769,157436,20074,149812,38486,28047,158909,13848,35191,157593,157806,156689,157790,29151,157895,31554,168128,133649,157990,37124,158009,31301,40432,158202,39462,158253,13919,156777,131105,31107,158260,158555,23852,144665,33743,158621,18128,158884,30011,34917,159150,22710,14108,140685,159819,160205,15444,160384,160389,37505,139642,160395,37680,160486,149968,27705,38047,160848,134904,34855,35061,141606,164979,137137,28344,150058,137248,14756,14009,23568,31203,17727,26294,171181,170148,35139,161740,161880,22230,16607,136714,14753,145199,164072,136133,29101,33638,162269,168360,23143,19639,159919,166315,162301,162314,162571,163174,147834,31555,31102,163849,28597,172767,27139,164632,21410,159239,37823,26678,38749,164207,163875,158133,136173,143919,163912,23941,166960,163971,22293,38947,166217,23979,149896,26046,27093,21458,150181,147329,15377,26422,163984,164084,164142,139169,164175,164233,164271,164378,164614,164655,164746,13770,164968,165546,18682,25574,166230,30728,37461,166328,17394,166375,17375,166376,166726,166868,23032,166921,36619,167877,168172,31569,168208,168252,15863,168286,150218,36816,29327,22155,169191,169449,169392,169400,169778,170193,170313,170346,170435,170536,170766,171354,171419,32415,171768,171811,19620,38215,172691,29090,172799,19857,36882,173515,19868,134300,36798,21953,36794,140464,36793,150163,17673,32383,28502,27313,20202,13540,166700,161949,14138,36480,137205,163876,166764,166809,162366,157359,15851,161365,146615,153141,153942,20122,155265,156248,22207,134765,36366,23405,147080,150686,25566,25296,137206,137339,25904,22061,154698,21530,152337,15814,171416,19581,22050,22046,32585,155352,22901,146752,34672,19996,135146,134473,145082,33047,40286,36120,30267,40005,30286,30649,37701,21554,33096,33527,22053,33074,33816,32957,21994,31074,22083,21526,134813,13774,22021,22001,26353,164578,13869,30004,22000,21946,21655,21874,134209,134294,24272,151880,134774,142434,134818,40619,32090,21982,135285,25245,38765,21652,36045,29174,37238,25596,25529,25598,21865,142147,40050,143027,20890,13535,134567,20903,21581,21790,21779,30310,36397,157834,30129,32950,34820,34694,35015,33206,33820,135361,17644,29444,149254,23440,33547,157843,22139,141044,163119,147875,163187,159440,160438,37232,135641,37384,146684,173737,134828,134905,29286,138402,18254,151490,163833,135147,16634,40029,25887,142752,18675,149472,171388,135148,134666,24674,161187,135149,null,155720,135559,29091,32398,40272,19994,19972,13687,23309,27826,21351,13996,14812,21373,13989,149016,22682,150382,33325,21579,22442,154261,133497,null,14930,140389,29556,171692,19721,39917,146686,171824,19547,151465,169374,171998,33884,146870,160434,157619,145184,25390,32037,147191,146988,14890,36872,21196,15988,13946,17897,132238,30272,23280,134838,30842,163630,22695,16575,22140,39819,23924,30292,173108,40581,19681,30201,14331,24857,143578,148466,null,22109,135849,22439,149859,171526,21044,159918,13741,27722,40316,31830,39737,22494,137068,23635,25811,169168,156469,160100,34477,134440,159010,150242,134513,null,20990,139023,23950,38659,138705,40577,36940,31519,39682,23761,31651,25192,25397,39679,31695,39722,31870,39726,31810,31878,39957,31740,39689,40727,39963,149822,40794,21875,23491,20477,40600,20466,21088,15878,21201,22375,20566,22967,24082,38856,40363,36700,21609,38836,39232,38842,21292,24880,26924,21466,39946,40194,19515,38465,27008,20646,30022,137069,39386,21107,null,37209,38529,37212,null,37201,167575,25471,159011,27338,22033,37262,30074,25221,132092,29519,31856,154657,146685,null,149785,30422,39837,20010,134356,33726,34882,null,23626,27072,20717,22394,21023,24053,20174,27697,131570,20281,21660,21722,21146,36226,13822,24332,13811,null,27474,37244,40869,39831,38958,39092,39610,40616,40580,29050,31508,null,27642,34840,32632,null,22048,173642,36471,40787,null,36308,36431,40476,36353,25218,164733,36392,36469,31443,150135,31294,30936,27882,35431,30215,166490,40742,27854,34774,30147,172722,30803,194624,36108,29410,29553,35629,29442,29937,36075,150203,34351,24506,34976,17591,null,137275,159237,null,35454,140571,null,24829,30311,39639,40260,37742,39823,34805,null,34831,36087,29484,38689,39856,13782,29362,19463,31825,39242,155993,24921,19460,40598,24957,null,22367,24943,25254,25145,25294,14940,25058,21418,144373,25444,26626,13778,23895,166850,36826,167481,null,20697,138566,30982,21298,38456,134971,16485,null,30718,null,31938,155418,31962,31277,32870,32867,32077,29957,29938,35220,33306,26380,32866,160902,32859,29936,33027,30500,35209,157644,30035,159441,34729,34766,33224,34700,35401,36013,35651,30507,29944,34010,13877,27058,36262,null,35241,29800,28089,34753,147473,29927,15835,29046,24740,24988,15569,29026,24695,null,32625,166701,29264,24809,19326,21024,15384,146631,155351,161366,152881,137540,135934,170243,159196,159917,23745,156077,166415,145015,131310,157766,151310,17762,23327,156492,40784,40614,156267,12288,65292,12289,12290,65294,8231,65307,65306,65311,65281,65072,8230,8229,65104,65105,65106,183,65108,65109,65110,65111,65372,8211,65073,8212,65075,9588,65076,65103,65288,65289,65077,65078,65371,65373,65079,65080,12308,12309,65081,65082,12304,12305,65083,65084,12298,12299,65085,65086,12296,12297,65087,65088,12300,12301,65089,65090,12302,12303,65091,65092,65113,65114,65115,65116,65117,65118,8216,8217,8220,8221,12317,12318,8245,8242,65283,65286,65290,8251,167,12291,9675,9679,9651,9650,9678,9734,9733,9671,9670,9633,9632,9661,9660,12963,8453,175,65507,65343,717,65097,65098,65101,65102,65099,65100,65119,65120,65121,65291,65293,215,247,177,8730,65308,65310,65309,8806,8807,8800,8734,8786,8801,65122,65123,65124,65125,65126,65374,8745,8746,8869,8736,8735,8895,13266,13265,8747,8750,8757,8756,9792,9794,8853,8857,8593,8595,8592,8594,8598,8599,8601,8600,8741,8739,65295,65340,8725,65128,65284,65509,12306,65504,65505,65285,65312,8451,8457,65129,65130,65131,13269,13212,13213,13214,13262,13217,13198,13199,13252,176,20825,20827,20830,20829,20833,20835,21991,29929,31950,9601,9602,9603,9604,9605,9606,9607,9608,9615,9614,9613,9612,9611,9610,9609,9532,9524,9516,9508,9500,9620,9472,9474,9621,9484,9488,9492,9496,9581,9582,9584,9583,9552,9566,9578,9569,9698,9699,9701,9700,9585,9586,9587,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,12321,12322,12323,12324,12325,12326,12327,12328,12329,21313,21316,21317,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,729,713,714,711,715,9216,9217,9218,9219,9220,9221,9222,9223,9224,9225,9226,9227,9228,9229,9230,9231,9232,9233,9234,9235,9236,9237,9238,9239,9240,9241,9242,9243,9244,9245,9246,9247,9249,8364,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19968,20057,19969,19971,20035,20061,20102,20108,20154,20799,20837,20843,20960,20992,20993,21147,21269,21313,21340,21448,19977,19979,19976,19978,20011,20024,20961,20037,20040,20063,20062,20110,20129,20800,20995,21242,21315,21449,21475,22303,22763,22805,22823,22899,23376,23377,23379,23544,23567,23586,23608,23665,24029,24037,24049,24050,24051,24062,24178,24318,24331,24339,25165,19985,19984,19981,20013,20016,20025,20043,23609,20104,20113,20117,20114,20116,20130,20161,20160,20163,20166,20167,20173,20170,20171,20164,20803,20801,20839,20845,20846,20844,20887,20982,20998,20999,21000,21243,21246,21247,21270,21305,21320,21319,21317,21342,21380,21451,21450,21453,22764,22825,22827,22826,22829,23380,23569,23588,23610,23663,24052,24187,24319,24340,24341,24515,25096,25142,25163,25166,25903,25991,26007,26020,26041,26085,26352,26376,26408,27424,27490,27513,27595,27604,27611,27663,27700,28779,29226,29238,29243,29255,29273,29275,29356,29579,19993,19990,19989,19988,19992,20027,20045,20047,20046,20197,20184,20180,20181,20182,20183,20195,20196,20185,20190,20805,20804,20873,20874,20908,20985,20986,20984,21002,21152,21151,21253,21254,21271,21277,20191,21322,21321,21345,21344,21359,21358,21435,21487,21476,21491,21484,21486,21481,21480,21500,21496,21493,21483,21478,21482,21490,21489,21488,21477,21485,21499,22235,22234,22806,22830,22833,22900,22902,23381,23427,23612,24040,24039,24038,24066,24067,24179,24188,24321,24344,24343,24517,25098,25171,25172,25170,25169,26021,26086,26414,26412,26410,26411,26413,27491,27597,27665,27664,27704,27713,27712,27710,29359,29572,29577,29916,29926,29976,29983,29992,29993,30000,30001,30002,30003,30091,30333,30382,30399,30446,30683,30690,30707,31034,31166,31348,31435,19998,19999,20050,20051,20073,20121,20132,20134,20133,20223,20233,20249,20234,20245,20237,20240,20241,20239,20210,20214,20219,20208,20211,20221,20225,20235,20809,20807,20806,20808,20840,20849,20877,20912,21015,21009,21010,21006,21014,21155,21256,21281,21280,21360,21361,21513,21519,21516,21514,21520,21505,21515,21508,21521,21517,21512,21507,21518,21510,21522,22240,22238,22237,22323,22320,22312,22317,22316,22319,22313,22809,22810,22839,22840,22916,22904,22915,22909,22905,22914,22913,23383,23384,23431,23432,23429,23433,23546,23574,23673,24030,24070,24182,24180,24335,24347,24537,24534,25102,25100,25101,25104,25187,25179,25176,25910,26089,26088,26092,26093,26354,26355,26377,26429,26420,26417,26421,27425,27492,27515,27670,27741,27735,27737,27743,27744,27728,27733,27745,27739,27725,27726,28784,29279,29277,30334,31481,31859,31992,32566,32650,32701,32769,32771,32780,32786,32819,32895,32905,32907,32908,33251,33258,33267,33276,33292,33307,33311,33390,33394,33406,34411,34880,34892,34915,35199,38433,20018,20136,20301,20303,20295,20311,20318,20276,20315,20309,20272,20304,20305,20285,20282,20280,20291,20308,20284,20294,20323,20316,20320,20271,20302,20278,20313,20317,20296,20314,20812,20811,20813,20853,20918,20919,21029,21028,21033,21034,21032,21163,21161,21162,21164,21283,21363,21365,21533,21549,21534,21566,21542,21582,21543,21574,21571,21555,21576,21570,21531,21545,21578,21561,21563,21560,21550,21557,21558,21536,21564,21568,21553,21547,21535,21548,22250,22256,22244,22251,22346,22353,22336,22349,22343,22350,22334,22352,22351,22331,22767,22846,22941,22930,22952,22942,22947,22937,22934,22925,22948,22931,22922,22949,23389,23388,23386,23387,23436,23435,23439,23596,23616,23617,23615,23614,23696,23697,23700,23692,24043,24076,24207,24199,24202,24311,24324,24351,24420,24418,24439,24441,24536,24524,24535,24525,24561,24555,24568,24554,25106,25105,25220,25239,25238,25216,25206,25225,25197,25226,25212,25214,25209,25203,25234,25199,25240,25198,25237,25235,25233,25222,25913,25915,25912,26097,26356,26463,26446,26447,26448,26449,26460,26454,26462,26441,26438,26464,26451,26455,27493,27599,27714,27742,27801,27777,27784,27785,27781,27803,27754,27770,27792,27760,27788,27752,27798,27794,27773,27779,27762,27774,27764,27782,27766,27789,27796,27800,27778,28790,28796,28797,28792,29282,29281,29280,29380,29378,29590,29996,29995,30007,30008,30338,30447,30691,31169,31168,31167,31350,31995,32597,32918,32915,32925,32920,32923,32922,32946,33391,33426,33419,33421,35211,35282,35328,35895,35910,35925,35997,36196,36208,36275,36523,36554,36763,36784,36802,36806,36805,36804,24033,37009,37026,37034,37030,37027,37193,37318,37324,38450,38446,38449,38442,38444,20006,20054,20083,20107,20123,20126,20139,20140,20335,20381,20365,20339,20351,20332,20379,20363,20358,20355,20336,20341,20360,20329,20347,20374,20350,20367,20369,20346,20820,20818,20821,20841,20855,20854,20856,20925,20989,21051,21048,21047,21050,21040,21038,21046,21057,21182,21179,21330,21332,21331,21329,21350,21367,21368,21369,21462,21460,21463,21619,21621,21654,21624,21653,21632,21627,21623,21636,21650,21638,21628,21648,21617,21622,21644,21658,21602,21608,21643,21629,21646,22266,22403,22391,22378,22377,22369,22374,22372,22396,22812,22857,22855,22856,22852,22868,22974,22971,22996,22969,22958,22993,22982,22992,22989,22987,22995,22986,22959,22963,22994,22981,23391,23396,23395,23447,23450,23448,23452,23449,23451,23578,23624,23621,23622,23735,23713,23736,23721,23723,23729,23731,24088,24090,24086,24085,24091,24081,24184,24218,24215,24220,24213,24214,24310,24358,24359,24361,24448,24449,24447,24444,24541,24544,24573,24565,24575,24591,24596,24623,24629,24598,24618,24597,24609,24615,24617,24619,24603,25110,25109,25151,25150,25152,25215,25289,25292,25284,25279,25282,25273,25298,25307,25259,25299,25300,25291,25288,25256,25277,25276,25296,25305,25287,25293,25269,25306,25265,25304,25302,25303,25286,25260,25294,25918,26023,26044,26106,26132,26131,26124,26118,26114,26126,26112,26127,26133,26122,26119,26381,26379,26477,26507,26517,26481,26524,26483,26487,26503,26525,26519,26479,26480,26495,26505,26494,26512,26485,26522,26515,26492,26474,26482,27427,27494,27495,27519,27667,27675,27875,27880,27891,27825,27852,27877,27827,27837,27838,27836,27874,27819,27861,27859,27832,27844,27833,27841,27822,27863,27845,27889,27839,27835,27873,27867,27850,27820,27887,27868,27862,27872,28821,28814,28818,28810,28825,29228,29229,29240,29256,29287,29289,29376,29390,29401,29399,29392,29609,29608,29599,29611,29605,30013,30109,30105,30106,30340,30402,30450,30452,30693,30717,31038,31040,31041,31177,31176,31354,31353,31482,31998,32596,32652,32651,32773,32954,32933,32930,32945,32929,32939,32937,32948,32938,32943,33253,33278,33293,33459,33437,33433,33453,33469,33439,33465,33457,33452,33445,33455,33464,33443,33456,33470,33463,34382,34417,21021,34920,36555,36814,36820,36817,37045,37048,37041,37046,37319,37329,38263,38272,38428,38464,38463,38459,38468,38466,38585,38632,38738,38750,20127,20141,20142,20449,20405,20399,20415,20448,20433,20431,20445,20419,20406,20440,20447,20426,20439,20398,20432,20420,20418,20442,20430,20446,20407,20823,20882,20881,20896,21070,21059,21066,21069,21068,21067,21063,21191,21193,21187,21185,21261,21335,21371,21402,21467,21676,21696,21672,21710,21705,21688,21670,21683,21703,21698,21693,21674,21697,21700,21704,21679,21675,21681,21691,21673,21671,21695,22271,22402,22411,22432,22435,22434,22478,22446,22419,22869,22865,22863,22862,22864,23004,23000,23039,23011,23016,23043,23013,23018,23002,23014,23041,23035,23401,23459,23462,23460,23458,23461,23553,23630,23631,23629,23627,23769,23762,24055,24093,24101,24095,24189,24224,24230,24314,24328,24365,24421,24456,24453,24458,24459,24455,24460,24457,24594,24605,24608,24613,24590,24616,24653,24688,24680,24674,24646,24643,24684,24683,24682,24676,25153,25308,25366,25353,25340,25325,25345,25326,25341,25351,25329,25335,25327,25324,25342,25332,25361,25346,25919,25925,26027,26045,26082,26149,26157,26144,26151,26159,26143,26152,26161,26148,26359,26623,26579,26609,26580,26576,26604,26550,26543,26613,26601,26607,26564,26577,26548,26586,26597,26552,26575,26590,26611,26544,26585,26594,26589,26578,27498,27523,27526,27573,27602,27607,27679,27849,27915,27954,27946,27969,27941,27916,27953,27934,27927,27963,27965,27966,27958,27931,27893,27961,27943,27960,27945,27950,27957,27918,27947,28843,28858,28851,28844,28847,28845,28856,28846,28836,29232,29298,29295,29300,29417,29408,29409,29623,29642,29627,29618,29645,29632,29619,29978,29997,30031,30028,30030,30027,30123,30116,30117,30114,30115,30328,30342,30343,30344,30408,30406,30403,30405,30465,30457,30456,30473,30475,30462,30460,30471,30684,30722,30740,30732,30733,31046,31049,31048,31047,31161,31162,31185,31186,31179,31359,31361,31487,31485,31869,32002,32005,32000,32009,32007,32004,32006,32568,32654,32703,32772,32784,32781,32785,32822,32982,32997,32986,32963,32964,32972,32993,32987,32974,32990,32996,32989,33268,33314,33511,33539,33541,33507,33499,33510,33540,33509,33538,33545,33490,33495,33521,33537,33500,33492,33489,33502,33491,33503,33519,33542,34384,34425,34427,34426,34893,34923,35201,35284,35336,35330,35331,35998,36000,36212,36211,36276,36557,36556,36848,36838,36834,36842,36837,36845,36843,36836,36840,37066,37070,37057,37059,37195,37194,37325,38274,38480,38475,38476,38477,38754,38761,38859,38893,38899,38913,39080,39131,39135,39318,39321,20056,20147,20492,20493,20515,20463,20518,20517,20472,20521,20502,20486,20540,20511,20506,20498,20497,20474,20480,20500,20520,20465,20513,20491,20505,20504,20467,20462,20525,20522,20478,20523,20489,20860,20900,20901,20898,20941,20940,20934,20939,21078,21084,21076,21083,21085,21290,21375,21407,21405,21471,21736,21776,21761,21815,21756,21733,21746,21766,21754,21780,21737,21741,21729,21769,21742,21738,21734,21799,21767,21757,21775,22275,22276,22466,22484,22475,22467,22537,22799,22871,22872,22874,23057,23064,23068,23071,23067,23059,23020,23072,23075,23081,23077,23052,23049,23403,23640,23472,23475,23478,23476,23470,23477,23481,23480,23556,23633,23637,23632,23789,23805,23803,23786,23784,23792,23798,23809,23796,24046,24109,24107,24235,24237,24231,24369,24466,24465,24464,24665,24675,24677,24656,24661,24685,24681,24687,24708,24735,24730,24717,24724,24716,24709,24726,25159,25331,25352,25343,25422,25406,25391,25429,25410,25414,25423,25417,25402,25424,25405,25386,25387,25384,25421,25420,25928,25929,26009,26049,26053,26178,26185,26191,26179,26194,26188,26181,26177,26360,26388,26389,26391,26657,26680,26696,26694,26707,26681,26690,26708,26665,26803,26647,26700,26705,26685,26612,26704,26688,26684,26691,26666,26693,26643,26648,26689,27530,27529,27575,27683,27687,27688,27686,27684,27888,28010,28053,28040,28039,28006,28024,28023,27993,28051,28012,28041,28014,27994,28020,28009,28044,28042,28025,28037,28005,28052,28874,28888,28900,28889,28872,28879,29241,29305,29436,29433,29437,29432,29431,29574,29677,29705,29678,29664,29674,29662,30036,30045,30044,30042,30041,30142,30149,30151,30130,30131,30141,30140,30137,30146,30136,30347,30384,30410,30413,30414,30505,30495,30496,30504,30697,30768,30759,30776,30749,30772,30775,30757,30765,30752,30751,30770,31061,31056,31072,31071,31062,31070,31069,31063,31066,31204,31203,31207,31199,31206,31209,31192,31364,31368,31449,31494,31505,31881,32033,32023,32011,32010,32032,32034,32020,32016,32021,32026,32028,32013,32025,32027,32570,32607,32660,32709,32705,32774,32792,32789,32793,32791,32829,32831,33009,33026,33008,33029,33005,33012,33030,33016,33011,33032,33021,33034,33020,33007,33261,33260,33280,33296,33322,33323,33320,33324,33467,33579,33618,33620,33610,33592,33616,33609,33589,33588,33615,33586,33593,33590,33559,33600,33585,33576,33603,34388,34442,34474,34451,34468,34473,34444,34467,34460,34928,34935,34945,34946,34941,34937,35352,35344,35342,35340,35349,35338,35351,35347,35350,35343,35345,35912,35962,35961,36001,36002,36215,36524,36562,36564,36559,36785,36865,36870,36855,36864,36858,36852,36867,36861,36869,36856,37013,37089,37085,37090,37202,37197,37196,37336,37341,37335,37340,37337,38275,38498,38499,38497,38491,38493,38500,38488,38494,38587,39138,39340,39592,39640,39717,39730,39740,20094,20602,20605,20572,20551,20547,20556,20570,20553,20581,20598,20558,20565,20597,20596,20599,20559,20495,20591,20589,20828,20885,20976,21098,21103,21202,21209,21208,21205,21264,21263,21273,21311,21312,21310,21443,26364,21830,21866,21862,21828,21854,21857,21827,21834,21809,21846,21839,21845,21807,21860,21816,21806,21852,21804,21859,21811,21825,21847,22280,22283,22281,22495,22533,22538,22534,22496,22500,22522,22530,22581,22519,22521,22816,22882,23094,23105,23113,23142,23146,23104,23100,23138,23130,23110,23114,23408,23495,23493,23492,23490,23487,23494,23561,23560,23559,23648,23644,23645,23815,23814,23822,23835,23830,23842,23825,23849,23828,23833,23844,23847,23831,24034,24120,24118,24115,24119,24247,24248,24246,24245,24254,24373,24375,24407,24428,24425,24427,24471,24473,24478,24472,24481,24480,24476,24703,24739,24713,24736,24744,24779,24756,24806,24765,24773,24763,24757,24796,24764,24792,24789,24774,24799,24760,24794,24775,25114,25115,25160,25504,25511,25458,25494,25506,25509,25463,25447,25496,25514,25457,25513,25481,25475,25499,25451,25512,25476,25480,25497,25505,25516,25490,25487,25472,25467,25449,25448,25466,25949,25942,25937,25945,25943,21855,25935,25944,25941,25940,26012,26011,26028,26063,26059,26060,26062,26205,26202,26212,26216,26214,26206,26361,21207,26395,26753,26799,26786,26771,26805,26751,26742,26801,26791,26775,26800,26755,26820,26797,26758,26757,26772,26781,26792,26783,26785,26754,27442,27578,27627,27628,27691,28046,28092,28147,28121,28082,28129,28108,28132,28155,28154,28165,28103,28107,28079,28113,28078,28126,28153,28088,28151,28149,28101,28114,28186,28085,28122,28139,28120,28138,28145,28142,28136,28102,28100,28074,28140,28095,28134,28921,28937,28938,28925,28911,29245,29309,29313,29468,29467,29462,29459,29465,29575,29701,29706,29699,29702,29694,29709,29920,29942,29943,29980,29986,30053,30054,30050,30064,30095,30164,30165,30133,30154,30157,30350,30420,30418,30427,30519,30526,30524,30518,30520,30522,30827,30787,30798,31077,31080,31085,31227,31378,31381,31520,31528,31515,31532,31526,31513,31518,31534,31890,31895,31893,32070,32067,32113,32046,32057,32060,32064,32048,32051,32068,32047,32066,32050,32049,32573,32670,32666,32716,32718,32722,32796,32842,32838,33071,33046,33059,33067,33065,33072,33060,33282,33333,33335,33334,33337,33678,33694,33688,33656,33698,33686,33725,33707,33682,33674,33683,33673,33696,33655,33659,33660,33670,33703,34389,24426,34503,34496,34486,34500,34485,34502,34507,34481,34479,34505,34899,34974,34952,34987,34962,34966,34957,34955,35219,35215,35370,35357,35363,35365,35377,35373,35359,35355,35362,35913,35930,36009,36012,36011,36008,36010,36007,36199,36198,36286,36282,36571,36575,36889,36877,36890,36887,36899,36895,36893,36880,36885,36894,36896,36879,36898,36886,36891,36884,37096,37101,37117,37207,37326,37365,37350,37347,37351,37357,37353,38281,38506,38517,38515,38520,38512,38516,38518,38519,38508,38592,38634,38633,31456,31455,38914,38915,39770,40165,40565,40575,40613,40635,20642,20621,20613,20633,20625,20608,20630,20632,20634,26368,20977,21106,21108,21109,21097,21214,21213,21211,21338,21413,21883,21888,21927,21884,21898,21917,21912,21890,21916,21930,21908,21895,21899,21891,21939,21934,21919,21822,21938,21914,21947,21932,21937,21886,21897,21931,21913,22285,22575,22570,22580,22564,22576,22577,22561,22557,22560,22777,22778,22880,23159,23194,23167,23186,23195,23207,23411,23409,23506,23500,23507,23504,23562,23563,23601,23884,23888,23860,23879,24061,24133,24125,24128,24131,24190,24266,24257,24258,24260,24380,24429,24489,24490,24488,24785,24801,24754,24758,24800,24860,24867,24826,24853,24816,24827,24820,24936,24817,24846,24822,24841,24832,24850,25119,25161,25507,25484,25551,25536,25577,25545,25542,25549,25554,25571,25552,25569,25558,25581,25582,25462,25588,25578,25563,25682,25562,25593,25950,25958,25954,25955,26001,26000,26031,26222,26224,26228,26230,26223,26257,26234,26238,26231,26366,26367,26399,26397,26874,26837,26848,26840,26839,26885,26847,26869,26862,26855,26873,26834,26866,26851,26827,26829,26893,26898,26894,26825,26842,26990,26875,27454,27450,27453,27544,27542,27580,27631,27694,27695,27692,28207,28216,28244,28193,28210,28263,28234,28192,28197,28195,28187,28251,28248,28196,28246,28270,28205,28198,28271,28212,28237,28218,28204,28227,28189,28222,28363,28297,28185,28238,28259,28228,28274,28265,28255,28953,28954,28966,28976,28961,28982,29038,28956,29260,29316,29312,29494,29477,29492,29481,29754,29738,29747,29730,29733,29749,29750,29748,29743,29723,29734,29736,29989,29990,30059,30058,30178,30171,30179,30169,30168,30174,30176,30331,30332,30358,30355,30388,30428,30543,30701,30813,30828,30831,31245,31240,31243,31237,31232,31384,31383,31382,31461,31459,31561,31574,31558,31568,31570,31572,31565,31563,31567,31569,31903,31909,32094,32080,32104,32085,32043,32110,32114,32097,32102,32098,32112,32115,21892,32724,32725,32779,32850,32901,33109,33108,33099,33105,33102,33081,33094,33086,33100,33107,33140,33298,33308,33769,33795,33784,33805,33760,33733,33803,33729,33775,33777,33780,33879,33802,33776,33804,33740,33789,33778,33738,33848,33806,33796,33756,33799,33748,33759,34395,34527,34521,34541,34516,34523,34532,34512,34526,34903,35009,35010,34993,35203,35222,35387,35424,35413,35422,35388,35393,35412,35419,35408,35398,35380,35386,35382,35414,35937,35970,36015,36028,36019,36029,36033,36027,36032,36020,36023,36022,36031,36024,36234,36229,36225,36302,36317,36299,36314,36305,36300,36315,36294,36603,36600,36604,36764,36910,36917,36913,36920,36914,36918,37122,37109,37129,37118,37219,37221,37327,37396,37397,37411,37385,37406,37389,37392,37383,37393,38292,38287,38283,38289,38291,38290,38286,38538,38542,38539,38525,38533,38534,38541,38514,38532,38593,38597,38596,38598,38599,38639,38642,38860,38917,38918,38920,39143,39146,39151,39145,39154,39149,39342,39341,40643,40653,40657,20098,20653,20661,20658,20659,20677,20670,20652,20663,20667,20655,20679,21119,21111,21117,21215,21222,21220,21218,21219,21295,21983,21992,21971,21990,21966,21980,21959,21969,21987,21988,21999,21978,21985,21957,21958,21989,21961,22290,22291,22622,22609,22616,22615,22618,22612,22635,22604,22637,22602,22626,22610,22603,22887,23233,23241,23244,23230,23229,23228,23219,23234,23218,23913,23919,24140,24185,24265,24264,24338,24409,24492,24494,24858,24847,24904,24863,24819,24859,24825,24833,24840,24910,24908,24900,24909,24894,24884,24871,24845,24838,24887,25121,25122,25619,25662,25630,25642,25645,25661,25644,25615,25628,25620,25613,25654,25622,25623,25606,25964,26015,26032,26263,26249,26247,26248,26262,26244,26264,26253,26371,27028,26989,26970,26999,26976,26964,26997,26928,27010,26954,26984,26987,26974,26963,27001,27014,26973,26979,26971,27463,27506,27584,27583,27603,27645,28322,28335,28371,28342,28354,28304,28317,28359,28357,28325,28312,28348,28346,28331,28369,28310,28316,28356,28372,28330,28327,28340,29006,29017,29033,29028,29001,29031,29020,29036,29030,29004,29029,29022,28998,29032,29014,29242,29266,29495,29509,29503,29502,29807,29786,29781,29791,29790,29761,29759,29785,29787,29788,30070,30072,30208,30192,30209,30194,30193,30202,30207,30196,30195,30430,30431,30555,30571,30566,30558,30563,30585,30570,30572,30556,30565,30568,30562,30702,30862,30896,30871,30872,30860,30857,30844,30865,30867,30847,31098,31103,31105,33836,31165,31260,31258,31264,31252,31263,31262,31391,31392,31607,31680,31584,31598,31591,31921,31923,31925,32147,32121,32145,32129,32143,32091,32622,32617,32618,32626,32681,32680,32676,32854,32856,32902,32900,33137,33136,33144,33125,33134,33139,33131,33145,33146,33126,33285,33351,33922,33911,33853,33841,33909,33894,33899,33865,33900,33883,33852,33845,33889,33891,33897,33901,33862,34398,34396,34399,34553,34579,34568,34567,34560,34558,34555,34562,34563,34566,34570,34905,35039,35028,35033,35036,35032,35037,35041,35018,35029,35026,35228,35299,35435,35442,35443,35430,35433,35440,35463,35452,35427,35488,35441,35461,35437,35426,35438,35436,35449,35451,35390,35432,35938,35978,35977,36042,36039,36040,36036,36018,36035,36034,36037,36321,36319,36328,36335,36339,36346,36330,36324,36326,36530,36611,36617,36606,36618,36767,36786,36939,36938,36947,36930,36948,36924,36949,36944,36935,36943,36942,36941,36945,36926,36929,37138,37143,37228,37226,37225,37321,37431,37463,37432,37437,37440,37438,37467,37451,37476,37457,37428,37449,37453,37445,37433,37439,37466,38296,38552,38548,38549,38605,38603,38601,38602,38647,38651,38649,38646,38742,38772,38774,38928,38929,38931,38922,38930,38924,39164,39156,39165,39166,39347,39345,39348,39649,40169,40578,40718,40723,40736,20711,20718,20709,20694,20717,20698,20693,20687,20689,20721,20686,20713,20834,20979,21123,21122,21297,21421,22014,22016,22043,22039,22013,22036,22022,22025,22029,22030,22007,22038,22047,22024,22032,22006,22296,22294,22645,22654,22659,22675,22666,22649,22661,22653,22781,22821,22818,22820,22890,22889,23265,23270,23273,23255,23254,23256,23267,23413,23518,23527,23521,23525,23526,23528,23522,23524,23519,23565,23650,23940,23943,24155,24163,24149,24151,24148,24275,24278,24330,24390,24432,24505,24903,24895,24907,24951,24930,24931,24927,24922,24920,24949,25130,25735,25688,25684,25764,25720,25695,25722,25681,25703,25652,25709,25723,25970,26017,26071,26070,26274,26280,26269,27036,27048,27029,27073,27054,27091,27083,27035,27063,27067,27051,27060,27088,27085,27053,27084,27046,27075,27043,27465,27468,27699,28467,28436,28414,28435,28404,28457,28478,28448,28460,28431,28418,28450,28415,28399,28422,28465,28472,28466,28451,28437,28459,28463,28552,28458,28396,28417,28402,28364,28407,29076,29081,29053,29066,29060,29074,29246,29330,29334,29508,29520,29796,29795,29802,29808,29805,29956,30097,30247,30221,30219,30217,30227,30433,30435,30596,30589,30591,30561,30913,30879,30887,30899,30889,30883,31118,31119,31117,31278,31281,31402,31401,31469,31471,31649,31637,31627,31605,31639,31645,31636,31631,31672,31623,31620,31929,31933,31934,32187,32176,32156,32189,32190,32160,32202,32180,32178,32177,32186,32162,32191,32181,32184,32173,32210,32199,32172,32624,32736,32737,32735,32862,32858,32903,33104,33152,33167,33160,33162,33151,33154,33255,33274,33287,33300,33310,33355,33993,33983,33990,33988,33945,33950,33970,33948,33995,33976,33984,34003,33936,33980,34001,33994,34623,34588,34619,34594,34597,34612,34584,34645,34615,34601,35059,35074,35060,35065,35064,35069,35048,35098,35055,35494,35468,35486,35491,35469,35489,35475,35492,35498,35493,35496,35480,35473,35482,35495,35946,35981,35980,36051,36049,36050,36203,36249,36245,36348,36628,36626,36629,36627,36771,36960,36952,36956,36963,36953,36958,36962,36957,36955,37145,37144,37150,37237,37240,37239,37236,37496,37504,37509,37528,37526,37499,37523,37532,37544,37500,37521,38305,38312,38313,38307,38309,38308,38553,38556,38555,38604,38610,38656,38780,38789,38902,38935,38936,39087,39089,39171,39173,39180,39177,39361,39599,39600,39654,39745,39746,40180,40182,40179,40636,40763,40778,20740,20736,20731,20725,20729,20738,20744,20745,20741,20956,21127,21128,21129,21133,21130,21232,21426,22062,22075,22073,22066,22079,22068,22057,22099,22094,22103,22132,22070,22063,22064,22656,22687,22686,22707,22684,22702,22697,22694,22893,23305,23291,23307,23285,23308,23304,23534,23532,23529,23531,23652,23653,23965,23956,24162,24159,24161,24290,24282,24287,24285,24291,24288,24392,24433,24503,24501,24950,24935,24942,24925,24917,24962,24956,24944,24939,24958,24999,24976,25003,24974,25004,24986,24996,24980,25006,25134,25705,25711,25721,25758,25778,25736,25744,25776,25765,25747,25749,25769,25746,25774,25773,25771,25754,25772,25753,25762,25779,25973,25975,25976,26286,26283,26292,26289,27171,27167,27112,27137,27166,27161,27133,27169,27155,27146,27123,27138,27141,27117,27153,27472,27470,27556,27589,27590,28479,28540,28548,28497,28518,28500,28550,28525,28507,28536,28526,28558,28538,28528,28516,28567,28504,28373,28527,28512,28511,29087,29100,29105,29096,29270,29339,29518,29527,29801,29835,29827,29822,29824,30079,30240,30249,30239,30244,30246,30241,30242,30362,30394,30436,30606,30599,30604,30609,30603,30923,30917,30906,30922,30910,30933,30908,30928,31295,31292,31296,31293,31287,31291,31407,31406,31661,31665,31684,31668,31686,31687,31681,31648,31692,31946,32224,32244,32239,32251,32216,32236,32221,32232,32227,32218,32222,32233,32158,32217,32242,32249,32629,32631,32687,32745,32806,33179,33180,33181,33184,33178,33176,34071,34109,34074,34030,34092,34093,34067,34065,34083,34081,34068,34028,34085,34047,34054,34690,34676,34678,34656,34662,34680,34664,34649,34647,34636,34643,34907,34909,35088,35079,35090,35091,35093,35082,35516,35538,35527,35524,35477,35531,35576,35506,35529,35522,35519,35504,35542,35533,35510,35513,35547,35916,35918,35948,36064,36062,36070,36068,36076,36077,36066,36067,36060,36074,36065,36205,36255,36259,36395,36368,36381,36386,36367,36393,36383,36385,36382,36538,36637,36635,36639,36649,36646,36650,36636,36638,36645,36969,36974,36968,36973,36983,37168,37165,37159,37169,37255,37257,37259,37251,37573,37563,37559,37610,37548,37604,37569,37555,37564,37586,37575,37616,37554,38317,38321,38660,38662,38663,38665,38752,38797,38795,38799,38945,38955,38940,39091,39178,39187,39186,39192,39389,39376,39391,39387,39377,39381,39378,39385,39607,39662,39663,39719,39749,39748,39799,39791,40198,40201,40195,40617,40638,40654,22696,40786,20754,20760,20756,20752,20757,20864,20906,20957,21137,21139,21235,22105,22123,22137,22121,22116,22136,22122,22120,22117,22129,22127,22124,22114,22134,22721,22718,22727,22725,22894,23325,23348,23416,23536,23566,24394,25010,24977,25001,24970,25037,25014,25022,25034,25032,25136,25797,25793,25803,25787,25788,25818,25796,25799,25794,25805,25791,25810,25812,25790,25972,26310,26313,26297,26308,26311,26296,27197,27192,27194,27225,27243,27224,27193,27204,27234,27233,27211,27207,27189,27231,27208,27481,27511,27653,28610,28593,28577,28611,28580,28609,28583,28595,28608,28601,28598,28582,28576,28596,29118,29129,29136,29138,29128,29141,29113,29134,29145,29148,29123,29124,29544,29852,29859,29848,29855,29854,29922,29964,29965,30260,30264,30266,30439,30437,30624,30622,30623,30629,30952,30938,30956,30951,31142,31309,31310,31302,31308,31307,31418,31705,31761,31689,31716,31707,31713,31721,31718,31957,31958,32266,32273,32264,32283,32291,32286,32285,32265,32272,32633,32690,32752,32753,32750,32808,33203,33193,33192,33275,33288,33368,33369,34122,34137,34120,34152,34153,34115,34121,34157,34154,34142,34691,34719,34718,34722,34701,34913,35114,35122,35109,35115,35105,35242,35238,35558,35578,35563,35569,35584,35548,35559,35566,35582,35585,35586,35575,35565,35571,35574,35580,35947,35949,35987,36084,36420,36401,36404,36418,36409,36405,36667,36655,36664,36659,36776,36774,36981,36980,36984,36978,36988,36986,37172,37266,37664,37686,37624,37683,37679,37666,37628,37675,37636,37658,37648,37670,37665,37653,37678,37657,38331,38567,38568,38570,38613,38670,38673,38678,38669,38675,38671,38747,38748,38758,38808,38960,38968,38971,38967,38957,38969,38948,39184,39208,39198,39195,39201,39194,39405,39394,39409,39608,39612,39675,39661,39720,39825,40213,40227,40230,40232,40210,40219,40664,40660,40845,40860,20778,20767,20769,20786,21237,22158,22144,22160,22149,22151,22159,22741,22739,22737,22734,23344,23338,23332,23418,23607,23656,23996,23994,23997,23992,24171,24396,24509,25033,25026,25031,25062,25035,25138,25140,25806,25802,25816,25824,25840,25830,25836,25841,25826,25837,25986,25987,26329,26326,27264,27284,27268,27298,27292,27355,27299,27262,27287,27280,27296,27484,27566,27610,27656,28632,28657,28639,28640,28635,28644,28651,28655,28544,28652,28641,28649,28629,28654,28656,29159,29151,29166,29158,29157,29165,29164,29172,29152,29237,29254,29552,29554,29865,29872,29862,29864,30278,30274,30284,30442,30643,30634,30640,30636,30631,30637,30703,30967,30970,30964,30959,30977,31143,31146,31319,31423,31751,31757,31742,31735,31756,31712,31968,31964,31966,31970,31967,31961,31965,32302,32318,32326,32311,32306,32323,32299,32317,32305,32325,32321,32308,32313,32328,32309,32319,32303,32580,32755,32764,32881,32882,32880,32879,32883,33222,33219,33210,33218,33216,33215,33213,33225,33214,33256,33289,33393,34218,34180,34174,34204,34193,34196,34223,34203,34183,34216,34186,34407,34752,34769,34739,34770,34758,34731,34747,34746,34760,34763,35131,35126,35140,35128,35133,35244,35598,35607,35609,35611,35594,35616,35613,35588,35600,35905,35903,35955,36090,36093,36092,36088,36091,36264,36425,36427,36424,36426,36676,36670,36674,36677,36671,36991,36989,36996,36993,36994,36992,37177,37283,37278,37276,37709,37762,37672,37749,37706,37733,37707,37656,37758,37740,37723,37744,37722,37716,38346,38347,38348,38344,38342,38577,38584,38614,38684,38686,38816,38867,38982,39094,39221,39425,39423,39854,39851,39850,39853,40251,40255,40587,40655,40670,40668,40669,40667,40766,40779,21474,22165,22190,22745,22744,23352,24413,25059,25139,25844,25842,25854,25862,25850,25851,25847,26039,26332,26406,27315,27308,27331,27323,27320,27330,27310,27311,27487,27512,27567,28681,28683,28670,28678,28666,28689,28687,29179,29180,29182,29176,29559,29557,29863,29887,29973,30294,30296,30290,30653,30655,30651,30652,30990,31150,31329,31330,31328,31428,31429,31787,31783,31786,31774,31779,31777,31975,32340,32341,32350,32346,32353,32338,32345,32584,32761,32763,32887,32886,33229,33231,33290,34255,34217,34253,34256,34249,34224,34234,34233,34214,34799,34796,34802,34784,35206,35250,35316,35624,35641,35628,35627,35920,36101,36441,36451,36454,36452,36447,36437,36544,36681,36685,36999,36995,37000,37291,37292,37328,37780,37770,37782,37794,37811,37806,37804,37808,37784,37786,37783,38356,38358,38352,38357,38626,38620,38617,38619,38622,38692,38819,38822,38829,38905,38989,38991,38988,38990,38995,39098,39230,39231,39229,39214,39333,39438,39617,39683,39686,39759,39758,39757,39882,39881,39933,39880,39872,40273,40285,40288,40672,40725,40748,20787,22181,22750,22751,22754,23541,40848,24300,25074,25079,25078,25077,25856,25871,26336,26333,27365,27357,27354,27347,28699,28703,28712,28698,28701,28693,28696,29190,29197,29272,29346,29560,29562,29885,29898,29923,30087,30086,30303,30305,30663,31001,31153,31339,31337,31806,31807,31800,31805,31799,31808,32363,32365,32377,32361,32362,32645,32371,32694,32697,32696,33240,34281,34269,34282,34261,34276,34277,34295,34811,34821,34829,34809,34814,35168,35167,35158,35166,35649,35676,35672,35657,35674,35662,35663,35654,35673,36104,36106,36476,36466,36487,36470,36460,36474,36468,36692,36686,36781,37002,37003,37297,37294,37857,37841,37855,37827,37832,37852,37853,37846,37858,37837,37848,37860,37847,37864,38364,38580,38627,38698,38695,38753,38876,38907,39006,39000,39003,39100,39237,39241,39446,39449,39693,39912,39911,39894,39899,40329,40289,40306,40298,40300,40594,40599,40595,40628,21240,22184,22199,22198,22196,22204,22756,23360,23363,23421,23542,24009,25080,25082,25880,25876,25881,26342,26407,27372,28734,28720,28722,29200,29563,29903,30306,30309,31014,31018,31020,31019,31431,31478,31820,31811,31821,31983,31984,36782,32381,32380,32386,32588,32768,33242,33382,34299,34297,34321,34298,34310,34315,34311,34314,34836,34837,35172,35258,35320,35696,35692,35686,35695,35679,35691,36111,36109,36489,36481,36485,36482,37300,37323,37912,37891,37885,38369,38704,39108,39250,39249,39336,39467,39472,39479,39477,39955,39949,40569,40629,40680,40751,40799,40803,40801,20791,20792,22209,22208,22210,22804,23660,24013,25084,25086,25885,25884,26005,26345,27387,27396,27386,27570,28748,29211,29351,29910,29908,30313,30675,31824,32399,32396,32700,34327,34349,34330,34851,34850,34849,34847,35178,35180,35261,35700,35703,35709,36115,36490,36493,36491,36703,36783,37306,37934,37939,37941,37946,37944,37938,37931,38370,38712,38713,38706,38911,39015,39013,39255,39493,39491,39488,39486,39631,39764,39761,39981,39973,40367,40372,40386,40376,40605,40687,40729,40796,40806,40807,20796,20795,22216,22218,22217,23423,24020,24018,24398,25087,25892,27402,27489,28753,28760,29568,29924,30090,30318,30316,31155,31840,31839,32894,32893,33247,35186,35183,35324,35712,36118,36119,36497,36499,36705,37192,37956,37969,37970,38717,38718,38851,38849,39019,39253,39509,39501,39634,39706,40009,39985,39998,39995,40403,40407,40756,40812,40810,40852,22220,24022,25088,25891,25899,25898,26348,27408,29914,31434,31844,31843,31845,32403,32406,32404,33250,34360,34367,34865,35722,37008,37007,37987,37984,37988,38760,39023,39260,39514,39515,39511,39635,39636,39633,40020,40023,40022,40421,40607,40692,22225,22761,25900,28766,30321,30322,30679,32592,32648,34870,34873,34914,35731,35730,35734,33399,36123,37312,37994,38722,38728,38724,38854,39024,39519,39714,39768,40031,40441,40442,40572,40573,40711,40823,40818,24307,27414,28771,31852,31854,34875,35264,36513,37313,38002,38000,39025,39262,39638,39715,40652,28772,30682,35738,38007,38857,39522,39525,32412,35740,36522,37317,38013,38014,38012,40055,40056,40695,35924,38015,40474,29224,39530,39729,40475,40478,31858,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,20022,20031,20101,20128,20866,20886,20907,21241,21304,21353,21430,22794,23424,24027,12083,24191,24308,24400,24417,25908,26080,30098,30326,36789,38582,168,710,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,65339,65341,10045,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8679,8632,8633,12751,131276,20058,131210,20994,17553,40880,20872,40881,161287,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65506,65508,65287,65282,12849,8470,8481,12443,12444,11904,11908,11910,11911,11912,11914,11916,11917,11925,11932,11933,11941,11943,11946,11948,11950,11958,11964,11966,11974,11978,11980,11981,11983,11990,11991,11998,12003,null,null,null,643,592,603,596,629,339,248,331,650,618,20034,20060,20981,21274,21378,19975,19980,20039,20109,22231,64012,23662,24435,19983,20871,19982,20014,20115,20162,20169,20168,20888,21244,21356,21433,22304,22787,22828,23568,24063,26081,27571,27596,27668,29247,20017,20028,20200,20188,20201,20193,20189,20186,21004,21276,21324,22306,22307,22807,22831,23425,23428,23570,23611,23668,23667,24068,24192,24194,24521,25097,25168,27669,27702,27715,27711,27707,29358,29360,29578,31160,32906,38430,20238,20248,20268,20213,20244,20209,20224,20215,20232,20253,20226,20229,20258,20243,20228,20212,20242,20913,21011,21001,21008,21158,21282,21279,21325,21386,21511,22241,22239,22318,22314,22324,22844,22912,22908,22917,22907,22910,22903,22911,23382,23573,23589,23676,23674,23675,23678,24031,24181,24196,24322,24346,24436,24533,24532,24527,25180,25182,25188,25185,25190,25186,25177,25184,25178,25189,26095,26094,26430,26425,26424,26427,26426,26431,26428,26419,27672,27718,27730,27740,27727,27722,27732,27723,27724,28785,29278,29364,29365,29582,29994,30335,31349,32593,33400,33404,33408,33405,33407,34381,35198,37017,37015,37016,37019,37012,38434,38436,38432,38435,20310,20283,20322,20297,20307,20324,20286,20327,20306,20319,20289,20312,20269,20275,20287,20321,20879,20921,21020,21022,21025,21165,21166,21257,21347,21362,21390,21391,21552,21559,21546,21588,21573,21529,21532,21541,21528,21565,21583,21569,21544,21540,21575,22254,22247,22245,22337,22341,22348,22345,22347,22354,22790,22848,22950,22936,22944,22935,22926,22946,22928,22927,22951,22945,23438,23442,23592,23594,23693,23695,23688,23691,23689,23698,23690,23686,23699,23701,24032,24074,24078,24203,24201,24204,24200,24205,24325,24349,24440,24438,24530,24529,24528,24557,24552,24558,24563,24545,24548,24547,24570,24559,24567,24571,24576,24564,25146,25219,25228,25230,25231,25236,25223,25201,25211,25210,25200,25217,25224,25207,25213,25202,25204,25911,26096,26100,26099,26098,26101,26437,26439,26457,26453,26444,26440,26461,26445,26458,26443,27600,27673,27674,27768,27751,27755,27780,27787,27791,27761,27759,27753,27802,27757,27783,27797,27804,27750,27763,27749,27771,27790,28788,28794,29283,29375,29373,29379,29382,29377,29370,29381,29589,29591,29587,29588,29586,30010,30009,30100,30101,30337,31037,32820,32917,32921,32912,32914,32924,33424,33423,33413,33422,33425,33427,33418,33411,33412,35960,36809,36799,37023,37025,37029,37022,37031,37024,38448,38440,38447,38445,20019,20376,20348,20357,20349,20352,20359,20342,20340,20361,20356,20343,20300,20375,20330,20378,20345,20353,20344,20368,20380,20372,20382,20370,20354,20373,20331,20334,20894,20924,20926,21045,21042,21043,21062,21041,21180,21258,21259,21308,21394,21396,21639,21631,21633,21649,21634,21640,21611,21626,21630,21605,21612,21620,21606,21645,21615,21601,21600,21656,21603,21607,21604,22263,22265,22383,22386,22381,22379,22385,22384,22390,22400,22389,22395,22387,22388,22370,22376,22397,22796,22853,22965,22970,22991,22990,22962,22988,22977,22966,22972,22979,22998,22961,22973,22976,22984,22964,22983,23394,23397,23443,23445,23620,23623,23726,23716,23712,23733,23727,23720,23724,23711,23715,23725,23714,23722,23719,23709,23717,23734,23728,23718,24087,24084,24089,24360,24354,24355,24356,24404,24450,24446,24445,24542,24549,24621,24614,24601,24626,24587,24628,24586,24599,24627,24602,24606,24620,24610,24589,24592,24622,24595,24593,24588,24585,24604,25108,25149,25261,25268,25297,25278,25258,25270,25290,25262,25267,25263,25275,25257,25264,25272,25917,26024,26043,26121,26108,26116,26130,26120,26107,26115,26123,26125,26117,26109,26129,26128,26358,26378,26501,26476,26510,26514,26486,26491,26520,26502,26500,26484,26509,26508,26490,26527,26513,26521,26499,26493,26497,26488,26489,26516,27429,27520,27518,27614,27677,27795,27884,27883,27886,27865,27830,27860,27821,27879,27831,27856,27842,27834,27843,27846,27885,27890,27858,27869,27828,27786,27805,27776,27870,27840,27952,27853,27847,27824,27897,27855,27881,27857,28820,28824,28805,28819,28806,28804,28817,28822,28802,28826,28803,29290,29398,29387,29400,29385,29404,29394,29396,29402,29388,29393,29604,29601,29613,29606,29602,29600,29612,29597,29917,29928,30015,30016,30014,30092,30104,30383,30451,30449,30448,30453,30712,30716,30713,30715,30714,30711,31042,31039,31173,31352,31355,31483,31861,31997,32821,32911,32942,32931,32952,32949,32941,33312,33440,33472,33451,33434,33432,33435,33461,33447,33454,33468,33438,33466,33460,33448,33441,33449,33474,33444,33475,33462,33442,34416,34415,34413,34414,35926,36818,36811,36819,36813,36822,36821,36823,37042,37044,37039,37043,37040,38457,38461,38460,38458,38467,20429,20421,20435,20402,20425,20427,20417,20436,20444,20441,20411,20403,20443,20423,20438,20410,20416,20409,20460,21060,21065,21184,21186,21309,21372,21399,21398,21401,21400,21690,21665,21677,21669,21711,21699,33549,21687,21678,21718,21686,21701,21702,21664,21616,21692,21666,21694,21618,21726,21680,22453,22430,22431,22436,22412,22423,22429,22427,22420,22424,22415,22425,22437,22426,22421,22772,22797,22867,23009,23006,23022,23040,23025,23005,23034,23037,23036,23030,23012,23026,23031,23003,23017,23027,23029,23008,23038,23028,23021,23464,23628,23760,23768,23756,23767,23755,23771,23774,23770,23753,23751,23754,23766,23763,23764,23759,23752,23750,23758,23775,23800,24057,24097,24098,24099,24096,24100,24240,24228,24226,24219,24227,24229,24327,24366,24406,24454,24631,24633,24660,24690,24670,24645,24659,24647,24649,24667,24652,24640,24642,24671,24612,24644,24664,24678,24686,25154,25155,25295,25357,25355,25333,25358,25347,25323,25337,25359,25356,25336,25334,25344,25363,25364,25338,25365,25339,25328,25921,25923,26026,26047,26166,26145,26162,26165,26140,26150,26146,26163,26155,26170,26141,26164,26169,26158,26383,26384,26561,26610,26568,26554,26588,26555,26616,26584,26560,26551,26565,26603,26596,26591,26549,26573,26547,26615,26614,26606,26595,26562,26553,26574,26599,26608,26546,26620,26566,26605,26572,26542,26598,26587,26618,26569,26570,26563,26602,26571,27432,27522,27524,27574,27606,27608,27616,27680,27681,27944,27956,27949,27935,27964,27967,27922,27914,27866,27955,27908,27929,27962,27930,27921,27904,27933,27970,27905,27928,27959,27907,27919,27968,27911,27936,27948,27912,27938,27913,27920,28855,28831,28862,28849,28848,28833,28852,28853,28841,29249,29257,29258,29292,29296,29299,29294,29386,29412,29416,29419,29407,29418,29414,29411,29573,29644,29634,29640,29637,29625,29622,29621,29620,29675,29631,29639,29630,29635,29638,29624,29643,29932,29934,29998,30023,30024,30119,30122,30329,30404,30472,30467,30468,30469,30474,30455,30459,30458,30695,30696,30726,30737,30738,30725,30736,30735,30734,30729,30723,30739,31050,31052,31051,31045,31044,31189,31181,31183,31190,31182,31360,31358,31441,31488,31489,31866,31864,31865,31871,31872,31873,32003,32008,32001,32600,32657,32653,32702,32775,32782,32783,32788,32823,32984,32967,32992,32977,32968,32962,32976,32965,32995,32985,32988,32970,32981,32969,32975,32983,32998,32973,33279,33313,33428,33497,33534,33529,33543,33512,33536,33493,33594,33515,33494,33524,33516,33505,33522,33525,33548,33531,33526,33520,33514,33508,33504,33530,33523,33517,34423,34420,34428,34419,34881,34894,34919,34922,34921,35283,35332,35335,36210,36835,36833,36846,36832,37105,37053,37055,37077,37061,37054,37063,37067,37064,37332,37331,38484,38479,38481,38483,38474,38478,20510,20485,20487,20499,20514,20528,20507,20469,20468,20531,20535,20524,20470,20471,20503,20508,20512,20519,20533,20527,20529,20494,20826,20884,20883,20938,20932,20933,20936,20942,21089,21082,21074,21086,21087,21077,21090,21197,21262,21406,21798,21730,21783,21778,21735,21747,21732,21786,21759,21764,21768,21739,21777,21765,21745,21770,21755,21751,21752,21728,21774,21763,21771,22273,22274,22476,22578,22485,22482,22458,22470,22461,22460,22456,22454,22463,22471,22480,22457,22465,22798,22858,23065,23062,23085,23086,23061,23055,23063,23050,23070,23091,23404,23463,23469,23468,23555,23638,23636,23788,23807,23790,23793,23799,23808,23801,24105,24104,24232,24238,24234,24236,24371,24368,24423,24669,24666,24679,24641,24738,24712,24704,24722,24705,24733,24707,24725,24731,24727,24711,24732,24718,25113,25158,25330,25360,25430,25388,25412,25413,25398,25411,25572,25401,25419,25418,25404,25385,25409,25396,25432,25428,25433,25389,25415,25395,25434,25425,25400,25431,25408,25416,25930,25926,26054,26051,26052,26050,26186,26207,26183,26193,26386,26387,26655,26650,26697,26674,26675,26683,26699,26703,26646,26673,26652,26677,26667,26669,26671,26702,26692,26676,26653,26642,26644,26662,26664,26670,26701,26682,26661,26656,27436,27439,27437,27441,27444,27501,32898,27528,27622,27620,27624,27619,27618,27623,27685,28026,28003,28004,28022,27917,28001,28050,27992,28002,28013,28015,28049,28045,28143,28031,28038,27998,28007,28000,28055,28016,28028,27999,28034,28056,27951,28008,28043,28030,28032,28036,27926,28035,28027,28029,28021,28048,28892,28883,28881,28893,28875,32569,28898,28887,28882,28894,28896,28884,28877,28869,28870,28871,28890,28878,28897,29250,29304,29303,29302,29440,29434,29428,29438,29430,29427,29435,29441,29651,29657,29669,29654,29628,29671,29667,29673,29660,29650,29659,29652,29661,29658,29655,29656,29672,29918,29919,29940,29941,29985,30043,30047,30128,30145,30139,30148,30144,30143,30134,30138,30346,30409,30493,30491,30480,30483,30482,30499,30481,30485,30489,30490,30498,30503,30755,30764,30754,30773,30767,30760,30766,30763,30753,30761,30771,30762,30769,31060,31067,31055,31068,31059,31058,31057,31211,31212,31200,31214,31213,31210,31196,31198,31197,31366,31369,31365,31371,31372,31370,31367,31448,31504,31492,31507,31493,31503,31496,31498,31502,31497,31506,31876,31889,31882,31884,31880,31885,31877,32030,32029,32017,32014,32024,32022,32019,32031,32018,32015,32012,32604,32609,32606,32608,32605,32603,32662,32658,32707,32706,32704,32790,32830,32825,33018,33010,33017,33013,33025,33019,33024,33281,33327,33317,33587,33581,33604,33561,33617,33573,33622,33599,33601,33574,33564,33570,33602,33614,33563,33578,33544,33596,33613,33558,33572,33568,33591,33583,33577,33607,33605,33612,33619,33566,33580,33611,33575,33608,34387,34386,34466,34472,34454,34445,34449,34462,34439,34455,34438,34443,34458,34437,34469,34457,34465,34471,34453,34456,34446,34461,34448,34452,34883,34884,34925,34933,34934,34930,34944,34929,34943,34927,34947,34942,34932,34940,35346,35911,35927,35963,36004,36003,36214,36216,36277,36279,36278,36561,36563,36862,36853,36866,36863,36859,36868,36860,36854,37078,37088,37081,37082,37091,37087,37093,37080,37083,37079,37084,37092,37200,37198,37199,37333,37346,37338,38492,38495,38588,39139,39647,39727,20095,20592,20586,20577,20574,20576,20563,20555,20573,20594,20552,20557,20545,20571,20554,20578,20501,20549,20575,20585,20587,20579,20580,20550,20544,20590,20595,20567,20561,20944,21099,21101,21100,21102,21206,21203,21293,21404,21877,21878,21820,21837,21840,21812,21802,21841,21858,21814,21813,21808,21842,21829,21772,21810,21861,21838,21817,21832,21805,21819,21824,21835,22282,22279,22523,22548,22498,22518,22492,22516,22528,22509,22525,22536,22520,22539,22515,22479,22535,22510,22499,22514,22501,22508,22497,22542,22524,22544,22503,22529,22540,22513,22505,22512,22541,22532,22876,23136,23128,23125,23143,23134,23096,23093,23149,23120,23135,23141,23148,23123,23140,23127,23107,23133,23122,23108,23131,23112,23182,23102,23117,23097,23116,23152,23145,23111,23121,23126,23106,23132,23410,23406,23489,23488,23641,23838,23819,23837,23834,23840,23820,23848,23821,23846,23845,23823,23856,23826,23843,23839,23854,24126,24116,24241,24244,24249,24242,24243,24374,24376,24475,24470,24479,24714,24720,24710,24766,24752,24762,24787,24788,24783,24804,24793,24797,24776,24753,24795,24759,24778,24767,24771,24781,24768,25394,25445,25482,25474,25469,25533,25502,25517,25501,25495,25515,25486,25455,25479,25488,25454,25519,25461,25500,25453,25518,25468,25508,25403,25503,25464,25477,25473,25489,25485,25456,25939,26061,26213,26209,26203,26201,26204,26210,26392,26745,26759,26768,26780,26733,26734,26798,26795,26966,26735,26787,26796,26793,26741,26740,26802,26767,26743,26770,26748,26731,26738,26794,26752,26737,26750,26779,26774,26763,26784,26761,26788,26744,26747,26769,26764,26762,26749,27446,27443,27447,27448,27537,27535,27533,27534,27532,27690,28096,28075,28084,28083,28276,28076,28137,28130,28087,28150,28116,28160,28104,28128,28127,28118,28094,28133,28124,28125,28123,28148,28106,28093,28141,28144,28090,28117,28098,28111,28105,28112,28146,28115,28157,28119,28109,28131,28091,28922,28941,28919,28951,28916,28940,28912,28932,28915,28944,28924,28927,28934,28947,28928,28920,28918,28939,28930,28942,29310,29307,29308,29311,29469,29463,29447,29457,29464,29450,29448,29439,29455,29470,29576,29686,29688,29685,29700,29697,29693,29703,29696,29690,29692,29695,29708,29707,29684,29704,30052,30051,30158,30162,30159,30155,30156,30161,30160,30351,30345,30419,30521,30511,30509,30513,30514,30516,30515,30525,30501,30523,30517,30792,30802,30793,30797,30794,30796,30758,30789,30800,31076,31079,31081,31082,31075,31083,31073,31163,31226,31224,31222,31223,31375,31380,31376,31541,31559,31540,31525,31536,31522,31524,31539,31512,31530,31517,31537,31531,31533,31535,31538,31544,31514,31523,31892,31896,31894,31907,32053,32061,32056,32054,32058,32069,32044,32041,32065,32071,32062,32063,32074,32059,32040,32611,32661,32668,32669,32667,32714,32715,32717,32720,32721,32711,32719,32713,32799,32798,32795,32839,32835,32840,33048,33061,33049,33051,33069,33055,33068,33054,33057,33045,33063,33053,33058,33297,33336,33331,33338,33332,33330,33396,33680,33699,33704,33677,33658,33651,33700,33652,33679,33665,33685,33689,33653,33684,33705,33661,33667,33676,33693,33691,33706,33675,33662,33701,33711,33672,33687,33712,33663,33702,33671,33710,33654,33690,34393,34390,34495,34487,34498,34497,34501,34490,34480,34504,34489,34483,34488,34508,34484,34491,34492,34499,34493,34494,34898,34953,34965,34984,34978,34986,34970,34961,34977,34975,34968,34983,34969,34971,34967,34980,34988,34956,34963,34958,35202,35286,35289,35285,35376,35367,35372,35358,35897,35899,35932,35933,35965,36005,36221,36219,36217,36284,36290,36281,36287,36289,36568,36574,36573,36572,36567,36576,36577,36900,36875,36881,36892,36876,36897,37103,37098,37104,37108,37106,37107,37076,37099,37100,37097,37206,37208,37210,37203,37205,37356,37364,37361,37363,37368,37348,37369,37354,37355,37367,37352,37358,38266,38278,38280,38524,38509,38507,38513,38511,38591,38762,38916,39141,39319,20635,20629,20628,20638,20619,20643,20611,20620,20622,20637,20584,20636,20626,20610,20615,20831,20948,21266,21265,21412,21415,21905,21928,21925,21933,21879,22085,21922,21907,21896,21903,21941,21889,21923,21906,21924,21885,21900,21926,21887,21909,21921,21902,22284,22569,22583,22553,22558,22567,22563,22568,22517,22600,22565,22556,22555,22579,22591,22582,22574,22585,22584,22573,22572,22587,22881,23215,23188,23199,23162,23202,23198,23160,23206,23164,23205,23212,23189,23214,23095,23172,23178,23191,23171,23179,23209,23163,23165,23180,23196,23183,23187,23197,23530,23501,23499,23508,23505,23498,23502,23564,23600,23863,23875,23915,23873,23883,23871,23861,23889,23886,23893,23859,23866,23890,23869,23857,23897,23874,23865,23881,23864,23868,23858,23862,23872,23877,24132,24129,24408,24486,24485,24491,24777,24761,24780,24802,24782,24772,24852,24818,24842,24854,24837,24821,24851,24824,24828,24830,24769,24835,24856,24861,24848,24831,24836,24843,25162,25492,25521,25520,25550,25573,25576,25583,25539,25757,25587,25546,25568,25590,25557,25586,25589,25697,25567,25534,25565,25564,25540,25560,25555,25538,25543,25548,25547,25544,25584,25559,25561,25906,25959,25962,25956,25948,25960,25957,25996,26013,26014,26030,26064,26066,26236,26220,26235,26240,26225,26233,26218,26226,26369,26892,26835,26884,26844,26922,26860,26858,26865,26895,26838,26871,26859,26852,26870,26899,26896,26867,26849,26887,26828,26888,26992,26804,26897,26863,26822,26900,26872,26832,26877,26876,26856,26891,26890,26903,26830,26824,26845,26846,26854,26868,26833,26886,26836,26857,26901,26917,26823,27449,27451,27455,27452,27540,27543,27545,27541,27581,27632,27634,27635,27696,28156,28230,28231,28191,28233,28296,28220,28221,28229,28258,28203,28223,28225,28253,28275,28188,28211,28235,28224,28241,28219,28163,28206,28254,28264,28252,28257,28209,28200,28256,28273,28267,28217,28194,28208,28243,28261,28199,28280,28260,28279,28245,28281,28242,28262,28213,28214,28250,28960,28958,28975,28923,28974,28977,28963,28965,28962,28978,28959,28968,28986,28955,29259,29274,29320,29321,29318,29317,29323,29458,29451,29488,29474,29489,29491,29479,29490,29485,29478,29475,29493,29452,29742,29740,29744,29739,29718,29722,29729,29741,29745,29732,29731,29725,29737,29728,29746,29947,29999,30063,30060,30183,30170,30177,30182,30173,30175,30180,30167,30357,30354,30426,30534,30535,30532,30541,30533,30538,30542,30539,30540,30686,30700,30816,30820,30821,30812,30829,30833,30826,30830,30832,30825,30824,30814,30818,31092,31091,31090,31088,31234,31242,31235,31244,31236,31385,31462,31460,31562,31547,31556,31560,31564,31566,31552,31576,31557,31906,31902,31912,31905,32088,32111,32099,32083,32086,32103,32106,32079,32109,32092,32107,32082,32084,32105,32081,32095,32078,32574,32575,32613,32614,32674,32672,32673,32727,32849,32847,32848,33022,32980,33091,33098,33106,33103,33095,33085,33101,33082,33254,33262,33271,33272,33273,33284,33340,33341,33343,33397,33595,33743,33785,33827,33728,33768,33810,33767,33764,33788,33782,33808,33734,33736,33771,33763,33727,33793,33757,33765,33752,33791,33761,33739,33742,33750,33781,33737,33801,33807,33758,33809,33798,33730,33779,33749,33786,33735,33745,33770,33811,33731,33772,33774,33732,33787,33751,33762,33819,33755,33790,34520,34530,34534,34515,34531,34522,34538,34525,34539,34524,34540,34537,34519,34536,34513,34888,34902,34901,35002,35031,35001,35000,35008,35006,34998,35004,34999,35005,34994,35073,35017,35221,35224,35223,35293,35290,35291,35406,35405,35385,35417,35392,35415,35416,35396,35397,35410,35400,35409,35402,35404,35407,35935,35969,35968,36026,36030,36016,36025,36021,36228,36224,36233,36312,36307,36301,36295,36310,36316,36303,36309,36313,36296,36311,36293,36591,36599,36602,36601,36582,36590,36581,36597,36583,36584,36598,36587,36593,36588,36596,36585,36909,36916,36911,37126,37164,37124,37119,37116,37128,37113,37115,37121,37120,37127,37125,37123,37217,37220,37215,37218,37216,37377,37386,37413,37379,37402,37414,37391,37388,37376,37394,37375,37373,37382,37380,37415,37378,37404,37412,37401,37399,37381,37398,38267,38285,38284,38288,38535,38526,38536,38537,38531,38528,38594,38600,38595,38641,38640,38764,38768,38766,38919,39081,39147,40166,40697,20099,20100,20150,20669,20671,20678,20654,20676,20682,20660,20680,20674,20656,20673,20666,20657,20683,20681,20662,20664,20951,21114,21112,21115,21116,21955,21979,21964,21968,21963,21962,21981,21952,21972,21956,21993,21951,21970,21901,21967,21973,21986,21974,21960,22002,21965,21977,21954,22292,22611,22632,22628,22607,22605,22601,22639,22613,22606,22621,22617,22629,22619,22589,22627,22641,22780,23239,23236,23243,23226,23224,23217,23221,23216,23231,23240,23227,23238,23223,23232,23242,23220,23222,23245,23225,23184,23510,23512,23513,23583,23603,23921,23907,23882,23909,23922,23916,23902,23912,23911,23906,24048,24143,24142,24138,24141,24139,24261,24268,24262,24267,24263,24384,24495,24493,24823,24905,24906,24875,24901,24886,24882,24878,24902,24879,24911,24873,24896,25120,37224,25123,25125,25124,25541,25585,25579,25616,25618,25609,25632,25636,25651,25667,25631,25621,25624,25657,25655,25634,25635,25612,25638,25648,25640,25665,25653,25647,25610,25626,25664,25637,25639,25611,25575,25627,25646,25633,25614,25967,26002,26067,26246,26252,26261,26256,26251,26250,26265,26260,26232,26400,26982,26975,26936,26958,26978,26993,26943,26949,26986,26937,26946,26967,26969,27002,26952,26953,26933,26988,26931,26941,26981,26864,27000,26932,26985,26944,26991,26948,26998,26968,26945,26996,26956,26939,26955,26935,26972,26959,26961,26930,26962,26927,27003,26940,27462,27461,27459,27458,27464,27457,27547,64013,27643,27644,27641,27639,27640,28315,28374,28360,28303,28352,28319,28307,28308,28320,28337,28345,28358,28370,28349,28353,28318,28361,28343,28336,28365,28326,28367,28338,28350,28355,28380,28376,28313,28306,28302,28301,28324,28321,28351,28339,28368,28362,28311,28334,28323,28999,29012,29010,29027,29024,28993,29021,29026,29042,29048,29034,29025,28994,29016,28995,29003,29040,29023,29008,29011,28996,29005,29018,29263,29325,29324,29329,29328,29326,29500,29506,29499,29498,29504,29514,29513,29764,29770,29771,29778,29777,29783,29760,29775,29776,29774,29762,29766,29773,29780,29921,29951,29950,29949,29981,30073,30071,27011,30191,30223,30211,30199,30206,30204,30201,30200,30224,30203,30198,30189,30197,30205,30361,30389,30429,30549,30559,30560,30546,30550,30554,30569,30567,30548,30553,30573,30688,30855,30874,30868,30863,30852,30869,30853,30854,30881,30851,30841,30873,30848,30870,30843,31100,31106,31101,31097,31249,31256,31257,31250,31255,31253,31266,31251,31259,31248,31395,31394,31390,31467,31590,31588,31597,31604,31593,31602,31589,31603,31601,31600,31585,31608,31606,31587,31922,31924,31919,32136,32134,32128,32141,32127,32133,32122,32142,32123,32131,32124,32140,32148,32132,32125,32146,32621,32619,32615,32616,32620,32678,32677,32679,32731,32732,32801,33124,33120,33143,33116,33129,33115,33122,33138,26401,33118,33142,33127,33135,33092,33121,33309,33353,33348,33344,33346,33349,34033,33855,33878,33910,33913,33935,33933,33893,33873,33856,33926,33895,33840,33869,33917,33882,33881,33908,33907,33885,34055,33886,33847,33850,33844,33914,33859,33912,33842,33861,33833,33753,33867,33839,33858,33837,33887,33904,33849,33870,33868,33874,33903,33989,33934,33851,33863,33846,33843,33896,33918,33860,33835,33888,33876,33902,33872,34571,34564,34551,34572,34554,34518,34549,34637,34552,34574,34569,34561,34550,34573,34565,35030,35019,35021,35022,35038,35035,35034,35020,35024,35205,35227,35295,35301,35300,35297,35296,35298,35292,35302,35446,35462,35455,35425,35391,35447,35458,35460,35445,35459,35457,35444,35450,35900,35915,35914,35941,35940,35942,35974,35972,35973,36044,36200,36201,36241,36236,36238,36239,36237,36243,36244,36240,36242,36336,36320,36332,36337,36334,36304,36329,36323,36322,36327,36338,36331,36340,36614,36607,36609,36608,36613,36615,36616,36610,36619,36946,36927,36932,36937,36925,37136,37133,37135,37137,37142,37140,37131,37134,37230,37231,37448,37458,37424,37434,37478,37427,37477,37470,37507,37422,37450,37446,37485,37484,37455,37472,37479,37487,37430,37473,37488,37425,37460,37475,37456,37490,37454,37459,37452,37462,37426,38303,38300,38302,38299,38546,38547,38545,38551,38606,38650,38653,38648,38645,38771,38775,38776,38770,38927,38925,38926,39084,39158,39161,39343,39346,39344,39349,39597,39595,39771,40170,40173,40167,40576,40701,20710,20692,20695,20712,20723,20699,20714,20701,20708,20691,20716,20720,20719,20707,20704,20952,21120,21121,21225,21227,21296,21420,22055,22037,22028,22034,22012,22031,22044,22017,22035,22018,22010,22045,22020,22015,22009,22665,22652,22672,22680,22662,22657,22655,22644,22667,22650,22663,22673,22670,22646,22658,22664,22651,22676,22671,22782,22891,23260,23278,23269,23253,23274,23258,23277,23275,23283,23266,23264,23259,23276,23262,23261,23257,23272,23263,23415,23520,23523,23651,23938,23936,23933,23942,23930,23937,23927,23946,23945,23944,23934,23932,23949,23929,23935,24152,24153,24147,24280,24273,24279,24270,24284,24277,24281,24274,24276,24388,24387,24431,24502,24876,24872,24897,24926,24945,24947,24914,24915,24946,24940,24960,24948,24916,24954,24923,24933,24891,24938,24929,24918,25129,25127,25131,25643,25677,25691,25693,25716,25718,25714,25715,25725,25717,25702,25766,25678,25730,25694,25692,25675,25683,25696,25680,25727,25663,25708,25707,25689,25701,25719,25971,26016,26273,26272,26271,26373,26372,26402,27057,27062,27081,27040,27086,27030,27056,27052,27068,27025,27033,27022,27047,27021,27049,27070,27055,27071,27076,27069,27044,27092,27065,27082,27034,27087,27059,27027,27050,27041,27038,27097,27031,27024,27074,27061,27045,27078,27466,27469,27467,27550,27551,27552,27587,27588,27646,28366,28405,28401,28419,28453,28408,28471,28411,28462,28425,28494,28441,28442,28455,28440,28475,28434,28397,28426,28470,28531,28409,28398,28461,28480,28464,28476,28469,28395,28423,28430,28483,28421,28413,28406,28473,28444,28412,28474,28447,28429,28446,28424,28449,29063,29072,29065,29056,29061,29058,29071,29051,29062,29057,29079,29252,29267,29335,29333,29331,29507,29517,29521,29516,29794,29811,29809,29813,29810,29799,29806,29952,29954,29955,30077,30096,30230,30216,30220,30229,30225,30218,30228,30392,30593,30588,30597,30594,30574,30592,30575,30590,30595,30898,30890,30900,30893,30888,30846,30891,30878,30885,30880,30892,30882,30884,31128,31114,31115,31126,31125,31124,31123,31127,31112,31122,31120,31275,31306,31280,31279,31272,31270,31400,31403,31404,31470,31624,31644,31626,31633,31632,31638,31629,31628,31643,31630,31621,31640,21124,31641,31652,31618,31931,31935,31932,31930,32167,32183,32194,32163,32170,32193,32192,32197,32157,32206,32196,32198,32203,32204,32175,32185,32150,32188,32159,32166,32174,32169,32161,32201,32627,32738,32739,32741,32734,32804,32861,32860,33161,33158,33155,33159,33165,33164,33163,33301,33943,33956,33953,33951,33978,33998,33986,33964,33966,33963,33977,33972,33985,33997,33962,33946,33969,34000,33949,33959,33979,33954,33940,33991,33996,33947,33961,33967,33960,34006,33944,33974,33999,33952,34007,34004,34002,34011,33968,33937,34401,34611,34595,34600,34667,34624,34606,34590,34593,34585,34587,34627,34604,34625,34622,34630,34592,34610,34602,34605,34620,34578,34618,34609,34613,34626,34598,34599,34616,34596,34586,34608,34577,35063,35047,35057,35058,35066,35070,35054,35068,35062,35067,35056,35052,35051,35229,35233,35231,35230,35305,35307,35304,35499,35481,35467,35474,35471,35478,35901,35944,35945,36053,36047,36055,36246,36361,36354,36351,36365,36349,36362,36355,36359,36358,36357,36350,36352,36356,36624,36625,36622,36621,37155,37148,37152,37154,37151,37149,37146,37156,37153,37147,37242,37234,37241,37235,37541,37540,37494,37531,37498,37536,37524,37546,37517,37542,37530,37547,37497,37527,37503,37539,37614,37518,37506,37525,37538,37501,37512,37537,37514,37510,37516,37529,37543,37502,37511,37545,37533,37515,37421,38558,38561,38655,38744,38781,38778,38782,38787,38784,38786,38779,38788,38785,38783,38862,38861,38934,39085,39086,39170,39168,39175,39325,39324,39363,39353,39355,39354,39362,39357,39367,39601,39651,39655,39742,39743,39776,39777,39775,40177,40178,40181,40615,20735,20739,20784,20728,20742,20743,20726,20734,20747,20748,20733,20746,21131,21132,21233,21231,22088,22082,22092,22069,22081,22090,22089,22086,22104,22106,22080,22067,22077,22060,22078,22072,22058,22074,22298,22699,22685,22705,22688,22691,22703,22700,22693,22689,22783,23295,23284,23293,23287,23286,23299,23288,23298,23289,23297,23303,23301,23311,23655,23961,23959,23967,23954,23970,23955,23957,23968,23964,23969,23962,23966,24169,24157,24160,24156,32243,24283,24286,24289,24393,24498,24971,24963,24953,25009,25008,24994,24969,24987,24979,25007,25005,24991,24978,25002,24993,24973,24934,25011,25133,25710,25712,25750,25760,25733,25751,25756,25743,25739,25738,25740,25763,25759,25704,25777,25752,25974,25978,25977,25979,26034,26035,26293,26288,26281,26290,26295,26282,26287,27136,27142,27159,27109,27128,27157,27121,27108,27168,27135,27116,27106,27163,27165,27134,27175,27122,27118,27156,27127,27111,27200,27144,27110,27131,27149,27132,27115,27145,27140,27160,27173,27151,27126,27174,27143,27124,27158,27473,27557,27555,27554,27558,27649,27648,27647,27650,28481,28454,28542,28551,28614,28562,28557,28553,28556,28514,28495,28549,28506,28566,28534,28524,28546,28501,28530,28498,28496,28503,28564,28563,28509,28416,28513,28523,28541,28519,28560,28499,28555,28521,28543,28565,28515,28535,28522,28539,29106,29103,29083,29104,29088,29082,29097,29109,29085,29093,29086,29092,29089,29098,29084,29095,29107,29336,29338,29528,29522,29534,29535,29536,29533,29531,29537,29530,29529,29538,29831,29833,29834,29830,29825,29821,29829,29832,29820,29817,29960,29959,30078,30245,30238,30233,30237,30236,30243,30234,30248,30235,30364,30365,30366,30363,30605,30607,30601,30600,30925,30907,30927,30924,30929,30926,30932,30920,30915,30916,30921,31130,31137,31136,31132,31138,31131,27510,31289,31410,31412,31411,31671,31691,31678,31660,31694,31663,31673,31690,31669,31941,31944,31948,31947,32247,32219,32234,32231,32215,32225,32259,32250,32230,32246,32241,32240,32238,32223,32630,32684,32688,32685,32749,32747,32746,32748,32742,32744,32868,32871,33187,33183,33182,33173,33186,33177,33175,33302,33359,33363,33362,33360,33358,33361,34084,34107,34063,34048,34089,34062,34057,34061,34079,34058,34087,34076,34043,34091,34042,34056,34060,34036,34090,34034,34069,34039,34027,34035,34044,34066,34026,34025,34070,34046,34088,34077,34094,34050,34045,34078,34038,34097,34086,34023,34024,34032,34031,34041,34072,34080,34096,34059,34073,34095,34402,34646,34659,34660,34679,34785,34675,34648,34644,34651,34642,34657,34650,34641,34654,34669,34666,34640,34638,34655,34653,34671,34668,34682,34670,34652,34661,34639,34683,34677,34658,34663,34665,34906,35077,35084,35092,35083,35095,35096,35097,35078,35094,35089,35086,35081,35234,35236,35235,35309,35312,35308,35535,35526,35512,35539,35537,35540,35541,35515,35543,35518,35520,35525,35544,35523,35514,35517,35545,35902,35917,35983,36069,36063,36057,36072,36058,36061,36071,36256,36252,36257,36251,36384,36387,36389,36388,36398,36373,36379,36374,36369,36377,36390,36391,36372,36370,36376,36371,36380,36375,36378,36652,36644,36632,36634,36640,36643,36630,36631,36979,36976,36975,36967,36971,37167,37163,37161,37162,37170,37158,37166,37253,37254,37258,37249,37250,37252,37248,37584,37571,37572,37568,37593,37558,37583,37617,37599,37592,37609,37591,37597,37580,37615,37570,37608,37578,37576,37582,37606,37581,37589,37577,37600,37598,37607,37585,37587,37557,37601,37574,37556,38268,38316,38315,38318,38320,38564,38562,38611,38661,38664,38658,38746,38794,38798,38792,38864,38863,38942,38941,38950,38953,38952,38944,38939,38951,39090,39176,39162,39185,39188,39190,39191,39189,39388,39373,39375,39379,39380,39374,39369,39382,39384,39371,39383,39372,39603,39660,39659,39667,39666,39665,39750,39747,39783,39796,39793,39782,39798,39797,39792,39784,39780,39788,40188,40186,40189,40191,40183,40199,40192,40185,40187,40200,40197,40196,40579,40659,40719,40720,20764,20755,20759,20762,20753,20958,21300,21473,22128,22112,22126,22131,22118,22115,22125,22130,22110,22135,22300,22299,22728,22717,22729,22719,22714,22722,22716,22726,23319,23321,23323,23329,23316,23315,23312,23318,23336,23322,23328,23326,23535,23980,23985,23977,23975,23989,23984,23982,23978,23976,23986,23981,23983,23988,24167,24168,24166,24175,24297,24295,24294,24296,24293,24395,24508,24989,25000,24982,25029,25012,25030,25025,25036,25018,25023,25016,24972,25815,25814,25808,25807,25801,25789,25737,25795,25819,25843,25817,25907,25983,25980,26018,26312,26302,26304,26314,26315,26319,26301,26299,26298,26316,26403,27188,27238,27209,27239,27186,27240,27198,27229,27245,27254,27227,27217,27176,27226,27195,27199,27201,27242,27236,27216,27215,27220,27247,27241,27232,27196,27230,27222,27221,27213,27214,27206,27477,27476,27478,27559,27562,27563,27592,27591,27652,27651,27654,28589,28619,28579,28615,28604,28622,28616,28510,28612,28605,28574,28618,28584,28676,28581,28590,28602,28588,28586,28623,28607,28600,28578,28617,28587,28621,28591,28594,28592,29125,29122,29119,29112,29142,29120,29121,29131,29140,29130,29127,29135,29117,29144,29116,29126,29146,29147,29341,29342,29545,29542,29543,29548,29541,29547,29546,29823,29850,29856,29844,29842,29845,29857,29963,30080,30255,30253,30257,30269,30259,30268,30261,30258,30256,30395,30438,30618,30621,30625,30620,30619,30626,30627,30613,30617,30615,30941,30953,30949,30954,30942,30947,30939,30945,30946,30957,30943,30944,31140,31300,31304,31303,31414,31416,31413,31409,31415,31710,31715,31719,31709,31701,31717,31706,31720,31737,31700,31722,31714,31708,31723,31704,31711,31954,31956,31959,31952,31953,32274,32289,32279,32268,32287,32288,32275,32270,32284,32277,32282,32290,32267,32271,32278,32269,32276,32293,32292,32579,32635,32636,32634,32689,32751,32810,32809,32876,33201,33190,33198,33209,33205,33195,33200,33196,33204,33202,33207,33191,33266,33365,33366,33367,34134,34117,34155,34125,34131,34145,34136,34112,34118,34148,34113,34146,34116,34129,34119,34147,34110,34139,34161,34126,34158,34165,34133,34151,34144,34188,34150,34141,34132,34149,34156,34403,34405,34404,34715,34703,34711,34707,34706,34696,34689,34710,34712,34681,34695,34723,34693,34704,34705,34717,34692,34708,34716,34714,34697,35102,35110,35120,35117,35118,35111,35121,35106,35113,35107,35119,35116,35103,35313,35552,35554,35570,35572,35573,35549,35604,35556,35551,35568,35528,35550,35553,35560,35583,35567,35579,35985,35986,35984,36085,36078,36081,36080,36083,36204,36206,36261,36263,36403,36414,36408,36416,36421,36406,36412,36413,36417,36400,36415,36541,36662,36654,36661,36658,36665,36663,36660,36982,36985,36987,36998,37114,37171,37173,37174,37267,37264,37265,37261,37263,37671,37662,37640,37663,37638,37647,37754,37688,37692,37659,37667,37650,37633,37702,37677,37646,37645,37579,37661,37626,37669,37651,37625,37623,37684,37634,37668,37631,37673,37689,37685,37674,37652,37644,37643,37630,37641,37632,37627,37654,38332,38349,38334,38329,38330,38326,38335,38325,38333,38569,38612,38667,38674,38672,38809,38807,38804,38896,38904,38965,38959,38962,39204,39199,39207,39209,39326,39406,39404,39397,39396,39408,39395,39402,39401,39399,39609,39615,39604,39611,39670,39674,39673,39671,39731,39808,39813,39815,39804,39806,39803,39810,39827,39826,39824,39802,39829,39805,39816,40229,40215,40224,40222,40212,40233,40221,40216,40226,40208,40217,40223,40584,40582,40583,40622,40621,40661,40662,40698,40722,40765,20774,20773,20770,20772,20768,20777,21236,22163,22156,22157,22150,22148,22147,22142,22146,22143,22145,22742,22740,22735,22738,23341,23333,23346,23331,23340,23335,23334,23343,23342,23419,23537,23538,23991,24172,24170,24510,24507,25027,25013,25020,25063,25056,25061,25060,25064,25054,25839,25833,25827,25835,25828,25832,25985,25984,26038,26074,26322,27277,27286,27265,27301,27273,27295,27291,27297,27294,27271,27283,27278,27285,27267,27304,27300,27281,27263,27302,27290,27269,27276,27282,27483,27565,27657,28620,28585,28660,28628,28643,28636,28653,28647,28646,28638,28658,28637,28642,28648,29153,29169,29160,29170,29156,29168,29154,29555,29550,29551,29847,29874,29867,29840,29866,29869,29873,29861,29871,29968,29969,29970,29967,30084,30275,30280,30281,30279,30372,30441,30645,30635,30642,30647,30646,30644,30641,30632,30704,30963,30973,30978,30971,30972,30962,30981,30969,30974,30980,31147,31144,31324,31323,31318,31320,31316,31322,31422,31424,31425,31749,31759,31730,31744,31743,31739,31758,31732,31755,31731,31746,31753,31747,31745,31736,31741,31750,31728,31729,31760,31754,31976,32301,32316,32322,32307,38984,32312,32298,32329,32320,32327,32297,32332,32304,32315,32310,32324,32314,32581,32639,32638,32637,32756,32754,32812,33211,33220,33228,33226,33221,33223,33212,33257,33371,33370,33372,34179,34176,34191,34215,34197,34208,34187,34211,34171,34212,34202,34206,34167,34172,34185,34209,34170,34168,34135,34190,34198,34182,34189,34201,34205,34177,34210,34178,34184,34181,34169,34166,34200,34192,34207,34408,34750,34730,34733,34757,34736,34732,34745,34741,34748,34734,34761,34755,34754,34764,34743,34735,34756,34762,34740,34742,34751,34744,34749,34782,34738,35125,35123,35132,35134,35137,35154,35127,35138,35245,35247,35246,35314,35315,35614,35608,35606,35601,35589,35595,35618,35599,35602,35605,35591,35597,35592,35590,35612,35603,35610,35919,35952,35954,35953,35951,35989,35988,36089,36207,36430,36429,36435,36432,36428,36423,36675,36672,36997,36990,37176,37274,37282,37275,37273,37279,37281,37277,37280,37793,37763,37807,37732,37718,37703,37756,37720,37724,37750,37705,37712,37713,37728,37741,37775,37708,37738,37753,37719,37717,37714,37711,37745,37751,37755,37729,37726,37731,37735,37760,37710,37721,38343,38336,38345,38339,38341,38327,38574,38576,38572,38688,38687,38680,38685,38681,38810,38817,38812,38814,38813,38869,38868,38897,38977,38980,38986,38985,38981,38979,39205,39211,39212,39210,39219,39218,39215,39213,39217,39216,39320,39331,39329,39426,39418,39412,39415,39417,39416,39414,39419,39421,39422,39420,39427,39614,39678,39677,39681,39676,39752,39834,39848,39838,39835,39846,39841,39845,39844,39814,39842,39840,39855,40243,40257,40295,40246,40238,40239,40241,40248,40240,40261,40258,40259,40254,40247,40256,40253,32757,40237,40586,40585,40589,40624,40648,40666,40699,40703,40740,40739,40738,40788,40864,20785,20781,20782,22168,22172,22167,22170,22173,22169,22896,23356,23657,23658,24000,24173,24174,25048,25055,25069,25070,25073,25066,25072,25067,25046,25065,25855,25860,25853,25848,25857,25859,25852,26004,26075,26330,26331,26328,27333,27321,27325,27361,27334,27322,27318,27319,27335,27316,27309,27486,27593,27659,28679,28684,28685,28673,28677,28692,28686,28671,28672,28667,28710,28668,28663,28682,29185,29183,29177,29187,29181,29558,29880,29888,29877,29889,29886,29878,29883,29890,29972,29971,30300,30308,30297,30288,30291,30295,30298,30374,30397,30444,30658,30650,30975,30988,30995,30996,30985,30992,30994,30993,31149,31148,31327,31772,31785,31769,31776,31775,31789,31773,31782,31784,31778,31781,31792,32348,32336,32342,32355,32344,32354,32351,32337,32352,32343,32339,32693,32691,32759,32760,32885,33233,33234,33232,33375,33374,34228,34246,34240,34243,34242,34227,34229,34237,34247,34244,34239,34251,34254,34248,34245,34225,34230,34258,34340,34232,34231,34238,34409,34791,34790,34786,34779,34795,34794,34789,34783,34803,34788,34772,34780,34771,34797,34776,34787,34724,34775,34777,34817,34804,34792,34781,35155,35147,35151,35148,35142,35152,35153,35145,35626,35623,35619,35635,35632,35637,35655,35631,35644,35646,35633,35621,35639,35622,35638,35630,35620,35643,35645,35642,35906,35957,35993,35992,35991,36094,36100,36098,36096,36444,36450,36448,36439,36438,36446,36453,36455,36443,36442,36449,36445,36457,36436,36678,36679,36680,36683,37160,37178,37179,37182,37288,37285,37287,37295,37290,37813,37772,37778,37815,37787,37789,37769,37799,37774,37802,37790,37798,37781,37768,37785,37791,37773,37809,37777,37810,37796,37800,37812,37795,37797,38354,38355,38353,38579,38615,38618,24002,38623,38616,38621,38691,38690,38693,38828,38830,38824,38827,38820,38826,38818,38821,38871,38873,38870,38872,38906,38992,38993,38994,39096,39233,39228,39226,39439,39435,39433,39437,39428,39441,39434,39429,39431,39430,39616,39644,39688,39684,39685,39721,39733,39754,39756,39755,39879,39878,39875,39871,39873,39861,39864,39891,39862,39876,39865,39869,40284,40275,40271,40266,40283,40267,40281,40278,40268,40279,40274,40276,40287,40280,40282,40590,40588,40671,40705,40704,40726,40741,40747,40746,40745,40744,40780,40789,20788,20789,21142,21239,21428,22187,22189,22182,22183,22186,22188,22746,22749,22747,22802,23357,23358,23359,24003,24176,24511,25083,25863,25872,25869,25865,25868,25870,25988,26078,26077,26334,27367,27360,27340,27345,27353,27339,27359,27356,27344,27371,27343,27341,27358,27488,27568,27660,28697,28711,28704,28694,28715,28705,28706,28707,28713,28695,28708,28700,28714,29196,29194,29191,29186,29189,29349,29350,29348,29347,29345,29899,29893,29879,29891,29974,30304,30665,30666,30660,30705,31005,31003,31009,31004,30999,31006,31152,31335,31336,31795,31804,31801,31788,31803,31980,31978,32374,32373,32376,32368,32375,32367,32378,32370,32372,32360,32587,32586,32643,32646,32695,32765,32766,32888,33239,33237,33380,33377,33379,34283,34289,34285,34265,34273,34280,34266,34263,34284,34290,34296,34264,34271,34275,34268,34257,34288,34278,34287,34270,34274,34816,34810,34819,34806,34807,34825,34828,34827,34822,34812,34824,34815,34826,34818,35170,35162,35163,35159,35169,35164,35160,35165,35161,35208,35255,35254,35318,35664,35656,35658,35648,35667,35670,35668,35659,35669,35665,35650,35666,35671,35907,35959,35958,35994,36102,36103,36105,36268,36266,36269,36267,36461,36472,36467,36458,36463,36475,36546,36690,36689,36687,36688,36691,36788,37184,37183,37296,37293,37854,37831,37839,37826,37850,37840,37881,37868,37836,37849,37801,37862,37834,37844,37870,37859,37845,37828,37838,37824,37842,37863,38269,38362,38363,38625,38697,38699,38700,38696,38694,38835,38839,38838,38877,38878,38879,39004,39001,39005,38999,39103,39101,39099,39102,39240,39239,39235,39334,39335,39450,39445,39461,39453,39460,39451,39458,39456,39463,39459,39454,39452,39444,39618,39691,39690,39694,39692,39735,39914,39915,39904,39902,39908,39910,39906,39920,39892,39895,39916,39900,39897,39909,39893,39905,39898,40311,40321,40330,40324,40328,40305,40320,40312,40326,40331,40332,40317,40299,40308,40309,40304,40297,40325,40307,40315,40322,40303,40313,40319,40327,40296,40596,40593,40640,40700,40749,40768,40769,40781,40790,40791,40792,21303,22194,22197,22195,22755,23365,24006,24007,24302,24303,24512,24513,25081,25879,25878,25877,25875,26079,26344,26339,26340,27379,27376,27370,27368,27385,27377,27374,27375,28732,28725,28719,28727,28724,28721,28738,28728,28735,28730,28729,28736,28731,28723,28737,29203,29204,29352,29565,29564,29882,30379,30378,30398,30445,30668,30670,30671,30669,30706,31013,31011,31015,31016,31012,31017,31154,31342,31340,31341,31479,31817,31816,31818,31815,31813,31982,32379,32382,32385,32384,32698,32767,32889,33243,33241,33291,33384,33385,34338,34303,34305,34302,34331,34304,34294,34308,34313,34309,34316,34301,34841,34832,34833,34839,34835,34838,35171,35174,35257,35319,35680,35690,35677,35688,35683,35685,35687,35693,36270,36486,36488,36484,36697,36694,36695,36693,36696,36698,37005,37187,37185,37303,37301,37298,37299,37899,37907,37883,37920,37903,37908,37886,37909,37904,37928,37913,37901,37877,37888,37879,37895,37902,37910,37906,37882,37897,37880,37898,37887,37884,37900,37878,37905,37894,38366,38368,38367,38702,38703,38841,38843,38909,38910,39008,39010,39011,39007,39105,39106,39248,39246,39257,39244,39243,39251,39474,39476,39473,39468,39466,39478,39465,39470,39480,39469,39623,39626,39622,39696,39698,39697,39947,39944,39927,39941,39954,39928,40000,39943,39950,39942,39959,39956,39945,40351,40345,40356,40349,40338,40344,40336,40347,40352,40340,40348,40362,40343,40353,40346,40354,40360,40350,40355,40383,40361,40342,40358,40359,40601,40603,40602,40677,40676,40679,40678,40752,40750,40795,40800,40798,40797,40793,40849,20794,20793,21144,21143,22211,22205,22206,23368,23367,24011,24015,24305,25085,25883,27394,27388,27395,27384,27392,28739,28740,28746,28744,28745,28741,28742,29213,29210,29209,29566,29975,30314,30672,31021,31025,31023,31828,31827,31986,32394,32391,32392,32395,32390,32397,32589,32699,32816,33245,34328,34346,34342,34335,34339,34332,34329,34343,34350,34337,34336,34345,34334,34341,34857,34845,34843,34848,34852,34844,34859,34890,35181,35177,35182,35179,35322,35705,35704,35653,35706,35707,36112,36116,36271,36494,36492,36702,36699,36701,37190,37188,37189,37305,37951,37947,37942,37929,37949,37948,37936,37945,37930,37943,37932,37952,37937,38373,38372,38371,38709,38714,38847,38881,39012,39113,39110,39104,39256,39254,39481,39485,39494,39492,39490,39489,39482,39487,39629,39701,39703,39704,39702,39738,39762,39979,39965,39964,39980,39971,39976,39977,39972,39969,40375,40374,40380,40385,40391,40394,40399,40382,40389,40387,40379,40373,40398,40377,40378,40364,40392,40369,40365,40396,40371,40397,40370,40570,40604,40683,40686,40685,40731,40728,40730,40753,40782,40805,40804,40850,20153,22214,22213,22219,22897,23371,23372,24021,24017,24306,25889,25888,25894,25890,27403,27400,27401,27661,28757,28758,28759,28754,29214,29215,29353,29567,29912,29909,29913,29911,30317,30381,31029,31156,31344,31345,31831,31836,31833,31835,31834,31988,31985,32401,32591,32647,33246,33387,34356,34357,34355,34348,34354,34358,34860,34856,34854,34858,34853,35185,35263,35262,35323,35710,35716,35714,35718,35717,35711,36117,36501,36500,36506,36498,36496,36502,36503,36704,36706,37191,37964,37968,37962,37963,37967,37959,37957,37960,37961,37958,38719,38883,39018,39017,39115,39252,39259,39502,39507,39508,39500,39503,39496,39498,39497,39506,39504,39632,39705,39723,39739,39766,39765,40006,40008,39999,40004,39993,39987,40001,39996,39991,39988,39986,39997,39990,40411,40402,40414,40410,40395,40400,40412,40401,40415,40425,40409,40408,40406,40437,40405,40413,40630,40688,40757,40755,40754,40770,40811,40853,40866,20797,21145,22760,22759,22898,23373,24024,34863,24399,25089,25091,25092,25897,25893,26006,26347,27409,27410,27407,27594,28763,28762,29218,29570,29569,29571,30320,30676,31847,31846,32405,33388,34362,34368,34361,34364,34353,34363,34366,34864,34866,34862,34867,35190,35188,35187,35326,35724,35726,35723,35720,35909,36121,36504,36708,36707,37308,37986,37973,37981,37975,37982,38852,38853,38912,39510,39513,39710,39711,39712,40018,40024,40016,40010,40013,40011,40021,40025,40012,40014,40443,40439,40431,40419,40427,40440,40420,40438,40417,40430,40422,40434,40432,40418,40428,40436,40435,40424,40429,40642,40656,40690,40691,40710,40732,40760,40759,40758,40771,40783,40817,40816,40814,40815,22227,22221,23374,23661,25901,26349,26350,27411,28767,28769,28765,28768,29219,29915,29925,30677,31032,31159,31158,31850,32407,32649,33389,34371,34872,34871,34869,34891,35732,35733,36510,36511,36512,36509,37310,37309,37314,37995,37992,37993,38629,38726,38723,38727,38855,38885,39518,39637,39769,40035,40039,40038,40034,40030,40032,40450,40446,40455,40451,40454,40453,40448,40449,40457,40447,40445,40452,40608,40734,40774,40820,40821,40822,22228,25902,26040,27416,27417,27415,27418,28770,29222,29354,30680,30681,31033,31849,31851,31990,32410,32408,32411,32409,33248,33249,34374,34375,34376,35193,35194,35196,35195,35327,35736,35737,36517,36516,36515,37998,37997,37999,38001,38003,38729,39026,39263,40040,40046,40045,40459,40461,40464,40463,40466,40465,40609,40693,40713,40775,40824,40827,40826,40825,22302,28774,31855,34876,36274,36518,37315,38004,38008,38006,38005,39520,40052,40051,40049,40053,40468,40467,40694,40714,40868,28776,28773,31991,34410,34878,34877,34879,35742,35996,36521,36553,38731,39027,39028,39116,39265,39339,39524,39526,39527,39716,40469,40471,40776,25095,27422,29223,34380,36520,38018,38016,38017,39529,39528,39726,40473,29225,34379,35743,38019,40057,40631,30325,39531,40058,40477,28777,28778,40612,40830,40777,40856,30849,37561,35023,22715,24658,31911,23290,9556,9574,9559,9568,9580,9571,9562,9577,9565,9554,9572,9557,9566,9578,9569,9560,9575,9563,9555,9573,9558,9567,9579,9570,9561,9576,9564,9553,9552,9581,9582,9584,9583,65517,132423,37595,132575,147397,34124,17077,29679,20917,13897,149826,166372,37700,137691,33518,146632,30780,26436,25311,149811,166314,131744,158643,135941,20395,140525,20488,159017,162436,144896,150193,140563,20521,131966,24484,131968,131911,28379,132127,20605,20737,13434,20750,39020,14147,33814,149924,132231,20832,144308,20842,134143,139516,131813,140592,132494,143923,137603,23426,34685,132531,146585,20914,20920,40244,20937,20943,20945,15580,20947,150182,20915,20962,21314,20973,33741,26942,145197,24443,21003,21030,21052,21173,21079,21140,21177,21189,31765,34114,21216,34317,158483,21253,166622,21833,28377,147328,133460,147436,21299,21316,134114,27851,136998,26651,29653,24650,16042,14540,136936,29149,17570,21357,21364,165547,21374,21375,136598,136723,30694,21395,166555,21408,21419,21422,29607,153458,16217,29596,21441,21445,27721,20041,22526,21465,15019,134031,21472,147435,142755,21494,134263,21523,28793,21803,26199,27995,21613,158547,134516,21853,21647,21668,18342,136973,134877,15796,134477,166332,140952,21831,19693,21551,29719,21894,21929,22021,137431,147514,17746,148533,26291,135348,22071,26317,144010,26276,26285,22093,22095,30961,22257,38791,21502,22272,22255,22253,166758,13859,135759,22342,147877,27758,28811,22338,14001,158846,22502,136214,22531,136276,148323,22566,150517,22620,22698,13665,22752,22748,135740,22779,23551,22339,172368,148088,37843,13729,22815,26790,14019,28249,136766,23076,21843,136850,34053,22985,134478,158849,159018,137180,23001,137211,137138,159142,28017,137256,136917,23033,159301,23211,23139,14054,149929,23159,14088,23190,29797,23251,159649,140628,15749,137489,14130,136888,24195,21200,23414,25992,23420,162318,16388,18525,131588,23509,24928,137780,154060,132517,23539,23453,19728,23557,138052,23571,29646,23572,138405,158504,23625,18653,23685,23785,23791,23947,138745,138807,23824,23832,23878,138916,23738,24023,33532,14381,149761,139337,139635,33415,14390,15298,24110,27274,24181,24186,148668,134355,21414,20151,24272,21416,137073,24073,24308,164994,24313,24315,14496,24316,26686,37915,24333,131521,194708,15070,18606,135994,24378,157832,140240,24408,140401,24419,38845,159342,24434,37696,166454,24487,23990,15711,152144,139114,159992,140904,37334,131742,166441,24625,26245,137335,14691,15815,13881,22416,141236,31089,15936,24734,24740,24755,149890,149903,162387,29860,20705,23200,24932,33828,24898,194726,159442,24961,20980,132694,24967,23466,147383,141407,25043,166813,170333,25040,14642,141696,141505,24611,24924,25886,25483,131352,25285,137072,25301,142861,25452,149983,14871,25656,25592,136078,137212,25744,28554,142902,38932,147596,153373,25825,25829,38011,14950,25658,14935,25933,28438,150056,150051,25989,25965,25951,143486,26037,149824,19255,26065,16600,137257,26080,26083,24543,144384,26136,143863,143864,26180,143780,143781,26187,134773,26215,152038,26227,26228,138813,143921,165364,143816,152339,30661,141559,39332,26370,148380,150049,15147,27130,145346,26462,26471,26466,147917,168173,26583,17641,26658,28240,37436,26625,144358,159136,26717,144495,27105,27147,166623,26995,26819,144845,26881,26880,15666,14849,144956,15232,26540,26977,166474,17148,26934,27032,15265,132041,33635,20624,27129,144985,139562,27205,145155,27293,15347,26545,27336,168348,15373,27421,133411,24798,27445,27508,141261,28341,146139,132021,137560,14144,21537,146266,27617,147196,27612,27703,140427,149745,158545,27738,33318,27769,146876,17605,146877,147876,149772,149760,146633,14053,15595,134450,39811,143865,140433,32655,26679,159013,159137,159211,28054,27996,28284,28420,149887,147589,159346,34099,159604,20935,27804,28189,33838,166689,28207,146991,29779,147330,31180,28239,23185,143435,28664,14093,28573,146992,28410,136343,147517,17749,37872,28484,28508,15694,28532,168304,15675,28575,147780,28627,147601,147797,147513,147440,147380,147775,20959,147798,147799,147776,156125,28747,28798,28839,28801,28876,28885,28886,28895,16644,15848,29108,29078,148087,28971,28997,23176,29002,29038,23708,148325,29007,37730,148161,28972,148570,150055,150050,29114,166888,28861,29198,37954,29205,22801,37955,29220,37697,153093,29230,29248,149876,26813,29269,29271,15957,143428,26637,28477,29314,29482,29483,149539,165931,18669,165892,29480,29486,29647,29610,134202,158254,29641,29769,147938,136935,150052,26147,14021,149943,149901,150011,29687,29717,26883,150054,29753,132547,16087,29788,141485,29792,167602,29767,29668,29814,33721,29804,14128,29812,37873,27180,29826,18771,150156,147807,150137,166799,23366,166915,137374,29896,137608,29966,29929,29982,167641,137803,23511,167596,37765,30029,30026,30055,30062,151426,16132,150803,30094,29789,30110,30132,30210,30252,30289,30287,30319,30326,156661,30352,33263,14328,157969,157966,30369,30373,30391,30412,159647,33890,151709,151933,138780,30494,30502,30528,25775,152096,30552,144044,30639,166244,166248,136897,30708,30729,136054,150034,26826,30895,30919,30931,38565,31022,153056,30935,31028,30897,161292,36792,34948,166699,155779,140828,31110,35072,26882,31104,153687,31133,162617,31036,31145,28202,160038,16040,31174,168205,31188],\n  \"euc-kr\":[44034,44035,44037,44038,44043,44044,44045,44046,44047,44056,44062,44063,44065,44066,44067,44069,44070,44071,44072,44073,44074,44075,44078,44082,44083,44084,null,null,null,null,null,null,44085,44086,44087,44090,44091,44093,44094,44095,44097,44098,44099,44100,44101,44102,44103,44104,44105,44106,44108,44110,44111,44112,44113,44114,44115,44117,null,null,null,null,null,null,44118,44119,44121,44122,44123,44125,44126,44127,44128,44129,44130,44131,44132,44133,44134,44135,44136,44137,44138,44139,44140,44141,44142,44143,44146,44147,44149,44150,44153,44155,44156,44157,44158,44159,44162,44167,44168,44173,44174,44175,44177,44178,44179,44181,44182,44183,44184,44185,44186,44187,44190,44194,44195,44196,44197,44198,44199,44203,44205,44206,44209,44210,44211,44212,44213,44214,44215,44218,44222,44223,44224,44226,44227,44229,44230,44231,44233,44234,44235,44237,44238,44239,44240,44241,44242,44243,44244,44246,44248,44249,44250,44251,44252,44253,44254,44255,44258,44259,44261,44262,44265,44267,44269,44270,44274,44276,44279,44280,44281,44282,44283,44286,44287,44289,44290,44291,44293,44295,44296,44297,44298,44299,44302,44304,44306,44307,44308,44309,44310,44311,44313,44314,44315,44317,44318,44319,44321,44322,44323,44324,44325,44326,44327,44328,44330,44331,44334,44335,44336,44337,44338,44339,null,null,null,null,null,null,44342,44343,44345,44346,44347,44349,44350,44351,44352,44353,44354,44355,44358,44360,44362,44363,44364,44365,44366,44367,44369,44370,44371,44373,44374,44375,null,null,null,null,null,null,44377,44378,44379,44380,44381,44382,44383,44384,44386,44388,44389,44390,44391,44392,44393,44394,44395,44398,44399,44401,44402,44407,44408,44409,44410,44414,44416,44419,44420,44421,44422,44423,44426,44427,44429,44430,44431,44433,44434,44435,44436,44437,44438,44439,44440,44441,44442,44443,44446,44447,44448,44449,44450,44451,44453,44454,44455,44456,44457,44458,44459,44460,44461,44462,44463,44464,44465,44466,44467,44468,44469,44470,44472,44473,44474,44475,44476,44477,44478,44479,44482,44483,44485,44486,44487,44489,44490,44491,44492,44493,44494,44495,44498,44500,44501,44502,44503,44504,44505,44506,44507,44509,44510,44511,44513,44514,44515,44517,44518,44519,44520,44521,44522,44523,44524,44525,44526,44527,44528,44529,44530,44531,44532,44533,44534,44535,44538,44539,44541,44542,44546,44547,44548,44549,44550,44551,44554,44556,44558,44559,44560,44561,44562,44563,44565,44566,44567,44568,44569,44570,44571,44572,null,null,null,null,null,null,44573,44574,44575,44576,44577,44578,44579,44580,44581,44582,44583,44584,44585,44586,44587,44588,44589,44590,44591,44594,44595,44597,44598,44601,44603,44604,null,null,null,null,null,null,44605,44606,44607,44610,44612,44615,44616,44617,44619,44623,44625,44626,44627,44629,44631,44632,44633,44634,44635,44638,44642,44643,44644,44646,44647,44650,44651,44653,44654,44655,44657,44658,44659,44660,44661,44662,44663,44666,44670,44671,44672,44673,44674,44675,44678,44679,44680,44681,44682,44683,44685,44686,44687,44688,44689,44690,44691,44692,44693,44694,44695,44696,44697,44698,44699,44700,44701,44702,44703,44704,44705,44706,44707,44708,44709,44710,44711,44712,44713,44714,44715,44716,44717,44718,44719,44720,44721,44722,44723,44724,44725,44726,44727,44728,44729,44730,44731,44735,44737,44738,44739,44741,44742,44743,44744,44745,44746,44747,44750,44754,44755,44756,44757,44758,44759,44762,44763,44765,44766,44767,44768,44769,44770,44771,44772,44773,44774,44775,44777,44778,44780,44782,44783,44784,44785,44786,44787,44789,44790,44791,44793,44794,44795,44797,44798,44799,44800,44801,44802,44803,44804,44805,null,null,null,null,null,null,44806,44809,44810,44811,44812,44814,44815,44817,44818,44819,44820,44821,44822,44823,44824,44825,44826,44827,44828,44829,44830,44831,44832,44833,44834,44835,null,null,null,null,null,null,44836,44837,44838,44839,44840,44841,44842,44843,44846,44847,44849,44851,44853,44854,44855,44856,44857,44858,44859,44862,44864,44868,44869,44870,44871,44874,44875,44876,44877,44878,44879,44881,44882,44883,44884,44885,44886,44887,44888,44889,44890,44891,44894,44895,44896,44897,44898,44899,44902,44903,44904,44905,44906,44907,44908,44909,44910,44911,44912,44913,44914,44915,44916,44917,44918,44919,44920,44922,44923,44924,44925,44926,44927,44929,44930,44931,44933,44934,44935,44937,44938,44939,44940,44941,44942,44943,44946,44947,44948,44950,44951,44952,44953,44954,44955,44957,44958,44959,44960,44961,44962,44963,44964,44965,44966,44967,44968,44969,44970,44971,44972,44973,44974,44975,44976,44977,44978,44979,44980,44981,44982,44983,44986,44987,44989,44990,44991,44993,44994,44995,44996,44997,44998,45002,45004,45007,45008,45009,45010,45011,45013,45014,45015,45016,45017,45018,45019,45021,45022,45023,45024,45025,null,null,null,null,null,null,45026,45027,45028,45029,45030,45031,45034,45035,45036,45037,45038,45039,45042,45043,45045,45046,45047,45049,45050,45051,45052,45053,45054,45055,45058,45059,null,null,null,null,null,null,45061,45062,45063,45064,45065,45066,45067,45069,45070,45071,45073,45074,45075,45077,45078,45079,45080,45081,45082,45083,45086,45087,45088,45089,45090,45091,45092,45093,45094,45095,45097,45098,45099,45100,45101,45102,45103,45104,45105,45106,45107,45108,45109,45110,45111,45112,45113,45114,45115,45116,45117,45118,45119,45120,45121,45122,45123,45126,45127,45129,45131,45133,45135,45136,45137,45138,45142,45144,45146,45147,45148,45150,45151,45152,45153,45154,45155,45156,45157,45158,45159,45160,45161,45162,45163,45164,45165,45166,45167,45168,45169,45170,45171,45172,45173,45174,45175,45176,45177,45178,45179,45182,45183,45185,45186,45187,45189,45190,45191,45192,45193,45194,45195,45198,45200,45202,45203,45204,45205,45206,45207,45211,45213,45214,45219,45220,45221,45222,45223,45226,45232,45234,45238,45239,45241,45242,45243,45245,45246,45247,45248,45249,45250,45251,45254,45258,45259,45260,45261,45262,45263,45266,null,null,null,null,null,null,45267,45269,45270,45271,45273,45274,45275,45276,45277,45278,45279,45281,45282,45283,45284,45286,45287,45288,45289,45290,45291,45292,45293,45294,45295,45296,null,null,null,null,null,null,45297,45298,45299,45300,45301,45302,45303,45304,45305,45306,45307,45308,45309,45310,45311,45312,45313,45314,45315,45316,45317,45318,45319,45322,45325,45326,45327,45329,45332,45333,45334,45335,45338,45342,45343,45344,45345,45346,45350,45351,45353,45354,45355,45357,45358,45359,45360,45361,45362,45363,45366,45370,45371,45372,45373,45374,45375,45378,45379,45381,45382,45383,45385,45386,45387,45388,45389,45390,45391,45394,45395,45398,45399,45401,45402,45403,45405,45406,45407,45409,45410,45411,45412,45413,45414,45415,45416,45417,45418,45419,45420,45421,45422,45423,45424,45425,45426,45427,45428,45429,45430,45431,45434,45435,45437,45438,45439,45441,45443,45444,45445,45446,45447,45450,45452,45454,45455,45456,45457,45461,45462,45463,45465,45466,45467,45469,45470,45471,45472,45473,45474,45475,45476,45477,45478,45479,45481,45482,45483,45484,45485,45486,45487,45488,45489,45490,45491,45492,45493,45494,45495,45496,null,null,null,null,null,null,45497,45498,45499,45500,45501,45502,45503,45504,45505,45506,45507,45508,45509,45510,45511,45512,45513,45514,45515,45517,45518,45519,45521,45522,45523,45525,null,null,null,null,null,null,45526,45527,45528,45529,45530,45531,45534,45536,45537,45538,45539,45540,45541,45542,45543,45546,45547,45549,45550,45551,45553,45554,45555,45556,45557,45558,45559,45560,45562,45564,45566,45567,45568,45569,45570,45571,45574,45575,45577,45578,45581,45582,45583,45584,45585,45586,45587,45590,45592,45594,45595,45596,45597,45598,45599,45601,45602,45603,45604,45605,45606,45607,45608,45609,45610,45611,45612,45613,45614,45615,45616,45617,45618,45619,45621,45622,45623,45624,45625,45626,45627,45629,45630,45631,45632,45633,45634,45635,45636,45637,45638,45639,45640,45641,45642,45643,45644,45645,45646,45647,45648,45649,45650,45651,45652,45653,45654,45655,45657,45658,45659,45661,45662,45663,45665,45666,45667,45668,45669,45670,45671,45674,45675,45676,45677,45678,45679,45680,45681,45682,45683,45686,45687,45688,45689,45690,45691,45693,45694,45695,45696,45697,45698,45699,45702,45703,45704,45706,45707,45708,45709,45710,null,null,null,null,null,null,45711,45714,45715,45717,45718,45719,45723,45724,45725,45726,45727,45730,45732,45735,45736,45737,45739,45741,45742,45743,45745,45746,45747,45749,45750,45751,null,null,null,null,null,null,45752,45753,45754,45755,45756,45757,45758,45759,45760,45761,45762,45763,45764,45765,45766,45767,45770,45771,45773,45774,45775,45777,45779,45780,45781,45782,45783,45786,45788,45790,45791,45792,45793,45795,45799,45801,45802,45808,45809,45810,45814,45820,45821,45822,45826,45827,45829,45830,45831,45833,45834,45835,45836,45837,45838,45839,45842,45846,45847,45848,45849,45850,45851,45853,45854,45855,45856,45857,45858,45859,45860,45861,45862,45863,45864,45865,45866,45867,45868,45869,45870,45871,45872,45873,45874,45875,45876,45877,45878,45879,45880,45881,45882,45883,45884,45885,45886,45887,45888,45889,45890,45891,45892,45893,45894,45895,45896,45897,45898,45899,45900,45901,45902,45903,45904,45905,45906,45907,45911,45913,45914,45917,45920,45921,45922,45923,45926,45928,45930,45932,45933,45935,45938,45939,45941,45942,45943,45945,45946,45947,45948,45949,45950,45951,45954,45958,45959,45960,45961,45962,45963,45965,null,null,null,null,null,null,45966,45967,45969,45970,45971,45973,45974,45975,45976,45977,45978,45979,45980,45981,45982,45983,45986,45987,45988,45989,45990,45991,45993,45994,45995,45997,null,null,null,null,null,null,45998,45999,46000,46001,46002,46003,46004,46005,46006,46007,46008,46009,46010,46011,46012,46013,46014,46015,46016,46017,46018,46019,46022,46023,46025,46026,46029,46031,46033,46034,46035,46038,46040,46042,46044,46046,46047,46049,46050,46051,46053,46054,46055,46057,46058,46059,46060,46061,46062,46063,46064,46065,46066,46067,46068,46069,46070,46071,46072,46073,46074,46075,46077,46078,46079,46080,46081,46082,46083,46084,46085,46086,46087,46088,46089,46090,46091,46092,46093,46094,46095,46097,46098,46099,46100,46101,46102,46103,46105,46106,46107,46109,46110,46111,46113,46114,46115,46116,46117,46118,46119,46122,46124,46125,46126,46127,46128,46129,46130,46131,46133,46134,46135,46136,46137,46138,46139,46140,46141,46142,46143,46144,46145,46146,46147,46148,46149,46150,46151,46152,46153,46154,46155,46156,46157,46158,46159,46162,46163,46165,46166,46167,46169,46170,46171,46172,46173,46174,46175,46178,46180,46182,null,null,null,null,null,null,46183,46184,46185,46186,46187,46189,46190,46191,46192,46193,46194,46195,46196,46197,46198,46199,46200,46201,46202,46203,46204,46205,46206,46207,46209,46210,null,null,null,null,null,null,46211,46212,46213,46214,46215,46217,46218,46219,46220,46221,46222,46223,46224,46225,46226,46227,46228,46229,46230,46231,46232,46233,46234,46235,46236,46238,46239,46240,46241,46242,46243,46245,46246,46247,46249,46250,46251,46253,46254,46255,46256,46257,46258,46259,46260,46262,46264,46266,46267,46268,46269,46270,46271,46273,46274,46275,46277,46278,46279,46281,46282,46283,46284,46285,46286,46287,46289,46290,46291,46292,46294,46295,46296,46297,46298,46299,46302,46303,46305,46306,46309,46311,46312,46313,46314,46315,46318,46320,46322,46323,46324,46325,46326,46327,46329,46330,46331,46332,46333,46334,46335,46336,46337,46338,46339,46340,46341,46342,46343,46344,46345,46346,46347,46348,46349,46350,46351,46352,46353,46354,46355,46358,46359,46361,46362,46365,46366,46367,46368,46369,46370,46371,46374,46379,46380,46381,46382,46383,46386,46387,46389,46390,46391,46393,46394,46395,46396,46397,46398,46399,46402,46406,null,null,null,null,null,null,46407,46408,46409,46410,46414,46415,46417,46418,46419,46421,46422,46423,46424,46425,46426,46427,46430,46434,46435,46436,46437,46438,46439,46440,46441,46442,null,null,null,null,null,null,46443,46444,46445,46446,46447,46448,46449,46450,46451,46452,46453,46454,46455,46456,46457,46458,46459,46460,46461,46462,46463,46464,46465,46466,46467,46468,46469,46470,46471,46472,46473,46474,46475,46476,46477,46478,46479,46480,46481,46482,46483,46484,46485,46486,46487,46488,46489,46490,46491,46492,46493,46494,46495,46498,46499,46501,46502,46503,46505,46508,46509,46510,46511,46514,46518,46519,46520,46521,46522,46526,46527,46529,46530,46531,46533,46534,46535,46536,46537,46538,46539,46542,46546,46547,46548,46549,46550,46551,46553,46554,46555,46556,46557,46558,46559,46560,46561,46562,46563,46564,46565,46566,46567,46568,46569,46570,46571,46573,46574,46575,46576,46577,46578,46579,46580,46581,46582,46583,46584,46585,46586,46587,46588,46589,46590,46591,46592,46593,46594,46595,46596,46597,46598,46599,46600,46601,46602,46603,46604,46605,46606,46607,46610,46611,46613,46614,46615,46617,46618,46619,46620,46621,null,null,null,null,null,null,46622,46623,46624,46625,46626,46627,46628,46630,46631,46632,46633,46634,46635,46637,46638,46639,46640,46641,46642,46643,46645,46646,46647,46648,46649,46650,null,null,null,null,null,null,46651,46652,46653,46654,46655,46656,46657,46658,46659,46660,46661,46662,46663,46665,46666,46667,46668,46669,46670,46671,46672,46673,46674,46675,46676,46677,46678,46679,46680,46681,46682,46683,46684,46685,46686,46687,46688,46689,46690,46691,46693,46694,46695,46697,46698,46699,46700,46701,46702,46703,46704,46705,46706,46707,46708,46709,46710,46711,46712,46713,46714,46715,46716,46717,46718,46719,46720,46721,46722,46723,46724,46725,46726,46727,46728,46729,46730,46731,46732,46733,46734,46735,46736,46737,46738,46739,46740,46741,46742,46743,46744,46745,46746,46747,46750,46751,46753,46754,46755,46757,46758,46759,46760,46761,46762,46765,46766,46767,46768,46770,46771,46772,46773,46774,46775,46776,46777,46778,46779,46780,46781,46782,46783,46784,46785,46786,46787,46788,46789,46790,46791,46792,46793,46794,46795,46796,46797,46798,46799,46800,46801,46802,46803,46805,46806,46807,46808,46809,46810,46811,46812,46813,null,null,null,null,null,null,46814,46815,46816,46817,46818,46819,46820,46821,46822,46823,46824,46825,46826,46827,46828,46829,46830,46831,46833,46834,46835,46837,46838,46839,46841,46842,null,null,null,null,null,null,46843,46844,46845,46846,46847,46850,46851,46852,46854,46855,46856,46857,46858,46859,46860,46861,46862,46863,46864,46865,46866,46867,46868,46869,46870,46871,46872,46873,46874,46875,46876,46877,46878,46879,46880,46881,46882,46883,46884,46885,46886,46887,46890,46891,46893,46894,46897,46898,46899,46900,46901,46902,46903,46906,46908,46909,46910,46911,46912,46913,46914,46915,46917,46918,46919,46921,46922,46923,46925,46926,46927,46928,46929,46930,46931,46934,46935,46936,46937,46938,46939,46940,46941,46942,46943,46945,46946,46947,46949,46950,46951,46953,46954,46955,46956,46957,46958,46959,46962,46964,46966,46967,46968,46969,46970,46971,46974,46975,46977,46978,46979,46981,46982,46983,46984,46985,46986,46987,46990,46995,46996,46997,47002,47003,47005,47006,47007,47009,47010,47011,47012,47013,47014,47015,47018,47022,47023,47024,47025,47026,47027,47030,47031,47033,47034,47035,47036,47037,47038,47039,47040,47041,null,null,null,null,null,null,47042,47043,47044,47045,47046,47048,47050,47051,47052,47053,47054,47055,47056,47057,47058,47059,47060,47061,47062,47063,47064,47065,47066,47067,47068,47069,null,null,null,null,null,null,47070,47071,47072,47073,47074,47075,47076,47077,47078,47079,47080,47081,47082,47083,47086,47087,47089,47090,47091,47093,47094,47095,47096,47097,47098,47099,47102,47106,47107,47108,47109,47110,47114,47115,47117,47118,47119,47121,47122,47123,47124,47125,47126,47127,47130,47132,47134,47135,47136,47137,47138,47139,47142,47143,47145,47146,47147,47149,47150,47151,47152,47153,47154,47155,47158,47162,47163,47164,47165,47166,47167,47169,47170,47171,47173,47174,47175,47176,47177,47178,47179,47180,47181,47182,47183,47184,47186,47188,47189,47190,47191,47192,47193,47194,47195,47198,47199,47201,47202,47203,47205,47206,47207,47208,47209,47210,47211,47214,47216,47218,47219,47220,47221,47222,47223,47225,47226,47227,47229,47230,47231,47232,47233,47234,47235,47236,47237,47238,47239,47240,47241,47242,47243,47244,47246,47247,47248,47249,47250,47251,47252,47253,47254,47255,47256,47257,47258,47259,47260,47261,47262,47263,null,null,null,null,null,null,47264,47265,47266,47267,47268,47269,47270,47271,47273,47274,47275,47276,47277,47278,47279,47281,47282,47283,47285,47286,47287,47289,47290,47291,47292,47293,null,null,null,null,null,null,47294,47295,47298,47300,47302,47303,47304,47305,47306,47307,47309,47310,47311,47313,47314,47315,47317,47318,47319,47320,47321,47322,47323,47324,47326,47328,47330,47331,47332,47333,47334,47335,47338,47339,47341,47342,47343,47345,47346,47347,47348,47349,47350,47351,47354,47356,47358,47359,47360,47361,47362,47363,47365,47366,47367,47368,47369,47370,47371,47372,47373,47374,47375,47376,47377,47378,47379,47380,47381,47382,47383,47385,47386,47387,47388,47389,47390,47391,47393,47394,47395,47396,47397,47398,47399,47400,47401,47402,47403,47404,47405,47406,47407,47408,47409,47410,47411,47412,47413,47414,47415,47416,47417,47418,47419,47422,47423,47425,47426,47427,47429,47430,47431,47432,47433,47434,47435,47437,47438,47440,47442,47443,47444,47445,47446,47447,47450,47451,47453,47454,47455,47457,47458,47459,47460,47461,47462,47463,47466,47468,47470,47471,47472,47473,47474,47475,47478,47479,47481,47482,47483,47485,null,null,null,null,null,null,47486,47487,47488,47489,47490,47491,47494,47496,47499,47500,47503,47504,47505,47506,47507,47508,47509,47510,47511,47512,47513,47514,47515,47516,47517,47518,null,null,null,null,null,null,47519,47520,47521,47522,47523,47524,47525,47526,47527,47528,47529,47530,47531,47534,47535,47537,47538,47539,47541,47542,47543,47544,47545,47546,47547,47550,47552,47554,47555,47556,47557,47558,47559,47562,47563,47565,47571,47572,47573,47574,47575,47578,47580,47583,47584,47586,47590,47591,47593,47594,47595,47597,47598,47599,47600,47601,47602,47603,47606,47611,47612,47613,47614,47615,47618,47619,47620,47621,47622,47623,47625,47626,47627,47628,47629,47630,47631,47632,47633,47634,47635,47636,47638,47639,47640,47641,47642,47643,47644,47645,47646,47647,47648,47649,47650,47651,47652,47653,47654,47655,47656,47657,47658,47659,47660,47661,47662,47663,47664,47665,47666,47667,47668,47669,47670,47671,47674,47675,47677,47678,47679,47681,47683,47684,47685,47686,47687,47690,47692,47695,47696,47697,47698,47702,47703,47705,47706,47707,47709,47710,47711,47712,47713,47714,47715,47718,47722,47723,47724,47725,47726,47727,null,null,null,null,null,null,47730,47731,47733,47734,47735,47737,47738,47739,47740,47741,47742,47743,47744,47745,47746,47750,47752,47753,47754,47755,47757,47758,47759,47760,47761,47762,null,null,null,null,null,null,47763,47764,47765,47766,47767,47768,47769,47770,47771,47772,47773,47774,47775,47776,47777,47778,47779,47780,47781,47782,47783,47786,47789,47790,47791,47793,47795,47796,47797,47798,47799,47802,47804,47806,47807,47808,47809,47810,47811,47813,47814,47815,47817,47818,47819,47820,47821,47822,47823,47824,47825,47826,47827,47828,47829,47830,47831,47834,47835,47836,47837,47838,47839,47840,47841,47842,47843,47844,47845,47846,47847,47848,47849,47850,47851,47852,47853,47854,47855,47856,47857,47858,47859,47860,47861,47862,47863,47864,47865,47866,47867,47869,47870,47871,47873,47874,47875,47877,47878,47879,47880,47881,47882,47883,47884,47886,47888,47890,47891,47892,47893,47894,47895,47897,47898,47899,47901,47902,47903,47905,47906,47907,47908,47909,47910,47911,47912,47914,47916,47917,47918,47919,47920,47921,47922,47923,47927,47929,47930,47935,47936,47937,47938,47939,47942,47944,47946,47947,47948,47950,47953,47954,null,null,null,null,null,null,47955,47957,47958,47959,47961,47962,47963,47964,47965,47966,47967,47968,47970,47972,47973,47974,47975,47976,47977,47978,47979,47981,47982,47983,47984,47985,null,null,null,null,null,null,47986,47987,47988,47989,47990,47991,47992,47993,47994,47995,47996,47997,47998,47999,48000,48001,48002,48003,48004,48005,48006,48007,48009,48010,48011,48013,48014,48015,48017,48018,48019,48020,48021,48022,48023,48024,48025,48026,48027,48028,48029,48030,48031,48032,48033,48034,48035,48037,48038,48039,48041,48042,48043,48045,48046,48047,48048,48049,48050,48051,48053,48054,48056,48057,48058,48059,48060,48061,48062,48063,48065,48066,48067,48069,48070,48071,48073,48074,48075,48076,48077,48078,48079,48081,48082,48084,48085,48086,48087,48088,48089,48090,48091,48092,48093,48094,48095,48096,48097,48098,48099,48100,48101,48102,48103,48104,48105,48106,48107,48108,48109,48110,48111,48112,48113,48114,48115,48116,48117,48118,48119,48122,48123,48125,48126,48129,48131,48132,48133,48134,48135,48138,48142,48144,48146,48147,48153,48154,48160,48161,48162,48163,48166,48168,48170,48171,48172,48174,48175,48178,48179,48181,null,null,null,null,null,null,48182,48183,48185,48186,48187,48188,48189,48190,48191,48194,48198,48199,48200,48202,48203,48206,48207,48209,48210,48211,48212,48213,48214,48215,48216,48217,null,null,null,null,null,null,48218,48219,48220,48222,48223,48224,48225,48226,48227,48228,48229,48230,48231,48232,48233,48234,48235,48236,48237,48238,48239,48240,48241,48242,48243,48244,48245,48246,48247,48248,48249,48250,48251,48252,48253,48254,48255,48256,48257,48258,48259,48262,48263,48265,48266,48269,48271,48272,48273,48274,48275,48278,48280,48283,48284,48285,48286,48287,48290,48291,48293,48294,48297,48298,48299,48300,48301,48302,48303,48306,48310,48311,48312,48313,48314,48315,48318,48319,48321,48322,48323,48325,48326,48327,48328,48329,48330,48331,48332,48334,48338,48339,48340,48342,48343,48345,48346,48347,48349,48350,48351,48352,48353,48354,48355,48356,48357,48358,48359,48360,48361,48362,48363,48364,48365,48366,48367,48368,48369,48370,48371,48375,48377,48378,48379,48381,48382,48383,48384,48385,48386,48387,48390,48392,48394,48395,48396,48397,48398,48399,48401,48402,48403,48405,48406,48407,48408,48409,48410,48411,48412,48413,null,null,null,null,null,null,48414,48415,48416,48417,48418,48419,48421,48422,48423,48424,48425,48426,48427,48429,48430,48431,48432,48433,48434,48435,48436,48437,48438,48439,48440,48441,null,null,null,null,null,null,48442,48443,48444,48445,48446,48447,48449,48450,48451,48452,48453,48454,48455,48458,48459,48461,48462,48463,48465,48466,48467,48468,48469,48470,48471,48474,48475,48476,48477,48478,48479,48480,48481,48482,48483,48485,48486,48487,48489,48490,48491,48492,48493,48494,48495,48496,48497,48498,48499,48500,48501,48502,48503,48504,48505,48506,48507,48508,48509,48510,48511,48514,48515,48517,48518,48523,48524,48525,48526,48527,48530,48532,48534,48535,48536,48539,48541,48542,48543,48544,48545,48546,48547,48549,48550,48551,48552,48553,48554,48555,48556,48557,48558,48559,48561,48562,48563,48564,48565,48566,48567,48569,48570,48571,48572,48573,48574,48575,48576,48577,48578,48579,48580,48581,48582,48583,48584,48585,48586,48587,48588,48589,48590,48591,48592,48593,48594,48595,48598,48599,48601,48602,48603,48605,48606,48607,48608,48609,48610,48611,48612,48613,48614,48615,48616,48618,48619,48620,48621,48622,48623,48625,null,null,null,null,null,null,48626,48627,48629,48630,48631,48633,48634,48635,48636,48637,48638,48639,48641,48642,48644,48646,48647,48648,48649,48650,48651,48654,48655,48657,48658,48659,null,null,null,null,null,null,48661,48662,48663,48664,48665,48666,48667,48670,48672,48673,48674,48675,48676,48677,48678,48679,48680,48681,48682,48683,48684,48685,48686,48687,48688,48689,48690,48691,48692,48693,48694,48695,48696,48697,48698,48699,48700,48701,48702,48703,48704,48705,48706,48707,48710,48711,48713,48714,48715,48717,48719,48720,48721,48722,48723,48726,48728,48732,48733,48734,48735,48738,48739,48741,48742,48743,48745,48747,48748,48749,48750,48751,48754,48758,48759,48760,48761,48762,48766,48767,48769,48770,48771,48773,48774,48775,48776,48777,48778,48779,48782,48786,48787,48788,48789,48790,48791,48794,48795,48796,48797,48798,48799,48800,48801,48802,48803,48804,48805,48806,48807,48809,48810,48811,48812,48813,48814,48815,48816,48817,48818,48819,48820,48821,48822,48823,48824,48825,48826,48827,48828,48829,48830,48831,48832,48833,48834,48835,48836,48837,48838,48839,48840,48841,48842,48843,48844,48845,48846,48847,48850,48851,null,null,null,null,null,null,48853,48854,48857,48858,48859,48860,48861,48862,48863,48865,48866,48870,48871,48872,48873,48874,48875,48877,48878,48879,48880,48881,48882,48883,48884,48885,null,null,null,null,null,null,48886,48887,48888,48889,48890,48891,48892,48893,48894,48895,48896,48898,48899,48900,48901,48902,48903,48906,48907,48908,48909,48910,48911,48912,48913,48914,48915,48916,48917,48918,48919,48922,48926,48927,48928,48929,48930,48931,48932,48933,48934,48935,48936,48937,48938,48939,48940,48941,48942,48943,48944,48945,48946,48947,48948,48949,48950,48951,48952,48953,48954,48955,48956,48957,48958,48959,48962,48963,48965,48966,48967,48969,48970,48971,48972,48973,48974,48975,48978,48979,48980,48982,48983,48984,48985,48986,48987,48988,48989,48990,48991,48992,48993,48994,48995,48996,48997,48998,48999,49000,49001,49002,49003,49004,49005,49006,49007,49008,49009,49010,49011,49012,49013,49014,49015,49016,49017,49018,49019,49020,49021,49022,49023,49024,49025,49026,49027,49028,49029,49030,49031,49032,49033,49034,49035,49036,49037,49038,49039,49040,49041,49042,49043,49045,49046,49047,49048,49049,49050,49051,49052,49053,null,null,null,null,null,null,49054,49055,49056,49057,49058,49059,49060,49061,49062,49063,49064,49065,49066,49067,49068,49069,49070,49071,49073,49074,49075,49076,49077,49078,49079,49080,null,null,null,null,null,null,49081,49082,49083,49084,49085,49086,49087,49088,49089,49090,49091,49092,49094,49095,49096,49097,49098,49099,49102,49103,49105,49106,49107,49109,49110,49111,49112,49113,49114,49115,49117,49118,49120,49122,49123,49124,49125,49126,49127,49128,49129,49130,49131,49132,49133,49134,49135,49136,49137,49138,49139,49140,49141,49142,49143,49144,49145,49146,49147,49148,49149,49150,49151,49152,49153,49154,49155,49156,49157,49158,49159,49160,49161,49162,49163,49164,49165,49166,49167,49168,49169,49170,49171,49172,49173,49174,49175,49176,49177,49178,49179,49180,49181,49182,49183,49184,49185,49186,49187,49188,49189,49190,49191,49192,49193,49194,49195,49196,49197,49198,49199,49200,49201,49202,49203,49204,49205,49206,49207,49208,49209,49210,49211,49213,49214,49215,49216,49217,49218,49219,49220,49221,49222,49223,49224,49225,49226,49227,49228,49229,49230,49231,49232,49234,49235,49236,49237,49238,49239,49241,49242,49243,null,null,null,null,null,null,49245,49246,49247,49249,49250,49251,49252,49253,49254,49255,49258,49259,49260,49261,49262,49263,49264,49265,49266,49267,49268,49269,49270,49271,49272,49273,null,null,null,null,null,null,49274,49275,49276,49277,49278,49279,49280,49281,49282,49283,49284,49285,49286,49287,49288,49289,49290,49291,49292,49293,49294,49295,49298,49299,49301,49302,49303,49305,49306,49307,49308,49309,49310,49311,49314,49316,49318,49319,49320,49321,49322,49323,49326,49329,49330,49335,49336,49337,49338,49339,49342,49346,49347,49348,49350,49351,49354,49355,49357,49358,49359,49361,49362,49363,49364,49365,49366,49367,49370,49374,49375,49376,49377,49378,49379,49382,49383,49385,49386,49387,49389,49390,49391,49392,49393,49394,49395,49398,49400,49402,49403,49404,49405,49406,49407,49409,49410,49411,49413,49414,49415,49417,49418,49419,49420,49421,49422,49423,49425,49426,49427,49428,49430,49431,49432,49433,49434,49435,49441,49442,49445,49448,49449,49450,49451,49454,49458,49459,49460,49461,49463,49466,49467,49469,49470,49471,49473,49474,49475,49476,49477,49478,49479,49482,49486,49487,49488,49489,49490,49491,49494,49495,null,null,null,null,null,null,49497,49498,49499,49501,49502,49503,49504,49505,49506,49507,49510,49514,49515,49516,49517,49518,49519,49521,49522,49523,49525,49526,49527,49529,49530,49531,null,null,null,null,null,null,49532,49533,49534,49535,49536,49537,49538,49539,49540,49542,49543,49544,49545,49546,49547,49551,49553,49554,49555,49557,49559,49560,49561,49562,49563,49566,49568,49570,49571,49572,49574,49575,49578,49579,49581,49582,49583,49585,49586,49587,49588,49589,49590,49591,49592,49593,49594,49595,49596,49598,49599,49600,49601,49602,49603,49605,49606,49607,49609,49610,49611,49613,49614,49615,49616,49617,49618,49619,49621,49622,49625,49626,49627,49628,49629,49630,49631,49633,49634,49635,49637,49638,49639,49641,49642,49643,49644,49645,49646,49647,49650,49652,49653,49654,49655,49656,49657,49658,49659,49662,49663,49665,49666,49667,49669,49670,49671,49672,49673,49674,49675,49678,49680,49682,49683,49684,49685,49686,49687,49690,49691,49693,49694,49697,49698,49699,49700,49701,49702,49703,49706,49708,49710,49712,49715,49717,49718,49719,49720,49721,49722,49723,49724,49725,49726,49727,49728,49729,49730,49731,49732,49733,null,null,null,null,null,null,49734,49735,49737,49738,49739,49740,49741,49742,49743,49746,49747,49749,49750,49751,49753,49754,49755,49756,49757,49758,49759,49761,49762,49763,49764,49766,null,null,null,null,null,null,49767,49768,49769,49770,49771,49774,49775,49777,49778,49779,49781,49782,49783,49784,49785,49786,49787,49790,49792,49794,49795,49796,49797,49798,49799,49802,49803,49804,49805,49806,49807,49809,49810,49811,49812,49813,49814,49815,49817,49818,49820,49822,49823,49824,49825,49826,49827,49830,49831,49833,49834,49835,49838,49839,49840,49841,49842,49843,49846,49848,49850,49851,49852,49853,49854,49855,49856,49857,49858,49859,49860,49861,49862,49863,49864,49865,49866,49867,49868,49869,49870,49871,49872,49873,49874,49875,49876,49877,49878,49879,49880,49881,49882,49883,49886,49887,49889,49890,49893,49894,49895,49896,49897,49898,49902,49904,49906,49907,49908,49909,49911,49914,49917,49918,49919,49921,49922,49923,49924,49925,49926,49927,49930,49931,49934,49935,49936,49937,49938,49942,49943,49945,49946,49947,49949,49950,49951,49952,49953,49954,49955,49958,49959,49962,49963,49964,49965,49966,49967,49968,49969,49970,null,null,null,null,null,null,49971,49972,49973,49974,49975,49976,49977,49978,49979,49980,49981,49982,49983,49984,49985,49986,49987,49988,49990,49991,49992,49993,49994,49995,49996,49997,null,null,null,null,null,null,49998,49999,50000,50001,50002,50003,50004,50005,50006,50007,50008,50009,50010,50011,50012,50013,50014,50015,50016,50017,50018,50019,50020,50021,50022,50023,50026,50027,50029,50030,50031,50033,50035,50036,50037,50038,50039,50042,50043,50046,50047,50048,50049,50050,50051,50053,50054,50055,50057,50058,50059,50061,50062,50063,50064,50065,50066,50067,50068,50069,50070,50071,50072,50073,50074,50075,50076,50077,50078,50079,50080,50081,50082,50083,50084,50085,50086,50087,50088,50089,50090,50091,50092,50093,50094,50095,50096,50097,50098,50099,50100,50101,50102,50103,50104,50105,50106,50107,50108,50109,50110,50111,50113,50114,50115,50116,50117,50118,50119,50120,50121,50122,50123,50124,50125,50126,50127,50128,50129,50130,50131,50132,50133,50134,50135,50138,50139,50141,50142,50145,50147,50148,50149,50150,50151,50154,50155,50156,50158,50159,50160,50161,50162,50163,50166,50167,50169,50170,50171,50172,50173,50174,null,null,null,null,null,null,50175,50176,50177,50178,50179,50180,50181,50182,50183,50185,50186,50187,50188,50189,50190,50191,50193,50194,50195,50196,50197,50198,50199,50200,50201,50202,null,null,null,null,null,null,50203,50204,50205,50206,50207,50208,50209,50210,50211,50213,50214,50215,50216,50217,50218,50219,50221,50222,50223,50225,50226,50227,50229,50230,50231,50232,50233,50234,50235,50238,50239,50240,50241,50242,50243,50244,50245,50246,50247,50249,50250,50251,50252,50253,50254,50255,50256,50257,50258,50259,50260,50261,50262,50263,50264,50265,50266,50267,50268,50269,50270,50271,50272,50273,50274,50275,50278,50279,50281,50282,50283,50285,50286,50287,50288,50289,50290,50291,50294,50295,50296,50298,50299,50300,50301,50302,50303,50305,50306,50307,50308,50309,50310,50311,50312,50313,50314,50315,50316,50317,50318,50319,50320,50321,50322,50323,50325,50326,50327,50328,50329,50330,50331,50333,50334,50335,50336,50337,50338,50339,50340,50341,50342,50343,50344,50345,50346,50347,50348,50349,50350,50351,50352,50353,50354,50355,50356,50357,50358,50359,50361,50362,50363,50365,50366,50367,50368,50369,50370,50371,50372,50373,null,null,null,null,null,null,50374,50375,50376,50377,50378,50379,50380,50381,50382,50383,50384,50385,50386,50387,50388,50389,50390,50391,50392,50393,50394,50395,50396,50397,50398,50399,null,null,null,null,null,null,50400,50401,50402,50403,50404,50405,50406,50407,50408,50410,50411,50412,50413,50414,50415,50418,50419,50421,50422,50423,50425,50427,50428,50429,50430,50434,50435,50436,50437,50438,50439,50440,50441,50442,50443,50445,50446,50447,50449,50450,50451,50453,50454,50455,50456,50457,50458,50459,50461,50462,50463,50464,50465,50466,50467,50468,50469,50470,50471,50474,50475,50477,50478,50479,50481,50482,50483,50484,50485,50486,50487,50490,50492,50494,50495,50496,50497,50498,50499,50502,50503,50507,50511,50512,50513,50514,50518,50522,50523,50524,50527,50530,50531,50533,50534,50535,50537,50538,50539,50540,50541,50542,50543,50546,50550,50551,50552,50553,50554,50555,50558,50559,50561,50562,50563,50565,50566,50568,50569,50570,50571,50574,50576,50578,50579,50580,50582,50585,50586,50587,50589,50590,50591,50593,50594,50595,50596,50597,50598,50599,50600,50602,50603,50604,50605,50606,50607,50608,50609,50610,50611,50614,null,null,null,null,null,null,50615,50618,50623,50624,50625,50626,50627,50635,50637,50639,50642,50643,50645,50646,50647,50649,50650,50651,50652,50653,50654,50655,50658,50660,50662,50663,null,null,null,null,null,null,50664,50665,50666,50667,50671,50673,50674,50675,50677,50680,50681,50682,50683,50690,50691,50692,50697,50698,50699,50701,50702,50703,50705,50706,50707,50708,50709,50710,50711,50714,50717,50718,50719,50720,50721,50722,50723,50726,50727,50729,50730,50731,50735,50737,50738,50742,50744,50746,50748,50749,50750,50751,50754,50755,50757,50758,50759,50761,50762,50763,50764,50765,50766,50767,50770,50774,50775,50776,50777,50778,50779,50782,50783,50785,50786,50787,50788,50789,50790,50791,50792,50793,50794,50795,50797,50798,50800,50802,50803,50804,50805,50806,50807,50810,50811,50813,50814,50815,50817,50818,50819,50820,50821,50822,50823,50826,50828,50830,50831,50832,50833,50834,50835,50838,50839,50841,50842,50843,50845,50846,50847,50848,50849,50850,50851,50854,50856,50858,50859,50860,50861,50862,50863,50866,50867,50869,50870,50871,50875,50876,50877,50878,50879,50882,50884,50886,50887,50888,50889,50890,50891,50894,null,null,null,null,null,null,50895,50897,50898,50899,50901,50902,50903,50904,50905,50906,50907,50910,50911,50914,50915,50916,50917,50918,50919,50922,50923,50925,50926,50927,50929,50930,null,null,null,null,null,null,50931,50932,50933,50934,50935,50938,50939,50940,50942,50943,50944,50945,50946,50947,50950,50951,50953,50954,50955,50957,50958,50959,50960,50961,50962,50963,50966,50968,50970,50971,50972,50973,50974,50975,50978,50979,50981,50982,50983,50985,50986,50987,50988,50989,50990,50991,50994,50996,50998,51000,51001,51002,51003,51006,51007,51009,51010,51011,51013,51014,51015,51016,51017,51019,51022,51024,51033,51034,51035,51037,51038,51039,51041,51042,51043,51044,51045,51046,51047,51049,51050,51052,51053,51054,51055,51056,51057,51058,51059,51062,51063,51065,51066,51067,51071,51072,51073,51074,51078,51083,51084,51085,51087,51090,51091,51093,51097,51099,51100,51101,51102,51103,51106,51111,51112,51113,51114,51115,51118,51119,51121,51122,51123,51125,51126,51127,51128,51129,51130,51131,51134,51138,51139,51140,51141,51142,51143,51146,51147,51149,51151,51153,51154,51155,51156,51157,51158,51159,51161,51162,51163,51164,null,null,null,null,null,null,51166,51167,51168,51169,51170,51171,51173,51174,51175,51177,51178,51179,51181,51182,51183,51184,51185,51186,51187,51188,51189,51190,51191,51192,51193,51194,null,null,null,null,null,null,51195,51196,51197,51198,51199,51202,51203,51205,51206,51207,51209,51211,51212,51213,51214,51215,51218,51220,51223,51224,51225,51226,51227,51230,51231,51233,51234,51235,51237,51238,51239,51240,51241,51242,51243,51246,51248,51250,51251,51252,51253,51254,51255,51257,51258,51259,51261,51262,51263,51265,51266,51267,51268,51269,51270,51271,51274,51275,51278,51279,51280,51281,51282,51283,51285,51286,51287,51288,51289,51290,51291,51292,51293,51294,51295,51296,51297,51298,51299,51300,51301,51302,51303,51304,51305,51306,51307,51308,51309,51310,51311,51314,51315,51317,51318,51319,51321,51323,51324,51325,51326,51327,51330,51332,51336,51337,51338,51342,51343,51344,51345,51346,51347,51349,51350,51351,51352,51353,51354,51355,51356,51358,51360,51362,51363,51364,51365,51366,51367,51369,51370,51371,51372,51373,51374,51375,51376,51377,51378,51379,51380,51381,51382,51383,51384,51385,51386,51387,51390,51391,51392,51393,null,null,null,null,null,null,51394,51395,51397,51398,51399,51401,51402,51403,51405,51406,51407,51408,51409,51410,51411,51414,51416,51418,51419,51420,51421,51422,51423,51426,51427,51429,null,null,null,null,null,null,51430,51431,51432,51433,51434,51435,51436,51437,51438,51439,51440,51441,51442,51443,51444,51446,51447,51448,51449,51450,51451,51454,51455,51457,51458,51459,51463,51464,51465,51466,51467,51470,12288,12289,12290,183,8229,8230,168,12291,173,8213,8741,65340,8764,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,177,215,247,8800,8804,8805,8734,8756,176,8242,8243,8451,8491,65504,65505,65509,9794,9792,8736,8869,8978,8706,8711,8801,8786,167,8251,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8594,8592,8593,8595,8596,12307,8810,8811,8730,8765,8733,8757,8747,8748,8712,8715,8838,8839,8834,8835,8746,8745,8743,8744,65506,51472,51474,51475,51476,51477,51478,51479,51481,51482,51483,51484,51485,51486,51487,51488,51489,51490,51491,51492,51493,51494,51495,51496,51497,51498,51499,null,null,null,null,null,null,51501,51502,51503,51504,51505,51506,51507,51509,51510,51511,51512,51513,51514,51515,51516,51517,51518,51519,51520,51521,51522,51523,51524,51525,51526,51527,null,null,null,null,null,null,51528,51529,51530,51531,51532,51533,51534,51535,51538,51539,51541,51542,51543,51545,51546,51547,51548,51549,51550,51551,51554,51556,51557,51558,51559,51560,51561,51562,51563,51565,51566,51567,8658,8660,8704,8707,180,65374,711,728,733,730,729,184,731,161,191,720,8750,8721,8719,164,8457,8240,9665,9664,9655,9654,9828,9824,9825,9829,9831,9827,8857,9672,9635,9680,9681,9618,9636,9637,9640,9639,9638,9641,9832,9743,9742,9756,9758,182,8224,8225,8597,8599,8601,8598,8600,9837,9833,9834,9836,12927,12828,8470,13255,8482,13250,13272,8481,8364,174,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51569,51570,51571,51573,51574,51575,51576,51577,51578,51579,51581,51582,51583,51584,51585,51586,51587,51588,51589,51590,51591,51594,51595,51597,51598,51599,null,null,null,null,null,null,51601,51602,51603,51604,51605,51606,51607,51610,51612,51614,51615,51616,51617,51618,51619,51620,51621,51622,51623,51624,51625,51626,51627,51628,51629,51630,null,null,null,null,null,null,51631,51632,51633,51634,51635,51636,51637,51638,51639,51640,51641,51642,51643,51644,51645,51646,51647,51650,51651,51653,51654,51657,51659,51660,51661,51662,51663,51666,51668,51671,51672,51675,65281,65282,65283,65284,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65510,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,51678,51679,51681,51683,51685,51686,51688,51689,51690,51691,51694,51698,51699,51700,51701,51702,51703,51706,51707,51709,51710,51711,51713,51714,51715,51716,null,null,null,null,null,null,51717,51718,51719,51722,51726,51727,51728,51729,51730,51731,51733,51734,51735,51737,51738,51739,51740,51741,51742,51743,51744,51745,51746,51747,51748,51749,null,null,null,null,null,null,51750,51751,51752,51754,51755,51756,51757,51758,51759,51760,51761,51762,51763,51764,51765,51766,51767,51768,51769,51770,51771,51772,51773,51774,51775,51776,51777,51778,51779,51780,51781,51782,12593,12594,12595,12596,12597,12598,12599,12600,12601,12602,12603,12604,12605,12606,12607,12608,12609,12610,12611,12612,12613,12614,12615,12616,12617,12618,12619,12620,12621,12622,12623,12624,12625,12626,12627,12628,12629,12630,12631,12632,12633,12634,12635,12636,12637,12638,12639,12640,12641,12642,12643,12644,12645,12646,12647,12648,12649,12650,12651,12652,12653,12654,12655,12656,12657,12658,12659,12660,12661,12662,12663,12664,12665,12666,12667,12668,12669,12670,12671,12672,12673,12674,12675,12676,12677,12678,12679,12680,12681,12682,12683,12684,12685,12686,51783,51784,51785,51786,51787,51790,51791,51793,51794,51795,51797,51798,51799,51800,51801,51802,51803,51806,51810,51811,51812,51813,51814,51815,51817,51818,null,null,null,null,null,null,51819,51820,51821,51822,51823,51824,51825,51826,51827,51828,51829,51830,51831,51832,51833,51834,51835,51836,51838,51839,51840,51841,51842,51843,51845,51846,null,null,null,null,null,null,51847,51848,51849,51850,51851,51852,51853,51854,51855,51856,51857,51858,51859,51860,51861,51862,51863,51865,51866,51867,51868,51869,51870,51871,51872,51873,51874,51875,51876,51877,51878,51879,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,null,null,null,null,null,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,51880,51881,51882,51883,51884,51885,51886,51887,51888,51889,51890,51891,51892,51893,51894,51895,51896,51897,51898,51899,51902,51903,51905,51906,51907,51909,null,null,null,null,null,null,51910,51911,51912,51913,51914,51915,51918,51920,51922,51924,51925,51926,51927,51930,51931,51932,51933,51934,51935,51937,51938,51939,51940,51941,51942,51943,null,null,null,null,null,null,51944,51945,51946,51947,51949,51950,51951,51952,51953,51954,51955,51957,51958,51959,51960,51961,51962,51963,51964,51965,51966,51967,51968,51969,51970,51971,51972,51973,51974,51975,51977,51978,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,9490,9489,9498,9497,9494,9493,9486,9485,9502,9503,9505,9506,9510,9511,9513,9514,9517,9518,9521,9522,9525,9526,9529,9530,9533,9534,9536,9537,9539,9540,9541,9542,9543,9544,9545,9546,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51979,51980,51981,51982,51983,51985,51986,51987,51989,51990,51991,51993,51994,51995,51996,51997,51998,51999,52002,52003,52004,52005,52006,52007,52008,52009,null,null,null,null,null,null,52010,52011,52012,52013,52014,52015,52016,52017,52018,52019,52020,52021,52022,52023,52024,52025,52026,52027,52028,52029,52030,52031,52032,52034,52035,52036,null,null,null,null,null,null,52037,52038,52039,52042,52043,52045,52046,52047,52049,52050,52051,52052,52053,52054,52055,52058,52059,52060,52062,52063,52064,52065,52066,52067,52069,52070,52071,52072,52073,52074,52075,52076,13205,13206,13207,8467,13208,13252,13219,13220,13221,13222,13209,13210,13211,13212,13213,13214,13215,13216,13217,13218,13258,13197,13198,13199,13263,13192,13193,13256,13223,13224,13232,13233,13234,13235,13236,13237,13238,13239,13240,13241,13184,13185,13186,13187,13188,13242,13243,13244,13245,13246,13247,13200,13201,13202,13203,13204,8486,13248,13249,13194,13195,13196,13270,13253,13229,13230,13231,13275,13225,13226,13227,13228,13277,13264,13267,13251,13257,13276,13254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52077,52078,52079,52080,52081,52082,52083,52084,52085,52086,52087,52090,52091,52092,52093,52094,52095,52096,52097,52098,52099,52100,52101,52102,52103,52104,null,null,null,null,null,null,52105,52106,52107,52108,52109,52110,52111,52112,52113,52114,52115,52116,52117,52118,52119,52120,52121,52122,52123,52125,52126,52127,52128,52129,52130,52131,null,null,null,null,null,null,52132,52133,52134,52135,52136,52137,52138,52139,52140,52141,52142,52143,52144,52145,52146,52147,52148,52149,52150,52151,52153,52154,52155,52156,52157,52158,52159,52160,52161,52162,52163,52164,198,208,170,294,null,306,null,319,321,216,338,186,222,358,330,null,12896,12897,12898,12899,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911,12912,12913,12914,12915,12916,12917,12918,12919,12920,12921,12922,12923,9424,9425,9426,9427,9428,9429,9430,9431,9432,9433,9434,9435,9436,9437,9438,9439,9440,9441,9442,9443,9444,9445,9446,9447,9448,9449,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,189,8531,8532,188,190,8539,8540,8541,8542,52165,52166,52167,52168,52169,52170,52171,52172,52173,52174,52175,52176,52177,52178,52179,52181,52182,52183,52184,52185,52186,52187,52188,52189,52190,52191,null,null,null,null,null,null,52192,52193,52194,52195,52197,52198,52200,52202,52203,52204,52205,52206,52207,52208,52209,52210,52211,52212,52213,52214,52215,52216,52217,52218,52219,52220,null,null,null,null,null,null,52221,52222,52223,52224,52225,52226,52227,52228,52229,52230,52231,52232,52233,52234,52235,52238,52239,52241,52242,52243,52245,52246,52247,52248,52249,52250,52251,52254,52255,52256,52259,52260,230,273,240,295,305,307,312,320,322,248,339,223,254,359,331,329,12800,12801,12802,12803,12804,12805,12806,12807,12808,12809,12810,12811,12812,12813,12814,12815,12816,12817,12818,12819,12820,12821,12822,12823,12824,12825,12826,12827,9372,9373,9374,9375,9376,9377,9378,9379,9380,9381,9382,9383,9384,9385,9386,9387,9388,9389,9390,9391,9392,9393,9394,9395,9396,9397,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,185,178,179,8308,8319,8321,8322,8323,8324,52261,52262,52266,52267,52269,52271,52273,52274,52275,52276,52277,52278,52279,52282,52287,52288,52289,52290,52291,52294,52295,52297,52298,52299,52301,52302,null,null,null,null,null,null,52303,52304,52305,52306,52307,52310,52314,52315,52316,52317,52318,52319,52321,52322,52323,52325,52327,52329,52330,52331,52332,52333,52334,52335,52337,52338,null,null,null,null,null,null,52339,52340,52342,52343,52344,52345,52346,52347,52348,52349,52350,52351,52352,52353,52354,52355,52356,52357,52358,52359,52360,52361,52362,52363,52364,52365,52366,52367,52368,52369,52370,52371,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,52372,52373,52374,52375,52378,52379,52381,52382,52383,52385,52386,52387,52388,52389,52390,52391,52394,52398,52399,52400,52401,52402,52403,52406,52407,52409,null,null,null,null,null,null,52410,52411,52413,52414,52415,52416,52417,52418,52419,52422,52424,52426,52427,52428,52429,52430,52431,52433,52434,52435,52437,52438,52439,52440,52441,52442,null,null,null,null,null,null,52443,52444,52445,52446,52447,52448,52449,52450,52451,52453,52454,52455,52456,52457,52458,52459,52461,52462,52463,52465,52466,52467,52468,52469,52470,52471,52472,52473,52474,52475,52476,52477,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,52478,52479,52480,52482,52483,52484,52485,52486,52487,52490,52491,52493,52494,52495,52497,52498,52499,52500,52501,52502,52503,52506,52508,52510,52511,52512,null,null,null,null,null,null,52513,52514,52515,52517,52518,52519,52521,52522,52523,52525,52526,52527,52528,52529,52530,52531,52532,52533,52534,52535,52536,52538,52539,52540,52541,52542,null,null,null,null,null,null,52543,52544,52545,52546,52547,52548,52549,52550,52551,52552,52553,52554,52555,52556,52557,52558,52559,52560,52561,52562,52563,52564,52565,52566,52567,52568,52569,52570,52571,52573,52574,52575,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,52577,52578,52579,52581,52582,52583,52584,52585,52586,52587,52590,52592,52594,52595,52596,52597,52598,52599,52601,52602,52603,52604,52605,52606,52607,52608,null,null,null,null,null,null,52609,52610,52611,52612,52613,52614,52615,52617,52618,52619,52620,52621,52622,52623,52624,52625,52626,52627,52630,52631,52633,52634,52635,52637,52638,52639,null,null,null,null,null,null,52640,52641,52642,52643,52646,52648,52650,52651,52652,52653,52654,52655,52657,52658,52659,52660,52661,52662,52663,52664,52665,52666,52667,52668,52669,52670,52671,52672,52673,52674,52675,52677,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52678,52679,52680,52681,52682,52683,52685,52686,52687,52689,52690,52691,52692,52693,52694,52695,52696,52697,52698,52699,52700,52701,52702,52703,52704,52705,null,null,null,null,null,null,52706,52707,52708,52709,52710,52711,52713,52714,52715,52717,52718,52719,52721,52722,52723,52724,52725,52726,52727,52730,52732,52734,52735,52736,52737,52738,null,null,null,null,null,null,52739,52741,52742,52743,52745,52746,52747,52749,52750,52751,52752,52753,52754,52755,52757,52758,52759,52760,52762,52763,52764,52765,52766,52767,52770,52771,52773,52774,52775,52777,52778,52779,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52780,52781,52782,52783,52786,52788,52790,52791,52792,52793,52794,52795,52796,52797,52798,52799,52800,52801,52802,52803,52804,52805,52806,52807,52808,52809,null,null,null,null,null,null,52810,52811,52812,52813,52814,52815,52816,52817,52818,52819,52820,52821,52822,52823,52826,52827,52829,52830,52834,52835,52836,52837,52838,52839,52842,52844,null,null,null,null,null,null,52846,52847,52848,52849,52850,52851,52854,52855,52857,52858,52859,52861,52862,52863,52864,52865,52866,52867,52870,52872,52874,52875,52876,52877,52878,52879,52882,52883,52885,52886,52887,52889,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52890,52891,52892,52893,52894,52895,52898,52902,52903,52904,52905,52906,52907,52910,52911,52912,52913,52914,52915,52916,52917,52918,52919,52920,52921,52922,null,null,null,null,null,null,52923,52924,52925,52926,52927,52928,52930,52931,52932,52933,52934,52935,52936,52937,52938,52939,52940,52941,52942,52943,52944,52945,52946,52947,52948,52949,null,null,null,null,null,null,52950,52951,52952,52953,52954,52955,52956,52957,52958,52959,52960,52961,52962,52963,52966,52967,52969,52970,52973,52974,52975,52976,52977,52978,52979,52982,52986,52987,52988,52989,52990,52991,44032,44033,44036,44039,44040,44041,44042,44048,44049,44050,44051,44052,44053,44054,44055,44057,44058,44059,44060,44061,44064,44068,44076,44077,44079,44080,44081,44088,44089,44092,44096,44107,44109,44116,44120,44124,44144,44145,44148,44151,44152,44154,44160,44161,44163,44164,44165,44166,44169,44170,44171,44172,44176,44180,44188,44189,44191,44192,44193,44200,44201,44202,44204,44207,44208,44216,44217,44219,44220,44221,44225,44228,44232,44236,44245,44247,44256,44257,44260,44263,44264,44266,44268,44271,44272,44273,44275,44277,44278,44284,44285,44288,44292,44294,52994,52995,52997,52998,52999,53001,53002,53003,53004,53005,53006,53007,53010,53012,53014,53015,53016,53017,53018,53019,53021,53022,53023,53025,53026,53027,null,null,null,null,null,null,53029,53030,53031,53032,53033,53034,53035,53038,53042,53043,53044,53045,53046,53047,53049,53050,53051,53052,53053,53054,53055,53056,53057,53058,53059,53060,null,null,null,null,null,null,53061,53062,53063,53064,53065,53066,53067,53068,53069,53070,53071,53072,53073,53074,53075,53078,53079,53081,53082,53083,53085,53086,53087,53088,53089,53090,53091,53094,53096,53098,53099,53100,44300,44301,44303,44305,44312,44316,44320,44329,44332,44333,44340,44341,44344,44348,44356,44357,44359,44361,44368,44372,44376,44385,44387,44396,44397,44400,44403,44404,44405,44406,44411,44412,44413,44415,44417,44418,44424,44425,44428,44432,44444,44445,44452,44471,44480,44481,44484,44488,44496,44497,44499,44508,44512,44516,44536,44537,44540,44543,44544,44545,44552,44553,44555,44557,44564,44592,44593,44596,44599,44600,44602,44608,44609,44611,44613,44614,44618,44620,44621,44622,44624,44628,44630,44636,44637,44639,44640,44641,44645,44648,44649,44652,44656,44664,53101,53102,53103,53106,53107,53109,53110,53111,53113,53114,53115,53116,53117,53118,53119,53121,53122,53123,53124,53126,53127,53128,53129,53130,53131,53133,null,null,null,null,null,null,53134,53135,53136,53137,53138,53139,53140,53141,53142,53143,53144,53145,53146,53147,53148,53149,53150,53151,53152,53154,53155,53156,53157,53158,53159,53161,null,null,null,null,null,null,53162,53163,53164,53165,53166,53167,53169,53170,53171,53172,53173,53174,53175,53176,53177,53178,53179,53180,53181,53182,53183,53184,53185,53186,53187,53189,53190,53191,53192,53193,53194,53195,44665,44667,44668,44669,44676,44677,44684,44732,44733,44734,44736,44740,44748,44749,44751,44752,44753,44760,44761,44764,44776,44779,44781,44788,44792,44796,44807,44808,44813,44816,44844,44845,44848,44850,44852,44860,44861,44863,44865,44866,44867,44872,44873,44880,44892,44893,44900,44901,44921,44928,44932,44936,44944,44945,44949,44956,44984,44985,44988,44992,44999,45000,45001,45003,45005,45006,45012,45020,45032,45033,45040,45041,45044,45048,45056,45057,45060,45068,45072,45076,45084,45085,45096,45124,45125,45128,45130,45132,45134,45139,45140,45141,45143,45145,53196,53197,53198,53199,53200,53201,53202,53203,53204,53205,53206,53207,53208,53209,53210,53211,53212,53213,53214,53215,53218,53219,53221,53222,53223,53225,null,null,null,null,null,null,53226,53227,53228,53229,53230,53231,53234,53236,53238,53239,53240,53241,53242,53243,53245,53246,53247,53249,53250,53251,53253,53254,53255,53256,53257,53258,null,null,null,null,null,null,53259,53260,53261,53262,53263,53264,53266,53267,53268,53269,53270,53271,53273,53274,53275,53276,53277,53278,53279,53280,53281,53282,53283,53284,53285,53286,53287,53288,53289,53290,53291,53292,45149,45180,45181,45184,45188,45196,45197,45199,45201,45208,45209,45210,45212,45215,45216,45217,45218,45224,45225,45227,45228,45229,45230,45231,45233,45235,45236,45237,45240,45244,45252,45253,45255,45256,45257,45264,45265,45268,45272,45280,45285,45320,45321,45323,45324,45328,45330,45331,45336,45337,45339,45340,45341,45347,45348,45349,45352,45356,45364,45365,45367,45368,45369,45376,45377,45380,45384,45392,45393,45396,45397,45400,45404,45408,45432,45433,45436,45440,45442,45448,45449,45451,45453,45458,45459,45460,45464,45468,45480,45516,45520,45524,45532,45533,53294,53295,53296,53297,53298,53299,53302,53303,53305,53306,53307,53309,53310,53311,53312,53313,53314,53315,53318,53320,53322,53323,53324,53325,53326,53327,null,null,null,null,null,null,53329,53330,53331,53333,53334,53335,53337,53338,53339,53340,53341,53342,53343,53345,53346,53347,53348,53349,53350,53351,53352,53353,53354,53355,53358,53359,null,null,null,null,null,null,53361,53362,53363,53365,53366,53367,53368,53369,53370,53371,53374,53375,53376,53378,53379,53380,53381,53382,53383,53384,53385,53386,53387,53388,53389,53390,53391,53392,53393,53394,53395,53396,45535,45544,45545,45548,45552,45561,45563,45565,45572,45573,45576,45579,45580,45588,45589,45591,45593,45600,45620,45628,45656,45660,45664,45672,45673,45684,45685,45692,45700,45701,45705,45712,45713,45716,45720,45721,45722,45728,45729,45731,45733,45734,45738,45740,45744,45748,45768,45769,45772,45776,45778,45784,45785,45787,45789,45794,45796,45797,45798,45800,45803,45804,45805,45806,45807,45811,45812,45813,45815,45816,45817,45818,45819,45823,45824,45825,45828,45832,45840,45841,45843,45844,45845,45852,45908,45909,45910,45912,45915,45916,45918,45919,45924,45925,53397,53398,53399,53400,53401,53402,53403,53404,53405,53406,53407,53408,53409,53410,53411,53414,53415,53417,53418,53419,53421,53422,53423,53424,53425,53426,null,null,null,null,null,null,53427,53430,53432,53434,53435,53436,53437,53438,53439,53442,53443,53445,53446,53447,53450,53451,53452,53453,53454,53455,53458,53462,53463,53464,53465,53466,null,null,null,null,null,null,53467,53470,53471,53473,53474,53475,53477,53478,53479,53480,53481,53482,53483,53486,53490,53491,53492,53493,53494,53495,53497,53498,53499,53500,53501,53502,53503,53504,53505,53506,53507,53508,45927,45929,45931,45934,45936,45937,45940,45944,45952,45953,45955,45956,45957,45964,45968,45972,45984,45985,45992,45996,46020,46021,46024,46027,46028,46030,46032,46036,46037,46039,46041,46043,46045,46048,46052,46056,46076,46096,46104,46108,46112,46120,46121,46123,46132,46160,46161,46164,46168,46176,46177,46179,46181,46188,46208,46216,46237,46244,46248,46252,46261,46263,46265,46272,46276,46280,46288,46293,46300,46301,46304,46307,46308,46310,46316,46317,46319,46321,46328,46356,46357,46360,46363,46364,46372,46373,46375,46376,46377,46378,46384,46385,46388,46392,53509,53510,53511,53512,53513,53514,53515,53516,53518,53519,53520,53521,53522,53523,53524,53525,53526,53527,53528,53529,53530,53531,53532,53533,53534,53535,null,null,null,null,null,null,53536,53537,53538,53539,53540,53541,53542,53543,53544,53545,53546,53547,53548,53549,53550,53551,53554,53555,53557,53558,53559,53561,53563,53564,53565,53566,null,null,null,null,null,null,53567,53570,53574,53575,53576,53577,53578,53579,53582,53583,53585,53586,53587,53589,53590,53591,53592,53593,53594,53595,53598,53600,53602,53603,53604,53605,53606,53607,53609,53610,53611,53613,46400,46401,46403,46404,46405,46411,46412,46413,46416,46420,46428,46429,46431,46432,46433,46496,46497,46500,46504,46506,46507,46512,46513,46515,46516,46517,46523,46524,46525,46528,46532,46540,46541,46543,46544,46545,46552,46572,46608,46609,46612,46616,46629,46636,46644,46664,46692,46696,46748,46749,46752,46756,46763,46764,46769,46804,46832,46836,46840,46848,46849,46853,46888,46889,46892,46895,46896,46904,46905,46907,46916,46920,46924,46932,46933,46944,46948,46952,46960,46961,46963,46965,46972,46973,46976,46980,46988,46989,46991,46992,46993,46994,46998,46999,53614,53615,53616,53617,53618,53619,53620,53621,53622,53623,53624,53625,53626,53627,53629,53630,53631,53632,53633,53634,53635,53637,53638,53639,53641,53642,null,null,null,null,null,null,53643,53644,53645,53646,53647,53648,53649,53650,53651,53652,53653,53654,53655,53656,53657,53658,53659,53660,53661,53662,53663,53666,53667,53669,53670,53671,null,null,null,null,null,null,53673,53674,53675,53676,53677,53678,53679,53682,53684,53686,53687,53688,53689,53691,53693,53694,53695,53697,53698,53699,53700,53701,53702,53703,53704,53705,53706,53707,53708,53709,53710,53711,47000,47001,47004,47008,47016,47017,47019,47020,47021,47028,47029,47032,47047,47049,47084,47085,47088,47092,47100,47101,47103,47104,47105,47111,47112,47113,47116,47120,47128,47129,47131,47133,47140,47141,47144,47148,47156,47157,47159,47160,47161,47168,47172,47185,47187,47196,47197,47200,47204,47212,47213,47215,47217,47224,47228,47245,47272,47280,47284,47288,47296,47297,47299,47301,47308,47312,47316,47325,47327,47329,47336,47337,47340,47344,47352,47353,47355,47357,47364,47384,47392,47420,47421,47424,47428,47436,47439,47441,47448,47449,47452,47456,47464,47465,53712,53713,53714,53715,53716,53717,53718,53719,53721,53722,53723,53724,53725,53726,53727,53728,53729,53730,53731,53732,53733,53734,53735,53736,53737,53738,null,null,null,null,null,null,53739,53740,53741,53742,53743,53744,53745,53746,53747,53749,53750,53751,53753,53754,53755,53756,53757,53758,53759,53760,53761,53762,53763,53764,53765,53766,null,null,null,null,null,null,53768,53770,53771,53772,53773,53774,53775,53777,53778,53779,53780,53781,53782,53783,53784,53785,53786,53787,53788,53789,53790,53791,53792,53793,53794,53795,53796,53797,53798,53799,53800,53801,47467,47469,47476,47477,47480,47484,47492,47493,47495,47497,47498,47501,47502,47532,47533,47536,47540,47548,47549,47551,47553,47560,47561,47564,47566,47567,47568,47569,47570,47576,47577,47579,47581,47582,47585,47587,47588,47589,47592,47596,47604,47605,47607,47608,47609,47610,47616,47617,47624,47637,47672,47673,47676,47680,47682,47688,47689,47691,47693,47694,47699,47700,47701,47704,47708,47716,47717,47719,47720,47721,47728,47729,47732,47736,47747,47748,47749,47751,47756,47784,47785,47787,47788,47792,47794,47800,47801,47803,47805,47812,47816,47832,47833,47868,53802,53803,53806,53807,53809,53810,53811,53813,53814,53815,53816,53817,53818,53819,53822,53824,53826,53827,53828,53829,53830,53831,53833,53834,53835,53836,null,null,null,null,null,null,53837,53838,53839,53840,53841,53842,53843,53844,53845,53846,53847,53848,53849,53850,53851,53853,53854,53855,53856,53857,53858,53859,53861,53862,53863,53864,null,null,null,null,null,null,53865,53866,53867,53868,53869,53870,53871,53872,53873,53874,53875,53876,53877,53878,53879,53880,53881,53882,53883,53884,53885,53886,53887,53890,53891,53893,53894,53895,53897,53898,53899,53900,47872,47876,47885,47887,47889,47896,47900,47904,47913,47915,47924,47925,47926,47928,47931,47932,47933,47934,47940,47941,47943,47945,47949,47951,47952,47956,47960,47969,47971,47980,48008,48012,48016,48036,48040,48044,48052,48055,48064,48068,48072,48080,48083,48120,48121,48124,48127,48128,48130,48136,48137,48139,48140,48141,48143,48145,48148,48149,48150,48151,48152,48155,48156,48157,48158,48159,48164,48165,48167,48169,48173,48176,48177,48180,48184,48192,48193,48195,48196,48197,48201,48204,48205,48208,48221,48260,48261,48264,48267,48268,48270,48276,48277,48279,53901,53902,53903,53906,53907,53908,53910,53911,53912,53913,53914,53915,53917,53918,53919,53921,53922,53923,53925,53926,53927,53928,53929,53930,53931,53933,null,null,null,null,null,null,53934,53935,53936,53938,53939,53940,53941,53942,53943,53946,53947,53949,53950,53953,53955,53956,53957,53958,53959,53962,53964,53965,53966,53967,53968,53969,null,null,null,null,null,null,53970,53971,53973,53974,53975,53977,53978,53979,53981,53982,53983,53984,53985,53986,53987,53990,53991,53992,53993,53994,53995,53996,53997,53998,53999,54002,54003,54005,54006,54007,54009,54010,48281,48282,48288,48289,48292,48295,48296,48304,48305,48307,48308,48309,48316,48317,48320,48324,48333,48335,48336,48337,48341,48344,48348,48372,48373,48374,48376,48380,48388,48389,48391,48393,48400,48404,48420,48428,48448,48456,48457,48460,48464,48472,48473,48484,48488,48512,48513,48516,48519,48520,48521,48522,48528,48529,48531,48533,48537,48538,48540,48548,48560,48568,48596,48597,48600,48604,48617,48624,48628,48632,48640,48643,48645,48652,48653,48656,48660,48668,48669,48671,48708,48709,48712,48716,48718,48724,48725,48727,48729,48730,48731,48736,48737,48740,54011,54012,54013,54014,54015,54018,54020,54022,54023,54024,54025,54026,54027,54031,54033,54034,54035,54037,54039,54040,54041,54042,54043,54046,54050,54051,null,null,null,null,null,null,54052,54054,54055,54058,54059,54061,54062,54063,54065,54066,54067,54068,54069,54070,54071,54074,54078,54079,54080,54081,54082,54083,54086,54087,54088,54089,null,null,null,null,null,null,54090,54091,54092,54093,54094,54095,54096,54097,54098,54099,54100,54101,54102,54103,54104,54105,54106,54107,54108,54109,54110,54111,54112,54113,54114,54115,54116,54117,54118,54119,54120,54121,48744,48746,48752,48753,48755,48756,48757,48763,48764,48765,48768,48772,48780,48781,48783,48784,48785,48792,48793,48808,48848,48849,48852,48855,48856,48864,48867,48868,48869,48876,48897,48904,48905,48920,48921,48923,48924,48925,48960,48961,48964,48968,48976,48977,48981,49044,49072,49093,49100,49101,49104,49108,49116,49119,49121,49212,49233,49240,49244,49248,49256,49257,49296,49297,49300,49304,49312,49313,49315,49317,49324,49325,49327,49328,49331,49332,49333,49334,49340,49341,49343,49344,49345,49349,49352,49353,49356,49360,49368,49369,49371,49372,49373,49380,54122,54123,54124,54125,54126,54127,54128,54129,54130,54131,54132,54133,54134,54135,54136,54137,54138,54139,54142,54143,54145,54146,54147,54149,54150,54151,null,null,null,null,null,null,54152,54153,54154,54155,54158,54162,54163,54164,54165,54166,54167,54170,54171,54173,54174,54175,54177,54178,54179,54180,54181,54182,54183,54186,54188,54190,null,null,null,null,null,null,54191,54192,54193,54194,54195,54197,54198,54199,54201,54202,54203,54205,54206,54207,54208,54209,54210,54211,54214,54215,54218,54219,54220,54221,54222,54223,54225,54226,54227,54228,54229,54230,49381,49384,49388,49396,49397,49399,49401,49408,49412,49416,49424,49429,49436,49437,49438,49439,49440,49443,49444,49446,49447,49452,49453,49455,49456,49457,49462,49464,49465,49468,49472,49480,49481,49483,49484,49485,49492,49493,49496,49500,49508,49509,49511,49512,49513,49520,49524,49528,49541,49548,49549,49550,49552,49556,49558,49564,49565,49567,49569,49573,49576,49577,49580,49584,49597,49604,49608,49612,49620,49623,49624,49632,49636,49640,49648,49649,49651,49660,49661,49664,49668,49676,49677,49679,49681,49688,49689,49692,49695,49696,49704,49705,49707,49709,54231,54233,54234,54235,54236,54237,54238,54239,54240,54242,54244,54245,54246,54247,54248,54249,54250,54251,54254,54255,54257,54258,54259,54261,54262,54263,null,null,null,null,null,null,54264,54265,54266,54267,54270,54272,54274,54275,54276,54277,54278,54279,54281,54282,54283,54284,54285,54286,54287,54288,54289,54290,54291,54292,54293,54294,null,null,null,null,null,null,54295,54296,54297,54298,54299,54300,54302,54303,54304,54305,54306,54307,54308,54309,54310,54311,54312,54313,54314,54315,54316,54317,54318,54319,54320,54321,54322,54323,54324,54325,54326,54327,49711,49713,49714,49716,49736,49744,49745,49748,49752,49760,49765,49772,49773,49776,49780,49788,49789,49791,49793,49800,49801,49808,49816,49819,49821,49828,49829,49832,49836,49837,49844,49845,49847,49849,49884,49885,49888,49891,49892,49899,49900,49901,49903,49905,49910,49912,49913,49915,49916,49920,49928,49929,49932,49933,49939,49940,49941,49944,49948,49956,49957,49960,49961,49989,50024,50025,50028,50032,50034,50040,50041,50044,50045,50052,50056,50060,50112,50136,50137,50140,50143,50144,50146,50152,50153,50157,50164,50165,50168,50184,50192,50212,50220,50224,54328,54329,54330,54331,54332,54333,54334,54335,54337,54338,54339,54341,54342,54343,54344,54345,54346,54347,54348,54349,54350,54351,54352,54353,54354,54355,null,null,null,null,null,null,54356,54357,54358,54359,54360,54361,54362,54363,54365,54366,54367,54369,54370,54371,54373,54374,54375,54376,54377,54378,54379,54380,54382,54384,54385,54386,null,null,null,null,null,null,54387,54388,54389,54390,54391,54394,54395,54397,54398,54401,54403,54404,54405,54406,54407,54410,54412,54414,54415,54416,54417,54418,54419,54421,54422,54423,54424,54425,54426,54427,54428,54429,50228,50236,50237,50248,50276,50277,50280,50284,50292,50293,50297,50304,50324,50332,50360,50364,50409,50416,50417,50420,50424,50426,50431,50432,50433,50444,50448,50452,50460,50472,50473,50476,50480,50488,50489,50491,50493,50500,50501,50504,50505,50506,50508,50509,50510,50515,50516,50517,50519,50520,50521,50525,50526,50528,50529,50532,50536,50544,50545,50547,50548,50549,50556,50557,50560,50564,50567,50572,50573,50575,50577,50581,50583,50584,50588,50592,50601,50612,50613,50616,50617,50619,50620,50621,50622,50628,50629,50630,50631,50632,50633,50634,50636,50638,54430,54431,54432,54433,54434,54435,54436,54437,54438,54439,54440,54442,54443,54444,54445,54446,54447,54448,54449,54450,54451,54452,54453,54454,54455,54456,null,null,null,null,null,null,54457,54458,54459,54460,54461,54462,54463,54464,54465,54466,54467,54468,54469,54470,54471,54472,54473,54474,54475,54477,54478,54479,54481,54482,54483,54485,null,null,null,null,null,null,54486,54487,54488,54489,54490,54491,54493,54494,54496,54497,54498,54499,54500,54501,54502,54503,54505,54506,54507,54509,54510,54511,54513,54514,54515,54516,54517,54518,54519,54521,54522,54524,50640,50641,50644,50648,50656,50657,50659,50661,50668,50669,50670,50672,50676,50678,50679,50684,50685,50686,50687,50688,50689,50693,50694,50695,50696,50700,50704,50712,50713,50715,50716,50724,50725,50728,50732,50733,50734,50736,50739,50740,50741,50743,50745,50747,50752,50753,50756,50760,50768,50769,50771,50772,50773,50780,50781,50784,50796,50799,50801,50808,50809,50812,50816,50824,50825,50827,50829,50836,50837,50840,50844,50852,50853,50855,50857,50864,50865,50868,50872,50873,50874,50880,50881,50883,50885,50892,50893,50896,50900,50908,50909,50912,50913,50920,54526,54527,54528,54529,54530,54531,54533,54534,54535,54537,54538,54539,54541,54542,54543,54544,54545,54546,54547,54550,54552,54553,54554,54555,54556,54557,null,null,null,null,null,null,54558,54559,54560,54561,54562,54563,54564,54565,54566,54567,54568,54569,54570,54571,54572,54573,54574,54575,54576,54577,54578,54579,54580,54581,54582,54583,null,null,null,null,null,null,54584,54585,54586,54587,54590,54591,54593,54594,54595,54597,54598,54599,54600,54601,54602,54603,54606,54608,54610,54611,54612,54613,54614,54615,54618,54619,54621,54622,54623,54625,54626,54627,50921,50924,50928,50936,50937,50941,50948,50949,50952,50956,50964,50965,50967,50969,50976,50977,50980,50984,50992,50993,50995,50997,50999,51004,51005,51008,51012,51018,51020,51021,51023,51025,51026,51027,51028,51029,51030,51031,51032,51036,51040,51048,51051,51060,51061,51064,51068,51069,51070,51075,51076,51077,51079,51080,51081,51082,51086,51088,51089,51092,51094,51095,51096,51098,51104,51105,51107,51108,51109,51110,51116,51117,51120,51124,51132,51133,51135,51136,51137,51144,51145,51148,51150,51152,51160,51165,51172,51176,51180,51200,51201,51204,51208,51210,54628,54630,54631,54634,54636,54638,54639,54640,54641,54642,54643,54646,54647,54649,54650,54651,54653,54654,54655,54656,54657,54658,54659,54662,54666,54667,null,null,null,null,null,null,54668,54669,54670,54671,54673,54674,54675,54676,54677,54678,54679,54680,54681,54682,54683,54684,54685,54686,54687,54688,54689,54690,54691,54692,54694,54695,null,null,null,null,null,null,54696,54697,54698,54699,54700,54701,54702,54703,54704,54705,54706,54707,54708,54709,54710,54711,54712,54713,54714,54715,54716,54717,54718,54719,54720,54721,54722,54723,54724,54725,54726,54727,51216,51217,51219,51221,51222,51228,51229,51232,51236,51244,51245,51247,51249,51256,51260,51264,51272,51273,51276,51277,51284,51312,51313,51316,51320,51322,51328,51329,51331,51333,51334,51335,51339,51340,51341,51348,51357,51359,51361,51368,51388,51389,51396,51400,51404,51412,51413,51415,51417,51424,51425,51428,51445,51452,51453,51456,51460,51461,51462,51468,51469,51471,51473,51480,51500,51508,51536,51537,51540,51544,51552,51553,51555,51564,51568,51572,51580,51592,51593,51596,51600,51608,51609,51611,51613,51648,51649,51652,51655,51656,51658,51664,51665,51667,54730,54731,54733,54734,54735,54737,54739,54740,54741,54742,54743,54746,54748,54750,54751,54752,54753,54754,54755,54758,54759,54761,54762,54763,54765,54766,null,null,null,null,null,null,54767,54768,54769,54770,54771,54774,54776,54778,54779,54780,54781,54782,54783,54786,54787,54789,54790,54791,54793,54794,54795,54796,54797,54798,54799,54802,null,null,null,null,null,null,54806,54807,54808,54809,54810,54811,54813,54814,54815,54817,54818,54819,54821,54822,54823,54824,54825,54826,54827,54828,54830,54831,54832,54833,54834,54835,54836,54837,54838,54839,54842,54843,51669,51670,51673,51674,51676,51677,51680,51682,51684,51687,51692,51693,51695,51696,51697,51704,51705,51708,51712,51720,51721,51723,51724,51725,51732,51736,51753,51788,51789,51792,51796,51804,51805,51807,51808,51809,51816,51837,51844,51864,51900,51901,51904,51908,51916,51917,51919,51921,51923,51928,51929,51936,51948,51956,51976,51984,51988,51992,52000,52001,52033,52040,52041,52044,52048,52056,52057,52061,52068,52088,52089,52124,52152,52180,52196,52199,52201,52236,52237,52240,52244,52252,52253,52257,52258,52263,52264,52265,52268,52270,52272,52280,52281,52283,54845,54846,54847,54849,54850,54851,54852,54854,54855,54858,54860,54862,54863,54864,54866,54867,54870,54871,54873,54874,54875,54877,54878,54879,54880,54881,null,null,null,null,null,null,54882,54883,54884,54885,54886,54888,54890,54891,54892,54893,54894,54895,54898,54899,54901,54902,54903,54904,54905,54906,54907,54908,54909,54910,54911,54912,null,null,null,null,null,null,54913,54914,54916,54918,54919,54920,54921,54922,54923,54926,54927,54929,54930,54931,54933,54934,54935,54936,54937,54938,54939,54940,54942,54944,54946,54947,54948,54949,54950,54951,54953,54954,52284,52285,52286,52292,52293,52296,52300,52308,52309,52311,52312,52313,52320,52324,52326,52328,52336,52341,52376,52377,52380,52384,52392,52393,52395,52396,52397,52404,52405,52408,52412,52420,52421,52423,52425,52432,52436,52452,52460,52464,52481,52488,52489,52492,52496,52504,52505,52507,52509,52516,52520,52524,52537,52572,52576,52580,52588,52589,52591,52593,52600,52616,52628,52629,52632,52636,52644,52645,52647,52649,52656,52676,52684,52688,52712,52716,52720,52728,52729,52731,52733,52740,52744,52748,52756,52761,52768,52769,52772,52776,52784,52785,52787,52789,54955,54957,54958,54959,54961,54962,54963,54964,54965,54966,54967,54968,54970,54972,54973,54974,54975,54976,54977,54978,54979,54982,54983,54985,54986,54987,null,null,null,null,null,null,54989,54990,54991,54992,54994,54995,54997,54998,55000,55002,55003,55004,55005,55006,55007,55009,55010,55011,55013,55014,55015,55017,55018,55019,55020,55021,null,null,null,null,null,null,55022,55023,55025,55026,55027,55028,55030,55031,55032,55033,55034,55035,55038,55039,55041,55042,55043,55045,55046,55047,55048,55049,55050,55051,55052,55053,55054,55055,55056,55058,55059,55060,52824,52825,52828,52831,52832,52833,52840,52841,52843,52845,52852,52853,52856,52860,52868,52869,52871,52873,52880,52881,52884,52888,52896,52897,52899,52900,52901,52908,52909,52929,52964,52965,52968,52971,52972,52980,52981,52983,52984,52985,52992,52993,52996,53000,53008,53009,53011,53013,53020,53024,53028,53036,53037,53039,53040,53041,53048,53076,53077,53080,53084,53092,53093,53095,53097,53104,53105,53108,53112,53120,53125,53132,53153,53160,53168,53188,53216,53217,53220,53224,53232,53233,53235,53237,53244,53248,53252,53265,53272,53293,53300,53301,53304,53308,55061,55062,55063,55066,55067,55069,55070,55071,55073,55074,55075,55076,55077,55078,55079,55082,55084,55086,55087,55088,55089,55090,55091,55094,55095,55097,null,null,null,null,null,null,55098,55099,55101,55102,55103,55104,55105,55106,55107,55109,55110,55112,55114,55115,55116,55117,55118,55119,55122,55123,55125,55130,55131,55132,55133,55134,null,null,null,null,null,null,55135,55138,55140,55142,55143,55144,55146,55147,55149,55150,55151,55153,55154,55155,55157,55158,55159,55160,55161,55162,55163,55166,55167,55168,55170,55171,55172,55173,55174,55175,55178,55179,53316,53317,53319,53321,53328,53332,53336,53344,53356,53357,53360,53364,53372,53373,53377,53412,53413,53416,53420,53428,53429,53431,53433,53440,53441,53444,53448,53449,53456,53457,53459,53460,53461,53468,53469,53472,53476,53484,53485,53487,53488,53489,53496,53517,53552,53553,53556,53560,53562,53568,53569,53571,53572,53573,53580,53581,53584,53588,53596,53597,53599,53601,53608,53612,53628,53636,53640,53664,53665,53668,53672,53680,53681,53683,53685,53690,53692,53696,53720,53748,53752,53767,53769,53776,53804,53805,53808,53812,53820,53821,53823,53825,53832,53852,55181,55182,55183,55185,55186,55187,55188,55189,55190,55191,55194,55196,55198,55199,55200,55201,55202,55203,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,53860,53888,53889,53892,53896,53904,53905,53909,53916,53920,53924,53932,53937,53944,53945,53948,53951,53952,53954,53960,53961,53963,53972,53976,53980,53988,53989,54000,54001,54004,54008,54016,54017,54019,54021,54028,54029,54030,54032,54036,54038,54044,54045,54047,54048,54049,54053,54056,54057,54060,54064,54072,54073,54075,54076,54077,54084,54085,54140,54141,54144,54148,54156,54157,54159,54160,54161,54168,54169,54172,54176,54184,54185,54187,54189,54196,54200,54204,54212,54213,54216,54217,54224,54232,54241,54243,54252,54253,54256,54260,54268,54269,54271,54273,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54280,54301,54336,54340,54364,54368,54372,54381,54383,54392,54393,54396,54399,54400,54402,54408,54409,54411,54413,54420,54441,54476,54480,54484,54492,54495,54504,54508,54512,54520,54523,54525,54532,54536,54540,54548,54549,54551,54588,54589,54592,54596,54604,54605,54607,54609,54616,54617,54620,54624,54629,54632,54633,54635,54637,54644,54645,54648,54652,54660,54661,54663,54664,54665,54672,54693,54728,54729,54732,54736,54738,54744,54745,54747,54749,54756,54757,54760,54764,54772,54773,54775,54777,54784,54785,54788,54792,54800,54801,54803,54804,54805,54812,54816,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54820,54829,54840,54841,54844,54848,54853,54856,54857,54859,54861,54865,54868,54869,54872,54876,54887,54889,54896,54897,54900,54915,54917,54924,54925,54928,54932,54941,54943,54945,54952,54956,54960,54969,54971,54980,54981,54984,54988,54993,54996,54999,55001,55008,55012,55016,55024,55029,55036,55037,55040,55044,55057,55064,55065,55068,55072,55080,55081,55083,55085,55092,55093,55096,55100,55108,55111,55113,55120,55121,55124,55126,55127,55128,55129,55136,55137,55139,55141,55145,55148,55152,55156,55164,55165,55169,55176,55177,55180,55184,55192,55193,55195,55197,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20285,20339,20551,20729,21152,21487,21621,21733,22025,23233,23478,26247,26550,26551,26607,27468,29634,30146,31292,33499,33540,34903,34952,35382,36040,36303,36603,36838,39381,21051,21364,21508,24682,24932,27580,29647,33050,35258,35282,38307,20355,21002,22718,22904,23014,24178,24185,25031,25536,26438,26604,26751,28567,30286,30475,30965,31240,31487,31777,32925,33390,33393,35563,38291,20075,21917,26359,28212,30883,31469,33883,35088,34638,38824,21208,22350,22570,23884,24863,25022,25121,25954,26577,27204,28187,29976,30131,30435,30640,32058,37039,37969,37970,40853,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21283,23724,30002,32987,37440,38296,21083,22536,23004,23713,23831,24247,24378,24394,24951,27743,30074,30086,31968,32115,32177,32652,33108,33313,34193,35137,35611,37628,38477,40007,20171,20215,20491,20977,22607,24887,24894,24936,25913,27114,28433,30117,30342,30422,31623,33445,33995,63744,37799,38283,21888,23458,22353,63745,31923,32697,37301,20520,21435,23621,24040,25298,25454,25818,25831,28192,28844,31067,36317,36382,63746,36989,37445,37624,20094,20214,20581,24062,24314,24838,26967,33137,34388,36423,37749,39467,20062,20625,26480,26688,20745,21133,21138,27298,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30652,37392,40660,21163,24623,36850,20552,25001,25581,25802,26684,27268,28608,33160,35233,38548,22533,29309,29356,29956,32121,32365,32937,35211,35700,36963,40273,25225,27770,28500,32080,32570,35363,20860,24906,31645,35609,37463,37772,20140,20435,20510,20670,20742,21185,21197,21375,22384,22659,24218,24465,24950,25004,25806,25964,26223,26299,26356,26775,28039,28805,28913,29855,29861,29898,30169,30828,30956,31455,31478,32069,32147,32789,32831,33051,33686,35686,36629,36885,37857,38915,38968,39514,39912,20418,21843,22586,22865,23395,23622,24760,25106,26690,26800,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26856,28330,30028,30328,30926,31293,31995,32363,32380,35336,35489,35903,38542,40388,21476,21481,21578,21617,22266,22993,23396,23611,24235,25335,25911,25925,25970,26272,26543,27073,27837,30204,30352,30590,31295,32660,32771,32929,33167,33510,33533,33776,34241,34865,34996,35493,63747,36764,37678,38599,39015,39640,40723,21741,26011,26354,26767,31296,35895,40288,22256,22372,23825,26118,26801,26829,28414,29736,34974,39908,27752,63748,39592,20379,20844,20849,21151,23380,24037,24656,24685,25329,25511,25915,29657,31354,34467,36002,38799,20018,23521,25096,26524,29916,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31185,33747,35463,35506,36328,36942,37707,38982,24275,27112,34303,37101,63749,20896,23448,23532,24931,26874,27454,28748,29743,29912,31649,32592,33733,35264,36011,38364,39208,21038,24669,25324,36866,20362,20809,21281,22745,24291,26336,27960,28826,29378,29654,31568,33009,37979,21350,25499,32619,20054,20608,22602,22750,24618,24871,25296,27088,39745,23439,32024,32945,36703,20132,20689,21676,21932,23308,23968,24039,25898,25934,26657,27211,29409,30350,30703,32094,32761,33184,34126,34527,36611,36686,37066,39171,39509,39851,19992,20037,20061,20167,20465,20855,21246,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21312,21475,21477,21646,22036,22389,22434,23495,23943,24272,25084,25304,25937,26552,26601,27083,27472,27590,27628,27714,28317,28792,29399,29590,29699,30655,30697,31350,32127,32777,33276,33285,33290,33503,34914,35635,36092,36544,36881,37041,37476,37558,39378,39493,40169,40407,40860,22283,23616,33738,38816,38827,40628,21531,31384,32676,35033,36557,37089,22528,23624,25496,31391,23470,24339,31353,31406,33422,36524,20518,21048,21240,21367,22280,25331,25458,27402,28099,30519,21413,29527,34152,36470,38357,26426,27331,28528,35437,36556,39243,63750,26231,27512,36020,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,39740,63751,21483,22317,22862,25542,27131,29674,30789,31418,31429,31998,33909,35215,36211,36917,38312,21243,22343,30023,31584,33740,37406,63752,27224,20811,21067,21127,25119,26840,26997,38553,20677,21156,21220,25027,26020,26681,27135,29822,31563,33465,33771,35250,35641,36817,39241,63753,20170,22935,25810,26129,27278,29748,31105,31165,33449,34942,34943,35167,63754,37670,20235,21450,24613,25201,27762,32026,32102,20120,20834,30684,32943,20225,20238,20854,20864,21980,22120,22331,22522,22524,22804,22855,22931,23492,23696,23822,24049,24190,24524,25216,26071,26083,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26398,26399,26462,26827,26820,27231,27450,27683,27773,27778,28103,29592,29734,29738,29826,29859,30072,30079,30849,30959,31041,31047,31048,31098,31637,32000,32186,32648,32774,32813,32908,35352,35663,35912,36215,37665,37668,39138,39249,39438,39439,39525,40594,32202,20342,21513,25326,26708,37329,21931,20794,63755,63756,23068,25062,63757,25295,25343,63758,63759,63760,63761,63762,63763,37027,63764,63765,63766,63767,63768,35582,63769,63770,63771,63772,26262,63773,29014,63774,63775,38627,63776,25423,25466,21335,63777,26511,26976,28275,63778,30007,63779,63780,63781,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32013,63782,63783,34930,22218,23064,63784,63785,63786,63787,63788,20035,63789,20839,22856,26608,32784,63790,22899,24180,25754,31178,24565,24684,25288,25467,23527,23511,21162,63791,22900,24361,24594,63792,63793,63794,29785,63795,63796,63797,63798,63799,63800,39377,63801,63802,63803,63804,63805,63806,63807,63808,63809,63810,63811,28611,63812,63813,33215,36786,24817,63814,63815,33126,63816,63817,23615,63818,63819,63820,63821,63822,63823,63824,63825,23273,35365,26491,32016,63826,63827,63828,63829,63830,63831,33021,63832,63833,23612,27877,21311,28346,22810,33590,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20025,20150,20294,21934,22296,22727,24406,26039,26086,27264,27573,28237,30701,31471,31774,32222,34507,34962,37170,37723,25787,28606,29562,30136,36948,21846,22349,25018,25812,26311,28129,28251,28525,28601,30192,32835,33213,34113,35203,35527,35674,37663,27795,30035,31572,36367,36957,21776,22530,22616,24162,25095,25758,26848,30070,31958,34739,40680,20195,22408,22382,22823,23565,23729,24118,24453,25140,25825,29619,33274,34955,36024,38538,40667,23429,24503,24755,20498,20992,21040,22294,22581,22615,23566,23648,23798,23947,24230,24466,24764,25361,25481,25623,26691,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26873,27330,28120,28193,28372,28644,29182,30428,30585,31153,31291,33796,35241,36077,36339,36424,36867,36884,36947,37117,37709,38518,38876,27602,28678,29272,29346,29544,30563,31167,31716,32411,35712,22697,24775,25958,26109,26302,27788,28958,29129,35930,38931,20077,31361,20189,20908,20941,21205,21516,24999,26481,26704,26847,27934,28540,30140,30643,31461,33012,33891,37509,20828,26007,26460,26515,30168,31431,33651,63834,35910,36887,38957,23663,33216,33434,36929,36975,37389,24471,23965,27225,29128,30331,31561,34276,35588,37159,39472,21895,25078,63835,30313,32645,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34367,34746,35064,37007,63836,27931,28889,29662,32097,33853,63837,37226,39409,63838,20098,21365,27396,27410,28734,29211,34349,40478,21068,36771,23888,25829,25900,27414,28651,31811,32412,34253,35172,35261,25289,33240,34847,24266,26391,28010,29436,29701,29807,34690,37086,20358,23821,24480,33802,20919,25504,30053,20142,20486,20841,20937,26753,27153,31918,31921,31975,33391,35538,36635,37327,20406,20791,21237,21570,24300,24942,25150,26053,27354,28670,31018,34268,34851,38317,39522,39530,40599,40654,21147,26310,27511,28701,31019,36706,38722,24976,25088,25891,28451,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29001,29833,32244,32879,34030,36646,36899,37706,20925,21015,21155,27916,28872,35010,24265,25986,27566,28610,31806,29557,20196,20278,22265,63839,23738,23994,24604,29618,31533,32666,32718,32838,36894,37428,38646,38728,38936,40801,20363,28583,31150,37300,38583,21214,63840,25736,25796,27347,28510,28696,29200,30439,32769,34310,34396,36335,36613,38706,39791,40442,40565,30860,31103,32160,33737,37636,40575,40595,35542,22751,24324,26407,28711,29903,31840,32894,20769,28712,29282,30922,36034,36058,36084,38647,20102,20698,23534,24278,26009,29134,30274,30637,32842,34044,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36988,39719,40845,22744,23105,23650,27155,28122,28431,30267,32047,32311,34078,35128,37860,38475,21129,26066,26611,27060,27969,28316,28687,29705,29792,30041,30244,30827,35628,39006,20845,25134,38520,20374,20523,23833,28138,32184,36650,24459,24900,26647,63841,38534,21202,32907,20956,20940,26974,31260,32190,33777,38517,20442,21033,21400,21519,21774,23653,24743,26446,26792,28012,29313,29432,29702,29827,63842,30178,31852,32633,32696,33673,35023,35041,37324,37328,38626,39881,21533,28542,29136,29848,34298,36522,38563,40023,40607,26519,28107,29747,33256,38678,30764,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31435,31520,31890,25705,29802,30194,30908,30952,39340,39764,40635,23518,24149,28448,33180,33707,37000,19975,21325,23081,24018,24398,24930,25405,26217,26364,28415,28459,28771,30622,33836,34067,34875,36627,39237,39995,21788,25273,26411,27819,33545,35178,38778,20129,22916,24536,24537,26395,32178,32596,33426,33579,33725,36638,37017,22475,22969,23186,23504,26151,26522,26757,27599,29028,32629,36023,36067,36993,39749,33032,35978,38476,39488,40613,23391,27667,29467,30450,30431,33804,20906,35219,20813,20885,21193,26825,27796,30468,30496,32191,32236,38754,40629,28357,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34065,20901,21517,21629,26126,26269,26919,28319,30399,30609,33559,33986,34719,37225,37528,40180,34946,20398,20882,21215,22982,24125,24917,25720,25721,26286,26576,27169,27597,27611,29279,29281,29761,30520,30683,32791,33468,33541,35584,35624,35980,26408,27792,29287,30446,30566,31302,40361,27519,27794,22818,26406,33945,21359,22675,22937,24287,25551,26164,26483,28218,29483,31447,33495,37672,21209,24043,25006,25035,25098,25287,25771,26080,26969,27494,27595,28961,29687,30045,32326,33310,33538,34154,35491,36031,38695,40289,22696,40664,20497,21006,21563,21839,25991,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27766,32010,32011,32862,34442,38272,38639,21247,27797,29289,21619,23194,23614,23883,24396,24494,26410,26806,26979,28220,28228,30473,31859,32654,34183,35598,36855,38753,40692,23735,24758,24845,25003,25935,26107,26108,27665,27887,29599,29641,32225,38292,23494,34588,35600,21085,21338,25293,25615,25778,26420,27192,27850,29632,29854,31636,31893,32283,33162,33334,34180,36843,38649,39361,20276,21322,21453,21467,25292,25644,25856,26001,27075,27886,28504,29677,30036,30242,30436,30460,30928,30971,31020,32070,33324,34784,36820,38930,39151,21187,25300,25765,28196,28497,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30332,36299,37297,37474,39662,39747,20515,20621,22346,22952,23592,24135,24439,25151,25918,26041,26049,26121,26507,27036,28354,30917,32033,32938,33152,33323,33459,33953,34444,35370,35607,37030,38450,40848,20493,20467,63843,22521,24472,25308,25490,26479,28227,28953,30403,32972,32986,35060,35061,35097,36064,36649,37197,38506,20271,20336,24091,26575,26658,30333,30334,39748,24161,27146,29033,29140,30058,63844,32321,34115,34281,39132,20240,31567,32624,38309,20961,24070,26805,27710,27726,27867,29359,31684,33539,27861,29754,20731,21128,22721,25816,27287,29863,30294,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30887,34327,38370,38713,63845,21342,24321,35722,36776,36783,37002,21029,30629,40009,40712,19993,20482,20853,23643,24183,26142,26170,26564,26821,28851,29953,30149,31177,31453,36647,39200,39432,20445,22561,22577,23542,26222,27493,27921,28282,28541,29668,29995,33769,35036,35091,35676,36628,20239,20693,21264,21340,23443,24489,26381,31119,33145,33583,34068,35079,35206,36665,36667,39333,39954,26412,20086,20472,22857,23553,23791,23792,25447,26834,28925,29090,29739,32299,34028,34562,36898,37586,40179,19981,20184,20463,20613,21078,21103,21542,21648,22496,22827,23142,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23386,23413,23500,24220,63846,25206,25975,26023,28014,28325,29238,31526,31807,32566,33104,33105,33178,33344,33433,33705,35331,36000,36070,36091,36212,36282,37096,37340,38428,38468,39385,40167,21271,20998,21545,22132,22707,22868,22894,24575,24996,25198,26128,27774,28954,30406,31881,31966,32027,33452,36033,38640,63847,20315,24343,24447,25282,23849,26379,26842,30844,32323,40300,19989,20633,21269,21290,21329,22915,23138,24199,24754,24970,25161,25209,26000,26503,27047,27604,27606,27607,27608,27832,63848,29749,30202,30738,30865,31189,31192,31875,32203,32737,32933,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,33086,33218,33778,34586,35048,35513,35692,36027,37145,38750,39131,40763,22188,23338,24428,25996,27315,27567,27996,28657,28693,29277,29613,36007,36051,38971,24977,27703,32856,39425,20045,20107,20123,20181,20282,20284,20351,20447,20735,21490,21496,21766,21987,22235,22763,22882,23057,23531,23546,23556,24051,24107,24473,24605,25448,26012,26031,26614,26619,26797,27515,27801,27863,28195,28681,29509,30722,31038,31040,31072,31169,31721,32023,32114,32902,33293,33678,34001,34503,35039,35408,35422,35613,36060,36198,36781,37034,39164,39391,40605,21066,63849,26388,63850,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20632,21034,23665,25955,27733,29642,29987,30109,31639,33948,37240,38704,20087,25746,27578,29022,34217,19977,63851,26441,26862,28183,33439,34072,34923,25591,28545,37394,39087,19978,20663,20687,20767,21830,21930,22039,23360,23577,23776,24120,24202,24224,24258,24819,26705,27233,28248,29245,29248,29376,30456,31077,31665,32724,35059,35316,35443,35937,36062,38684,22622,29885,36093,21959,63852,31329,32034,33394,29298,29983,29989,63853,31513,22661,22779,23996,24207,24246,24464,24661,25234,25471,25933,26257,26329,26360,26646,26866,29312,29790,31598,32110,32214,32626,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32997,33298,34223,35199,35475,36893,37604,40653,40736,22805,22893,24109,24796,26132,26227,26512,27728,28101,28511,30707,30889,33990,37323,37675,20185,20682,20808,21892,23307,23459,25159,25982,26059,28210,29053,29697,29764,29831,29887,30316,31146,32218,32341,32680,33146,33203,33337,34330,34796,35445,36323,36984,37521,37925,39245,39854,21352,23633,26964,27844,27945,28203,33292,34203,35131,35373,35498,38634,40807,21089,26297,27570,32406,34814,36109,38275,38493,25885,28041,29166,63854,22478,22995,23468,24615,24826,25104,26143,26207,29481,29689,30427,30465,31596,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32854,32882,33125,35488,37266,19990,21218,27506,27927,31237,31545,32048,63855,36016,21484,22063,22609,23477,23567,23569,24034,25152,25475,25620,26157,26803,27836,28040,28335,28703,28836,29138,29990,30095,30094,30233,31505,31712,31787,32032,32057,34092,34157,34311,35380,36877,36961,37045,37559,38902,39479,20439,23660,26463,28049,31903,32396,35606,36118,36895,23403,24061,25613,33984,36956,39137,29575,23435,24730,26494,28126,35359,35494,36865,38924,21047,63856,28753,30862,37782,34928,37335,20462,21463,22013,22234,22402,22781,23234,23432,23723,23744,24101,24833,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,25101,25163,25480,25628,25910,25976,27193,27530,27700,27929,28465,29159,29417,29560,29703,29874,30246,30561,31168,31319,31466,31929,32143,32172,32353,32670,33065,33585,33936,34010,34282,34966,35504,35728,36664,36930,36995,37228,37526,37561,38539,38567,38568,38614,38656,38920,39318,39635,39706,21460,22654,22809,23408,23487,28113,28506,29087,29729,29881,32901,33789,24033,24455,24490,24642,26092,26642,26991,27219,27529,27957,28147,29667,30462,30636,31565,32020,33059,33308,33600,34036,34147,35426,35524,37255,37662,38918,39348,25100,34899,36848,37477,23815,23847,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23913,29791,33181,34664,28629,25342,32722,35126,35186,19998,20056,20711,21213,21319,25215,26119,32361,34821,38494,20365,21273,22070,22987,23204,23608,23630,23629,24066,24337,24643,26045,26159,26178,26558,26612,29468,30690,31034,32709,33940,33997,35222,35430,35433,35553,35925,35962,22516,23508,24335,24687,25325,26893,27542,28252,29060,31698,34645,35672,36606,39135,39166,20280,20353,20449,21627,23072,23480,24892,26032,26216,29180,30003,31070,32051,33102,33251,33688,34218,34254,34563,35338,36523,36763,63857,36805,22833,23460,23526,24713,23529,23563,24515,27777,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63858,28145,28683,29978,33455,35574,20160,21313,63859,38617,27663,20126,20420,20818,21854,23077,23784,25105,29273,33469,33706,34558,34905,35357,38463,38597,39187,40201,40285,22538,23731,23997,24132,24801,24853,25569,27138,28197,37122,37716,38990,39952,40823,23433,23736,25353,26191,26696,30524,38593,38797,38996,39839,26017,35585,36555,38332,21813,23721,24022,24245,26263,30284,33780,38343,22739,25276,29390,40232,20208,22830,24591,26171,27523,31207,40230,21395,21696,22467,23830,24859,26326,28079,30861,33406,38552,38724,21380,25212,25494,28082,32266,33099,38989,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27387,32588,40367,40474,20063,20539,20918,22812,24825,25590,26928,29242,32822,63860,37326,24369,63861,63862,32004,33509,33903,33979,34277,36493,63863,20335,63864,63865,22756,23363,24665,25562,25880,25965,26264,63866,26954,27171,27915,28673,29036,30162,30221,31155,31344,63867,32650,63868,35140,63869,35731,37312,38525,63870,39178,22276,24481,26044,28417,30208,31142,35486,39341,39770,40812,20740,25014,25233,27277,33222,20547,22576,24422,28937,35328,35578,23420,34326,20474,20796,22196,22852,25513,28153,23978,26989,20870,20104,20313,63871,63872,63873,22914,63874,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63875,27487,27741,63876,29877,30998,63877,33287,33349,33593,36671,36701,63878,39192,63879,63880,63881,20134,63882,22495,24441,26131,63883,63884,30123,32377,35695,63885,36870,39515,22181,22567,23032,23071,23476,63886,24310,63887,63888,25424,25403,63889,26941,27783,27839,28046,28051,28149,28436,63890,28895,28982,29017,63891,29123,29141,63892,30799,30831,63893,31605,32227,63894,32303,63895,34893,36575,63896,63897,63898,37467,63899,40182,63900,63901,63902,24709,28037,63903,29105,63904,63905,38321,21421,63906,63907,63908,26579,63909,28814,28976,29744,33398,33490,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63910,38331,39653,40573,26308,63911,29121,33865,63912,63913,22603,63914,63915,23992,24433,63916,26144,26254,27001,27054,27704,27891,28214,28481,28634,28699,28719,29008,29151,29552,63917,29787,63918,29908,30408,31310,32403,63919,63920,33521,35424,36814,63921,37704,63922,38681,63923,63924,20034,20522,63925,21000,21473,26355,27757,28618,29450,30591,31330,33454,34269,34306,63926,35028,35427,35709,35947,63927,37555,63928,38675,38928,20116,20237,20425,20658,21320,21566,21555,21978,22626,22714,22887,23067,23524,24735,63929,25034,25942,26111,26212,26791,27738,28595,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28879,29100,29522,31613,34568,35492,39986,40711,23627,27779,29508,29577,37434,28331,29797,30239,31337,32277,34314,20800,22725,25793,29934,29973,30320,32705,37013,38605,39252,28198,29926,31401,31402,33253,34521,34680,35355,23113,23436,23451,26785,26880,28003,29609,29715,29740,30871,32233,32747,33048,33109,33694,35916,38446,38929,26352,24448,26106,26505,27754,29579,20525,23043,27498,30702,22806,23916,24013,29477,30031,63930,63931,20709,20985,22575,22829,22934,23002,23525,63932,63933,23970,25303,25622,25747,25854,63934,26332,63935,27208,63936,29183,29796,63937,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31368,31407,32327,32350,32768,33136,63938,34799,35201,35616,36953,63939,36992,39250,24958,27442,28020,32287,35109,36785,20433,20653,20887,21191,22471,22665,23481,24248,24898,27029,28044,28263,28342,29076,29794,29992,29996,32883,33592,33993,36362,37780,37854,63940,20110,20305,20598,20778,21448,21451,21491,23431,23507,23588,24858,24962,26100,29275,29591,29760,30402,31056,31121,31161,32006,32701,33419,34261,34398,36802,36935,37109,37354,38533,38632,38633,21206,24423,26093,26161,26671,29020,31286,37057,38922,20113,63941,27218,27550,28560,29065,32792,33464,34131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36939,38549,38642,38907,34074,39729,20112,29066,38596,20803,21407,21729,22291,22290,22435,23195,23236,23491,24616,24895,25588,27781,27961,28274,28304,29232,29503,29783,33489,34945,36677,36960,63942,38498,39000,40219,26376,36234,37470,20301,20553,20702,21361,22285,22996,23041,23561,24944,26256,28205,29234,29771,32239,32963,33806,33894,34111,34655,34907,35096,35586,36949,38859,39759,20083,20369,20754,20842,63943,21807,21929,23418,23461,24188,24189,24254,24736,24799,24840,24841,25540,25912,26377,63944,26580,26586,63945,26977,26978,27833,27943,63946,28216,63947,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28641,29494,29495,63948,29788,30001,63949,30290,63950,63951,32173,33278,33848,35029,35480,35547,35565,36400,36418,36938,36926,36986,37193,37321,37742,63952,63953,22537,63954,27603,32905,32946,63955,63956,20801,22891,23609,63957,63958,28516,29607,32996,36103,63959,37399,38287,63960,63961,63962,63963,32895,25102,28700,32104,34701,63964,22432,24681,24903,27575,35518,37504,38577,20057,21535,28139,34093,38512,38899,39150,25558,27875,37009,20957,25033,33210,40441,20381,20506,20736,23452,24847,25087,25836,26885,27589,30097,30691,32681,33380,34191,34811,34915,35516,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,35696,37291,20108,20197,20234,63965,63966,22839,23016,63967,24050,24347,24411,24609,63968,63969,63970,63971,29246,29669,63972,30064,30157,63973,31227,63974,32780,32819,32900,33505,33617,63975,63976,36029,36019,36999,63977,63978,39156,39180,63979,63980,28727,30410,32714,32716,32764,35610,20154,20161,20995,21360,63981,21693,22240,23035,23493,24341,24525,28270,63982,63983,32106,33589,63984,34451,35469,63985,38765,38775,63986,63987,19968,20314,20350,22777,26085,28322,36920,37808,39353,20219,22764,22922,23001,24641,63988,63989,31252,63990,33615,36035,20837,21316,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63991,63992,63993,20173,21097,23381,33471,20180,21050,21672,22985,23039,23376,23383,23388,24675,24904,28363,28825,29038,29574,29943,30133,30913,32043,32773,33258,33576,34071,34249,35566,36039,38604,20316,21242,22204,26027,26152,28796,28856,29237,32189,33421,37196,38592,40306,23409,26855,27544,28538,30430,23697,26283,28507,31668,31786,34870,38620,19976,20183,21280,22580,22715,22767,22892,23559,24115,24196,24373,25484,26290,26454,27167,27299,27404,28479,29254,63994,29520,29835,31456,31911,33144,33247,33255,33674,33900,34083,34196,34255,35037,36115,37292,38263,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38556,20877,21705,22312,23472,25165,26448,26685,26771,28221,28371,28797,32289,35009,36001,36617,40779,40782,29229,31631,35533,37658,20295,20302,20786,21632,22992,24213,25269,26485,26990,27159,27822,28186,29401,29482,30141,31672,32053,33511,33785,33879,34295,35419,36015,36487,36889,37048,38606,40799,21219,21514,23265,23490,25688,25973,28404,29380,63995,30340,31309,31515,31821,32318,32735,33659,35627,36042,36196,36321,36447,36842,36857,36969,37841,20291,20346,20659,20840,20856,21069,21098,22625,22652,22880,23560,23637,24283,24731,25136,26643,27583,27656,28593,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29006,29728,30000,30008,30033,30322,31564,31627,31661,31686,32399,35438,36670,36681,37439,37523,37666,37931,38651,39002,39019,39198,20999,25130,25240,27993,30308,31434,31680,32118,21344,23742,24215,28472,28857,31896,38673,39822,40670,25509,25722,34678,19969,20117,20141,20572,20597,21576,22979,23450,24128,24237,24311,24449,24773,25402,25919,25972,26060,26230,26232,26622,26984,27273,27491,27712,28096,28136,28191,28254,28702,28833,29582,29693,30010,30555,30855,31118,31243,31357,31934,32142,33351,35330,35562,35998,37165,37194,37336,37478,37580,37664,38662,38742,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38748,38914,40718,21046,21137,21884,22564,24093,24351,24716,25552,26799,28639,31085,31532,33229,34234,35069,35576,36420,37261,38500,38555,38717,38988,40778,20430,20806,20939,21161,22066,24340,24427,25514,25805,26089,26177,26362,26361,26397,26781,26839,27133,28437,28526,29031,29157,29226,29866,30522,31062,31066,31199,31264,31381,31895,31967,32068,32368,32903,34299,34468,35412,35519,36249,36481,36896,36973,37347,38459,38613,40165,26063,31751,36275,37827,23384,23562,21330,25305,29469,20519,23447,24478,24752,24939,26837,28121,29742,31278,32066,32156,32305,33131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36394,36405,37758,37912,20304,22352,24038,24231,25387,32618,20027,20303,20367,20570,23005,32964,21610,21608,22014,22863,23449,24030,24282,26205,26417,26609,26666,27880,27954,28234,28557,28855,29664,30087,31820,32002,32044,32162,33311,34523,35387,35461,36208,36490,36659,36913,37198,37202,37956,39376,31481,31909,20426,20737,20934,22472,23535,23803,26201,27197,27994,28310,28652,28940,30063,31459,34850,36897,36981,38603,39423,33537,20013,20210,34886,37325,21373,27355,26987,27713,33914,22686,24974,26366,25327,28893,29969,30151,32338,33976,35657,36104,20043,21482,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21675,22320,22336,24535,25345,25351,25711,25903,26088,26234,26525,26547,27490,27744,27802,28460,30693,30757,31049,31063,32025,32930,33026,33267,33437,33463,34584,35468,63996,36100,36286,36978,30452,31257,31287,32340,32887,21767,21972,22645,25391,25634,26185,26187,26733,27035,27524,27941,28337,29645,29800,29857,30043,30137,30433,30494,30603,31206,32265,32285,33275,34095,34967,35386,36049,36587,36784,36914,37805,38499,38515,38663,20356,21489,23018,23241,24089,26702,29894,30142,31209,31378,33187,34541,36074,36300,36845,26015,26389,63997,22519,28503,32221,36655,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37878,38598,24501,25074,28548,19988,20376,20511,21449,21983,23919,24046,27425,27492,30923,31642,63998,36425,36554,36974,25417,25662,30528,31364,37679,38015,40810,25776,28591,29158,29864,29914,31428,31762,32386,31922,32408,35738,36106,38013,39184,39244,21049,23519,25830,26413,32046,20717,21443,22649,24920,24921,25082,26028,31449,35730,35734,20489,20513,21109,21809,23100,24288,24432,24884,25950,26124,26166,26274,27085,28356,28466,29462,30241,31379,33081,33369,33750,33980,20661,22512,23488,23528,24425,25505,30758,32181,33756,34081,37319,37365,20874,26613,31574,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36012,20932,22971,24765,34389,20508,63999,21076,23610,24957,25114,25299,25842,26021,28364,30240,33034,36448,38495,38587,20191,21315,21912,22825,24029,25797,27849,28154,29588,31359,33307,34214,36068,36368,36983,37351,38369,38433,38854,20984,21746,21894,24505,25764,28552,32180,36639,36685,37941,20681,23574,27838,28155,29979,30651,31805,31844,35449,35522,22558,22974,24086,25463,29266,30090,30571,35548,36028,36626,24307,26228,28152,32893,33729,35531,38737,39894,64000,21059,26367,28053,28399,32224,35558,36910,36958,39636,21021,21119,21736,24980,25220,25307,26786,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26898,26970,27189,28818,28966,30813,30977,30990,31186,31245,32918,33400,33493,33609,34121,35970,36229,37218,37259,37294,20419,22225,29165,30679,34560,35320,23544,24534,26449,37032,21474,22618,23541,24740,24961,25696,32317,32880,34085,37507,25774,20652,23828,26368,22684,25277,25512,26894,27000,27166,28267,30394,31179,33467,33833,35535,36264,36861,37138,37195,37276,37648,37656,37786,38619,39478,39949,19985,30044,31069,31482,31569,31689,32302,33988,36441,36468,36600,36880,26149,26943,29763,20986,26414,40668,20805,24544,27798,34802,34909,34935,24756,33205,33795,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36101,21462,21561,22068,23094,23601,28810,32736,32858,33030,33261,36259,37257,39519,40434,20596,20164,21408,24827,28204,23652,20360,20516,21988,23769,24159,24677,26772,27835,28100,29118,30164,30196,30305,31258,31305,32199,32251,32622,33268,34473,36636,38601,39347,40786,21063,21189,39149,35242,19971,26578,28422,20405,23522,26517,27784,28024,29723,30759,37341,37756,34756,31204,31281,24555,20182,21668,21822,22702,22949,24816,25171,25302,26422,26965,33333,38464,39345,39389,20524,21331,21828,22396,64001,25176,64002,25826,26219,26589,28609,28655,29730,29752,35351,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37944,21585,22022,22374,24392,24986,27470,28760,28845,32187,35477,22890,33067,25506,30472,32829,36010,22612,25645,27067,23445,24081,28271,64003,34153,20812,21488,22826,24608,24907,27526,27760,27888,31518,32974,33492,36294,37040,39089,64004,25799,28580,25745,25860,20814,21520,22303,35342,24927,26742,64005,30171,31570,32113,36890,22534,27084,33151,35114,36864,38969,20600,22871,22956,25237,36879,39722,24925,29305,38358,22369,23110,24052,25226,25773,25850,26487,27874,27966,29228,29750,30772,32631,33453,36315,38935,21028,22338,26495,29256,29923,36009,36774,37393,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38442,20843,21485,25420,20329,21764,24726,25943,27803,28031,29260,29437,31255,35207,35997,24429,28558,28921,33192,24846,20415,20559,25153,29255,31687,32232,32745,36941,38829,39449,36022,22378,24179,26544,33805,35413,21536,23318,24163,24290,24330,25987,32954,34109,38281,38491,20296,21253,21261,21263,21638,21754,22275,24067,24598,25243,25265,25429,64006,27873,28006,30129,30770,32990,33071,33502,33889,33970,34957,35090,36875,37610,39165,39825,24133,26292,26333,28689,29190,64007,20469,21117,24426,24915,26451,27161,28418,29922,31080,34920,35961,39111,39108,39491,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21697,31263,26963,35575,35914,39080,39342,24444,25259,30130,30382,34987,36991,38466,21305,24380,24517,27852,29644,30050,30091,31558,33534,39325,20047,36924,19979,20309,21414,22799,24264,26160,27827,29781,33655,34662,36032,36944,38686,39957,22737,23416,34384,35604,40372,23506,24680,24717,26097,27735,28450,28579,28698,32597,32752,38289,38290,38480,38867,21106,36676,20989,21547,21688,21859,21898,27323,28085,32216,33382,37532,38519,40569,21512,21704,30418,34532,38308,38356,38492,20130,20233,23022,23270,24055,24658,25239,26477,26689,27782,28207,32568,32923,33322,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,64008,64009,38917,20133,20565,21683,22419,22874,23401,23475,25032,26999,28023,28707,34809,35299,35442,35559,36994,39405,39608,21182,26680,20502,24184,26447,33607,34892,20139,21521,22190,29670,37141,38911,39177,39255,39321,22099,22687,34395,35377,25010,27382,29563,36562,27463,38570,39511,22869,29184,36203,38761,20436,23796,24358,25080,26203,27883,28843,29572,29625,29694,30505,30541,32067,32098,32291,33335,34898,64010,36066,37449,39023,23377,31348,34880,38913,23244,20448,21332,22846,23805,25406,28025,29433,33029,33031,33698,37583,38960,20136,20804,21009,22411,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24418,27842,28366,28677,28752,28847,29074,29673,29801,33610,34722,34913,36872,37026,37795,39336,20846,24407,24800,24935,26291,34137,36426,37295,38795,20046,20114,21628,22741,22778,22909,23733,24359,25142,25160,26122,26215,27627,28009,28111,28246,28408,28564,28640,28649,28765,29392,29733,29786,29920,30355,31068,31946,32286,32993,33446,33899,33983,34382,34399,34676,35703,35946,37804,38912,39013,24785,25110,37239,23130,26127,28151,28222,29759,39746,24573,24794,31503,21700,24344,27742,27859,27946,28888,32005,34425,35340,40251,21270,21644,23301,27194,28779,30069,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31117,31166,33457,33775,35441,35649,36008,38772,64011,25844,25899,30906,30907,31339,20024,21914,22864,23462,24187,24739,25563,27489,26213,26707,28185,29029,29872,32008,36996,39529,39973,27963,28369,29502,35905,38346,20976,24140,24488,24653,24822,24880,24908,26179,26180,27045,27841,28255,28361,28514,29004,29852,30343,31681,31783,33618,34647,36945,38541,40643,21295,22238,24315,24458,24674,24724,25079,26214,26371,27292,28142,28590,28784,29546,32362,33214,33588,34516,35496,36036,21123,29554,23446,27243,37892,21742,22150,23389,25928,25989,26313,26783,28045,28102,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29243,32948,37237,39501,20399,20505,21402,21518,21564,21897,21957,24127,24460,26429,29030,29661,36869,21211,21235,22628,22734,28932,29071,29179,34224,35347,26248,34216,21927,26244,29002,33841,21321,21913,27585,24409,24509,25582,26249,28999,35569,36637,40638,20241,25658,28875,30054,34407,24676,35662,40440,20807,20982,21256,27958,33016,40657,26133,27427,28824,30165,21507,23673,32007,35350,27424,27453,27462,21560,24688,27965,32725,33288,20694,20958,21916,22123,22221,23020,23305,24076,24985,24984,25137,26206,26342,29081,29113,29114,29351,31143,31232,32690,35440,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\n  \"gb18030\":[19970,19972,19973,19974,19983,19986,19991,19999,20000,20001,20003,20006,20009,20014,20015,20017,20019,20021,20023,20028,20032,20033,20034,20036,20038,20042,20049,20053,20055,20058,20059,20066,20067,20068,20069,20071,20072,20074,20075,20076,20077,20078,20079,20082,20084,20085,20086,20087,20088,20089,20090,20091,20092,20093,20095,20096,20097,20098,20099,20100,20101,20103,20106,20112,20118,20119,20121,20124,20125,20126,20131,20138,20143,20144,20145,20148,20150,20151,20152,20153,20156,20157,20158,20168,20172,20175,20176,20178,20186,20187,20188,20192,20194,20198,20199,20201,20205,20206,20207,20209,20212,20216,20217,20218,20220,20222,20224,20226,20227,20228,20229,20230,20231,20232,20235,20236,20242,20243,20244,20245,20246,20252,20253,20257,20259,20264,20265,20268,20269,20270,20273,20275,20277,20279,20281,20283,20286,20287,20288,20289,20290,20292,20293,20295,20296,20297,20298,20299,20300,20306,20308,20310,20321,20322,20326,20328,20330,20331,20333,20334,20337,20338,20341,20343,20344,20345,20346,20349,20352,20353,20354,20357,20358,20359,20362,20364,20366,20368,20370,20371,20373,20374,20376,20377,20378,20380,20382,20383,20385,20386,20388,20395,20397,20400,20401,20402,20403,20404,20406,20407,20408,20409,20410,20411,20412,20413,20414,20416,20417,20418,20422,20423,20424,20425,20427,20428,20429,20434,20435,20436,20437,20438,20441,20443,20448,20450,20452,20453,20455,20459,20460,20464,20466,20468,20469,20470,20471,20473,20475,20476,20477,20479,20480,20481,20482,20483,20484,20485,20486,20487,20488,20489,20490,20491,20494,20496,20497,20499,20501,20502,20503,20507,20509,20510,20512,20514,20515,20516,20519,20523,20527,20528,20529,20530,20531,20532,20533,20534,20535,20536,20537,20539,20541,20543,20544,20545,20546,20548,20549,20550,20553,20554,20555,20557,20560,20561,20562,20563,20564,20566,20567,20568,20569,20571,20573,20574,20575,20576,20577,20578,20579,20580,20582,20583,20584,20585,20586,20587,20589,20590,20591,20592,20593,20594,20595,20596,20597,20600,20601,20602,20604,20605,20609,20610,20611,20612,20614,20615,20617,20618,20619,20620,20622,20623,20624,20625,20626,20627,20628,20629,20630,20631,20632,20633,20634,20635,20636,20637,20638,20639,20640,20641,20642,20644,20646,20650,20651,20653,20654,20655,20656,20657,20659,20660,20661,20662,20663,20664,20665,20668,20669,20670,20671,20672,20673,20674,20675,20676,20677,20678,20679,20680,20681,20682,20683,20684,20685,20686,20688,20689,20690,20691,20692,20693,20695,20696,20697,20699,20700,20701,20702,20703,20704,20705,20706,20707,20708,20709,20712,20713,20714,20715,20719,20720,20721,20722,20724,20726,20727,20728,20729,20730,20732,20733,20734,20735,20736,20737,20738,20739,20740,20741,20744,20745,20746,20748,20749,20750,20751,20752,20753,20755,20756,20757,20758,20759,20760,20761,20762,20763,20764,20765,20766,20767,20768,20770,20771,20772,20773,20774,20775,20776,20777,20778,20779,20780,20781,20782,20783,20784,20785,20786,20787,20788,20789,20790,20791,20792,20793,20794,20795,20796,20797,20798,20802,20807,20810,20812,20814,20815,20816,20818,20819,20823,20824,20825,20827,20829,20830,20831,20832,20833,20835,20836,20838,20839,20841,20842,20847,20850,20858,20862,20863,20867,20868,20870,20871,20874,20875,20878,20879,20880,20881,20883,20884,20888,20890,20893,20894,20895,20897,20899,20902,20903,20904,20905,20906,20909,20910,20916,20920,20921,20922,20926,20927,20929,20930,20931,20933,20936,20938,20941,20942,20944,20946,20947,20948,20949,20950,20951,20952,20953,20954,20956,20958,20959,20962,20963,20965,20966,20967,20968,20969,20970,20972,20974,20977,20978,20980,20983,20990,20996,20997,21001,21003,21004,21007,21008,21011,21012,21013,21020,21022,21023,21025,21026,21027,21029,21030,21031,21034,21036,21039,21041,21042,21044,21045,21052,21054,21060,21061,21062,21063,21064,21065,21067,21070,21071,21074,21075,21077,21079,21080,21081,21082,21083,21085,21087,21088,21090,21091,21092,21094,21096,21099,21100,21101,21102,21104,21105,21107,21108,21109,21110,21111,21112,21113,21114,21115,21116,21118,21120,21123,21124,21125,21126,21127,21129,21130,21131,21132,21133,21134,21135,21137,21138,21140,21141,21142,21143,21144,21145,21146,21148,21156,21157,21158,21159,21166,21167,21168,21172,21173,21174,21175,21176,21177,21178,21179,21180,21181,21184,21185,21186,21188,21189,21190,21192,21194,21196,21197,21198,21199,21201,21203,21204,21205,21207,21209,21210,21211,21212,21213,21214,21216,21217,21218,21219,21221,21222,21223,21224,21225,21226,21227,21228,21229,21230,21231,21233,21234,21235,21236,21237,21238,21239,21240,21243,21244,21245,21249,21250,21251,21252,21255,21257,21258,21259,21260,21262,21265,21266,21267,21268,21272,21275,21276,21278,21279,21282,21284,21285,21287,21288,21289,21291,21292,21293,21295,21296,21297,21298,21299,21300,21301,21302,21303,21304,21308,21309,21312,21314,21316,21318,21323,21324,21325,21328,21332,21336,21337,21339,21341,21349,21352,21354,21356,21357,21362,21366,21369,21371,21372,21373,21374,21376,21377,21379,21383,21384,21386,21390,21391,21392,21393,21394,21395,21396,21398,21399,21401,21403,21404,21406,21408,21409,21412,21415,21418,21419,21420,21421,21423,21424,21425,21426,21427,21428,21429,21431,21432,21433,21434,21436,21437,21438,21440,21443,21444,21445,21446,21447,21454,21455,21456,21458,21459,21461,21466,21468,21469,21470,21473,21474,21479,21492,21498,21502,21503,21504,21506,21509,21511,21515,21524,21528,21529,21530,21532,21538,21540,21541,21546,21552,21555,21558,21559,21562,21565,21567,21569,21570,21572,21573,21575,21577,21580,21581,21582,21583,21585,21594,21597,21598,21599,21600,21601,21603,21605,21607,21609,21610,21611,21612,21613,21614,21615,21616,21620,21625,21626,21630,21631,21633,21635,21637,21639,21640,21641,21642,21645,21649,21651,21655,21656,21660,21662,21663,21664,21665,21666,21669,21678,21680,21682,21685,21686,21687,21689,21690,21692,21694,21699,21701,21706,21707,21718,21720,21723,21728,21729,21730,21731,21732,21739,21740,21743,21744,21745,21748,21749,21750,21751,21752,21753,21755,21758,21760,21762,21763,21764,21765,21768,21770,21771,21772,21773,21774,21778,21779,21781,21782,21783,21784,21785,21786,21788,21789,21790,21791,21793,21797,21798,21800,21801,21803,21805,21810,21812,21813,21814,21816,21817,21818,21819,21821,21824,21826,21829,21831,21832,21835,21836,21837,21838,21839,21841,21842,21843,21844,21847,21848,21849,21850,21851,21853,21854,21855,21856,21858,21859,21864,21865,21867,21871,21872,21873,21874,21875,21876,21881,21882,21885,21887,21893,21894,21900,21901,21902,21904,21906,21907,21909,21910,21911,21914,21915,21918,21920,21921,21922,21923,21924,21925,21926,21928,21929,21930,21931,21932,21933,21934,21935,21936,21938,21940,21942,21944,21946,21948,21951,21952,21953,21954,21955,21958,21959,21960,21962,21963,21966,21967,21968,21973,21975,21976,21977,21978,21979,21982,21984,21986,21991,21993,21997,21998,22000,22001,22004,22006,22008,22009,22010,22011,22012,22015,22018,22019,22020,22021,22022,22023,22026,22027,22029,22032,22033,22034,22035,22036,22037,22038,22039,22041,22042,22044,22045,22048,22049,22050,22053,22054,22056,22057,22058,22059,22062,22063,22064,22067,22069,22071,22072,22074,22076,22077,22078,22080,22081,22082,22083,22084,22085,22086,22087,22088,22089,22090,22091,22095,22096,22097,22098,22099,22101,22102,22106,22107,22109,22110,22111,22112,22113,22115,22117,22118,22119,22125,22126,22127,22128,22130,22131,22132,22133,22135,22136,22137,22138,22141,22142,22143,22144,22145,22146,22147,22148,22151,22152,22153,22154,22155,22156,22157,22160,22161,22162,22164,22165,22166,22167,22168,22169,22170,22171,22172,22173,22174,22175,22176,22177,22178,22180,22181,22182,22183,22184,22185,22186,22187,22188,22189,22190,22192,22193,22194,22195,22196,22197,22198,22200,22201,22202,22203,22205,22206,22207,22208,22209,22210,22211,22212,22213,22214,22215,22216,22217,22219,22220,22221,22222,22223,22224,22225,22226,22227,22229,22230,22232,22233,22236,22243,22245,22246,22247,22248,22249,22250,22252,22254,22255,22258,22259,22262,22263,22264,22267,22268,22272,22273,22274,22277,22279,22283,22284,22285,22286,22287,22288,22289,22290,22291,22292,22293,22294,22295,22296,22297,22298,22299,22301,22302,22304,22305,22306,22308,22309,22310,22311,22315,22321,22322,22324,22325,22326,22327,22328,22332,22333,22335,22337,22339,22340,22341,22342,22344,22345,22347,22354,22355,22356,22357,22358,22360,22361,22370,22371,22373,22375,22380,22382,22384,22385,22386,22388,22389,22392,22393,22394,22397,22398,22399,22400,22401,22407,22408,22409,22410,22413,22414,22415,22416,22417,22420,22421,22422,22423,22424,22425,22426,22428,22429,22430,22431,22437,22440,22442,22444,22447,22448,22449,22451,22453,22454,22455,22457,22458,22459,22460,22461,22462,22463,22464,22465,22468,22469,22470,22471,22472,22473,22474,22476,22477,22480,22481,22483,22486,22487,22491,22492,22494,22497,22498,22499,22501,22502,22503,22504,22505,22506,22507,22508,22510,22512,22513,22514,22515,22517,22518,22519,22523,22524,22526,22527,22529,22531,22532,22533,22536,22537,22538,22540,22542,22543,22544,22546,22547,22548,22550,22551,22552,22554,22555,22556,22557,22559,22562,22563,22565,22566,22567,22568,22569,22571,22572,22573,22574,22575,22577,22578,22579,22580,22582,22583,22584,22585,22586,22587,22588,22589,22590,22591,22592,22593,22594,22595,22597,22598,22599,22600,22601,22602,22603,22606,22607,22608,22610,22611,22613,22614,22615,22617,22618,22619,22620,22621,22623,22624,22625,22626,22627,22628,22630,22631,22632,22633,22634,22637,22638,22639,22640,22641,22642,22643,22644,22645,22646,22647,22648,22649,22650,22651,22652,22653,22655,22658,22660,22662,22663,22664,22666,22667,22668,22669,22670,22671,22672,22673,22676,22677,22678,22679,22680,22683,22684,22685,22688,22689,22690,22691,22692,22693,22694,22695,22698,22699,22700,22701,22702,22703,22704,22705,22706,22707,22708,22709,22710,22711,22712,22713,22714,22715,22717,22718,22719,22720,22722,22723,22724,22726,22727,22728,22729,22730,22731,22732,22733,22734,22735,22736,22738,22739,22740,22742,22743,22744,22745,22746,22747,22748,22749,22750,22751,22752,22753,22754,22755,22757,22758,22759,22760,22761,22762,22765,22767,22769,22770,22772,22773,22775,22776,22778,22779,22780,22781,22782,22783,22784,22785,22787,22789,22790,22792,22793,22794,22795,22796,22798,22800,22801,22802,22803,22807,22808,22811,22813,22814,22816,22817,22818,22819,22822,22824,22828,22832,22834,22835,22837,22838,22843,22845,22846,22847,22848,22851,22853,22854,22858,22860,22861,22864,22866,22867,22873,22875,22876,22877,22878,22879,22881,22883,22884,22886,22887,22888,22889,22890,22891,22892,22893,22894,22895,22896,22897,22898,22901,22903,22906,22907,22908,22910,22911,22912,22917,22921,22923,22924,22926,22927,22928,22929,22932,22933,22936,22938,22939,22940,22941,22943,22944,22945,22946,22950,22951,22956,22957,22960,22961,22963,22964,22965,22966,22967,22968,22970,22972,22973,22975,22976,22977,22978,22979,22980,22981,22983,22984,22985,22988,22989,22990,22991,22997,22998,23001,23003,23006,23007,23008,23009,23010,23012,23014,23015,23017,23018,23019,23021,23022,23023,23024,23025,23026,23027,23028,23029,23030,23031,23032,23034,23036,23037,23038,23040,23042,23050,23051,23053,23054,23055,23056,23058,23060,23061,23062,23063,23065,23066,23067,23069,23070,23073,23074,23076,23078,23079,23080,23082,23083,23084,23085,23086,23087,23088,23091,23093,23095,23096,23097,23098,23099,23101,23102,23103,23105,23106,23107,23108,23109,23111,23112,23115,23116,23117,23118,23119,23120,23121,23122,23123,23124,23126,23127,23128,23129,23131,23132,23133,23134,23135,23136,23137,23139,23140,23141,23142,23144,23145,23147,23148,23149,23150,23151,23152,23153,23154,23155,23160,23161,23163,23164,23165,23166,23168,23169,23170,23171,23172,23173,23174,23175,23176,23177,23178,23179,23180,23181,23182,23183,23184,23185,23187,23188,23189,23190,23191,23192,23193,23196,23197,23198,23199,23200,23201,23202,23203,23204,23205,23206,23207,23208,23209,23211,23212,23213,23214,23215,23216,23217,23220,23222,23223,23225,23226,23227,23228,23229,23231,23232,23235,23236,23237,23238,23239,23240,23242,23243,23245,23246,23247,23248,23249,23251,23253,23255,23257,23258,23259,23261,23262,23263,23266,23268,23269,23271,23272,23274,23276,23277,23278,23279,23280,23282,23283,23284,23285,23286,23287,23288,23289,23290,23291,23292,23293,23294,23295,23296,23297,23298,23299,23300,23301,23302,23303,23304,23306,23307,23308,23309,23310,23311,23312,23313,23314,23315,23316,23317,23320,23321,23322,23323,23324,23325,23326,23327,23328,23329,23330,23331,23332,23333,23334,23335,23336,23337,23338,23339,23340,23341,23342,23343,23344,23345,23347,23349,23350,23352,23353,23354,23355,23356,23357,23358,23359,23361,23362,23363,23364,23365,23366,23367,23368,23369,23370,23371,23372,23373,23374,23375,23378,23382,23390,23392,23393,23399,23400,23403,23405,23406,23407,23410,23412,23414,23415,23416,23417,23419,23420,23422,23423,23426,23430,23434,23437,23438,23440,23441,23442,23444,23446,23455,23463,23464,23465,23468,23469,23470,23471,23473,23474,23479,23482,23483,23484,23488,23489,23491,23496,23497,23498,23499,23501,23502,23503,23505,23508,23509,23510,23511,23512,23513,23514,23515,23516,23520,23522,23523,23526,23527,23529,23530,23531,23532,23533,23535,23537,23538,23539,23540,23541,23542,23543,23549,23550,23552,23554,23555,23557,23559,23560,23563,23564,23565,23566,23568,23570,23571,23575,23577,23579,23582,23583,23584,23585,23587,23590,23592,23593,23594,23595,23597,23598,23599,23600,23602,23603,23605,23606,23607,23619,23620,23622,23623,23628,23629,23634,23635,23636,23638,23639,23640,23642,23643,23644,23645,23647,23650,23652,23655,23656,23657,23658,23659,23660,23661,23664,23666,23667,23668,23669,23670,23671,23672,23675,23676,23677,23678,23680,23683,23684,23685,23686,23687,23689,23690,23691,23694,23695,23698,23699,23701,23709,23710,23711,23712,23713,23716,23717,23718,23719,23720,23722,23726,23727,23728,23730,23732,23734,23737,23738,23739,23740,23742,23744,23746,23747,23749,23750,23751,23752,23753,23754,23756,23757,23758,23759,23760,23761,23763,23764,23765,23766,23767,23768,23770,23771,23772,23773,23774,23775,23776,23778,23779,23783,23785,23787,23788,23790,23791,23793,23794,23795,23796,23797,23798,23799,23800,23801,23802,23804,23805,23806,23807,23808,23809,23812,23813,23816,23817,23818,23819,23820,23821,23823,23824,23825,23826,23827,23829,23831,23832,23833,23834,23836,23837,23839,23840,23841,23842,23843,23845,23848,23850,23851,23852,23855,23856,23857,23858,23859,23861,23862,23863,23864,23865,23866,23867,23868,23871,23872,23873,23874,23875,23876,23877,23878,23880,23881,23885,23886,23887,23888,23889,23890,23891,23892,23893,23894,23895,23897,23898,23900,23902,23903,23904,23905,23906,23907,23908,23909,23910,23911,23912,23914,23917,23918,23920,23921,23922,23923,23925,23926,23927,23928,23929,23930,23931,23932,23933,23934,23935,23936,23937,23939,23940,23941,23942,23943,23944,23945,23946,23947,23948,23949,23950,23951,23952,23953,23954,23955,23956,23957,23958,23959,23960,23962,23963,23964,23966,23967,23968,23969,23970,23971,23972,23973,23974,23975,23976,23977,23978,23979,23980,23981,23982,23983,23984,23985,23986,23987,23988,23989,23990,23992,23993,23994,23995,23996,23997,23998,23999,24000,24001,24002,24003,24004,24006,24007,24008,24009,24010,24011,24012,24014,24015,24016,24017,24018,24019,24020,24021,24022,24023,24024,24025,24026,24028,24031,24032,24035,24036,24042,24044,24045,24048,24053,24054,24056,24057,24058,24059,24060,24063,24064,24068,24071,24073,24074,24075,24077,24078,24082,24083,24087,24094,24095,24096,24097,24098,24099,24100,24101,24104,24105,24106,24107,24108,24111,24112,24114,24115,24116,24117,24118,24121,24122,24126,24127,24128,24129,24131,24134,24135,24136,24137,24138,24139,24141,24142,24143,24144,24145,24146,24147,24150,24151,24152,24153,24154,24156,24157,24159,24160,24163,24164,24165,24166,24167,24168,24169,24170,24171,24172,24173,24174,24175,24176,24177,24181,24183,24185,24190,24193,24194,24195,24197,24200,24201,24204,24205,24206,24210,24216,24219,24221,24225,24226,24227,24228,24232,24233,24234,24235,24236,24238,24239,24240,24241,24242,24244,24250,24251,24252,24253,24255,24256,24257,24258,24259,24260,24261,24262,24263,24264,24267,24268,24269,24270,24271,24272,24276,24277,24279,24280,24281,24282,24284,24285,24286,24287,24288,24289,24290,24291,24292,24293,24294,24295,24297,24299,24300,24301,24302,24303,24304,24305,24306,24307,24309,24312,24313,24315,24316,24317,24325,24326,24327,24329,24332,24333,24334,24336,24338,24340,24342,24345,24346,24348,24349,24350,24353,24354,24355,24356,24360,24363,24364,24366,24368,24370,24371,24372,24373,24374,24375,24376,24379,24381,24382,24383,24385,24386,24387,24388,24389,24390,24391,24392,24393,24394,24395,24396,24397,24398,24399,24401,24404,24409,24410,24411,24412,24414,24415,24416,24419,24421,24423,24424,24427,24430,24431,24434,24436,24437,24438,24440,24442,24445,24446,24447,24451,24454,24461,24462,24463,24465,24467,24468,24470,24474,24475,24477,24478,24479,24480,24482,24483,24484,24485,24486,24487,24489,24491,24492,24495,24496,24497,24498,24499,24500,24502,24504,24505,24506,24507,24510,24511,24512,24513,24514,24519,24520,24522,24523,24526,24531,24532,24533,24538,24539,24540,24542,24543,24546,24547,24549,24550,24552,24553,24556,24559,24560,24562,24563,24564,24566,24567,24569,24570,24572,24583,24584,24585,24587,24588,24592,24593,24595,24599,24600,24602,24606,24607,24610,24611,24612,24620,24621,24622,24624,24625,24626,24627,24628,24630,24631,24632,24633,24634,24637,24638,24640,24644,24645,24646,24647,24648,24649,24650,24652,24654,24655,24657,24659,24660,24662,24663,24664,24667,24668,24670,24671,24672,24673,24677,24678,24686,24689,24690,24692,24693,24695,24702,24704,24705,24706,24709,24710,24711,24712,24714,24715,24718,24719,24720,24721,24723,24725,24727,24728,24729,24732,24734,24737,24738,24740,24741,24743,24745,24746,24750,24752,24755,24757,24758,24759,24761,24762,24765,24766,24767,24768,24769,24770,24771,24772,24775,24776,24777,24780,24781,24782,24783,24784,24786,24787,24788,24790,24791,24793,24795,24798,24801,24802,24803,24804,24805,24810,24817,24818,24821,24823,24824,24827,24828,24829,24830,24831,24834,24835,24836,24837,24839,24842,24843,24844,24848,24849,24850,24851,24852,24854,24855,24856,24857,24859,24860,24861,24862,24865,24866,24869,24872,24873,24874,24876,24877,24878,24879,24880,24881,24882,24883,24884,24885,24886,24887,24888,24889,24890,24891,24892,24893,24894,24896,24897,24898,24899,24900,24901,24902,24903,24905,24907,24909,24911,24912,24914,24915,24916,24918,24919,24920,24921,24922,24923,24924,24926,24927,24928,24929,24931,24932,24933,24934,24937,24938,24939,24940,24941,24942,24943,24945,24946,24947,24948,24950,24952,24953,24954,24955,24956,24957,24958,24959,24960,24961,24962,24963,24964,24965,24966,24967,24968,24969,24970,24972,24973,24975,24976,24977,24978,24979,24981,24982,24983,24984,24985,24986,24987,24988,24990,24991,24992,24993,24994,24995,24996,24997,24998,25002,25003,25005,25006,25007,25008,25009,25010,25011,25012,25013,25014,25016,25017,25018,25019,25020,25021,25023,25024,25025,25027,25028,25029,25030,25031,25033,25036,25037,25038,25039,25040,25043,25045,25046,25047,25048,25049,25050,25051,25052,25053,25054,25055,25056,25057,25058,25059,25060,25061,25063,25064,25065,25066,25067,25068,25069,25070,25071,25072,25073,25074,25075,25076,25078,25079,25080,25081,25082,25083,25084,25085,25086,25088,25089,25090,25091,25092,25093,25095,25097,25107,25108,25113,25116,25117,25118,25120,25123,25126,25127,25128,25129,25131,25133,25135,25136,25137,25138,25141,25142,25144,25145,25146,25147,25148,25154,25156,25157,25158,25162,25167,25168,25173,25174,25175,25177,25178,25180,25181,25182,25183,25184,25185,25186,25188,25189,25192,25201,25202,25204,25205,25207,25208,25210,25211,25213,25217,25218,25219,25221,25222,25223,25224,25227,25228,25229,25230,25231,25232,25236,25241,25244,25245,25246,25251,25254,25255,25257,25258,25261,25262,25263,25264,25266,25267,25268,25270,25271,25272,25274,25278,25280,25281,25283,25291,25295,25297,25301,25309,25310,25312,25313,25316,25322,25323,25328,25330,25333,25336,25337,25338,25339,25344,25347,25348,25349,25350,25354,25355,25356,25357,25359,25360,25362,25363,25364,25365,25367,25368,25369,25372,25382,25383,25385,25388,25389,25390,25392,25393,25395,25396,25397,25398,25399,25400,25403,25404,25406,25407,25408,25409,25412,25415,25416,25418,25425,25426,25427,25428,25430,25431,25432,25433,25434,25435,25436,25437,25440,25444,25445,25446,25448,25450,25451,25452,25455,25456,25458,25459,25460,25461,25464,25465,25468,25469,25470,25471,25473,25475,25476,25477,25478,25483,25485,25489,25491,25492,25493,25495,25497,25498,25499,25500,25501,25502,25503,25505,25508,25510,25515,25519,25521,25522,25525,25526,25529,25531,25533,25535,25536,25537,25538,25539,25541,25543,25544,25546,25547,25548,25553,25555,25556,25557,25559,25560,25561,25562,25563,25564,25565,25567,25570,25572,25573,25574,25575,25576,25579,25580,25582,25583,25584,25585,25587,25589,25591,25593,25594,25595,25596,25598,25603,25604,25606,25607,25608,25609,25610,25613,25614,25617,25618,25621,25622,25623,25624,25625,25626,25629,25631,25634,25635,25636,25637,25639,25640,25641,25643,25646,25647,25648,25649,25650,25651,25653,25654,25655,25656,25657,25659,25660,25662,25664,25666,25667,25673,25675,25676,25677,25678,25679,25680,25681,25683,25685,25686,25687,25689,25690,25691,25692,25693,25695,25696,25697,25698,25699,25700,25701,25702,25704,25706,25707,25708,25710,25711,25712,25713,25714,25715,25716,25717,25718,25719,25723,25724,25725,25726,25727,25728,25729,25731,25734,25736,25737,25738,25739,25740,25741,25742,25743,25744,25747,25748,25751,25752,25754,25755,25756,25757,25759,25760,25761,25762,25763,25765,25766,25767,25768,25770,25771,25775,25777,25778,25779,25780,25782,25785,25787,25789,25790,25791,25793,25795,25796,25798,25799,25800,25801,25802,25803,25804,25807,25809,25811,25812,25813,25814,25817,25818,25819,25820,25821,25823,25824,25825,25827,25829,25831,25832,25833,25834,25835,25836,25837,25838,25839,25840,25841,25842,25843,25844,25845,25846,25847,25848,25849,25850,25851,25852,25853,25854,25855,25857,25858,25859,25860,25861,25862,25863,25864,25866,25867,25868,25869,25870,25871,25872,25873,25875,25876,25877,25878,25879,25881,25882,25883,25884,25885,25886,25887,25888,25889,25890,25891,25892,25894,25895,25896,25897,25898,25900,25901,25904,25905,25906,25907,25911,25914,25916,25917,25920,25921,25922,25923,25924,25926,25927,25930,25931,25933,25934,25936,25938,25939,25940,25943,25944,25946,25948,25951,25952,25953,25956,25957,25959,25960,25961,25962,25965,25966,25967,25969,25971,25973,25974,25976,25977,25978,25979,25980,25981,25982,25983,25984,25985,25986,25987,25988,25989,25990,25992,25993,25994,25997,25998,25999,26002,26004,26005,26006,26008,26010,26013,26014,26016,26018,26019,26022,26024,26026,26028,26030,26033,26034,26035,26036,26037,26038,26039,26040,26042,26043,26046,26047,26048,26050,26055,26056,26057,26058,26061,26064,26065,26067,26068,26069,26072,26073,26074,26075,26076,26077,26078,26079,26081,26083,26084,26090,26091,26098,26099,26100,26101,26104,26105,26107,26108,26109,26110,26111,26113,26116,26117,26119,26120,26121,26123,26125,26128,26129,26130,26134,26135,26136,26138,26139,26140,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26162,26163,26167,26168,26169,26170,26171,26173,26175,26176,26178,26180,26181,26182,26183,26184,26185,26186,26189,26190,26192,26193,26200,26201,26203,26204,26205,26206,26208,26210,26211,26213,26215,26217,26218,26219,26220,26221,26225,26226,26227,26229,26232,26233,26235,26236,26237,26239,26240,26241,26243,26245,26246,26248,26249,26250,26251,26253,26254,26255,26256,26258,26259,26260,26261,26264,26265,26266,26267,26268,26270,26271,26272,26273,26274,26275,26276,26277,26278,26281,26282,26283,26284,26285,26287,26288,26289,26290,26291,26293,26294,26295,26296,26298,26299,26300,26301,26303,26304,26305,26306,26307,26308,26309,26310,26311,26312,26313,26314,26315,26316,26317,26318,26319,26320,26321,26322,26323,26324,26325,26326,26327,26328,26330,26334,26335,26336,26337,26338,26339,26340,26341,26343,26344,26346,26347,26348,26349,26350,26351,26353,26357,26358,26360,26362,26363,26365,26369,26370,26371,26372,26373,26374,26375,26380,26382,26383,26385,26386,26387,26390,26392,26393,26394,26396,26398,26400,26401,26402,26403,26404,26405,26407,26409,26414,26416,26418,26419,26422,26423,26424,26425,26427,26428,26430,26431,26433,26436,26437,26439,26442,26443,26445,26450,26452,26453,26455,26456,26457,26458,26459,26461,26466,26467,26468,26470,26471,26475,26476,26478,26481,26484,26486,26488,26489,26490,26491,26493,26496,26498,26499,26501,26502,26504,26506,26508,26509,26510,26511,26513,26514,26515,26516,26518,26521,26523,26527,26528,26529,26532,26534,26537,26540,26542,26545,26546,26548,26553,26554,26555,26556,26557,26558,26559,26560,26562,26565,26566,26567,26568,26569,26570,26571,26572,26573,26574,26581,26582,26583,26587,26591,26593,26595,26596,26598,26599,26600,26602,26603,26605,26606,26610,26613,26614,26615,26616,26617,26618,26619,26620,26622,26625,26626,26627,26628,26630,26637,26640,26642,26644,26645,26648,26649,26650,26651,26652,26654,26655,26656,26658,26659,26660,26661,26662,26663,26664,26667,26668,26669,26670,26671,26672,26673,26676,26677,26678,26682,26683,26687,26695,26699,26701,26703,26706,26710,26711,26712,26713,26714,26715,26716,26717,26718,26719,26730,26732,26733,26734,26735,26736,26737,26738,26739,26741,26744,26745,26746,26747,26748,26749,26750,26751,26752,26754,26756,26759,26760,26761,26762,26763,26764,26765,26766,26768,26769,26770,26772,26773,26774,26776,26777,26778,26779,26780,26781,26782,26783,26784,26785,26787,26788,26789,26793,26794,26795,26796,26798,26801,26802,26804,26806,26807,26808,26809,26810,26811,26812,26813,26814,26815,26817,26819,26820,26821,26822,26823,26824,26826,26828,26830,26831,26832,26833,26835,26836,26838,26839,26841,26843,26844,26845,26846,26847,26849,26850,26852,26853,26854,26855,26856,26857,26858,26859,26860,26861,26863,26866,26867,26868,26870,26871,26872,26875,26877,26878,26879,26880,26882,26883,26884,26886,26887,26888,26889,26890,26892,26895,26897,26899,26900,26901,26902,26903,26904,26905,26906,26907,26908,26909,26910,26913,26914,26915,26917,26918,26919,26920,26921,26922,26923,26924,26926,26927,26929,26930,26931,26933,26934,26935,26936,26938,26939,26940,26942,26944,26945,26947,26948,26949,26950,26951,26952,26953,26954,26955,26956,26957,26958,26959,26960,26961,26962,26963,26965,26966,26968,26969,26971,26972,26975,26977,26978,26980,26981,26983,26984,26985,26986,26988,26989,26991,26992,26994,26995,26996,26997,26998,27002,27003,27005,27006,27007,27009,27011,27013,27018,27019,27020,27022,27023,27024,27025,27026,27027,27030,27031,27033,27034,27037,27038,27039,27040,27041,27042,27043,27044,27045,27046,27049,27050,27052,27054,27055,27056,27058,27059,27061,27062,27064,27065,27066,27068,27069,27070,27071,27072,27074,27075,27076,27077,27078,27079,27080,27081,27083,27085,27087,27089,27090,27091,27093,27094,27095,27096,27097,27098,27100,27101,27102,27105,27106,27107,27108,27109,27110,27111,27112,27113,27114,27115,27116,27118,27119,27120,27121,27123,27124,27125,27126,27127,27128,27129,27130,27131,27132,27134,27136,27137,27138,27139,27140,27141,27142,27143,27144,27145,27147,27148,27149,27150,27151,27152,27153,27154,27155,27156,27157,27158,27161,27162,27163,27164,27165,27166,27168,27170,27171,27172,27173,27174,27175,27177,27179,27180,27181,27182,27184,27186,27187,27188,27190,27191,27192,27193,27194,27195,27196,27199,27200,27201,27202,27203,27205,27206,27208,27209,27210,27211,27212,27213,27214,27215,27217,27218,27219,27220,27221,27222,27223,27226,27228,27229,27230,27231,27232,27234,27235,27236,27238,27239,27240,27241,27242,27243,27244,27245,27246,27247,27248,27250,27251,27252,27253,27254,27255,27256,27258,27259,27261,27262,27263,27265,27266,27267,27269,27270,27271,27272,27273,27274,27275,27276,27277,27279,27282,27283,27284,27285,27286,27288,27289,27290,27291,27292,27293,27294,27295,27297,27298,27299,27300,27301,27302,27303,27304,27306,27309,27310,27311,27312,27313,27314,27315,27316,27317,27318,27319,27320,27321,27322,27323,27324,27325,27326,27327,27328,27329,27330,27331,27332,27333,27334,27335,27336,27337,27338,27339,27340,27341,27342,27343,27344,27345,27346,27347,27348,27349,27350,27351,27352,27353,27354,27355,27356,27357,27358,27359,27360,27361,27362,27363,27364,27365,27366,27367,27368,27369,27370,27371,27372,27373,27374,27375,27376,27377,27378,27379,27380,27381,27382,27383,27384,27385,27386,27387,27388,27389,27390,27391,27392,27393,27394,27395,27396,27397,27398,27399,27400,27401,27402,27403,27404,27405,27406,27407,27408,27409,27410,27411,27412,27413,27414,27415,27416,27417,27418,27419,27420,27421,27422,27423,27429,27430,27432,27433,27434,27435,27436,27437,27438,27439,27440,27441,27443,27444,27445,27446,27448,27451,27452,27453,27455,27456,27457,27458,27460,27461,27464,27466,27467,27469,27470,27471,27472,27473,27474,27475,27476,27477,27478,27479,27480,27482,27483,27484,27485,27486,27487,27488,27489,27496,27497,27499,27500,27501,27502,27503,27504,27505,27506,27507,27508,27509,27510,27511,27512,27514,27517,27518,27519,27520,27525,27528,27532,27534,27535,27536,27537,27540,27541,27543,27544,27545,27548,27549,27550,27551,27552,27554,27555,27556,27557,27558,27559,27560,27561,27563,27564,27565,27566,27567,27568,27569,27570,27574,27576,27577,27578,27579,27580,27581,27582,27584,27587,27588,27590,27591,27592,27593,27594,27596,27598,27600,27601,27608,27610,27612,27613,27614,27615,27616,27618,27619,27620,27621,27622,27623,27624,27625,27628,27629,27630,27632,27633,27634,27636,27638,27639,27640,27642,27643,27644,27646,27647,27648,27649,27650,27651,27652,27656,27657,27658,27659,27660,27662,27666,27671,27676,27677,27678,27680,27683,27685,27691,27692,27693,27697,27699,27702,27703,27705,27706,27707,27708,27710,27711,27715,27716,27717,27720,27723,27724,27725,27726,27727,27729,27730,27731,27734,27736,27737,27738,27746,27747,27749,27750,27751,27755,27756,27757,27758,27759,27761,27763,27765,27767,27768,27770,27771,27772,27775,27776,27780,27783,27786,27787,27789,27790,27793,27794,27797,27798,27799,27800,27802,27804,27805,27806,27808,27810,27816,27820,27823,27824,27828,27829,27830,27831,27834,27840,27841,27842,27843,27846,27847,27848,27851,27853,27854,27855,27857,27858,27864,27865,27866,27868,27869,27871,27876,27878,27879,27881,27884,27885,27890,27892,27897,27903,27904,27906,27907,27909,27910,27912,27913,27914,27917,27919,27920,27921,27923,27924,27925,27926,27928,27932,27933,27935,27936,27937,27938,27939,27940,27942,27944,27945,27948,27949,27951,27952,27956,27958,27959,27960,27962,27967,27968,27970,27972,27977,27980,27984,27989,27990,27991,27992,27995,27997,27999,28001,28002,28004,28005,28007,28008,28011,28012,28013,28016,28017,28018,28019,28021,28022,28025,28026,28027,28029,28030,28031,28032,28033,28035,28036,28038,28039,28042,28043,28045,28047,28048,28050,28054,28055,28056,28057,28058,28060,28066,28069,28076,28077,28080,28081,28083,28084,28086,28087,28089,28090,28091,28092,28093,28094,28097,28098,28099,28104,28105,28106,28109,28110,28111,28112,28114,28115,28116,28117,28119,28122,28123,28124,28127,28130,28131,28133,28135,28136,28137,28138,28141,28143,28144,28146,28148,28149,28150,28152,28154,28157,28158,28159,28160,28161,28162,28163,28164,28166,28167,28168,28169,28171,28175,28178,28179,28181,28184,28185,28187,28188,28190,28191,28194,28198,28199,28200,28202,28204,28206,28208,28209,28211,28213,28214,28215,28217,28219,28220,28221,28222,28223,28224,28225,28226,28229,28230,28231,28232,28233,28234,28235,28236,28239,28240,28241,28242,28245,28247,28249,28250,28252,28253,28254,28256,28257,28258,28259,28260,28261,28262,28263,28264,28265,28266,28268,28269,28271,28272,28273,28274,28275,28276,28277,28278,28279,28280,28281,28282,28283,28284,28285,28288,28289,28290,28292,28295,28296,28298,28299,28300,28301,28302,28305,28306,28307,28308,28309,28310,28311,28313,28314,28315,28317,28318,28320,28321,28323,28324,28326,28328,28329,28331,28332,28333,28334,28336,28339,28341,28344,28345,28348,28350,28351,28352,28355,28356,28357,28358,28360,28361,28362,28364,28365,28366,28368,28370,28374,28376,28377,28379,28380,28381,28387,28391,28394,28395,28396,28397,28398,28399,28400,28401,28402,28403,28405,28406,28407,28408,28410,28411,28412,28413,28414,28415,28416,28417,28419,28420,28421,28423,28424,28426,28427,28428,28429,28430,28432,28433,28434,28438,28439,28440,28441,28442,28443,28444,28445,28446,28447,28449,28450,28451,28453,28454,28455,28456,28460,28462,28464,28466,28468,28469,28471,28472,28473,28474,28475,28476,28477,28479,28480,28481,28482,28483,28484,28485,28488,28489,28490,28492,28494,28495,28496,28497,28498,28499,28500,28501,28502,28503,28505,28506,28507,28509,28511,28512,28513,28515,28516,28517,28519,28520,28521,28522,28523,28524,28527,28528,28529,28531,28533,28534,28535,28537,28539,28541,28542,28543,28544,28545,28546,28547,28549,28550,28551,28554,28555,28559,28560,28561,28562,28563,28564,28565,28566,28567,28568,28569,28570,28571,28573,28574,28575,28576,28578,28579,28580,28581,28582,28584,28585,28586,28587,28588,28589,28590,28591,28592,28593,28594,28596,28597,28599,28600,28602,28603,28604,28605,28606,28607,28609,28611,28612,28613,28614,28615,28616,28618,28619,28620,28621,28622,28623,28624,28627,28628,28629,28630,28631,28632,28633,28634,28635,28636,28637,28639,28642,28643,28644,28645,28646,28647,28648,28649,28650,28651,28652,28653,28656,28657,28658,28659,28660,28661,28662,28663,28664,28665,28666,28667,28668,28669,28670,28671,28672,28673,28674,28675,28676,28677,28678,28679,28680,28681,28682,28683,28684,28685,28686,28687,28688,28690,28691,28692,28693,28694,28695,28696,28697,28700,28701,28702,28703,28704,28705,28706,28708,28709,28710,28711,28712,28713,28714,28715,28716,28717,28718,28719,28720,28721,28722,28723,28724,28726,28727,28728,28730,28731,28732,28733,28734,28735,28736,28737,28738,28739,28740,28741,28742,28743,28744,28745,28746,28747,28749,28750,28752,28753,28754,28755,28756,28757,28758,28759,28760,28761,28762,28763,28764,28765,28767,28768,28769,28770,28771,28772,28773,28774,28775,28776,28777,28778,28782,28785,28786,28787,28788,28791,28793,28794,28795,28797,28801,28802,28803,28804,28806,28807,28808,28811,28812,28813,28815,28816,28817,28819,28823,28824,28826,28827,28830,28831,28832,28833,28834,28835,28836,28837,28838,28839,28840,28841,28842,28848,28850,28852,28853,28854,28858,28862,28863,28868,28869,28870,28871,28873,28875,28876,28877,28878,28879,28880,28881,28882,28883,28884,28885,28886,28887,28890,28892,28893,28894,28896,28897,28898,28899,28901,28906,28910,28912,28913,28914,28915,28916,28917,28918,28920,28922,28923,28924,28926,28927,28928,28929,28930,28931,28932,28933,28934,28935,28936,28939,28940,28941,28942,28943,28945,28946,28948,28951,28955,28956,28957,28958,28959,28960,28961,28962,28963,28964,28965,28967,28968,28969,28970,28971,28972,28973,28974,28978,28979,28980,28981,28983,28984,28985,28986,28987,28988,28989,28990,28991,28992,28993,28994,28995,28996,28998,28999,29000,29001,29003,29005,29007,29008,29009,29010,29011,29012,29013,29014,29015,29016,29017,29018,29019,29021,29023,29024,29025,29026,29027,29029,29033,29034,29035,29036,29037,29039,29040,29041,29044,29045,29046,29047,29049,29051,29052,29054,29055,29056,29057,29058,29059,29061,29062,29063,29064,29065,29067,29068,29069,29070,29072,29073,29074,29075,29077,29078,29079,29082,29083,29084,29085,29086,29089,29090,29091,29092,29093,29094,29095,29097,29098,29099,29101,29102,29103,29104,29105,29106,29108,29110,29111,29112,29114,29115,29116,29117,29118,29119,29120,29121,29122,29124,29125,29126,29127,29128,29129,29130,29131,29132,29133,29135,29136,29137,29138,29139,29142,29143,29144,29145,29146,29147,29148,29149,29150,29151,29153,29154,29155,29156,29158,29160,29161,29162,29163,29164,29165,29167,29168,29169,29170,29171,29172,29173,29174,29175,29176,29178,29179,29180,29181,29182,29183,29184,29185,29186,29187,29188,29189,29191,29192,29193,29194,29195,29196,29197,29198,29199,29200,29201,29202,29203,29204,29205,29206,29207,29208,29209,29210,29211,29212,29214,29215,29216,29217,29218,29219,29220,29221,29222,29223,29225,29227,29229,29230,29231,29234,29235,29236,29242,29244,29246,29248,29249,29250,29251,29252,29253,29254,29257,29258,29259,29262,29263,29264,29265,29267,29268,29269,29271,29272,29274,29276,29278,29280,29283,29284,29285,29288,29290,29291,29292,29293,29296,29297,29299,29300,29302,29303,29304,29307,29308,29309,29314,29315,29317,29318,29319,29320,29321,29324,29326,29328,29329,29331,29332,29333,29334,29335,29336,29337,29338,29339,29340,29341,29342,29344,29345,29346,29347,29348,29349,29350,29351,29352,29353,29354,29355,29358,29361,29362,29363,29365,29370,29371,29372,29373,29374,29375,29376,29381,29382,29383,29385,29386,29387,29388,29391,29393,29395,29396,29397,29398,29400,29402,29403,58566,58567,58568,58569,58570,58571,58572,58573,58574,58575,58576,58577,58578,58579,58580,58581,58582,58583,58584,58585,58586,58587,58588,58589,58590,58591,58592,58593,58594,58595,58596,58597,58598,58599,58600,58601,58602,58603,58604,58605,58606,58607,58608,58609,58610,58611,58612,58613,58614,58615,58616,58617,58618,58619,58620,58621,58622,58623,58624,58625,58626,58627,58628,58629,58630,58631,58632,58633,58634,58635,58636,58637,58638,58639,58640,58641,58642,58643,58644,58645,58646,58647,58648,58649,58650,58651,58652,58653,58654,58655,58656,58657,58658,58659,58660,58661,12288,12289,12290,183,713,711,168,12291,12293,8212,65374,8214,8230,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12310,12311,12304,12305,177,215,247,8758,8743,8744,8721,8719,8746,8745,8712,8759,8730,8869,8741,8736,8978,8857,8747,8750,8801,8780,8776,8765,8733,8800,8814,8815,8804,8805,8734,8757,8756,9794,9792,176,8242,8243,8451,65284,164,65504,65505,8240,167,8470,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,8251,8594,8592,8593,8595,12307,58662,58663,58664,58665,58666,58667,58668,58669,58670,58671,58672,58673,58674,58675,58676,58677,58678,58679,58680,58681,58682,58683,58684,58685,58686,58687,58688,58689,58690,58691,58692,58693,58694,58695,58696,58697,58698,58699,58700,58701,58702,58703,58704,58705,58706,58707,58708,58709,58710,58711,58712,58713,58714,58715,58716,58717,58718,58719,58720,58721,58722,58723,58724,58725,58726,58727,58728,58729,58730,58731,58732,58733,58734,58735,58736,58737,58738,58739,58740,58741,58742,58743,58744,58745,58746,58747,58748,58749,58750,58751,58752,58753,58754,58755,58756,58757,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,59238,59239,59240,59241,59242,59243,9352,9353,9354,9355,9356,9357,9358,9359,9360,9361,9362,9363,9364,9365,9366,9367,9368,9369,9370,9371,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,9347,9348,9349,9350,9351,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,8364,59245,12832,12833,12834,12835,12836,12837,12838,12839,12840,12841,59246,59247,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8555,59248,59249,58758,58759,58760,58761,58762,58763,58764,58765,58766,58767,58768,58769,58770,58771,58772,58773,58774,58775,58776,58777,58778,58779,58780,58781,58782,58783,58784,58785,58786,58787,58788,58789,58790,58791,58792,58793,58794,58795,58796,58797,58798,58799,58800,58801,58802,58803,58804,58805,58806,58807,58808,58809,58810,58811,58812,58813,58814,58815,58816,58817,58818,58819,58820,58821,58822,58823,58824,58825,58826,58827,58828,58829,58830,58831,58832,58833,58834,58835,58836,58837,58838,58839,58840,58841,58842,58843,58844,58845,58846,58847,58848,58849,58850,58851,58852,12288,65281,65282,65283,65509,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65340,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,58854,58855,58856,58857,58858,58859,58860,58861,58862,58863,58864,58865,58866,58867,58868,58869,58870,58871,58872,58873,58874,58875,58876,58877,58878,58879,58880,58881,58882,58883,58884,58885,58886,58887,58888,58889,58890,58891,58892,58893,58894,58895,58896,58897,58898,58899,58900,58901,58902,58903,58904,58905,58906,58907,58908,58909,58910,58911,58912,58913,58914,58915,58916,58917,58918,58919,58920,58921,58922,58923,58924,58925,58926,58927,58928,58929,58930,58931,58932,58933,58934,58935,58936,58937,58938,58939,58940,58941,58942,58943,58944,58945,58946,58947,58948,58949,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,59250,59251,59252,59253,59254,59255,59256,59257,59258,59259,59260,58950,58951,58952,58953,58954,58955,58956,58957,58958,58959,58960,58961,58962,58963,58964,58965,58966,58967,58968,58969,58970,58971,58972,58973,58974,58975,58976,58977,58978,58979,58980,58981,58982,58983,58984,58985,58986,58987,58988,58989,58990,58991,58992,58993,58994,58995,58996,58997,58998,58999,59000,59001,59002,59003,59004,59005,59006,59007,59008,59009,59010,59011,59012,59013,59014,59015,59016,59017,59018,59019,59020,59021,59022,59023,59024,59025,59026,59027,59028,59029,59030,59031,59032,59033,59034,59035,59036,59037,59038,59039,59040,59041,59042,59043,59044,59045,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,59261,59262,59263,59264,59265,59266,59267,59268,59046,59047,59048,59049,59050,59051,59052,59053,59054,59055,59056,59057,59058,59059,59060,59061,59062,59063,59064,59065,59066,59067,59068,59069,59070,59071,59072,59073,59074,59075,59076,59077,59078,59079,59080,59081,59082,59083,59084,59085,59086,59087,59088,59089,59090,59091,59092,59093,59094,59095,59096,59097,59098,59099,59100,59101,59102,59103,59104,59105,59106,59107,59108,59109,59110,59111,59112,59113,59114,59115,59116,59117,59118,59119,59120,59121,59122,59123,59124,59125,59126,59127,59128,59129,59130,59131,59132,59133,59134,59135,59136,59137,59138,59139,59140,59141,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,59269,59270,59271,59272,59273,59274,59275,59276,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,59277,59278,59279,59280,59281,59282,59283,65077,65078,65081,65082,65087,65088,65085,65086,65089,65090,65091,65092,59284,59285,65083,65084,65079,65080,65073,59286,65075,65076,59287,59288,59289,59290,59291,59292,59293,59294,59295,59142,59143,59144,59145,59146,59147,59148,59149,59150,59151,59152,59153,59154,59155,59156,59157,59158,59159,59160,59161,59162,59163,59164,59165,59166,59167,59168,59169,59170,59171,59172,59173,59174,59175,59176,59177,59178,59179,59180,59181,59182,59183,59184,59185,59186,59187,59188,59189,59190,59191,59192,59193,59194,59195,59196,59197,59198,59199,59200,59201,59202,59203,59204,59205,59206,59207,59208,59209,59210,59211,59212,59213,59214,59215,59216,59217,59218,59219,59220,59221,59222,59223,59224,59225,59226,59227,59228,59229,59230,59231,59232,59233,59234,59235,59236,59237,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,59296,59297,59298,59299,59300,59301,59302,59303,59304,59305,59306,59307,59308,59309,59310,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,59311,59312,59313,59314,59315,59316,59317,59318,59319,59320,59321,59322,59323,714,715,729,8211,8213,8229,8245,8453,8457,8598,8599,8600,8601,8725,8735,8739,8786,8806,8807,8895,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9581,9582,9583,9584,9585,9586,9587,9601,9602,9603,9604,9605,9606,9607,9608,9609,9610,9611,9612,9613,9614,9615,9619,9620,9621,9660,9661,9698,9699,9700,9701,9737,8853,12306,12317,12318,59324,59325,59326,59327,59328,59329,59330,59331,59332,59333,59334,257,225,462,224,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,234,593,7743,324,328,505,609,59337,59338,59339,59340,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,59341,59342,59343,59344,59345,59346,59347,59348,59349,59350,59351,59352,59353,59354,59355,59356,59357,59358,59359,59360,59361,12321,12322,12323,12324,12325,12326,12327,12328,12329,12963,13198,13199,13212,13213,13214,13217,13252,13262,13265,13266,13269,65072,65506,65508,59362,8481,12849,59363,8208,59364,59365,59366,12540,12443,12444,12541,12542,12294,12445,12446,65097,65098,65099,65100,65101,65102,65103,65104,65105,65106,65108,65109,65110,65111,65113,65114,65115,65116,65117,65118,65119,65120,65121,65122,65123,65124,65125,65126,65128,65129,65130,65131,12350,12272,12273,12274,12275,12276,12277,12278,12279,12280,12281,12282,12283,12295,59380,59381,59382,59383,59384,59385,59386,59387,59388,59389,59390,59391,59392,9472,9473,9474,9475,9476,9477,9478,9479,9480,9481,9482,9483,9484,9485,9486,9487,9488,9489,9490,9491,9492,9493,9494,9495,9496,9497,9498,9499,9500,9501,9502,9503,9504,9505,9506,9507,9508,9509,9510,9511,9512,9513,9514,9515,9516,9517,9518,9519,9520,9521,9522,9523,9524,9525,9526,9527,9528,9529,9530,9531,9532,9533,9534,9535,9536,9537,9538,9539,9540,9541,9542,9543,9544,9545,9546,9547,59393,59394,59395,59396,59397,59398,59399,59400,59401,59402,59403,59404,59405,59406,59407,29404,29405,29407,29410,29411,29412,29413,29414,29415,29418,29419,29429,29430,29433,29437,29438,29439,29440,29442,29444,29445,29446,29447,29448,29449,29451,29452,29453,29455,29456,29457,29458,29460,29464,29465,29466,29471,29472,29475,29476,29478,29479,29480,29485,29487,29488,29490,29491,29493,29494,29498,29499,29500,29501,29504,29505,29506,29507,29508,29509,29510,29511,29512,29513,29514,29515,29516,29518,29519,29521,29523,29524,29525,29526,29528,29529,29530,29531,29532,29533,29534,29535,29537,29538,29539,29540,29541,29542,29543,29544,29545,29546,29547,29550,29552,29553,57344,57345,57346,57347,57348,57349,57350,57351,57352,57353,57354,57355,57356,57357,57358,57359,57360,57361,57362,57363,57364,57365,57366,57367,57368,57369,57370,57371,57372,57373,57374,57375,57376,57377,57378,57379,57380,57381,57382,57383,57384,57385,57386,57387,57388,57389,57390,57391,57392,57393,57394,57395,57396,57397,57398,57399,57400,57401,57402,57403,57404,57405,57406,57407,57408,57409,57410,57411,57412,57413,57414,57415,57416,57417,57418,57419,57420,57421,57422,57423,57424,57425,57426,57427,57428,57429,57430,57431,57432,57433,57434,57435,57436,57437,29554,29555,29556,29557,29558,29559,29560,29561,29562,29563,29564,29565,29567,29568,29569,29570,29571,29573,29574,29576,29578,29580,29581,29583,29584,29586,29587,29588,29589,29591,29592,29593,29594,29596,29597,29598,29600,29601,29603,29604,29605,29606,29607,29608,29610,29612,29613,29617,29620,29621,29622,29624,29625,29628,29629,29630,29631,29633,29635,29636,29637,29638,29639,29643,29644,29646,29650,29651,29652,29653,29654,29655,29656,29658,29659,29660,29661,29663,29665,29666,29667,29668,29670,29672,29674,29675,29676,29678,29679,29680,29681,29683,29684,29685,29686,29687,57438,57439,57440,57441,57442,57443,57444,57445,57446,57447,57448,57449,57450,57451,57452,57453,57454,57455,57456,57457,57458,57459,57460,57461,57462,57463,57464,57465,57466,57467,57468,57469,57470,57471,57472,57473,57474,57475,57476,57477,57478,57479,57480,57481,57482,57483,57484,57485,57486,57487,57488,57489,57490,57491,57492,57493,57494,57495,57496,57497,57498,57499,57500,57501,57502,57503,57504,57505,57506,57507,57508,57509,57510,57511,57512,57513,57514,57515,57516,57517,57518,57519,57520,57521,57522,57523,57524,57525,57526,57527,57528,57529,57530,57531,29688,29689,29690,29691,29692,29693,29694,29695,29696,29697,29698,29700,29703,29704,29707,29708,29709,29710,29713,29714,29715,29716,29717,29718,29719,29720,29721,29724,29725,29726,29727,29728,29729,29731,29732,29735,29737,29739,29741,29743,29745,29746,29751,29752,29753,29754,29755,29757,29758,29759,29760,29762,29763,29764,29765,29766,29767,29768,29769,29770,29771,29772,29773,29774,29775,29776,29777,29778,29779,29780,29782,29784,29789,29792,29793,29794,29795,29796,29797,29798,29799,29800,29801,29802,29803,29804,29806,29807,29809,29810,29811,29812,29813,29816,29817,29818,57532,57533,57534,57535,57536,57537,57538,57539,57540,57541,57542,57543,57544,57545,57546,57547,57548,57549,57550,57551,57552,57553,57554,57555,57556,57557,57558,57559,57560,57561,57562,57563,57564,57565,57566,57567,57568,57569,57570,57571,57572,57573,57574,57575,57576,57577,57578,57579,57580,57581,57582,57583,57584,57585,57586,57587,57588,57589,57590,57591,57592,57593,57594,57595,57596,57597,57598,57599,57600,57601,57602,57603,57604,57605,57606,57607,57608,57609,57610,57611,57612,57613,57614,57615,57616,57617,57618,57619,57620,57621,57622,57623,57624,57625,29819,29820,29821,29823,29826,29828,29829,29830,29832,29833,29834,29836,29837,29839,29841,29842,29843,29844,29845,29846,29847,29848,29849,29850,29851,29853,29855,29856,29857,29858,29859,29860,29861,29862,29866,29867,29868,29869,29870,29871,29872,29873,29874,29875,29876,29877,29878,29879,29880,29881,29883,29884,29885,29886,29887,29888,29889,29890,29891,29892,29893,29894,29895,29896,29897,29898,29899,29900,29901,29902,29903,29904,29905,29907,29908,29909,29910,29911,29912,29913,29914,29915,29917,29919,29921,29925,29927,29928,29929,29930,29931,29932,29933,29936,29937,29938,57626,57627,57628,57629,57630,57631,57632,57633,57634,57635,57636,57637,57638,57639,57640,57641,57642,57643,57644,57645,57646,57647,57648,57649,57650,57651,57652,57653,57654,57655,57656,57657,57658,57659,57660,57661,57662,57663,57664,57665,57666,57667,57668,57669,57670,57671,57672,57673,57674,57675,57676,57677,57678,57679,57680,57681,57682,57683,57684,57685,57686,57687,57688,57689,57690,57691,57692,57693,57694,57695,57696,57697,57698,57699,57700,57701,57702,57703,57704,57705,57706,57707,57708,57709,57710,57711,57712,57713,57714,57715,57716,57717,57718,57719,29939,29941,29944,29945,29946,29947,29948,29949,29950,29952,29953,29954,29955,29957,29958,29959,29960,29961,29962,29963,29964,29966,29968,29970,29972,29973,29974,29975,29979,29981,29982,29984,29985,29986,29987,29988,29990,29991,29994,29998,30004,30006,30009,30012,30013,30015,30017,30018,30019,30020,30022,30023,30025,30026,30029,30032,30033,30034,30035,30037,30038,30039,30040,30045,30046,30047,30048,30049,30050,30051,30052,30055,30056,30057,30059,30060,30061,30062,30063,30064,30065,30067,30069,30070,30071,30074,30075,30076,30077,30078,30080,30081,30082,30084,30085,30087,57720,57721,57722,57723,57724,57725,57726,57727,57728,57729,57730,57731,57732,57733,57734,57735,57736,57737,57738,57739,57740,57741,57742,57743,57744,57745,57746,57747,57748,57749,57750,57751,57752,57753,57754,57755,57756,57757,57758,57759,57760,57761,57762,57763,57764,57765,57766,57767,57768,57769,57770,57771,57772,57773,57774,57775,57776,57777,57778,57779,57780,57781,57782,57783,57784,57785,57786,57787,57788,57789,57790,57791,57792,57793,57794,57795,57796,57797,57798,57799,57800,57801,57802,57803,57804,57805,57806,57807,57808,57809,57810,57811,57812,57813,30088,30089,30090,30092,30093,30094,30096,30099,30101,30104,30107,30108,30110,30114,30118,30119,30120,30121,30122,30125,30134,30135,30138,30139,30143,30144,30145,30150,30155,30156,30158,30159,30160,30161,30163,30167,30169,30170,30172,30173,30175,30176,30177,30181,30185,30188,30189,30190,30191,30194,30195,30197,30198,30199,30200,30202,30203,30205,30206,30210,30212,30214,30215,30216,30217,30219,30221,30222,30223,30225,30226,30227,30228,30230,30234,30236,30237,30238,30241,30243,30247,30248,30252,30254,30255,30257,30258,30262,30263,30265,30266,30267,30269,30273,30274,30276,57814,57815,57816,57817,57818,57819,57820,57821,57822,57823,57824,57825,57826,57827,57828,57829,57830,57831,57832,57833,57834,57835,57836,57837,57838,57839,57840,57841,57842,57843,57844,57845,57846,57847,57848,57849,57850,57851,57852,57853,57854,57855,57856,57857,57858,57859,57860,57861,57862,57863,57864,57865,57866,57867,57868,57869,57870,57871,57872,57873,57874,57875,57876,57877,57878,57879,57880,57881,57882,57883,57884,57885,57886,57887,57888,57889,57890,57891,57892,57893,57894,57895,57896,57897,57898,57899,57900,57901,57902,57903,57904,57905,57906,57907,30277,30278,30279,30280,30281,30282,30283,30286,30287,30288,30289,30290,30291,30293,30295,30296,30297,30298,30299,30301,30303,30304,30305,30306,30308,30309,30310,30311,30312,30313,30314,30316,30317,30318,30320,30321,30322,30323,30324,30325,30326,30327,30329,30330,30332,30335,30336,30337,30339,30341,30345,30346,30348,30349,30351,30352,30354,30356,30357,30359,30360,30362,30363,30364,30365,30366,30367,30368,30369,30370,30371,30373,30374,30375,30376,30377,30378,30379,30380,30381,30383,30384,30387,30389,30390,30391,30392,30393,30394,30395,30396,30397,30398,30400,30401,30403,21834,38463,22467,25384,21710,21769,21696,30353,30284,34108,30702,33406,30861,29233,38552,38797,27688,23433,20474,25353,26263,23736,33018,26696,32942,26114,30414,20985,25942,29100,32753,34948,20658,22885,25034,28595,33453,25420,25170,21485,21543,31494,20843,30116,24052,25300,36299,38774,25226,32793,22365,38712,32610,29240,30333,26575,30334,25670,20336,36133,25308,31255,26001,29677,25644,25203,33324,39041,26495,29256,25198,25292,20276,29923,21322,21150,32458,37030,24110,26758,27036,33152,32465,26834,30917,34444,38225,20621,35876,33502,32990,21253,35090,21093,30404,30407,30409,30411,30412,30419,30421,30425,30426,30428,30429,30430,30432,30433,30434,30435,30436,30438,30439,30440,30441,30442,30443,30444,30445,30448,30451,30453,30454,30455,30458,30459,30461,30463,30464,30466,30467,30469,30470,30474,30476,30478,30479,30480,30481,30482,30483,30484,30485,30486,30487,30488,30491,30492,30493,30494,30497,30499,30500,30501,30503,30506,30507,30508,30510,30512,30513,30514,30515,30516,30521,30523,30525,30526,30527,30530,30532,30533,30534,30536,30537,30538,30539,30540,30541,30542,30543,30546,30547,30548,30549,30550,30551,30552,30553,30556,34180,38649,20445,22561,39281,23453,25265,25253,26292,35961,40077,29190,26479,30865,24754,21329,21271,36744,32972,36125,38049,20493,29384,22791,24811,28953,34987,22868,33519,26412,31528,23849,32503,29997,27893,36454,36856,36924,40763,27604,37145,31508,24444,30887,34006,34109,27605,27609,27606,24065,24199,30201,38381,25949,24330,24517,36767,22721,33218,36991,38491,38829,36793,32534,36140,25153,20415,21464,21342,36776,36777,36779,36941,26631,24426,33176,34920,40150,24971,21035,30250,24428,25996,28626,28392,23486,25672,20853,20912,26564,19993,31177,39292,28851,30557,30558,30559,30560,30564,30567,30569,30570,30573,30574,30575,30576,30577,30578,30579,30580,30581,30582,30583,30584,30586,30587,30588,30593,30594,30595,30598,30599,30600,30601,30602,30603,30607,30608,30611,30612,30613,30614,30615,30616,30617,30618,30619,30620,30621,30622,30625,30627,30628,30630,30632,30635,30637,30638,30639,30641,30642,30644,30646,30647,30648,30649,30650,30652,30654,30656,30657,30658,30659,30660,30661,30662,30663,30664,30665,30666,30667,30668,30670,30671,30672,30673,30674,30675,30676,30677,30678,30680,30681,30682,30685,30686,30687,30688,30689,30692,30149,24182,29627,33760,25773,25320,38069,27874,21338,21187,25615,38082,31636,20271,24091,33334,33046,33162,28196,27850,39539,25429,21340,21754,34917,22496,19981,24067,27493,31807,37096,24598,25830,29468,35009,26448,25165,36130,30572,36393,37319,24425,33756,34081,39184,21442,34453,27531,24813,24808,28799,33485,33329,20179,27815,34255,25805,31961,27133,26361,33609,21397,31574,20391,20876,27979,23618,36461,25554,21449,33580,33590,26597,30900,25661,23519,23700,24046,35815,25286,26612,35962,25600,25530,34633,39307,35863,32544,38130,20135,38416,39076,26124,29462,30694,30696,30698,30703,30704,30705,30706,30708,30709,30711,30713,30714,30715,30716,30723,30724,30725,30726,30727,30728,30730,30731,30734,30735,30736,30739,30741,30745,30747,30750,30752,30753,30754,30756,30760,30762,30763,30766,30767,30769,30770,30771,30773,30774,30781,30783,30785,30786,30787,30788,30790,30792,30793,30794,30795,30797,30799,30801,30803,30804,30808,30809,30810,30811,30812,30814,30815,30816,30817,30818,30819,30820,30821,30822,30823,30824,30825,30831,30832,30833,30834,30835,30836,30837,30838,30840,30841,30842,30843,30845,30846,30847,30848,30849,30850,30851,22330,23581,24120,38271,20607,32928,21378,25950,30021,21809,20513,36229,25220,38046,26397,22066,28526,24034,21557,28818,36710,25199,25764,25507,24443,28552,37108,33251,36784,23576,26216,24561,27785,38472,36225,34924,25745,31216,22478,27225,25104,21576,20056,31243,24809,28548,35802,25215,36894,39563,31204,21507,30196,25345,21273,27744,36831,24347,39536,32827,40831,20360,23610,36196,32709,26021,28861,20805,20914,34411,23815,23456,25277,37228,30068,36364,31264,24833,31609,20167,32504,30597,19985,33261,21021,20986,27249,21416,36487,38148,38607,28353,38500,26970,30852,30853,30854,30856,30858,30859,30863,30864,30866,30868,30869,30870,30873,30877,30878,30880,30882,30884,30886,30888,30889,30890,30891,30892,30893,30894,30895,30901,30902,30903,30904,30906,30907,30908,30909,30911,30912,30914,30915,30916,30918,30919,30920,30924,30925,30926,30927,30929,30930,30931,30934,30935,30936,30938,30939,30940,30941,30942,30943,30944,30945,30946,30947,30948,30949,30950,30951,30953,30954,30955,30957,30958,30959,30960,30961,30963,30965,30966,30968,30969,30971,30972,30973,30974,30975,30976,30978,30979,30980,30982,30983,30984,30985,30986,30987,30988,30784,20648,30679,25616,35302,22788,25571,24029,31359,26941,20256,33337,21912,20018,30126,31383,24162,24202,38383,21019,21561,28810,25462,38180,22402,26149,26943,37255,21767,28147,32431,34850,25139,32496,30133,33576,30913,38604,36766,24904,29943,35789,27492,21050,36176,27425,32874,33905,22257,21254,20174,19995,20945,31895,37259,31751,20419,36479,31713,31388,25703,23828,20652,33030,30209,31929,28140,32736,26449,23384,23544,30923,25774,25619,25514,25387,38169,25645,36798,31572,30249,25171,22823,21574,27513,20643,25140,24102,27526,20195,36151,34955,24453,36910,30989,30990,30991,30992,30993,30994,30996,30997,30998,30999,31000,31001,31002,31003,31004,31005,31007,31008,31009,31010,31011,31013,31014,31015,31016,31017,31018,31019,31020,31021,31022,31023,31024,31025,31026,31027,31029,31030,31031,31032,31033,31037,31039,31042,31043,31044,31045,31047,31050,31051,31052,31053,31054,31055,31056,31057,31058,31060,31061,31064,31065,31073,31075,31076,31078,31081,31082,31083,31084,31086,31088,31089,31090,31091,31092,31093,31094,31097,31099,31100,31101,31102,31103,31106,31107,31110,31111,31112,31113,31115,31116,31117,31118,31120,31121,31122,24608,32829,25285,20025,21333,37112,25528,32966,26086,27694,20294,24814,28129,35806,24377,34507,24403,25377,20826,33633,26723,20992,25443,36424,20498,23707,31095,23548,21040,31291,24764,36947,30423,24503,24471,30340,36460,28783,30331,31561,30634,20979,37011,22564,20302,28404,36842,25932,31515,29380,28068,32735,23265,25269,24213,22320,33922,31532,24093,24351,36882,32532,39072,25474,28359,30872,28857,20856,38747,22443,30005,20291,30008,24215,24806,22880,28096,27583,30857,21500,38613,20939,20993,25481,21514,38035,35843,36300,29241,30879,34678,36845,35853,21472,31123,31124,31125,31126,31127,31128,31129,31131,31132,31133,31134,31135,31136,31137,31138,31139,31140,31141,31142,31144,31145,31146,31147,31148,31149,31150,31151,31152,31153,31154,31156,31157,31158,31159,31160,31164,31167,31170,31172,31173,31175,31176,31178,31180,31182,31183,31184,31187,31188,31190,31191,31193,31194,31195,31196,31197,31198,31200,31201,31202,31205,31208,31210,31212,31214,31217,31218,31219,31220,31221,31222,31223,31225,31226,31228,31230,31231,31233,31236,31237,31239,31240,31241,31242,31244,31247,31248,31249,31250,31251,31253,31254,31256,31257,31259,31260,19969,30447,21486,38025,39030,40718,38189,23450,35746,20002,19996,20908,33891,25026,21160,26635,20375,24683,20923,27934,20828,25238,26007,38497,35910,36887,30168,37117,30563,27602,29322,29420,35835,22581,30585,36172,26460,38208,32922,24230,28193,22930,31471,30701,38203,27573,26029,32526,22534,20817,38431,23545,22697,21544,36466,25958,39039,22244,38045,30462,36929,25479,21702,22810,22842,22427,36530,26421,36346,33333,21057,24816,22549,34558,23784,40517,20420,39069,35769,23077,24694,21380,25212,36943,37122,39295,24681,32780,20799,32819,23572,39285,27953,20108,31261,31263,31265,31266,31268,31269,31270,31271,31272,31273,31274,31275,31276,31277,31278,31279,31280,31281,31282,31284,31285,31286,31288,31290,31294,31296,31297,31298,31299,31300,31301,31303,31304,31305,31306,31307,31308,31309,31310,31311,31312,31314,31315,31316,31317,31318,31320,31321,31322,31323,31324,31325,31326,31327,31328,31329,31330,31331,31332,31333,31334,31335,31336,31337,31338,31339,31340,31341,31342,31343,31345,31346,31347,31349,31355,31356,31357,31358,31362,31365,31367,31369,31370,31371,31372,31374,31375,31376,31379,31380,31385,31386,31387,31390,31393,31394,36144,21457,32602,31567,20240,20047,38400,27861,29648,34281,24070,30058,32763,27146,30718,38034,32321,20961,28902,21453,36820,33539,36137,29359,39277,27867,22346,33459,26041,32938,25151,38450,22952,20223,35775,32442,25918,33778,38750,21857,39134,32933,21290,35837,21536,32954,24223,27832,36153,33452,37210,21545,27675,20998,32439,22367,28954,27774,31881,22859,20221,24575,24868,31914,20016,23553,26539,34562,23792,38155,39118,30127,28925,36898,20911,32541,35773,22857,20964,20315,21542,22827,25975,32932,23413,25206,25282,36752,24133,27679,31526,20239,20440,26381,31395,31396,31399,31401,31402,31403,31406,31407,31408,31409,31410,31412,31413,31414,31415,31416,31417,31418,31419,31420,31421,31422,31424,31425,31426,31427,31428,31429,31430,31431,31432,31433,31434,31436,31437,31438,31439,31440,31441,31442,31443,31444,31445,31447,31448,31450,31451,31452,31453,31457,31458,31460,31463,31464,31465,31466,31467,31468,31470,31472,31473,31474,31475,31476,31477,31478,31479,31480,31483,31484,31486,31488,31489,31490,31493,31495,31497,31500,31501,31502,31504,31506,31507,31510,31511,31512,31514,31516,31517,31519,31521,31522,31523,31527,31529,31533,28014,28074,31119,34993,24343,29995,25242,36741,20463,37340,26023,33071,33105,24220,33104,36212,21103,35206,36171,22797,20613,20184,38428,29238,33145,36127,23500,35747,38468,22919,32538,21648,22134,22030,35813,25913,27010,38041,30422,28297,24178,29976,26438,26577,31487,32925,36214,24863,31174,25954,36195,20872,21018,38050,32568,32923,32434,23703,28207,26464,31705,30347,39640,33167,32660,31957,25630,38224,31295,21578,21733,27468,25601,25096,40509,33011,30105,21106,38761,33883,26684,34532,38401,38548,38124,20010,21508,32473,26681,36319,32789,26356,24218,32697,31535,31536,31538,31540,31541,31542,31543,31545,31547,31549,31551,31552,31553,31554,31555,31556,31558,31560,31562,31565,31566,31571,31573,31575,31577,31580,31582,31583,31585,31587,31588,31589,31590,31591,31592,31593,31594,31595,31596,31597,31599,31600,31603,31604,31606,31608,31610,31612,31613,31615,31617,31618,31619,31620,31622,31623,31624,31625,31626,31627,31628,31630,31631,31633,31634,31635,31638,31640,31641,31642,31643,31646,31647,31648,31651,31652,31653,31662,31663,31664,31666,31667,31669,31670,31671,31673,31674,31675,31676,31677,31678,31679,31680,31682,31683,31684,22466,32831,26775,24037,25915,21151,24685,40858,20379,36524,20844,23467,24339,24041,27742,25329,36129,20849,38057,21246,27807,33503,29399,22434,26500,36141,22815,36764,33735,21653,31629,20272,27837,23396,22993,40723,21476,34506,39592,35895,32929,25925,39038,22266,38599,21038,29916,21072,23521,25346,35074,20054,25296,24618,26874,20851,23448,20896,35266,31649,39302,32592,24815,28748,36143,20809,24191,36891,29808,35268,22317,30789,24402,40863,38394,36712,39740,35809,30328,26690,26588,36330,36149,21053,36746,28378,26829,38149,37101,22269,26524,35065,36807,21704,31685,31688,31689,31690,31691,31693,31694,31695,31696,31698,31700,31701,31702,31703,31704,31707,31708,31710,31711,31712,31714,31715,31716,31719,31720,31721,31723,31724,31725,31727,31728,31730,31731,31732,31733,31734,31736,31737,31738,31739,31741,31743,31744,31745,31746,31747,31748,31749,31750,31752,31753,31754,31757,31758,31760,31761,31762,31763,31764,31765,31767,31768,31769,31770,31771,31772,31773,31774,31776,31777,31778,31779,31780,31781,31784,31785,31787,31788,31789,31790,31791,31792,31793,31794,31795,31796,31797,31798,31799,31801,31802,31803,31804,31805,31806,31810,39608,23401,28023,27686,20133,23475,39559,37219,25000,37039,38889,21547,28085,23506,20989,21898,32597,32752,25788,25421,26097,25022,24717,28938,27735,27721,22831,26477,33322,22741,22158,35946,27627,37085,22909,32791,21495,28009,21621,21917,33655,33743,26680,31166,21644,20309,21512,30418,35977,38402,27827,28088,36203,35088,40548,36154,22079,40657,30165,24456,29408,24680,21756,20136,27178,34913,24658,36720,21700,28888,34425,40511,27946,23439,24344,32418,21897,20399,29492,21564,21402,20505,21518,21628,20046,24573,29786,22774,33899,32993,34676,29392,31946,28246,31811,31812,31813,31814,31815,31816,31817,31818,31819,31820,31822,31823,31824,31825,31826,31827,31828,31829,31830,31831,31832,31833,31834,31835,31836,31837,31838,31839,31840,31841,31842,31843,31844,31845,31846,31847,31848,31849,31850,31851,31852,31853,31854,31855,31856,31857,31858,31861,31862,31863,31864,31865,31866,31870,31871,31872,31873,31874,31875,31876,31877,31878,31879,31880,31882,31883,31884,31885,31886,31887,31888,31891,31892,31894,31897,31898,31899,31904,31905,31907,31910,31911,31912,31913,31915,31916,31917,31919,31920,31924,31925,31926,31927,31928,31930,31931,24359,34382,21804,25252,20114,27818,25143,33457,21719,21326,29502,28369,30011,21010,21270,35805,27088,24458,24576,28142,22351,27426,29615,26707,36824,32531,25442,24739,21796,30186,35938,28949,28067,23462,24187,33618,24908,40644,30970,34647,31783,30343,20976,24822,29004,26179,24140,24653,35854,28784,25381,36745,24509,24674,34516,22238,27585,24724,24935,21321,24800,26214,36159,31229,20250,28905,27719,35763,35826,32472,33636,26127,23130,39746,27985,28151,35905,27963,20249,28779,33719,25110,24785,38669,36135,31096,20987,22334,22522,26426,30072,31293,31215,31637,31935,31936,31938,31939,31940,31942,31945,31947,31950,31951,31952,31953,31954,31955,31956,31960,31962,31963,31965,31966,31969,31970,31971,31972,31973,31974,31975,31977,31978,31979,31980,31981,31982,31984,31985,31986,31987,31988,31989,31990,31991,31993,31994,31996,31997,31998,31999,32000,32001,32002,32003,32004,32005,32006,32007,32008,32009,32011,32012,32013,32014,32015,32016,32017,32018,32019,32020,32021,32022,32023,32024,32025,32026,32027,32028,32029,32030,32031,32033,32035,32036,32037,32038,32040,32041,32042,32044,32045,32046,32048,32049,32050,32051,32052,32053,32054,32908,39269,36857,28608,35749,40481,23020,32489,32521,21513,26497,26840,36753,31821,38598,21450,24613,30142,27762,21363,23241,32423,25380,20960,33034,24049,34015,25216,20864,23395,20238,31085,21058,24760,27982,23492,23490,35745,35760,26082,24524,38469,22931,32487,32426,22025,26551,22841,20339,23478,21152,33626,39050,36158,30002,38078,20551,31292,20215,26550,39550,23233,27516,30417,22362,23574,31546,38388,29006,20860,32937,33392,22904,32516,33575,26816,26604,30897,30839,25315,25441,31616,20461,21098,20943,33616,27099,37492,36341,36145,35265,38190,31661,20214,32055,32056,32057,32058,32059,32060,32061,32062,32063,32064,32065,32066,32067,32068,32069,32070,32071,32072,32073,32074,32075,32076,32077,32078,32079,32080,32081,32082,32083,32084,32085,32086,32087,32088,32089,32090,32091,32092,32093,32094,32095,32096,32097,32098,32099,32100,32101,32102,32103,32104,32105,32106,32107,32108,32109,32111,32112,32113,32114,32115,32116,32117,32118,32120,32121,32122,32123,32124,32125,32126,32127,32128,32129,32130,32131,32132,32133,32134,32135,32136,32137,32138,32139,32140,32141,32142,32143,32144,32145,32146,32147,32148,32149,32150,32151,32152,20581,33328,21073,39279,28176,28293,28071,24314,20725,23004,23558,27974,27743,30086,33931,26728,22870,35762,21280,37233,38477,34121,26898,30977,28966,33014,20132,37066,27975,39556,23047,22204,25605,38128,30699,20389,33050,29409,35282,39290,32564,32478,21119,25945,37237,36735,36739,21483,31382,25581,25509,30342,31224,34903,38454,25130,21163,33410,26708,26480,25463,30571,31469,27905,32467,35299,22992,25106,34249,33445,30028,20511,20171,30117,35819,23626,24062,31563,26020,37329,20170,27941,35167,32039,38182,20165,35880,36827,38771,26187,31105,36817,28908,28024,32153,32154,32155,32156,32157,32158,32159,32160,32161,32162,32163,32164,32165,32167,32168,32169,32170,32171,32172,32173,32175,32176,32177,32178,32179,32180,32181,32182,32183,32184,32185,32186,32187,32188,32189,32190,32191,32192,32193,32194,32195,32196,32197,32198,32199,32200,32201,32202,32203,32204,32205,32206,32207,32208,32209,32210,32211,32212,32213,32214,32215,32216,32217,32218,32219,32220,32221,32222,32223,32224,32225,32226,32227,32228,32229,32230,32231,32232,32233,32234,32235,32236,32237,32238,32239,32240,32241,32242,32243,32244,32245,32246,32247,32248,32249,32250,23613,21170,33606,20834,33550,30555,26230,40120,20140,24778,31934,31923,32463,20117,35686,26223,39048,38745,22659,25964,38236,24452,30153,38742,31455,31454,20928,28847,31384,25578,31350,32416,29590,38893,20037,28792,20061,37202,21417,25937,26087,33276,33285,21646,23601,30106,38816,25304,29401,30141,23621,39545,33738,23616,21632,30697,20030,27822,32858,25298,25454,24040,20855,36317,36382,38191,20465,21477,24807,28844,21095,25424,40515,23071,20518,30519,21367,32482,25733,25899,25225,25496,20500,29237,35273,20915,35776,32477,22343,33740,38055,20891,21531,23803,32251,32252,32253,32254,32255,32256,32257,32258,32259,32260,32261,32262,32263,32264,32265,32266,32267,32268,32269,32270,32271,32272,32273,32274,32275,32276,32277,32278,32279,32280,32281,32282,32283,32284,32285,32286,32287,32288,32289,32290,32291,32292,32293,32294,32295,32296,32297,32298,32299,32300,32301,32302,32303,32304,32305,32306,32307,32308,32309,32310,32311,32312,32313,32314,32316,32317,32318,32319,32320,32322,32323,32324,32325,32326,32328,32329,32330,32331,32332,32333,32334,32335,32336,32337,32338,32339,32340,32341,32342,32343,32344,32345,32346,32347,32348,32349,20426,31459,27994,37089,39567,21888,21654,21345,21679,24320,25577,26999,20975,24936,21002,22570,21208,22350,30733,30475,24247,24951,31968,25179,25239,20130,28821,32771,25335,28900,38752,22391,33499,26607,26869,30933,39063,31185,22771,21683,21487,28212,20811,21051,23458,35838,32943,21827,22438,24691,22353,21549,31354,24656,23380,25511,25248,21475,25187,23495,26543,21741,31391,33510,37239,24211,35044,22840,22446,25358,36328,33007,22359,31607,20393,24555,23485,27454,21281,31568,29378,26694,30719,30518,26103,20917,20111,30420,23743,31397,33909,22862,39745,20608,32350,32351,32352,32353,32354,32355,32356,32357,32358,32359,32360,32361,32362,32363,32364,32365,32366,32367,32368,32369,32370,32371,32372,32373,32374,32375,32376,32377,32378,32379,32380,32381,32382,32383,32384,32385,32387,32388,32389,32390,32391,32392,32393,32394,32395,32396,32397,32398,32399,32400,32401,32402,32403,32404,32405,32406,32407,32408,32409,32410,32412,32413,32414,32430,32436,32443,32444,32470,32484,32492,32505,32522,32528,32542,32567,32569,32571,32572,32573,32574,32575,32576,32577,32579,32582,32583,32584,32585,32586,32587,32588,32589,32590,32591,32594,32595,39304,24871,28291,22372,26118,25414,22256,25324,25193,24275,38420,22403,25289,21895,34593,33098,36771,21862,33713,26469,36182,34013,23146,26639,25318,31726,38417,20848,28572,35888,25597,35272,25042,32518,28866,28389,29701,27028,29436,24266,37070,26391,28010,25438,21171,29282,32769,20332,23013,37226,28889,28061,21202,20048,38647,38253,34174,30922,32047,20769,22418,25794,32907,31867,27882,26865,26974,20919,21400,26792,29313,40654,31729,29432,31163,28435,29702,26446,37324,40100,31036,33673,33620,21519,26647,20029,21385,21169,30782,21382,21033,20616,20363,20432,32598,32601,32603,32604,32605,32606,32608,32611,32612,32613,32614,32615,32619,32620,32621,32623,32624,32627,32629,32630,32631,32632,32634,32635,32636,32637,32639,32640,32642,32643,32644,32645,32646,32647,32648,32649,32651,32653,32655,32656,32657,32658,32659,32661,32662,32663,32664,32665,32667,32668,32672,32674,32675,32677,32678,32680,32681,32682,32683,32684,32685,32686,32689,32691,32692,32693,32694,32695,32698,32699,32702,32704,32706,32707,32708,32710,32711,32712,32713,32715,32717,32719,32720,32721,32722,32723,32726,32727,32729,32730,32731,32732,32733,32734,32738,32739,30178,31435,31890,27813,38582,21147,29827,21737,20457,32852,33714,36830,38256,24265,24604,28063,24088,25947,33080,38142,24651,28860,32451,31918,20937,26753,31921,33391,20004,36742,37327,26238,20142,35845,25769,32842,20698,30103,29134,23525,36797,28518,20102,25730,38243,24278,26009,21015,35010,28872,21155,29454,29747,26519,30967,38678,20020,37051,40158,28107,20955,36161,21533,25294,29618,33777,38646,40836,38083,20278,32666,20940,28789,38517,23725,39046,21478,20196,28316,29705,27060,30827,39311,30041,21016,30244,27969,26611,20845,40857,32843,21657,31548,31423,32740,32743,32744,32746,32747,32748,32749,32751,32754,32756,32757,32758,32759,32760,32761,32762,32765,32766,32767,32770,32775,32776,32777,32778,32782,32783,32785,32787,32794,32795,32797,32798,32799,32801,32803,32804,32811,32812,32813,32814,32815,32816,32818,32820,32825,32826,32828,32830,32832,32833,32836,32837,32839,32840,32841,32846,32847,32848,32849,32851,32853,32854,32855,32857,32859,32860,32861,32862,32863,32864,32865,32866,32867,32868,32869,32870,32871,32872,32875,32876,32877,32878,32879,32880,32882,32883,32884,32885,32886,32887,32888,32889,32890,32891,32892,32893,38534,22404,25314,38471,27004,23044,25602,31699,28431,38475,33446,21346,39045,24208,28809,25523,21348,34383,40065,40595,30860,38706,36335,36162,40575,28510,31108,24405,38470,25134,39540,21525,38109,20387,26053,23653,23649,32533,34385,27695,24459,29575,28388,32511,23782,25371,23402,28390,21365,20081,25504,30053,25249,36718,20262,20177,27814,32438,35770,33821,34746,32599,36923,38179,31657,39585,35064,33853,27931,39558,32476,22920,40635,29595,30721,34434,39532,39554,22043,21527,22475,20080,40614,21334,36808,33033,30610,39314,34542,28385,34067,26364,24930,28459,32894,32897,32898,32901,32904,32906,32909,32910,32911,32912,32913,32914,32916,32917,32919,32921,32926,32931,32934,32935,32936,32940,32944,32947,32949,32950,32952,32953,32955,32965,32967,32968,32969,32970,32971,32975,32976,32977,32978,32979,32980,32981,32984,32991,32992,32994,32995,32998,33006,33013,33015,33017,33019,33022,33023,33024,33025,33027,33028,33029,33031,33032,33035,33036,33045,33047,33049,33051,33052,33053,33055,33056,33057,33058,33059,33060,33061,33062,33063,33064,33065,33066,33067,33069,33070,33072,33075,33076,33077,33079,33081,33082,33083,33084,33085,33087,35881,33426,33579,30450,27667,24537,33725,29483,33541,38170,27611,30683,38086,21359,33538,20882,24125,35980,36152,20040,29611,26522,26757,37238,38665,29028,27809,30473,23186,38209,27599,32654,26151,23504,22969,23194,38376,38391,20204,33804,33945,27308,30431,38192,29467,26790,23391,30511,37274,38753,31964,36855,35868,24357,31859,31192,35269,27852,34588,23494,24130,26825,30496,32501,20885,20813,21193,23081,32517,38754,33495,25551,30596,34256,31186,28218,24217,22937,34065,28781,27665,25279,30399,25935,24751,38397,26126,34719,40483,38125,21517,21629,35884,25720,33088,33089,33090,33091,33092,33093,33095,33097,33101,33102,33103,33106,33110,33111,33112,33115,33116,33117,33118,33119,33121,33122,33123,33124,33126,33128,33130,33131,33132,33135,33138,33139,33141,33142,33143,33144,33153,33155,33156,33157,33158,33159,33161,33163,33164,33165,33166,33168,33170,33171,33172,33173,33174,33175,33177,33178,33182,33183,33184,33185,33186,33188,33189,33191,33193,33195,33196,33197,33198,33199,33200,33201,33202,33204,33205,33206,33207,33208,33209,33212,33213,33214,33215,33220,33221,33223,33224,33225,33227,33229,33230,33231,33232,33233,33234,33235,25721,34321,27169,33180,30952,25705,39764,25273,26411,33707,22696,40664,27819,28448,23518,38476,35851,29279,26576,25287,29281,20137,22982,27597,22675,26286,24149,21215,24917,26408,30446,30566,29287,31302,25343,21738,21584,38048,37027,23068,32435,27670,20035,22902,32784,22856,21335,30007,38590,22218,25376,33041,24700,38393,28118,21602,39297,20869,23273,33021,22958,38675,20522,27877,23612,25311,20320,21311,33147,36870,28346,34091,25288,24180,30910,25781,25467,24565,23064,37247,40479,23615,25423,32834,23421,21870,38218,38221,28037,24744,26592,29406,20957,23425,33236,33237,33238,33239,33240,33241,33242,33243,33244,33245,33246,33247,33248,33249,33250,33252,33253,33254,33256,33257,33259,33262,33263,33264,33265,33266,33269,33270,33271,33272,33273,33274,33277,33279,33283,33287,33288,33289,33290,33291,33294,33295,33297,33299,33301,33302,33303,33304,33305,33306,33309,33312,33316,33317,33318,33319,33321,33326,33330,33338,33340,33341,33343,33344,33345,33346,33347,33349,33350,33352,33354,33356,33357,33358,33360,33361,33362,33363,33364,33365,33366,33367,33369,33371,33372,33373,33374,33376,33377,33378,33379,33380,33381,33382,33383,33385,25319,27870,29275,25197,38062,32445,33043,27987,20892,24324,22900,21162,24594,22899,26262,34384,30111,25386,25062,31983,35834,21734,27431,40485,27572,34261,21589,20598,27812,21866,36276,29228,24085,24597,29750,25293,25490,29260,24472,28227,27966,25856,28504,30424,30928,30460,30036,21028,21467,20051,24222,26049,32810,32982,25243,21638,21032,28846,34957,36305,27873,21624,32986,22521,35060,36180,38506,37197,20329,27803,21943,30406,30768,25256,28921,28558,24429,34028,26842,30844,31735,33192,26379,40527,25447,30896,22383,30738,38713,25209,25259,21128,29749,27607,33386,33387,33388,33389,33393,33397,33398,33399,33400,33403,33404,33408,33409,33411,33413,33414,33415,33417,33420,33424,33427,33428,33429,33430,33434,33435,33438,33440,33442,33443,33447,33458,33461,33462,33466,33467,33468,33471,33472,33474,33475,33477,33478,33481,33488,33494,33497,33498,33501,33506,33511,33512,33513,33514,33516,33517,33518,33520,33522,33523,33525,33526,33528,33530,33532,33533,33534,33535,33536,33546,33547,33549,33552,33554,33555,33558,33560,33561,33565,33566,33567,33568,33569,33570,33571,33572,33573,33574,33577,33578,33582,33584,33586,33591,33595,33597,21860,33086,30130,30382,21305,30174,20731,23617,35692,31687,20559,29255,39575,39128,28418,29922,31080,25735,30629,25340,39057,36139,21697,32856,20050,22378,33529,33805,24179,20973,29942,35780,23631,22369,27900,39047,23110,30772,39748,36843,31893,21078,25169,38138,20166,33670,33889,33769,33970,22484,26420,22275,26222,28006,35889,26333,28689,26399,27450,26646,25114,22971,19971,20932,28422,26578,27791,20854,26827,22855,27495,30054,23822,33040,40784,26071,31048,31041,39569,36215,23682,20062,20225,21551,22865,30732,22120,27668,36804,24323,27773,27875,35755,25488,33598,33599,33601,33602,33604,33605,33608,33610,33611,33612,33613,33614,33619,33621,33622,33623,33624,33625,33629,33634,33648,33649,33650,33651,33652,33653,33654,33657,33658,33662,33663,33664,33665,33666,33667,33668,33671,33672,33674,33675,33676,33677,33679,33680,33681,33684,33685,33686,33687,33689,33690,33693,33695,33697,33698,33699,33700,33701,33702,33703,33708,33709,33710,33711,33717,33723,33726,33727,33730,33731,33732,33734,33736,33737,33739,33741,33742,33744,33745,33746,33747,33749,33751,33753,33754,33755,33758,33762,33763,33764,33766,33767,33768,33771,33772,33773,24688,27965,29301,25190,38030,38085,21315,36801,31614,20191,35878,20094,40660,38065,38067,21069,28508,36963,27973,35892,22545,23884,27424,27465,26538,21595,33108,32652,22681,34103,24378,25250,27207,38201,25970,24708,26725,30631,20052,20392,24039,38808,25772,32728,23789,20431,31373,20999,33540,19988,24623,31363,38054,20405,20146,31206,29748,21220,33465,25810,31165,23517,27777,38738,36731,27682,20542,21375,28165,25806,26228,27696,24773,39031,35831,24198,29756,31351,31179,19992,37041,29699,27714,22234,37195,27845,36235,21306,34502,26354,36527,23624,39537,28192,33774,33775,33779,33780,33781,33782,33783,33786,33787,33788,33790,33791,33792,33794,33797,33799,33800,33801,33802,33808,33810,33811,33812,33813,33814,33815,33817,33818,33819,33822,33823,33824,33825,33826,33827,33833,33834,33835,33836,33837,33838,33839,33840,33842,33843,33844,33845,33846,33847,33849,33850,33851,33854,33855,33856,33857,33858,33859,33860,33861,33863,33864,33865,33866,33867,33868,33869,33870,33871,33872,33874,33875,33876,33877,33878,33880,33885,33886,33887,33888,33890,33892,33893,33894,33895,33896,33898,33902,33903,33904,33906,33908,33911,33913,33915,33916,21462,23094,40843,36259,21435,22280,39079,26435,37275,27849,20840,30154,25331,29356,21048,21149,32570,28820,30264,21364,40522,27063,30830,38592,35033,32676,28982,29123,20873,26579,29924,22756,25880,22199,35753,39286,25200,32469,24825,28909,22764,20161,20154,24525,38887,20219,35748,20995,22922,32427,25172,20173,26085,25102,33592,33993,33635,34701,29076,28342,23481,32466,20887,25545,26580,32905,33593,34837,20754,23418,22914,36785,20083,27741,20837,35109,36719,38446,34122,29790,38160,38384,28070,33509,24369,25746,27922,33832,33134,40131,22622,36187,19977,21441,33917,33918,33919,33920,33921,33923,33924,33925,33926,33930,33933,33935,33936,33937,33938,33939,33940,33941,33942,33944,33946,33947,33949,33950,33951,33952,33954,33955,33956,33957,33958,33959,33960,33961,33962,33963,33964,33965,33966,33968,33969,33971,33973,33974,33975,33979,33980,33982,33984,33986,33987,33989,33990,33991,33992,33995,33996,33998,33999,34002,34004,34005,34007,34008,34009,34010,34011,34012,34014,34017,34018,34020,34023,34024,34025,34026,34027,34029,34030,34031,34033,34034,34035,34036,34037,34038,34039,34040,34041,34042,34043,34045,34046,34048,34049,34050,20254,25955,26705,21971,20007,25620,39578,25195,23234,29791,33394,28073,26862,20711,33678,30722,26432,21049,27801,32433,20667,21861,29022,31579,26194,29642,33515,26441,23665,21024,29053,34923,38378,38485,25797,36193,33203,21892,27733,25159,32558,22674,20260,21830,36175,26188,19978,23578,35059,26786,25422,31245,28903,33421,21242,38902,23569,21736,37045,32461,22882,36170,34503,33292,33293,36198,25668,23556,24913,28041,31038,35774,30775,30003,21627,20280,36523,28145,23072,32453,31070,27784,23457,23158,29978,32958,24910,28183,22768,29983,29989,29298,21319,32499,34051,34052,34053,34054,34055,34056,34057,34058,34059,34061,34062,34063,34064,34066,34068,34069,34070,34072,34073,34075,34076,34077,34078,34080,34082,34083,34084,34085,34086,34087,34088,34089,34090,34093,34094,34095,34096,34097,34098,34099,34100,34101,34102,34110,34111,34112,34113,34114,34116,34117,34118,34119,34123,34124,34125,34126,34127,34128,34129,34130,34131,34132,34133,34135,34136,34138,34139,34140,34141,34143,34144,34145,34146,34147,34149,34150,34151,34153,34154,34155,34156,34157,34158,34159,34160,34161,34163,34165,34166,34167,34168,34172,34173,34175,34176,34177,30465,30427,21097,32988,22307,24072,22833,29422,26045,28287,35799,23608,34417,21313,30707,25342,26102,20160,39135,34432,23454,35782,21490,30690,20351,23630,39542,22987,24335,31034,22763,19990,26623,20107,25325,35475,36893,21183,26159,21980,22124,36866,20181,20365,37322,39280,27663,24066,24643,23460,35270,35797,25910,25163,39318,23432,23551,25480,21806,21463,30246,20861,34092,26530,26803,27530,25234,36755,21460,33298,28113,30095,20070,36174,23408,29087,34223,26257,26329,32626,34560,40653,40736,23646,26415,36848,26641,26463,25101,31446,22661,24246,25968,28465,34178,34179,34182,34184,34185,34186,34187,34188,34189,34190,34192,34193,34194,34195,34196,34197,34198,34199,34200,34201,34202,34205,34206,34207,34208,34209,34210,34211,34213,34214,34215,34217,34219,34220,34221,34225,34226,34227,34228,34229,34230,34232,34234,34235,34236,34237,34238,34239,34240,34242,34243,34244,34245,34246,34247,34248,34250,34251,34252,34253,34254,34257,34258,34260,34262,34263,34264,34265,34266,34267,34269,34270,34271,34272,34273,34274,34275,34277,34278,34279,34280,34282,34283,34284,34285,34286,34287,34288,34289,34290,34291,34292,34293,34294,34295,34296,24661,21047,32781,25684,34928,29993,24069,26643,25332,38684,21452,29245,35841,27700,30561,31246,21550,30636,39034,33308,35828,30805,26388,28865,26031,25749,22070,24605,31169,21496,19997,27515,32902,23546,21987,22235,20282,20284,39282,24051,26494,32824,24578,39042,36865,23435,35772,35829,25628,33368,25822,22013,33487,37221,20439,32032,36895,31903,20723,22609,28335,23487,35785,32899,37240,33948,31639,34429,38539,38543,32485,39635,30862,23681,31319,36930,38567,31071,23385,25439,31499,34001,26797,21766,32553,29712,32034,38145,25152,22604,20182,23427,22905,22612,34297,34298,34300,34301,34302,34304,34305,34306,34307,34308,34310,34311,34312,34313,34314,34315,34316,34317,34318,34319,34320,34322,34323,34324,34325,34327,34328,34329,34330,34331,34332,34333,34334,34335,34336,34337,34338,34339,34340,34341,34342,34344,34346,34347,34348,34349,34350,34351,34352,34353,34354,34355,34356,34357,34358,34359,34361,34362,34363,34365,34366,34367,34368,34369,34370,34371,34372,34373,34374,34375,34376,34377,34378,34379,34380,34386,34387,34389,34390,34391,34392,34393,34395,34396,34397,34399,34400,34401,34403,34404,34405,34406,34407,34408,34409,34410,29549,25374,36427,36367,32974,33492,25260,21488,27888,37214,22826,24577,27760,22349,25674,36138,30251,28393,22363,27264,30192,28525,35885,35848,22374,27631,34962,30899,25506,21497,28845,27748,22616,25642,22530,26848,33179,21776,31958,20504,36538,28108,36255,28907,25487,28059,28372,32486,33796,26691,36867,28120,38518,35752,22871,29305,34276,33150,30140,35466,26799,21076,36386,38161,25552,39064,36420,21884,20307,26367,22159,24789,28053,21059,23625,22825,28155,22635,30000,29980,24684,33300,33094,25361,26465,36834,30522,36339,36148,38081,24086,21381,21548,28867,34413,34415,34416,34418,34419,34420,34421,34422,34423,34424,34435,34436,34437,34438,34439,34440,34441,34446,34447,34448,34449,34450,34452,34454,34455,34456,34457,34458,34459,34462,34463,34464,34465,34466,34469,34470,34475,34477,34478,34482,34483,34487,34488,34489,34491,34492,34493,34494,34495,34497,34498,34499,34501,34504,34508,34509,34514,34515,34517,34518,34519,34522,34524,34525,34528,34529,34530,34531,34533,34534,34535,34536,34538,34539,34540,34543,34549,34550,34551,34554,34555,34556,34557,34559,34561,34564,34565,34566,34571,34572,34574,34575,34576,34577,34580,34582,27712,24311,20572,20141,24237,25402,33351,36890,26704,37230,30643,21516,38108,24420,31461,26742,25413,31570,32479,30171,20599,25237,22836,36879,20984,31171,31361,22270,24466,36884,28034,23648,22303,21520,20820,28237,22242,25512,39059,33151,34581,35114,36864,21534,23663,33216,25302,25176,33073,40501,38464,39534,39548,26925,22949,25299,21822,25366,21703,34521,27964,23043,29926,34972,27498,22806,35916,24367,28286,29609,39037,20024,28919,23436,30871,25405,26202,30358,24779,23451,23113,19975,33109,27754,29579,20129,26505,32593,24448,26106,26395,24536,22916,23041,34585,34587,34589,34591,34592,34596,34598,34599,34600,34602,34603,34604,34605,34607,34608,34610,34611,34613,34614,34616,34617,34618,34620,34621,34624,34625,34626,34627,34628,34629,34630,34634,34635,34637,34639,34640,34641,34642,34644,34645,34646,34648,34650,34651,34652,34653,34654,34655,34657,34658,34662,34663,34664,34665,34666,34667,34668,34669,34671,34673,34674,34675,34677,34679,34680,34681,34682,34687,34688,34689,34692,34694,34695,34697,34698,34700,34702,34703,34704,34705,34706,34708,34709,34710,34712,34713,34714,34715,34716,34717,34718,34720,34721,34722,34723,34724,24013,24494,21361,38886,36829,26693,22260,21807,24799,20026,28493,32500,33479,33806,22996,20255,20266,23614,32428,26410,34074,21619,30031,32963,21890,39759,20301,28205,35859,23561,24944,21355,30239,28201,34442,25991,38395,32441,21563,31283,32010,38382,21985,32705,29934,25373,34583,28065,31389,25105,26017,21351,25569,27779,24043,21596,38056,20044,27745,35820,23627,26080,33436,26791,21566,21556,27595,27494,20116,25410,21320,33310,20237,20398,22366,25098,38654,26212,29289,21247,21153,24735,35823,26132,29081,26512,35199,30802,30717,26224,22075,21560,38177,29306,34725,34726,34727,34729,34730,34734,34736,34737,34738,34740,34742,34743,34744,34745,34747,34748,34750,34751,34753,34754,34755,34756,34757,34759,34760,34761,34764,34765,34766,34767,34768,34772,34773,34774,34775,34776,34777,34778,34780,34781,34782,34783,34785,34786,34787,34788,34790,34791,34792,34793,34795,34796,34797,34799,34800,34801,34802,34803,34804,34805,34806,34807,34808,34810,34811,34812,34813,34815,34816,34817,34818,34820,34821,34822,34823,34824,34825,34827,34828,34829,34830,34831,34832,34833,34834,34836,34839,34840,34841,34842,34844,34845,34846,34847,34848,34851,31232,24687,24076,24713,33181,22805,24796,29060,28911,28330,27728,29312,27268,34989,24109,20064,23219,21916,38115,27927,31995,38553,25103,32454,30606,34430,21283,38686,36758,26247,23777,20384,29421,19979,21414,22799,21523,25472,38184,20808,20185,40092,32420,21688,36132,34900,33335,38386,28046,24358,23244,26174,38505,29616,29486,21439,33146,39301,32673,23466,38519,38480,32447,30456,21410,38262,39321,31665,35140,28248,20065,32724,31077,35814,24819,21709,20139,39033,24055,27233,20687,21521,35937,33831,30813,38660,21066,21742,22179,38144,28040,23477,28102,26195,34852,34853,34854,34855,34856,34857,34858,34859,34860,34861,34862,34863,34864,34865,34867,34868,34869,34870,34871,34872,34874,34875,34877,34878,34879,34881,34882,34883,34886,34887,34888,34889,34890,34891,34894,34895,34896,34897,34898,34899,34901,34902,34904,34906,34907,34908,34909,34910,34911,34912,34918,34919,34922,34925,34927,34929,34931,34932,34933,34934,34936,34937,34938,34939,34940,34944,34947,34950,34951,34953,34954,34956,34958,34959,34960,34961,34963,34964,34965,34967,34968,34969,34970,34971,34973,34974,34975,34976,34977,34979,34981,34982,34983,34984,34985,34986,23567,23389,26657,32918,21880,31505,25928,26964,20123,27463,34638,38795,21327,25375,25658,37034,26012,32961,35856,20889,26800,21368,34809,25032,27844,27899,35874,23633,34218,33455,38156,27427,36763,26032,24571,24515,20449,34885,26143,33125,29481,24826,20852,21009,22411,24418,37026,34892,37266,24184,26447,24615,22995,20804,20982,33016,21256,27769,38596,29066,20241,20462,32670,26429,21957,38152,31168,34966,32483,22687,25100,38656,34394,22040,39035,24464,35768,33988,37207,21465,26093,24207,30044,24676,32110,23167,32490,32493,36713,21927,23459,24748,26059,29572,34988,34990,34991,34992,34994,34995,34996,34997,34998,35000,35001,35002,35003,35005,35006,35007,35008,35011,35012,35015,35016,35018,35019,35020,35021,35023,35024,35025,35027,35030,35031,35034,35035,35036,35037,35038,35040,35041,35046,35047,35049,35050,35051,35052,35053,35054,35055,35058,35061,35062,35063,35066,35067,35069,35071,35072,35073,35075,35076,35077,35078,35079,35080,35081,35083,35084,35085,35086,35087,35089,35092,35093,35094,35095,35096,35100,35101,35102,35103,35104,35106,35107,35108,35110,35111,35112,35113,35116,35117,35118,35119,35121,35122,35123,35125,35127,36873,30307,30505,32474,38772,34203,23398,31348,38634,34880,21195,29071,24490,26092,35810,23547,39535,24033,27529,27739,35757,35759,36874,36805,21387,25276,40486,40493,21568,20011,33469,29273,34460,23830,34905,28079,38597,21713,20122,35766,28937,21693,38409,28895,28153,30416,20005,30740,34578,23721,24310,35328,39068,38414,28814,27839,22852,25513,30524,34893,28436,33395,22576,29141,21388,30746,38593,21761,24422,28976,23476,35866,39564,27523,22830,40495,31207,26472,25196,20335,30113,32650,27915,38451,27687,20208,30162,20859,26679,28478,36992,33136,22934,29814,35128,35129,35130,35131,35132,35133,35134,35135,35136,35138,35139,35141,35142,35143,35144,35145,35146,35147,35148,35149,35150,35151,35152,35153,35154,35155,35156,35157,35158,35159,35160,35161,35162,35163,35164,35165,35168,35169,35170,35171,35172,35173,35175,35176,35177,35178,35179,35180,35181,35182,35183,35184,35185,35186,35187,35188,35189,35190,35191,35192,35193,35194,35196,35197,35198,35200,35202,35204,35205,35207,35208,35209,35210,35211,35212,35213,35214,35215,35216,35217,35218,35219,35220,35221,35222,35223,35224,35225,35226,35227,35228,35229,35230,35231,35232,35233,25671,23591,36965,31377,35875,23002,21676,33280,33647,35201,32768,26928,22094,32822,29239,37326,20918,20063,39029,25494,19994,21494,26355,33099,22812,28082,19968,22777,21307,25558,38129,20381,20234,34915,39056,22839,36951,31227,20202,33008,30097,27778,23452,23016,24413,26885,34433,20506,24050,20057,30691,20197,33402,25233,26131,37009,23673,20159,24441,33222,36920,32900,30123,20134,35028,24847,27589,24518,20041,30410,28322,35811,35758,35850,35793,24322,32764,32716,32462,33589,33643,22240,27575,38899,38452,23035,21535,38134,28139,23493,39278,23609,24341,38544,35234,35235,35236,35237,35238,35239,35240,35241,35242,35243,35244,35245,35246,35247,35248,35249,35250,35251,35252,35253,35254,35255,35256,35257,35258,35259,35260,35261,35262,35263,35264,35267,35277,35283,35284,35285,35287,35288,35289,35291,35293,35295,35296,35297,35298,35300,35303,35304,35305,35306,35308,35309,35310,35312,35313,35314,35316,35317,35318,35319,35320,35321,35322,35323,35324,35325,35326,35327,35329,35330,35331,35332,35333,35334,35336,35337,35338,35339,35340,35341,35342,35343,35344,35345,35346,35347,35348,35349,35350,35351,35352,35353,35354,35355,35356,35357,21360,33521,27185,23156,40560,24212,32552,33721,33828,33829,33639,34631,36814,36194,30408,24433,39062,30828,26144,21727,25317,20323,33219,30152,24248,38605,36362,34553,21647,27891,28044,27704,24703,21191,29992,24189,20248,24736,24551,23588,30001,37038,38080,29369,27833,28216,37193,26377,21451,21491,20305,37321,35825,21448,24188,36802,28132,20110,30402,27014,34398,24858,33286,20313,20446,36926,40060,24841,28189,28180,38533,20104,23089,38632,19982,23679,31161,23431,35821,32701,29577,22495,33419,37057,21505,36935,21947,23786,24481,24840,27442,29425,32946,35465,35358,35359,35360,35361,35362,35363,35364,35365,35366,35367,35368,35369,35370,35371,35372,35373,35374,35375,35376,35377,35378,35379,35380,35381,35382,35383,35384,35385,35386,35387,35388,35389,35391,35392,35393,35394,35395,35396,35397,35398,35399,35401,35402,35403,35404,35405,35406,35407,35408,35409,35410,35411,35412,35413,35414,35415,35416,35417,35418,35419,35420,35421,35422,35423,35424,35425,35426,35427,35428,35429,35430,35431,35432,35433,35434,35435,35436,35437,35438,35439,35440,35441,35442,35443,35444,35445,35446,35447,35448,35450,35451,35452,35453,35454,35455,35456,28020,23507,35029,39044,35947,39533,40499,28170,20900,20803,22435,34945,21407,25588,36757,22253,21592,22278,29503,28304,32536,36828,33489,24895,24616,38498,26352,32422,36234,36291,38053,23731,31908,26376,24742,38405,32792,20113,37095,21248,38504,20801,36816,34164,37213,26197,38901,23381,21277,30776,26434,26685,21705,28798,23472,36733,20877,22312,21681,25874,26242,36190,36163,33039,33900,36973,31967,20991,34299,26531,26089,28577,34468,36481,22122,36896,30338,28790,29157,36131,25321,21017,27901,36156,24590,22686,24974,26366,36192,25166,21939,28195,26413,36711,35457,35458,35459,35460,35461,35462,35463,35464,35467,35468,35469,35470,35471,35472,35473,35474,35476,35477,35478,35479,35480,35481,35482,35483,35484,35485,35486,35487,35488,35489,35490,35491,35492,35493,35494,35495,35496,35497,35498,35499,35500,35501,35502,35503,35504,35505,35506,35507,35508,35509,35510,35511,35512,35513,35514,35515,35516,35517,35518,35519,35520,35521,35522,35523,35524,35525,35526,35527,35528,35529,35530,35531,35532,35533,35534,35535,35536,35537,35538,35539,35540,35541,35542,35543,35544,35545,35546,35547,35548,35549,35550,35551,35552,35553,35554,35555,38113,38392,30504,26629,27048,21643,20045,28856,35784,25688,25995,23429,31364,20538,23528,30651,27617,35449,31896,27838,30415,26025,36759,23853,23637,34360,26632,21344,25112,31449,28251,32509,27167,31456,24432,28467,24352,25484,28072,26454,19976,24080,36134,20183,32960,30260,38556,25307,26157,25214,27836,36213,29031,32617,20806,32903,21484,36974,25240,21746,34544,36761,32773,38167,34071,36825,27993,29645,26015,30495,29956,30759,33275,36126,38024,20390,26517,30137,35786,38663,25391,38215,38453,33976,25379,30529,24449,29424,20105,24596,25972,25327,27491,25919,35556,35557,35558,35559,35560,35561,35562,35563,35564,35565,35566,35567,35568,35569,35570,35571,35572,35573,35574,35575,35576,35577,35578,35579,35580,35581,35582,35583,35584,35585,35586,35587,35588,35589,35590,35592,35593,35594,35595,35596,35597,35598,35599,35600,35601,35602,35603,35604,35605,35606,35607,35608,35609,35610,35611,35612,35613,35614,35615,35616,35617,35618,35619,35620,35621,35623,35624,35625,35626,35627,35628,35629,35630,35631,35632,35633,35634,35635,35636,35637,35638,35639,35640,35641,35642,35643,35644,35645,35646,35647,35648,35649,35650,35651,35652,35653,24103,30151,37073,35777,33437,26525,25903,21553,34584,30693,32930,33026,27713,20043,32455,32844,30452,26893,27542,25191,20540,20356,22336,25351,27490,36286,21482,26088,32440,24535,25370,25527,33267,33268,32622,24092,23769,21046,26234,31209,31258,36136,28825,30164,28382,27835,31378,20013,30405,24544,38047,34935,32456,31181,32959,37325,20210,20247,33311,21608,24030,27954,35788,31909,36724,32920,24090,21650,30385,23449,26172,39588,29664,26666,34523,26417,29482,35832,35803,36880,31481,28891,29038,25284,30633,22065,20027,33879,26609,21161,34496,36142,38136,31569,35654,35655,35656,35657,35658,35659,35660,35661,35662,35663,35664,35665,35666,35667,35668,35669,35670,35671,35672,35673,35674,35675,35676,35677,35678,35679,35680,35681,35682,35683,35684,35685,35687,35688,35689,35690,35691,35693,35694,35695,35696,35697,35698,35699,35700,35701,35702,35703,35704,35705,35706,35707,35708,35709,35710,35711,35712,35713,35714,35715,35716,35717,35718,35719,35720,35721,35722,35723,35724,35725,35726,35727,35728,35729,35730,35731,35732,35733,35734,35735,35736,35737,35738,35739,35740,35741,35742,35743,35756,35761,35771,35783,35792,35818,35849,35870,20303,27880,31069,39547,25235,29226,25341,19987,30742,36716,25776,36186,31686,26729,24196,35013,22918,25758,22766,29366,26894,38181,36861,36184,22368,32512,35846,20934,25417,25305,21331,26700,29730,33537,37196,21828,30528,28796,27978,20857,21672,36164,23039,28363,28100,23388,32043,20180,31869,28371,23376,33258,28173,23383,39683,26837,36394,23447,32508,24635,32437,37049,36208,22863,25549,31199,36275,21330,26063,31062,35781,38459,32452,38075,32386,22068,37257,26368,32618,23562,36981,26152,24038,20304,26590,20570,20316,22352,24231,59408,59409,59410,59411,59412,35896,35897,35898,35899,35900,35901,35902,35903,35904,35906,35907,35908,35909,35912,35914,35915,35917,35918,35919,35920,35921,35922,35923,35924,35926,35927,35928,35929,35931,35932,35933,35934,35935,35936,35939,35940,35941,35942,35943,35944,35945,35948,35949,35950,35951,35952,35953,35954,35956,35957,35958,35959,35963,35964,35965,35966,35967,35968,35969,35971,35972,35974,35975,35976,35979,35981,35982,35983,35984,35985,35986,35987,35989,35990,35991,35993,35994,35995,35996,35997,35998,35999,36000,36001,36002,36003,36004,36005,36006,36007,36008,36009,36010,36011,36012,36013,20109,19980,20800,19984,24319,21317,19989,20120,19998,39730,23404,22121,20008,31162,20031,21269,20039,22829,29243,21358,27664,22239,32996,39319,27603,30590,40727,20022,20127,40720,20060,20073,20115,33416,23387,21868,22031,20164,21389,21405,21411,21413,21422,38757,36189,21274,21493,21286,21294,21310,36188,21350,21347,20994,21000,21006,21037,21043,21055,21056,21068,21086,21089,21084,33967,21117,21122,21121,21136,21139,20866,32596,20155,20163,20169,20162,20200,20193,20203,20190,20251,20211,20258,20324,20213,20261,20263,20233,20267,20318,20327,25912,20314,20317,36014,36015,36016,36017,36018,36019,36020,36021,36022,36023,36024,36025,36026,36027,36028,36029,36030,36031,36032,36033,36034,36035,36036,36037,36038,36039,36040,36041,36042,36043,36044,36045,36046,36047,36048,36049,36050,36051,36052,36053,36054,36055,36056,36057,36058,36059,36060,36061,36062,36063,36064,36065,36066,36067,36068,36069,36070,36071,36072,36073,36074,36075,36076,36077,36078,36079,36080,36081,36082,36083,36084,36085,36086,36087,36088,36089,36090,36091,36092,36093,36094,36095,36096,36097,36098,36099,36100,36101,36102,36103,36104,36105,36106,36107,36108,36109,20319,20311,20274,20285,20342,20340,20369,20361,20355,20367,20350,20347,20394,20348,20396,20372,20454,20456,20458,20421,20442,20451,20444,20433,20447,20472,20521,20556,20467,20524,20495,20526,20525,20478,20508,20492,20517,20520,20606,20547,20565,20552,20558,20588,20603,20645,20647,20649,20666,20694,20742,20717,20716,20710,20718,20743,20747,20189,27709,20312,20325,20430,40864,27718,31860,20846,24061,40649,39320,20865,22804,21241,21261,35335,21264,20971,22809,20821,20128,20822,20147,34926,34980,20149,33044,35026,31104,23348,34819,32696,20907,20913,20925,20924,36110,36111,36112,36113,36114,36115,36116,36117,36118,36119,36120,36121,36122,36123,36124,36128,36177,36178,36183,36191,36197,36200,36201,36202,36204,36206,36207,36209,36210,36216,36217,36218,36219,36220,36221,36222,36223,36224,36226,36227,36230,36231,36232,36233,36236,36237,36238,36239,36240,36242,36243,36245,36246,36247,36248,36249,36250,36251,36252,36253,36254,36256,36257,36258,36260,36261,36262,36263,36264,36265,36266,36267,36268,36269,36270,36271,36272,36274,36278,36279,36281,36283,36285,36288,36289,36290,36293,36295,36296,36297,36298,36301,36304,36306,36307,36308,20935,20886,20898,20901,35744,35750,35751,35754,35764,35765,35767,35778,35779,35787,35791,35790,35794,35795,35796,35798,35800,35801,35804,35807,35808,35812,35816,35817,35822,35824,35827,35830,35833,35836,35839,35840,35842,35844,35847,35852,35855,35857,35858,35860,35861,35862,35865,35867,35864,35869,35871,35872,35873,35877,35879,35882,35883,35886,35887,35890,35891,35893,35894,21353,21370,38429,38434,38433,38449,38442,38461,38460,38466,38473,38484,38495,38503,38508,38514,38516,38536,38541,38551,38576,37015,37019,37021,37017,37036,37025,37044,37043,37046,37050,36309,36312,36313,36316,36320,36321,36322,36325,36326,36327,36329,36333,36334,36336,36337,36338,36340,36342,36348,36350,36351,36352,36353,36354,36355,36356,36358,36359,36360,36363,36365,36366,36368,36369,36370,36371,36373,36374,36375,36376,36377,36378,36379,36380,36384,36385,36388,36389,36390,36391,36392,36395,36397,36400,36402,36403,36404,36406,36407,36408,36411,36412,36414,36415,36419,36421,36422,36428,36429,36430,36431,36432,36435,36436,36437,36438,36439,36440,36442,36443,36444,36445,36446,36447,36448,36449,36450,36451,36452,36453,36455,36456,36458,36459,36462,36465,37048,37040,37071,37061,37054,37072,37060,37063,37075,37094,37090,37084,37079,37083,37099,37103,37118,37124,37154,37150,37155,37169,37167,37177,37187,37190,21005,22850,21154,21164,21165,21182,21759,21200,21206,21232,21471,29166,30669,24308,20981,20988,39727,21430,24321,30042,24047,22348,22441,22433,22654,22716,22725,22737,22313,22316,22314,22323,22329,22318,22319,22364,22331,22338,22377,22405,22379,22406,22396,22395,22376,22381,22390,22387,22445,22436,22412,22450,22479,22439,22452,22419,22432,22485,22488,22490,22489,22482,22456,22516,22511,22520,22500,22493,36467,36469,36471,36472,36473,36474,36475,36477,36478,36480,36482,36483,36484,36486,36488,36489,36490,36491,36492,36493,36494,36497,36498,36499,36501,36502,36503,36504,36505,36506,36507,36509,36511,36512,36513,36514,36515,36516,36517,36518,36519,36520,36521,36522,36525,36526,36528,36529,36531,36532,36533,36534,36535,36536,36537,36539,36540,36541,36542,36543,36544,36545,36546,36547,36548,36549,36550,36551,36552,36553,36554,36555,36556,36557,36559,36560,36561,36562,36563,36564,36565,36566,36567,36568,36569,36570,36571,36572,36573,36574,36575,36576,36577,36578,36579,36580,22539,22541,22525,22509,22528,22558,22553,22596,22560,22629,22636,22657,22665,22682,22656,39336,40729,25087,33401,33405,33407,33423,33418,33448,33412,33422,33425,33431,33433,33451,33464,33470,33456,33480,33482,33507,33432,33463,33454,33483,33484,33473,33449,33460,33441,33450,33439,33476,33486,33444,33505,33545,33527,33508,33551,33543,33500,33524,33490,33496,33548,33531,33491,33553,33562,33542,33556,33557,33504,33493,33564,33617,33627,33628,33544,33682,33596,33588,33585,33691,33630,33583,33615,33607,33603,33631,33600,33559,33632,33581,33594,33587,33638,33637,36581,36582,36583,36584,36585,36586,36587,36588,36589,36590,36591,36592,36593,36594,36595,36596,36597,36598,36599,36600,36601,36602,36603,36604,36605,36606,36607,36608,36609,36610,36611,36612,36613,36614,36615,36616,36617,36618,36619,36620,36621,36622,36623,36624,36625,36626,36627,36628,36629,36630,36631,36632,36633,36634,36635,36636,36637,36638,36639,36640,36641,36642,36643,36644,36645,36646,36647,36648,36649,36650,36651,36652,36653,36654,36655,36656,36657,36658,36659,36660,36661,36662,36663,36664,36665,36666,36667,36668,36669,36670,36671,36672,36673,36674,36675,36676,33640,33563,33641,33644,33642,33645,33646,33712,33656,33715,33716,33696,33706,33683,33692,33669,33660,33718,33705,33661,33720,33659,33688,33694,33704,33722,33724,33729,33793,33765,33752,22535,33816,33803,33757,33789,33750,33820,33848,33809,33798,33748,33759,33807,33795,33784,33785,33770,33733,33728,33830,33776,33761,33884,33873,33882,33881,33907,33927,33928,33914,33929,33912,33852,33862,33897,33910,33932,33934,33841,33901,33985,33997,34000,34022,33981,34003,33994,33983,33978,34016,33953,33977,33972,33943,34021,34019,34060,29965,34104,34032,34105,34079,34106,36677,36678,36679,36680,36681,36682,36683,36684,36685,36686,36687,36688,36689,36690,36691,36692,36693,36694,36695,36696,36697,36698,36699,36700,36701,36702,36703,36704,36705,36706,36707,36708,36709,36714,36736,36748,36754,36765,36768,36769,36770,36772,36773,36774,36775,36778,36780,36781,36782,36783,36786,36787,36788,36789,36791,36792,36794,36795,36796,36799,36800,36803,36806,36809,36810,36811,36812,36813,36815,36818,36822,36823,36826,36832,36833,36835,36839,36844,36847,36849,36850,36852,36853,36854,36858,36859,36860,36862,36863,36871,36872,36876,36878,36883,36885,36888,34134,34107,34047,34044,34137,34120,34152,34148,34142,34170,30626,34115,34162,34171,34212,34216,34183,34191,34169,34222,34204,34181,34233,34231,34224,34259,34241,34268,34303,34343,34309,34345,34326,34364,24318,24328,22844,22849,32823,22869,22874,22872,21263,23586,23589,23596,23604,25164,25194,25247,25275,25290,25306,25303,25326,25378,25334,25401,25419,25411,25517,25590,25457,25466,25486,25524,25453,25516,25482,25449,25518,25532,25586,25592,25568,25599,25540,25566,25550,25682,25542,25534,25669,25665,25611,25627,25632,25612,25638,25633,25694,25732,25709,25750,36889,36892,36899,36900,36901,36903,36904,36905,36906,36907,36908,36912,36913,36914,36915,36916,36919,36921,36922,36925,36927,36928,36931,36933,36934,36936,36937,36938,36939,36940,36942,36948,36949,36950,36953,36954,36956,36957,36958,36959,36960,36961,36964,36966,36967,36969,36970,36971,36972,36975,36976,36977,36978,36979,36982,36983,36984,36985,36986,36987,36988,36990,36993,36996,36997,36998,36999,37001,37002,37004,37005,37006,37007,37008,37010,37012,37014,37016,37018,37020,37022,37023,37024,37028,37029,37031,37032,37033,37035,37037,37042,37047,37052,37053,37055,37056,25722,25783,25784,25753,25786,25792,25808,25815,25828,25826,25865,25893,25902,24331,24530,29977,24337,21343,21489,21501,21481,21480,21499,21522,21526,21510,21579,21586,21587,21588,21590,21571,21537,21591,21593,21539,21554,21634,21652,21623,21617,21604,21658,21659,21636,21622,21606,21661,21712,21677,21698,21684,21714,21671,21670,21715,21716,21618,21667,21717,21691,21695,21708,21721,21722,21724,21673,21674,21668,21725,21711,21726,21787,21735,21792,21757,21780,21747,21794,21795,21775,21777,21799,21802,21863,21903,21941,21833,21869,21825,21845,21823,21840,21820,37058,37059,37062,37064,37065,37067,37068,37069,37074,37076,37077,37078,37080,37081,37082,37086,37087,37088,37091,37092,37093,37097,37098,37100,37102,37104,37105,37106,37107,37109,37110,37111,37113,37114,37115,37116,37119,37120,37121,37123,37125,37126,37127,37128,37129,37130,37131,37132,37133,37134,37135,37136,37137,37138,37139,37140,37141,37142,37143,37144,37146,37147,37148,37149,37151,37152,37153,37156,37157,37158,37159,37160,37161,37162,37163,37164,37165,37166,37168,37170,37171,37172,37173,37174,37175,37176,37178,37179,37180,37181,37182,37183,37184,37185,37186,37188,21815,21846,21877,21878,21879,21811,21808,21852,21899,21970,21891,21937,21945,21896,21889,21919,21886,21974,21905,21883,21983,21949,21950,21908,21913,21994,22007,21961,22047,21969,21995,21996,21972,21990,21981,21956,21999,21989,22002,22003,21964,21965,21992,22005,21988,36756,22046,22024,22028,22017,22052,22051,22014,22016,22055,22061,22104,22073,22103,22060,22093,22114,22105,22108,22092,22100,22150,22116,22129,22123,22139,22140,22149,22163,22191,22228,22231,22237,22241,22261,22251,22265,22271,22276,22282,22281,22300,24079,24089,24084,24081,24113,24123,24124,37189,37191,37192,37201,37203,37204,37205,37206,37208,37209,37211,37212,37215,37216,37222,37223,37224,37227,37229,37235,37242,37243,37244,37248,37249,37250,37251,37252,37254,37256,37258,37262,37263,37267,37268,37269,37270,37271,37272,37273,37276,37277,37278,37279,37280,37281,37284,37285,37286,37287,37288,37289,37291,37292,37296,37297,37298,37299,37302,37303,37304,37305,37307,37308,37309,37310,37311,37312,37313,37314,37315,37316,37317,37318,37320,37323,37328,37330,37331,37332,37333,37334,37335,37336,37337,37338,37339,37341,37342,37343,37344,37345,37346,37347,37348,37349,24119,24132,24148,24155,24158,24161,23692,23674,23693,23696,23702,23688,23704,23705,23697,23706,23708,23733,23714,23741,23724,23723,23729,23715,23745,23735,23748,23762,23780,23755,23781,23810,23811,23847,23846,23854,23844,23838,23814,23835,23896,23870,23860,23869,23916,23899,23919,23901,23915,23883,23882,23913,23924,23938,23961,23965,35955,23991,24005,24435,24439,24450,24455,24457,24460,24469,24473,24476,24488,24493,24501,24508,34914,24417,29357,29360,29364,29367,29368,29379,29377,29390,29389,29394,29416,29423,29417,29426,29428,29431,29441,29427,29443,29434,37350,37351,37352,37353,37354,37355,37356,37357,37358,37359,37360,37361,37362,37363,37364,37365,37366,37367,37368,37369,37370,37371,37372,37373,37374,37375,37376,37377,37378,37379,37380,37381,37382,37383,37384,37385,37386,37387,37388,37389,37390,37391,37392,37393,37394,37395,37396,37397,37398,37399,37400,37401,37402,37403,37404,37405,37406,37407,37408,37409,37410,37411,37412,37413,37414,37415,37416,37417,37418,37419,37420,37421,37422,37423,37424,37425,37426,37427,37428,37429,37430,37431,37432,37433,37434,37435,37436,37437,37438,37439,37440,37441,37442,37443,37444,37445,29435,29463,29459,29473,29450,29470,29469,29461,29474,29497,29477,29484,29496,29489,29520,29517,29527,29536,29548,29551,29566,33307,22821,39143,22820,22786,39267,39271,39272,39273,39274,39275,39276,39284,39287,39293,39296,39300,39303,39306,39309,39312,39313,39315,39316,39317,24192,24209,24203,24214,24229,24224,24249,24245,24254,24243,36179,24274,24273,24283,24296,24298,33210,24516,24521,24534,24527,24579,24558,24580,24545,24548,24574,24581,24582,24554,24557,24568,24601,24629,24614,24603,24591,24589,24617,24619,24586,24639,24609,24696,24697,24699,24698,24642,37446,37447,37448,37449,37450,37451,37452,37453,37454,37455,37456,37457,37458,37459,37460,37461,37462,37463,37464,37465,37466,37467,37468,37469,37470,37471,37472,37473,37474,37475,37476,37477,37478,37479,37480,37481,37482,37483,37484,37485,37486,37487,37488,37489,37490,37491,37493,37494,37495,37496,37497,37498,37499,37500,37501,37502,37503,37504,37505,37506,37507,37508,37509,37510,37511,37512,37513,37514,37515,37516,37517,37519,37520,37521,37522,37523,37524,37525,37526,37527,37528,37529,37530,37531,37532,37533,37534,37535,37536,37537,37538,37539,37540,37541,37542,37543,24682,24701,24726,24730,24749,24733,24707,24722,24716,24731,24812,24763,24753,24797,24792,24774,24794,24756,24864,24870,24853,24867,24820,24832,24846,24875,24906,24949,25004,24980,24999,25015,25044,25077,24541,38579,38377,38379,38385,38387,38389,38390,38396,38398,38403,38404,38406,38408,38410,38411,38412,38413,38415,38418,38421,38422,38423,38425,38426,20012,29247,25109,27701,27732,27740,27722,27811,27781,27792,27796,27788,27752,27753,27764,27766,27782,27817,27856,27860,27821,27895,27896,27889,27863,27826,27872,27862,27898,27883,27886,27825,27859,27887,27902,37544,37545,37546,37547,37548,37549,37551,37552,37553,37554,37555,37556,37557,37558,37559,37560,37561,37562,37563,37564,37565,37566,37567,37568,37569,37570,37571,37572,37573,37574,37575,37577,37578,37579,37580,37581,37582,37583,37584,37585,37586,37587,37588,37589,37590,37591,37592,37593,37594,37595,37596,37597,37598,37599,37600,37601,37602,37603,37604,37605,37606,37607,37608,37609,37610,37611,37612,37613,37614,37615,37616,37617,37618,37619,37620,37621,37622,37623,37624,37625,37626,37627,37628,37629,37630,37631,37632,37633,37634,37635,37636,37637,37638,37639,37640,37641,27961,27943,27916,27971,27976,27911,27908,27929,27918,27947,27981,27950,27957,27930,27983,27986,27988,27955,28049,28015,28062,28064,27998,28051,28052,27996,28000,28028,28003,28186,28103,28101,28126,28174,28095,28128,28177,28134,28125,28121,28182,28075,28172,28078,28203,28270,28238,28267,28338,28255,28294,28243,28244,28210,28197,28228,28383,28337,28312,28384,28461,28386,28325,28327,28349,28347,28343,28375,28340,28367,28303,28354,28319,28514,28486,28487,28452,28437,28409,28463,28470,28491,28532,28458,28425,28457,28553,28557,28556,28536,28530,28540,28538,28625,37642,37643,37644,37645,37646,37647,37648,37649,37650,37651,37652,37653,37654,37655,37656,37657,37658,37659,37660,37661,37662,37663,37664,37665,37666,37667,37668,37669,37670,37671,37672,37673,37674,37675,37676,37677,37678,37679,37680,37681,37682,37683,37684,37685,37686,37687,37688,37689,37690,37691,37692,37693,37695,37696,37697,37698,37699,37700,37701,37702,37703,37704,37705,37706,37707,37708,37709,37710,37711,37712,37713,37714,37715,37716,37717,37718,37719,37720,37721,37722,37723,37724,37725,37726,37727,37728,37729,37730,37731,37732,37733,37734,37735,37736,37737,37739,28617,28583,28601,28598,28610,28641,28654,28638,28640,28655,28698,28707,28699,28729,28725,28751,28766,23424,23428,23445,23443,23461,23480,29999,39582,25652,23524,23534,35120,23536,36423,35591,36790,36819,36821,36837,36846,36836,36841,36838,36851,36840,36869,36868,36875,36902,36881,36877,36886,36897,36917,36918,36909,36911,36932,36945,36946,36944,36968,36952,36962,36955,26297,36980,36989,36994,37000,36995,37003,24400,24407,24406,24408,23611,21675,23632,23641,23409,23651,23654,32700,24362,24361,24365,33396,24380,39739,23662,22913,22915,22925,22953,22954,22947,37740,37741,37742,37743,37744,37745,37746,37747,37748,37749,37750,37751,37752,37753,37754,37755,37756,37757,37758,37759,37760,37761,37762,37763,37764,37765,37766,37767,37768,37769,37770,37771,37772,37773,37774,37776,37777,37778,37779,37780,37781,37782,37783,37784,37785,37786,37787,37788,37789,37790,37791,37792,37793,37794,37795,37796,37797,37798,37799,37800,37801,37802,37803,37804,37805,37806,37807,37808,37809,37810,37811,37812,37813,37814,37815,37816,37817,37818,37819,37820,37821,37822,37823,37824,37825,37826,37827,37828,37829,37830,37831,37832,37833,37835,37836,37837,22935,22986,22955,22942,22948,22994,22962,22959,22999,22974,23045,23046,23005,23048,23011,23000,23033,23052,23049,23090,23092,23057,23075,23059,23104,23143,23114,23125,23100,23138,23157,33004,23210,23195,23159,23162,23230,23275,23218,23250,23252,23224,23264,23267,23281,23254,23270,23256,23260,23305,23319,23318,23346,23351,23360,23573,23580,23386,23397,23411,23377,23379,23394,39541,39543,39544,39546,39551,39549,39552,39553,39557,39560,39562,39568,39570,39571,39574,39576,39579,39580,39581,39583,39584,39586,39587,39589,39591,32415,32417,32419,32421,32424,32425,37838,37839,37840,37841,37842,37843,37844,37845,37847,37848,37849,37850,37851,37852,37853,37854,37855,37856,37857,37858,37859,37860,37861,37862,37863,37864,37865,37866,37867,37868,37869,37870,37871,37872,37873,37874,37875,37876,37877,37878,37879,37880,37881,37882,37883,37884,37885,37886,37887,37888,37889,37890,37891,37892,37893,37894,37895,37896,37897,37898,37899,37900,37901,37902,37903,37904,37905,37906,37907,37908,37909,37910,37911,37912,37913,37914,37915,37916,37917,37918,37919,37920,37921,37922,37923,37924,37925,37926,37927,37928,37929,37930,37931,37932,37933,37934,32429,32432,32446,32448,32449,32450,32457,32459,32460,32464,32468,32471,32475,32480,32481,32488,32491,32494,32495,32497,32498,32525,32502,32506,32507,32510,32513,32514,32515,32519,32520,32523,32524,32527,32529,32530,32535,32537,32540,32539,32543,32545,32546,32547,32548,32549,32550,32551,32554,32555,32556,32557,32559,32560,32561,32562,32563,32565,24186,30079,24027,30014,37013,29582,29585,29614,29602,29599,29647,29634,29649,29623,29619,29632,29641,29640,29669,29657,39036,29706,29673,29671,29662,29626,29682,29711,29738,29787,29734,29733,29736,29744,29742,29740,37935,37936,37937,37938,37939,37940,37941,37942,37943,37944,37945,37946,37947,37948,37949,37951,37952,37953,37954,37955,37956,37957,37958,37959,37960,37961,37962,37963,37964,37965,37966,37967,37968,37969,37970,37971,37972,37973,37974,37975,37976,37977,37978,37979,37980,37981,37982,37983,37984,37985,37986,37987,37988,37989,37990,37991,37992,37993,37994,37996,37997,37998,37999,38000,38001,38002,38003,38004,38005,38006,38007,38008,38009,38010,38011,38012,38013,38014,38015,38016,38017,38018,38019,38020,38033,38038,38040,38087,38095,38099,38100,38106,38118,38139,38172,38176,29723,29722,29761,29788,29783,29781,29785,29815,29805,29822,29852,29838,29824,29825,29831,29835,29854,29864,29865,29840,29863,29906,29882,38890,38891,38892,26444,26451,26462,26440,26473,26533,26503,26474,26483,26520,26535,26485,26536,26526,26541,26507,26487,26492,26608,26633,26584,26634,26601,26544,26636,26585,26549,26586,26547,26589,26624,26563,26552,26594,26638,26561,26621,26674,26675,26720,26721,26702,26722,26692,26724,26755,26653,26709,26726,26689,26727,26688,26686,26698,26697,26665,26805,26767,26740,26743,26771,26731,26818,26990,26876,26911,26912,26873,38183,38195,38205,38211,38216,38219,38229,38234,38240,38254,38260,38261,38263,38264,38265,38266,38267,38268,38269,38270,38272,38273,38274,38275,38276,38277,38278,38279,38280,38281,38282,38283,38284,38285,38286,38287,38288,38289,38290,38291,38292,38293,38294,38295,38296,38297,38298,38299,38300,38301,38302,38303,38304,38305,38306,38307,38308,38309,38310,38311,38312,38313,38314,38315,38316,38317,38318,38319,38320,38321,38322,38323,38324,38325,38326,38327,38328,38329,38330,38331,38332,38333,38334,38335,38336,38337,38338,38339,38340,38341,38342,38343,38344,38345,38346,38347,26916,26864,26891,26881,26967,26851,26896,26993,26937,26976,26946,26973,27012,26987,27008,27032,27000,26932,27084,27015,27016,27086,27017,26982,26979,27001,27035,27047,27067,27051,27053,27092,27057,27073,27082,27103,27029,27104,27021,27135,27183,27117,27159,27160,27237,27122,27204,27198,27296,27216,27227,27189,27278,27257,27197,27176,27224,27260,27281,27280,27305,27287,27307,29495,29522,27521,27522,27527,27524,27538,27539,27533,27546,27547,27553,27562,36715,36717,36721,36722,36723,36725,36726,36728,36727,36729,36730,36732,36734,36737,36738,36740,36743,36747,38348,38349,38350,38351,38352,38353,38354,38355,38356,38357,38358,38359,38360,38361,38362,38363,38364,38365,38366,38367,38368,38369,38370,38371,38372,38373,38374,38375,38380,38399,38407,38419,38424,38427,38430,38432,38435,38436,38437,38438,38439,38440,38441,38443,38444,38445,38447,38448,38455,38456,38457,38458,38462,38465,38467,38474,38478,38479,38481,38482,38483,38486,38487,38488,38489,38490,38492,38493,38494,38496,38499,38501,38502,38507,38509,38510,38511,38512,38513,38515,38520,38521,38522,38523,38524,38525,38526,38527,38528,38529,38530,38531,38532,38535,38537,38538,36749,36750,36751,36760,36762,36558,25099,25111,25115,25119,25122,25121,25125,25124,25132,33255,29935,29940,29951,29967,29969,29971,25908,26094,26095,26096,26122,26137,26482,26115,26133,26112,28805,26359,26141,26164,26161,26166,26165,32774,26207,26196,26177,26191,26198,26209,26199,26231,26244,26252,26279,26269,26302,26331,26332,26342,26345,36146,36147,36150,36155,36157,36160,36165,36166,36168,36169,36167,36173,36181,36185,35271,35274,35275,35276,35278,35279,35280,35281,29294,29343,29277,29286,29295,29310,29311,29316,29323,29325,29327,29330,25352,25394,25520,38540,38542,38545,38546,38547,38549,38550,38554,38555,38557,38558,38559,38560,38561,38562,38563,38564,38565,38566,38568,38569,38570,38571,38572,38573,38574,38575,38577,38578,38580,38581,38583,38584,38586,38587,38591,38594,38595,38600,38602,38603,38608,38609,38611,38612,38614,38615,38616,38617,38618,38619,38620,38621,38622,38623,38625,38626,38627,38628,38629,38630,38631,38635,38636,38637,38638,38640,38641,38642,38644,38645,38648,38650,38651,38652,38653,38655,38658,38659,38661,38666,38667,38668,38672,38673,38674,38676,38677,38679,38680,38681,38682,38683,38685,38687,38688,25663,25816,32772,27626,27635,27645,27637,27641,27653,27655,27654,27661,27669,27672,27673,27674,27681,27689,27684,27690,27698,25909,25941,25963,29261,29266,29270,29232,34402,21014,32927,32924,32915,32956,26378,32957,32945,32939,32941,32948,32951,32999,33000,33001,33002,32987,32962,32964,32985,32973,32983,26384,32989,33003,33009,33012,33005,33037,33038,33010,33020,26389,33042,35930,33078,33054,33068,33048,33074,33096,33100,33107,33140,33113,33114,33137,33120,33129,33148,33149,33133,33127,22605,23221,33160,33154,33169,28373,33187,33194,33228,26406,33226,33211,38689,38690,38691,38692,38693,38694,38695,38696,38697,38699,38700,38702,38703,38705,38707,38708,38709,38710,38711,38714,38715,38716,38717,38719,38720,38721,38722,38723,38724,38725,38726,38727,38728,38729,38730,38731,38732,38733,38734,38735,38736,38737,38740,38741,38743,38744,38746,38748,38749,38751,38755,38756,38758,38759,38760,38762,38763,38764,38765,38766,38767,38768,38769,38770,38773,38775,38776,38777,38778,38779,38781,38782,38783,38784,38785,38786,38787,38788,38790,38791,38792,38793,38794,38796,38798,38799,38800,38803,38805,38806,38807,38809,38810,38811,38812,38813,33217,33190,27428,27447,27449,27459,27462,27481,39121,39122,39123,39125,39129,39130,27571,24384,27586,35315,26000,40785,26003,26044,26054,26052,26051,26060,26062,26066,26070,28800,28828,28822,28829,28859,28864,28855,28843,28849,28904,28874,28944,28947,28950,28975,28977,29043,29020,29032,28997,29042,29002,29048,29050,29080,29107,29109,29096,29088,29152,29140,29159,29177,29213,29224,28780,28952,29030,29113,25150,25149,25155,25160,25161,31035,31040,31046,31049,31067,31068,31059,31066,31074,31063,31072,31087,31079,31098,31109,31114,31130,31143,31155,24529,24528,38814,38815,38817,38818,38820,38821,38822,38823,38824,38825,38826,38828,38830,38832,38833,38835,38837,38838,38839,38840,38841,38842,38843,38844,38845,38846,38847,38848,38849,38850,38851,38852,38853,38854,38855,38856,38857,38858,38859,38860,38861,38862,38863,38864,38865,38866,38867,38868,38869,38870,38871,38872,38873,38874,38875,38876,38877,38878,38879,38880,38881,38882,38883,38884,38885,38888,38894,38895,38896,38897,38898,38900,38903,38904,38905,38906,38907,38908,38909,38910,38911,38912,38913,38914,38915,38916,38917,38918,38919,38920,38921,38922,38923,38924,38925,38926,24636,24669,24666,24679,24641,24665,24675,24747,24838,24845,24925,25001,24989,25035,25041,25094,32896,32895,27795,27894,28156,30710,30712,30720,30729,30743,30744,30737,26027,30765,30748,30749,30777,30778,30779,30751,30780,30757,30764,30755,30761,30798,30829,30806,30807,30758,30800,30791,30796,30826,30875,30867,30874,30855,30876,30881,30883,30898,30905,30885,30932,30937,30921,30956,30962,30981,30964,30995,31012,31006,31028,40859,40697,40699,40700,30449,30468,30477,30457,30471,30472,30490,30498,30489,30509,30502,30517,30520,30544,30545,30535,30531,30554,30568,38927,38928,38929,38930,38931,38932,38933,38934,38935,38936,38937,38938,38939,38940,38941,38942,38943,38944,38945,38946,38947,38948,38949,38950,38951,38952,38953,38954,38955,38956,38957,38958,38959,38960,38961,38962,38963,38964,38965,38966,38967,38968,38969,38970,38971,38972,38973,38974,38975,38976,38977,38978,38979,38980,38981,38982,38983,38984,38985,38986,38987,38988,38989,38990,38991,38992,38993,38994,38995,38996,38997,38998,38999,39000,39001,39002,39003,39004,39005,39006,39007,39008,39009,39010,39011,39012,39013,39014,39015,39016,39017,39018,39019,39020,39021,39022,30562,30565,30591,30605,30589,30592,30604,30609,30623,30624,30640,30645,30653,30010,30016,30030,30027,30024,30043,30066,30073,30083,32600,32609,32607,35400,32616,32628,32625,32633,32641,32638,30413,30437,34866,38021,38022,38023,38027,38026,38028,38029,38031,38032,38036,38039,38037,38042,38043,38044,38051,38052,38059,38058,38061,38060,38063,38064,38066,38068,38070,38071,38072,38073,38074,38076,38077,38079,38084,38088,38089,38090,38091,38092,38093,38094,38096,38097,38098,38101,38102,38103,38105,38104,38107,38110,38111,38112,38114,38116,38117,38119,38120,38122,39023,39024,39025,39026,39027,39028,39051,39054,39058,39061,39065,39075,39080,39081,39082,39083,39084,39085,39086,39087,39088,39089,39090,39091,39092,39093,39094,39095,39096,39097,39098,39099,39100,39101,39102,39103,39104,39105,39106,39107,39108,39109,39110,39111,39112,39113,39114,39115,39116,39117,39119,39120,39124,39126,39127,39131,39132,39133,39136,39137,39138,39139,39140,39141,39142,39145,39146,39147,39148,39149,39150,39151,39152,39153,39154,39155,39156,39157,39158,39159,39160,39161,39162,39163,39164,39165,39166,39167,39168,39169,39170,39171,39172,39173,39174,39175,38121,38123,38126,38127,38131,38132,38133,38135,38137,38140,38141,38143,38147,38146,38150,38151,38153,38154,38157,38158,38159,38162,38163,38164,38165,38166,38168,38171,38173,38174,38175,38178,38186,38187,38185,38188,38193,38194,38196,38198,38199,38200,38204,38206,38207,38210,38197,38212,38213,38214,38217,38220,38222,38223,38226,38227,38228,38230,38231,38232,38233,38235,38238,38239,38237,38241,38242,38244,38245,38246,38247,38248,38249,38250,38251,38252,38255,38257,38258,38259,38202,30695,30700,38601,31189,31213,31203,31211,31238,23879,31235,31234,31262,31252,39176,39177,39178,39179,39180,39182,39183,39185,39186,39187,39188,39189,39190,39191,39192,39193,39194,39195,39196,39197,39198,39199,39200,39201,39202,39203,39204,39205,39206,39207,39208,39209,39210,39211,39212,39213,39215,39216,39217,39218,39219,39220,39221,39222,39223,39224,39225,39226,39227,39228,39229,39230,39231,39232,39233,39234,39235,39236,39237,39238,39239,39240,39241,39242,39243,39244,39245,39246,39247,39248,39249,39250,39251,39254,39255,39256,39257,39258,39259,39260,39261,39262,39263,39264,39265,39266,39268,39270,39283,39288,39289,39291,39294,39298,39299,39305,31289,31287,31313,40655,39333,31344,30344,30350,30355,30361,30372,29918,29920,29996,40480,40482,40488,40489,40490,40491,40492,40498,40497,40502,40504,40503,40505,40506,40510,40513,40514,40516,40518,40519,40520,40521,40523,40524,40526,40529,40533,40535,40538,40539,40540,40542,40547,40550,40551,40552,40553,40554,40555,40556,40561,40557,40563,30098,30100,30102,30112,30109,30124,30115,30131,30132,30136,30148,30129,30128,30147,30146,30166,30157,30179,30184,30182,30180,30187,30183,30211,30193,30204,30207,30224,30208,30213,30220,30231,30218,30245,30232,30229,30233,39308,39310,39322,39323,39324,39325,39326,39327,39328,39329,39330,39331,39332,39334,39335,39337,39338,39339,39340,39341,39342,39343,39344,39345,39346,39347,39348,39349,39350,39351,39352,39353,39354,39355,39356,39357,39358,39359,39360,39361,39362,39363,39364,39365,39366,39367,39368,39369,39370,39371,39372,39373,39374,39375,39376,39377,39378,39379,39380,39381,39382,39383,39384,39385,39386,39387,39388,39389,39390,39391,39392,39393,39394,39395,39396,39397,39398,39399,39400,39401,39402,39403,39404,39405,39406,39407,39408,39409,39410,39411,39412,39413,39414,39415,39416,39417,30235,30268,30242,30240,30272,30253,30256,30271,30261,30275,30270,30259,30285,30302,30292,30300,30294,30315,30319,32714,31462,31352,31353,31360,31366,31368,31381,31398,31392,31404,31400,31405,31411,34916,34921,34930,34941,34943,34946,34978,35014,34999,35004,35017,35042,35022,35043,35045,35057,35098,35068,35048,35070,35056,35105,35097,35091,35099,35082,35124,35115,35126,35137,35174,35195,30091,32997,30386,30388,30684,32786,32788,32790,32796,32800,32802,32805,32806,32807,32809,32808,32817,32779,32821,32835,32838,32845,32850,32873,32881,35203,39032,39040,39043,39418,39419,39420,39421,39422,39423,39424,39425,39426,39427,39428,39429,39430,39431,39432,39433,39434,39435,39436,39437,39438,39439,39440,39441,39442,39443,39444,39445,39446,39447,39448,39449,39450,39451,39452,39453,39454,39455,39456,39457,39458,39459,39460,39461,39462,39463,39464,39465,39466,39467,39468,39469,39470,39471,39472,39473,39474,39475,39476,39477,39478,39479,39480,39481,39482,39483,39484,39485,39486,39487,39488,39489,39490,39491,39492,39493,39494,39495,39496,39497,39498,39499,39500,39501,39502,39503,39504,39505,39506,39507,39508,39509,39510,39511,39512,39513,39049,39052,39053,39055,39060,39066,39067,39070,39071,39073,39074,39077,39078,34381,34388,34412,34414,34431,34426,34428,34427,34472,34445,34443,34476,34461,34471,34467,34474,34451,34473,34486,34500,34485,34510,34480,34490,34481,34479,34505,34511,34484,34537,34545,34546,34541,34547,34512,34579,34526,34548,34527,34520,34513,34563,34567,34552,34568,34570,34573,34569,34595,34619,34590,34597,34606,34586,34622,34632,34612,34609,34601,34615,34623,34690,34594,34685,34686,34683,34656,34672,34636,34670,34699,34643,34659,34684,34660,34649,34661,34707,34735,34728,34770,39514,39515,39516,39517,39518,39519,39520,39521,39522,39523,39524,39525,39526,39527,39528,39529,39530,39531,39538,39555,39561,39565,39566,39572,39573,39577,39590,39593,39594,39595,39596,39597,39598,39599,39602,39603,39604,39605,39609,39611,39613,39614,39615,39619,39620,39622,39623,39624,39625,39626,39629,39630,39631,39632,39634,39636,39637,39638,39639,39641,39642,39643,39644,39645,39646,39648,39650,39651,39652,39653,39655,39656,39657,39658,39660,39662,39664,39665,39666,39667,39668,39669,39670,39671,39672,39674,39676,39677,39678,39679,39680,39681,39682,39684,39685,39686,34758,34696,34693,34733,34711,34691,34731,34789,34732,34741,34739,34763,34771,34749,34769,34752,34762,34779,34794,34784,34798,34838,34835,34814,34826,34843,34849,34873,34876,32566,32578,32580,32581,33296,31482,31485,31496,31491,31492,31509,31498,31531,31503,31559,31544,31530,31513,31534,31537,31520,31525,31524,31539,31550,31518,31576,31578,31557,31605,31564,31581,31584,31598,31611,31586,31602,31601,31632,31654,31655,31672,31660,31645,31656,31621,31658,31644,31650,31659,31668,31697,31681,31692,31709,31706,31717,31718,31722,31756,31742,31740,31759,31766,31755,39687,39689,39690,39691,39692,39693,39694,39696,39697,39698,39700,39701,39702,39703,39704,39705,39706,39707,39708,39709,39710,39712,39713,39714,39716,39717,39718,39719,39720,39721,39722,39723,39724,39725,39726,39728,39729,39731,39732,39733,39734,39735,39736,39737,39738,39741,39742,39743,39744,39750,39754,39755,39756,39758,39760,39762,39763,39765,39766,39767,39768,39769,39770,39771,39772,39773,39774,39775,39776,39777,39778,39779,39780,39781,39782,39783,39784,39785,39786,39787,39788,39789,39790,39791,39792,39793,39794,39795,39796,39797,39798,39799,39800,39801,39802,39803,31775,31786,31782,31800,31809,31808,33278,33281,33282,33284,33260,34884,33313,33314,33315,33325,33327,33320,33323,33336,33339,33331,33332,33342,33348,33353,33355,33359,33370,33375,33384,34942,34949,34952,35032,35039,35166,32669,32671,32679,32687,32688,32690,31868,25929,31889,31901,31900,31902,31906,31922,31932,31933,31937,31943,31948,31949,31944,31941,31959,31976,33390,26280,32703,32718,32725,32741,32737,32742,32745,32750,32755,31992,32119,32166,32174,32327,32411,40632,40628,36211,36228,36244,36241,36273,36199,36205,35911,35913,37194,37200,37198,37199,37220,39804,39805,39806,39807,39808,39809,39810,39811,39812,39813,39814,39815,39816,39817,39818,39819,39820,39821,39822,39823,39824,39825,39826,39827,39828,39829,39830,39831,39832,39833,39834,39835,39836,39837,39838,39839,39840,39841,39842,39843,39844,39845,39846,39847,39848,39849,39850,39851,39852,39853,39854,39855,39856,39857,39858,39859,39860,39861,39862,39863,39864,39865,39866,39867,39868,39869,39870,39871,39872,39873,39874,39875,39876,39877,39878,39879,39880,39881,39882,39883,39884,39885,39886,39887,39888,39889,39890,39891,39892,39893,39894,39895,39896,39897,39898,39899,37218,37217,37232,37225,37231,37245,37246,37234,37236,37241,37260,37253,37264,37261,37265,37282,37283,37290,37293,37294,37295,37301,37300,37306,35925,40574,36280,36331,36357,36441,36457,36277,36287,36284,36282,36292,36310,36311,36314,36318,36302,36303,36315,36294,36332,36343,36344,36323,36345,36347,36324,36361,36349,36372,36381,36383,36396,36398,36387,36399,36410,36416,36409,36405,36413,36401,36425,36417,36418,36433,36434,36426,36464,36470,36476,36463,36468,36485,36495,36500,36496,36508,36510,35960,35970,35978,35973,35992,35988,26011,35286,35294,35290,35292,39900,39901,39902,39903,39904,39905,39906,39907,39908,39909,39910,39911,39912,39913,39914,39915,39916,39917,39918,39919,39920,39921,39922,39923,39924,39925,39926,39927,39928,39929,39930,39931,39932,39933,39934,39935,39936,39937,39938,39939,39940,39941,39942,39943,39944,39945,39946,39947,39948,39949,39950,39951,39952,39953,39954,39955,39956,39957,39958,39959,39960,39961,39962,39963,39964,39965,39966,39967,39968,39969,39970,39971,39972,39973,39974,39975,39976,39977,39978,39979,39980,39981,39982,39983,39984,39985,39986,39987,39988,39989,39990,39991,39992,39993,39994,39995,35301,35307,35311,35390,35622,38739,38633,38643,38639,38662,38657,38664,38671,38670,38698,38701,38704,38718,40832,40835,40837,40838,40839,40840,40841,40842,40844,40702,40715,40717,38585,38588,38589,38606,38610,30655,38624,37518,37550,37576,37694,37738,37834,37775,37950,37995,40063,40066,40069,40070,40071,40072,31267,40075,40078,40080,40081,40082,40084,40085,40090,40091,40094,40095,40096,40097,40098,40099,40101,40102,40103,40104,40105,40107,40109,40110,40112,40113,40114,40115,40116,40117,40118,40119,40122,40123,40124,40125,40132,40133,40134,40135,40138,40139,39996,39997,39998,39999,40000,40001,40002,40003,40004,40005,40006,40007,40008,40009,40010,40011,40012,40013,40014,40015,40016,40017,40018,40019,40020,40021,40022,40023,40024,40025,40026,40027,40028,40029,40030,40031,40032,40033,40034,40035,40036,40037,40038,40039,40040,40041,40042,40043,40044,40045,40046,40047,40048,40049,40050,40051,40052,40053,40054,40055,40056,40057,40058,40059,40061,40062,40064,40067,40068,40073,40074,40076,40079,40083,40086,40087,40088,40089,40093,40106,40108,40111,40121,40126,40127,40128,40129,40130,40136,40137,40145,40146,40154,40155,40160,40161,40140,40141,40142,40143,40144,40147,40148,40149,40151,40152,40153,40156,40157,40159,40162,38780,38789,38801,38802,38804,38831,38827,38819,38834,38836,39601,39600,39607,40536,39606,39610,39612,39617,39616,39621,39618,39627,39628,39633,39749,39747,39751,39753,39752,39757,39761,39144,39181,39214,39253,39252,39647,39649,39654,39663,39659,39675,39661,39673,39688,39695,39699,39711,39715,40637,40638,32315,40578,40583,40584,40587,40594,37846,40605,40607,40667,40668,40669,40672,40671,40674,40681,40679,40677,40682,40687,40738,40748,40751,40761,40759,40765,40766,40772,40163,40164,40165,40166,40167,40168,40169,40170,40171,40172,40173,40174,40175,40176,40177,40178,40179,40180,40181,40182,40183,40184,40185,40186,40187,40188,40189,40190,40191,40192,40193,40194,40195,40196,40197,40198,40199,40200,40201,40202,40203,40204,40205,40206,40207,40208,40209,40210,40211,40212,40213,40214,40215,40216,40217,40218,40219,40220,40221,40222,40223,40224,40225,40226,40227,40228,40229,40230,40231,40232,40233,40234,40235,40236,40237,40238,40239,40240,40241,40242,40243,40244,40245,40246,40247,40248,40249,40250,40251,40252,40253,40254,40255,40256,40257,40258,57908,57909,57910,57911,57912,57913,57914,57915,57916,57917,57918,57919,57920,57921,57922,57923,57924,57925,57926,57927,57928,57929,57930,57931,57932,57933,57934,57935,57936,57937,57938,57939,57940,57941,57942,57943,57944,57945,57946,57947,57948,57949,57950,57951,57952,57953,57954,57955,57956,57957,57958,57959,57960,57961,57962,57963,57964,57965,57966,57967,57968,57969,57970,57971,57972,57973,57974,57975,57976,57977,57978,57979,57980,57981,57982,57983,57984,57985,57986,57987,57988,57989,57990,57991,57992,57993,57994,57995,57996,57997,57998,57999,58000,58001,40259,40260,40261,40262,40263,40264,40265,40266,40267,40268,40269,40270,40271,40272,40273,40274,40275,40276,40277,40278,40279,40280,40281,40282,40283,40284,40285,40286,40287,40288,40289,40290,40291,40292,40293,40294,40295,40296,40297,40298,40299,40300,40301,40302,40303,40304,40305,40306,40307,40308,40309,40310,40311,40312,40313,40314,40315,40316,40317,40318,40319,40320,40321,40322,40323,40324,40325,40326,40327,40328,40329,40330,40331,40332,40333,40334,40335,40336,40337,40338,40339,40340,40341,40342,40343,40344,40345,40346,40347,40348,40349,40350,40351,40352,40353,40354,58002,58003,58004,58005,58006,58007,58008,58009,58010,58011,58012,58013,58014,58015,58016,58017,58018,58019,58020,58021,58022,58023,58024,58025,58026,58027,58028,58029,58030,58031,58032,58033,58034,58035,58036,58037,58038,58039,58040,58041,58042,58043,58044,58045,58046,58047,58048,58049,58050,58051,58052,58053,58054,58055,58056,58057,58058,58059,58060,58061,58062,58063,58064,58065,58066,58067,58068,58069,58070,58071,58072,58073,58074,58075,58076,58077,58078,58079,58080,58081,58082,58083,58084,58085,58086,58087,58088,58089,58090,58091,58092,58093,58094,58095,40355,40356,40357,40358,40359,40360,40361,40362,40363,40364,40365,40366,40367,40368,40369,40370,40371,40372,40373,40374,40375,40376,40377,40378,40379,40380,40381,40382,40383,40384,40385,40386,40387,40388,40389,40390,40391,40392,40393,40394,40395,40396,40397,40398,40399,40400,40401,40402,40403,40404,40405,40406,40407,40408,40409,40410,40411,40412,40413,40414,40415,40416,40417,40418,40419,40420,40421,40422,40423,40424,40425,40426,40427,40428,40429,40430,40431,40432,40433,40434,40435,40436,40437,40438,40439,40440,40441,40442,40443,40444,40445,40446,40447,40448,40449,40450,58096,58097,58098,58099,58100,58101,58102,58103,58104,58105,58106,58107,58108,58109,58110,58111,58112,58113,58114,58115,58116,58117,58118,58119,58120,58121,58122,58123,58124,58125,58126,58127,58128,58129,58130,58131,58132,58133,58134,58135,58136,58137,58138,58139,58140,58141,58142,58143,58144,58145,58146,58147,58148,58149,58150,58151,58152,58153,58154,58155,58156,58157,58158,58159,58160,58161,58162,58163,58164,58165,58166,58167,58168,58169,58170,58171,58172,58173,58174,58175,58176,58177,58178,58179,58180,58181,58182,58183,58184,58185,58186,58187,58188,58189,40451,40452,40453,40454,40455,40456,40457,40458,40459,40460,40461,40462,40463,40464,40465,40466,40467,40468,40469,40470,40471,40472,40473,40474,40475,40476,40477,40478,40484,40487,40494,40496,40500,40507,40508,40512,40525,40528,40530,40531,40532,40534,40537,40541,40543,40544,40545,40546,40549,40558,40559,40562,40564,40565,40566,40567,40568,40569,40570,40571,40572,40573,40576,40577,40579,40580,40581,40582,40585,40586,40588,40589,40590,40591,40592,40593,40596,40597,40598,40599,40600,40601,40602,40603,40604,40606,40608,40609,40610,40611,40612,40613,40615,40616,40617,40618,58190,58191,58192,58193,58194,58195,58196,58197,58198,58199,58200,58201,58202,58203,58204,58205,58206,58207,58208,58209,58210,58211,58212,58213,58214,58215,58216,58217,58218,58219,58220,58221,58222,58223,58224,58225,58226,58227,58228,58229,58230,58231,58232,58233,58234,58235,58236,58237,58238,58239,58240,58241,58242,58243,58244,58245,58246,58247,58248,58249,58250,58251,58252,58253,58254,58255,58256,58257,58258,58259,58260,58261,58262,58263,58264,58265,58266,58267,58268,58269,58270,58271,58272,58273,58274,58275,58276,58277,58278,58279,58280,58281,58282,58283,40619,40620,40621,40622,40623,40624,40625,40626,40627,40629,40630,40631,40633,40634,40636,40639,40640,40641,40642,40643,40645,40646,40647,40648,40650,40651,40652,40656,40658,40659,40661,40662,40663,40665,40666,40670,40673,40675,40676,40678,40680,40683,40684,40685,40686,40688,40689,40690,40691,40692,40693,40694,40695,40696,40698,40701,40703,40704,40705,40706,40707,40708,40709,40710,40711,40712,40713,40714,40716,40719,40721,40722,40724,40725,40726,40728,40730,40731,40732,40733,40734,40735,40737,40739,40740,40741,40742,40743,40744,40745,40746,40747,40749,40750,40752,40753,58284,58285,58286,58287,58288,58289,58290,58291,58292,58293,58294,58295,58296,58297,58298,58299,58300,58301,58302,58303,58304,58305,58306,58307,58308,58309,58310,58311,58312,58313,58314,58315,58316,58317,58318,58319,58320,58321,58322,58323,58324,58325,58326,58327,58328,58329,58330,58331,58332,58333,58334,58335,58336,58337,58338,58339,58340,58341,58342,58343,58344,58345,58346,58347,58348,58349,58350,58351,58352,58353,58354,58355,58356,58357,58358,58359,58360,58361,58362,58363,58364,58365,58366,58367,58368,58369,58370,58371,58372,58373,58374,58375,58376,58377,40754,40755,40756,40757,40758,40760,40762,40764,40767,40768,40769,40770,40771,40773,40774,40775,40776,40777,40778,40779,40780,40781,40782,40783,40786,40787,40788,40789,40790,40791,40792,40793,40794,40795,40796,40797,40798,40799,40800,40801,40802,40803,40804,40805,40806,40807,40808,40809,40810,40811,40812,40813,40814,40815,40816,40817,40818,40819,40820,40821,40822,40823,40824,40825,40826,40827,40828,40829,40830,40833,40834,40845,40846,40847,40848,40849,40850,40851,40852,40853,40854,40855,40856,40860,40861,40862,40865,40866,40867,40868,40869,63788,63865,63893,63975,63985,58378,58379,58380,58381,58382,58383,58384,58385,58386,58387,58388,58389,58390,58391,58392,58393,58394,58395,58396,58397,58398,58399,58400,58401,58402,58403,58404,58405,58406,58407,58408,58409,58410,58411,58412,58413,58414,58415,58416,58417,58418,58419,58420,58421,58422,58423,58424,58425,58426,58427,58428,58429,58430,58431,58432,58433,58434,58435,58436,58437,58438,58439,58440,58441,58442,58443,58444,58445,58446,58447,58448,58449,58450,58451,58452,58453,58454,58455,58456,58457,58458,58459,58460,58461,58462,58463,58464,58465,58466,58467,58468,58469,58470,58471,64012,64013,64014,64015,64017,64019,64020,64024,64031,64032,64033,64035,64036,64039,64040,64041,11905,59414,59415,59416,11908,13427,13383,11912,11915,59422,13726,13850,13838,11916,11927,14702,14616,59430,14799,14815,14963,14800,59435,59436,15182,15470,15584,11943,59441,59442,11946,16470,16735,11950,17207,11955,11958,11959,59451,17329,17324,11963,17373,17622,18017,17996,59459,18211,18217,18300,18317,11978,18759,18810,18813,18818,18819,18821,18822,18847,18843,18871,18870,59476,59477,19619,19615,19616,19617,19575,19618,19731,19732,19733,19734,19735,19736,19737,19886,59492,58472,58473,58474,58475,58476,58477,58478,58479,58480,58481,58482,58483,58484,58485,58486,58487,58488,58489,58490,58491,58492,58493,58494,58495,58496,58497,58498,58499,58500,58501,58502,58503,58504,58505,58506,58507,58508,58509,58510,58511,58512,58513,58514,58515,58516,58517,58518,58519,58520,58521,58522,58523,58524,58525,58526,58527,58528,58529,58530,58531,58532,58533,58534,58535,58536,58537,58538,58539,58540,58541,58542,58543,58544,58545,58546,58547,58548,58549,58550,58551,58552,58553,58554,58555,58556,58557,58558,58559,58560,58561,58562,58563,58564,58565],\n  \"gb18030-ranges\":[[0,128],[36,165],[38,169],[45,178],[50,184],[81,216],[89,226],[95,235],[96,238],[100,244],[103,248],[104,251],[105,253],[109,258],[126,276],[133,284],[148,300],[172,325],[175,329],[179,334],[208,364],[306,463],[307,465],[308,467],[309,469],[310,471],[311,473],[312,475],[313,477],[341,506],[428,594],[443,610],[544,712],[545,716],[558,730],[741,930],[742,938],[749,962],[750,970],[805,1026],[819,1104],[820,1106],[7922,8209],[7924,8215],[7925,8218],[7927,8222],[7934,8231],[7943,8241],[7944,8244],[7945,8246],[7950,8252],[8062,8365],[8148,8452],[8149,8454],[8152,8458],[8164,8471],[8174,8482],[8236,8556],[8240,8570],[8262,8596],[8264,8602],[8374,8713],[8380,8720],[8381,8722],[8384,8726],[8388,8731],[8390,8737],[8392,8740],[8393,8742],[8394,8748],[8396,8751],[8401,8760],[8406,8766],[8416,8777],[8419,8781],[8424,8787],[8437,8802],[8439,8808],[8445,8816],[8482,8854],[8485,8858],[8496,8870],[8521,8896],[8603,8979],[8936,9322],[8946,9372],[9046,9548],[9050,9588],[9063,9616],[9066,9622],[9076,9634],[9092,9652],[9100,9662],[9108,9672],[9111,9676],[9113,9680],[9131,9702],[9162,9735],[9164,9738],[9218,9793],[9219,9795],[11329,11906],[11331,11909],[11334,11913],[11336,11917],[11346,11928],[11361,11944],[11363,11947],[11366,11951],[11370,11956],[11372,11960],[11375,11964],[11389,11979],[11682,12284],[11686,12292],[11687,12312],[11692,12319],[11694,12330],[11714,12351],[11716,12436],[11723,12447],[11725,12535],[11730,12543],[11736,12586],[11982,12842],[11989,12850],[12102,12964],[12336,13200],[12348,13215],[12350,13218],[12384,13253],[12393,13263],[12395,13267],[12397,13270],[12510,13384],[12553,13428],[12851,13727],[12962,13839],[12973,13851],[13738,14617],[13823,14703],[13919,14801],[13933,14816],[14080,14964],[14298,15183],[14585,15471],[14698,15585],[15583,16471],[15847,16736],[16318,17208],[16434,17325],[16438,17330],[16481,17374],[16729,17623],[17102,17997],[17122,18018],[17315,18212],[17320,18218],[17402,18301],[17418,18318],[17859,18760],[17909,18811],[17911,18814],[17915,18820],[17916,18823],[17936,18844],[17939,18848],[17961,18872],[18664,19576],[18703,19620],[18814,19738],[18962,19887],[19043,40870],[33469,59244],[33470,59336],[33471,59367],[33484,59413],[33485,59417],[33490,59423],[33497,59431],[33501,59437],[33505,59443],[33513,59452],[33520,59460],[33536,59478],[33550,59493],[37845,63789],[37921,63866],[37948,63894],[38029,63976],[38038,63986],[38064,64016],[38065,64018],[38066,64021],[38069,64025],[38075,64034],[38076,64037],[38078,64042],[39108,65074],[39109,65093],[39113,65107],[39114,65112],[39115,65127],[39116,65132],[39265,65375],[39394,65510],[189000,65536]],\n  \"jis0208\":[12288,12289,12290,65292,65294,12539,65306,65307,65311,65281,12443,12444,180,65344,168,65342,65507,65343,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,8213,8208,65295,65340,65374,8741,65372,8230,8229,8216,8217,8220,8221,65288,65289,12308,12309,65339,65341,65371,65373,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,65291,65293,177,215,247,65309,8800,65308,65310,8806,8807,8734,8756,9794,9792,176,8242,8243,8451,65509,65284,65504,65505,65285,65283,65286,65290,65312,167,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8251,12306,8594,8592,8593,8595,12307,null,null,null,null,null,null,null,null,null,null,null,8712,8715,8838,8839,8834,8835,8746,8745,null,null,null,null,null,null,null,null,8743,8744,65506,8658,8660,8704,8707,null,null,null,null,null,null,null,null,null,null,null,8736,8869,8978,8706,8711,8801,8786,8810,8811,8730,8765,8733,8757,8747,8748,null,null,null,null,null,null,null,8491,8240,9839,9837,9834,8224,8225,182,null,null,null,null,9711,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,null,null,null,null,null,null,null,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,null,null,null,null,null,null,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,null,null,null,null,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,9327,9328,9329,9330,9331,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,13129,13076,13090,13133,13080,13095,13059,13110,13137,13143,13069,13094,13091,13099,13130,13115,13212,13213,13214,13198,13199,13252,13217,null,null,null,null,null,null,null,null,13179,12317,12319,8470,13261,8481,12964,12965,12966,12967,12968,12849,12850,12857,13182,13181,13180,8786,8801,8747,8750,8721,8730,8869,8736,8735,8895,8757,8745,8746,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20124,21782,23043,38463,21696,24859,25384,23030,36898,33909,33564,31312,24746,25569,28197,26093,33894,33446,39925,26771,22311,26017,25201,23451,22992,34427,39156,32098,32190,39822,25110,31903,34999,23433,24245,25353,26263,26696,38343,38797,26447,20197,20234,20301,20381,20553,22258,22839,22996,23041,23561,24799,24847,24944,26131,26885,28858,30031,30064,31227,32173,32239,32963,33806,34915,35586,36949,36986,21307,20117,20133,22495,32946,37057,30959,19968,22769,28322,36920,31282,33576,33419,39983,20801,21360,21693,21729,22240,23035,24341,39154,28139,32996,34093,38498,38512,38560,38907,21515,21491,23431,28879,32701,36802,38632,21359,40284,31418,19985,30867,33276,28198,22040,21764,27421,34074,39995,23013,21417,28006,29916,38287,22082,20113,36939,38642,33615,39180,21473,21942,23344,24433,26144,26355,26628,27704,27891,27945,29787,30408,31310,38964,33521,34907,35424,37613,28082,30123,30410,39365,24742,35585,36234,38322,27022,21421,20870,22290,22576,22852,23476,24310,24616,25513,25588,27839,28436,28814,28948,29017,29141,29503,32257,33398,33489,34199,36960,37467,40219,22633,26044,27738,29989,20985,22830,22885,24448,24540,25276,26106,27178,27431,27572,29579,32705,35158,40236,40206,40644,23713,27798,33659,20740,23627,25014,33222,26742,29281,20057,20474,21368,24681,28201,31311,38899,19979,21270,20206,20309,20285,20385,20339,21152,21487,22025,22799,23233,23478,23521,31185,26247,26524,26550,27468,27827,28779,29634,31117,31166,31292,31623,33457,33499,33540,33655,33775,33747,34662,35506,22057,36008,36838,36942,38686,34442,20420,23784,25105,29273,30011,33253,33469,34558,36032,38597,39187,39381,20171,20250,35299,22238,22602,22730,24315,24555,24618,24724,24674,25040,25106,25296,25913,39745,26214,26800,28023,28784,30028,30342,32117,33445,34809,38283,38542,35997,20977,21182,22806,21683,23475,23830,24936,27010,28079,30861,33995,34903,35442,37799,39608,28012,39336,34521,22435,26623,34510,37390,21123,22151,21508,24275,25313,25785,26684,26680,27579,29554,30906,31339,35226,35282,36203,36611,37101,38307,38548,38761,23398,23731,27005,38989,38990,25499,31520,27179,27263,26806,39949,28511,21106,21917,24688,25324,27963,28167,28369,33883,35088,36676,19988,39993,21494,26907,27194,38788,26666,20828,31427,33970,37340,37772,22107,40232,26658,33541,33841,31909,21000,33477,29926,20094,20355,20896,23506,21002,21208,21223,24059,21914,22570,23014,23436,23448,23515,24178,24185,24739,24863,24931,25022,25563,25954,26577,26707,26874,27454,27475,27735,28450,28567,28485,29872,29976,30435,30475,31487,31649,31777,32233,32566,32752,32925,33382,33694,35251,35532,36011,36996,37969,38291,38289,38306,38501,38867,39208,33304,20024,21547,23736,24012,29609,30284,30524,23721,32747,36107,38593,38929,38996,39000,20225,20238,21361,21916,22120,22522,22855,23305,23492,23696,24076,24190,24524,25582,26426,26071,26082,26399,26827,26820,27231,24112,27589,27671,27773,30079,31048,23395,31232,32000,24509,35215,35352,36020,36215,36556,36637,39138,39438,39740,20096,20605,20736,22931,23452,25135,25216,25836,27450,29344,30097,31047,32681,34811,35516,35696,25516,33738,38816,21513,21507,21931,26708,27224,35440,30759,26485,40653,21364,23458,33050,34384,36870,19992,20037,20167,20241,21450,21560,23470,24339,24613,25937,26429,27714,27762,27875,28792,29699,31350,31406,31496,32026,31998,32102,26087,29275,21435,23621,24040,25298,25312,25369,28192,34394,35377,36317,37624,28417,31142,39770,20136,20139,20140,20379,20384,20689,20807,31478,20849,20982,21332,21281,21375,21483,21932,22659,23777,24375,24394,24623,24656,24685,25375,25945,27211,27841,29378,29421,30703,33016,33029,33288,34126,37111,37857,38911,39255,39514,20208,20957,23597,26241,26989,23616,26354,26997,29577,26704,31873,20677,21220,22343,24062,37670,26020,27427,27453,29748,31105,31165,31563,32202,33465,33740,34943,35167,35641,36817,37329,21535,37504,20061,20534,21477,21306,29399,29590,30697,33510,36527,39366,39368,39378,20855,24858,34398,21936,31354,20598,23507,36935,38533,20018,27355,37351,23633,23624,25496,31391,27795,38772,36705,31402,29066,38536,31874,26647,32368,26705,37740,21234,21531,34219,35347,32676,36557,37089,21350,34952,31041,20418,20670,21009,20804,21843,22317,29674,22411,22865,24418,24452,24693,24950,24935,25001,25522,25658,25964,26223,26690,28179,30054,31293,31995,32076,32153,32331,32619,33550,33610,34509,35336,35427,35686,36605,38938,40335,33464,36814,39912,21127,25119,25731,28608,38553,26689,20625,27424,27770,28500,31348,32080,34880,35363,26376,20214,20537,20518,20581,20860,21048,21091,21927,22287,22533,23244,24314,25010,25080,25331,25458,26908,27177,29309,29356,29486,30740,30831,32121,30476,32937,35211,35609,36066,36562,36963,37749,38522,38997,39443,40568,20803,21407,21427,24187,24358,28187,28304,29572,29694,32067,33335,35328,35578,38480,20046,20491,21476,21628,22266,22993,23396,24049,24235,24359,25144,25925,26543,28246,29392,31946,34996,32929,32993,33776,34382,35463,36328,37431,38599,39015,40723,20116,20114,20237,21320,21577,21566,23087,24460,24481,24735,26791,27278,29786,30849,35486,35492,35703,37264,20062,39881,20132,20348,20399,20505,20502,20809,20844,21151,21177,21246,21402,21475,21521,21518,21897,22353,22434,22909,23380,23389,23439,24037,24039,24055,24184,24195,24218,24247,24344,24658,24908,25239,25304,25511,25915,26114,26179,26356,26477,26657,26775,27083,27743,27946,28009,28207,28317,30002,30343,30828,31295,31968,32005,32024,32094,32177,32789,32771,32943,32945,33108,33167,33322,33618,34892,34913,35611,36002,36092,37066,37237,37489,30783,37628,38308,38477,38917,39321,39640,40251,21083,21163,21495,21512,22741,25335,28640,35946,36703,40633,20811,21051,21578,22269,31296,37239,40288,40658,29508,28425,33136,29969,24573,24794,39592,29403,36796,27492,38915,20170,22256,22372,22718,23130,24680,25031,26127,26118,26681,26801,28151,30165,32058,33390,39746,20123,20304,21449,21766,23919,24038,24046,26619,27801,29811,30722,35408,37782,35039,22352,24231,25387,20661,20652,20877,26368,21705,22622,22971,23472,24425,25165,25505,26685,27507,28168,28797,37319,29312,30741,30758,31085,25998,32048,33756,35009,36617,38555,21092,22312,26448,32618,36001,20916,22338,38442,22586,27018,32948,21682,23822,22524,30869,40442,20316,21066,21643,25662,26152,26388,26613,31364,31574,32034,37679,26716,39853,31545,21273,20874,21047,23519,25334,25774,25830,26413,27578,34217,38609,30352,39894,25420,37638,39851,30399,26194,19977,20632,21442,23665,24808,25746,25955,26719,29158,29642,29987,31639,32386,34453,35715,36059,37240,39184,26028,26283,27531,20181,20180,20282,20351,21050,21496,21490,21987,22235,22763,22987,22985,23039,23376,23629,24066,24107,24535,24605,25351,25903,23388,26031,26045,26088,26525,27490,27515,27663,29509,31049,31169,31992,32025,32043,32930,33026,33267,35222,35422,35433,35430,35468,35566,36039,36060,38604,39164,27503,20107,20284,20365,20816,23383,23546,24904,25345,26178,27425,28363,27835,29246,29885,30164,30913,31034,32780,32819,33258,33940,36766,27728,40575,24335,35672,40235,31482,36600,23437,38635,19971,21489,22519,22833,23241,23460,24713,28287,28422,30142,36074,23455,34048,31712,20594,26612,33437,23649,34122,32286,33294,20889,23556,25448,36198,26012,29038,31038,32023,32773,35613,36554,36974,34503,37034,20511,21242,23610,26451,28796,29237,37196,37320,37675,33509,23490,24369,24825,20027,21462,23432,25163,26417,27530,29417,29664,31278,33131,36259,37202,39318,20754,21463,21610,23551,25480,27193,32172,38656,22234,21454,21608,23447,23601,24030,20462,24833,25342,27954,31168,31179,32066,32333,32722,33261,33311,33936,34886,35186,35728,36468,36655,36913,37195,37228,38598,37276,20160,20303,20805,21313,24467,25102,26580,27713,28171,29539,32294,37325,37507,21460,22809,23487,28113,31069,32302,31899,22654,29087,20986,34899,36848,20426,23803,26149,30636,31459,33308,39423,20934,24490,26092,26991,27529,28147,28310,28516,30462,32020,24033,36981,37255,38918,20966,21021,25152,26257,26329,28186,24246,32210,32626,26360,34223,34295,35576,21161,21465,22899,24207,24464,24661,37604,38500,20663,20767,21213,21280,21319,21484,21736,21830,21809,22039,22888,22974,23100,23477,23558,23567,23569,23578,24196,24202,24288,24432,25215,25220,25307,25484,25463,26119,26124,26157,26230,26494,26786,27167,27189,27836,28040,28169,28248,28988,28966,29031,30151,30465,30813,30977,31077,31216,31456,31505,31911,32057,32918,33750,33931,34121,34909,35059,35359,35388,35412,35443,35937,36062,37284,37478,37758,37912,38556,38808,19978,19976,19998,20055,20887,21104,22478,22580,22732,23330,24120,24773,25854,26465,26454,27972,29366,30067,31331,33976,35698,37304,37664,22065,22516,39166,25325,26893,27542,29165,32340,32887,33394,35302,39135,34645,36785,23611,20280,20449,20405,21767,23072,23517,23529,24515,24910,25391,26032,26187,26862,27035,28024,28145,30003,30137,30495,31070,31206,32051,33251,33455,34218,35242,35386,36523,36763,36914,37341,38663,20154,20161,20995,22645,22764,23563,29978,23613,33102,35338,36805,38499,38765,31525,35535,38920,37218,22259,21416,36887,21561,22402,24101,25512,27700,28810,30561,31883,32736,34928,36930,37204,37648,37656,38543,29790,39620,23815,23913,25968,26530,36264,38619,25454,26441,26905,33733,38935,38592,35070,28548,25722,23544,19990,28716,30045,26159,20932,21046,21218,22995,24449,24615,25104,25919,25972,26143,26228,26866,26646,27491,28165,29298,29983,30427,31934,32854,22768,35069,35199,35488,35475,35531,36893,37266,38738,38745,25993,31246,33030,38587,24109,24796,25114,26021,26132,26512,30707,31309,31821,32318,33034,36012,36196,36321,36447,30889,20999,25305,25509,25666,25240,35373,31363,31680,35500,38634,32118,33292,34633,20185,20808,21315,21344,23459,23554,23574,24029,25126,25159,25776,26643,26676,27849,27973,27927,26579,28508,29006,29053,26059,31359,31661,32218,32330,32680,33146,33307,33337,34214,35438,36046,36341,36984,36983,37549,37521,38275,39854,21069,21892,28472,28982,20840,31109,32341,33203,31950,22092,22609,23720,25514,26366,26365,26970,29401,30095,30094,30990,31062,31199,31895,32032,32068,34311,35380,38459,36961,40736,20711,21109,21452,21474,20489,21930,22766,22863,29245,23435,23652,21277,24803,24819,25436,25475,25407,25531,25805,26089,26361,24035,27085,27133,28437,29157,20105,30185,30456,31379,31967,32207,32156,32865,33609,33624,33900,33980,34299,35013,36208,36865,36973,37783,38684,39442,20687,22679,24974,33235,34101,36104,36896,20419,20596,21063,21363,24687,25417,26463,28204,36275,36895,20439,23646,36042,26063,32154,21330,34966,20854,25539,23384,23403,23562,25613,26449,36956,20182,22810,22826,27760,35409,21822,22549,22949,24816,25171,26561,33333,26965,38464,39364,39464,20307,22534,23550,32784,23729,24111,24453,24608,24907,25140,26367,27888,28382,32974,33151,33492,34955,36024,36864,36910,38538,40667,39899,20195,21488,22823,31532,37261,38988,40441,28381,28711,21331,21828,23429,25176,25246,25299,27810,28655,29730,35351,37944,28609,35582,33592,20967,34552,21482,21481,20294,36948,36784,22890,33073,24061,31466,36799,26842,35895,29432,40008,27197,35504,20025,21336,22022,22374,25285,25506,26086,27470,28129,28251,28845,30701,31471,31658,32187,32829,32966,34507,35477,37723,22243,22727,24382,26029,26262,27264,27573,30007,35527,20516,30693,22320,24347,24677,26234,27744,30196,31258,32622,33268,34584,36933,39347,31689,30044,31481,31569,33988,36880,31209,31378,33590,23265,30528,20013,20210,23449,24544,25277,26172,26609,27880,34411,34935,35387,37198,37619,39376,27159,28710,29482,33511,33879,36015,19969,20806,20939,21899,23541,24086,24115,24193,24340,24373,24427,24500,25074,25361,26274,26397,28526,29266,30010,30522,32884,33081,33144,34678,35519,35548,36229,36339,37530,38263,38914,40165,21189,25431,30452,26389,27784,29645,36035,37806,38515,27941,22684,26894,27084,36861,37786,30171,36890,22618,26626,25524,27131,20291,28460,26584,36795,34086,32180,37716,26943,28528,22378,22775,23340,32044,29226,21514,37347,40372,20141,20302,20572,20597,21059,35998,21576,22564,23450,24093,24213,24237,24311,24351,24716,25269,25402,25552,26799,27712,30855,31118,31243,32224,33351,35330,35558,36420,36883,37048,37165,37336,40718,27877,25688,25826,25973,28404,30340,31515,36969,37841,28346,21746,24505,25764,36685,36845,37444,20856,22635,22825,23637,24215,28155,32399,29980,36028,36578,39003,28857,20253,27583,28593,30000,38651,20814,21520,22581,22615,22956,23648,24466,26007,26460,28193,30331,33759,36077,36884,37117,37709,30757,30778,21162,24230,22303,22900,24594,20498,20826,20908,20941,20992,21776,22612,22616,22871,23445,23798,23947,24764,25237,25645,26481,26691,26812,26847,30423,28120,28271,28059,28783,29128,24403,30168,31095,31561,31572,31570,31958,32113,21040,33891,34153,34276,35342,35588,35910,36367,36867,36879,37913,38518,38957,39472,38360,20685,21205,21516,22530,23566,24999,25758,27934,30643,31461,33012,33796,36947,37509,23776,40199,21311,24471,24499,28060,29305,30563,31167,31716,27602,29420,35501,26627,27233,20984,31361,26932,23626,40182,33515,23493,37193,28702,22136,23663,24775,25958,27788,35930,36929,38931,21585,26311,37389,22856,37027,20869,20045,20970,34201,35598,28760,25466,37707,26978,39348,32260,30071,21335,26976,36575,38627,27741,20108,23612,24336,36841,21250,36049,32905,34425,24319,26085,20083,20837,22914,23615,38894,20219,22922,24525,35469,28641,31152,31074,23527,33905,29483,29105,24180,24565,25467,25754,29123,31896,20035,24316,20043,22492,22178,24745,28611,32013,33021,33075,33215,36786,35223,34468,24052,25226,25773,35207,26487,27874,27966,29750,30772,23110,32629,33453,39340,20467,24259,25309,25490,25943,26479,30403,29260,32972,32954,36649,37197,20493,22521,23186,26757,26995,29028,29437,36023,22770,36064,38506,36889,34687,31204,30695,33833,20271,21093,21338,25293,26575,27850,30333,31636,31893,33334,34180,36843,26333,28448,29190,32283,33707,39361,40614,20989,31665,30834,31672,32903,31560,27368,24161,32908,30033,30048,20843,37474,28300,30330,37271,39658,20240,32624,25244,31567,38309,40169,22138,22617,34532,38588,20276,21028,21322,21453,21467,24070,25644,26001,26495,27710,27726,29256,29359,29677,30036,32321,33324,34281,36009,31684,37318,29033,38930,39151,25405,26217,30058,30436,30928,34115,34542,21290,21329,21542,22915,24199,24444,24754,25161,25209,25259,26000,27604,27852,30130,30382,30865,31192,32203,32631,32933,34987,35513,36027,36991,38750,39131,27147,31800,20633,23614,24494,26503,27608,29749,30473,32654,40763,26570,31255,21305,30091,39661,24422,33181,33777,32920,24380,24517,30050,31558,36924,26727,23019,23195,32016,30334,35628,20469,24426,27161,27703,28418,29922,31080,34920,35413,35961,24287,25551,30149,31186,33495,37672,37618,33948,34541,39981,21697,24428,25996,27996,28693,36007,36051,38971,25935,29942,19981,20184,22496,22827,23142,23500,20904,24067,24220,24598,25206,25975,26023,26222,28014,29238,31526,33104,33178,33433,35676,36000,36070,36212,38428,38468,20398,25771,27494,33310,33889,34154,37096,23553,26963,39080,33914,34135,20239,21103,24489,24133,26381,31119,33145,35079,35206,28149,24343,25173,27832,20175,29289,39826,20998,21563,22132,22707,24996,25198,28954,22894,31881,31966,32027,38640,25991,32862,19993,20341,20853,22592,24163,24179,24330,26564,20006,34109,38281,38491,31859,38913,20731,22721,30294,30887,21029,30629,34065,31622,20559,22793,29255,31687,32232,36794,36820,36941,20415,21193,23081,24321,38829,20445,33303,37610,22275,25429,27497,29995,35036,36628,31298,21215,22675,24917,25098,26286,27597,31807,33769,20515,20472,21253,21574,22577,22857,23453,23792,23791,23849,24214,25265,25447,25918,26041,26379,27861,27873,28921,30770,32299,32990,33459,33804,34028,34562,35090,35370,35914,37030,37586,39165,40179,40300,20047,20129,20621,21078,22346,22952,24125,24536,24537,25151,26292,26395,26576,26834,20882,32033,32938,33192,35584,35980,36031,37502,38450,21536,38956,21271,20693,21340,22696,25778,26420,29287,30566,31302,37350,21187,27809,27526,22528,24140,22868,26412,32763,20961,30406,25705,30952,39764,40635,22475,22969,26151,26522,27598,21737,27097,24149,33180,26517,39850,26622,40018,26717,20134,20451,21448,25273,26411,27819,36804,20397,32365,40639,19975,24930,28288,28459,34067,21619,26410,39749,24051,31637,23724,23494,34588,28234,34001,31252,33032,22937,31885,27665,30496,21209,22818,28961,29279,30683,38695,40289,26891,23167,23064,20901,21517,21629,26126,30431,36855,37528,40180,23018,29277,28357,20813,26825,32191,32236,38754,40634,25720,27169,33538,22916,23391,27611,29467,30450,32178,32791,33945,20786,26408,40665,30446,26466,21247,39173,23588,25147,31870,36016,21839,24758,32011,38272,21249,20063,20918,22812,29242,32822,37326,24357,30690,21380,24441,32004,34220,35379,36493,38742,26611,34222,37971,24841,24840,27833,30290,35565,36664,21807,20305,20778,21191,21451,23461,24189,24736,24962,25558,26377,26586,28263,28044,29494,29495,30001,31056,35029,35480,36938,37009,37109,38596,34701,22805,20104,20313,19982,35465,36671,38928,20653,24188,22934,23481,24248,25562,25594,25793,26332,26954,27096,27915,28342,29076,29992,31407,32650,32768,33865,33993,35201,35617,36362,36965,38525,39178,24958,25233,27442,27779,28020,32716,32764,28096,32645,34746,35064,26469,33713,38972,38647,27931,32097,33853,37226,20081,21365,23888,27396,28651,34253,34349,35239,21033,21519,23653,26446,26792,29702,29827,30178,35023,35041,37324,38626,38520,24459,29575,31435,33870,25504,30053,21129,27969,28316,29705,30041,30827,31890,38534,31452,40845,20406,24942,26053,34396,20102,20142,20698,20001,20940,23534,26009,26753,28092,29471,30274,30637,31260,31975,33391,35538,36988,37327,38517,38936,21147,32209,20523,21400,26519,28107,29136,29747,33256,36650,38563,40023,40607,29792,22593,28057,32047,39006,20196,20278,20363,20919,21169,23994,24604,29618,31036,33491,37428,38583,38646,38666,40599,40802,26278,27508,21015,21155,28872,35010,24265,24651,24976,28451,29001,31806,32244,32879,34030,36899,37676,21570,39791,27347,28809,36034,36335,38706,21172,23105,24266,24324,26391,27004,27028,28010,28431,29282,29436,31725,32769,32894,34635,37070,20845,40595,31108,32907,37682,35542,20525,21644,35441,27498,36036,33031,24785,26528,40434,20121,20120,39952,35435,34241,34152,26880,28286,30871,33109,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24332,19984,19989,20010,20017,20022,20028,20031,20034,20054,20056,20098,20101,35947,20106,33298,24333,20110,20126,20127,20128,20130,20144,20147,20150,20174,20173,20164,20166,20162,20183,20190,20205,20191,20215,20233,20314,20272,20315,20317,20311,20295,20342,20360,20367,20376,20347,20329,20336,20369,20335,20358,20374,20760,20436,20447,20430,20440,20443,20433,20442,20432,20452,20453,20506,20520,20500,20522,20517,20485,20252,20470,20513,20521,20524,20478,20463,20497,20486,20547,20551,26371,20565,20560,20552,20570,20566,20588,20600,20608,20634,20613,20660,20658,20681,20682,20659,20674,20694,20702,20709,20717,20707,20718,20729,20725,20745,20737,20738,20758,20757,20756,20762,20769,20794,20791,20796,20795,20799,20800,20818,20812,20820,20834,31480,20841,20842,20846,20864,20866,22232,20876,20873,20879,20881,20883,20885,20886,20900,20902,20898,20905,20906,20907,20915,20913,20914,20912,20917,20925,20933,20937,20955,20960,34389,20969,20973,20976,20981,20990,20996,21003,21012,21006,21031,21034,21038,21043,21049,21071,21060,21067,21068,21086,21076,21098,21108,21097,21107,21119,21117,21133,21140,21138,21105,21128,21137,36776,36775,21164,21165,21180,21173,21185,21197,21207,21214,21219,21222,39149,21216,21235,21237,21240,21241,21254,21256,30008,21261,21264,21263,21269,21274,21283,21295,21297,21299,21304,21312,21318,21317,19991,21321,21325,20950,21342,21353,21358,22808,21371,21367,21378,21398,21408,21414,21413,21422,21424,21430,21443,31762,38617,21471,26364,29166,21486,21480,21485,21498,21505,21565,21568,21548,21549,21564,21550,21558,21545,21533,21582,21647,21621,21646,21599,21617,21623,21616,21650,21627,21632,21622,21636,21648,21638,21703,21666,21688,21669,21676,21700,21704,21672,21675,21698,21668,21694,21692,21720,21733,21734,21775,21780,21757,21742,21741,21754,21730,21817,21824,21859,21836,21806,21852,21829,21846,21847,21816,21811,21853,21913,21888,21679,21898,21919,21883,21886,21912,21918,21934,21884,21891,21929,21895,21928,21978,21957,21983,21956,21980,21988,21972,22036,22007,22038,22014,22013,22043,22009,22094,22096,29151,22068,22070,22066,22072,22123,22116,22063,22124,22122,22150,22144,22154,22176,22164,22159,22181,22190,22198,22196,22210,22204,22209,22211,22208,22216,22222,22225,22227,22231,22254,22265,22272,22271,22276,22281,22280,22283,22285,22291,22296,22294,21959,22300,22310,22327,22328,22350,22331,22336,22351,22377,22464,22408,22369,22399,22409,22419,22432,22451,22436,22442,22448,22467,22470,22484,22482,22483,22538,22486,22499,22539,22553,22557,22642,22561,22626,22603,22640,27584,22610,22589,22649,22661,22713,22687,22699,22714,22750,22715,22712,22702,22725,22739,22737,22743,22745,22744,22757,22748,22756,22751,22767,22778,22777,22779,22780,22781,22786,22794,22800,22811,26790,22821,22828,22829,22834,22840,22846,31442,22869,22864,22862,22874,22872,22882,22880,22887,22892,22889,22904,22913,22941,20318,20395,22947,22962,22982,23016,23004,22925,23001,23002,23077,23071,23057,23068,23049,23066,23104,23148,23113,23093,23094,23138,23146,23194,23228,23230,23243,23234,23229,23267,23255,23270,23273,23254,23290,23291,23308,23307,23318,23346,23248,23338,23350,23358,23363,23365,23360,23377,23381,23386,23387,23397,23401,23408,23411,23413,23416,25992,23418,23424,23427,23462,23480,23491,23495,23497,23508,23504,23524,23526,23522,23518,23525,23531,23536,23542,23539,23557,23559,23560,23565,23571,23584,23586,23592,23608,23609,23617,23622,23630,23635,23632,23631,23409,23660,23662,20066,23670,23673,23692,23697,23700,22939,23723,23739,23734,23740,23735,23749,23742,23751,23769,23785,23805,23802,23789,23948,23786,23819,23829,23831,23900,23839,23835,23825,23828,23842,23834,23833,23832,23884,23890,23886,23883,23916,23923,23926,23943,23940,23938,23970,23965,23980,23982,23997,23952,23991,23996,24009,24013,24019,24018,24022,24027,24043,24050,24053,24075,24090,24089,24081,24091,24118,24119,24132,24131,24128,24142,24151,24148,24159,24162,24164,24135,24181,24182,24186,40636,24191,24224,24257,24258,24264,24272,24271,24278,24291,24285,24282,24283,24290,24289,24296,24297,24300,24305,24307,24304,24308,24312,24318,24323,24329,24413,24412,24331,24337,24342,24361,24365,24376,24385,24392,24396,24398,24367,24401,24406,24407,24409,24417,24429,24435,24439,24451,24450,24447,24458,24456,24465,24455,24478,24473,24472,24480,24488,24493,24508,24534,24571,24548,24568,24561,24541,24755,24575,24609,24672,24601,24592,24617,24590,24625,24603,24597,24619,24614,24591,24634,24666,24641,24682,24695,24671,24650,24646,24653,24675,24643,24676,24642,24684,24683,24665,24705,24717,24807,24707,24730,24708,24731,24726,24727,24722,24743,24715,24801,24760,24800,24787,24756,24560,24765,24774,24757,24792,24909,24853,24838,24822,24823,24832,24820,24826,24835,24865,24827,24817,24845,24846,24903,24894,24872,24871,24906,24895,24892,24876,24884,24893,24898,24900,24947,24951,24920,24921,24922,24939,24948,24943,24933,24945,24927,24925,24915,24949,24985,24982,24967,25004,24980,24986,24970,24977,25003,25006,25036,25034,25033,25079,25032,25027,25030,25018,25035,32633,25037,25062,25059,25078,25082,25076,25087,25085,25084,25086,25088,25096,25097,25101,25100,25108,25115,25118,25121,25130,25134,25136,25138,25139,25153,25166,25182,25187,25179,25184,25192,25212,25218,25225,25214,25234,25235,25238,25300,25219,25236,25303,25297,25275,25295,25343,25286,25812,25288,25308,25292,25290,25282,25287,25243,25289,25356,25326,25329,25383,25346,25352,25327,25333,25424,25406,25421,25628,25423,25494,25486,25472,25515,25462,25507,25487,25481,25503,25525,25451,25449,25534,25577,25536,25542,25571,25545,25554,25590,25540,25622,25652,25606,25619,25638,25654,25885,25623,25640,25615,25703,25711,25718,25678,25898,25749,25747,25765,25769,25736,25788,25818,25810,25797,25799,25787,25816,25794,25841,25831,33289,25824,25825,25260,25827,25839,25900,25846,25844,25842,25850,25856,25853,25880,25884,25861,25892,25891,25899,25908,25909,25911,25910,25912,30027,25928,25942,25941,25933,25944,25950,25949,25970,25976,25986,25987,35722,26011,26015,26027,26039,26051,26054,26049,26052,26060,26066,26075,26073,26080,26081,26097,26482,26122,26115,26107,26483,26165,26166,26164,26140,26191,26180,26185,26177,26206,26205,26212,26215,26216,26207,26210,26224,26243,26248,26254,26249,26244,26264,26269,26305,26297,26313,26302,26300,26308,26296,26326,26330,26336,26175,26342,26345,26352,26357,26359,26383,26390,26398,26406,26407,38712,26414,26431,26422,26433,26424,26423,26438,26462,26464,26457,26467,26468,26505,26480,26537,26492,26474,26508,26507,26534,26529,26501,26551,26607,26548,26604,26547,26601,26552,26596,26590,26589,26594,26606,26553,26574,26566,26599,27292,26654,26694,26665,26688,26701,26674,26702,26803,26667,26713,26723,26743,26751,26783,26767,26797,26772,26781,26779,26755,27310,26809,26740,26805,26784,26810,26895,26765,26750,26881,26826,26888,26840,26914,26918,26849,26892,26829,26836,26855,26837,26934,26898,26884,26839,26851,26917,26873,26848,26863,26920,26922,26906,26915,26913,26822,27001,26999,26972,27000,26987,26964,27006,26990,26937,26996,26941,26969,26928,26977,26974,26973,27009,26986,27058,27054,27088,27071,27073,27091,27070,27086,23528,27082,27101,27067,27075,27047,27182,27025,27040,27036,27029,27060,27102,27112,27138,27163,27135,27402,27129,27122,27111,27141,27057,27166,27117,27156,27115,27146,27154,27329,27171,27155,27204,27148,27250,27190,27256,27207,27234,27225,27238,27208,27192,27170,27280,27277,27296,27268,27298,27299,27287,34327,27323,27331,27330,27320,27315,27308,27358,27345,27359,27306,27354,27370,27387,27397,34326,27386,27410,27414,39729,27423,27448,27447,30428,27449,39150,27463,27459,27465,27472,27481,27476,27483,27487,27489,27512,27513,27519,27520,27524,27523,27533,27544,27541,27550,27556,27562,27563,27567,27570,27569,27571,27575,27580,27590,27595,27603,27615,27628,27627,27635,27631,40638,27656,27667,27668,27675,27684,27683,27742,27733,27746,27754,27778,27789,27802,27777,27803,27774,27752,27763,27794,27792,27844,27889,27859,27837,27863,27845,27869,27822,27825,27838,27834,27867,27887,27865,27882,27935,34893,27958,27947,27965,27960,27929,27957,27955,27922,27916,28003,28051,28004,27994,28025,27993,28046,28053,28644,28037,28153,28181,28170,28085,28103,28134,28088,28102,28140,28126,28108,28136,28114,28101,28154,28121,28132,28117,28138,28142,28205,28270,28206,28185,28274,28255,28222,28195,28267,28203,28278,28237,28191,28227,28218,28238,28196,28415,28189,28216,28290,28330,28312,28361,28343,28371,28349,28335,28356,28338,28372,28373,28303,28325,28354,28319,28481,28433,28748,28396,28408,28414,28479,28402,28465,28399,28466,28364,28478,28435,28407,28550,28538,28536,28545,28544,28527,28507,28659,28525,28546,28540,28504,28558,28561,28610,28518,28595,28579,28577,28580,28601,28614,28586,28639,28629,28652,28628,28632,28657,28654,28635,28681,28683,28666,28689,28673,28687,28670,28699,28698,28532,28701,28696,28703,28720,28734,28722,28753,28771,28825,28818,28847,28913,28844,28856,28851,28846,28895,28875,28893,28889,28937,28925,28956,28953,29029,29013,29064,29030,29026,29004,29014,29036,29071,29179,29060,29077,29096,29100,29143,29113,29118,29138,29129,29140,29134,29152,29164,29159,29173,29180,29177,29183,29197,29200,29211,29224,29229,29228,29232,29234,29243,29244,29247,29248,29254,29259,29272,29300,29310,29314,29313,29319,29330,29334,29346,29351,29369,29362,29379,29382,29380,29390,29394,29410,29408,29409,29433,29431,20495,29463,29450,29468,29462,29469,29492,29487,29481,29477,29502,29518,29519,40664,29527,29546,29544,29552,29560,29557,29563,29562,29640,29619,29646,29627,29632,29669,29678,29662,29858,29701,29807,29733,29688,29746,29754,29781,29759,29791,29785,29761,29788,29801,29808,29795,29802,29814,29822,29835,29854,29863,29898,29903,29908,29681,29920,29923,29927,29929,29934,29938,29936,29937,29944,29943,29956,29955,29957,29964,29966,29965,29973,29971,29982,29990,29996,30012,30020,30029,30026,30025,30043,30022,30042,30057,30052,30055,30059,30061,30072,30070,30086,30087,30068,30090,30089,30082,30100,30106,30109,30117,30115,30146,30131,30147,30133,30141,30136,30140,30129,30157,30154,30162,30169,30179,30174,30206,30207,30204,30209,30192,30202,30194,30195,30219,30221,30217,30239,30247,30240,30241,30242,30244,30260,30256,30267,30279,30280,30278,30300,30296,30305,30306,30312,30313,30314,30311,30316,30320,30322,30326,30328,30332,30336,30339,30344,30347,30350,30358,30355,30361,30362,30384,30388,30392,30393,30394,30402,30413,30422,30418,30430,30433,30437,30439,30442,34351,30459,30472,30471,30468,30505,30500,30494,30501,30502,30491,30519,30520,30535,30554,30568,30571,30555,30565,30591,30590,30585,30606,30603,30609,30624,30622,30640,30646,30649,30655,30652,30653,30651,30663,30669,30679,30682,30684,30691,30702,30716,30732,30738,31014,30752,31018,30789,30862,30836,30854,30844,30874,30860,30883,30901,30890,30895,30929,30918,30923,30932,30910,30908,30917,30922,30956,30951,30938,30973,30964,30983,30994,30993,31001,31020,31019,31040,31072,31063,31071,31066,31061,31059,31098,31103,31114,31133,31143,40779,31146,31150,31155,31161,31162,31177,31189,31207,31212,31201,31203,31240,31245,31256,31257,31264,31263,31104,31281,31291,31294,31287,31299,31319,31305,31329,31330,31337,40861,31344,31353,31357,31368,31383,31381,31384,31382,31401,31432,31408,31414,31429,31428,31423,36995,31431,31434,31437,31439,31445,31443,31449,31450,31453,31457,31458,31462,31469,31472,31490,31503,31498,31494,31539,31512,31513,31518,31541,31528,31542,31568,31610,31492,31565,31499,31564,31557,31605,31589,31604,31591,31600,31601,31596,31598,31645,31640,31647,31629,31644,31642,31627,31634,31631,31581,31641,31691,31681,31692,31695,31668,31686,31709,31721,31761,31764,31718,31717,31840,31744,31751,31763,31731,31735,31767,31757,31734,31779,31783,31786,31775,31799,31787,31805,31820,31811,31828,31823,31808,31824,31832,31839,31844,31830,31845,31852,31861,31875,31888,31908,31917,31906,31915,31905,31912,31923,31922,31921,31918,31929,31933,31936,31941,31938,31960,31954,31964,31970,39739,31983,31986,31988,31990,31994,32006,32002,32028,32021,32010,32069,32075,32046,32050,32063,32053,32070,32115,32086,32078,32114,32104,32110,32079,32099,32147,32137,32091,32143,32125,32155,32186,32174,32163,32181,32199,32189,32171,32317,32162,32175,32220,32184,32159,32176,32216,32221,32228,32222,32251,32242,32225,32261,32266,32291,32289,32274,32305,32287,32265,32267,32290,32326,32358,32315,32309,32313,32323,32311,32306,32314,32359,32349,32342,32350,32345,32346,32377,32362,32361,32380,32379,32387,32213,32381,36782,32383,32392,32393,32396,32402,32400,32403,32404,32406,32398,32411,32412,32568,32570,32581,32588,32589,32590,32592,32593,32597,32596,32600,32607,32608,32616,32617,32615,32632,32642,32646,32643,32648,32647,32652,32660,32670,32669,32666,32675,32687,32690,32697,32686,32694,32696,35697,32709,32710,32714,32725,32724,32737,32742,32745,32755,32761,39132,32774,32772,32779,32786,32792,32793,32796,32801,32808,32831,32827,32842,32838,32850,32856,32858,32863,32866,32872,32883,32882,32880,32886,32889,32893,32895,32900,32902,32901,32923,32915,32922,32941,20880,32940,32987,32997,32985,32989,32964,32986,32982,33033,33007,33009,33051,33065,33059,33071,33099,38539,33094,33086,33107,33105,33020,33137,33134,33125,33126,33140,33155,33160,33162,33152,33154,33184,33173,33188,33187,33119,33171,33193,33200,33205,33214,33208,33213,33216,33218,33210,33225,33229,33233,33241,33240,33224,33242,33247,33248,33255,33274,33275,33278,33281,33282,33285,33287,33290,33293,33296,33302,33321,33323,33336,33331,33344,33369,33368,33373,33370,33375,33380,33378,33384,33386,33387,33326,33393,33399,33400,33406,33421,33426,33451,33439,33467,33452,33505,33507,33503,33490,33524,33523,33530,33683,33539,33531,33529,33502,33542,33500,33545,33497,33589,33588,33558,33586,33585,33600,33593,33616,33605,33583,33579,33559,33560,33669,33690,33706,33695,33698,33686,33571,33678,33671,33674,33660,33717,33651,33653,33696,33673,33704,33780,33811,33771,33742,33789,33795,33752,33803,33729,33783,33799,33760,33778,33805,33826,33824,33725,33848,34054,33787,33901,33834,33852,34138,33924,33911,33899,33965,33902,33922,33897,33862,33836,33903,33913,33845,33994,33890,33977,33983,33951,34009,33997,33979,34010,34000,33985,33990,34006,33953,34081,34047,34036,34071,34072,34092,34079,34069,34068,34044,34112,34147,34136,34120,34113,34306,34123,34133,34176,34212,34184,34193,34186,34216,34157,34196,34203,34282,34183,34204,34167,34174,34192,34249,34234,34255,34233,34256,34261,34269,34277,34268,34297,34314,34323,34315,34302,34298,34310,34338,34330,34352,34367,34381,20053,34388,34399,34407,34417,34451,34467,34473,34474,34443,34444,34486,34479,34500,34502,34480,34505,34851,34475,34516,34526,34537,34540,34527,34523,34543,34578,34566,34568,34560,34563,34555,34577,34569,34573,34553,34570,34612,34623,34615,34619,34597,34601,34586,34656,34655,34680,34636,34638,34676,34647,34664,34670,34649,34643,34659,34666,34821,34722,34719,34690,34735,34763,34749,34752,34768,38614,34731,34756,34739,34759,34758,34747,34799,34802,34784,34831,34829,34814,34806,34807,34830,34770,34833,34838,34837,34850,34849,34865,34870,34873,34855,34875,34884,34882,34898,34905,34910,34914,34923,34945,34942,34974,34933,34941,34997,34930,34946,34967,34962,34990,34969,34978,34957,34980,34992,35007,34993,35011,35012,35028,35032,35033,35037,35065,35074,35068,35060,35048,35058,35076,35084,35082,35091,35139,35102,35109,35114,35115,35137,35140,35131,35126,35128,35148,35101,35168,35166,35174,35172,35181,35178,35183,35188,35191,35198,35203,35208,35210,35219,35224,35233,35241,35238,35244,35247,35250,35258,35261,35263,35264,35290,35292,35293,35303,35316,35320,35331,35350,35344,35340,35355,35357,35365,35382,35393,35419,35410,35398,35400,35452,35437,35436,35426,35461,35458,35460,35496,35489,35473,35493,35494,35482,35491,35524,35533,35522,35546,35563,35571,35559,35556,35569,35604,35552,35554,35575,35550,35547,35596,35591,35610,35553,35606,35600,35607,35616,35635,38827,35622,35627,35646,35624,35649,35660,35663,35662,35657,35670,35675,35674,35691,35679,35692,35695,35700,35709,35712,35724,35726,35730,35731,35734,35737,35738,35898,35905,35903,35912,35916,35918,35920,35925,35938,35948,35960,35962,35970,35977,35973,35978,35981,35982,35988,35964,35992,25117,36013,36010,36029,36018,36019,36014,36022,36040,36033,36068,36067,36058,36093,36090,36091,36100,36101,36106,36103,36111,36109,36112,40782,36115,36045,36116,36118,36199,36205,36209,36211,36225,36249,36290,36286,36282,36303,36314,36310,36300,36315,36299,36330,36331,36319,36323,36348,36360,36361,36351,36381,36382,36368,36383,36418,36405,36400,36404,36426,36423,36425,36428,36432,36424,36441,36452,36448,36394,36451,36437,36470,36466,36476,36481,36487,36485,36484,36491,36490,36499,36497,36500,36505,36522,36513,36524,36528,36550,36529,36542,36549,36552,36555,36571,36579,36604,36603,36587,36606,36618,36613,36629,36626,36633,36627,36636,36639,36635,36620,36646,36659,36667,36665,36677,36674,36670,36684,36681,36678,36686,36695,36700,36706,36707,36708,36764,36767,36771,36781,36783,36791,36826,36837,36834,36842,36847,36999,36852,36869,36857,36858,36881,36885,36897,36877,36894,36886,36875,36903,36918,36917,36921,36856,36943,36944,36945,36946,36878,36937,36926,36950,36952,36958,36968,36975,36982,38568,36978,36994,36989,36993,36992,37002,37001,37007,37032,37039,37041,37045,37090,37092,25160,37083,37122,37138,37145,37170,37168,37194,37206,37208,37219,37221,37225,37235,37234,37259,37257,37250,37282,37291,37295,37290,37301,37300,37306,37312,37313,37321,37323,37328,37334,37343,37345,37339,37372,37365,37366,37406,37375,37396,37420,37397,37393,37470,37463,37445,37449,37476,37448,37525,37439,37451,37456,37532,37526,37523,37531,37466,37583,37561,37559,37609,37647,37626,37700,37678,37657,37666,37658,37667,37690,37685,37691,37724,37728,37756,37742,37718,37808,37804,37805,37780,37817,37846,37847,37864,37861,37848,37827,37853,37840,37832,37860,37914,37908,37907,37891,37895,37904,37942,37931,37941,37921,37946,37953,37970,37956,37979,37984,37986,37982,37994,37417,38000,38005,38007,38013,37978,38012,38014,38017,38015,38274,38279,38282,38292,38294,38296,38297,38304,38312,38311,38317,38332,38331,38329,38334,38346,28662,38339,38349,38348,38357,38356,38358,38364,38369,38373,38370,38433,38440,38446,38447,38466,38476,38479,38475,38519,38492,38494,38493,38495,38502,38514,38508,38541,38552,38549,38551,38570,38567,38577,38578,38576,38580,38582,38584,38585,38606,38603,38601,38605,35149,38620,38669,38613,38649,38660,38662,38664,38675,38670,38673,38671,38678,38681,38692,38698,38704,38713,38717,38718,38724,38726,38728,38722,38729,38748,38752,38756,38758,38760,21202,38763,38769,38777,38789,38780,38785,38778,38790,38795,38799,38800,38812,38824,38822,38819,38835,38836,38851,38854,38856,38859,38876,38893,40783,38898,31455,38902,38901,38927,38924,38968,38948,38945,38967,38973,38982,38991,38987,39019,39023,39024,39025,39028,39027,39082,39087,39089,39094,39108,39107,39110,39145,39147,39171,39177,39186,39188,39192,39201,39197,39198,39204,39200,39212,39214,39229,39230,39234,39241,39237,39248,39243,39249,39250,39244,39253,39319,39320,39333,39341,39342,39356,39391,39387,39389,39384,39377,39405,39406,39409,39410,39419,39416,39425,39439,39429,39394,39449,39467,39479,39493,39490,39488,39491,39486,39509,39501,39515,39511,39519,39522,39525,39524,39529,39531,39530,39597,39600,39612,39616,39631,39633,39635,39636,39646,39647,39650,39651,39654,39663,39659,39662,39668,39665,39671,39675,39686,39704,39706,39711,39714,39715,39717,39719,39720,39721,39722,39726,39727,39730,39748,39747,39759,39757,39758,39761,39768,39796,39827,39811,39825,39830,39831,39839,39840,39848,39860,39872,39882,39865,39878,39887,39889,39890,39907,39906,39908,39892,39905,39994,39922,39921,39920,39957,39956,39945,39955,39948,39942,39944,39954,39946,39940,39982,39963,39973,39972,39969,39984,40007,39986,40006,39998,40026,40032,40039,40054,40056,40167,40172,40176,40201,40200,40171,40195,40198,40234,40230,40367,40227,40223,40260,40213,40210,40257,40255,40254,40262,40264,40285,40286,40292,40273,40272,40281,40306,40329,40327,40363,40303,40314,40346,40356,40361,40370,40388,40385,40379,40376,40378,40390,40399,40386,40409,40403,40440,40422,40429,40431,40445,40474,40475,40478,40565,40569,40573,40577,40584,40587,40588,40594,40597,40593,40605,40613,40617,40632,40618,40621,38753,40652,40654,40655,40656,40660,40668,40670,40669,40672,40677,40680,40687,40692,40694,40695,40697,40699,40700,40701,40711,40712,30391,40725,40737,40748,40766,40778,40786,40788,40803,40799,40800,40801,40806,40807,40812,40810,40823,40818,40822,40853,40860,40864,22575,27079,36953,29796,20956,29081,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,65506,65508,65287,65282,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,65506,65508,65287,65282,12849,8470,8481,8757,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\n  \"jis0212\":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,728,711,184,729,733,175,731,730,65374,900,901,null,null,null,null,null,null,null,null,161,166,191,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,186,170,169,174,8482,164,8470,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,902,904,905,906,938,null,908,null,910,939,null,911,null,null,null,null,940,941,942,943,970,912,972,962,973,971,944,974,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1038,1039,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1118,1119,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,198,272,null,294,null,306,null,321,319,null,330,216,338,null,358,222,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,230,273,240,295,305,307,312,322,320,329,331,248,339,223,359,254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,193,192,196,194,258,461,256,260,197,195,262,264,268,199,266,270,201,200,203,202,282,278,274,280,null,284,286,290,288,292,205,204,207,206,463,304,298,302,296,308,310,313,317,315,323,327,325,209,211,210,214,212,465,336,332,213,340,344,342,346,348,352,350,356,354,218,217,220,219,364,467,368,362,370,366,360,471,475,473,469,372,221,376,374,377,381,379,null,null,null,null,null,null,null,225,224,228,226,259,462,257,261,229,227,263,265,269,231,267,271,233,232,235,234,283,279,275,281,501,285,287,null,289,293,237,236,239,238,464,null,299,303,297,309,311,314,318,316,324,328,326,241,243,242,246,244,466,337,333,245,341,345,343,347,349,353,351,357,355,250,249,252,251,365,468,369,363,371,367,361,472,476,474,470,373,253,255,375,378,382,380,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19970,19972,19973,19980,19986,19999,20003,20004,20008,20011,20014,20015,20016,20021,20032,20033,20036,20039,20049,20058,20060,20067,20072,20073,20084,20085,20089,20095,20109,20118,20119,20125,20143,20153,20163,20176,20186,20187,20192,20193,20194,20200,20207,20209,20211,20213,20221,20222,20223,20224,20226,20227,20232,20235,20236,20242,20245,20246,20247,20249,20270,20273,20320,20275,20277,20279,20281,20283,20286,20288,20290,20296,20297,20299,20300,20306,20308,20310,20312,20319,20323,20330,20332,20334,20337,20343,20344,20345,20346,20349,20350,20353,20354,20356,20357,20361,20362,20364,20366,20368,20370,20371,20372,20375,20377,20378,20382,20383,20402,20407,20409,20411,20412,20413,20414,20416,20417,20421,20422,20424,20425,20427,20428,20429,20431,20434,20444,20448,20450,20464,20466,20476,20477,20479,20480,20481,20484,20487,20490,20492,20494,20496,20499,20503,20504,20507,20508,20509,20510,20514,20519,20526,20528,20530,20531,20533,20544,20545,20546,20549,20550,20554,20556,20558,20561,20562,20563,20567,20569,20575,20576,20578,20579,20582,20583,20586,20589,20592,20593,20539,20609,20611,20612,20614,20618,20622,20623,20624,20626,20627,20628,20630,20635,20636,20638,20639,20640,20641,20642,20650,20655,20656,20665,20666,20669,20672,20675,20676,20679,20684,20686,20688,20691,20692,20696,20700,20701,20703,20706,20708,20710,20712,20713,20719,20721,20726,20730,20734,20739,20742,20743,20744,20747,20748,20749,20750,20722,20752,20759,20761,20763,20764,20765,20766,20771,20775,20776,20780,20781,20783,20785,20787,20788,20789,20792,20793,20802,20810,20815,20819,20821,20823,20824,20831,20836,20838,20862,20867,20868,20875,20878,20888,20893,20897,20899,20909,20920,20922,20924,20926,20927,20930,20936,20943,20945,20946,20947,20949,20952,20958,20962,20965,20974,20978,20979,20980,20983,20993,20994,20997,21010,21011,21013,21014,21016,21026,21032,21041,21042,21045,21052,21061,21065,21077,21079,21080,21082,21084,21087,21088,21089,21094,21102,21111,21112,21113,21120,21122,21125,21130,21132,21139,21141,21142,21143,21144,21146,21148,21156,21157,21158,21159,21167,21168,21174,21175,21176,21178,21179,21181,21184,21188,21190,21192,21196,21199,21201,21204,21206,21211,21212,21217,21221,21224,21225,21226,21228,21232,21233,21236,21238,21239,21248,21251,21258,21259,21260,21265,21267,21272,21275,21276,21278,21279,21285,21287,21288,21289,21291,21292,21293,21296,21298,21301,21308,21309,21310,21314,21324,21323,21337,21339,21345,21347,21349,21356,21357,21362,21369,21374,21379,21383,21384,21390,21395,21396,21401,21405,21409,21412,21418,21419,21423,21426,21428,21429,21431,21432,21434,21437,21440,21445,21455,21458,21459,21461,21466,21469,21470,21472,21478,21479,21493,21506,21523,21530,21537,21543,21544,21546,21551,21553,21556,21557,21571,21572,21575,21581,21583,21598,21602,21604,21606,21607,21609,21611,21613,21614,21620,21631,21633,21635,21637,21640,21641,21645,21649,21653,21654,21660,21663,21665,21670,21671,21673,21674,21677,21678,21681,21687,21689,21690,21691,21695,21702,21706,21709,21710,21728,21738,21740,21743,21750,21756,21758,21759,21760,21761,21765,21768,21769,21772,21773,21774,21781,21802,21803,21810,21813,21814,21819,21820,21821,21825,21831,21833,21834,21837,21840,21841,21848,21850,21851,21854,21856,21857,21860,21862,21887,21889,21890,21894,21896,21902,21903,21905,21906,21907,21908,21911,21923,21924,21933,21938,21951,21953,21955,21958,21961,21963,21964,21966,21969,21970,21971,21975,21976,21979,21982,21986,21993,22006,22015,22021,22024,22026,22029,22030,22031,22032,22033,22034,22041,22060,22064,22067,22069,22071,22073,22075,22076,22077,22079,22080,22081,22083,22084,22086,22089,22091,22093,22095,22100,22110,22112,22113,22114,22115,22118,22121,22125,22127,22129,22130,22133,22148,22149,22152,22155,22156,22165,22169,22170,22173,22174,22175,22182,22183,22184,22185,22187,22188,22189,22193,22195,22199,22206,22213,22217,22218,22219,22223,22224,22220,22221,22233,22236,22237,22239,22241,22244,22245,22246,22247,22248,22257,22251,22253,22262,22263,22273,22274,22279,22282,22284,22289,22293,22298,22299,22301,22304,22306,22307,22308,22309,22313,22314,22316,22318,22319,22323,22324,22333,22334,22335,22341,22342,22348,22349,22354,22370,22373,22375,22376,22379,22381,22382,22383,22384,22385,22387,22388,22389,22391,22393,22394,22395,22396,22398,22401,22403,22412,22420,22423,22425,22426,22428,22429,22430,22431,22433,22421,22439,22440,22441,22444,22456,22461,22471,22472,22476,22479,22485,22493,22494,22500,22502,22503,22505,22509,22512,22517,22518,22520,22525,22526,22527,22531,22532,22536,22537,22497,22540,22541,22555,22558,22559,22560,22566,22567,22573,22578,22585,22591,22601,22604,22605,22607,22608,22613,22623,22625,22628,22631,22632,22648,22652,22655,22656,22657,22663,22664,22665,22666,22668,22669,22671,22672,22676,22678,22685,22688,22689,22690,22694,22697,22705,22706,22724,22716,22722,22728,22733,22734,22736,22738,22740,22742,22746,22749,22753,22754,22761,22771,22789,22790,22795,22796,22802,22803,22804,34369,22813,22817,22819,22820,22824,22831,22832,22835,22837,22838,22847,22851,22854,22866,22867,22873,22875,22877,22878,22879,22881,22883,22891,22893,22895,22898,22901,22902,22905,22907,22908,22923,22924,22926,22930,22933,22935,22943,22948,22951,22957,22958,22959,22960,22963,22967,22970,22972,22977,22979,22980,22984,22986,22989,22994,23005,23006,23007,23011,23012,23015,23022,23023,23025,23026,23028,23031,23040,23044,23052,23053,23054,23058,23059,23070,23075,23076,23079,23080,23082,23085,23088,23108,23109,23111,23112,23116,23120,23125,23134,23139,23141,23143,23149,23159,23162,23163,23166,23179,23184,23187,23190,23193,23196,23198,23199,23200,23202,23207,23212,23217,23218,23219,23221,23224,23226,23227,23231,23236,23238,23240,23247,23258,23260,23264,23269,23274,23278,23285,23286,23293,23296,23297,23304,23319,23348,23321,23323,23325,23329,23333,23341,23352,23361,23371,23372,23378,23382,23390,23400,23406,23407,23420,23421,23422,23423,23425,23428,23430,23434,23438,23440,23441,23443,23444,23446,23464,23465,23468,23469,23471,23473,23474,23479,23482,23484,23488,23489,23501,23503,23510,23511,23512,23513,23514,23520,23535,23537,23540,23549,23564,23575,23582,23583,23587,23590,23593,23595,23596,23598,23600,23602,23605,23606,23641,23642,23644,23650,23651,23655,23656,23657,23661,23664,23668,23669,23674,23675,23676,23677,23687,23688,23690,23695,23698,23709,23711,23712,23714,23715,23718,23722,23730,23732,23733,23738,23753,23755,23762,23773,23767,23790,23793,23794,23796,23809,23814,23821,23826,23851,23843,23844,23846,23847,23857,23860,23865,23869,23871,23874,23875,23878,23880,23893,23889,23897,23882,23903,23904,23905,23906,23908,23914,23917,23920,23929,23930,23934,23935,23937,23939,23944,23946,23954,23955,23956,23957,23961,23963,23967,23968,23975,23979,23984,23988,23992,23993,24003,24007,24011,24016,24014,24024,24025,24032,24036,24041,24056,24057,24064,24071,24077,24082,24084,24085,24088,24095,24096,24110,24104,24114,24117,24126,24139,24144,24137,24145,24150,24152,24155,24156,24158,24168,24170,24171,24172,24173,24174,24176,24192,24203,24206,24226,24228,24229,24232,24234,24236,24241,24243,24253,24254,24255,24262,24268,24267,24270,24273,24274,24276,24277,24284,24286,24293,24299,24322,24326,24327,24328,24334,24345,24348,24349,24353,24354,24355,24356,24360,24363,24364,24366,24368,24372,24374,24379,24381,24383,24384,24388,24389,24391,24397,24400,24404,24408,24411,24416,24419,24420,24423,24431,24434,24436,24437,24440,24442,24445,24446,24457,24461,24463,24470,24476,24477,24482,24487,24491,24484,24492,24495,24496,24497,24504,24516,24519,24520,24521,24523,24528,24529,24530,24531,24532,24542,24545,24546,24552,24553,24554,24556,24557,24558,24559,24562,24563,24566,24570,24572,24583,24586,24589,24595,24596,24599,24600,24602,24607,24612,24621,24627,24629,24640,24647,24648,24649,24652,24657,24660,24662,24663,24669,24673,24679,24689,24702,24703,24706,24710,24712,24714,24718,24721,24723,24725,24728,24733,24734,24738,24740,24741,24744,24752,24753,24759,24763,24766,24770,24772,24776,24777,24778,24779,24782,24783,24788,24789,24793,24795,24797,24798,24802,24805,24818,24821,24824,24828,24829,24834,24839,24842,24844,24848,24849,24850,24851,24852,24854,24855,24857,24860,24862,24866,24874,24875,24880,24881,24885,24886,24887,24889,24897,24901,24902,24905,24926,24928,24940,24946,24952,24955,24956,24959,24960,24961,24963,24964,24971,24973,24978,24979,24983,24984,24988,24989,24991,24992,24997,25000,25002,25005,25016,25017,25020,25024,25025,25026,25038,25039,25045,25052,25053,25054,25055,25057,25058,25063,25065,25061,25068,25069,25071,25089,25091,25092,25095,25107,25109,25116,25120,25122,25123,25127,25129,25131,25145,25149,25154,25155,25156,25158,25164,25168,25169,25170,25172,25174,25178,25180,25188,25197,25199,25203,25210,25213,25229,25230,25231,25232,25254,25256,25267,25270,25271,25274,25278,25279,25284,25294,25301,25302,25306,25322,25330,25332,25340,25341,25347,25348,25354,25355,25357,25360,25363,25366,25368,25385,25386,25389,25397,25398,25401,25404,25409,25410,25411,25412,25414,25418,25419,25422,25426,25427,25428,25432,25435,25445,25446,25452,25453,25457,25460,25461,25464,25468,25469,25471,25474,25476,25479,25482,25488,25492,25493,25497,25498,25502,25508,25510,25517,25518,25519,25533,25537,25541,25544,25550,25553,25555,25556,25557,25564,25568,25573,25578,25580,25586,25587,25589,25592,25593,25609,25610,25616,25618,25620,25624,25630,25632,25634,25636,25637,25641,25642,25647,25648,25653,25661,25663,25675,25679,25681,25682,25683,25684,25690,25691,25692,25693,25695,25696,25697,25699,25709,25715,25716,25723,25725,25733,25735,25743,25744,25745,25752,25753,25755,25757,25759,25761,25763,25766,25768,25772,25779,25789,25790,25791,25796,25801,25802,25803,25804,25806,25808,25809,25813,25815,25828,25829,25833,25834,25837,25840,25845,25847,25851,25855,25857,25860,25864,25865,25866,25871,25875,25876,25878,25881,25883,25886,25887,25890,25894,25897,25902,25905,25914,25916,25917,25923,25927,25929,25936,25938,25940,25951,25952,25959,25963,25978,25981,25985,25989,25994,26002,26005,26008,26013,26016,26019,26022,26030,26034,26035,26036,26047,26050,26056,26057,26062,26064,26068,26070,26072,26079,26096,26098,26100,26101,26105,26110,26111,26112,26116,26120,26121,26125,26129,26130,26133,26134,26141,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26161,26163,26169,26167,26176,26181,26182,26186,26188,26193,26190,26199,26200,26201,26203,26204,26208,26209,26363,26218,26219,26220,26238,26227,26229,26239,26231,26232,26233,26235,26240,26236,26251,26252,26253,26256,26258,26265,26266,26267,26268,26271,26272,26276,26285,26289,26290,26293,26299,26303,26304,26306,26307,26312,26316,26318,26319,26324,26331,26335,26344,26347,26348,26350,26362,26373,26375,26382,26387,26393,26396,26400,26402,26419,26430,26437,26439,26440,26444,26452,26453,26461,26470,26476,26478,26484,26486,26491,26497,26500,26510,26511,26513,26515,26518,26520,26521,26523,26544,26545,26546,26549,26555,26556,26557,26617,26560,26562,26563,26565,26568,26569,26578,26583,26585,26588,26593,26598,26608,26610,26614,26615,26706,26644,26649,26653,26655,26664,26663,26668,26669,26671,26672,26673,26675,26683,26687,26692,26693,26698,26700,26709,26711,26712,26715,26731,26734,26735,26736,26737,26738,26741,26745,26746,26747,26748,26754,26756,26758,26760,26774,26776,26778,26780,26785,26787,26789,26793,26794,26798,26802,26811,26821,26824,26828,26831,26832,26833,26835,26838,26841,26844,26845,26853,26856,26858,26859,26860,26861,26864,26865,26869,26870,26875,26876,26877,26886,26889,26890,26896,26897,26899,26902,26903,26929,26931,26933,26936,26939,26946,26949,26953,26958,26967,26971,26979,26980,26981,26982,26984,26985,26988,26992,26993,26994,27002,27003,27007,27008,27021,27026,27030,27032,27041,27045,27046,27048,27051,27053,27055,27063,27064,27066,27068,27077,27080,27089,27094,27095,27106,27109,27118,27119,27121,27123,27125,27134,27136,27137,27139,27151,27153,27157,27162,27165,27168,27172,27176,27184,27186,27188,27191,27195,27198,27199,27205,27206,27209,27210,27214,27216,27217,27218,27221,27222,27227,27236,27239,27242,27249,27251,27262,27265,27267,27270,27271,27273,27275,27281,27291,27293,27294,27295,27301,27307,27311,27312,27313,27316,27325,27326,27327,27334,27337,27336,27340,27344,27348,27349,27350,27356,27357,27364,27367,27372,27376,27377,27378,27388,27389,27394,27395,27398,27399,27401,27407,27408,27409,27415,27419,27422,27428,27432,27435,27436,27439,27445,27446,27451,27455,27462,27466,27469,27474,27478,27480,27485,27488,27495,27499,27502,27504,27509,27517,27518,27522,27525,27543,27547,27551,27552,27554,27555,27560,27561,27564,27565,27566,27568,27576,27577,27581,27582,27587,27588,27593,27596,27606,27610,27617,27619,27622,27623,27630,27633,27639,27641,27647,27650,27652,27653,27657,27661,27662,27664,27666,27673,27679,27686,27687,27688,27692,27694,27699,27701,27702,27706,27707,27711,27722,27723,27725,27727,27730,27732,27737,27739,27740,27755,27757,27759,27764,27766,27768,27769,27771,27781,27782,27783,27785,27796,27797,27799,27800,27804,27807,27824,27826,27828,27842,27846,27853,27855,27856,27857,27858,27860,27862,27866,27868,27872,27879,27881,27883,27884,27886,27890,27892,27908,27911,27914,27918,27919,27921,27923,27930,27942,27943,27944,27751,27950,27951,27953,27961,27964,27967,27991,27998,27999,28001,28005,28007,28015,28016,28028,28034,28039,28049,28050,28052,28054,28055,28056,28074,28076,28084,28087,28089,28093,28095,28100,28104,28106,28110,28111,28118,28123,28125,28127,28128,28130,28133,28137,28143,28144,28148,28150,28156,28160,28164,28190,28194,28199,28210,28214,28217,28219,28220,28228,28229,28232,28233,28235,28239,28241,28242,28243,28244,28247,28252,28253,28254,28258,28259,28264,28275,28283,28285,28301,28307,28313,28320,28327,28333,28334,28337,28339,28347,28351,28352,28353,28355,28359,28360,28362,28365,28366,28367,28395,28397,28398,28409,28411,28413,28420,28424,28426,28428,28429,28438,28440,28442,28443,28454,28457,28458,28463,28464,28467,28470,28475,28476,28461,28495,28497,28498,28499,28503,28505,28506,28509,28510,28513,28514,28520,28524,28541,28542,28547,28551,28552,28555,28556,28557,28560,28562,28563,28564,28566,28570,28575,28576,28581,28582,28583,28584,28590,28591,28592,28597,28598,28604,28613,28615,28616,28618,28634,28638,28648,28649,28656,28661,28665,28668,28669,28672,28677,28678,28679,28685,28695,28704,28707,28719,28724,28727,28729,28732,28739,28740,28744,28745,28746,28747,28756,28757,28765,28766,28750,28772,28773,28780,28782,28789,28790,28798,28801,28805,28806,28820,28821,28822,28823,28824,28827,28836,28843,28848,28849,28852,28855,28874,28881,28883,28884,28885,28886,28888,28892,28900,28922,28931,28932,28933,28934,28935,28939,28940,28943,28958,28960,28971,28973,28975,28976,28977,28984,28993,28997,28998,28999,29002,29003,29008,29010,29015,29018,29020,29022,29024,29032,29049,29056,29061,29063,29068,29074,29082,29083,29088,29090,29103,29104,29106,29107,29114,29119,29120,29121,29124,29131,29132,29139,29142,29145,29146,29148,29176,29182,29184,29191,29192,29193,29203,29207,29210,29213,29215,29220,29227,29231,29236,29240,29241,29249,29250,29251,29253,29262,29263,29264,29267,29269,29270,29274,29276,29278,29280,29283,29288,29291,29294,29295,29297,29303,29304,29307,29308,29311,29316,29321,29325,29326,29331,29339,29352,29357,29358,29361,29364,29374,29377,29383,29385,29388,29397,29398,29400,29407,29413,29427,29428,29434,29435,29438,29442,29444,29445,29447,29451,29453,29458,29459,29464,29465,29470,29474,29476,29479,29480,29484,29489,29490,29493,29498,29499,29501,29507,29517,29520,29522,29526,29528,29533,29534,29535,29536,29542,29543,29545,29547,29548,29550,29551,29553,29559,29561,29564,29568,29569,29571,29573,29574,29582,29584,29587,29589,29591,29592,29596,29598,29599,29600,29602,29605,29606,29610,29611,29613,29621,29623,29625,29628,29629,29631,29637,29638,29641,29643,29644,29647,29650,29651,29654,29657,29661,29665,29667,29670,29671,29673,29684,29685,29687,29689,29690,29691,29693,29695,29696,29697,29700,29703,29706,29713,29722,29723,29732,29734,29736,29737,29738,29739,29740,29741,29742,29743,29744,29745,29753,29760,29763,29764,29766,29767,29771,29773,29777,29778,29783,29789,29794,29798,29799,29800,29803,29805,29806,29809,29810,29824,29825,29829,29830,29831,29833,29839,29840,29841,29842,29848,29849,29850,29852,29855,29856,29857,29859,29862,29864,29865,29866,29867,29870,29871,29873,29874,29877,29881,29883,29887,29896,29897,29900,29904,29907,29912,29914,29915,29918,29919,29924,29928,29930,29931,29935,29940,29946,29947,29948,29951,29958,29970,29974,29975,29984,29985,29988,29991,29993,29994,29999,30006,30009,30013,30014,30015,30016,30019,30023,30024,30030,30032,30034,30039,30046,30047,30049,30063,30065,30073,30074,30075,30076,30077,30078,30081,30085,30096,30098,30099,30101,30105,30108,30114,30116,30132,30138,30143,30144,30145,30148,30150,30156,30158,30159,30167,30172,30175,30176,30177,30180,30183,30188,30190,30191,30193,30201,30208,30210,30211,30212,30215,30216,30218,30220,30223,30226,30227,30229,30230,30233,30235,30236,30237,30238,30243,30245,30246,30249,30253,30258,30259,30261,30264,30265,30266,30268,30282,30272,30273,30275,30276,30277,30281,30283,30293,30297,30303,30308,30309,30317,30318,30319,30321,30324,30337,30341,30348,30349,30357,30363,30364,30365,30367,30368,30370,30371,30372,30373,30374,30375,30376,30378,30381,30397,30401,30405,30409,30411,30412,30414,30420,30425,30432,30438,30440,30444,30448,30449,30454,30457,30460,30464,30470,30474,30478,30482,30484,30485,30487,30489,30490,30492,30498,30504,30509,30510,30511,30516,30517,30518,30521,30525,30526,30530,30533,30534,30538,30541,30542,30543,30546,30550,30551,30556,30558,30559,30560,30562,30564,30567,30570,30572,30576,30578,30579,30580,30586,30589,30592,30596,30604,30605,30612,30613,30614,30618,30623,30626,30631,30634,30638,30639,30641,30645,30654,30659,30665,30673,30674,30677,30681,30686,30687,30688,30692,30694,30698,30700,30704,30705,30708,30712,30715,30725,30726,30729,30733,30734,30737,30749,30753,30754,30755,30765,30766,30768,30773,30775,30787,30788,30791,30792,30796,30798,30802,30812,30814,30816,30817,30819,30820,30824,30826,30830,30842,30846,30858,30863,30868,30872,30881,30877,30878,30879,30884,30888,30892,30893,30896,30897,30898,30899,30907,30909,30911,30919,30920,30921,30924,30926,30930,30931,30933,30934,30948,30939,30943,30944,30945,30950,30954,30962,30963,30976,30966,30967,30970,30971,30975,30982,30988,30992,31002,31004,31006,31007,31008,31013,31015,31017,31021,31025,31028,31029,31035,31037,31039,31044,31045,31046,31050,31051,31055,31057,31060,31064,31067,31068,31079,31081,31083,31090,31097,31099,31100,31102,31115,31116,31121,31123,31124,31125,31126,31128,31131,31132,31137,31144,31145,31147,31151,31153,31156,31160,31163,31170,31172,31175,31176,31178,31183,31188,31190,31194,31197,31198,31200,31202,31205,31210,31211,31213,31217,31224,31228,31234,31235,31239,31241,31242,31244,31249,31253,31259,31262,31265,31271,31275,31277,31279,31280,31284,31285,31288,31289,31290,31300,31301,31303,31304,31308,31317,31318,31321,31324,31325,31327,31328,31333,31335,31338,31341,31349,31352,31358,31360,31362,31365,31366,31370,31371,31376,31377,31380,31390,31392,31395,31404,31411,31413,31417,31419,31420,31430,31433,31436,31438,31441,31451,31464,31465,31467,31468,31473,31476,31483,31485,31486,31495,31508,31519,31523,31527,31529,31530,31531,31533,31534,31535,31536,31537,31540,31549,31551,31552,31553,31559,31566,31573,31584,31588,31590,31593,31594,31597,31599,31602,31603,31607,31620,31625,31630,31632,31633,31638,31643,31646,31648,31653,31660,31663,31664,31666,31669,31670,31674,31675,31676,31677,31682,31685,31688,31690,31700,31702,31703,31705,31706,31707,31720,31722,31730,31732,31733,31736,31737,31738,31740,31742,31745,31746,31747,31748,31750,31753,31755,31756,31758,31759,31769,31771,31776,31781,31782,31784,31788,31793,31795,31796,31798,31801,31802,31814,31818,31829,31825,31826,31827,31833,31834,31835,31836,31837,31838,31841,31843,31847,31849,31853,31854,31856,31858,31865,31868,31869,31878,31879,31887,31892,31902,31904,31910,31920,31926,31927,31930,31931,31932,31935,31940,31943,31944,31945,31949,31951,31955,31956,31957,31959,31961,31962,31965,31974,31977,31979,31989,32003,32007,32008,32009,32015,32017,32018,32019,32022,32029,32030,32035,32038,32042,32045,32049,32060,32061,32062,32064,32065,32071,32072,32077,32081,32083,32087,32089,32090,32092,32093,32101,32103,32106,32112,32120,32122,32123,32127,32129,32130,32131,32133,32134,32136,32139,32140,32141,32145,32150,32151,32157,32158,32166,32167,32170,32179,32182,32183,32185,32194,32195,32196,32197,32198,32204,32205,32206,32215,32217,32256,32226,32229,32230,32234,32235,32237,32241,32245,32246,32249,32250,32264,32272,32273,32277,32279,32284,32285,32288,32295,32296,32300,32301,32303,32307,32310,32319,32324,32325,32327,32334,32336,32338,32344,32351,32353,32354,32357,32363,32366,32367,32371,32376,32382,32385,32390,32391,32394,32397,32401,32405,32408,32410,32413,32414,32572,32571,32573,32574,32575,32579,32580,32583,32591,32594,32595,32603,32604,32605,32609,32611,32612,32613,32614,32621,32625,32637,32638,32639,32640,32651,32653,32655,32656,32657,32662,32663,32668,32673,32674,32678,32682,32685,32692,32700,32703,32704,32707,32712,32718,32719,32731,32735,32739,32741,32744,32748,32750,32751,32754,32762,32765,32766,32767,32775,32776,32778,32781,32782,32783,32785,32787,32788,32790,32797,32798,32799,32800,32804,32806,32812,32814,32816,32820,32821,32823,32825,32826,32828,32830,32832,32836,32864,32868,32870,32877,32881,32885,32897,32904,32910,32924,32926,32934,32935,32939,32952,32953,32968,32973,32975,32978,32980,32981,32983,32984,32992,33005,33006,33008,33010,33011,33014,33017,33018,33022,33027,33035,33046,33047,33048,33052,33054,33056,33060,33063,33068,33072,33077,33082,33084,33093,33095,33098,33100,33106,33111,33120,33121,33127,33128,33129,33133,33135,33143,33153,33168,33156,33157,33158,33163,33166,33174,33176,33179,33182,33186,33198,33202,33204,33211,33227,33219,33221,33226,33230,33231,33237,33239,33243,33245,33246,33249,33252,33259,33260,33264,33265,33266,33269,33270,33272,33273,33277,33279,33280,33283,33295,33299,33300,33305,33306,33309,33313,33314,33320,33330,33332,33338,33347,33348,33349,33350,33355,33358,33359,33361,33366,33372,33376,33379,33383,33389,33396,33403,33405,33407,33408,33409,33411,33412,33415,33417,33418,33422,33425,33428,33430,33432,33434,33435,33440,33441,33443,33444,33447,33448,33449,33450,33454,33456,33458,33460,33463,33466,33468,33470,33471,33478,33488,33493,33498,33504,33506,33508,33512,33514,33517,33519,33526,33527,33533,33534,33536,33537,33543,33544,33546,33547,33620,33563,33565,33566,33567,33569,33570,33580,33581,33582,33584,33587,33591,33594,33596,33597,33602,33603,33604,33607,33613,33614,33617,33621,33622,33623,33648,33656,33661,33663,33664,33666,33668,33670,33677,33682,33684,33685,33688,33689,33691,33692,33693,33702,33703,33705,33708,33726,33727,33728,33735,33737,33743,33744,33745,33748,33757,33619,33768,33770,33782,33784,33785,33788,33793,33798,33802,33807,33809,33813,33817,33709,33839,33849,33861,33863,33864,33866,33869,33871,33873,33874,33878,33880,33881,33882,33884,33888,33892,33893,33895,33898,33904,33907,33908,33910,33912,33916,33917,33921,33925,33938,33939,33941,33950,33958,33960,33961,33962,33967,33969,33972,33978,33981,33982,33984,33986,33991,33992,33996,33999,34003,34012,34023,34026,34031,34032,34033,34034,34039,34098,34042,34043,34045,34050,34051,34055,34060,34062,34064,34076,34078,34082,34083,34084,34085,34087,34090,34091,34095,34099,34100,34102,34111,34118,34127,34128,34129,34130,34131,34134,34137,34140,34141,34142,34143,34144,34145,34146,34148,34155,34159,34169,34170,34171,34173,34175,34177,34181,34182,34185,34187,34188,34191,34195,34200,34205,34207,34208,34210,34213,34215,34228,34230,34231,34232,34236,34237,34238,34239,34242,34247,34250,34251,34254,34221,34264,34266,34271,34272,34278,34280,34285,34291,34294,34300,34303,34304,34308,34309,34317,34318,34320,34321,34322,34328,34329,34331,34334,34337,34343,34345,34358,34360,34362,34364,34365,34368,34370,34374,34386,34387,34390,34391,34392,34393,34397,34400,34401,34402,34403,34404,34409,34412,34415,34421,34422,34423,34426,34445,34449,34454,34456,34458,34460,34465,34470,34471,34472,34477,34481,34483,34484,34485,34487,34488,34489,34495,34496,34497,34499,34501,34513,34514,34517,34519,34522,34524,34528,34531,34533,34535,34440,34554,34556,34557,34564,34565,34567,34571,34574,34575,34576,34579,34580,34585,34590,34591,34593,34595,34600,34606,34607,34609,34610,34617,34618,34620,34621,34622,34624,34627,34629,34637,34648,34653,34657,34660,34661,34671,34673,34674,34683,34691,34692,34693,34694,34695,34696,34697,34699,34700,34704,34707,34709,34711,34712,34713,34718,34720,34723,34727,34732,34733,34734,34737,34741,34750,34751,34753,34760,34761,34762,34766,34773,34774,34777,34778,34780,34783,34786,34787,34788,34794,34795,34797,34801,34803,34808,34810,34815,34817,34819,34822,34825,34826,34827,34832,34841,34834,34835,34836,34840,34842,34843,34844,34846,34847,34856,34861,34862,34864,34866,34869,34874,34876,34881,34883,34885,34888,34889,34890,34891,34894,34897,34901,34902,34904,34906,34908,34911,34912,34916,34921,34929,34937,34939,34944,34968,34970,34971,34972,34975,34976,34984,34986,35002,35005,35006,35008,35018,35019,35020,35021,35022,35025,35026,35027,35035,35038,35047,35055,35056,35057,35061,35063,35073,35078,35085,35086,35087,35093,35094,35096,35097,35098,35100,35104,35110,35111,35112,35120,35121,35122,35125,35129,35130,35134,35136,35138,35141,35142,35145,35151,35154,35159,35162,35163,35164,35169,35170,35171,35179,35182,35184,35187,35189,35194,35195,35196,35197,35209,35213,35216,35220,35221,35227,35228,35231,35232,35237,35248,35252,35253,35254,35255,35260,35284,35285,35286,35287,35288,35301,35305,35307,35309,35313,35315,35318,35321,35325,35327,35332,35333,35335,35343,35345,35346,35348,35349,35358,35360,35362,35364,35366,35371,35372,35375,35381,35383,35389,35390,35392,35395,35397,35399,35401,35405,35406,35411,35414,35415,35416,35420,35421,35425,35429,35431,35445,35446,35447,35449,35450,35451,35454,35455,35456,35459,35462,35467,35471,35472,35474,35478,35479,35481,35487,35495,35497,35502,35503,35507,35510,35511,35515,35518,35523,35526,35528,35529,35530,35537,35539,35540,35541,35543,35549,35551,35564,35568,35572,35573,35574,35580,35583,35589,35590,35595,35601,35612,35614,35615,35594,35629,35632,35639,35644,35650,35651,35652,35653,35654,35656,35666,35667,35668,35673,35661,35678,35683,35693,35702,35704,35705,35708,35710,35713,35716,35717,35723,35725,35727,35732,35733,35740,35742,35743,35896,35897,35901,35902,35909,35911,35913,35915,35919,35921,35923,35924,35927,35928,35931,35933,35929,35939,35940,35942,35944,35945,35949,35955,35957,35958,35963,35966,35974,35975,35979,35984,35986,35987,35993,35995,35996,36004,36025,36026,36037,36038,36041,36043,36047,36054,36053,36057,36061,36065,36072,36076,36079,36080,36082,36085,36087,36088,36094,36095,36097,36099,36105,36114,36119,36123,36197,36201,36204,36206,36223,36226,36228,36232,36237,36240,36241,36245,36254,36255,36256,36262,36267,36268,36271,36274,36277,36279,36281,36283,36288,36293,36294,36295,36296,36298,36302,36305,36308,36309,36311,36313,36324,36325,36327,36332,36336,36284,36337,36338,36340,36349,36353,36356,36357,36358,36363,36369,36372,36374,36384,36385,36386,36387,36390,36391,36401,36403,36406,36407,36408,36409,36413,36416,36417,36427,36429,36430,36431,36436,36443,36444,36445,36446,36449,36450,36457,36460,36461,36463,36464,36465,36473,36474,36475,36482,36483,36489,36496,36498,36501,36506,36507,36509,36510,36514,36519,36521,36525,36526,36531,36533,36538,36539,36544,36545,36547,36548,36551,36559,36561,36564,36572,36584,36590,36592,36593,36599,36601,36602,36589,36608,36610,36615,36616,36623,36624,36630,36631,36632,36638,36640,36641,36643,36645,36647,36648,36652,36653,36654,36660,36661,36662,36663,36666,36672,36673,36675,36679,36687,36689,36690,36691,36692,36693,36696,36701,36702,36709,36765,36768,36769,36772,36773,36774,36789,36790,36792,36798,36800,36801,36806,36810,36811,36813,36816,36818,36819,36821,36832,36835,36836,36840,36846,36849,36853,36854,36859,36862,36866,36868,36872,36876,36888,36891,36904,36905,36911,36906,36908,36909,36915,36916,36919,36927,36931,36932,36940,36955,36957,36962,36966,36967,36972,36976,36980,36985,36997,37000,37003,37004,37006,37008,37013,37015,37016,37017,37019,37024,37025,37026,37029,37040,37042,37043,37044,37046,37053,37068,37054,37059,37060,37061,37063,37064,37077,37079,37080,37081,37084,37085,37087,37093,37074,37110,37099,37103,37104,37108,37118,37119,37120,37124,37125,37126,37128,37133,37136,37140,37142,37143,37144,37146,37148,37150,37152,37157,37154,37155,37159,37161,37166,37167,37169,37172,37174,37175,37177,37178,37180,37181,37187,37191,37192,37199,37203,37207,37209,37210,37211,37217,37220,37223,37229,37236,37241,37242,37243,37249,37251,37253,37254,37258,37262,37265,37267,37268,37269,37272,37278,37281,37286,37288,37292,37293,37294,37296,37297,37298,37299,37302,37307,37308,37309,37311,37314,37315,37317,37331,37332,37335,37337,37338,37342,37348,37349,37353,37354,37356,37357,37358,37359,37360,37361,37367,37369,37371,37373,37376,37377,37380,37381,37382,37383,37385,37386,37388,37392,37394,37395,37398,37400,37404,37405,37411,37412,37413,37414,37416,37422,37423,37424,37427,37429,37430,37432,37433,37434,37436,37438,37440,37442,37443,37446,37447,37450,37453,37454,37455,37457,37464,37465,37468,37469,37472,37473,37477,37479,37480,37481,37486,37487,37488,37493,37494,37495,37496,37497,37499,37500,37501,37503,37512,37513,37514,37517,37518,37522,37527,37529,37535,37536,37540,37541,37543,37544,37547,37551,37554,37558,37560,37562,37563,37564,37565,37567,37568,37569,37570,37571,37573,37574,37575,37576,37579,37580,37581,37582,37584,37587,37589,37591,37592,37593,37596,37597,37599,37600,37601,37603,37605,37607,37608,37612,37614,37616,37625,37627,37631,37632,37634,37640,37645,37649,37652,37653,37660,37661,37662,37663,37665,37668,37669,37671,37673,37674,37683,37684,37686,37687,37703,37704,37705,37712,37713,37714,37717,37719,37720,37722,37726,37732,37733,37735,37737,37738,37741,37743,37744,37745,37747,37748,37750,37754,37757,37759,37760,37761,37762,37768,37770,37771,37773,37775,37778,37781,37784,37787,37790,37793,37795,37796,37798,37800,37803,37812,37813,37814,37818,37801,37825,37828,37829,37830,37831,37833,37834,37835,37836,37837,37843,37849,37852,37854,37855,37858,37862,37863,37881,37879,37880,37882,37883,37885,37889,37890,37892,37896,37897,37901,37902,37903,37909,37910,37911,37919,37934,37935,37937,37938,37939,37940,37947,37951,37949,37955,37957,37960,37962,37964,37973,37977,37980,37983,37985,37987,37992,37995,37997,37998,37999,38001,38002,38020,38019,38264,38265,38270,38276,38280,38284,38285,38286,38301,38302,38303,38305,38310,38313,38315,38316,38324,38326,38330,38333,38335,38342,38344,38345,38347,38352,38353,38354,38355,38361,38362,38365,38366,38367,38368,38372,38374,38429,38430,38434,38436,38437,38438,38444,38449,38451,38455,38456,38457,38458,38460,38461,38465,38482,38484,38486,38487,38488,38497,38510,38516,38523,38524,38526,38527,38529,38530,38531,38532,38537,38545,38550,38554,38557,38559,38564,38565,38566,38569,38574,38575,38579,38586,38602,38610,23986,38616,38618,38621,38622,38623,38633,38639,38641,38650,38658,38659,38661,38665,38682,38683,38685,38689,38690,38691,38696,38705,38707,38721,38723,38730,38734,38735,38741,38743,38744,38746,38747,38755,38759,38762,38766,38771,38774,38775,38776,38779,38781,38783,38784,38793,38805,38806,38807,38809,38810,38814,38815,38818,38828,38830,38833,38834,38837,38838,38840,38841,38842,38844,38846,38847,38849,38852,38853,38855,38857,38858,38860,38861,38862,38864,38865,38868,38871,38872,38873,38877,38878,38880,38875,38881,38884,38895,38897,38900,38903,38904,38906,38919,38922,38937,38925,38926,38932,38934,38940,38942,38944,38947,38950,38955,38958,38959,38960,38962,38963,38965,38949,38974,38980,38983,38986,38993,38994,38995,38998,38999,39001,39002,39010,39011,39013,39014,39018,39020,39083,39085,39086,39088,39092,39095,39096,39098,39099,39103,39106,39109,39112,39116,39137,39139,39141,39142,39143,39146,39155,39158,39170,39175,39176,39185,39189,39190,39191,39194,39195,39196,39199,39202,39206,39207,39211,39217,39218,39219,39220,39221,39225,39226,39227,39228,39232,39233,39238,39239,39240,39245,39246,39252,39256,39257,39259,39260,39262,39263,39264,39323,39325,39327,39334,39344,39345,39346,39349,39353,39354,39357,39359,39363,39369,39379,39380,39385,39386,39388,39390,39399,39402,39403,39404,39408,39412,39413,39417,39421,39422,39426,39427,39428,39435,39436,39440,39441,39446,39454,39456,39458,39459,39460,39463,39469,39470,39475,39477,39478,39480,39495,39489,39492,39498,39499,39500,39502,39505,39508,39510,39517,39594,39596,39598,39599,39602,39604,39605,39606,39609,39611,39614,39615,39617,39619,39622,39624,39630,39632,39634,39637,39638,39639,39643,39644,39648,39652,39653,39655,39657,39660,39666,39667,39669,39673,39674,39677,39679,39680,39681,39682,39683,39684,39685,39688,39689,39691,39692,39693,39694,39696,39698,39702,39705,39707,39708,39712,39718,39723,39725,39731,39732,39733,39735,39737,39738,39741,39752,39755,39756,39765,39766,39767,39771,39774,39777,39779,39781,39782,39784,39786,39787,39788,39789,39790,39795,39797,39799,39800,39801,39807,39808,39812,39813,39814,39815,39817,39818,39819,39821,39823,39824,39828,39834,39837,39838,39846,39847,39849,39852,39856,39857,39858,39863,39864,39867,39868,39870,39871,39873,39879,39880,39886,39888,39895,39896,39901,39903,39909,39911,39914,39915,39919,39923,39927,39928,39929,39930,39933,39935,39936,39938,39947,39951,39953,39958,39960,39961,39962,39964,39966,39970,39971,39974,39975,39976,39977,39978,39985,39989,39990,39991,39997,40001,40003,40004,40005,40009,40010,40014,40015,40016,40019,40020,40022,40024,40027,40029,40030,40031,40035,40041,40042,40028,40043,40040,40046,40048,40050,40053,40055,40059,40166,40178,40183,40185,40203,40194,40209,40215,40216,40220,40221,40222,40239,40240,40242,40243,40244,40250,40252,40261,40253,40258,40259,40263,40266,40275,40276,40287,40291,40290,40293,40297,40298,40299,40304,40310,40311,40315,40316,40318,40323,40324,40326,40330,40333,40334,40338,40339,40341,40342,40343,40344,40353,40362,40364,40366,40369,40373,40377,40380,40383,40387,40391,40393,40394,40404,40405,40406,40407,40410,40414,40415,40416,40421,40423,40425,40427,40430,40432,40435,40436,40446,40458,40450,40455,40462,40464,40465,40466,40469,40470,40473,40476,40477,40570,40571,40572,40576,40578,40579,40580,40581,40583,40590,40591,40598,40600,40603,40606,40612,40616,40620,40622,40623,40624,40627,40628,40629,40646,40648,40651,40661,40671,40676,40679,40684,40685,40686,40688,40689,40690,40693,40696,40703,40706,40707,40713,40719,40720,40721,40722,40724,40726,40727,40729,40730,40731,40735,40738,40742,40746,40747,40751,40753,40754,40756,40759,40761,40762,40764,40765,40767,40769,40771,40772,40773,40774,40775,40787,40789,40790,40791,40792,40794,40797,40798,40808,40809,40813,40814,40815,40816,40817,40819,40821,40826,40829,40847,40848,40849,40850,40852,40854,40855,40862,40865,40866,40867,40869,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],\n  \"ibm866\":[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,9617,9618,9619,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9561,9560,9554,9555,9579,9578,9496,9484,9608,9604,9612,9616,9600,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1025,1105,1028,1108,1031,1111,1038,1118,176,8729,183,8730,8470,164,9632,160],\n  \"iso-8859-2\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,728,321,164,317,346,167,168,352,350,356,377,173,381,379,176,261,731,322,180,318,347,711,184,353,351,357,378,733,382,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],\n  \"iso-8859-3\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,294,728,163,164,null,292,167,168,304,350,286,308,173,null,379,176,295,178,179,180,181,293,183,184,305,351,287,309,189,null,380,192,193,194,null,196,266,264,199,200,201,202,203,204,205,206,207,null,209,210,211,212,288,214,215,284,217,218,219,220,364,348,223,224,225,226,null,228,267,265,231,232,233,234,235,236,237,238,239,null,241,242,243,244,289,246,247,285,249,250,251,252,365,349,729],\n  \"iso-8859-4\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,312,342,164,296,315,167,168,352,274,290,358,173,381,175,176,261,731,343,180,297,316,711,184,353,275,291,359,330,382,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,298,272,325,332,310,212,213,214,215,216,370,218,219,220,360,362,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,299,273,326,333,311,244,245,246,247,248,371,250,251,252,361,363,729],\n  \"iso-8859-5\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,173,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8470,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,167,1118,1119],\n  \"iso-8859-6\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,null,null,164,null,null,null,null,null,null,null,1548,173,null,null,null,null,null,null,null,null,null,null,null,null,null,1563,null,null,null,1567,null,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,null,null,null,null,null,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,null,null,null,null,null,null,null,null,null,null,null,null,null],\n  \"iso-8859-7\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8216,8217,163,8364,8367,166,167,168,169,890,171,172,173,null,8213,176,177,178,179,900,901,902,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],\n  \"iso-8859-8\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,162,163,164,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8215,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],\n  \"iso-8859-10\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,274,290,298,296,310,167,315,272,352,358,381,173,362,330,176,261,275,291,299,297,311,183,316,273,353,359,382,8213,363,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,207,208,325,332,211,212,213,214,360,216,370,218,219,220,221,222,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,239,240,326,333,243,244,245,246,361,248,371,250,251,252,253,254,312],\n  \"iso-8859-13\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8221,162,163,164,8222,166,167,216,169,342,171,172,173,174,198,176,177,178,179,8220,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,8217],\n  \"iso-8859-14\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,7682,7683,163,266,267,7690,167,7808,169,7810,7691,7922,173,174,376,7710,7711,288,289,7744,7745,182,7766,7809,7767,7811,7776,7923,7812,7813,7777,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,372,209,210,211,212,213,214,7786,216,217,218,219,220,221,374,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,373,241,242,243,244,245,246,7787,248,249,250,251,252,253,375,255],\n  \"iso-8859-15\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,8364,165,352,167,353,169,170,171,172,173,174,175,176,177,178,179,381,181,182,183,382,185,186,187,338,339,376,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],\n  \"iso-8859-16\":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,261,321,8364,8222,352,167,353,169,536,171,377,173,378,379,176,177,268,322,381,8221,182,183,382,269,537,187,338,339,376,380,192,193,194,258,196,262,198,199,200,201,202,203,204,205,206,207,272,323,210,211,212,336,214,346,368,217,218,219,220,280,538,223,224,225,226,259,228,263,230,231,232,233,234,235,236,237,238,239,273,324,242,243,244,337,246,347,369,249,250,251,252,281,539,255],\n  \"koi8-r\":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,1025,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],\n  \"koi8-u\":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,1108,9556,1110,1111,9559,9560,9561,9562,9563,1169,1118,9566,9567,9568,9569,1025,1028,9571,1030,1031,9574,9575,9576,9577,9578,1168,1038,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],\n  \"macintosh\":[196,197,199,201,209,214,220,225,224,226,228,227,229,231,233,232,234,235,237,236,238,239,241,243,242,244,246,245,250,249,251,252,8224,176,162,163,167,8226,182,223,174,169,8482,180,168,8800,198,216,8734,177,8804,8805,165,181,8706,8721,8719,960,8747,170,186,937,230,248,191,161,172,8730,402,8776,8710,171,187,8230,160,192,195,213,338,339,8211,8212,8220,8221,8216,8217,247,9674,255,376,8260,8364,8249,8250,64257,64258,8225,183,8218,8222,8240,194,202,193,203,200,205,206,207,204,211,212,63743,210,218,219,217,305,710,732,175,728,729,730,184,733,731,711],\n  \"windows-874\":[8364,129,130,131,132,8230,134,135,136,137,138,139,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,153,154,155,156,157,158,159,160,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3631,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,null,null,null,null,3647,3648,3649,3650,3651,3652,3653,3654,3655,3656,3657,3658,3659,3660,3661,3662,3663,3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,null,null,null,null],\n  \"windows-1250\":[8364,129,8218,131,8222,8230,8224,8225,136,8240,352,8249,346,356,381,377,144,8216,8217,8220,8221,8226,8211,8212,152,8482,353,8250,347,357,382,378,160,711,728,321,164,260,166,167,168,169,350,171,172,173,174,379,176,177,731,322,180,181,182,183,184,261,351,187,317,733,318,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],\n  \"windows-1251\":[1026,1027,8218,1107,8222,8230,8224,8225,8364,8240,1033,8249,1034,1036,1035,1039,1106,8216,8217,8220,8221,8226,8211,8212,152,8482,1113,8250,1114,1116,1115,1119,160,1038,1118,1032,164,1168,166,167,1025,169,1028,171,172,173,174,1031,176,177,1030,1110,1169,181,182,183,1105,8470,1108,187,1112,1029,1109,1111,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103],\n  \"windows-1252\":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,381,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,382,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],\n  \"windows-1253\":[8364,129,8218,402,8222,8230,8224,8225,136,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,157,158,159,160,901,902,163,164,165,166,167,168,169,null,171,172,173,174,8213,176,177,178,179,900,181,182,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],\n  \"windows-1254\":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,286,209,210,211,212,213,214,215,216,217,218,219,220,304,350,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,287,241,242,243,244,245,246,247,248,249,250,251,252,305,351,255],\n  \"windows-1255\":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,156,157,158,159,160,161,162,163,8362,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,191,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1520,1521,1522,1523,1524,null,null,null,null,null,null,null,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],\n  \"windows-1256\":[8364,1662,8218,402,8222,8230,8224,8225,710,8240,1657,8249,338,1670,1688,1672,1711,8216,8217,8220,8221,8226,8211,8212,1705,8482,1681,8250,339,8204,8205,1722,160,1548,162,163,164,165,166,167,168,169,1726,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,1563,187,188,189,190,1567,1729,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,215,1591,1592,1593,1594,1600,1601,1602,1603,224,1604,226,1605,1606,1607,1608,231,232,233,234,235,1609,1610,238,239,1611,1612,1613,1614,244,1615,1616,247,1617,249,1618,251,252,8206,8207,1746],\n  \"windows-1257\":[8364,129,8218,131,8222,8230,8224,8225,136,8240,138,8249,140,168,711,184,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,175,731,159,160,null,162,163,164,null,166,167,216,169,342,171,172,173,174,198,176,177,178,179,180,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,729],\n  \"windows-1258\":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,258,196,197,198,199,200,201,202,203,768,205,206,207,272,209,777,211,212,416,214,215,216,217,218,219,220,431,771,223,224,225,226,259,228,229,230,231,232,233,234,235,769,237,238,239,273,241,803,243,244,417,246,247,248,249,250,251,252,432,8363,255],\n  \"x-mac-cyrillic\":[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,8224,176,1168,163,167,8226,182,1030,174,169,8482,1026,1106,8800,1027,1107,8734,177,8804,8805,1110,181,1169,1032,1028,1108,1031,1111,1033,1113,1034,1114,1112,1029,172,8730,402,8776,8710,171,187,8230,160,1035,1115,1036,1116,1109,8211,8212,8220,8221,8216,8217,247,8222,1038,1118,1039,1119,8470,1025,1105,1103,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,8364]\n};\n\n// For strict environments where `this` inside the global scope\n// is `undefined`, take a pure object instead\n}(this || {}));","// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n/**\n * @fileoverview Global |this| required for resolving indexes in node.\n * @suppress {globalThis}\n */\n(function(global) {\n  'use strict';\n\n  // If we're in node require encoding-indexes and attach it to the global.\n  if (typeof module !== \"undefined\" && module.exports &&\n    !global[\"encoding-indexes\"]) {\n    global[\"encoding-indexes\"] =\n      require(\"./encoding-indexes.js\")[\"encoding-indexes\"];\n  }\n\n  //\n  // Utilities\n  //\n\n  /**\n   * @param {number} a The number to test.\n   * @param {number} min The minimum value in the range, inclusive.\n   * @param {number} max The maximum value in the range, inclusive.\n   * @return {boolean} True if a >= min and a <= max.\n   */\n  function inRange(a, min, max) {\n    return min <= a && a <= max;\n  }\n\n  /**\n   * @param {!Array.<*>} array The array to check.\n   * @param {*} item The item to look for in the array.\n   * @return {boolean} True if the item appears in the array.\n   */\n  function includes(array, item) {\n    return array.indexOf(item) !== -1;\n  }\n\n  var floor = Math.floor;\n\n  /**\n   * @param {*} o\n   * @return {Object}\n   */\n  function ToDictionary(o) {\n    if (o === undefined) return {};\n    if (o === Object(o)) return o;\n    throw TypeError('Could not convert argument to dictionary');\n  }\n\n  /**\n   * @param {string} string Input string of UTF-16 code units.\n   * @return {!Array.<number>} Code points.\n   */\n  function stringToCodePoints(string) {\n    // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n    // 1. Let S be the DOMString value.\n    var s = String(string);\n\n    // 2. Let n be the length of S.\n    var n = s.length;\n\n    // 3. Initialize i to 0.\n    var i = 0;\n\n    // 4. Initialize U to be an empty sequence of Unicode characters.\n    var u = [];\n\n    // 5. While i < n:\n    while (i < n) {\n\n      // 1. Let c be the code unit in S at index i.\n      var c = s.charCodeAt(i);\n\n      // 2. Depending on the value of c:\n\n      // c < 0xD800 or c > 0xDFFF\n      if (c < 0xD800 || c > 0xDFFF) {\n        // Append to U the Unicode character with code point c.\n        u.push(c);\n      }\n\n      // 0xDC00 ≤ c ≤ 0xDFFF\n      else if (0xDC00 <= c && c <= 0xDFFF) {\n        // Append to U a U+FFFD REPLACEMENT CHARACTER.\n        u.push(0xFFFD);\n      }\n\n      // 0xD800 ≤ c ≤ 0xDBFF\n      else if (0xD800 <= c && c <= 0xDBFF) {\n        // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n        // CHARACTER.\n        if (i === n - 1) {\n          u.push(0xFFFD);\n        }\n        // 2. Otherwise, i < n−1:\n        else {\n          // 1. Let d be the code unit in S at index i+1.\n          var d = s.charCodeAt(i + 1);\n\n          // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n          if (0xDC00 <= d && d <= 0xDFFF) {\n            // 1. Let a be c & 0x3FF.\n            var a = c & 0x3FF;\n\n            // 2. Let b be d & 0x3FF.\n            var b = d & 0x3FF;\n\n            // 3. Append to U the Unicode character with code point\n            // 2^16+2^10*a+b.\n            u.push(0x10000 + (a << 10) + b);\n\n            // 4. Set i to i+1.\n            i += 1;\n          }\n\n          // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n          // U+FFFD REPLACEMENT CHARACTER.\n          else  {\n            u.push(0xFFFD);\n          }\n        }\n      }\n\n      // 3. Set i to i+1.\n      i += 1;\n    }\n\n    // 6. Return U.\n    return u;\n  }\n\n  /**\n   * @param {!Array.<number>} code_points Array of code points.\n   * @return {string} string String of UTF-16 code units.\n   */\n  function codePointsToString(code_points) {\n    var s = '';\n    for (var i = 0; i < code_points.length; ++i) {\n      var cp = code_points[i];\n      if (cp <= 0xFFFF) {\n        s += String.fromCharCode(cp);\n      } else {\n        cp -= 0x10000;\n        s += String.fromCharCode((cp >> 10) + 0xD800,\n                                 (cp & 0x3FF) + 0xDC00);\n      }\n    }\n    return s;\n  }\n\n\n  //\n  // Implementation of Encoding specification\n  // https://encoding.spec.whatwg.org/\n  //\n\n  //\n  // 4. Terminology\n  //\n\n  /**\n   * An ASCII byte is a byte in the range 0x00 to 0x7F, inclusive.\n   * @param {number} a The number to test.\n   * @return {boolean} True if a is in the range 0x00 to 0x7F, inclusive.\n   */\n  function isASCIIByte(a) {\n    return 0x00 <= a && a <= 0x7F;\n  }\n\n  /**\n   * An ASCII code point is a code point in the range U+0000 to\n   * U+007F, inclusive.\n   */\n  var isASCIICodePoint = isASCIIByte;\n\n\n  /**\n   * End-of-stream is a special token that signifies no more tokens\n   * are in the stream.\n   * @const\n   */ var end_of_stream = -1;\n\n  /**\n   * A stream represents an ordered sequence of tokens.\n   *\n   * @constructor\n   * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide\n   * the stream.\n   */\n  function Stream(tokens) {\n    /** @type {!Array.<number>} */\n    this.tokens = [].slice.call(tokens);\n    // Reversed as push/pop is more efficient than shift/unshift.\n    this.tokens.reverse();\n  }\n\n  Stream.prototype = {\n    /**\n     * @return {boolean} True if end-of-stream has been hit.\n     */\n    endOfStream: function() {\n      return !this.tokens.length;\n    },\n\n    /**\n     * When a token is read from a stream, the first token in the\n     * stream must be returned and subsequently removed, and\n     * end-of-stream must be returned otherwise.\n     *\n     * @return {number} Get the next token from the stream, or\n     * end_of_stream.\n     */\n     read: function() {\n      if (!this.tokens.length)\n        return end_of_stream;\n       return this.tokens.pop();\n     },\n\n    /**\n     * When one or more tokens are prepended to a stream, those tokens\n     * must be inserted, in given order, before the first token in the\n     * stream.\n     *\n     * @param {(number|!Array.<number>)} token The token(s) to prepend to the\n     * stream.\n     */\n    prepend: function(token) {\n      if (Array.isArray(token)) {\n        var tokens = /**@type {!Array.<number>}*/(token);\n        while (tokens.length)\n          this.tokens.push(tokens.pop());\n      } else {\n        this.tokens.push(token);\n      }\n    },\n\n    /**\n     * When one or more tokens are pushed to a stream, those tokens\n     * must be inserted, in given order, after the last token in the\n     * stream.\n     *\n     * @param {(number|!Array.<number>)} token The tokens(s) to push to the\n     * stream.\n     */\n    push: function(token) {\n      if (Array.isArray(token)) {\n        var tokens = /**@type {!Array.<number>}*/(token);\n        while (tokens.length)\n          this.tokens.unshift(tokens.shift());\n      } else {\n        this.tokens.unshift(token);\n      }\n    }\n  };\n\n  //\n  // 5. Encodings\n  //\n\n  // 5.1 Encoders and decoders\n\n  /** @const */\n  var finished = -1;\n\n  /**\n   * @param {boolean} fatal If true, decoding errors raise an exception.\n   * @param {number=} opt_code_point Override the standard fallback code point.\n   * @return {number} The code point to insert on a decoding error.\n   */\n  function decoderError(fatal, opt_code_point) {\n    if (fatal)\n      throw TypeError('Decoder error');\n    return opt_code_point || 0xFFFD;\n  }\n\n  /**\n   * @param {number} code_point The code point that could not be encoded.\n   * @return {number} Always throws, no value is actually returned.\n   */\n  function encoderError(code_point) {\n    throw TypeError('The code point ' + code_point + ' could not be encoded.');\n  }\n\n  /** @interface */\n  function Decoder() {}\n  Decoder.prototype = {\n    /**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point, or |finished|.\n     */\n    handler: function(stream, bite) {}\n  };\n\n  /** @interface */\n  function Encoder() {}\n  Encoder.prototype = {\n    /**\n     * @param {Stream} stream The stream of code points being encoded.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n     */\n    handler: function(stream, code_point) {}\n  };\n\n  // 5.2 Names and labels\n\n  // TODO: Define @typedef for Encoding: {name:string,labels:Array.<string>}\n  // https://github.com/google/closure-compiler/issues/247\n\n  /**\n   * @param {string} label The encoding label.\n   * @return {?{name:string,labels:Array.<string>}}\n   */\n  function getEncoding(label) {\n    // 1. Remove any leading and trailing ASCII whitespace from label.\n    label = String(label).trim().toLowerCase();\n\n    // 2. If label is an ASCII case-insensitive match for any of the\n    // labels listed in the table below, return the corresponding\n    // encoding, and failure otherwise.\n    if (Object.prototype.hasOwnProperty.call(label_to_encoding, label)) {\n      return label_to_encoding[label];\n    }\n    return null;\n  }\n\n  /**\n   * Encodings table: https://encoding.spec.whatwg.org/encodings.json\n   * @const\n   * @type {!Array.<{\n   *          heading: string,\n   *          encodings: Array.<{name:string,labels:Array.<string>}>\n   *        }>}\n   */\n  var encodings = [\n    {\n      \"encodings\": [\n        {\n          \"labels\": [\n            \"unicode-1-1-utf-8\",\n            \"utf-8\",\n            \"utf8\"\n          ],\n          \"name\": \"UTF-8\"\n        }\n      ],\n      \"heading\": \"The Encoding\"\n    },\n    {\n      \"encodings\": [\n        {\n          \"labels\": [\n            \"866\",\n            \"cp866\",\n            \"csibm866\",\n            \"ibm866\"\n          ],\n          \"name\": \"IBM866\"\n        },\n        {\n          \"labels\": [\n            \"csisolatin2\",\n            \"iso-8859-2\",\n            \"iso-ir-101\",\n            \"iso8859-2\",\n            \"iso88592\",\n            \"iso_8859-2\",\n            \"iso_8859-2:1987\",\n            \"l2\",\n            \"latin2\"\n          ],\n          \"name\": \"ISO-8859-2\"\n        },\n        {\n          \"labels\": [\n            \"csisolatin3\",\n            \"iso-8859-3\",\n            \"iso-ir-109\",\n            \"iso8859-3\",\n            \"iso88593\",\n            \"iso_8859-3\",\n            \"iso_8859-3:1988\",\n            \"l3\",\n            \"latin3\"\n          ],\n          \"name\": \"ISO-8859-3\"\n        },\n        {\n          \"labels\": [\n            \"csisolatin4\",\n            \"iso-8859-4\",\n            \"iso-ir-110\",\n            \"iso8859-4\",\n            \"iso88594\",\n            \"iso_8859-4\",\n            \"iso_8859-4:1988\",\n            \"l4\",\n            \"latin4\"\n          ],\n          \"name\": \"ISO-8859-4\"\n        },\n        {\n          \"labels\": [\n            \"csisolatincyrillic\",\n            \"cyrillic\",\n            \"iso-8859-5\",\n            \"iso-ir-144\",\n            \"iso8859-5\",\n            \"iso88595\",\n            \"iso_8859-5\",\n            \"iso_8859-5:1988\"\n          ],\n          \"name\": \"ISO-8859-5\"\n        },\n        {\n          \"labels\": [\n            \"arabic\",\n            \"asmo-708\",\n            \"csiso88596e\",\n            \"csiso88596i\",\n            \"csisolatinarabic\",\n            \"ecma-114\",\n            \"iso-8859-6\",\n            \"iso-8859-6-e\",\n            \"iso-8859-6-i\",\n            \"iso-ir-127\",\n            \"iso8859-6\",\n            \"iso88596\",\n            \"iso_8859-6\",\n            \"iso_8859-6:1987\"\n          ],\n          \"name\": \"ISO-8859-6\"\n        },\n        {\n          \"labels\": [\n            \"csisolatingreek\",\n            \"ecma-118\",\n            \"elot_928\",\n            \"greek\",\n            \"greek8\",\n            \"iso-8859-7\",\n            \"iso-ir-126\",\n            \"iso8859-7\",\n            \"iso88597\",\n            \"iso_8859-7\",\n            \"iso_8859-7:1987\",\n            \"sun_eu_greek\"\n          ],\n          \"name\": \"ISO-8859-7\"\n        },\n        {\n          \"labels\": [\n            \"csiso88598e\",\n            \"csisolatinhebrew\",\n            \"hebrew\",\n            \"iso-8859-8\",\n            \"iso-8859-8-e\",\n            \"iso-ir-138\",\n            \"iso8859-8\",\n            \"iso88598\",\n            \"iso_8859-8\",\n            \"iso_8859-8:1988\",\n            \"visual\"\n          ],\n          \"name\": \"ISO-8859-8\"\n        },\n        {\n          \"labels\": [\n            \"csiso88598i\",\n            \"iso-8859-8-i\",\n            \"logical\"\n          ],\n          \"name\": \"ISO-8859-8-I\"\n        },\n        {\n          \"labels\": [\n            \"csisolatin6\",\n            \"iso-8859-10\",\n            \"iso-ir-157\",\n            \"iso8859-10\",\n            \"iso885910\",\n            \"l6\",\n            \"latin6\"\n          ],\n          \"name\": \"ISO-8859-10\"\n        },\n        {\n          \"labels\": [\n            \"iso-8859-13\",\n            \"iso8859-13\",\n            \"iso885913\"\n          ],\n          \"name\": \"ISO-8859-13\"\n        },\n        {\n          \"labels\": [\n            \"iso-8859-14\",\n            \"iso8859-14\",\n            \"iso885914\"\n          ],\n          \"name\": \"ISO-8859-14\"\n        },\n        {\n          \"labels\": [\n            \"csisolatin9\",\n            \"iso-8859-15\",\n            \"iso8859-15\",\n            \"iso885915\",\n            \"iso_8859-15\",\n            \"l9\"\n          ],\n          \"name\": \"ISO-8859-15\"\n        },\n        {\n          \"labels\": [\n            \"iso-8859-16\"\n          ],\n          \"name\": \"ISO-8859-16\"\n        },\n        {\n          \"labels\": [\n            \"cskoi8r\",\n            \"koi\",\n            \"koi8\",\n            \"koi8-r\",\n            \"koi8_r\"\n          ],\n          \"name\": \"KOI8-R\"\n        },\n        {\n          \"labels\": [\n            \"koi8-ru\",\n            \"koi8-u\"\n          ],\n          \"name\": \"KOI8-U\"\n        },\n        {\n          \"labels\": [\n            \"csmacintosh\",\n            \"mac\",\n            \"macintosh\",\n            \"x-mac-roman\"\n          ],\n          \"name\": \"macintosh\"\n        },\n        {\n          \"labels\": [\n            \"dos-874\",\n            \"iso-8859-11\",\n            \"iso8859-11\",\n            \"iso885911\",\n            \"tis-620\",\n            \"windows-874\"\n          ],\n          \"name\": \"windows-874\"\n        },\n        {\n          \"labels\": [\n            \"cp1250\",\n            \"windows-1250\",\n            \"x-cp1250\"\n          ],\n          \"name\": \"windows-1250\"\n        },\n        {\n          \"labels\": [\n            \"cp1251\",\n            \"windows-1251\",\n            \"x-cp1251\"\n          ],\n          \"name\": \"windows-1251\"\n        },\n        {\n          \"labels\": [\n            \"ansi_x3.4-1968\",\n            \"ascii\",\n            \"cp1252\",\n            \"cp819\",\n            \"csisolatin1\",\n            \"ibm819\",\n            \"iso-8859-1\",\n            \"iso-ir-100\",\n            \"iso8859-1\",\n            \"iso88591\",\n            \"iso_8859-1\",\n            \"iso_8859-1:1987\",\n            \"l1\",\n            \"latin1\",\n            \"us-ascii\",\n            \"windows-1252\",\n            \"x-cp1252\"\n          ],\n          \"name\": \"windows-1252\"\n        },\n        {\n          \"labels\": [\n            \"cp1253\",\n            \"windows-1253\",\n            \"x-cp1253\"\n          ],\n          \"name\": \"windows-1253\"\n        },\n        {\n          \"labels\": [\n            \"cp1254\",\n            \"csisolatin5\",\n            \"iso-8859-9\",\n            \"iso-ir-148\",\n            \"iso8859-9\",\n            \"iso88599\",\n            \"iso_8859-9\",\n            \"iso_8859-9:1989\",\n            \"l5\",\n            \"latin5\",\n            \"windows-1254\",\n            \"x-cp1254\"\n          ],\n          \"name\": \"windows-1254\"\n        },\n        {\n          \"labels\": [\n            \"cp1255\",\n            \"windows-1255\",\n            \"x-cp1255\"\n          ],\n          \"name\": \"windows-1255\"\n        },\n        {\n          \"labels\": [\n            \"cp1256\",\n            \"windows-1256\",\n            \"x-cp1256\"\n          ],\n          \"name\": \"windows-1256\"\n        },\n        {\n          \"labels\": [\n            \"cp1257\",\n            \"windows-1257\",\n            \"x-cp1257\"\n          ],\n          \"name\": \"windows-1257\"\n        },\n        {\n          \"labels\": [\n            \"cp1258\",\n            \"windows-1258\",\n            \"x-cp1258\"\n          ],\n          \"name\": \"windows-1258\"\n        },\n        {\n          \"labels\": [\n            \"x-mac-cyrillic\",\n            \"x-mac-ukrainian\"\n          ],\n          \"name\": \"x-mac-cyrillic\"\n        }\n      ],\n      \"heading\": \"Legacy single-byte encodings\"\n    },\n    {\n      \"encodings\": [\n        {\n          \"labels\": [\n            \"chinese\",\n            \"csgb2312\",\n            \"csiso58gb231280\",\n            \"gb2312\",\n            \"gb_2312\",\n            \"gb_2312-80\",\n            \"gbk\",\n            \"iso-ir-58\",\n            \"x-gbk\"\n          ],\n          \"name\": \"GBK\"\n        },\n        {\n          \"labels\": [\n            \"gb18030\"\n          ],\n          \"name\": \"gb18030\"\n        }\n      ],\n      \"heading\": \"Legacy multi-byte Chinese (simplified) encodings\"\n    },\n    {\n      \"encodings\": [\n        {\n          \"labels\": [\n            \"big5\",\n            \"big5-hkscs\",\n            \"cn-big5\",\n            \"csbig5\",\n            \"x-x-big5\"\n          ],\n          \"name\": \"Big5\"\n        }\n      ],\n      \"heading\": \"Legacy multi-byte Chinese (traditional) encodings\"\n    },\n    {\n      \"encodings\": [\n        {\n          \"labels\": [\n            \"cseucpkdfmtjapanese\",\n            \"euc-jp\",\n            \"x-euc-jp\"\n          ],\n          \"name\": \"EUC-JP\"\n        },\n        {\n          \"labels\": [\n            \"csiso2022jp\",\n            \"iso-2022-jp\"\n          ],\n          \"name\": \"ISO-2022-JP\"\n        },\n        {\n          \"labels\": [\n            \"csshiftjis\",\n            \"ms932\",\n            \"ms_kanji\",\n            \"shift-jis\",\n            \"shift_jis\",\n            \"sjis\",\n            \"windows-31j\",\n            \"x-sjis\"\n          ],\n          \"name\": \"Shift_JIS\"\n        }\n      ],\n      \"heading\": \"Legacy multi-byte Japanese encodings\"\n    },\n    {\n      \"encodings\": [\n        {\n          \"labels\": [\n            \"cseuckr\",\n            \"csksc56011987\",\n            \"euc-kr\",\n            \"iso-ir-149\",\n            \"korean\",\n            \"ks_c_5601-1987\",\n            \"ks_c_5601-1989\",\n            \"ksc5601\",\n            \"ksc_5601\",\n            \"windows-949\"\n          ],\n          \"name\": \"EUC-KR\"\n        }\n      ],\n      \"heading\": \"Legacy multi-byte Korean encodings\"\n    },\n    {\n      \"encodings\": [\n        {\n          \"labels\": [\n            \"csiso2022kr\",\n            \"hz-gb-2312\",\n            \"iso-2022-cn\",\n            \"iso-2022-cn-ext\",\n            \"iso-2022-kr\"\n          ],\n          \"name\": \"replacement\"\n        },\n        {\n          \"labels\": [\n            \"utf-16be\"\n          ],\n          \"name\": \"UTF-16BE\"\n        },\n        {\n          \"labels\": [\n            \"utf-16\",\n            \"utf-16le\"\n          ],\n          \"name\": \"UTF-16LE\"\n        },\n        {\n          \"labels\": [\n            \"x-user-defined\"\n          ],\n          \"name\": \"x-user-defined\"\n        }\n      ],\n      \"heading\": \"Legacy miscellaneous encodings\"\n    }\n  ];\n\n  // Label to encoding registry.\n  /** @type {Object.<string,{name:string,labels:Array.<string>}>} */\n  var label_to_encoding = {};\n  encodings.forEach(function(category) {\n    category.encodings.forEach(function(encoding) {\n      encoding.labels.forEach(function(label) {\n        label_to_encoding[label] = encoding;\n      });\n    });\n  });\n\n  // Registry of of encoder/decoder factories, by encoding name.\n  /** @type {Object.<string, function({fatal:boolean}): Encoder>} */\n  var encoders = {};\n  /** @type {Object.<string, function({fatal:boolean}): Decoder>} */\n  var decoders = {};\n\n  //\n  // 6. Indexes\n  //\n\n  /**\n   * @param {number} pointer The |pointer| to search for.\n   * @param {(!Array.<?number>|undefined)} index The |index| to search within.\n   * @return {?number} The code point corresponding to |pointer| in |index|,\n   *     or null if |code point| is not in |index|.\n   */\n  function indexCodePointFor(pointer, index) {\n    if (!index) return null;\n    return index[pointer] || null;\n  }\n\n  /**\n   * @param {number} code_point The |code point| to search for.\n   * @param {!Array.<?number>} index The |index| to search within.\n   * @return {?number} The first pointer corresponding to |code point| in\n   *     |index|, or null if |code point| is not in |index|.\n   */\n  function indexPointerFor(code_point, index) {\n    var pointer = index.indexOf(code_point);\n    return pointer === -1 ? null : pointer;\n  }\n\n  /**\n   * @param {string} name Name of the index.\n   * @return {(!Array.<number>|!Array.<Array.<number>>)}\n   *  */\n  function index(name) {\n    if (!('encoding-indexes' in global)) {\n      throw Error(\"Indexes missing.\" +\n                  \" Did you forget to include encoding-indexes.js first?\");\n    }\n    return global['encoding-indexes'][name];\n  }\n\n  /**\n   * @param {number} pointer The |pointer| to search for in the gb18030 index.\n   * @return {?number} The code point corresponding to |pointer| in |index|,\n   *     or null if |code point| is not in the gb18030 index.\n   */\n  function indexGB18030RangesCodePointFor(pointer) {\n    // 1. If pointer is greater than 39419 and less than 189000, or\n    // pointer is greater than 1237575, return null.\n    if ((pointer > 39419 && pointer < 189000) || (pointer > 1237575))\n      return null;\n\n    // 2. If pointer is 7457, return code point U+E7C7.\n    if (pointer === 7457) return 0xE7C7;\n\n    // 3. Let offset be the last pointer in index gb18030 ranges that\n    // is equal to or less than pointer and let code point offset be\n    // its corresponding code point.\n    var offset = 0;\n    var code_point_offset = 0;\n    var idx = index('gb18030-ranges');\n    var i;\n    for (i = 0; i < idx.length; ++i) {\n      /** @type {!Array.<number>} */\n      var entry = idx[i];\n      if (entry[0] <= pointer) {\n        offset = entry[0];\n        code_point_offset = entry[1];\n      } else {\n        break;\n      }\n    }\n\n    // 4. Return a code point whose value is code point offset +\n    // pointer − offset.\n    return code_point_offset + pointer - offset;\n  }\n\n  /**\n   * @param {number} code_point The |code point| to locate in the gb18030 index.\n   * @return {number} The first pointer corresponding to |code point| in the\n   *     gb18030 index.\n   */\n  function indexGB18030RangesPointerFor(code_point) {\n    // 1. If code point is U+E7C7, return pointer 7457.\n    if (code_point === 0xE7C7) return 7457;\n\n    // 2. Let offset be the last code point in index gb18030 ranges\n    // that is equal to or less than code point and let pointer offset\n    // be its corresponding pointer.\n    var offset = 0;\n    var pointer_offset = 0;\n    var idx = index('gb18030-ranges');\n    var i;\n    for (i = 0; i < idx.length; ++i) {\n      /** @type {!Array.<number>} */\n      var entry = idx[i];\n      if (entry[1] <= code_point) {\n        offset = entry[1];\n        pointer_offset = entry[0];\n      } else {\n        break;\n      }\n    }\n\n    // 3. Return a pointer whose value is pointer offset + code point\n    // − offset.\n    return pointer_offset + code_point - offset;\n  }\n\n  /**\n   * @param {number} code_point The |code_point| to search for in the Shift_JIS\n   *     index.\n   * @return {?number} The code point corresponding to |pointer| in |index|,\n   *     or null if |code point| is not in the Shift_JIS index.\n   */\n  function indexShiftJISPointerFor(code_point) {\n    // 1. Let index be index jis0208 excluding all entries whose\n    // pointer is in the range 8272 to 8835, inclusive.\n    shift_jis_index = shift_jis_index ||\n      index('jis0208').map(function(code_point, pointer) {\n        return inRange(pointer, 8272, 8835) ? null : code_point;\n      });\n    var index_ = shift_jis_index;\n\n    // 2. Return the index pointer for code point in index.\n    return index_.indexOf(code_point);\n  }\n  var shift_jis_index;\n\n  /**\n   * @param {number} code_point The |code_point| to search for in the big5\n   *     index.\n   * @return {?number} The code point corresponding to |pointer| in |index|,\n   *     or null if |code point| is not in the big5 index.\n   */\n  function indexBig5PointerFor(code_point) {\n    // 1. Let index be index Big5 excluding all entries whose pointer\n    big5_index_no_hkscs = big5_index_no_hkscs ||\n      index('big5').map(function(code_point, pointer) {\n        return (pointer < (0xA1 - 0x81) * 157) ? null : code_point;\n      });\n    var index_ = big5_index_no_hkscs;\n\n    // 2. If code point is U+2550, U+255E, U+2561, U+256A, U+5341, or\n    // U+5345, return the last pointer corresponding to code point in\n    // index.\n    if (code_point === 0x2550 || code_point === 0x255E ||\n        code_point === 0x2561 || code_point === 0x256A ||\n        code_point === 0x5341 || code_point === 0x5345) {\n      return index_.lastIndexOf(code_point);\n    }\n\n    // 3. Return the index pointer for code point in index.\n    return indexPointerFor(code_point, index_);\n  }\n  var big5_index_no_hkscs;\n\n  //\n  // 8. API\n  //\n\n  /** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n  // 8.1 Interface TextDecoder\n\n  /**\n   * @constructor\n   * @param {string=} label The label of the encoding;\n   *     defaults to 'utf-8'.\n   * @param {Object=} options\n   */\n  function TextDecoder(label, options) {\n    // Web IDL conventions\n    if (!(this instanceof TextDecoder))\n      throw TypeError('Called as a function. Did you forget \\'new\\'?');\n    label = label !== undefined ? String(label) : DEFAULT_ENCODING;\n    options = ToDictionary(options);\n\n    // A TextDecoder object has an associated encoding, decoder,\n    // stream, ignore BOM flag (initially unset), BOM seen flag\n    // (initially unset), error mode (initially replacement), and do\n    // not flush flag (initially unset).\n\n    /** @private */\n    this._encoding = null;\n    /** @private @type {?Decoder} */\n    this._decoder = null;\n    /** @private @type {boolean} */\n    this._ignoreBOM = false;\n    /** @private @type {boolean} */\n    this._BOMseen = false;\n    /** @private @type {string} */\n    this._error_mode = 'replacement';\n    /** @private @type {boolean} */\n    this._do_not_flush = false;\n\n\n    // 1. Let encoding be the result of getting an encoding from\n    // label.\n    var encoding = getEncoding(label);\n\n    // 2. If encoding is failure or replacement, throw a RangeError.\n    if (encoding === null || encoding.name === 'replacement')\n      throw RangeError('Unknown encoding: ' + label);\n    if (!decoders[encoding.name]) {\n      throw Error('Decoder not present.' +\n                  ' Did you forget to include encoding-indexes.js first?');\n    }\n\n    // 3. Let dec be a new TextDecoder object.\n    var dec = this;\n\n    // 4. Set dec's encoding to encoding.\n    dec._encoding = encoding;\n\n    // 5. If options's fatal member is true, set dec's error mode to\n    // fatal.\n    if (Boolean(options['fatal']))\n      dec._error_mode = 'fatal';\n\n    // 6. If options's ignoreBOM member is true, set dec's ignore BOM\n    // flag.\n    if (Boolean(options['ignoreBOM']))\n      dec._ignoreBOM = true;\n\n    // For pre-ES5 runtimes:\n    if (!Object.defineProperty) {\n      this.encoding = dec._encoding.name.toLowerCase();\n      this.fatal = dec._error_mode === 'fatal';\n      this.ignoreBOM = dec._ignoreBOM;\n    }\n\n    // 7. Return dec.\n    return dec;\n  }\n\n  if (Object.defineProperty) {\n    // The encoding attribute's getter must return encoding's name.\n    Object.defineProperty(TextDecoder.prototype, 'encoding', {\n      /** @this {TextDecoder} */\n      get: function() { return this._encoding.name.toLowerCase(); }\n    });\n\n    // The fatal attribute's getter must return true if error mode\n    // is fatal, and false otherwise.\n    Object.defineProperty(TextDecoder.prototype, 'fatal', {\n      /** @this {TextDecoder} */\n      get: function() { return this._error_mode === 'fatal'; }\n    });\n\n    // The ignoreBOM attribute's getter must return true if ignore\n    // BOM flag is set, and false otherwise.\n    Object.defineProperty(TextDecoder.prototype, 'ignoreBOM', {\n      /** @this {TextDecoder} */\n      get: function() { return this._ignoreBOM; }\n    });\n  }\n\n  /**\n   * @param {BufferSource=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  TextDecoder.prototype.decode = function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    // 1. If the do not flush flag is unset, set decoder to a new\n    // encoding's decoder, set stream to a new stream, and unset the\n    // BOM seen flag.\n    if (!this._do_not_flush) {\n      this._decoder = decoders[this._encoding.name]({\n        fatal: this._error_mode === 'fatal'});\n      this._BOMseen = false;\n    }\n\n    // 2. If options's stream is true, set the do not flush flag, and\n    // unset the do not flush flag otherwise.\n    this._do_not_flush = Boolean(options['stream']);\n\n    // 3. If input is given, push a copy of input to stream.\n    // TODO: Align with spec algorithm - maintain stream on instance.\n    var input_stream = new Stream(bytes);\n\n    // 4. Let output be a new stream.\n    var output = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    // 5. While true:\n    while (true) {\n      // 1. Let token be the result of reading from stream.\n      var token = input_stream.read();\n\n      // 2. If token is end-of-stream and the do not flush flag is\n      // set, return output, serialized.\n      // TODO: Align with spec algorithm.\n      if (token === end_of_stream)\n        break;\n\n      // 3. Otherwise, run these subsubsteps:\n\n      // 1. Let result be the result of processing token for decoder,\n      // stream, output, and error mode.\n      result = this._decoder.handler(input_stream, token);\n\n      // 2. If result is finished, return output, serialized.\n      if (result === finished)\n        break;\n\n      if (result !== null) {\n        if (Array.isArray(result))\n          output.push.apply(output, /**@type {!Array.<number>}*/(result));\n        else\n          output.push(result);\n      }\n\n      // 3. Otherwise, if result is error, throw a TypeError.\n      // (Thrown in handler)\n\n      // 4. Otherwise, do nothing.\n    }\n    // TODO: Align with spec algorithm.\n    if (!this._do_not_flush) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          output.push.apply(output, /**@type {!Array.<number>}*/(result));\n        else\n          output.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    // A TextDecoder object also has an associated serialize stream\n    // algorithm...\n    /**\n     * @param {!Array.<number>} stream\n     * @return {string}\n     * @this {TextDecoder}\n     */\n    function serializeStream(stream) {\n      // 1. Let token be the result of reading from stream.\n      // (Done in-place on array, rather than as a stream)\n\n      // 2. If encoding is UTF-8, UTF-16BE, or UTF-16LE, and ignore\n      // BOM flag and BOM seen flag are unset, run these subsubsteps:\n      if (includes(['UTF-8', 'UTF-16LE', 'UTF-16BE'], this._encoding.name) &&\n          !this._ignoreBOM && !this._BOMseen) {\n        if (stream.length > 0 && stream[0] === 0xFEFF) {\n          // 1. If token is U+FEFF, set BOM seen flag.\n          this._BOMseen = true;\n          stream.shift();\n        } else if (stream.length > 0) {\n          // 2. Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to stream.\n          this._BOMseen = true;\n        } else {\n          // 3. Otherwise, if token is not end-of-stream, append token\n          // to output.\n          // (no-op)\n        }\n      }\n      // 4. Otherwise, return output.\n      return codePointsToString(stream);\n    }\n\n    return serializeStream.call(this, output);\n  };\n\n  // 8.2 Interface TextEncoder\n\n  /**\n   * @constructor\n   * @param {string=} label The label of the encoding. NONSTANDARD.\n   * @param {Object=} options NONSTANDARD.\n   */\n  function TextEncoder(label, options) {\n    // Web IDL conventions\n    if (!(this instanceof TextEncoder))\n      throw TypeError('Called as a function. Did you forget \\'new\\'?');\n    options = ToDictionary(options);\n\n    // A TextEncoder object has an associated encoding and encoder.\n\n    /** @private */\n    this._encoding = null;\n    /** @private @type {?Encoder} */\n    this._encoder = null;\n\n    // Non-standard\n    /** @private @type {boolean} */\n    this._do_not_flush = false;\n    /** @private @type {string} */\n    this._fatal = Boolean(options['fatal']) ? 'fatal' : 'replacement';\n\n    // 1. Let enc be a new TextEncoder object.\n    var enc = this;\n\n    // 2. Set enc's encoding to UTF-8's encoder.\n    if (Boolean(options['NONSTANDARD_allowLegacyEncoding'])) {\n      // NONSTANDARD behavior.\n      label = label !== undefined ? String(label) : DEFAULT_ENCODING;\n      var encoding = getEncoding(label);\n      if (encoding === null || encoding.name === 'replacement')\n        throw RangeError('Unknown encoding: ' + label);\n      if (!encoders[encoding.name]) {\n        throw Error('Encoder not present.' +\n                    ' Did you forget to include encoding-indexes.js first?');\n      }\n      enc._encoding = encoding;\n    } else {\n      // Standard behavior.\n      enc._encoding = getEncoding('utf-8');\n\n      if (label !== undefined && 'console' in global) {\n        console.warn('TextEncoder constructor called with encoding label, '\n                     + 'which is ignored.');\n      }\n    }\n\n    // For pre-ES5 runtimes:\n    if (!Object.defineProperty)\n      this.encoding = enc._encoding.name.toLowerCase();\n\n    // 3. Return enc.\n    return enc;\n  }\n\n  if (Object.defineProperty) {\n    // The encoding attribute's getter must return encoding's name.\n    Object.defineProperty(TextEncoder.prototype, 'encoding', {\n      /** @this {TextEncoder} */\n      get: function() { return this._encoding.name.toLowerCase(); }\n    });\n  }\n\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {!Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  TextEncoder.prototype.encode = function encode(opt_string, options) {\n    opt_string = opt_string === undefined ? '' : String(opt_string);\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful when\n    // the input is a USVString so streaming is not necessary.\n    if (!this._do_not_flush)\n      this._encoder = encoders[this._encoding.name]({\n        fatal: this._fatal === 'fatal'});\n    this._do_not_flush = Boolean(options['stream']);\n\n    // 1. Convert input to a stream.\n    var input = new Stream(stringToCodePoints(opt_string));\n\n    // 2. Let output be a new stream\n    var output = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    // 3. While true, run these substeps:\n    while (true) {\n      // 1. Let token be the result of reading from input.\n      var token = input.read();\n      if (token === end_of_stream)\n        break;\n      // 2. Let result be the result of processing token for encoder,\n      // input, output.\n      result = this._encoder.handler(input, token);\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        output.push.apply(output, /**@type {!Array.<number>}*/(result));\n      else\n        output.push(result);\n    }\n    // TODO: Align with spec algorithm.\n    if (!this._do_not_flush) {\n      while (true) {\n        result = this._encoder.handler(input, input.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          output.push.apply(output, /**@type {!Array.<number>}*/(result));\n        else\n          output.push(result);\n      }\n      this._encoder = null;\n    }\n    // 3. If result is finished, convert output into a byte sequence,\n    // and then return a Uint8Array object wrapping an ArrayBuffer\n    // containing output.\n    return new Uint8Array(output);\n  };\n\n\n  //\n  // 9. The encoding\n  //\n\n  // 9.1 utf-8\n\n  // 9.1.1 utf-8 decoder\n  /**\n   * @constructor\n   * @implements {Decoder}\n   * @param {{fatal: boolean}} options\n   */\n  function UTF8Decoder(options) {\n    var fatal = options.fatal;\n\n    // utf-8's decoder's has an associated utf-8 code point, utf-8\n    // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n    // lower boundary (initially 0x80), and a utf-8 upper boundary\n    // (initially 0xBF).\n    var /** @type {number} */ utf8_code_point = 0,\n        /** @type {number} */ utf8_bytes_seen = 0,\n        /** @type {number} */ utf8_bytes_needed = 0,\n        /** @type {number} */ utf8_lower_boundary = 0x80,\n        /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n    /**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */\n    this.handler = function(stream, bite) {\n      // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n      // set utf-8 bytes needed to 0 and return error.\n      if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n        utf8_bytes_needed = 0;\n        return decoderError(fatal);\n      }\n\n      // 2. If byte is end-of-stream, return finished.\n      if (bite === end_of_stream)\n        return finished;\n\n      // 3. If utf-8 bytes needed is 0, based on byte:\n      if (utf8_bytes_needed === 0) {\n\n        // 0x00 to 0x7F\n        if (inRange(bite, 0x00, 0x7F)) {\n          // Return a code point whose value is byte.\n          return bite;\n        }\n\n        // 0xC2 to 0xDF\n        else if (inRange(bite, 0xC2, 0xDF)) {\n          // 1. Set utf-8 bytes needed to 1.\n          utf8_bytes_needed = 1;\n\n          // 2. Set UTF-8 code point to byte & 0x1F.\n          utf8_code_point = bite & 0x1F;\n        }\n\n        // 0xE0 to 0xEF\n        else if (inRange(bite, 0xE0, 0xEF)) {\n          // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n          if (bite === 0xE0)\n            utf8_lower_boundary = 0xA0;\n          // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n          if (bite === 0xED)\n            utf8_upper_boundary = 0x9F;\n          // 3. Set utf-8 bytes needed to 2.\n          utf8_bytes_needed = 2;\n          // 4. Set UTF-8 code point to byte & 0xF.\n          utf8_code_point = bite & 0xF;\n        }\n\n        // 0xF0 to 0xF4\n        else if (inRange(bite, 0xF0, 0xF4)) {\n          // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n          if (bite === 0xF0)\n            utf8_lower_boundary = 0x90;\n          // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n          if (bite === 0xF4)\n            utf8_upper_boundary = 0x8F;\n          // 3. Set utf-8 bytes needed to 3.\n          utf8_bytes_needed = 3;\n          // 4. Set UTF-8 code point to byte & 0x7.\n          utf8_code_point = bite & 0x7;\n        }\n\n        // Otherwise\n        else {\n          // Return error.\n          return decoderError(fatal);\n        }\n\n        // Return continue.\n        return null;\n      }\n\n      // 4. If byte is not in the range utf-8 lower boundary to utf-8\n      // upper boundary, inclusive, run these substeps:\n      if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n        // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n        // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n        // utf-8 upper boundary to 0xBF.\n        utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n        utf8_lower_boundary = 0x80;\n        utf8_upper_boundary = 0xBF;\n\n        // 2. Prepend byte to stream.\n        stream.prepend(bite);\n\n        // 3. Return error.\n        return decoderError(fatal);\n      }\n\n      // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n      // to 0xBF.\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 6. Set UTF-8 code point to (UTF-8 code point << 6) | (byte &\n      // 0x3F)\n      utf8_code_point = (utf8_code_point << 6) | (bite & 0x3F);\n\n      // 7. Increase utf-8 bytes seen by one.\n      utf8_bytes_seen += 1;\n\n      // 8. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n      // continue.\n      if (utf8_bytes_seen !== utf8_bytes_needed)\n        return null;\n\n      // 9. Let code point be utf-8 code point.\n      var code_point = utf8_code_point;\n\n      // 10. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n      // seen to 0.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n      // 11. Return a code point whose value is code point.\n      return code_point;\n    };\n  }\n\n  // 9.1.2 utf-8 encoder\n  /**\n   * @constructor\n   * @implements {Encoder}\n   * @param {{fatal: boolean}} options\n   */\n  function UTF8Encoder(options) {\n    var fatal = options.fatal;\n    /**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */\n    this.handler = function(stream, code_point) {\n      // 1. If code point is end-of-stream, return finished.\n      if (code_point === end_of_stream)\n        return finished;\n\n      // 2. If code point is an ASCII code point, return a byte whose\n      // value is code point.\n      if (isASCIICodePoint(code_point))\n        return code_point;\n\n      // 3. Set count and offset based on the range code point is in:\n      var count, offset;\n      // U+0080 to U+07FF, inclusive:\n      if (inRange(code_point, 0x0080, 0x07FF)) {\n        // 1 and 0xC0\n        count = 1;\n        offset = 0xC0;\n      }\n      // U+0800 to U+FFFF, inclusive:\n      else if (inRange(code_point, 0x0800, 0xFFFF)) {\n        // 2 and 0xE0\n        count = 2;\n        offset = 0xE0;\n      }\n      // U+10000 to U+10FFFF, inclusive:\n      else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n        // 3 and 0xF0\n        count = 3;\n        offset = 0xF0;\n      }\n\n      // 4. Let bytes be a byte sequence whose first byte is (code\n      // point >> (6 × count)) + offset.\n      var bytes = [(code_point >> (6 * count)) + offset];\n\n      // 5. Run these substeps while count is greater than 0:\n      while (count > 0) {\n\n        // 1. Set temp to code point >> (6 × (count − 1)).\n        var temp = code_point >> (6 * (count - 1));\n\n        // 2. Append to bytes 0x80 | (temp & 0x3F).\n        bytes.push(0x80 | (temp & 0x3F));\n\n        // 3. Decrease count by one.\n        count -= 1;\n      }\n\n      // 6. Return bytes bytes, in order.\n      return bytes;\n    };\n  }\n\n  /** @param {{fatal: boolean}} options */\n  encoders['UTF-8'] = function(options) {\n    return new UTF8Encoder(options);\n  };\n  /** @param {{fatal: boolean}} options */\n  decoders['UTF-8'] = function(options) {\n    return new UTF8Decoder(options);\n  };\n\n  //\n  // 10. Legacy single-byte encodings\n  //\n\n  // 10.1 single-byte decoder\n  /**\n   * @constructor\n   * @implements {Decoder}\n   * @param {!Array.<number>} index The encoding index.\n   * @param {{fatal: boolean}} options\n   */\n  function SingleByteDecoder(index, options) {\n    var fatal = options.fatal;\n    /**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */\n    this.handler = function(stream, bite) {\n      // 1. If byte is end-of-stream, return finished.\n      if (bite === end_of_stream)\n        return finished;\n\n      // 2. If byte is an ASCII byte, return a code point whose value\n      // is byte.\n      if (isASCIIByte(bite))\n        return bite;\n\n      // 3. Let code point be the index code point for byte − 0x80 in\n      // index single-byte.\n      var code_point = index[bite - 0x80];\n\n      // 4. If code point is null, return error.\n      if (code_point === null)\n        return decoderError(fatal);\n\n      // 5. Return a code point whose value is code point.\n      return code_point;\n    };\n  }\n\n  // 10.2 single-byte encoder\n  /**\n   * @constructor\n   * @implements {Encoder}\n   * @param {!Array.<?number>} index The encoding index.\n   * @param {{fatal: boolean}} options\n   */\n  function SingleByteEncoder(index, options) {\n    var fatal = options.fatal;\n    /**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */\n    this.handler = function(stream, code_point) {\n      // 1. If code point is end-of-stream, return finished.\n      if (code_point === end_of_stream)\n        return finished;\n\n      // 2. If code point is an ASCII code point, return a byte whose\n      // value is code point.\n      if (isASCIICodePoint(code_point))\n        return code_point;\n\n      // 3. Let pointer be the index pointer for code point in index\n      // single-byte.\n      var pointer = indexPointerFor(code_point, index);\n\n      // 4. If pointer is null, return error with code point.\n      if (pointer === null)\n        encoderError(code_point);\n\n      // 5. Return a byte whose value is pointer + 0x80.\n      return pointer + 0x80;\n    };\n  }\n\n  (function() {\n    if (!('encoding-indexes' in global))\n      return;\n    encodings.forEach(function(category) {\n      if (category.heading !== 'Legacy single-byte encodings')\n        return;\n      category.encodings.forEach(function(encoding) {\n        var name = encoding.name;\n        var idx = index(name.toLowerCase());\n        /** @param {{fatal: boolean}} options */\n        decoders[name] = function(options) {\n          return new SingleByteDecoder(idx, options);\n        };\n        /** @param {{fatal: boolean}} options */\n        encoders[name] = function(options) {\n          return new SingleByteEncoder(idx, options);\n        };\n      });\n    });\n  }());\n\n  //\n  // 11. Legacy multi-byte Chinese (simplified) encodings\n  //\n\n  // 11.1 gbk\n\n  // 11.1.1 gbk decoder\n  // gbk's decoder is gb18030's decoder.\n  /** @param {{fatal: boolean}} options */\n  decoders['GBK'] = function(options) {\n    return new GB18030Decoder(options);\n  };\n\n  // 11.1.2 gbk encoder\n  // gbk's encoder is gb18030's encoder with its gbk flag set.\n  /** @param {{fatal: boolean}} options */\n  encoders['GBK'] = function(options) {\n    return new GB18030Encoder(options, true);\n  };\n\n  // 11.2 gb18030\n\n  // 11.2.1 gb18030 decoder\n  /**\n   * @constructor\n   * @implements {Decoder}\n   * @param {{fatal: boolean}} options\n   */\n  function GB18030Decoder(options) {\n    var fatal = options.fatal;\n    // gb18030's decoder has an associated gb18030 first, gb18030\n    // second, and gb18030 third (all initially 0x00).\n    var /** @type {number} */ gb18030_first = 0x00,\n        /** @type {number} */ gb18030_second = 0x00,\n        /** @type {number} */ gb18030_third = 0x00;\n    /**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */\n    this.handler = function(stream, bite) {\n      // 1. If byte is end-of-stream and gb18030 first, gb18030\n      // second, and gb18030 third are 0x00, return finished.\n      if (bite === end_of_stream && gb18030_first === 0x00 &&\n          gb18030_second === 0x00 && gb18030_third === 0x00) {\n        return finished;\n      }\n      // 2. If byte is end-of-stream, and gb18030 first, gb18030\n      // second, or gb18030 third is not 0x00, set gb18030 first,\n      // gb18030 second, and gb18030 third to 0x00, and return error.\n      if (bite === end_of_stream &&\n          (gb18030_first !== 0x00 || gb18030_second !== 0x00 ||\n           gb18030_third !== 0x00)) {\n        gb18030_first = 0x00;\n        gb18030_second = 0x00;\n        gb18030_third = 0x00;\n        decoderError(fatal);\n      }\n      var code_point;\n      // 3. If gb18030 third is not 0x00, run these substeps:\n      if (gb18030_third !== 0x00) {\n        // 1. Let code point be null.\n        code_point = null;\n        // 2. If byte is in the range 0x30 to 0x39, inclusive, set\n        // code point to the index gb18030 ranges code point for\n        // (((gb18030 first − 0x81) × 10 + gb18030 second − 0x30) ×\n        // 126 + gb18030 third − 0x81) × 10 + byte − 0x30.\n        if (inRange(bite, 0x30, 0x39)) {\n          code_point = indexGB18030RangesCodePointFor(\n              (((gb18030_first - 0x81) * 10 + gb18030_second - 0x30) * 126 +\n               gb18030_third - 0x81) * 10 + bite - 0x30);\n        }\n\n        // 3. Let buffer be a byte sequence consisting of gb18030\n        // second, gb18030 third, and byte, in order.\n        var buffer = [gb18030_second, gb18030_third, bite];\n\n        // 4. Set gb18030 first, gb18030 second, and gb18030 third to\n        // 0x00.\n        gb18030_first = 0x00;\n        gb18030_second = 0x00;\n        gb18030_third = 0x00;\n\n        // 5. If code point is null, prepend buffer to stream and\n        // return error.\n        if (code_point === null) {\n          stream.prepend(buffer);\n          return decoderError(fatal);\n        }\n\n        // 6. Return a code point whose value is code point.\n        return code_point;\n      }\n\n      // 4. If gb18030 second is not 0x00, run these substeps:\n      if (gb18030_second !== 0x00) {\n\n        // 1. If byte is in the range 0x81 to 0xFE, inclusive, set\n        // gb18030 third to byte and return continue.\n        if (inRange(bite, 0x81, 0xFE)) {\n          gb18030_third = bite;\n          return null;\n        }\n\n        // 2. Prepend gb18030 second followed by byte to stream, set\n        // gb18030 first and gb18030 second to 0x00, and return error.\n        stream.prepend([gb18030_second, bite]);\n        gb18030_first = 0x00;\n        gb18030_second = 0x00;\n        return decoderError(fatal);\n      }\n\n      // 5. If gb18030 first is not 0x00, run these substeps:\n      if (gb18030_first !== 0x00) {\n\n        // 1. If byte is in the range 0x30 to 0x39, inclusive, set\n        // gb18030 second to byte and return continue.\n        if (inRange(bite, 0x30, 0x39)) {\n          gb18030_second = bite;\n          return null;\n        }\n\n        // 2. Let lead be gb18030 first, let pointer be null, and set\n        // gb18030 first to 0x00.\n        var lead = gb18030_first;\n        var pointer = null;\n        gb18030_first = 0x00;\n\n        // 3. Let offset be 0x40 if byte is less than 0x7F and 0x41\n        // otherwise.\n        var offset = bite < 0x7F ? 0x40 : 0x41;\n\n        // 4. If byte is in the range 0x40 to 0x7E, inclusive, or 0x80\n        // to 0xFE, inclusive, set pointer to (lead − 0x81) × 190 +\n        // (byte − offset).\n        if (inRange(bite, 0x40, 0x7E) || inRange(bite, 0x80, 0xFE))\n          pointer = (lead - 0x81) * 190 + (bite - offset);\n\n        // 5. Let code point be null if pointer is null and the index\n        // code point for pointer in index gb18030 otherwise.\n        code_point = pointer === null ? null :\n            indexCodePointFor(pointer, index('gb18030'));\n\n        // 6. If code point is null and byte is an ASCII byte, prepend\n        // byte to stream.\n        if (code_point === null && isASCIIByte(bite))\n          stream.prepend(bite);\n\n        // 7. If code point is null, return error.\n        if (code_point === null)\n          return decoderError(fatal);\n\n        // 8. Return a code point whose value is code point.\n        return code_point;\n      }\n\n      // 6. If byte is an ASCII byte, return a code point whose value\n      // is byte.\n      if (isASCIIByte(bite))\n        return bite;\n\n      // 7. If byte is 0x80, return code point U+20AC.\n      if (bite === 0x80)\n        return 0x20AC;\n\n      // 8. If byte is in the range 0x81 to 0xFE, inclusive, set\n      // gb18030 first to byte and return continue.\n      if (inRange(bite, 0x81, 0xFE)) {\n        gb18030_first = bite;\n        return null;\n      }\n\n      // 9. Return error.\n      return decoderError(fatal);\n    };\n  }\n\n  // 11.2.2 gb18030 encoder\n  /**\n   * @constructor\n   * @implements {Encoder}\n   * @param {{fatal: boolean}} options\n   * @param {boolean=} gbk_flag\n   */\n  function GB18030Encoder(options, gbk_flag) {\n    var fatal = options.fatal;\n    // gb18030's decoder has an associated gbk flag (initially unset).\n    /**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */\n    this.handler = function(stream, code_point) {\n      // 1. If code point is end-of-stream, return finished.\n      if (code_point === end_of_stream)\n        return finished;\n\n      // 2. If code point is an ASCII code point, return a byte whose\n      // value is code point.\n      if (isASCIICodePoint(code_point))\n        return code_point;\n\n      // 3. If code point is U+E5E5, return error with code point.\n      if (code_point === 0xE5E5)\n        return encoderError(code_point);\n\n      // 4. If the gbk flag is set and code point is U+20AC, return\n      // byte 0x80.\n      if (gbk_flag && code_point === 0x20AC)\n        return 0x80;\n\n      // 5. Let pointer be the index pointer for code point in index\n      // gb18030.\n      var pointer = indexPointerFor(code_point, index('gb18030'));\n\n      // 6. If pointer is not null, run these substeps:\n      if (pointer !== null) {\n\n        // 1. Let lead be floor(pointer / 190) + 0x81.\n        var lead = floor(pointer / 190) + 0x81;\n\n        // 2. Let trail be pointer % 190.\n        var trail = pointer % 190;\n\n        // 3. Let offset be 0x40 if trail is less than 0x3F and 0x41 otherwise.\n        var offset = trail < 0x3F ? 0x40 : 0x41;\n\n        // 4. Return two bytes whose values are lead and trail + offset.\n        return [lead, trail + offset];\n      }\n\n      // 7. If gbk flag is set, return error with code point.\n      if (gbk_flag)\n        return encoderError(code_point);\n\n      // 8. Set pointer to the index gb18030 ranges pointer for code\n      // point.\n      pointer = indexGB18030RangesPointerFor(code_point);\n\n      // 9. Let byte1 be floor(pointer / 10 / 126 / 10).\n      var byte1 = floor(pointer / 10 / 126 / 10);\n\n      // 10. Set pointer to pointer − byte1 × 10 × 126 × 10.\n      pointer = pointer - byte1 * 10 * 126 * 10;\n\n      // 11. Let byte2 be floor(pointer / 10 / 126).\n      var byte2 = floor(pointer / 10 / 126);\n\n      // 12. Set pointer to pointer − byte2 × 10 × 126.\n      pointer = pointer - byte2 * 10 * 126;\n\n      // 13. Let byte3 be floor(pointer / 10).\n      var byte3 = floor(pointer / 10);\n\n      // 14. Let byte4 be pointer − byte3 × 10.\n      var byte4 = pointer - byte3 * 10;\n\n      // 15. Return four bytes whose values are byte1 + 0x81, byte2 +\n      // 0x30, byte3 + 0x81, byte4 + 0x30.\n      return [byte1 + 0x81,\n              byte2 + 0x30,\n              byte3 + 0x81,\n              byte4 + 0x30];\n    };\n  }\n\n  /** @param {{fatal: boolean}} options */\n  encoders['gb18030'] = function(options) {\n    return new GB18030Encoder(options);\n  };\n  /** @param {{fatal: boolean}} options */\n  decoders['gb18030'] = function(options) {\n    return new GB18030Decoder(options);\n  };\n\n\n  //\n  // 12. Legacy multi-byte Chinese (traditional) encodings\n  //\n\n  // 12.1 Big5\n\n  // 12.1.1 Big5 decoder\n  /**\n   * @constructor\n   * @implements {Decoder}\n   * @param {{fatal: boolean}} options\n   */\n  function Big5Decoder(options) {\n    var fatal = options.fatal;\n    // Big5's decoder has an associated Big5 lead (initially 0x00).\n    var /** @type {number} */ Big5_lead = 0x00;\n\n    /**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */\n    this.handler = function(stream, bite) {\n      // 1. If byte is end-of-stream and Big5 lead is not 0x00, set\n      // Big5 lead to 0x00 and return error.\n      if (bite === end_of_stream && Big5_lead !== 0x00) {\n        Big5_lead = 0x00;\n        return decoderError(fatal);\n      }\n\n      // 2. If byte is end-of-stream and Big5 lead is 0x00, return\n      // finished.\n      if (bite === end_of_stream && Big5_lead === 0x00)\n        return finished;\n\n      // 3. If Big5 lead is not 0x00, let lead be Big5 lead, let\n      // pointer be null, set Big5 lead to 0x00, and then run these\n      // substeps:\n      if (Big5_lead !== 0x00) {\n        var lead = Big5_lead;\n        var pointer = null;\n        Big5_lead = 0x00;\n\n        // 1. Let offset be 0x40 if byte is less than 0x7F and 0x62\n        // otherwise.\n        var offset = bite < 0x7F ? 0x40 : 0x62;\n\n        // 2. If byte is in the range 0x40 to 0x7E, inclusive, or 0xA1\n        // to 0xFE, inclusive, set pointer to (lead − 0x81) × 157 +\n        // (byte − offset).\n        if (inRange(bite, 0x40, 0x7E) || inRange(bite, 0xA1, 0xFE))\n          pointer = (lead - 0x81) * 157 + (bite - offset);\n\n        // 3. If there is a row in the table below whose first column\n        // is pointer, return the two code points listed in its second\n        // column\n        // Pointer | Code points\n        // --------+--------------\n        // 1133    | U+00CA U+0304\n        // 1135    | U+00CA U+030C\n        // 1164    | U+00EA U+0304\n        // 1166    | U+00EA U+030C\n        switch (pointer) {\n          case 1133: return [0x00CA, 0x0304];\n          case 1135: return [0x00CA, 0x030C];\n          case 1164: return [0x00EA, 0x0304];\n          case 1166: return [0x00EA, 0x030C];\n        }\n\n        // 4. Let code point be null if pointer is null and the index\n        // code point for pointer in index Big5 otherwise.\n        var code_point = (pointer === null) ? null :\n            indexCodePointFor(pointer, index('big5'));\n\n        // 5. If code point is null and byte is an ASCII byte, prepend\n        // byte to stream.\n        if (code_point === null && isASCIIByte(bite))\n          stream.prepend(bite);\n\n        // 6. If code point is null, return error.\n        if (code_point === null)\n          return decoderError(fatal);\n\n        // 7. Return a code point whose value is code point.\n        return code_point;\n      }\n\n      // 4. If byte is an ASCII byte, return a code point whose value\n      // is byte.\n      if (isASCIIByte(bite))\n        return bite;\n\n      // 5. If byte is in the range 0x81 to 0xFE, inclusive, set Big5\n      // lead to byte and return continue.\n      if (inRange(bite, 0x81, 0xFE)) {\n        Big5_lead = bite;\n        return null;\n      }\n\n      // 6. Return error.\n      return decoderError(fatal);\n    };\n  }\n\n  // 12.1.2 Big5 encoder\n  /**\n   * @constructor\n   * @implements {Encoder}\n   * @param {{fatal: boolean}} options\n   */\n  function Big5Encoder(options) {\n    var fatal = options.fatal;\n    /**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */\n    this.handler = function(stream, code_point) {\n      // 1. If code point is end-of-stream, return finished.\n      if (code_point === end_of_stream)\n        return finished;\n\n      // 2. If code point is an ASCII code point, return a byte whose\n      // value is code point.\n      if (isASCIICodePoint(code_point))\n        return code_point;\n\n      // 3. Let pointer be the index Big5 pointer for code point.\n      var pointer = indexBig5PointerFor(code_point);\n\n      // 4. If pointer is null, return error with code point.\n      if (pointer === null)\n        return encoderError(code_point);\n\n      // 5. Let lead be floor(pointer / 157) + 0x81.\n      var lead = floor(pointer / 157) + 0x81;\n\n      // 6. If lead is less than 0xA1, return error with code point.\n      if (lead < 0xA1)\n        return encoderError(code_point);\n\n      // 7. Let trail be pointer % 157.\n      var trail = pointer % 157;\n\n      // 8. Let offset be 0x40 if trail is less than 0x3F and 0x62\n      // otherwise.\n      var offset = trail < 0x3F ? 0x40 : 0x62;\n\n      // Return two bytes whose values are lead and trail + offset.\n      return [lead, trail + offset];\n    };\n  }\n\n  /** @param {{fatal: boolean}} options */\n  encoders['Big5'] = function(options) {\n    return new Big5Encoder(options);\n  };\n  /** @param {{fatal: boolean}} options */\n  decoders['Big5'] = function(options) {\n    return new Big5Decoder(options);\n  };\n\n\n  //\n  // 13. Legacy multi-byte Japanese encodings\n  //\n\n  // 13.1 euc-jp\n\n  // 13.1.1 euc-jp decoder\n  /**\n   * @constructor\n   * @implements {Decoder}\n   * @param {{fatal: boolean}} options\n   */\n  function EUCJPDecoder(options) {\n    var fatal = options.fatal;\n\n    // euc-jp's decoder has an associated euc-jp jis0212 flag\n    // (initially unset) and euc-jp lead (initially 0x00).\n    var /** @type {boolean} */ eucjp_jis0212_flag = false,\n        /** @type {number} */ eucjp_lead = 0x00;\n\n    /**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */\n    this.handler = function(stream, bite) {\n      // 1. If byte is end-of-stream and euc-jp lead is not 0x00, set\n      // euc-jp lead to 0x00, and return error.\n      if (bite === end_of_stream && eucjp_lead !== 0x00) {\n        eucjp_lead = 0x00;\n        return decoderError(fatal);\n      }\n\n      // 2. If byte is end-of-stream and euc-jp lead is 0x00, return\n      // finished.\n      if (bite === end_of_stream && eucjp_lead === 0x00)\n        return finished;\n\n      // 3. If euc-jp lead is 0x8E and byte is in the range 0xA1 to\n      // 0xDF, inclusive, set euc-jp lead to 0x00 and return a code\n      // point whose value is 0xFF61 − 0xA1 + byte.\n      if (eucjp_lead === 0x8E && inRange(bite, 0xA1, 0xDF)) {\n        eucjp_lead = 0x00;\n        return 0xFF61 - 0xA1 + bite;\n      }\n\n      // 4. If euc-jp lead is 0x8F and byte is in the range 0xA1 to\n      // 0xFE, inclusive, set the euc-jp jis0212 flag, set euc-jp lead\n      // to byte, and return continue.\n      if (eucjp_lead === 0x8F && inRange(bite, 0xA1, 0xFE)) {\n        eucjp_jis0212_flag = true;\n        eucjp_lead = bite;\n        return null;\n      }\n\n      // 5. If euc-jp lead is not 0x00, let lead be euc-jp lead, set\n      // euc-jp lead to 0x00, and run these substeps:\n      if (eucjp_lead !== 0x00) {\n        var lead = eucjp_lead;\n        eucjp_lead = 0x00;\n\n        // 1. Let code point be null.\n        var code_point = null;\n\n        // 2. If lead and byte are both in the range 0xA1 to 0xFE,\n        // inclusive, set code point to the index code point for (lead\n        // − 0xA1) × 94 + byte − 0xA1 in index jis0208 if the euc-jp\n        // jis0212 flag is unset and in index jis0212 otherwise.\n        if (inRange(lead, 0xA1, 0xFE) && inRange(bite, 0xA1, 0xFE)) {\n          code_point = indexCodePointFor(\n            (lead - 0xA1) * 94 + (bite - 0xA1),\n            index(!eucjp_jis0212_flag ? 'jis0208' : 'jis0212'));\n        }\n\n        // 3. Unset the euc-jp jis0212 flag.\n        eucjp_jis0212_flag = false;\n\n        // 4. If byte is not in the range 0xA1 to 0xFE, inclusive,\n        // prepend byte to stream.\n        if (!inRange(bite, 0xA1, 0xFE))\n          stream.prepend(bite);\n\n        // 5. If code point is null, return error.\n        if (code_point === null)\n          return decoderError(fatal);\n\n        // 6. Return a code point whose value is code point.\n        return code_point;\n      }\n\n      // 6. If byte is an ASCII byte, return a code point whose value\n      // is byte.\n      if (isASCIIByte(bite))\n        return bite;\n\n      // 7. If byte is 0x8E, 0x8F, or in the range 0xA1 to 0xFE,\n      // inclusive, set euc-jp lead to byte and return continue.\n      if (bite === 0x8E || bite === 0x8F || inRange(bite, 0xA1, 0xFE)) {\n        eucjp_lead = bite;\n        return null;\n      }\n\n      // 8. Return error.\n      return decoderError(fatal);\n    };\n  }\n\n  // 13.1.2 euc-jp encoder\n  /**\n   * @constructor\n   * @implements {Encoder}\n   * @param {{fatal: boolean}} options\n   */\n  function EUCJPEncoder(options) {\n    var fatal = options.fatal;\n    /**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */\n    this.handler = function(stream, code_point) {\n      // 1. If code point is end-of-stream, return finished.\n      if (code_point === end_of_stream)\n        return finished;\n\n      // 2. If code point is an ASCII code point, return a byte whose\n      // value is code point.\n      if (isASCIICodePoint(code_point))\n        return code_point;\n\n      // 3. If code point is U+00A5, return byte 0x5C.\n      if (code_point === 0x00A5)\n        return 0x5C;\n\n      // 4. If code point is U+203E, return byte 0x7E.\n      if (code_point === 0x203E)\n        return 0x7E;\n\n      // 5. If code point is in the range U+FF61 to U+FF9F, inclusive,\n      // return two bytes whose values are 0x8E and code point −\n      // 0xFF61 + 0xA1.\n      if (inRange(code_point, 0xFF61, 0xFF9F))\n        return [0x8E, code_point - 0xFF61 + 0xA1];\n\n      // 6. If code point is U+2212, set it to U+FF0D.\n      if (code_point === 0x2212)\n        code_point = 0xFF0D;\n\n      // 7. Let pointer be the index pointer for code point in index\n      // jis0208.\n      var pointer = indexPointerFor(code_point, index('jis0208'));\n\n      // 8. If pointer is null, return error with code point.\n      if (pointer === null)\n        return encoderError(code_point);\n\n      // 9. Let lead be floor(pointer / 94) + 0xA1.\n      var lead = floor(pointer / 94) + 0xA1;\n\n      // 10. Let trail be pointer % 94 + 0xA1.\n      var trail = pointer % 94 + 0xA1;\n\n      // 11. Return two bytes whose values are lead and trail.\n      return [lead, trail];\n    };\n  }\n\n  /** @param {{fatal: boolean}} options */\n  encoders['EUC-JP'] = function(options) {\n    return new EUCJPEncoder(options);\n  };\n  /** @param {{fatal: boolean}} options */\n  decoders['EUC-JP'] = function(options) {\n    return new EUCJPDecoder(options);\n  };\n\n  // 13.2 iso-2022-jp\n\n  // 13.2.1 iso-2022-jp decoder\n  /**\n   * @constructor\n   * @implements {Decoder}\n   * @param {{fatal: boolean}} options\n   */\n  function ISO2022JPDecoder(options) {\n    var fatal = options.fatal;\n    /** @enum */\n    var states = {\n      ASCII: 0,\n      Roman: 1,\n      Katakana: 2,\n      LeadByte: 3,\n      TrailByte: 4,\n      EscapeStart: 5,\n      Escape: 6\n    };\n    // iso-2022-jp's decoder has an associated iso-2022-jp decoder\n    // state (initially ASCII), iso-2022-jp decoder output state\n    // (initially ASCII), iso-2022-jp lead (initially 0x00), and\n    // iso-2022-jp output flag (initially unset).\n    var /** @type {number} */ iso2022jp_decoder_state = states.ASCII,\n        /** @type {number} */ iso2022jp_decoder_output_state = states.ASCII,\n        /** @type {number} */ iso2022jp_lead = 0x00,\n        /** @type {boolean} */ iso2022jp_output_flag = false;\n    /**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */\n    this.handler = function(stream, bite) {\n      // switching on iso-2022-jp decoder state:\n      switch (iso2022jp_decoder_state) {\n      default:\n      case states.ASCII:\n        // ASCII\n        // Based on byte:\n\n        // 0x1B\n        if (bite === 0x1B) {\n          // Set iso-2022-jp decoder state to escape start and return\n          // continue.\n          iso2022jp_decoder_state = states.EscapeStart;\n          return null;\n        }\n\n        // 0x00 to 0x7F, excluding 0x0E, 0x0F, and 0x1B\n        if (inRange(bite, 0x00, 0x7F) && bite !== 0x0E\n            && bite !== 0x0F && bite !== 0x1B) {\n          // Unset the iso-2022-jp output flag and return a code point\n          // whose value is byte.\n          iso2022jp_output_flag = false;\n          return bite;\n        }\n\n        // end-of-stream\n        if (bite === end_of_stream) {\n          // Return finished.\n          return finished;\n        }\n\n        // Otherwise\n        // Unset the iso-2022-jp output flag and return error.\n        iso2022jp_output_flag = false;\n        return decoderError(fatal);\n\n      case states.Roman:\n        // Roman\n        // Based on byte:\n\n        // 0x1B\n        if (bite === 0x1B) {\n          // Set iso-2022-jp decoder state to escape start and return\n          // continue.\n          iso2022jp_decoder_state = states.EscapeStart;\n          return null;\n        }\n\n        // 0x5C\n        if (bite === 0x5C) {\n          // Unset the iso-2022-jp output flag and return code point\n          // U+00A5.\n          iso2022jp_output_flag = false;\n          return 0x00A5;\n        }\n\n        // 0x7E\n        if (bite === 0x7E) {\n          // Unset the iso-2022-jp output flag and return code point\n          // U+203E.\n          iso2022jp_output_flag = false;\n          return 0x203E;\n        }\n\n        // 0x00 to 0x7F, excluding 0x0E, 0x0F, 0x1B, 0x5C, and 0x7E\n        if (inRange(bite, 0x00, 0x7F) && bite !== 0x0E && bite !== 0x0F\n            && bite !== 0x1B && bite !== 0x5C && bite !== 0x7E) {\n          // Unset the iso-2022-jp output flag and return a code point\n          // whose value is byte.\n          iso2022jp_output_flag = false;\n          return bite;\n        }\n\n        // end-of-stream\n        if (bite === end_of_stream) {\n          // Return finished.\n          return finished;\n        }\n\n        // Otherwise\n        // Unset the iso-2022-jp output flag and return error.\n        iso2022jp_output_flag = false;\n        return decoderError(fatal);\n\n      case states.Katakana:\n        // Katakana\n        // Based on byte:\n\n        // 0x1B\n        if (bite === 0x1B) {\n          // Set iso-2022-jp decoder state to escape start and return\n          // continue.\n          iso2022jp_decoder_state = states.EscapeStart;\n          return null;\n        }\n\n        // 0x21 to 0x5F\n        if (inRange(bite, 0x21, 0x5F)) {\n          // Unset the iso-2022-jp output flag and return a code point\n          // whose value is 0xFF61 − 0x21 + byte.\n          iso2022jp_output_flag = false;\n          return 0xFF61 - 0x21 + bite;\n        }\n\n        // end-of-stream\n        if (bite === end_of_stream) {\n          // Return finished.\n          return finished;\n        }\n\n        // Otherwise\n        // Unset the iso-2022-jp output flag and return error.\n        iso2022jp_output_flag = false;\n        return decoderError(fatal);\n\n      case states.LeadByte:\n        // Lead byte\n        // Based on byte:\n\n        // 0x1B\n        if (bite === 0x1B) {\n          // Set iso-2022-jp decoder state to escape start and return\n          // continue.\n          iso2022jp_decoder_state = states.EscapeStart;\n          return null;\n        }\n\n        // 0x21 to 0x7E\n        if (inRange(bite, 0x21, 0x7E)) {\n          // Unset the iso-2022-jp output flag, set iso-2022-jp lead\n          // to byte, iso-2022-jp decoder state to trail byte, and\n          // return continue.\n          iso2022jp_output_flag = false;\n          iso2022jp_lead = bite;\n          iso2022jp_decoder_state = states.TrailByte;\n          return null;\n        }\n\n        // end-of-stream\n        if (bite === end_of_stream) {\n          // Return finished.\n          return finished;\n        }\n\n        // Otherwise\n        // Unset the iso-2022-jp output flag and return error.\n        iso2022jp_output_flag = false;\n        return decoderError(fatal);\n\n      case states.TrailByte:\n        // Trail byte\n        // Based on byte:\n\n        // 0x1B\n        if (bite === 0x1B) {\n          // Set iso-2022-jp decoder state to escape start and return\n          // continue.\n          iso2022jp_decoder_state = states.EscapeStart;\n          return decoderError(fatal);\n        }\n\n        // 0x21 to 0x7E\n        if (inRange(bite, 0x21, 0x7E)) {\n          // 1. Set the iso-2022-jp decoder state to lead byte.\n          iso2022jp_decoder_state = states.LeadByte;\n\n          // 2. Let pointer be (iso-2022-jp lead − 0x21) × 94 + byte − 0x21.\n          var pointer = (iso2022jp_lead - 0x21) * 94 + bite - 0x21;\n\n          // 3. Let code point be the index code point for pointer in\n          // index jis0208.\n          var code_point = indexCodePointFor(pointer, index('jis0208'));\n\n          // 4. If code point is null, return error.\n          if (code_point === null)\n            return decoderError(fatal);\n\n          // 5. Return a code point whose value is code point.\n          return code_point;\n        }\n\n        // end-of-stream\n        if (bite === end_of_stream) {\n          // Set the iso-2022-jp decoder state to lead byte, prepend\n          // byte to stream, and return error.\n          iso2022jp_decoder_state = states.LeadByte;\n          stream.prepend(bite);\n          return decoderError(fatal);\n        }\n\n        // Otherwise\n        // Set iso-2022-jp decoder state to lead byte and return\n        // error.\n        iso2022jp_decoder_state = states.LeadByte;\n        return decoderError(fatal);\n\n      case states.EscapeStart:\n        // Escape start\n\n        // 1. If byte is either 0x24 or 0x28, set iso-2022-jp lead to\n        // byte, iso-2022-jp decoder state to escape, and return\n        // continue.\n        if (bite === 0x24 || bite === 0x28) {\n          iso2022jp_lead = bite;\n          iso2022jp_decoder_state = states.Escape;\n          return null;\n        }\n\n        // 2. Prepend byte to stream.\n        stream.prepend(bite);\n\n        // 3. Unset the iso-2022-jp output flag, set iso-2022-jp\n        // decoder state to iso-2022-jp decoder output state, and\n        // return error.\n        iso2022jp_output_flag = false;\n        iso2022jp_decoder_state = iso2022jp_decoder_output_state;\n        return decoderError(fatal);\n\n      case states.Escape:\n        // Escape\n\n        // 1. Let lead be iso-2022-jp lead and set iso-2022-jp lead to\n        // 0x00.\n        var lead = iso2022jp_lead;\n        iso2022jp_lead = 0x00;\n\n        // 2. Let state be null.\n        var state = null;\n\n        // 3. If lead is 0x28 and byte is 0x42, set state to ASCII.\n        if (lead === 0x28 && bite === 0x42)\n          state = states.ASCII;\n\n        // 4. If lead is 0x28 and byte is 0x4A, set state to Roman.\n        if (lead === 0x28 && bite === 0x4A)\n          state = states.Roman;\n\n        // 5. If lead is 0x28 and byte is 0x49, set state to Katakana.\n        if (lead === 0x28 && bite === 0x49)\n          state = states.Katakana;\n\n        // 6. If lead is 0x24 and byte is either 0x40 or 0x42, set\n        // state to lead byte.\n        if (lead === 0x24 && (bite === 0x40 || bite === 0x42))\n          state = states.LeadByte;\n\n        // 7. If state is non-null, run these substeps:\n        if (state !== null) {\n          // 1. Set iso-2022-jp decoder state and iso-2022-jp decoder\n          // output state to states.\n          iso2022jp_decoder_state = iso2022jp_decoder_state = state;\n\n          // 2. Let output flag be the iso-2022-jp output flag.\n          var output_flag = iso2022jp_output_flag;\n\n          // 3. Set the iso-2022-jp output flag.\n          iso2022jp_output_flag = true;\n\n          // 4. Return continue, if output flag is unset, and error\n          // otherwise.\n          return !output_flag ? null : decoderError(fatal);\n        }\n\n        // 8. Prepend lead and byte to stream.\n        stream.prepend([lead, bite]);\n\n        // 9. Unset the iso-2022-jp output flag, set iso-2022-jp\n        // decoder state to iso-2022-jp decoder output state and\n        // return error.\n        iso2022jp_output_flag = false;\n        iso2022jp_decoder_state = iso2022jp_decoder_output_state;\n        return decoderError(fatal);\n      }\n    };\n  }\n\n  // 13.2.2 iso-2022-jp encoder\n  /**\n   * @constructor\n   * @implements {Encoder}\n   * @param {{fatal: boolean}} options\n   */\n  function ISO2022JPEncoder(options) {\n    var fatal = options.fatal;\n    // iso-2022-jp's encoder has an associated iso-2022-jp encoder\n    // state which is one of ASCII, Roman, and jis0208 (initially\n    // ASCII).\n    /** @enum */\n    var states = {\n      ASCII: 0,\n      Roman: 1,\n      jis0208: 2\n    };\n    var /** @type {number} */ iso2022jp_state = states.ASCII;\n    /**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */\n    this.handler = function(stream, code_point) {\n      // 1. If code point is end-of-stream and iso-2022-jp encoder\n      // state is not ASCII, prepend code point to stream, set\n      // iso-2022-jp encoder state to ASCII, and return three bytes\n      // 0x1B 0x28 0x42.\n      if (code_point === end_of_stream &&\n          iso2022jp_state !== states.ASCII) {\n        stream.prepend(code_point);\n        iso2022jp_state = states.ASCII;\n        return [0x1B, 0x28, 0x42];\n      }\n\n      // 2. If code point is end-of-stream and iso-2022-jp encoder\n      // state is ASCII, return finished.\n      if (code_point === end_of_stream && iso2022jp_state === states.ASCII)\n        return finished;\n\n      // 3. If ISO-2022-JP encoder state is ASCII or Roman, and code\n      // point is U+000E, U+000F, or U+001B, return error with U+FFFD.\n      if ((iso2022jp_state === states.ASCII ||\n           iso2022jp_state === states.Roman) &&\n          (code_point === 0x000E || code_point === 0x000F ||\n           code_point === 0x001B)) {\n        return encoderError(0xFFFD);\n      }\n\n      // 4. If iso-2022-jp encoder state is ASCII and code point is an\n      // ASCII code point, return a byte whose value is code point.\n      if (iso2022jp_state === states.ASCII &&\n          isASCIICodePoint(code_point))\n        return code_point;\n\n      // 5. If iso-2022-jp encoder state is Roman and code point is an\n      // ASCII code point, excluding U+005C and U+007E, or is U+00A5\n      // or U+203E, run these substeps:\n      if (iso2022jp_state === states.Roman &&\n          ((isASCIICodePoint(code_point) &&\n           code_point !== 0x005C && code_point !== 0x007E) ||\n          (code_point == 0x00A5 || code_point == 0x203E))) {\n\n        // 1. If code point is an ASCII code point, return a byte\n        // whose value is code point.\n        if (isASCIICodePoint(code_point))\n          return code_point;\n\n        // 2. If code point is U+00A5, return byte 0x5C.\n        if (code_point === 0x00A5)\n          return 0x5C;\n\n        // 3. If code point is U+203E, return byte 0x7E.\n        if (code_point === 0x203E)\n          return 0x7E;\n      }\n\n      // 6. If code point is an ASCII code point, and iso-2022-jp\n      // encoder state is not ASCII, prepend code point to stream, set\n      // iso-2022-jp encoder state to ASCII, and return three bytes\n      // 0x1B 0x28 0x42.\n      if (isASCIICodePoint(code_point) &&\n          iso2022jp_state !== states.ASCII) {\n        stream.prepend(code_point);\n        iso2022jp_state = states.ASCII;\n        return [0x1B, 0x28, 0x42];\n      }\n\n      // 7. If code point is either U+00A5 or U+203E, and iso-2022-jp\n      // encoder state is not Roman, prepend code point to stream, set\n      // iso-2022-jp encoder state to Roman, and return three bytes\n      // 0x1B 0x28 0x4A.\n      if ((code_point === 0x00A5 || code_point === 0x203E) &&\n          iso2022jp_state !== states.Roman) {\n        stream.prepend(code_point);\n        iso2022jp_state = states.Roman;\n        return [0x1B, 0x28, 0x4A];\n      }\n\n      // 8. If code point is U+2212, set it to U+FF0D.\n      if (code_point === 0x2212)\n        code_point = 0xFF0D;\n\n      // 9. Let pointer be the index pointer for code point in index\n      // jis0208.\n      var pointer = indexPointerFor(code_point, index('jis0208'));\n\n      // 10. If pointer is null, return error with code point.\n      if (pointer === null)\n        return encoderError(code_point);\n\n      // 11. If iso-2022-jp encoder state is not jis0208, prepend code\n      // point to stream, set iso-2022-jp encoder state to jis0208,\n      // and return three bytes 0x1B 0x24 0x42.\n      if (iso2022jp_state !== states.jis0208) {\n        stream.prepend(code_point);\n        iso2022jp_state = states.jis0208;\n        return [0x1B, 0x24, 0x42];\n      }\n\n      // 12. Let lead be floor(pointer / 94) + 0x21.\n      var lead = floor(pointer / 94) + 0x21;\n\n      // 13. Let trail be pointer % 94 + 0x21.\n      var trail = pointer % 94 + 0x21;\n\n      // 14. Return two bytes whose values are lead and trail.\n      return [lead, trail];\n    };\n  }\n\n  /** @param {{fatal: boolean}} options */\n  encoders['ISO-2022-JP'] = function(options) {\n    return new ISO2022JPEncoder(options);\n  };\n  /** @param {{fatal: boolean}} options */\n  decoders['ISO-2022-JP'] = function(options) {\n    return new ISO2022JPDecoder(options);\n  };\n\n  // 13.3 Shift_JIS\n\n  // 13.3.1 Shift_JIS decoder\n  /**\n   * @constructor\n   * @implements {Decoder}\n   * @param {{fatal: boolean}} options\n   */\n  function ShiftJISDecoder(options) {\n    var fatal = options.fatal;\n    // Shift_JIS's decoder has an associated Shift_JIS lead (initially\n    // 0x00).\n    var /** @type {number} */ Shift_JIS_lead = 0x00;\n    /**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */\n    this.handler = function(stream, bite) {\n      // 1. If byte is end-of-stream and Shift_JIS lead is not 0x00,\n      // set Shift_JIS lead to 0x00 and return error.\n      if (bite === end_of_stream && Shift_JIS_lead !== 0x00) {\n        Shift_JIS_lead = 0x00;\n        return decoderError(fatal);\n      }\n\n      // 2. If byte is end-of-stream and Shift_JIS lead is 0x00,\n      // return finished.\n      if (bite === end_of_stream && Shift_JIS_lead === 0x00)\n        return finished;\n\n      // 3. If Shift_JIS lead is not 0x00, let lead be Shift_JIS lead,\n      // let pointer be null, set Shift_JIS lead to 0x00, and then run\n      // these substeps:\n      if (Shift_JIS_lead !== 0x00) {\n        var lead = Shift_JIS_lead;\n        var pointer = null;\n        Shift_JIS_lead = 0x00;\n\n        // 1. Let offset be 0x40, if byte is less than 0x7F, and 0x41\n        // otherwise.\n        var offset = (bite < 0x7F) ? 0x40 : 0x41;\n\n        // 2. Let lead offset be 0x81, if lead is less than 0xA0, and\n        // 0xC1 otherwise.\n        var lead_offset = (lead < 0xA0) ? 0x81 : 0xC1;\n\n        // 3. If byte is in the range 0x40 to 0x7E, inclusive, or 0x80\n        // to 0xFC, inclusive, set pointer to (lead − lead offset) ×\n        // 188 + byte − offset.\n        if (inRange(bite, 0x40, 0x7E) || inRange(bite, 0x80, 0xFC))\n          pointer = (lead - lead_offset) * 188 + bite - offset;\n\n        // 4. If pointer is in the range 8836 to 10715, inclusive,\n        // return a code point whose value is 0xE000 − 8836 + pointer.\n        if (inRange(pointer, 8836, 10715))\n          return 0xE000 - 8836 + pointer;\n\n        // 5. Let code point be null, if pointer is null, and the\n        // index code point for pointer in index jis0208 otherwise.\n        var code_point = (pointer === null) ? null :\n              indexCodePointFor(pointer, index('jis0208'));\n\n        // 6. If code point is null and byte is an ASCII byte, prepend\n        // byte to stream.\n        if (code_point === null && isASCIIByte(bite))\n          stream.prepend(bite);\n\n        // 7. If code point is null, return error.\n        if (code_point === null)\n          return decoderError(fatal);\n\n        // 8. Return a code point whose value is code point.\n        return code_point;\n      }\n\n      // 4. If byte is an ASCII byte or 0x80, return a code point\n      // whose value is byte.\n      if (isASCIIByte(bite) || bite === 0x80)\n        return bite;\n\n      // 5. If byte is in the range 0xA1 to 0xDF, inclusive, return a\n      // code point whose value is 0xFF61 − 0xA1 + byte.\n      if (inRange(bite, 0xA1, 0xDF))\n        return 0xFF61 - 0xA1 + bite;\n\n      // 6. If byte is in the range 0x81 to 0x9F, inclusive, or 0xE0\n      // to 0xFC, inclusive, set Shift_JIS lead to byte and return\n      // continue.\n      if (inRange(bite, 0x81, 0x9F) || inRange(bite, 0xE0, 0xFC)) {\n        Shift_JIS_lead = bite;\n        return null;\n      }\n\n      // 7. Return error.\n      return decoderError(fatal);\n    };\n  }\n\n  // 13.3.2 Shift_JIS encoder\n  /**\n   * @constructor\n   * @implements {Encoder}\n   * @param {{fatal: boolean}} options\n   */\n  function ShiftJISEncoder(options) {\n    var fatal = options.fatal;\n    /**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */\n    this.handler = function(stream, code_point) {\n      // 1. If code point is end-of-stream, return finished.\n      if (code_point === end_of_stream)\n        return finished;\n\n      // 2. If code point is an ASCII code point or U+0080, return a\n      // byte whose value is code point.\n      if (isASCIICodePoint(code_point) || code_point === 0x0080)\n        return code_point;\n\n      // 3. If code point is U+00A5, return byte 0x5C.\n      if (code_point === 0x00A5)\n        return 0x5C;\n\n      // 4. If code point is U+203E, return byte 0x7E.\n      if (code_point === 0x203E)\n        return 0x7E;\n\n      // 5. If code point is in the range U+FF61 to U+FF9F, inclusive,\n      // return a byte whose value is code point − 0xFF61 + 0xA1.\n      if (inRange(code_point, 0xFF61, 0xFF9F))\n        return code_point - 0xFF61 + 0xA1;\n\n      // 6. If code point is U+2212, set it to U+FF0D.\n      if (code_point === 0x2212)\n        code_point = 0xFF0D;\n\n      // 7. Let pointer be the index Shift_JIS pointer for code point.\n      var pointer = indexShiftJISPointerFor(code_point);\n\n      // 8. If pointer is null, return error with code point.\n      if (pointer === null)\n        return encoderError(code_point);\n\n      // 9. Let lead be floor(pointer / 188).\n      var lead = floor(pointer / 188);\n\n      // 10. Let lead offset be 0x81, if lead is less than 0x1F, and\n      // 0xC1 otherwise.\n      var lead_offset = (lead < 0x1F) ? 0x81 : 0xC1;\n\n      // 11. Let trail be pointer % 188.\n      var trail = pointer % 188;\n\n      // 12. Let offset be 0x40, if trail is less than 0x3F, and 0x41\n      // otherwise.\n      var offset = (trail < 0x3F) ? 0x40 : 0x41;\n\n      // 13. Return two bytes whose values are lead + lead offset and\n      // trail + offset.\n      return [lead + lead_offset, trail + offset];\n    };\n  }\n\n  /** @param {{fatal: boolean}} options */\n  encoders['Shift_JIS'] = function(options) {\n    return new ShiftJISEncoder(options);\n  };\n  /** @param {{fatal: boolean}} options */\n  decoders['Shift_JIS'] = function(options) {\n    return new ShiftJISDecoder(options);\n  };\n\n  //\n  // 14. Legacy multi-byte Korean encodings\n  //\n\n  // 14.1 euc-kr\n\n  // 14.1.1 euc-kr decoder\n  /**\n   * @constructor\n   * @implements {Decoder}\n   * @param {{fatal: boolean}} options\n   */\n  function EUCKRDecoder(options) {\n    var fatal = options.fatal;\n\n    // euc-kr's decoder has an associated euc-kr lead (initially 0x00).\n    var /** @type {number} */ euckr_lead = 0x00;\n    /**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */\n    this.handler = function(stream, bite) {\n      // 1. If byte is end-of-stream and euc-kr lead is not 0x00, set\n      // euc-kr lead to 0x00 and return error.\n      if (bite === end_of_stream && euckr_lead !== 0) {\n        euckr_lead = 0x00;\n        return decoderError(fatal);\n      }\n\n      // 2. If byte is end-of-stream and euc-kr lead is 0x00, return\n      // finished.\n      if (bite === end_of_stream && euckr_lead === 0)\n        return finished;\n\n      // 3. If euc-kr lead is not 0x00, let lead be euc-kr lead, let\n      // pointer be null, set euc-kr lead to 0x00, and then run these\n      // substeps:\n      if (euckr_lead !== 0x00) {\n        var lead = euckr_lead;\n        var pointer = null;\n        euckr_lead = 0x00;\n\n        // 1. If byte is in the range 0x41 to 0xFE, inclusive, set\n        // pointer to (lead − 0x81) × 190 + (byte − 0x41).\n        if (inRange(bite, 0x41, 0xFE))\n          pointer = (lead - 0x81) * 190 + (bite - 0x41);\n\n        // 2. Let code point be null, if pointer is null, and the\n        // index code point for pointer in index euc-kr otherwise.\n        var code_point = (pointer === null)\n              ? null : indexCodePointFor(pointer, index('euc-kr'));\n\n        // 3. If code point is null and byte is an ASCII byte, prepend\n        // byte to stream.\n        if (pointer === null && isASCIIByte(bite))\n          stream.prepend(bite);\n\n        // 4. If code point is null, return error.\n        if (code_point === null)\n          return decoderError(fatal);\n\n        // 5. Return a code point whose value is code point.\n        return code_point;\n      }\n\n      // 4. If byte is an ASCII byte, return a code point whose value\n      // is byte.\n      if (isASCIIByte(bite))\n        return bite;\n\n      // 5. If byte is in the range 0x81 to 0xFE, inclusive, set\n      // euc-kr lead to byte and return continue.\n      if (inRange(bite, 0x81, 0xFE)) {\n        euckr_lead = bite;\n        return null;\n      }\n\n      // 6. Return error.\n      return decoderError(fatal);\n    };\n  }\n\n  // 14.1.2 euc-kr encoder\n  /**\n   * @constructor\n   * @implements {Encoder}\n   * @param {{fatal: boolean}} options\n   */\n  function EUCKREncoder(options) {\n    var fatal = options.fatal;\n    /**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */\n    this.handler = function(stream, code_point) {\n      // 1. If code point is end-of-stream, return finished.\n      if (code_point === end_of_stream)\n        return finished;\n\n      // 2. If code point is an ASCII code point, return a byte whose\n      // value is code point.\n      if (isASCIICodePoint(code_point))\n        return code_point;\n\n      // 3. Let pointer be the index pointer for code point in index\n      // euc-kr.\n      var pointer = indexPointerFor(code_point, index('euc-kr'));\n\n      // 4. If pointer is null, return error with code point.\n      if (pointer === null)\n        return encoderError(code_point);\n\n      // 5. Let lead be floor(pointer / 190) + 0x81.\n      var lead = floor(pointer / 190) + 0x81;\n\n      // 6. Let trail be pointer % 190 + 0x41.\n      var trail = (pointer % 190) + 0x41;\n\n      // 7. Return two bytes whose values are lead and trail.\n      return [lead, trail];\n    };\n  }\n\n  /** @param {{fatal: boolean}} options */\n  encoders['EUC-KR'] = function(options) {\n    return new EUCKREncoder(options);\n  };\n  /** @param {{fatal: boolean}} options */\n  decoders['EUC-KR'] = function(options) {\n    return new EUCKRDecoder(options);\n  };\n\n\n  //\n  // 15. Legacy miscellaneous encodings\n  //\n\n  // 15.1 replacement\n\n  // Not needed - API throws RangeError\n\n  // 15.2 Common infrastructure for utf-16be and utf-16le\n\n  /**\n   * @param {number} code_unit\n   * @param {boolean} utf16be\n   * @return {!Array.<number>} bytes\n   */\n  function convertCodeUnitToBytes(code_unit, utf16be) {\n    // 1. Let byte1 be code unit >> 8.\n    var byte1 = code_unit >> 8;\n\n    // 2. Let byte2 be code unit & 0x00FF.\n    var byte2 = code_unit & 0x00FF;\n\n    // 3. Then return the bytes in order:\n        // utf-16be flag is set: byte1, then byte2.\n    if (utf16be)\n      return [byte1, byte2];\n    // utf-16be flag is unset: byte2, then byte1.\n    return [byte2, byte1];\n  }\n\n  // 15.2.1 shared utf-16 decoder\n  /**\n   * @constructor\n   * @implements {Decoder}\n   * @param {boolean} utf16_be True if big-endian, false if little-endian.\n   * @param {{fatal: boolean}} options\n   */\n  function UTF16Decoder(utf16_be, options) {\n    var fatal = options.fatal;\n    var /** @type {?number} */ utf16_lead_byte = null,\n        /** @type {?number} */ utf16_lead_surrogate = null;\n    /**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */\n    this.handler = function(stream, bite) {\n      // 1. If byte is end-of-stream and either utf-16 lead byte or\n      // utf-16 lead surrogate is not null, set utf-16 lead byte and\n      // utf-16 lead surrogate to null, and return error.\n      if (bite === end_of_stream && (utf16_lead_byte !== null ||\n                                utf16_lead_surrogate !== null)) {\n        return decoderError(fatal);\n      }\n\n      // 2. If byte is end-of-stream and utf-16 lead byte and utf-16\n      // lead surrogate are null, return finished.\n      if (bite === end_of_stream && utf16_lead_byte === null &&\n          utf16_lead_surrogate === null) {\n        return finished;\n      }\n\n      // 3. If utf-16 lead byte is null, set utf-16 lead byte to byte\n      // and return continue.\n      if (utf16_lead_byte === null) {\n        utf16_lead_byte = bite;\n        return null;\n      }\n\n      // 4. Let code unit be the result of:\n      var code_unit;\n      if (utf16_be) {\n        // utf-16be decoder flag is set\n        //   (utf-16 lead byte << 8) + byte.\n        code_unit = (utf16_lead_byte << 8) + bite;\n      } else {\n        // utf-16be decoder flag is unset\n        //   (byte << 8) + utf-16 lead byte.\n        code_unit = (bite << 8) + utf16_lead_byte;\n      }\n      // Then set utf-16 lead byte to null.\n      utf16_lead_byte = null;\n\n      // 5. If utf-16 lead surrogate is not null, let lead surrogate\n      // be utf-16 lead surrogate, set utf-16 lead surrogate to null,\n      // and then run these substeps:\n      if (utf16_lead_surrogate !== null) {\n        var lead_surrogate = utf16_lead_surrogate;\n        utf16_lead_surrogate = null;\n\n        // 1. If code unit is in the range U+DC00 to U+DFFF,\n        // inclusive, return a code point whose value is 0x10000 +\n        // ((lead surrogate − 0xD800) << 10) + (code unit − 0xDC00).\n        if (inRange(code_unit, 0xDC00, 0xDFFF)) {\n          return 0x10000 + (lead_surrogate - 0xD800) * 0x400 +\n              (code_unit - 0xDC00);\n        }\n\n        // 2. Prepend the sequence resulting of converting code unit\n        // to bytes using utf-16be decoder flag to stream and return\n        // error.\n        stream.prepend(convertCodeUnitToBytes(code_unit, utf16_be));\n        return decoderError(fatal);\n      }\n\n      // 6. If code unit is in the range U+D800 to U+DBFF, inclusive,\n      // set utf-16 lead surrogate to code unit and return continue.\n      if (inRange(code_unit, 0xD800, 0xDBFF)) {\n        utf16_lead_surrogate = code_unit;\n        return null;\n      }\n\n      // 7. If code unit is in the range U+DC00 to U+DFFF, inclusive,\n      // return error.\n      if (inRange(code_unit, 0xDC00, 0xDFFF))\n        return decoderError(fatal);\n\n      // 8. Return code point code unit.\n      return code_unit;\n    };\n  }\n\n  // 15.2.2 shared utf-16 encoder\n  /**\n   * @constructor\n   * @implements {Encoder}\n   * @param {boolean} utf16_be True if big-endian, false if little-endian.\n   * @param {{fatal: boolean}} options\n   */\n  function UTF16Encoder(utf16_be, options) {\n    var fatal = options.fatal;\n    /**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */\n    this.handler = function(stream, code_point) {\n      // 1. If code point is end-of-stream, return finished.\n      if (code_point === end_of_stream)\n        return finished;\n\n      // 2. If code point is in the range U+0000 to U+FFFF, inclusive,\n      // return the sequence resulting of converting code point to\n      // bytes using utf-16be encoder flag.\n      if (inRange(code_point, 0x0000, 0xFFFF))\n        return convertCodeUnitToBytes(code_point, utf16_be);\n\n      // 3. Let lead be ((code point − 0x10000) >> 10) + 0xD800,\n      // converted to bytes using utf-16be encoder flag.\n      var lead = convertCodeUnitToBytes(\n        ((code_point - 0x10000) >> 10) + 0xD800, utf16_be);\n\n      // 4. Let trail be ((code point − 0x10000) & 0x3FF) + 0xDC00,\n      // converted to bytes using utf-16be encoder flag.\n      var trail = convertCodeUnitToBytes(\n        ((code_point - 0x10000) & 0x3FF) + 0xDC00, utf16_be);\n\n      // 5. Return a byte sequence of lead followed by trail.\n      return lead.concat(trail);\n    };\n  }\n\n  // 15.3 utf-16be\n  // 15.3.1 utf-16be decoder\n  /** @param {{fatal: boolean}} options */\n  encoders['UTF-16BE'] = function(options) {\n    return new UTF16Encoder(true, options);\n  };\n  // 15.3.2 utf-16be encoder\n  /** @param {{fatal: boolean}} options */\n  decoders['UTF-16BE'] = function(options) {\n    return new UTF16Decoder(true, options);\n  };\n\n  // 15.4 utf-16le\n  // 15.4.1 utf-16le decoder\n  /** @param {{fatal: boolean}} options */\n  encoders['UTF-16LE'] = function(options) {\n    return new UTF16Encoder(false, options);\n  };\n  // 15.4.2 utf-16le encoder\n  /** @param {{fatal: boolean}} options */\n  decoders['UTF-16LE'] = function(options) {\n    return new UTF16Decoder(false, options);\n  };\n\n  // 15.5 x-user-defined\n\n  // 15.5.1 x-user-defined decoder\n  /**\n   * @constructor\n   * @implements {Decoder}\n   * @param {{fatal: boolean}} options\n   */\n  function XUserDefinedDecoder(options) {\n    var fatal = options.fatal;\n    /**\n     * @param {Stream} stream The stream of bytes being decoded.\n     * @param {number} bite The next byte read from the stream.\n     * @return {?(number|!Array.<number>)} The next code point(s)\n     *     decoded, or null if not enough data exists in the input\n     *     stream to decode a complete code point.\n     */\n    this.handler = function(stream, bite) {\n      // 1. If byte is end-of-stream, return finished.\n      if (bite === end_of_stream)\n        return finished;\n\n      // 2. If byte is an ASCII byte, return a code point whose value\n      // is byte.\n      if (isASCIIByte(bite))\n        return bite;\n\n      // 3. Return a code point whose value is 0xF780 + byte − 0x80.\n      return 0xF780 + bite - 0x80;\n    };\n  }\n\n  // 15.5.2 x-user-defined encoder\n  /**\n   * @constructor\n   * @implements {Encoder}\n   * @param {{fatal: boolean}} options\n   */\n  function XUserDefinedEncoder(options) {\n    var fatal = options.fatal;\n    /**\n     * @param {Stream} stream Input stream.\n     * @param {number} code_point Next code point read from the stream.\n     * @return {(number|!Array.<number>)} Byte(s) to emit.\n     */\n    this.handler = function(stream, code_point) {\n      // 1.If code point is end-of-stream, return finished.\n      if (code_point === end_of_stream)\n        return finished;\n\n      // 2. If code point is an ASCII code point, return a byte whose\n      // value is code point.\n      if (isASCIICodePoint(code_point))\n        return code_point;\n\n      // 3. If code point is in the range U+F780 to U+F7FF, inclusive,\n      // return a byte whose value is code point − 0xF780 + 0x80.\n      if (inRange(code_point, 0xF780, 0xF7FF))\n        return code_point - 0xF780 + 0x80;\n\n      // 4. Return error with code point.\n      return encoderError(code_point);\n    };\n  }\n\n  /** @param {{fatal: boolean}} options */\n  encoders['x-user-defined'] = function(options) {\n    return new XUserDefinedEncoder(options);\n  };\n  /** @param {{fatal: boolean}} options */\n  decoders['x-user-defined'] = function(options) {\n    return new XUserDefinedDecoder(options);\n  };\n\n  if (!global['TextEncoder'])\n    global['TextEncoder'] = TextEncoder;\n  if (!global['TextDecoder'])\n    global['TextDecoder'] = TextDecoder;\n\n  if (typeof module !== \"undefined\" && module.exports) {\n    module.exports = {\n      TextEncoder: global['TextEncoder'],\n      TextDecoder: global['TextDecoder'],\n      EncodingIndexes: global[\"encoding-indexes\"]\n    };\n  }\n\n// For strict environments where `this` inside the global scope\n// is `undefined`, take a pure object instead\n}(this || {}));","// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\nvar encoding = require(\"./lib/encoding.js\");\n\nmodule.exports = {\n  TextEncoder: encoding.TextEncoder,\n  TextDecoder: encoding.TextDecoder,\n};\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","'use strict';\n\n// compare and isBuffer taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nfunction isBuffer(b) {\n  if (global.Buffer && typeof global.Buffer.isBuffer === 'function') {\n    return global.Buffer.isBuffer(b);\n  }\n  return !!(b != null && b._isBuffer);\n}\n\n// based on node assert, original notice:\n\n// http://wiki.commonjs.org/wiki/Unit_Testing/1.0\n//\n// THIS IS NOT TESTED NOR LIKELY TO WORK OUTSIDE V8!\n//\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar util = require('util/');\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar pSlice = Array.prototype.slice;\nvar functionsHaveNames = (function () {\n  return function foo() {}.name === 'foo';\n}());\nfunction pToString (obj) {\n  return Object.prototype.toString.call(obj);\n}\nfunction isView(arrbuf) {\n  if (isBuffer(arrbuf)) {\n    return false;\n  }\n  if (typeof global.ArrayBuffer !== 'function') {\n    return false;\n  }\n  if (typeof ArrayBuffer.isView === 'function') {\n    return ArrayBuffer.isView(arrbuf);\n  }\n  if (!arrbuf) {\n    return false;\n  }\n  if (arrbuf instanceof DataView) {\n    return true;\n  }\n  if (arrbuf.buffer && arrbuf.buffer instanceof ArrayBuffer) {\n    return true;\n  }\n  return false;\n}\n// 1. The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\n\n// 2. The AssertionError is defined in assert.\n// new assert.AssertionError({ message: message,\n//                             actual: actual,\n//                             expected: expected })\n\nvar regex = /\\s*function\\s+([^\\(\\s]*)\\s*/;\n// based on https://github.com/ljharb/function.prototype.name/blob/adeeeec8bfcc6068b187d7d9fb3d5bb1d3a30899/implementation.js\nfunction getName(func) {\n  if (!util.isFunction(func)) {\n    return;\n  }\n  if (functionsHaveNames) {\n    return func.name;\n  }\n  var str = func.toString();\n  var match = str.match(regex);\n  return match && match[1];\n}\nassert.AssertionError = function AssertionError(options) {\n  this.name = 'AssertionError';\n  this.actual = options.actual;\n  this.expected = options.expected;\n  this.operator = options.operator;\n  if (options.message) {\n    this.message = options.message;\n    this.generatedMessage = false;\n  } else {\n    this.message = getMessage(this);\n    this.generatedMessage = true;\n  }\n  var stackStartFunction = options.stackStartFunction || fail;\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, stackStartFunction);\n  } else {\n    // non v8 browsers so we can have a stacktrace\n    var err = new Error();\n    if (err.stack) {\n      var out = err.stack;\n\n      // try to strip useless frames\n      var fn_name = getName(stackStartFunction);\n      var idx = out.indexOf('\\n' + fn_name);\n      if (idx >= 0) {\n        // once we have located the function frame\n        // we need to strip out everything before it (and its line)\n        var next_line = out.indexOf('\\n', idx + 1);\n        out = out.substring(next_line + 1);\n      }\n\n      this.stack = out;\n    }\n  }\n};\n\n// assert.AssertionError instanceof Error\nutil.inherits(assert.AssertionError, Error);\n\nfunction truncate(s, n) {\n  if (typeof s === 'string') {\n    return s.length < n ? s : s.slice(0, n);\n  } else {\n    return s;\n  }\n}\nfunction inspect(something) {\n  if (functionsHaveNames || !util.isFunction(something)) {\n    return util.inspect(something);\n  }\n  var rawname = getName(something);\n  var name = rawname ? ': ' + rawname : '';\n  return '[Function' +  name + ']';\n}\nfunction getMessage(self) {\n  return truncate(inspect(self.actual), 128) + ' ' +\n         self.operator + ' ' +\n         truncate(inspect(self.expected), 128);\n}\n\n// At present only the three keys mentioned above are used and\n// understood by the spec. Implementations or sub modules can pass\n// other keys to the AssertionError's constructor - they will be\n// ignored.\n\n// 3. All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided.  All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction fail(actual, expected, message, operator, stackStartFunction) {\n  throw new assert.AssertionError({\n    message: message,\n    actual: actual,\n    expected: expected,\n    operator: operator,\n    stackStartFunction: stackStartFunction\n  });\n}\n\n// EXTENSION! allows for well behaved errors defined elsewhere.\nassert.fail = fail;\n\n// 4. Pure assertion tests whether a value is truthy, as determined\n// by !!guard.\n// assert.ok(guard, message_opt);\n// This statement is equivalent to assert.equal(true, !!guard,\n// message_opt);. To test strictly for the value true, use\n// assert.strictEqual(true, guard, message_opt);.\n\nfunction ok(value, message) {\n  if (!value) fail(value, true, message, '==', assert.ok);\n}\nassert.ok = ok;\n\n// 5. The equality assertion tests shallow, coercive equality with\n// ==.\n// assert.equal(actual, expected, message_opt);\n\nassert.equal = function equal(actual, expected, message) {\n  if (actual != expected) fail(actual, expected, message, '==', assert.equal);\n};\n\n// 6. The non-equality assertion tests for whether two objects are not equal\n// with != assert.notEqual(actual, expected, message_opt);\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (actual == expected) {\n    fail(actual, expected, message, '!=', assert.notEqual);\n  }\n};\n\n// 7. The equivalence assertion tests a deep equality relation.\n// assert.deepEqual(actual, expected, message_opt);\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'deepEqual', assert.deepEqual);\n  }\n};\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (!_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'deepStrictEqual', assert.deepStrictEqual);\n  }\n};\n\nfunction _deepEqual(actual, expected, strict, memos) {\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n  } else if (isBuffer(actual) && isBuffer(expected)) {\n    return compare(actual, expected) === 0;\n\n  // 7.2. If the expected value is a Date object, the actual value is\n  // equivalent if it is also a Date object that refers to the same time.\n  } else if (util.isDate(actual) && util.isDate(expected)) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3 If the expected value is a RegExp object, the actual value is\n  // equivalent if it is also a RegExp object with the same source and\n  // properties (`global`, `multiline`, `lastIndex`, `ignoreCase`).\n  } else if (util.isRegExp(actual) && util.isRegExp(expected)) {\n    return actual.source === expected.source &&\n           actual.global === expected.global &&\n           actual.multiline === expected.multiline &&\n           actual.lastIndex === expected.lastIndex &&\n           actual.ignoreCase === expected.ignoreCase;\n\n  // 7.4. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if ((actual === null || typeof actual !== 'object') &&\n             (expected === null || typeof expected !== 'object')) {\n    return strict ? actual === expected : actual == expected;\n\n  // If both values are instances of typed arrays, wrap their underlying\n  // ArrayBuffers in a Buffer each to increase performance\n  // This optimization requires the arrays to have the same type as checked by\n  // Object.prototype.toString (aka pToString). Never perform binary\n  // comparisons for Float*Arrays, though, since e.g. +0 === -0 but their\n  // bit patterns are not identical.\n  } else if (isView(actual) && isView(expected) &&\n             pToString(actual) === pToString(expected) &&\n             !(actual instanceof Float32Array ||\n               actual instanceof Float64Array)) {\n    return compare(new Uint8Array(actual.buffer),\n                   new Uint8Array(expected.buffer)) === 0;\n\n  // 7.5 For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else if (isBuffer(actual) !== isBuffer(expected)) {\n    return false;\n  } else {\n    memos = memos || {actual: [], expected: []};\n\n    var actualIndex = memos.actual.indexOf(actual);\n    if (actualIndex !== -1) {\n      if (actualIndex === memos.expected.indexOf(expected)) {\n        return true;\n      }\n    }\n\n    memos.actual.push(actual);\n    memos.expected.push(expected);\n\n    return objEquiv(actual, expected, strict, memos);\n  }\n}\n\nfunction isArguments(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n}\n\nfunction objEquiv(a, b, strict, actualVisitedObjects) {\n  if (a === null || a === undefined || b === null || b === undefined)\n    return false;\n  // if one is a primitive, the other must be same\n  if (util.isPrimitive(a) || util.isPrimitive(b))\n    return a === b;\n  if (strict && Object.getPrototypeOf(a) !== Object.getPrototypeOf(b))\n    return false;\n  var aIsArgs = isArguments(a);\n  var bIsArgs = isArguments(b);\n  if ((aIsArgs && !bIsArgs) || (!aIsArgs && bIsArgs))\n    return false;\n  if (aIsArgs) {\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return _deepEqual(a, b, strict);\n  }\n  var ka = objectKeys(a);\n  var kb = objectKeys(b);\n  var key, i;\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length !== kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] !== kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!_deepEqual(a[key], b[key], strict, actualVisitedObjects))\n      return false;\n  }\n  return true;\n}\n\n// 8. The non-equivalence assertion tests for any deep inequality.\n// assert.notDeepEqual(actual, expected, message_opt);\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, false)) {\n    fail(actual, expected, message, 'notDeepEqual', assert.notDeepEqual);\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (_deepEqual(actual, expected, true)) {\n    fail(actual, expected, message, 'notDeepStrictEqual', notDeepStrictEqual);\n  }\n}\n\n\n// 9. The strict equality assertion tests strict equality, as determined by ===.\n// assert.strictEqual(actual, expected, message_opt);\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (actual !== expected) {\n    fail(actual, expected, message, '===', assert.strictEqual);\n  }\n};\n\n// 10. The strict non-equality assertion tests for strict inequality, as\n// determined by !==.  assert.notStrictEqual(actual, expected, message_opt);\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (actual === expected) {\n    fail(actual, expected, message, '!==', assert.notStrictEqual);\n  }\n};\n\nfunction expectedException(actual, expected) {\n  if (!actual || !expected) {\n    return false;\n  }\n\n  if (Object.prototype.toString.call(expected) == '[object RegExp]') {\n    return expected.test(actual);\n  }\n\n  try {\n    if (actual instanceof expected) {\n      return true;\n    }\n  } catch (e) {\n    // Ignore.  The instanceof check doesn't work for arrow functions.\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction _tryBlock(block) {\n  var error;\n  try {\n    block();\n  } catch (e) {\n    error = e;\n  }\n  return error;\n}\n\nfunction _throws(shouldThrow, block, expected, message) {\n  var actual;\n\n  if (typeof block !== 'function') {\n    throw new TypeError('\"block\" argument must be a function');\n  }\n\n  if (typeof expected === 'string') {\n    message = expected;\n    expected = null;\n  }\n\n  actual = _tryBlock(block);\n\n  message = (expected && expected.name ? ' (' + expected.name + ').' : '.') +\n            (message ? ' ' + message : '.');\n\n  if (shouldThrow && !actual) {\n    fail(actual, expected, 'Missing expected exception' + message);\n  }\n\n  var userProvidedMessage = typeof message === 'string';\n  var isUnwantedException = !shouldThrow && util.isError(actual);\n  var isUnexpectedException = !shouldThrow && actual && !expected;\n\n  if ((isUnwantedException &&\n      userProvidedMessage &&\n      expectedException(actual, expected)) ||\n      isUnexpectedException) {\n    fail(actual, expected, 'Got unwanted exception' + message);\n  }\n\n  if ((shouldThrow && actual && expected &&\n      !expectedException(actual, expected)) || (!shouldThrow && actual)) {\n    throw actual;\n  }\n}\n\n// 11. Expected to throw an error:\n// assert.throws(block, Error_opt, message_opt);\n\nassert.throws = function(block, /*optional*/error, /*optional*/message) {\n  _throws(true, block, error, message);\n};\n\n// EXTENSION! This is annoying to write outside this module.\nassert.doesNotThrow = function(block, /*optional*/error, /*optional*/message) {\n  _throws(false, block, error, message);\n};\n\nassert.ifError = function(err) { if (err) throw err; };\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    if (hasOwn.call(obj, key)) keys.push(key);\n  }\n  return keys;\n};\n","const assert = require('assert');\nconst utils = require('./utils');\n\nconst {hexStr2byteArray} = require(\"./lib/code\");\nconst {longToByteArray, byteArray2hexStr} = require(\"./utils/bytes\");\nconst {decode58Check, SHA256, signTransaction} = require(\"./utils/crypto\");\n\nconst google_protobuf_any_pb = require('google-protobuf/google/protobuf/any_pb.js');\nconst {ParticipateAssetIssueContract, VoteWitnessContract, WitnessUpdateContract, WitnessCreateContract, TransferAssetContract, UnfreezeBalanceContract, FreezeBalanceContract, TransferContract, AssetIssueContract} = require(\"./protocol/core/Contract_pb\");\nconst {Transaction, TransactionList, Transfer} = require(\"./protocol/core/Tron_pb\");\n\nfunction getTransactionHash(transaction){\n    let raw = transaction.getRawData();\n    let rawBytes = raw.serializeBinary();\n    return SHA256(rawBytes);\n}\n\nfunction transactionFromBase64(transactionString){\n    return Transaction.deserializeBinary(utils.base64DecodeFromString(transactionString));\n}\n\nfunction transactionListFromBase64(transactionListString){\n    return TransactionList.deserializeBinary(utils.base64DecodeFromString(transactionListString));\n}\n\nfunction getBlockInfo(block){\n    return {\n        number: block.getBlockHeader().getRawData().getNumber(),\n        witnessId: block.getBlockHeader().getRawData().getWitnessId(),\n        hash: byteArray2hexStr(SHA256(block.getBlockHeader().getRawData().serializeBinary())),\n        parentHash: byteArray2hexStr(block.getBlockHeader().getRawData().getParenthash()),\n    };\n}\n\nasync function addRef(transaction, nowBlock) {\n    let latestBlock = getBlockInfo(nowBlock);\n\n    let latestBlockHash = latestBlock.hash;\n    let latestBlockNum = latestBlock.number;\n\n    let numBytes = longToByteArray(latestBlockNum);\n    numBytes.reverse();\n    let hashBytes = hexStr2byteArray(latestBlockHash);\n\n    let generateBlockId = [...numBytes.slice(0, 8), ...hashBytes.slice(8, hashBytes.length - 1)];\n\n    let rawData = transaction.getRawData();\n    rawData.setRefBlockHash(Uint8Array.from(generateBlockId.slice(8, 16)));\n    rawData.setRefBlockBytes(Uint8Array.from(numBytes.slice(6, 8)));\n    rawData.setExpiration(nowBlock.getBlockHeader().getRawData().getTimestamp() + (60 * 24 * 1000));\n\n    transaction.setRawData(rawData);\n    return transaction;\n}\n\nfunction createTransaction(message, contractType, typeName, nowBlock) {\n    let anyValue = new google_protobuf_any_pb.Any();\n    anyValue.pack(message.serializeBinary(), \"protocol.\" + typeName);\n\n    let contract = new Transaction.Contract();\n    contract.setType(contractType);\n    contract.setParameter(anyValue);\n\n    let raw = new Transaction.raw();\n    raw.addContract(contract);\n\n    let transaction = new Transaction();\n    transaction.setRawData(raw);\n    transaction = addRef(transaction, nowBlock);\n\n    return transaction;\n}\n\nfunction createUnsignedTransferTransaction(props, nowBlock){\n    assert.notEqual(undefined, props.sender);\n    assert.notEqual(undefined, props.recipient);\n    assert.notEqual(undefined, props.amount);\n\n    let contract = new TransferContract();\n    contract.setOwnerAddress(Uint8Array.from(decode58Check(props.sender)));\n    contract.setToAddress(Uint8Array.from(decode58Check(props.recipient)));\n    contract.setAmount(props.amount);\n\n    return createTransaction(\n        contract,\n        Transaction.Contract.ContractType.TRANSFERCONTRACT,\n        \"TransferContract\",\n        nowBlock);\n}\n\nfunction createUnsignedParticipateAssetIssueTransaction(props, nowBlock){\n    assert.notEqual(undefined, props.sender);\n    assert.notEqual(undefined, props.recipient);\n    assert.notEqual(undefined, props.assetName);\n    assert.notEqual(undefined, props.amount);\n\n    let contract = new ParticipateAssetIssueContract();\n    contract.setOwnerAddress(Uint8Array.from(decode58Check(props.sender)));\n    contract.setToAddress(Uint8Array.from(decode58Check(props.recipient)));\n    contract.setAssetName(utils.stringToUint8Array(props.assetName));\n    contract.setAmount(props.amount);\n\n    return createTransaction(\n        contract,\n        Transaction.Contract.ContractType.PARTICIPATEASSETISSUECONTRACT,\n        \"ParticipateAssetIssueContract\",\n        nowBlock);\n\n}\n\nfunction createUnsignedTransferAssetTransaction(props, nowBlock){\n    assert.notEqual(undefined, props.sender);\n    assert.notEqual(undefined, props.recipient);\n    assert.notEqual(undefined, props.amount);\n    assert.notEqual(undefined, props.assetName);\n\n    let contract = new TransferAssetContract();\n    contract.setOwnerAddress(Uint8Array.from(decode58Check(props.sender)));\n    contract.setToAddress(Uint8Array.from(decode58Check(props.recipient)));\n    contract.setAmount(props.amount);\n    contract.setAssetName(utils.stringToUint8Array(props.assetName));\n\n    return createTransaction(\n        contract,\n        Transaction.Contract.ContractType.TRANSFERASSETCONTRACT,\n        \"TransferAssetContract\",\n        nowBlock);\n}\n\nfunction createUnsignedAssetIssueTransaction(props, nowBlock){\n    assert.notEqual(undefined, props.sender);\n    assert.notEqual(undefined, props.assetName);\n    assert.notEqual(undefined, props.assetAbbr);\n    assert.notEqual(undefined, props.totalSupply);\n    assert.notEqual(undefined, props.num);\n    assert.notEqual(undefined, props.trxNum);\n    assert.notEqual(undefined, props.endTime);\n    assert.notEqual(undefined, props.startTime);\n    assert.notEqual(undefined, props.description);\n    assert.notEqual(undefined, props.url);\n\n    let contract = new AssetIssueContract();\n    contract.setOwnerAddress(Uint8Array.from(decode58Check(props.sender)));\n    contract.setName(utils.stringToUint8Array(props.assetName));\n    contract.setAbbr(utils.stringToUint8Array(props.assetAbbr));\n    contract.setTotalSupply(props.totalSupply);\n    contract.setNum(props.num);\n    contract.setTrxNum(props.trxNum);\n    contract.setEndTime(props.endTime);\n    contract.setStartTime(props.startTime);\n    contract.setDescription(utils.stringToUint8Array(props.description));\n    contract.setUrl(utils.stringToUint8Array(props.url));\n\n    if(props.frozenSupply !== undefined && props.frozenDuration !== undefined && props.frozenSupply > 0 && props.frozenDuration > 0){\n      let frozenSupply = new AssetIssueContract.FrozenSupply();\n      frozenSupply.setFrozenAmount(props.frozenSupply);\n      frozenSupply.setFrozenDays(props.frozenDuration);\n      contract.addFrozenSupply(frozenSupply);\n    }\n    return createTransaction(\n        contract,\n        Transaction.Contract.ContractType.ASSETISSUECONTRACT,\n        \"AssetIssueContract\",\n        nowBlock\n    );\n}\n\nfunction createUnsignedFreezeBalanceTransaction(props, nowBlock){\n    assert.notEqual(undefined, props.ownerAddress);\n    assert.notEqual(undefined, props.amount);\n    assert.notEqual(undefined, props.duration);\n    let contract = new FreezeBalanceContract();\n    contract.setOwnerAddress(Uint8Array.from(decode58Check(props.ownerAddress)));\n    contract.setFrozenBalance(props.amount);\n    contract.setFrozenDuration(props.duration);\n\n    return createTransaction(\n        contract,\n        Transaction.Contract.ContractType.FREEZEBALANCECONTRACT,\n        \"FreezeBalanceContract\",\n        nowBlock\n    );\n}\n\nfunction createUnsignedUnfreezeBalanceTransaction(props, nowBlock){\n    assert.notEqual(undefined, props.ownerAddress);\n\n    let contract = new UnfreezeBalanceContract();\n    contract.setOwnerAddress(Uint8Array.from(decode58Check(props.ownerAddress)));\n\n    return createTransaction(\n        contract,\n        Transaction.Contract.ContractType.UNFREEZEBALANCECONTRACT,\n        \"UnfreezeBalanceContract\",\n        nowBlock\n    );\n}\n\nfunction createUnsignedWitnessCreateTransaction(props, nowBlock){\n    assert.notEqual(undefined, props.ownerAddress);\n    assert.notEqual(undefined, props.url);\n\n    let contract = new WitnessCreateContract();\n    contract.setOwnerAddress(Uint8Array.from(decode58Check(props.ownerAddress)));\n    contract.setUrl(utils.stringToUint8Array(props.url));\n\n    return createTransaction(\n        contract,\n        Transaction.Contract.ContractType.WITNESSCREATECONTRACT,\n        \"WitnessCreateContract\",\n        nowBlock\n    );\n\n}\n\nfunction createUnsignedVoteWitnessTransaction(props, nowBlock){\n    assert.notEqual(undefined, props.ownerAddress);\n    assert.notEqual(undefined, props.votes);\n\n    let contract = new VoteWitnessContract();\n    contract.setOwnerAddress(Uint8Array.from(decode58Check(props.ownerAddress)));\n\n    for(let i = 0;i<props.votes.length;i++){\n        let vote = new VoteWitnessContract.Vote();\n        vote.setVoteAddress(Uint8Array.from(decode58Check(props.votes[i].address)));\n        vote.setVoteCount(props.votes[i].count);\n        contract.addVotes(vote);\n    }\n\n    return createTransaction(\n        contract,\n        Transaction.Contract.ContractType.VOTEWITNESSCONTRACT,\n        \"VoteWitnessContract\",\n        nowBlock\n    );\n}\n\nfunction createUnsignedWitnessUpdateTransaction(props, nowBlock){\n    assert.notEqual(undefined, props.ownerAddress);\n    assert.notEqual(undefined, props.url);\n\n    let contract = new WitnessUpdateContract();\n    contract.setOwnerAddress(Uint8Array.from(decode58Check(props.ownerAddress)));\n    contract.setUrl(utils.stringToUint8Array(props.url));\n\n    return createTransaction(\n        contract,\n        Transaction.Contract.ContractType.WITNESSUPDATECONTRACT,\n        \"WitnessUpdateContract\",\n        nowBlock\n    );\n}\n\nmodule.exports = {\n    transactionFromBase64,\n    transactionListFromBase64,\n    createUnsignedTransferTransaction,\n    createUnsignedAssetIssueTransaction,\n    createUnsignedFreezeBalanceTransaction,\n    createUnsignedUnfreezeBalanceTransaction,\n    createUnsignedTransferAssetTransaction,\n    createUnsignedVoteWitnessTransaction,\n    createUnsignedWitnessCreateTransaction,\n    createUnsignedWitnessUpdateTransaction,\n    createUnsignedParticipateAssetIssueTransaction,\n    signTransaction,\n    getTransactionHash\n};","import TronTools from 'tron-http-tools';\nimport wordList from 'wordList';\n\n// eslint-disable-next-line\nonmessage = ({ data }) => {\n    const {\n        words,\n        address,\n        unknown\n    } = data;\n\n    for(let i = 0; i < wordList.length; i++) {\n        const word = wordList[i];\n\n        postMessage({\n            type: 'stateUpdate',\n            status: `Trying word ${i + 1} of ${wordList.length}: ${word}`\n        });\n\n        words[unknown] = word;\n\n        const {\n            address: generatedAddress\n        } = TronTools.accounts.accountFromMnemonicString(words.join(' '));\n\n        if(generatedAddress !== address)\n            continue;\n\n        return postMessage({\n            type: 'success',\n            word,\n            words\n        });\n    }\n\n    postMessage({\n        type: 'fail'\n    });\n};"],"sourceRoot":""}