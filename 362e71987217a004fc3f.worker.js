!function(e){var t={};function l(n){if(t[n])return t[n].exports;var r=t[n]={i:n,l:!1,exports:{}};return e[n].call(r.exports,r,r.exports,l),r.l=!0,r.exports}l.m=e,l.c=t,l.d=function(e,t,n){l.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:n})},l.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},l.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return l.d(t,"a",t),t},l.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},l.p="/Seed-Recovery/",l(l.s=127)}([function(e,t){"function"===typeof Object.create?e.exports=function(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}:e.exports=function(e,t){e.super_=t;var l=function(){};l.prototype=t.prototype,e.prototype=new l,e.prototype.constructor=e}},function(e,t,l){var n=l(6),r=n.Buffer;function o(e,t){for(var l in e)t[l]=e[l]}function u(e,t,l){return r(e,t,l)}r.from&&r.alloc&&r.allocUnsafe&&r.allocUnsafeSlow?e.exports=n:(o(n,t),t.Buffer=u),o(r,u),u.from=function(e,t,l){if("number"===typeof e)throw new TypeError("Argument must not be a number");return r(e,t,l)},u.alloc=function(e,t,l){if("number"!==typeof e)throw new TypeError("Argument must be a number");var n=r(e);return void 0!==t?"string"===typeof l?n.fill(t,l):n.fill(t):n.fill(0),n},u.allocUnsafe=function(e){if("number"!==typeof e)throw new TypeError("Argument must be a number");return r(e)},u.allocUnsafeSlow=function(e){if("number"!==typeof e)throw new TypeError("Argument must be a number");return n.SlowBuffer(e)}},function(e,t,l){"use strict";var n=t;n.version=l(115).version,n.utils=l(114),n.rand=l(112),n.curve=l(17),n.curves=l(106),n.ec=l(98),n.eddsa=l(94)},function(e,t){function l(e){return(l="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var n;n=function(){return this}();try{n=n||Function("return this")()||(0,eval)("this")}catch(e){"object"===("undefined"===typeof window?"undefined":l(window))&&(n=window)}e.exports=n},function(e,t,l){"use strict";var n=l(9),r=l(0);function o(e){return(e>>>24|e>>>8&65280|e<<8&16711680|(255&e)<<24)>>>0}function u(e){return 1===e.length?"0"+e:e}function i(e){return 7===e.length?"0"+e:6===e.length?"00"+e:5===e.length?"000"+e:4===e.length?"0000"+e:3===e.length?"00000"+e:2===e.length?"000000"+e:1===e.length?"0000000"+e:e}t.inherits=r,t.toArray=function(e,t){if(Array.isArray(e))return e.slice();if(!e)return[];var l=[];if("string"===typeof e)if(t){if("hex"===t)for((e=e.replace(/[^a-z0-9]+/gi,"")).length%2!==0&&(e="0"+e),n=0;n<e.length;n+=2)l.push(parseInt(e[n]+e[n+1],16))}else for(var n=0;n<e.length;n++){var r=e.charCodeAt(n),o=r>>8,u=255&r;o?l.push(o,u):l.push(u)}else for(n=0;n<e.length;n++)l[n]=0|e[n];return l},t.toHex=function(e){for(var t="",l=0;l<e.length;l++)t+=u(e[l].toString(16));return t},t.htonl=o,t.toHex32=function(e,t){for(var l="",n=0;n<e.length;n++){var r=e[n];"little"===t&&(r=o(r)),l+=i(r.toString(16))}return l},t.zero2=u,t.zero8=i,t.join32=function(e,t,l,r){var o=l-t;n(o%4===0);for(var u=new Array(o/4),i=0,s=t;i<u.length;i++,s+=4){var a;a="big"===r?e[s]<<24|e[s+1]<<16|e[s+2]<<8|e[s+3]:e[s+3]<<24|e[s+2]<<16|e[s+1]<<8|e[s],u[i]=a>>>0}return u},t.split32=function(e,t){for(var l=new Array(4*e.length),n=0,r=0;n<e.length;n++,r+=4){var o=e[n];"big"===t?(l[r]=o>>>24,l[r+1]=o>>>16&255,l[r+2]=o>>>8&255,l[r+3]=255&o):(l[r+3]=o>>>24,l[r+2]=o>>>16&255,l[r+1]=o>>>8&255,l[r]=255&o)}return l},t.rotr32=function(e,t){return e>>>t|e<<32-t},t.rotl32=function(e,t){return e<<t|e>>>32-t},t.sum32=function(e,t){return e+t>>>0},t.sum32_3=function(e,t,l){return e+t+l>>>0},t.sum32_4=function(e,t,l,n){return e+t+l+n>>>0},t.sum32_5=function(e,t,l,n,r){return e+t+l+n+r>>>0},t.sum64=function(e,t,l,n){var r=e[t],o=n+e[t+1]>>>0,u=(o<n?1:0)+l+r;e[t]=u>>>0,e[t+1]=o},t.sum64_hi=function(e,t,l,n){return(t+n>>>0<t?1:0)+e+l>>>0},t.sum64_lo=function(e,t,l,n){return t+n>>>0},t.sum64_4_hi=function(e,t,l,n,r,o,u,i){var s=0,a=t;return s+=(a=a+n>>>0)<t?1:0,s+=(a=a+o>>>0)<o?1:0,e+l+r+u+(s+=(a=a+i>>>0)<i?1:0)>>>0},t.sum64_4_lo=function(e,t,l,n,r,o,u,i){return t+n+o+i>>>0},t.sum64_5_hi=function(e,t,l,n,r,o,u,i,s,a){var c=0,p=t;return c+=(p=p+n>>>0)<t?1:0,c+=(p=p+o>>>0)<o?1:0,c+=(p=p+i>>>0)<i?1:0,e+l+r+u+s+(c+=(p=p+a>>>0)<a?1:0)>>>0},t.sum64_5_lo=function(e,t,l,n,r,o,u,i,s,a){return t+n+o+i+a>>>0},t.rotr64_hi=function(e,t,l){return(t<<32-l|e>>>l)>>>0},t.rotr64_lo=function(e,t,l){return(e<<32-l|t>>>l)>>>0},t.shr64_hi=function(e,t,l){return e>>>l},t.shr64_lo=function(e,t,l){return(e<<32-l|t>>>l)>>>0}},function(e,t,l){(function(e){function t(e){return(t="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}!function(e,n){"use strict";function r(e,t){if(!e)throw new Error(t||"Assertion failed")}function o(e,t){e.super_=t;var l=function(){};l.prototype=t.prototype,e.prototype=new l,e.prototype.constructor=e}function u(e,t,l){if(u.isBN(e))return e;this.negative=0,this.words=null,this.length=0,this.red=null,null!==e&&("le"!==t&&"be"!==t||(l=t,t=10),this._init(e||0,t||10,l||"be"))}var i;"object"===t(e)?e.exports=u:n.BN=u,u.BN=u,u.wordSize=26;try{i=l(113).Buffer}catch(e){}function s(e,t,l){for(var n=0,r=Math.min(e.length,l),o=t;o<r;o++){var u=e.charCodeAt(o)-48;n<<=4,n|=u>=49&&u<=54?u-49+10:u>=17&&u<=22?u-17+10:15&u}return n}function a(e,t,l,n){for(var r=0,o=Math.min(e.length,l),u=t;u<o;u++){var i=e.charCodeAt(u)-48;r*=n,r+=i>=49?i-49+10:i>=17?i-17+10:i}return r}u.isBN=function(e){return e instanceof u||null!==e&&"object"===t(e)&&e.constructor.wordSize===u.wordSize&&Array.isArray(e.words)},u.max=function(e,t){return e.cmp(t)>0?e:t},u.min=function(e,t){return e.cmp(t)<0?e:t},u.prototype._init=function(e,l,n){if("number"===typeof e)return this._initNumber(e,l,n);if("object"===t(e))return this._initArray(e,l,n);"hex"===l&&(l=16),r(l===(0|l)&&l>=2&&l<=36);var o=0;"-"===(e=e.toString().replace(/\s+/g,""))[0]&&o++,16===l?this._parseHex(e,o):this._parseBase(e,l,o),"-"===e[0]&&(this.negative=1),this.strip(),"le"===n&&this._initArray(this.toArray(),l,n)},u.prototype._initNumber=function(e,t,l){e<0&&(this.negative=1,e=-e),e<67108864?(this.words=[67108863&e],this.length=1):e<4503599627370496?(this.words=[67108863&e,e/67108864&67108863],this.length=2):(r(e<9007199254740992),this.words=[67108863&e,e/67108864&67108863,1],this.length=3),"le"===l&&this._initArray(this.toArray(),t,l)},u.prototype._initArray=function(e,t,l){if(r("number"===typeof e.length),e.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(e.length/3),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var o,u,i=0;if("be"===l)for(n=e.length-1,o=0;n>=0;n-=3)u=e[n]|e[n-1]<<8|e[n-2]<<16,this.words[o]|=u<<i&67108863,this.words[o+1]=u>>>26-i&67108863,(i+=24)>=26&&(i-=26,o++);else if("le"===l)for(n=0,o=0;n<e.length;n+=3)u=e[n]|e[n+1]<<8|e[n+2]<<16,this.words[o]|=u<<i&67108863,this.words[o+1]=u>>>26-i&67108863,(i+=24)>=26&&(i-=26,o++);return this.strip()},u.prototype._parseHex=function(e,t){this.length=Math.ceil((e.length-t)/6),this.words=new Array(this.length);for(var l=0;l<this.length;l++)this.words[l]=0;var n,r,o=0;for(l=e.length-6,n=0;l>=t;l-=6)r=s(e,l,l+6),this.words[n]|=r<<o&67108863,this.words[n+1]|=r>>>26-o&4194303,(o+=24)>=26&&(o-=26,n++);l+6!==t&&(r=s(e,t,l+6),this.words[n]|=r<<o&67108863,this.words[n+1]|=r>>>26-o&4194303),this.strip()},u.prototype._parseBase=function(e,t,l){this.words=[0],this.length=1;for(var n=0,r=1;r<=67108863;r*=t)n++;n--,r=r/t|0;for(var o=e.length-l,u=o%n,i=Math.min(o,o-u)+l,s=0,c=l;c<i;c+=n)s=a(e,c,c+n,t),this.imuln(r),this.words[0]+s<67108864?this.words[0]+=s:this._iaddn(s);if(0!==u){var p=1;for(s=a(e,c,e.length,t),c=0;c<u;c++)p*=t;this.imuln(p),this.words[0]+s<67108864?this.words[0]+=s:this._iaddn(s)}},u.prototype.copy=function(e){e.words=new Array(this.length);for(var t=0;t<this.length;t++)e.words[t]=this.words[t];e.length=this.length,e.negative=this.negative,e.red=this.red},u.prototype.clone=function(){var e=new u(null);return this.copy(e),e},u.prototype._expand=function(e){for(;this.length<e;)this.words[this.length++]=0;return this},u.prototype.strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},u.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},u.prototype.inspect=function(){return(this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"};var c=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],p=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],d=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function f(e,t,l){l.negative=t.negative^e.negative;var n=e.length+t.length|0;l.length=n,n=n-1|0;var r=0|e.words[0],o=0|t.words[0],u=r*o,i=67108863&u,s=u/67108864|0;l.words[0]=i;for(var a=1;a<n;a++){for(var c=s>>>26,p=67108863&s,d=Math.min(a,t.length-1),f=Math.max(0,a-e.length+1);f<=d;f++){var g=a-f|0;c+=(u=(r=0|e.words[g])*(o=0|t.words[f])+p)/67108864|0,p=67108863&u}l.words[a]=0|p,s=0|c}return 0!==s?l.words[a]=0|s:l.length--,l.strip()}u.prototype.toString=function(e,t){var l;if(e=e||10,t=0|t||1,16===e||"hex"===e){l="";for(var n=0,o=0,u=0;u<this.length;u++){var i=this.words[u],s=(16777215&(i<<n|o)).toString(16);l=0!==(o=i>>>24-n&16777215)||u!==this.length-1?c[6-s.length]+s+l:s+l,(n+=2)>=26&&(n-=26,u--)}for(0!==o&&(l=o.toString(16)+l);l.length%t!==0;)l="0"+l;return 0!==this.negative&&(l="-"+l),l}if(e===(0|e)&&e>=2&&e<=36){var a=p[e],f=d[e];l="";var g=this.clone();for(g.negative=0;!g.isZero();){var h=g.modn(f).toString(e);l=(g=g.idivn(f)).isZero()?h+l:c[a-h.length]+h+l}for(this.isZero()&&(l="0"+l);l.length%t!==0;)l="0"+l;return 0!==this.negative&&(l="-"+l),l}r(!1,"Base should be between 2 and 36")},u.prototype.toNumber=function(){var e=this.words[0];return 2===this.length?e+=67108864*this.words[1]:3===this.length&&1===this.words[2]?e+=4503599627370496+67108864*this.words[1]:this.length>2&&r(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-e:e},u.prototype.toJSON=function(){return this.toString(16)},u.prototype.toBuffer=function(e,t){return r("undefined"!==typeof i),this.toArrayLike(i,e,t)},u.prototype.toArray=function(e,t){return this.toArrayLike(Array,e,t)},u.prototype.toArrayLike=function(e,t,l){var n=this.byteLength(),o=l||Math.max(1,n);r(n<=o,"byte array longer than desired length"),r(o>0,"Requested array length <= 0"),this.strip();var u,i,s="le"===t,a=new e(o),c=this.clone();if(s){for(i=0;!c.isZero();i++)u=c.andln(255),c.iushrn(8),a[i]=u;for(;i<o;i++)a[i]=0}else{for(i=0;i<o-n;i++)a[i]=0;for(i=0;!c.isZero();i++)u=c.andln(255),c.iushrn(8),a[o-i-1]=u}return a},Math.clz32?u.prototype._countBits=function(e){return 32-Math.clz32(e)}:u.prototype._countBits=function(e){var t=e,l=0;return t>=4096&&(l+=13,t>>>=13),t>=64&&(l+=7,t>>>=7),t>=8&&(l+=4,t>>>=4),t>=2&&(l+=2,t>>>=2),l+t},u.prototype._zeroBits=function(e){if(0===e)return 26;var t=e,l=0;return 0===(8191&t)&&(l+=13,t>>>=13),0===(127&t)&&(l+=7,t>>>=7),0===(15&t)&&(l+=4,t>>>=4),0===(3&t)&&(l+=2,t>>>=2),0===(1&t)&&l++,l},u.prototype.bitLength=function(){var e=this.words[this.length-1],t=this._countBits(e);return 26*(this.length-1)+t},u.prototype.zeroBits=function(){if(this.isZero())return 0;for(var e=0,t=0;t<this.length;t++){var l=this._zeroBits(this.words[t]);if(e+=l,26!==l)break}return e},u.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},u.prototype.toTwos=function(e){return 0!==this.negative?this.abs().inotn(e).iaddn(1):this.clone()},u.prototype.fromTwos=function(e){return this.testn(e-1)?this.notn(e).iaddn(1).ineg():this.clone()},u.prototype.isNeg=function(){return 0!==this.negative},u.prototype.neg=function(){return this.clone().ineg()},u.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},u.prototype.iuor=function(e){for(;this.length<e.length;)this.words[this.length++]=0;for(var t=0;t<e.length;t++)this.words[t]=this.words[t]|e.words[t];return this.strip()},u.prototype.ior=function(e){return r(0===(this.negative|e.negative)),this.iuor(e)},u.prototype.or=function(e){return this.length>e.length?this.clone().ior(e):e.clone().ior(this)},u.prototype.uor=function(e){return this.length>e.length?this.clone().iuor(e):e.clone().iuor(this)},u.prototype.iuand=function(e){var t;t=this.length>e.length?e:this;for(var l=0;l<t.length;l++)this.words[l]=this.words[l]&e.words[l];return this.length=t.length,this.strip()},u.prototype.iand=function(e){return r(0===(this.negative|e.negative)),this.iuand(e)},u.prototype.and=function(e){return this.length>e.length?this.clone().iand(e):e.clone().iand(this)},u.prototype.uand=function(e){return this.length>e.length?this.clone().iuand(e):e.clone().iuand(this)},u.prototype.iuxor=function(e){var t,l;this.length>e.length?(t=this,l=e):(t=e,l=this);for(var n=0;n<l.length;n++)this.words[n]=t.words[n]^l.words[n];if(this!==t)for(;n<t.length;n++)this.words[n]=t.words[n];return this.length=t.length,this.strip()},u.prototype.ixor=function(e){return r(0===(this.negative|e.negative)),this.iuxor(e)},u.prototype.xor=function(e){return this.length>e.length?this.clone().ixor(e):e.clone().ixor(this)},u.prototype.uxor=function(e){return this.length>e.length?this.clone().iuxor(e):e.clone().iuxor(this)},u.prototype.inotn=function(e){r("number"===typeof e&&e>=0);var t=0|Math.ceil(e/26),l=e%26;this._expand(t),l>0&&t--;for(var n=0;n<t;n++)this.words[n]=67108863&~this.words[n];return l>0&&(this.words[n]=~this.words[n]&67108863>>26-l),this.strip()},u.prototype.notn=function(e){return this.clone().inotn(e)},u.prototype.setn=function(e,t){r("number"===typeof e&&e>=0);var l=e/26|0,n=e%26;return this._expand(l+1),this.words[l]=t?this.words[l]|1<<n:this.words[l]&~(1<<n),this.strip()},u.prototype.iadd=function(e){var t,l,n;if(0!==this.negative&&0===e.negative)return this.negative=0,t=this.isub(e),this.negative^=1,this._normSign();if(0===this.negative&&0!==e.negative)return e.negative=0,t=this.isub(e),e.negative=1,t._normSign();this.length>e.length?(l=this,n=e):(l=e,n=this);for(var r=0,o=0;o<n.length;o++)t=(0|l.words[o])+(0|n.words[o])+r,this.words[o]=67108863&t,r=t>>>26;for(;0!==r&&o<l.length;o++)t=(0|l.words[o])+r,this.words[o]=67108863&t,r=t>>>26;if(this.length=l.length,0!==r)this.words[this.length]=r,this.length++;else if(l!==this)for(;o<l.length;o++)this.words[o]=l.words[o];return this},u.prototype.add=function(e){var t;return 0!==e.negative&&0===this.negative?(e.negative=0,t=this.sub(e),e.negative^=1,t):0===e.negative&&0!==this.negative?(this.negative=0,t=e.sub(this),this.negative=1,t):this.length>e.length?this.clone().iadd(e):e.clone().iadd(this)},u.prototype.isub=function(e){if(0!==e.negative){e.negative=0;var t=this.iadd(e);return e.negative=1,t._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(e),this.negative=1,this._normSign();var l,n,r=this.cmp(e);if(0===r)return this.negative=0,this.length=1,this.words[0]=0,this;r>0?(l=this,n=e):(l=e,n=this);for(var o=0,u=0;u<n.length;u++)o=(t=(0|l.words[u])-(0|n.words[u])+o)>>26,this.words[u]=67108863&t;for(;0!==o&&u<l.length;u++)o=(t=(0|l.words[u])+o)>>26,this.words[u]=67108863&t;if(0===o&&u<l.length&&l!==this)for(;u<l.length;u++)this.words[u]=l.words[u];return this.length=Math.max(this.length,u),l!==this&&(this.negative=1),this.strip()},u.prototype.sub=function(e){return this.clone().isub(e)};var g=function(e,t,l){var n,r,o,u=e.words,i=t.words,s=l.words,a=0,c=0|u[0],p=8191&c,d=c>>>13,f=0|u[1],g=8191&f,h=f>>>13,b=0|u[2],y=8191&b,m=b>>>13,v=0|u[3],_=8191&v,w=v>>>13,A=0|u[4],B=8191&A,M=A>>>13,T=0|u[5],E=8191&T,S=T>>>13,I=0|u[6],j=8191&I,F=I>>>13,C=0|u[7],O=8191&C,k=C>>>13,R=0|u[8],x=8191&R,z=R>>>13,N=0|u[9],W=8191&N,U=N>>>13,D=0|i[0],L=8191&D,P=D>>>13,V=0|i[1],H=8191&V,q=V>>>13,G=0|i[2],$=8191&G,X=G>>>13,Y=0|i[3],J=8191&Y,K=Y>>>13,Z=0|i[4],Q=8191&Z,ee=Z>>>13,te=0|i[5],le=8191&te,ne=te>>>13,re=0|i[6],oe=8191&re,ue=re>>>13,ie=0|i[7],se=8191&ie,ae=ie>>>13,ce=0|i[8],pe=8191&ce,de=ce>>>13,fe=0|i[9],ge=8191&fe,he=fe>>>13;l.negative=e.negative^t.negative,l.length=19;var be=(a+(n=Math.imul(p,L))|0)+((8191&(r=(r=Math.imul(p,P))+Math.imul(d,L)|0))<<13)|0;a=((o=Math.imul(d,P))+(r>>>13)|0)+(be>>>26)|0,be&=67108863,n=Math.imul(g,L),r=(r=Math.imul(g,P))+Math.imul(h,L)|0,o=Math.imul(h,P);var ye=(a+(n=n+Math.imul(p,H)|0)|0)+((8191&(r=(r=r+Math.imul(p,q)|0)+Math.imul(d,H)|0))<<13)|0;a=((o=o+Math.imul(d,q)|0)+(r>>>13)|0)+(ye>>>26)|0,ye&=67108863,n=Math.imul(y,L),r=(r=Math.imul(y,P))+Math.imul(m,L)|0,o=Math.imul(m,P),n=n+Math.imul(g,H)|0,r=(r=r+Math.imul(g,q)|0)+Math.imul(h,H)|0,o=o+Math.imul(h,q)|0;var me=(a+(n=n+Math.imul(p,$)|0)|0)+((8191&(r=(r=r+Math.imul(p,X)|0)+Math.imul(d,$)|0))<<13)|0;a=((o=o+Math.imul(d,X)|0)+(r>>>13)|0)+(me>>>26)|0,me&=67108863,n=Math.imul(_,L),r=(r=Math.imul(_,P))+Math.imul(w,L)|0,o=Math.imul(w,P),n=n+Math.imul(y,H)|0,r=(r=r+Math.imul(y,q)|0)+Math.imul(m,H)|0,o=o+Math.imul(m,q)|0,n=n+Math.imul(g,$)|0,r=(r=r+Math.imul(g,X)|0)+Math.imul(h,$)|0,o=o+Math.imul(h,X)|0;var ve=(a+(n=n+Math.imul(p,J)|0)|0)+((8191&(r=(r=r+Math.imul(p,K)|0)+Math.imul(d,J)|0))<<13)|0;a=((o=o+Math.imul(d,K)|0)+(r>>>13)|0)+(ve>>>26)|0,ve&=67108863,n=Math.imul(B,L),r=(r=Math.imul(B,P))+Math.imul(M,L)|0,o=Math.imul(M,P),n=n+Math.imul(_,H)|0,r=(r=r+Math.imul(_,q)|0)+Math.imul(w,H)|0,o=o+Math.imul(w,q)|0,n=n+Math.imul(y,$)|0,r=(r=r+Math.imul(y,X)|0)+Math.imul(m,$)|0,o=o+Math.imul(m,X)|0,n=n+Math.imul(g,J)|0,r=(r=r+Math.imul(g,K)|0)+Math.imul(h,J)|0,o=o+Math.imul(h,K)|0;var _e=(a+(n=n+Math.imul(p,Q)|0)|0)+((8191&(r=(r=r+Math.imul(p,ee)|0)+Math.imul(d,Q)|0))<<13)|0;a=((o=o+Math.imul(d,ee)|0)+(r>>>13)|0)+(_e>>>26)|0,_e&=67108863,n=Math.imul(E,L),r=(r=Math.imul(E,P))+Math.imul(S,L)|0,o=Math.imul(S,P),n=n+Math.imul(B,H)|0,r=(r=r+Math.imul(B,q)|0)+Math.imul(M,H)|0,o=o+Math.imul(M,q)|0,n=n+Math.imul(_,$)|0,r=(r=r+Math.imul(_,X)|0)+Math.imul(w,$)|0,o=o+Math.imul(w,X)|0,n=n+Math.imul(y,J)|0,r=(r=r+Math.imul(y,K)|0)+Math.imul(m,J)|0,o=o+Math.imul(m,K)|0,n=n+Math.imul(g,Q)|0,r=(r=r+Math.imul(g,ee)|0)+Math.imul(h,Q)|0,o=o+Math.imul(h,ee)|0;var we=(a+(n=n+Math.imul(p,le)|0)|0)+((8191&(r=(r=r+Math.imul(p,ne)|0)+Math.imul(d,le)|0))<<13)|0;a=((o=o+Math.imul(d,ne)|0)+(r>>>13)|0)+(we>>>26)|0,we&=67108863,n=Math.imul(j,L),r=(r=Math.imul(j,P))+Math.imul(F,L)|0,o=Math.imul(F,P),n=n+Math.imul(E,H)|0,r=(r=r+Math.imul(E,q)|0)+Math.imul(S,H)|0,o=o+Math.imul(S,q)|0,n=n+Math.imul(B,$)|0,r=(r=r+Math.imul(B,X)|0)+Math.imul(M,$)|0,o=o+Math.imul(M,X)|0,n=n+Math.imul(_,J)|0,r=(r=r+Math.imul(_,K)|0)+Math.imul(w,J)|0,o=o+Math.imul(w,K)|0,n=n+Math.imul(y,Q)|0,r=(r=r+Math.imul(y,ee)|0)+Math.imul(m,Q)|0,o=o+Math.imul(m,ee)|0,n=n+Math.imul(g,le)|0,r=(r=r+Math.imul(g,ne)|0)+Math.imul(h,le)|0,o=o+Math.imul(h,ne)|0;var Ae=(a+(n=n+Math.imul(p,oe)|0)|0)+((8191&(r=(r=r+Math.imul(p,ue)|0)+Math.imul(d,oe)|0))<<13)|0;a=((o=o+Math.imul(d,ue)|0)+(r>>>13)|0)+(Ae>>>26)|0,Ae&=67108863,n=Math.imul(O,L),r=(r=Math.imul(O,P))+Math.imul(k,L)|0,o=Math.imul(k,P),n=n+Math.imul(j,H)|0,r=(r=r+Math.imul(j,q)|0)+Math.imul(F,H)|0,o=o+Math.imul(F,q)|0,n=n+Math.imul(E,$)|0,r=(r=r+Math.imul(E,X)|0)+Math.imul(S,$)|0,o=o+Math.imul(S,X)|0,n=n+Math.imul(B,J)|0,r=(r=r+Math.imul(B,K)|0)+Math.imul(M,J)|0,o=o+Math.imul(M,K)|0,n=n+Math.imul(_,Q)|0,r=(r=r+Math.imul(_,ee)|0)+Math.imul(w,Q)|0,o=o+Math.imul(w,ee)|0,n=n+Math.imul(y,le)|0,r=(r=r+Math.imul(y,ne)|0)+Math.imul(m,le)|0,o=o+Math.imul(m,ne)|0,n=n+Math.imul(g,oe)|0,r=(r=r+Math.imul(g,ue)|0)+Math.imul(h,oe)|0,o=o+Math.imul(h,ue)|0;var Be=(a+(n=n+Math.imul(p,se)|0)|0)+((8191&(r=(r=r+Math.imul(p,ae)|0)+Math.imul(d,se)|0))<<13)|0;a=((o=o+Math.imul(d,ae)|0)+(r>>>13)|0)+(Be>>>26)|0,Be&=67108863,n=Math.imul(x,L),r=(r=Math.imul(x,P))+Math.imul(z,L)|0,o=Math.imul(z,P),n=n+Math.imul(O,H)|0,r=(r=r+Math.imul(O,q)|0)+Math.imul(k,H)|0,o=o+Math.imul(k,q)|0,n=n+Math.imul(j,$)|0,r=(r=r+Math.imul(j,X)|0)+Math.imul(F,$)|0,o=o+Math.imul(F,X)|0,n=n+Math.imul(E,J)|0,r=(r=r+Math.imul(E,K)|0)+Math.imul(S,J)|0,o=o+Math.imul(S,K)|0,n=n+Math.imul(B,Q)|0,r=(r=r+Math.imul(B,ee)|0)+Math.imul(M,Q)|0,o=o+Math.imul(M,ee)|0,n=n+Math.imul(_,le)|0,r=(r=r+Math.imul(_,ne)|0)+Math.imul(w,le)|0,o=o+Math.imul(w,ne)|0,n=n+Math.imul(y,oe)|0,r=(r=r+Math.imul(y,ue)|0)+Math.imul(m,oe)|0,o=o+Math.imul(m,ue)|0,n=n+Math.imul(g,se)|0,r=(r=r+Math.imul(g,ae)|0)+Math.imul(h,se)|0,o=o+Math.imul(h,ae)|0;var Me=(a+(n=n+Math.imul(p,pe)|0)|0)+((8191&(r=(r=r+Math.imul(p,de)|0)+Math.imul(d,pe)|0))<<13)|0;a=((o=o+Math.imul(d,de)|0)+(r>>>13)|0)+(Me>>>26)|0,Me&=67108863,n=Math.imul(W,L),r=(r=Math.imul(W,P))+Math.imul(U,L)|0,o=Math.imul(U,P),n=n+Math.imul(x,H)|0,r=(r=r+Math.imul(x,q)|0)+Math.imul(z,H)|0,o=o+Math.imul(z,q)|0,n=n+Math.imul(O,$)|0,r=(r=r+Math.imul(O,X)|0)+Math.imul(k,$)|0,o=o+Math.imul(k,X)|0,n=n+Math.imul(j,J)|0,r=(r=r+Math.imul(j,K)|0)+Math.imul(F,J)|0,o=o+Math.imul(F,K)|0,n=n+Math.imul(E,Q)|0,r=(r=r+Math.imul(E,ee)|0)+Math.imul(S,Q)|0,o=o+Math.imul(S,ee)|0,n=n+Math.imul(B,le)|0,r=(r=r+Math.imul(B,ne)|0)+Math.imul(M,le)|0,o=o+Math.imul(M,ne)|0,n=n+Math.imul(_,oe)|0,r=(r=r+Math.imul(_,ue)|0)+Math.imul(w,oe)|0,o=o+Math.imul(w,ue)|0,n=n+Math.imul(y,se)|0,r=(r=r+Math.imul(y,ae)|0)+Math.imul(m,se)|0,o=o+Math.imul(m,ae)|0,n=n+Math.imul(g,pe)|0,r=(r=r+Math.imul(g,de)|0)+Math.imul(h,pe)|0,o=o+Math.imul(h,de)|0;var Te=(a+(n=n+Math.imul(p,ge)|0)|0)+((8191&(r=(r=r+Math.imul(p,he)|0)+Math.imul(d,ge)|0))<<13)|0;a=((o=o+Math.imul(d,he)|0)+(r>>>13)|0)+(Te>>>26)|0,Te&=67108863,n=Math.imul(W,H),r=(r=Math.imul(W,q))+Math.imul(U,H)|0,o=Math.imul(U,q),n=n+Math.imul(x,$)|0,r=(r=r+Math.imul(x,X)|0)+Math.imul(z,$)|0,o=o+Math.imul(z,X)|0,n=n+Math.imul(O,J)|0,r=(r=r+Math.imul(O,K)|0)+Math.imul(k,J)|0,o=o+Math.imul(k,K)|0,n=n+Math.imul(j,Q)|0,r=(r=r+Math.imul(j,ee)|0)+Math.imul(F,Q)|0,o=o+Math.imul(F,ee)|0,n=n+Math.imul(E,le)|0,r=(r=r+Math.imul(E,ne)|0)+Math.imul(S,le)|0,o=o+Math.imul(S,ne)|0,n=n+Math.imul(B,oe)|0,r=(r=r+Math.imul(B,ue)|0)+Math.imul(M,oe)|0,o=o+Math.imul(M,ue)|0,n=n+Math.imul(_,se)|0,r=(r=r+Math.imul(_,ae)|0)+Math.imul(w,se)|0,o=o+Math.imul(w,ae)|0,n=n+Math.imul(y,pe)|0,r=(r=r+Math.imul(y,de)|0)+Math.imul(m,pe)|0,o=o+Math.imul(m,de)|0;var Ee=(a+(n=n+Math.imul(g,ge)|0)|0)+((8191&(r=(r=r+Math.imul(g,he)|0)+Math.imul(h,ge)|0))<<13)|0;a=((o=o+Math.imul(h,he)|0)+(r>>>13)|0)+(Ee>>>26)|0,Ee&=67108863,n=Math.imul(W,$),r=(r=Math.imul(W,X))+Math.imul(U,$)|0,o=Math.imul(U,X),n=n+Math.imul(x,J)|0,r=(r=r+Math.imul(x,K)|0)+Math.imul(z,J)|0,o=o+Math.imul(z,K)|0,n=n+Math.imul(O,Q)|0,r=(r=r+Math.imul(O,ee)|0)+Math.imul(k,Q)|0,o=o+Math.imul(k,ee)|0,n=n+Math.imul(j,le)|0,r=(r=r+Math.imul(j,ne)|0)+Math.imul(F,le)|0,o=o+Math.imul(F,ne)|0,n=n+Math.imul(E,oe)|0,r=(r=r+Math.imul(E,ue)|0)+Math.imul(S,oe)|0,o=o+Math.imul(S,ue)|0,n=n+Math.imul(B,se)|0,r=(r=r+Math.imul(B,ae)|0)+Math.imul(M,se)|0,o=o+Math.imul(M,ae)|0,n=n+Math.imul(_,pe)|0,r=(r=r+Math.imul(_,de)|0)+Math.imul(w,pe)|0,o=o+Math.imul(w,de)|0;var Se=(a+(n=n+Math.imul(y,ge)|0)|0)+((8191&(r=(r=r+Math.imul(y,he)|0)+Math.imul(m,ge)|0))<<13)|0;a=((o=o+Math.imul(m,he)|0)+(r>>>13)|0)+(Se>>>26)|0,Se&=67108863,n=Math.imul(W,J),r=(r=Math.imul(W,K))+Math.imul(U,J)|0,o=Math.imul(U,K),n=n+Math.imul(x,Q)|0,r=(r=r+Math.imul(x,ee)|0)+Math.imul(z,Q)|0,o=o+Math.imul(z,ee)|0,n=n+Math.imul(O,le)|0,r=(r=r+Math.imul(O,ne)|0)+Math.imul(k,le)|0,o=o+Math.imul(k,ne)|0,n=n+Math.imul(j,oe)|0,r=(r=r+Math.imul(j,ue)|0)+Math.imul(F,oe)|0,o=o+Math.imul(F,ue)|0,n=n+Math.imul(E,se)|0,r=(r=r+Math.imul(E,ae)|0)+Math.imul(S,se)|0,o=o+Math.imul(S,ae)|0,n=n+Math.imul(B,pe)|0,r=(r=r+Math.imul(B,de)|0)+Math.imul(M,pe)|0,o=o+Math.imul(M,de)|0;var Ie=(a+(n=n+Math.imul(_,ge)|0)|0)+((8191&(r=(r=r+Math.imul(_,he)|0)+Math.imul(w,ge)|0))<<13)|0;a=((o=o+Math.imul(w,he)|0)+(r>>>13)|0)+(Ie>>>26)|0,Ie&=67108863,n=Math.imul(W,Q),r=(r=Math.imul(W,ee))+Math.imul(U,Q)|0,o=Math.imul(U,ee),n=n+Math.imul(x,le)|0,r=(r=r+Math.imul(x,ne)|0)+Math.imul(z,le)|0,o=o+Math.imul(z,ne)|0,n=n+Math.imul(O,oe)|0,r=(r=r+Math.imul(O,ue)|0)+Math.imul(k,oe)|0,o=o+Math.imul(k,ue)|0,n=n+Math.imul(j,se)|0,r=(r=r+Math.imul(j,ae)|0)+Math.imul(F,se)|0,o=o+Math.imul(F,ae)|0,n=n+Math.imul(E,pe)|0,r=(r=r+Math.imul(E,de)|0)+Math.imul(S,pe)|0,o=o+Math.imul(S,de)|0;var je=(a+(n=n+Math.imul(B,ge)|0)|0)+((8191&(r=(r=r+Math.imul(B,he)|0)+Math.imul(M,ge)|0))<<13)|0;a=((o=o+Math.imul(M,he)|0)+(r>>>13)|0)+(je>>>26)|0,je&=67108863,n=Math.imul(W,le),r=(r=Math.imul(W,ne))+Math.imul(U,le)|0,o=Math.imul(U,ne),n=n+Math.imul(x,oe)|0,r=(r=r+Math.imul(x,ue)|0)+Math.imul(z,oe)|0,o=o+Math.imul(z,ue)|0,n=n+Math.imul(O,se)|0,r=(r=r+Math.imul(O,ae)|0)+Math.imul(k,se)|0,o=o+Math.imul(k,ae)|0,n=n+Math.imul(j,pe)|0,r=(r=r+Math.imul(j,de)|0)+Math.imul(F,pe)|0,o=o+Math.imul(F,de)|0;var Fe=(a+(n=n+Math.imul(E,ge)|0)|0)+((8191&(r=(r=r+Math.imul(E,he)|0)+Math.imul(S,ge)|0))<<13)|0;a=((o=o+Math.imul(S,he)|0)+(r>>>13)|0)+(Fe>>>26)|0,Fe&=67108863,n=Math.imul(W,oe),r=(r=Math.imul(W,ue))+Math.imul(U,oe)|0,o=Math.imul(U,ue),n=n+Math.imul(x,se)|0,r=(r=r+Math.imul(x,ae)|0)+Math.imul(z,se)|0,o=o+Math.imul(z,ae)|0,n=n+Math.imul(O,pe)|0,r=(r=r+Math.imul(O,de)|0)+Math.imul(k,pe)|0,o=o+Math.imul(k,de)|0;var Ce=(a+(n=n+Math.imul(j,ge)|0)|0)+((8191&(r=(r=r+Math.imul(j,he)|0)+Math.imul(F,ge)|0))<<13)|0;a=((o=o+Math.imul(F,he)|0)+(r>>>13)|0)+(Ce>>>26)|0,Ce&=67108863,n=Math.imul(W,se),r=(r=Math.imul(W,ae))+Math.imul(U,se)|0,o=Math.imul(U,ae),n=n+Math.imul(x,pe)|0,r=(r=r+Math.imul(x,de)|0)+Math.imul(z,pe)|0,o=o+Math.imul(z,de)|0;var Oe=(a+(n=n+Math.imul(O,ge)|0)|0)+((8191&(r=(r=r+Math.imul(O,he)|0)+Math.imul(k,ge)|0))<<13)|0;a=((o=o+Math.imul(k,he)|0)+(r>>>13)|0)+(Oe>>>26)|0,Oe&=67108863,n=Math.imul(W,pe),r=(r=Math.imul(W,de))+Math.imul(U,pe)|0,o=Math.imul(U,de);var ke=(a+(n=n+Math.imul(x,ge)|0)|0)+((8191&(r=(r=r+Math.imul(x,he)|0)+Math.imul(z,ge)|0))<<13)|0;a=((o=o+Math.imul(z,he)|0)+(r>>>13)|0)+(ke>>>26)|0,ke&=67108863;var Re=(a+(n=Math.imul(W,ge))|0)+((8191&(r=(r=Math.imul(W,he))+Math.imul(U,ge)|0))<<13)|0;return a=((o=Math.imul(U,he))+(r>>>13)|0)+(Re>>>26)|0,Re&=67108863,s[0]=be,s[1]=ye,s[2]=me,s[3]=ve,s[4]=_e,s[5]=we,s[6]=Ae,s[7]=Be,s[8]=Me,s[9]=Te,s[10]=Ee,s[11]=Se,s[12]=Ie,s[13]=je,s[14]=Fe,s[15]=Ce,s[16]=Oe,s[17]=ke,s[18]=Re,0!==a&&(s[19]=a,l.length++),l};function h(e,t,l){return(new b).mulp(e,t,l)}function b(e,t){this.x=e,this.y=t}Math.imul||(g=f),u.prototype.mulTo=function(e,t){var l=this.length+e.length;return 10===this.length&&10===e.length?g(this,e,t):l<63?f(this,e,t):l<1024?function(e,t,l){l.negative=t.negative^e.negative,l.length=e.length+t.length;for(var n=0,r=0,o=0;o<l.length-1;o++){var u=r;r=0;for(var i=67108863&n,s=Math.min(o,t.length-1),a=Math.max(0,o-e.length+1);a<=s;a++){var c=o-a,p=(0|e.words[c])*(0|t.words[a]),d=67108863&p;i=67108863&(d=d+i|0),r+=(u=(u=u+(p/67108864|0)|0)+(d>>>26)|0)>>>26,u&=67108863}l.words[o]=i,n=u,u=r}return 0!==n?l.words[o]=n:l.length--,l.strip()}(this,e,t):h(this,e,t)},b.prototype.makeRBT=function(e){for(var t=new Array(e),l=u.prototype._countBits(e)-1,n=0;n<e;n++)t[n]=this.revBin(n,l,e);return t},b.prototype.revBin=function(e,t,l){if(0===e||e===l-1)return e;for(var n=0,r=0;r<t;r++)n|=(1&e)<<t-r-1,e>>=1;return n},b.prototype.permute=function(e,t,l,n,r,o){for(var u=0;u<o;u++)n[u]=t[e[u]],r[u]=l[e[u]]},b.prototype.transform=function(e,t,l,n,r,o){this.permute(o,e,t,l,n,r);for(var u=1;u<r;u<<=1)for(var i=u<<1,s=Math.cos(2*Math.PI/i),a=Math.sin(2*Math.PI/i),c=0;c<r;c+=i)for(var p=s,d=a,f=0;f<u;f++){var g=l[c+f],h=n[c+f],b=l[c+f+u],y=n[c+f+u],m=p*b-d*y;y=p*y+d*b,b=m,l[c+f]=g+b,n[c+f]=h+y,l[c+f+u]=g-b,n[c+f+u]=h-y,f!==i&&(m=s*p-a*d,d=s*d+a*p,p=m)}},b.prototype.guessLen13b=function(e,t){var l=1|Math.max(t,e),n=1&l,r=0;for(l=l/2|0;l;l>>>=1)r++;return 1<<r+1+n},b.prototype.conjugate=function(e,t,l){if(!(l<=1))for(var n=0;n<l/2;n++){var r=e[n];e[n]=e[l-n-1],e[l-n-1]=r,r=t[n],t[n]=-t[l-n-1],t[l-n-1]=-r}},b.prototype.normalize13b=function(e,t){for(var l=0,n=0;n<t/2;n++){var r=8192*Math.round(e[2*n+1]/t)+Math.round(e[2*n]/t)+l;e[n]=67108863&r,l=r<67108864?0:r/67108864|0}return e},b.prototype.convert13b=function(e,t,l,n){for(var o=0,u=0;u<t;u++)o+=0|e[u],l[2*u]=8191&o,o>>>=13,l[2*u+1]=8191&o,o>>>=13;for(u=2*t;u<n;++u)l[u]=0;r(0===o),r(0===(-8192&o))},b.prototype.stub=function(e){for(var t=new Array(e),l=0;l<e;l++)t[l]=0;return t},b.prototype.mulp=function(e,t,l){var n=2*this.guessLen13b(e.length,t.length),r=this.makeRBT(n),o=this.stub(n),u=new Array(n),i=new Array(n),s=new Array(n),a=new Array(n),c=new Array(n),p=new Array(n),d=l.words;d.length=n,this.convert13b(e.words,e.length,u,n),this.convert13b(t.words,t.length,a,n),this.transform(u,o,i,s,n,r),this.transform(a,o,c,p,n,r);for(var f=0;f<n;f++){var g=i[f]*c[f]-s[f]*p[f];s[f]=i[f]*p[f]+s[f]*c[f],i[f]=g}return this.conjugate(i,s,n),this.transform(i,s,d,o,n,r),this.conjugate(d,o,n),this.normalize13b(d,n),l.negative=e.negative^t.negative,l.length=e.length+t.length,l.strip()},u.prototype.mul=function(e){var t=new u(null);return t.words=new Array(this.length+e.length),this.mulTo(e,t)},u.prototype.mulf=function(e){var t=new u(null);return t.words=new Array(this.length+e.length),h(this,e,t)},u.prototype.imul=function(e){return this.clone().mulTo(e,this)},u.prototype.imuln=function(e){r("number"===typeof e),r(e<67108864);for(var t=0,l=0;l<this.length;l++){var n=(0|this.words[l])*e,o=(67108863&n)+(67108863&t);t>>=26,t+=n/67108864|0,t+=o>>>26,this.words[l]=67108863&o}return 0!==t&&(this.words[l]=t,this.length++),this},u.prototype.muln=function(e){return this.clone().imuln(e)},u.prototype.sqr=function(){return this.mul(this)},u.prototype.isqr=function(){return this.imul(this.clone())},u.prototype.pow=function(e){var t=function(e){for(var t=new Array(e.bitLength()),l=0;l<t.length;l++){var n=l/26|0,r=l%26;t[l]=(e.words[n]&1<<r)>>>r}return t}(e);if(0===t.length)return new u(1);for(var l=this,n=0;n<t.length&&0===t[n];n++,l=l.sqr());if(++n<t.length)for(var r=l.sqr();n<t.length;n++,r=r.sqr())0!==t[n]&&(l=l.mul(r));return l},u.prototype.iushln=function(e){r("number"===typeof e&&e>=0);var t,l=e%26,n=(e-l)/26,o=67108863>>>26-l<<26-l;if(0!==l){var u=0;for(t=0;t<this.length;t++){var i=this.words[t]&o,s=(0|this.words[t])-i<<l;this.words[t]=s|u,u=i>>>26-l}u&&(this.words[t]=u,this.length++)}if(0!==n){for(t=this.length-1;t>=0;t--)this.words[t+n]=this.words[t];for(t=0;t<n;t++)this.words[t]=0;this.length+=n}return this.strip()},u.prototype.ishln=function(e){return r(0===this.negative),this.iushln(e)},u.prototype.iushrn=function(e,t,l){var n;r("number"===typeof e&&e>=0),n=t?(t-t%26)/26:0;var o=e%26,u=Math.min((e-o)/26,this.length),i=67108863^67108863>>>o<<o,s=l;if(n-=u,n=Math.max(0,n),s){for(var a=0;a<u;a++)s.words[a]=this.words[a];s.length=u}if(0===u);else if(this.length>u)for(this.length-=u,a=0;a<this.length;a++)this.words[a]=this.words[a+u];else this.words[0]=0,this.length=1;var c=0;for(a=this.length-1;a>=0&&(0!==c||a>=n);a--){var p=0|this.words[a];this.words[a]=c<<26-o|p>>>o,c=p&i}return s&&0!==c&&(s.words[s.length++]=c),0===this.length&&(this.words[0]=0,this.length=1),this.strip()},u.prototype.ishrn=function(e,t,l){return r(0===this.negative),this.iushrn(e,t,l)},u.prototype.shln=function(e){return this.clone().ishln(e)},u.prototype.ushln=function(e){return this.clone().iushln(e)},u.prototype.shrn=function(e){return this.clone().ishrn(e)},u.prototype.ushrn=function(e){return this.clone().iushrn(e)},u.prototype.testn=function(e){r("number"===typeof e&&e>=0);var t=e%26,l=(e-t)/26,n=1<<t;return!(this.length<=l)&&!!(this.words[l]&n)},u.prototype.imaskn=function(e){r("number"===typeof e&&e>=0);var t=e%26,l=(e-t)/26;if(r(0===this.negative,"imaskn works only with positive numbers"),this.length<=l)return this;if(0!==t&&l++,this.length=Math.min(l,this.length),0!==t){var n=67108863^67108863>>>t<<t;this.words[this.length-1]&=n}return this.strip()},u.prototype.maskn=function(e){return this.clone().imaskn(e)},u.prototype.iaddn=function(e){return r("number"===typeof e),r(e<67108864),e<0?this.isubn(-e):0!==this.negative?1===this.length&&(0|this.words[0])<e?(this.words[0]=e-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(e),this.negative=1,this):this._iaddn(e)},u.prototype._iaddn=function(e){this.words[0]+=e;for(var t=0;t<this.length&&this.words[t]>=67108864;t++)this.words[t]-=67108864,t===this.length-1?this.words[t+1]=1:this.words[t+1]++;return this.length=Math.max(this.length,t+1),this},u.prototype.isubn=function(e){if(r("number"===typeof e),r(e<67108864),e<0)return this.iaddn(-e);if(0!==this.negative)return this.negative=0,this.iaddn(e),this.negative=1,this;if(this.words[0]-=e,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var t=0;t<this.length&&this.words[t]<0;t++)this.words[t]+=67108864,this.words[t+1]-=1;return this.strip()},u.prototype.addn=function(e){return this.clone().iaddn(e)},u.prototype.subn=function(e){return this.clone().isubn(e)},u.prototype.iabs=function(){return this.negative=0,this},u.prototype.abs=function(){return this.clone().iabs()},u.prototype._ishlnsubmul=function(e,t,l){var n,o,u=e.length+l;this._expand(u);var i=0;for(n=0;n<e.length;n++){o=(0|this.words[n+l])+i;var s=(0|e.words[n])*t;i=((o-=67108863&s)>>26)-(s/67108864|0),this.words[n+l]=67108863&o}for(;n<this.length-l;n++)i=(o=(0|this.words[n+l])+i)>>26,this.words[n+l]=67108863&o;if(0===i)return this.strip();for(r(-1===i),i=0,n=0;n<this.length;n++)i=(o=-(0|this.words[n])+i)>>26,this.words[n]=67108863&o;return this.negative=1,this.strip()},u.prototype._wordDiv=function(e,t){var l=(this.length,e.length),n=this.clone(),r=e,o=0|r.words[r.length-1];0!==(l=26-this._countBits(o))&&(r=r.ushln(l),n.iushln(l),o=0|r.words[r.length-1]);var i,s=n.length-r.length;if("mod"!==t){(i=new u(null)).length=s+1,i.words=new Array(i.length);for(var a=0;a<i.length;a++)i.words[a]=0}var c=n.clone()._ishlnsubmul(r,1,s);0===c.negative&&(n=c,i&&(i.words[s]=1));for(var p=s-1;p>=0;p--){var d=67108864*(0|n.words[r.length+p])+(0|n.words[r.length+p-1]);for(d=Math.min(d/o|0,67108863),n._ishlnsubmul(r,d,p);0!==n.negative;)d--,n.negative=0,n._ishlnsubmul(r,1,p),n.isZero()||(n.negative^=1);i&&(i.words[p]=d)}return i&&i.strip(),n.strip(),"div"!==t&&0!==l&&n.iushrn(l),{div:i||null,mod:n}},u.prototype.divmod=function(e,t,l){return r(!e.isZero()),this.isZero()?{div:new u(0),mod:new u(0)}:0!==this.negative&&0===e.negative?(i=this.neg().divmod(e,t),"mod"!==t&&(n=i.div.neg()),"div"!==t&&(o=i.mod.neg(),l&&0!==o.negative&&o.iadd(e)),{div:n,mod:o}):0===this.negative&&0!==e.negative?(i=this.divmod(e.neg(),t),"mod"!==t&&(n=i.div.neg()),{div:n,mod:i.mod}):0!==(this.negative&e.negative)?(i=this.neg().divmod(e.neg(),t),"div"!==t&&(o=i.mod.neg(),l&&0!==o.negative&&o.isub(e)),{div:i.div,mod:o}):e.length>this.length||this.cmp(e)<0?{div:new u(0),mod:this}:1===e.length?"div"===t?{div:this.divn(e.words[0]),mod:null}:"mod"===t?{div:null,mod:new u(this.modn(e.words[0]))}:{div:this.divn(e.words[0]),mod:new u(this.modn(e.words[0]))}:this._wordDiv(e,t);var n,o,i},u.prototype.div=function(e){return this.divmod(e,"div",!1).div},u.prototype.mod=function(e){return this.divmod(e,"mod",!1).mod},u.prototype.umod=function(e){return this.divmod(e,"mod",!0).mod},u.prototype.divRound=function(e){var t=this.divmod(e);if(t.mod.isZero())return t.div;var l=0!==t.div.negative?t.mod.isub(e):t.mod,n=e.ushrn(1),r=e.andln(1),o=l.cmp(n);return o<0||1===r&&0===o?t.div:0!==t.div.negative?t.div.isubn(1):t.div.iaddn(1)},u.prototype.modn=function(e){r(e<=67108863);for(var t=(1<<26)%e,l=0,n=this.length-1;n>=0;n--)l=(t*l+(0|this.words[n]))%e;return l},u.prototype.idivn=function(e){r(e<=67108863);for(var t=0,l=this.length-1;l>=0;l--){var n=(0|this.words[l])+67108864*t;this.words[l]=n/e|0,t=n%e}return this.strip()},u.prototype.divn=function(e){return this.clone().idivn(e)},u.prototype.egcd=function(e){r(0===e.negative),r(!e.isZero());var t=this,l=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var n=new u(1),o=new u(0),i=new u(0),s=new u(1),a=0;t.isEven()&&l.isEven();)t.iushrn(1),l.iushrn(1),++a;for(var c=l.clone(),p=t.clone();!t.isZero();){for(var d=0,f=1;0===(t.words[0]&f)&&d<26;++d,f<<=1);if(d>0)for(t.iushrn(d);d-- >0;)(n.isOdd()||o.isOdd())&&(n.iadd(c),o.isub(p)),n.iushrn(1),o.iushrn(1);for(var g=0,h=1;0===(l.words[0]&h)&&g<26;++g,h<<=1);if(g>0)for(l.iushrn(g);g-- >0;)(i.isOdd()||s.isOdd())&&(i.iadd(c),s.isub(p)),i.iushrn(1),s.iushrn(1);t.cmp(l)>=0?(t.isub(l),n.isub(i),o.isub(s)):(l.isub(t),i.isub(n),s.isub(o))}return{a:i,b:s,gcd:l.iushln(a)}},u.prototype._invmp=function(e){r(0===e.negative),r(!e.isZero());var t=this,l=e.clone();t=0!==t.negative?t.umod(e):t.clone();for(var n,o=new u(1),i=new u(0),s=l.clone();t.cmpn(1)>0&&l.cmpn(1)>0;){for(var a=0,c=1;0===(t.words[0]&c)&&a<26;++a,c<<=1);if(a>0)for(t.iushrn(a);a-- >0;)o.isOdd()&&o.iadd(s),o.iushrn(1);for(var p=0,d=1;0===(l.words[0]&d)&&p<26;++p,d<<=1);if(p>0)for(l.iushrn(p);p-- >0;)i.isOdd()&&i.iadd(s),i.iushrn(1);t.cmp(l)>=0?(t.isub(l),o.isub(i)):(l.isub(t),i.isub(o))}return(n=0===t.cmpn(1)?o:i).cmpn(0)<0&&n.iadd(e),n},u.prototype.gcd=function(e){if(this.isZero())return e.abs();if(e.isZero())return this.abs();var t=this.clone(),l=e.clone();t.negative=0,l.negative=0;for(var n=0;t.isEven()&&l.isEven();n++)t.iushrn(1),l.iushrn(1);for(;;){for(;t.isEven();)t.iushrn(1);for(;l.isEven();)l.iushrn(1);var r=t.cmp(l);if(r<0){var o=t;t=l,l=o}else if(0===r||0===l.cmpn(1))break;t.isub(l)}return l.iushln(n)},u.prototype.invm=function(e){return this.egcd(e).a.umod(e)},u.prototype.isEven=function(){return 0===(1&this.words[0])},u.prototype.isOdd=function(){return 1===(1&this.words[0])},u.prototype.andln=function(e){return this.words[0]&e},u.prototype.bincn=function(e){r("number"===typeof e);var t=e%26,l=(e-t)/26,n=1<<t;if(this.length<=l)return this._expand(l+1),this.words[l]|=n,this;for(var o=n,u=l;0!==o&&u<this.length;u++){var i=0|this.words[u];o=(i+=o)>>>26,i&=67108863,this.words[u]=i}return 0!==o&&(this.words[u]=o,this.length++),this},u.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},u.prototype.cmpn=function(e){var t,l=e<0;if(0!==this.negative&&!l)return-1;if(0===this.negative&&l)return 1;if(this.strip(),this.length>1)t=1;else{l&&(e=-e),r(e<=67108863,"Number is too big");var n=0|this.words[0];t=n===e?0:n<e?-1:1}return 0!==this.negative?0|-t:t},u.prototype.cmp=function(e){if(0!==this.negative&&0===e.negative)return-1;if(0===this.negative&&0!==e.negative)return 1;var t=this.ucmp(e);return 0!==this.negative?0|-t:t},u.prototype.ucmp=function(e){if(this.length>e.length)return 1;if(this.length<e.length)return-1;for(var t=0,l=this.length-1;l>=0;l--){var n=0|this.words[l],r=0|e.words[l];if(n!==r){n<r?t=-1:n>r&&(t=1);break}}return t},u.prototype.gtn=function(e){return 1===this.cmpn(e)},u.prototype.gt=function(e){return 1===this.cmp(e)},u.prototype.gten=function(e){return this.cmpn(e)>=0},u.prototype.gte=function(e){return this.cmp(e)>=0},u.prototype.ltn=function(e){return-1===this.cmpn(e)},u.prototype.lt=function(e){return-1===this.cmp(e)},u.prototype.lten=function(e){return this.cmpn(e)<=0},u.prototype.lte=function(e){return this.cmp(e)<=0},u.prototype.eqn=function(e){return 0===this.cmpn(e)},u.prototype.eq=function(e){return 0===this.cmp(e)},u.red=function(e){return new B(e)},u.prototype.toRed=function(e){return r(!this.red,"Already a number in reduction context"),r(0===this.negative,"red works only with positives"),e.convertTo(this)._forceRed(e)},u.prototype.fromRed=function(){return r(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},u.prototype._forceRed=function(e){return this.red=e,this},u.prototype.forceRed=function(e){return r(!this.red,"Already a number in reduction context"),this._forceRed(e)},u.prototype.redAdd=function(e){return r(this.red,"redAdd works only with red numbers"),this.red.add(this,e)},u.prototype.redIAdd=function(e){return r(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,e)},u.prototype.redSub=function(e){return r(this.red,"redSub works only with red numbers"),this.red.sub(this,e)},u.prototype.redISub=function(e){return r(this.red,"redISub works only with red numbers"),this.red.isub(this,e)},u.prototype.redShl=function(e){return r(this.red,"redShl works only with red numbers"),this.red.shl(this,e)},u.prototype.redMul=function(e){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.mul(this,e)},u.prototype.redIMul=function(e){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,e),this.red.imul(this,e)},u.prototype.redSqr=function(){return r(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},u.prototype.redISqr=function(){return r(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},u.prototype.redSqrt=function(){return r(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},u.prototype.redInvm=function(){return r(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},u.prototype.redNeg=function(){return r(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},u.prototype.redPow=function(e){return r(this.red&&!e.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,e)};var y={k256:null,p224:null,p192:null,p25519:null};function m(e,t){this.name=e,this.p=new u(t,16),this.n=this.p.bitLength(),this.k=new u(1).iushln(this.n).isub(this.p),this.tmp=this._tmp()}function v(){m.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")}function _(){m.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")}function w(){m.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")}function A(){m.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")}function B(e){if("string"===typeof e){var t=u._prime(e);this.m=t.p,this.prime=t}else r(e.gtn(1),"modulus must be greater than 1"),this.m=e,this.prime=null}function M(e){B.call(this,e),this.shift=this.m.bitLength(),this.shift%26!==0&&(this.shift+=26-this.shift%26),this.r=new u(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv)}m.prototype._tmp=function(){var e=new u(null);return e.words=new Array(Math.ceil(this.n/13)),e},m.prototype.ireduce=function(e){var t,l=e;do{this.split(l,this.tmp),t=(l=(l=this.imulK(l)).iadd(this.tmp)).bitLength()}while(t>this.n);var n=t<this.n?-1:l.ucmp(this.p);return 0===n?(l.words[0]=0,l.length=1):n>0?l.isub(this.p):l.strip(),l},m.prototype.split=function(e,t){e.iushrn(this.n,0,t)},m.prototype.imulK=function(e){return e.imul(this.k)},o(v,m),v.prototype.split=function(e,t){for(var l=Math.min(e.length,9),n=0;n<l;n++)t.words[n]=e.words[n];if(t.length=l,e.length<=9)return e.words[0]=0,void(e.length=1);var r=e.words[9];for(t.words[t.length++]=4194303&r,n=10;n<e.length;n++){var o=0|e.words[n];e.words[n-10]=(4194303&o)<<4|r>>>22,r=o}r>>>=22,e.words[n-10]=r,0===r&&e.length>10?e.length-=10:e.length-=9},v.prototype.imulK=function(e){e.words[e.length]=0,e.words[e.length+1]=0,e.length+=2;for(var t=0,l=0;l<e.length;l++){var n=0|e.words[l];t+=977*n,e.words[l]=67108863&t,t=64*n+(t/67108864|0)}return 0===e.words[e.length-1]&&(e.length--,0===e.words[e.length-1]&&e.length--),e},o(_,m),o(w,m),o(A,m),A.prototype.imulK=function(e){for(var t=0,l=0;l<e.length;l++){var n=19*(0|e.words[l])+t,r=67108863&n;n>>>=26,e.words[l]=r,t=n}return 0!==t&&(e.words[e.length++]=t),e},u._prime=function(e){if(y[e])return y[e];var t;if("k256"===e)t=new v;else if("p224"===e)t=new _;else if("p192"===e)t=new w;else{if("p25519"!==e)throw new Error("Unknown prime "+e);t=new A}return y[e]=t,t},B.prototype._verify1=function(e){r(0===e.negative,"red works only with positives"),r(e.red,"red works only with red numbers")},B.prototype._verify2=function(e,t){r(0===(e.negative|t.negative),"red works only with positives"),r(e.red&&e.red===t.red,"red works only with red numbers")},B.prototype.imod=function(e){return this.prime?this.prime.ireduce(e)._forceRed(this):e.umod(this.m)._forceRed(this)},B.prototype.neg=function(e){return e.isZero()?e.clone():this.m.sub(e)._forceRed(this)},B.prototype.add=function(e,t){this._verify2(e,t);var l=e.add(t);return l.cmp(this.m)>=0&&l.isub(this.m),l._forceRed(this)},B.prototype.iadd=function(e,t){this._verify2(e,t);var l=e.iadd(t);return l.cmp(this.m)>=0&&l.isub(this.m),l},B.prototype.sub=function(e,t){this._verify2(e,t);var l=e.sub(t);return l.cmpn(0)<0&&l.iadd(this.m),l._forceRed(this)},B.prototype.isub=function(e,t){this._verify2(e,t);var l=e.isub(t);return l.cmpn(0)<0&&l.iadd(this.m),l},B.prototype.shl=function(e,t){return this._verify1(e),this.imod(e.ushln(t))},B.prototype.imul=function(e,t){return this._verify2(e,t),this.imod(e.imul(t))},B.prototype.mul=function(e,t){return this._verify2(e,t),this.imod(e.mul(t))},B.prototype.isqr=function(e){return this.imul(e,e.clone())},B.prototype.sqr=function(e){return this.mul(e,e)},B.prototype.sqrt=function(e){if(e.isZero())return e.clone();var t=this.m.andln(3);if(r(t%2===1),3===t){var l=this.m.add(new u(1)).iushrn(2);return this.pow(e,l)}for(var n=this.m.subn(1),o=0;!n.isZero()&&0===n.andln(1);)o++,n.iushrn(1);r(!n.isZero());var i=new u(1).toRed(this),s=i.redNeg(),a=this.m.subn(1).iushrn(1),c=this.m.bitLength();for(c=new u(2*c*c).toRed(this);0!==this.pow(c,a).cmp(s);)c.redIAdd(s);for(var p=this.pow(c,n),d=this.pow(e,n.addn(1).iushrn(1)),f=this.pow(e,n),g=o;0!==f.cmp(i);){for(var h=f,b=0;0!==h.cmp(i);b++)h=h.redSqr();r(b<g);var y=this.pow(p,new u(1).iushln(g-b-1));d=d.redMul(y),p=y.redSqr(),f=f.redMul(p),g=b}return d},B.prototype.invm=function(e){var t=e._invmp(this.m);return 0!==t.negative?(t.negative=0,this.imod(t).redNeg()):this.imod(t)},B.prototype.pow=function(e,t){if(t.isZero())return new u(1).toRed(this);if(0===t.cmpn(1))return e.clone();var l=new Array(16);l[0]=new u(1).toRed(this),l[1]=e;for(var n=2;n<l.length;n++)l[n]=this.mul(l[n-1],e);var r=l[0],o=0,i=0,s=t.bitLength()%26;for(0===s&&(s=26),n=t.length-1;n>=0;n--){for(var a=t.words[n],c=s-1;c>=0;c--){var p=a>>c&1;r!==l[0]&&(r=this.sqr(r)),0!==p||0!==o?(o<<=1,o|=p,(4===++i||0===n&&0===c)&&(r=this.mul(r,l[o]),i=0,o=0)):i=0}s=26}return r},B.prototype.convertTo=function(e){var t=e.umod(this.m);return t===e?t.clone():t},B.prototype.convertFrom=function(e){var t=e.clone();return t.red=null,t},u.mont=function(e){return new M(e)},o(M,B),M.prototype.convertTo=function(e){return this.imod(e.ushln(this.shift))},M.prototype.convertFrom=function(e){var t=this.imod(e.mul(this.rinv));return t.red=null,t},M.prototype.imul=function(e,t){if(e.isZero()||t.isZero())return e.words[0]=0,e.length=1,e;var l=e.imul(t),n=l.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),r=l.isub(n).iushrn(this.shift),o=r;return r.cmp(this.m)>=0?o=r.isub(this.m):r.cmpn(0)<0&&(o=r.iadd(this.m)),o._forceRed(this)},M.prototype.mul=function(e,t){if(e.isZero()||t.isZero())return new u(0)._forceRed(this);var l=e.mul(t),n=l.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),r=l.isub(n).iushrn(this.shift),o=r;return r.cmp(this.m)>=0?o=r.isub(this.m):r.cmpn(0)<0&&(o=r.iadd(this.m)),o._forceRed(this)},M.prototype.invm=function(e){return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this)}}("undefined"===typeof e||e,this)}).call(this,l(26)(e))},function(e,t,l){"use strict";(function(e){var n=l(122),r=l(121),o=l(51);function u(){return s.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function i(e,t){if(u()<t)throw new RangeError("Invalid typed array length");return s.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=s.prototype:(null===e&&(e=new s(t)),e.length=t),e}function s(e,t,l){if(!s.TYPED_ARRAY_SUPPORT&&!(this instanceof s))return new s(e,t,l);if("number"===typeof e){if("string"===typeof t)throw new Error("If encoding is specified then the first argument must be a string");return p(this,e)}return a(this,e,t,l)}function a(e,t,l,n){if("number"===typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!==typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,l,n){if(t.byteLength,l<0||t.byteLength<l)throw new RangeError("'offset' is out of bounds");if(t.byteLength<l+(n||0))throw new RangeError("'length' is out of bounds");t=void 0===l&&void 0===n?new Uint8Array(t):void 0===n?new Uint8Array(t,l):new Uint8Array(t,l,n);s.TYPED_ARRAY_SUPPORT?(e=t).__proto__=s.prototype:e=d(e,t);return e}(e,t,l,n):"string"===typeof t?function(e,t,l){"string"===typeof l&&""!==l||(l="utf8");if(!s.isEncoding(l))throw new TypeError('"encoding" must be a valid string encoding');var n=0|g(t,l),r=(e=i(e,n)).write(t,l);r!==n&&(e=e.slice(0,r));return e}(e,t,l):function(e,t){if(s.isBuffer(t)){var l=0|f(t.length);return 0===(e=i(e,l)).length?e:(t.copy(e,0,0,l),e)}if(t){if("undefined"!==typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!==typeof t.length||(n=t.length)!==n?i(e,0):d(e,t);if("Buffer"===t.type&&o(t.data))return d(e,t.data)}var n;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function c(e){if("number"!==typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function p(e,t){if(c(t),e=i(e,t<0?0:0|f(t)),!s.TYPED_ARRAY_SUPPORT)for(var l=0;l<t;++l)e[l]=0;return e}function d(e,t){var l=t.length<0?0:0|f(t.length);e=i(e,l);for(var n=0;n<l;n+=1)e[n]=255&t[n];return e}function f(e){if(e>=u())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+u().toString(16)+" bytes");return 0|e}function g(e,t){if(s.isBuffer(e))return e.length;if("undefined"!==typeof ArrayBuffer&&"function"===typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!==typeof e&&(e=""+e);var l=e.length;if(0===l)return 0;for(var n=!1;;)switch(t){case"ascii":case"latin1":case"binary":return l;case"utf8":case"utf-8":case void 0:return D(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*l;case"hex":return l>>>1;case"base64":return L(e).length;default:if(n)return D(e).length;t=(""+t).toLowerCase(),n=!0}}function h(e,t,l){var n=e[t];e[t]=e[l],e[l]=n}function b(e,t,l,n,r){if(0===e.length)return-1;if("string"===typeof l?(n=l,l=0):l>2147483647?l=2147483647:l<-2147483648&&(l=-2147483648),l=+l,isNaN(l)&&(l=r?0:e.length-1),l<0&&(l=e.length+l),l>=e.length){if(r)return-1;l=e.length-1}else if(l<0){if(!r)return-1;l=0}if("string"===typeof t&&(t=s.from(t,n)),s.isBuffer(t))return 0===t.length?-1:y(e,t,l,n,r);if("number"===typeof t)return t&=255,s.TYPED_ARRAY_SUPPORT&&"function"===typeof Uint8Array.prototype.indexOf?r?Uint8Array.prototype.indexOf.call(e,t,l):Uint8Array.prototype.lastIndexOf.call(e,t,l):y(e,[t],l,n,r);throw new TypeError("val must be string, number or Buffer")}function y(e,t,l,n,r){var o,u=1,i=e.length,s=t.length;if(void 0!==n&&("ucs2"===(n=String(n).toLowerCase())||"ucs-2"===n||"utf16le"===n||"utf-16le"===n)){if(e.length<2||t.length<2)return-1;u=2,i/=2,s/=2,l/=2}function a(e,t){return 1===u?e[t]:e.readUInt16BE(t*u)}if(r){var c=-1;for(o=l;o<i;o++)if(a(e,o)===a(t,-1===c?0:o-c)){if(-1===c&&(c=o),o-c+1===s)return c*u}else-1!==c&&(o-=o-c),c=-1}else for(l+s>i&&(l=i-s),o=l;o>=0;o--){for(var p=!0,d=0;d<s;d++)if(a(e,o+d)!==a(t,d)){p=!1;break}if(p)return o}return-1}function m(e,t,l,n){l=Number(l)||0;var r=e.length-l;n?(n=Number(n))>r&&(n=r):n=r;var o=t.length;if(o%2!==0)throw new TypeError("Invalid hex string");n>o/2&&(n=o/2);for(var u=0;u<n;++u){var i=parseInt(t.substr(2*u,2),16);if(isNaN(i))return u;e[l+u]=i}return u}function v(e,t,l,n){return P(D(t,e.length-l),e,l,n)}function _(e,t,l,n){return P(function(e){for(var t=[],l=0;l<e.length;++l)t.push(255&e.charCodeAt(l));return t}(t),e,l,n)}function w(e,t,l,n){return _(e,t,l,n)}function A(e,t,l,n){return P(L(t),e,l,n)}function B(e,t,l,n){return P(function(e,t){for(var l,n,r,o=[],u=0;u<e.length&&!((t-=2)<0);++u)l=e.charCodeAt(u),n=l>>8,r=l%256,o.push(r),o.push(n);return o}(t,e.length-l),e,l,n)}function M(e,t,l){return 0===t&&l===e.length?n.fromByteArray(e):n.fromByteArray(e.slice(t,l))}function T(e,t,l){l=Math.min(e.length,l);for(var n=[],r=t;r<l;){var o,u,i,s,a=e[r],c=null,p=a>239?4:a>223?3:a>191?2:1;if(r+p<=l)switch(p){case 1:a<128&&(c=a);break;case 2:128===(192&(o=e[r+1]))&&(s=(31&a)<<6|63&o)>127&&(c=s);break;case 3:o=e[r+1],u=e[r+2],128===(192&o)&&128===(192&u)&&(s=(15&a)<<12|(63&o)<<6|63&u)>2047&&(s<55296||s>57343)&&(c=s);break;case 4:o=e[r+1],u=e[r+2],i=e[r+3],128===(192&o)&&128===(192&u)&&128===(192&i)&&(s=(15&a)<<18|(63&o)<<12|(63&u)<<6|63&i)>65535&&s<1114112&&(c=s)}null===c?(c=65533,p=1):c>65535&&(c-=65536,n.push(c>>>10&1023|55296),c=56320|1023&c),n.push(c),r+=p}return function(e){var t=e.length;if(t<=E)return String.fromCharCode.apply(String,e);var l="",n=0;for(;n<t;)l+=String.fromCharCode.apply(String,e.slice(n,n+=E));return l}(n)}t.Buffer=s,t.SlowBuffer=function(e){+e!=e&&(e=0);return s.alloc(+e)},t.INSPECT_MAX_BYTES=50,s.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"===typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return!1}}(),t.kMaxLength=u(),s.poolSize=8192,s._augment=function(e){return e.__proto__=s.prototype,e},s.from=function(e,t,l){return a(null,e,t,l)},s.TYPED_ARRAY_SUPPORT&&(s.prototype.__proto__=Uint8Array.prototype,s.__proto__=Uint8Array,"undefined"!==typeof Symbol&&Symbol.species&&s[Symbol.species]===s&&Object.defineProperty(s,Symbol.species,{value:null,configurable:!0})),s.alloc=function(e,t,l){return function(e,t,l,n){return c(t),t<=0?i(e,t):void 0!==l?"string"===typeof n?i(e,t).fill(l,n):i(e,t).fill(l):i(e,t)}(null,e,t,l)},s.allocUnsafe=function(e){return p(null,e)},s.allocUnsafeSlow=function(e){return p(null,e)},s.isBuffer=function(e){return!(null==e||!e._isBuffer)},s.compare=function(e,t){if(!s.isBuffer(e)||!s.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var l=e.length,n=t.length,r=0,o=Math.min(l,n);r<o;++r)if(e[r]!==t[r]){l=e[r],n=t[r];break}return l<n?-1:n<l?1:0},s.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},s.concat=function(e,t){if(!o(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return s.alloc(0);var l;if(void 0===t)for(t=0,l=0;l<e.length;++l)t+=e[l].length;var n=s.allocUnsafe(t),r=0;for(l=0;l<e.length;++l){var u=e[l];if(!s.isBuffer(u))throw new TypeError('"list" argument must be an Array of Buffers');u.copy(n,r),r+=u.length}return n},s.byteLength=g,s.prototype._isBuffer=!0,s.prototype.swap16=function(){var e=this.length;if(e%2!==0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)h(this,t,t+1);return this},s.prototype.swap32=function(){var e=this.length;if(e%4!==0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)h(this,t,t+3),h(this,t+1,t+2);return this},s.prototype.swap64=function(){var e=this.length;if(e%8!==0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)h(this,t,t+7),h(this,t+1,t+6),h(this,t+2,t+5),h(this,t+3,t+4);return this},s.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?T(this,0,e):function(e,t,l){var n=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===l||l>this.length)&&(l=this.length),l<=0)return"";if((l>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return j(this,t,l);case"utf8":case"utf-8":return T(this,t,l);case"ascii":return S(this,t,l);case"latin1":case"binary":return I(this,t,l);case"base64":return M(this,t,l);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return F(this,t,l);default:if(n)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),n=!0}}.apply(this,arguments)},s.prototype.equals=function(e){if(!s.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===s.compare(this,e)},s.prototype.inspect=function(){var e="",l=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,l).match(/.{2}/g).join(" "),this.length>l&&(e+=" ... ")),"<Buffer "+e+">"},s.prototype.compare=function(e,t,l,n,r){if(!s.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===l&&(l=e?e.length:0),void 0===n&&(n=0),void 0===r&&(r=this.length),t<0||l>e.length||n<0||r>this.length)throw new RangeError("out of range index");if(n>=r&&t>=l)return 0;if(n>=r)return-1;if(t>=l)return 1;if(t>>>=0,l>>>=0,n>>>=0,r>>>=0,this===e)return 0;for(var o=r-n,u=l-t,i=Math.min(o,u),a=this.slice(n,r),c=e.slice(t,l),p=0;p<i;++p)if(a[p]!==c[p]){o=a[p],u=c[p];break}return o<u?-1:u<o?1:0},s.prototype.includes=function(e,t,l){return-1!==this.indexOf(e,t,l)},s.prototype.indexOf=function(e,t,l){return b(this,e,t,l,!0)},s.prototype.lastIndexOf=function(e,t,l){return b(this,e,t,l,!1)},s.prototype.write=function(e,t,l,n){if(void 0===t)n="utf8",l=this.length,t=0;else if(void 0===l&&"string"===typeof t)n=t,l=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(l)?(l|=0,void 0===n&&(n="utf8")):(n=l,l=void 0)}var r=this.length-t;if((void 0===l||l>r)&&(l=r),e.length>0&&(l<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");n||(n="utf8");for(var o=!1;;)switch(n){case"hex":return m(this,e,t,l);case"utf8":case"utf-8":return v(this,e,t,l);case"ascii":return _(this,e,t,l);case"latin1":case"binary":return w(this,e,t,l);case"base64":return A(this,e,t,l);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return B(this,e,t,l);default:if(o)throw new TypeError("Unknown encoding: "+n);n=(""+n).toLowerCase(),o=!0}},s.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var E=4096;function S(e,t,l){var n="";l=Math.min(e.length,l);for(var r=t;r<l;++r)n+=String.fromCharCode(127&e[r]);return n}function I(e,t,l){var n="";l=Math.min(e.length,l);for(var r=t;r<l;++r)n+=String.fromCharCode(e[r]);return n}function j(e,t,l){var n=e.length;(!t||t<0)&&(t=0),(!l||l<0||l>n)&&(l=n);for(var r="",o=t;o<l;++o)r+=U(e[o]);return r}function F(e,t,l){for(var n=e.slice(t,l),r="",o=0;o<n.length;o+=2)r+=String.fromCharCode(n[o]+256*n[o+1]);return r}function C(e,t,l){if(e%1!==0||e<0)throw new RangeError("offset is not uint");if(e+t>l)throw new RangeError("Trying to access beyond buffer length")}function O(e,t,l,n,r,o){if(!s.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>r||t<o)throw new RangeError('"value" argument is out of bounds');if(l+n>e.length)throw new RangeError("Index out of range")}function k(e,t,l,n){t<0&&(t=65535+t+1);for(var r=0,o=Math.min(e.length-l,2);r<o;++r)e[l+r]=(t&255<<8*(n?r:1-r))>>>8*(n?r:1-r)}function R(e,t,l,n){t<0&&(t=4294967295+t+1);for(var r=0,o=Math.min(e.length-l,4);r<o;++r)e[l+r]=t>>>8*(n?r:3-r)&255}function x(e,t,l,n,r,o){if(l+n>e.length)throw new RangeError("Index out of range");if(l<0)throw new RangeError("Index out of range")}function z(e,t,l,n,o){return o||x(e,0,l,4),r.write(e,t,l,n,23,4),l+4}function N(e,t,l,n,o){return o||x(e,0,l,8),r.write(e,t,l,n,52,8),l+8}s.prototype.slice=function(e,t){var l,n=this.length;if(e=~~e,t=void 0===t?n:~~t,e<0?(e+=n)<0&&(e=0):e>n&&(e=n),t<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e),s.TYPED_ARRAY_SUPPORT)(l=this.subarray(e,t)).__proto__=s.prototype;else{var r=t-e;l=new s(r,void 0);for(var o=0;o<r;++o)l[o]=this[o+e]}return l},s.prototype.readUIntLE=function(e,t,l){e|=0,t|=0,l||C(e,t,this.length);for(var n=this[e],r=1,o=0;++o<t&&(r*=256);)n+=this[e+o]*r;return n},s.prototype.readUIntBE=function(e,t,l){e|=0,t|=0,l||C(e,t,this.length);for(var n=this[e+--t],r=1;t>0&&(r*=256);)n+=this[e+--t]*r;return n},s.prototype.readUInt8=function(e,t){return t||C(e,1,this.length),this[e]},s.prototype.readUInt16LE=function(e,t){return t||C(e,2,this.length),this[e]|this[e+1]<<8},s.prototype.readUInt16BE=function(e,t){return t||C(e,2,this.length),this[e]<<8|this[e+1]},s.prototype.readUInt32LE=function(e,t){return t||C(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},s.prototype.readUInt32BE=function(e,t){return t||C(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},s.prototype.readIntLE=function(e,t,l){e|=0,t|=0,l||C(e,t,this.length);for(var n=this[e],r=1,o=0;++o<t&&(r*=256);)n+=this[e+o]*r;return n>=(r*=128)&&(n-=Math.pow(2,8*t)),n},s.prototype.readIntBE=function(e,t,l){e|=0,t|=0,l||C(e,t,this.length);for(var n=t,r=1,o=this[e+--n];n>0&&(r*=256);)o+=this[e+--n]*r;return o>=(r*=128)&&(o-=Math.pow(2,8*t)),o},s.prototype.readInt8=function(e,t){return t||C(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},s.prototype.readInt16LE=function(e,t){t||C(e,2,this.length);var l=this[e]|this[e+1]<<8;return 32768&l?4294901760|l:l},s.prototype.readInt16BE=function(e,t){t||C(e,2,this.length);var l=this[e+1]|this[e]<<8;return 32768&l?4294901760|l:l},s.prototype.readInt32LE=function(e,t){return t||C(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},s.prototype.readInt32BE=function(e,t){return t||C(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},s.prototype.readFloatLE=function(e,t){return t||C(e,4,this.length),r.read(this,e,!0,23,4)},s.prototype.readFloatBE=function(e,t){return t||C(e,4,this.length),r.read(this,e,!1,23,4)},s.prototype.readDoubleLE=function(e,t){return t||C(e,8,this.length),r.read(this,e,!0,52,8)},s.prototype.readDoubleBE=function(e,t){return t||C(e,8,this.length),r.read(this,e,!1,52,8)},s.prototype.writeUIntLE=function(e,t,l,n){(e=+e,t|=0,l|=0,n)||O(this,e,t,l,Math.pow(2,8*l)-1,0);var r=1,o=0;for(this[t]=255&e;++o<l&&(r*=256);)this[t+o]=e/r&255;return t+l},s.prototype.writeUIntBE=function(e,t,l,n){(e=+e,t|=0,l|=0,n)||O(this,e,t,l,Math.pow(2,8*l)-1,0);var r=l-1,o=1;for(this[t+r]=255&e;--r>=0&&(o*=256);)this[t+r]=e/o&255;return t+l},s.prototype.writeUInt8=function(e,t,l){return e=+e,t|=0,l||O(this,e,t,1,255,0),s.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},s.prototype.writeUInt16LE=function(e,t,l){return e=+e,t|=0,l||O(this,e,t,2,65535,0),s.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):k(this,e,t,!0),t+2},s.prototype.writeUInt16BE=function(e,t,l){return e=+e,t|=0,l||O(this,e,t,2,65535,0),s.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):k(this,e,t,!1),t+2},s.prototype.writeUInt32LE=function(e,t,l){return e=+e,t|=0,l||O(this,e,t,4,4294967295,0),s.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):R(this,e,t,!0),t+4},s.prototype.writeUInt32BE=function(e,t,l){return e=+e,t|=0,l||O(this,e,t,4,4294967295,0),s.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):R(this,e,t,!1),t+4},s.prototype.writeIntLE=function(e,t,l,n){if(e=+e,t|=0,!n){var r=Math.pow(2,8*l-1);O(this,e,t,l,r-1,-r)}var o=0,u=1,i=0;for(this[t]=255&e;++o<l&&(u*=256);)e<0&&0===i&&0!==this[t+o-1]&&(i=1),this[t+o]=(e/u>>0)-i&255;return t+l},s.prototype.writeIntBE=function(e,t,l,n){if(e=+e,t|=0,!n){var r=Math.pow(2,8*l-1);O(this,e,t,l,r-1,-r)}var o=l-1,u=1,i=0;for(this[t+o]=255&e;--o>=0&&(u*=256);)e<0&&0===i&&0!==this[t+o+1]&&(i=1),this[t+o]=(e/u>>0)-i&255;return t+l},s.prototype.writeInt8=function(e,t,l){return e=+e,t|=0,l||O(this,e,t,1,127,-128),s.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},s.prototype.writeInt16LE=function(e,t,l){return e=+e,t|=0,l||O(this,e,t,2,32767,-32768),s.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):k(this,e,t,!0),t+2},s.prototype.writeInt16BE=function(e,t,l){return e=+e,t|=0,l||O(this,e,t,2,32767,-32768),s.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):k(this,e,t,!1),t+2},s.prototype.writeInt32LE=function(e,t,l){return e=+e,t|=0,l||O(this,e,t,4,2147483647,-2147483648),s.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):R(this,e,t,!0),t+4},s.prototype.writeInt32BE=function(e,t,l){return e=+e,t|=0,l||O(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),s.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):R(this,e,t,!1),t+4},s.prototype.writeFloatLE=function(e,t,l){return z(this,e,t,!0,l)},s.prototype.writeFloatBE=function(e,t,l){return z(this,e,t,!1,l)},s.prototype.writeDoubleLE=function(e,t,l){return N(this,e,t,!0,l)},s.prototype.writeDoubleBE=function(e,t,l){return N(this,e,t,!1,l)},s.prototype.copy=function(e,t,l,n){if(l||(l=0),n||0===n||(n=this.length),t>=e.length&&(t=e.length),t||(t=0),n>0&&n<l&&(n=l),n===l)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(l<0||l>=this.length)throw new RangeError("sourceStart out of bounds");if(n<0)throw new RangeError("sourceEnd out of bounds");n>this.length&&(n=this.length),e.length-t<n-l&&(n=e.length-t+l);var r,o=n-l;if(this===e&&l<t&&t<n)for(r=o-1;r>=0;--r)e[r+t]=this[r+l];else if(o<1e3||!s.TYPED_ARRAY_SUPPORT)for(r=0;r<o;++r)e[r+t]=this[r+l];else Uint8Array.prototype.set.call(e,this.subarray(l,l+o),t);return o},s.prototype.fill=function(e,t,l,n){if("string"===typeof e){if("string"===typeof t?(n=t,t=0,l=this.length):"string"===typeof l&&(n=l,l=this.length),1===e.length){var r=e.charCodeAt(0);r<256&&(e=r)}if(void 0!==n&&"string"!==typeof n)throw new TypeError("encoding must be a string");if("string"===typeof n&&!s.isEncoding(n))throw new TypeError("Unknown encoding: "+n)}else"number"===typeof e&&(e&=255);if(t<0||this.length<t||this.length<l)throw new RangeError("Out of range index");if(l<=t)return this;var o;if(t>>>=0,l=void 0===l?this.length:l>>>0,e||(e=0),"number"===typeof e)for(o=t;o<l;++o)this[o]=e;else{var u=s.isBuffer(e)?e:D(new s(e,n).toString()),i=u.length;for(o=0;o<l-t;++o)this[o+t]=u[o%i]}return this};var W=/[^+\/0-9A-Za-z-_]/g;function U(e){return e<16?"0"+e.toString(16):e.toString(16)}function D(e,t){var l;t=t||1/0;for(var n=e.length,r=null,o=[],u=0;u<n;++u){if((l=e.charCodeAt(u))>55295&&l<57344){if(!r){if(l>56319){(t-=3)>-1&&o.push(239,191,189);continue}if(u+1===n){(t-=3)>-1&&o.push(239,191,189);continue}r=l;continue}if(l<56320){(t-=3)>-1&&o.push(239,191,189),r=l;continue}l=65536+(r-55296<<10|l-56320)}else r&&(t-=3)>-1&&o.push(239,191,189);if(r=null,l<128){if((t-=1)<0)break;o.push(l)}else if(l<2048){if((t-=2)<0)break;o.push(l>>6|192,63&l|128)}else if(l<65536){if((t-=3)<0)break;o.push(l>>12|224,l>>6&63|128,63&l|128)}else{if(!(l<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;o.push(l>>18|240,l>>12&63|128,l>>6&63|128,63&l|128)}}return o}function L(e){return n.toByteArray(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(W,"")).length<2)return"";for(;e.length%4!==0;)e+="=";return e}(e))}function P(e,t,l,n){for(var r=0;r<n&&!(r+l>=t.length||r>=e.length);++r)t[r+l]=e[r];return r}}).call(this,l(3))},function(e,t){var l,n,r=e.exports={};function o(){throw new Error("setTimeout has not been defined")}function u(){throw new Error("clearTimeout has not been defined")}function i(e){if(l===setTimeout)return setTimeout(e,0);if((l===o||!l)&&setTimeout)return l=setTimeout,setTimeout(e,0);try{return l(e,0)}catch(t){try{return l.call(null,e,0)}catch(t){return l.call(this,e,0)}}}!function(){try{l="function"===typeof setTimeout?setTimeout:o}catch(e){l=o}try{n="function"===typeof clearTimeout?clearTimeout:u}catch(e){n=u}}();var s,a=[],c=!1,p=-1;function d(){c&&s&&(c=!1,s.length?a=s.concat(a):p=-1,a.length&&f())}function f(){if(!c){var e=i(d);c=!0;for(var t=a.length;t;){for(s=a,a=[];++p<t;)s&&s[p].run();p=-1,t=a.length}s=null,c=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===u||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(t){try{return n.call(null,e)}catch(t){return n.call(this,e)}}}(e)}}function g(e,t){this.fun=e,this.array=t}function h(){}r.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var l=1;l<arguments.length;l++)t[l-1]=arguments[l];a.push(new g(e,t)),1!==a.length||c||i(f)},g.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=h,r.addListener=h,r.once=h,r.off=h,r.removeListener=h,r.removeAllListeners=h,r.emit=h,r.prependListener=h,r.prependOnceListener=h,r.listeners=function(e){return[]},r.binding=function(e){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(e){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}},function(e,t,l){"use strict";var n=l(16),r=Object.keys||function(e){var t=[];for(var l in e)t.push(l);return t};e.exports=p;var o=l(13);o.inherits=l(0);var u=l(37),i=l(22);o.inherits(p,u);for(var s=r(i.prototype),a=0;a<s.length;a++){var c=s[a];p.prototype[c]||(p.prototype[c]=i.prototype[c])}function p(e){if(!(this instanceof p))return new p(e);u.call(this,e),i.call(this,e),e&&!1===e.readable&&(this.readable=!1),e&&!1===e.writable&&(this.writable=!1),this.allowHalfOpen=!0,e&&!1===e.allowHalfOpen&&(this.allowHalfOpen=!1),this.once("end",d)}function d(){this.allowHalfOpen||this._writableState.ended||n.nextTick(f,this)}function f(e){e.end()}Object.defineProperty(p.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),Object.defineProperty(p.prototype,"destroyed",{get:function(){return void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed&&this._writableState.destroyed)},set:function(e){void 0!==this._readableState&&void 0!==this._writableState&&(this._readableState.destroyed=e,this._writableState.destroyed=e)}}),p.prototype._destroy=function(e,t){this.push(null),this.end(),n.nextTick(t,e)}},function(e,t){function l(e,t){if(!e)throw new Error(t||"Assertion failed")}e.exports=l,l.equal=function(e,t,l){if(e!=t)throw new Error(l||"Assertion failed: "+e+" != "+t)}},function(e,t,l){var n=l(1).Buffer;function r(e,t){this._block=n.alloc(e),this._finalSize=t,this._blockSize=e,this._len=0}r.prototype.update=function(e,t){"string"===typeof e&&(t=t||"utf8",e=n.from(e,t));for(var l=this._block,r=this._blockSize,o=e.length,u=this._len,i=0;i<o;){for(var s=u%r,a=Math.min(o-i,r-s),c=0;c<a;c++)l[s+c]=e[i+c];i+=a,(u+=a)%r===0&&this._update(l)}return this._len+=o,this},r.prototype.digest=function(e){var t=this._len%this._blockSize;this._block[t]=128,this._block.fill(0,t+1),t>=this._finalSize&&(this._update(this._block),this._block.fill(0));var l=8*this._len;if(l<=4294967295)this._block.writeUInt32BE(l,this._blockSize-4);else{var n=(4294967295&l)>>>0,r=(l-n)/4294967296;this._block.writeUInt32BE(r,this._blockSize-8),this._block.writeUInt32BE(n,this._blockSize-4)}this._update(this._block);var o=this._hash();return e?o.toString(e):o},r.prototype._update=function(){throw new Error("_update must be implemented by subclass")},e.exports=r},function(e,t,l){var n=l(14),r=n,o=Function("return this")(),u=l(43),i=l(88);r.exportSymbol("proto.protocol.Account",null,o),r.exportSymbol("proto.protocol.Account.Frozen",null,o),r.exportSymbol("proto.protocol.AccountId",null,o),r.exportSymbol("proto.protocol.AccountType",null,o),r.exportSymbol("proto.protocol.Block",null,o),r.exportSymbol("proto.protocol.BlockHeader",null,o),r.exportSymbol("proto.protocol.BlockHeader.raw",null,o),r.exportSymbol("proto.protocol.BlockInventory",null,o),r.exportSymbol("proto.protocol.BlockInventory.BlockId",null,o),r.exportSymbol("proto.protocol.BlockInventory.Type",null,o),r.exportSymbol("proto.protocol.ChainInventory",null,o),r.exportSymbol("proto.protocol.ChainInventory.BlockId",null,o),r.exportSymbol("proto.protocol.DisconnectMessage",null,o),r.exportSymbol("proto.protocol.DynamicProperties",null,o),r.exportSymbol("proto.protocol.HelloMessage",null,o),r.exportSymbol("proto.protocol.HelloMessage.BlockId",null,o),r.exportSymbol("proto.protocol.Inventory",null,o),r.exportSymbol("proto.protocol.Inventory.InventoryType",null,o),r.exportSymbol("proto.protocol.Items",null,o),r.exportSymbol("proto.protocol.Items.ItemType",null,o),r.exportSymbol("proto.protocol.ReasonCode",null,o),r.exportSymbol("proto.protocol.TXInput",null,o),r.exportSymbol("proto.protocol.TXInput.raw",null,o),r.exportSymbol("proto.protocol.TXOutput",null,o),r.exportSymbol("proto.protocol.TXOutputs",null,o),r.exportSymbol("proto.protocol.Transaction",null,o),r.exportSymbol("proto.protocol.Transaction.Contract",null,o),r.exportSymbol("proto.protocol.Transaction.Contract.ContractType",null,o),r.exportSymbol("proto.protocol.Transaction.Result",null,o),r.exportSymbol("proto.protocol.Transaction.Result.code",null,o),r.exportSymbol("proto.protocol.Transaction.raw",null,o),r.exportSymbol("proto.protocol.Transactions",null,o),r.exportSymbol("proto.protocol.Vote",null,o),r.exportSymbol("proto.protocol.Votes",null,o),r.exportSymbol("proto.protocol.Witness",null,o),r.exportSymbol("proto.protocol.acuthrity",null,o),r.exportSymbol("proto.protocol.permision",null,o),proto.protocol.AccountId=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.AccountId,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.AccountId.displayName="proto.protocol.AccountId"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.AccountId.prototype.toObject=function(e){return proto.protocol.AccountId.toObject(e,this)},proto.protocol.AccountId.toObject=function(e,t){var l={name:t.getName_asB64(),address:t.getAddress_asB64()};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.AccountId.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.AccountId;return proto.protocol.AccountId.deserializeBinaryFromReader(l,t)},proto.protocol.AccountId.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setName(l);break;case 2:l=t.readBytes();e.setAddress(l);break;default:t.skipField()}}return e},proto.protocol.AccountId.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.AccountId.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.AccountId.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getName_asU8()).length>0&&t.writeBytes(1,l),(l=e.getAddress_asU8()).length>0&&t.writeBytes(2,l)},proto.protocol.AccountId.prototype.getName=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.AccountId.prototype.getName_asB64=function(){return n.Message.bytesAsB64(this.getName())},proto.protocol.AccountId.prototype.getName_asU8=function(){return n.Message.bytesAsU8(this.getName())},proto.protocol.AccountId.prototype.setName=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.AccountId.prototype.getAddress=function(){return n.Message.getFieldWithDefault(this,2,"")},proto.protocol.AccountId.prototype.getAddress_asB64=function(){return n.Message.bytesAsB64(this.getAddress())},proto.protocol.AccountId.prototype.getAddress_asU8=function(){return n.Message.bytesAsU8(this.getAddress())},proto.protocol.AccountId.prototype.setAddress=function(e){n.Message.setProto3BytesField(this,2,e)},proto.protocol.Vote=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.Vote,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.Vote.displayName="proto.protocol.Vote"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.Vote.prototype.toObject=function(e){return proto.protocol.Vote.toObject(e,this)},proto.protocol.Vote.toObject=function(e,t){var l={voteAddress:t.getVoteAddress_asB64(),voteCount:n.Message.getFieldWithDefault(t,2,0)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.Vote.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.Vote;return proto.protocol.Vote.deserializeBinaryFromReader(l,t)},proto.protocol.Vote.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setVoteAddress(l);break;case 2:l=t.readInt64();e.setVoteCount(l);break;default:t.skipField()}}return e},proto.protocol.Vote.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.Vote.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.Vote.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getVoteAddress_asU8()).length>0&&t.writeBytes(1,l),0!==(l=e.getVoteCount())&&t.writeInt64(2,l)},proto.protocol.Vote.prototype.getVoteAddress=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.Vote.prototype.getVoteAddress_asB64=function(){return n.Message.bytesAsB64(this.getVoteAddress())},proto.protocol.Vote.prototype.getVoteAddress_asU8=function(){return n.Message.bytesAsU8(this.getVoteAddress())},proto.protocol.Vote.prototype.setVoteAddress=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.Vote.prototype.getVoteCount=function(){return n.Message.getFieldWithDefault(this,2,0)},proto.protocol.Vote.prototype.setVoteCount=function(e){n.Message.setProto3IntField(this,2,e)},proto.protocol.Account=function(e){n.Message.initialize(this,e,0,-1,proto.protocol.Account.repeatedFields_,null)},r.inherits(proto.protocol.Account,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.Account.displayName="proto.protocol.Account"),proto.protocol.Account.repeatedFields_=[5,7,16],n.Message.GENERATE_TO_OBJECT&&(proto.protocol.Account.prototype.toObject=function(e){return proto.protocol.Account.toObject(e,this)},proto.protocol.Account.toObject=function(e,t){var l,r={accountName:t.getAccountName_asB64(),type:n.Message.getFieldWithDefault(t,2,0),address:t.getAddress_asB64(),balance:n.Message.getFieldWithDefault(t,4,0),votesList:n.Message.toObjectList(t.getVotesList(),proto.protocol.Vote.toObject,e),assetMap:(l=t.getAssetMap())?l.toObject(e,void 0):[],frozenList:n.Message.toObjectList(t.getFrozenList(),proto.protocol.Account.Frozen.toObject,e),netUsage:n.Message.getFieldWithDefault(t,8,0),createTime:n.Message.getFieldWithDefault(t,9,0),latestOprationTime:n.Message.getFieldWithDefault(t,10,0),allowance:n.Message.getFieldWithDefault(t,11,0),latestWithdrawTime:n.Message.getFieldWithDefault(t,12,0),code:t.getCode_asB64(),isWitness:n.Message.getFieldWithDefault(t,14,!1),isCommittee:n.Message.getFieldWithDefault(t,15,!1),frozenSupplyList:n.Message.toObjectList(t.getFrozenSupplyList(),proto.protocol.Account.Frozen.toObject,e),assetIssuedName:t.getAssetIssuedName_asB64(),latestAssetOperationTimeMap:(l=t.getLatestAssetOperationTimeMap())?l.toObject(e,void 0):[],freeNetUsage:n.Message.getFieldWithDefault(t,19,0),freeAssetNetUsageMap:(l=t.getFreeAssetNetUsageMap())?l.toObject(e,void 0):[],latestConsumeTime:n.Message.getFieldWithDefault(t,21,0),latestConsumeFreeTime:n.Message.getFieldWithDefault(t,22,0)};return e&&(r.$jspbMessageInstance=t),r}),proto.protocol.Account.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.Account;return proto.protocol.Account.deserializeBinaryFromReader(l,t)},proto.protocol.Account.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setAccountName(l);break;case 2:l=t.readEnum();e.setType(l);break;case 3:l=t.readBytes();e.setAddress(l);break;case 4:l=t.readInt64();e.setBalance(l);break;case 5:l=new proto.protocol.Vote;t.readMessage(l,proto.protocol.Vote.deserializeBinaryFromReader),e.addVotes(l);break;case 6:l=e.getAssetMap();t.readMessage(l,function(e,t){n.Map.deserializeBinary(e,t,n.BinaryReader.prototype.readString,n.BinaryReader.prototype.readInt64)});break;case 7:l=new proto.protocol.Account.Frozen;t.readMessage(l,proto.protocol.Account.Frozen.deserializeBinaryFromReader),e.addFrozen(l);break;case 8:l=t.readInt64();e.setNetUsage(l);break;case 9:l=t.readInt64();e.setCreateTime(l);break;case 10:l=t.readInt64();e.setLatestOprationTime(l);break;case 11:l=t.readInt64();e.setAllowance(l);break;case 12:l=t.readInt64();e.setLatestWithdrawTime(l);break;case 13:l=t.readBytes();e.setCode(l);break;case 14:l=t.readBool();e.setIsWitness(l);break;case 15:l=t.readBool();e.setIsCommittee(l);break;case 16:l=new proto.protocol.Account.Frozen;t.readMessage(l,proto.protocol.Account.Frozen.deserializeBinaryFromReader),e.addFrozenSupply(l);break;case 17:l=t.readBytes();e.setAssetIssuedName(l);break;case 18:l=e.getLatestAssetOperationTimeMap();t.readMessage(l,function(e,t){n.Map.deserializeBinary(e,t,n.BinaryReader.prototype.readString,n.BinaryReader.prototype.readInt64)});break;case 19:l=t.readInt64();e.setFreeNetUsage(l);break;case 20:l=e.getFreeAssetNetUsageMap();t.readMessage(l,function(e,t){n.Map.deserializeBinary(e,t,n.BinaryReader.prototype.readString,n.BinaryReader.prototype.readInt64)});break;case 21:l=t.readInt64();e.setLatestConsumeTime(l);break;case 22:l=t.readInt64();e.setLatestConsumeFreeTime(l);break;default:t.skipField()}}return e},proto.protocol.Account.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.Account.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.Account.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getAccountName_asU8()).length>0&&t.writeBytes(1,l),0!==(l=e.getType())&&t.writeEnum(2,l),(l=e.getAddress_asU8()).length>0&&t.writeBytes(3,l),0!==(l=e.getBalance())&&t.writeInt64(4,l),(l=e.getVotesList()).length>0&&t.writeRepeatedMessage(5,l,proto.protocol.Vote.serializeBinaryToWriter),(l=e.getAssetMap(!0))&&l.getLength()>0&&l.serializeBinary(6,t,n.BinaryWriter.prototype.writeString,n.BinaryWriter.prototype.writeInt64),(l=e.getFrozenList()).length>0&&t.writeRepeatedMessage(7,l,proto.protocol.Account.Frozen.serializeBinaryToWriter),0!==(l=e.getNetUsage())&&t.writeInt64(8,l),0!==(l=e.getCreateTime())&&t.writeInt64(9,l),0!==(l=e.getLatestOprationTime())&&t.writeInt64(10,l),0!==(l=e.getAllowance())&&t.writeInt64(11,l),0!==(l=e.getLatestWithdrawTime())&&t.writeInt64(12,l),(l=e.getCode_asU8()).length>0&&t.writeBytes(13,l),(l=e.getIsWitness())&&t.writeBool(14,l),(l=e.getIsCommittee())&&t.writeBool(15,l),(l=e.getFrozenSupplyList()).length>0&&t.writeRepeatedMessage(16,l,proto.protocol.Account.Frozen.serializeBinaryToWriter),(l=e.getAssetIssuedName_asU8()).length>0&&t.writeBytes(17,l),(l=e.getLatestAssetOperationTimeMap(!0))&&l.getLength()>0&&l.serializeBinary(18,t,n.BinaryWriter.prototype.writeString,n.BinaryWriter.prototype.writeInt64),0!==(l=e.getFreeNetUsage())&&t.writeInt64(19,l),(l=e.getFreeAssetNetUsageMap(!0))&&l.getLength()>0&&l.serializeBinary(20,t,n.BinaryWriter.prototype.writeString,n.BinaryWriter.prototype.writeInt64),0!==(l=e.getLatestConsumeTime())&&t.writeInt64(21,l),0!==(l=e.getLatestConsumeFreeTime())&&t.writeInt64(22,l)},proto.protocol.Account.Frozen=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.Account.Frozen,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.Account.Frozen.displayName="proto.protocol.Account.Frozen"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.Account.Frozen.prototype.toObject=function(e){return proto.protocol.Account.Frozen.toObject(e,this)},proto.protocol.Account.Frozen.toObject=function(e,t){var l={frozenBalance:n.Message.getFieldWithDefault(t,1,0),expireTime:n.Message.getFieldWithDefault(t,2,0)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.Account.Frozen.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.Account.Frozen;return proto.protocol.Account.Frozen.deserializeBinaryFromReader(l,t)},proto.protocol.Account.Frozen.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readInt64();e.setFrozenBalance(l);break;case 2:l=t.readInt64();e.setExpireTime(l);break;default:t.skipField()}}return e},proto.protocol.Account.Frozen.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.Account.Frozen.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.Account.Frozen.serializeBinaryToWriter=function(e,t){var l=void 0;0!==(l=e.getFrozenBalance())&&t.writeInt64(1,l),0!==(l=e.getExpireTime())&&t.writeInt64(2,l)},proto.protocol.Account.Frozen.prototype.getFrozenBalance=function(){return n.Message.getFieldWithDefault(this,1,0)},proto.protocol.Account.Frozen.prototype.setFrozenBalance=function(e){n.Message.setProto3IntField(this,1,e)},proto.protocol.Account.Frozen.prototype.getExpireTime=function(){return n.Message.getFieldWithDefault(this,2,0)},proto.protocol.Account.Frozen.prototype.setExpireTime=function(e){n.Message.setProto3IntField(this,2,e)},proto.protocol.Account.prototype.getAccountName=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.Account.prototype.getAccountName_asB64=function(){return n.Message.bytesAsB64(this.getAccountName())},proto.protocol.Account.prototype.getAccountName_asU8=function(){return n.Message.bytesAsU8(this.getAccountName())},proto.protocol.Account.prototype.setAccountName=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.Account.prototype.getType=function(){return n.Message.getFieldWithDefault(this,2,0)},proto.protocol.Account.prototype.setType=function(e){n.Message.setProto3EnumField(this,2,e)},proto.protocol.Account.prototype.getAddress=function(){return n.Message.getFieldWithDefault(this,3,"")},proto.protocol.Account.prototype.getAddress_asB64=function(){return n.Message.bytesAsB64(this.getAddress())},proto.protocol.Account.prototype.getAddress_asU8=function(){return n.Message.bytesAsU8(this.getAddress())},proto.protocol.Account.prototype.setAddress=function(e){n.Message.setProto3BytesField(this,3,e)},proto.protocol.Account.prototype.getBalance=function(){return n.Message.getFieldWithDefault(this,4,0)},proto.protocol.Account.prototype.setBalance=function(e){n.Message.setProto3IntField(this,4,e)},proto.protocol.Account.prototype.getVotesList=function(){return n.Message.getRepeatedWrapperField(this,proto.protocol.Vote,5)},proto.protocol.Account.prototype.setVotesList=function(e){n.Message.setRepeatedWrapperField(this,5,e)},proto.protocol.Account.prototype.addVotes=function(e,t){return n.Message.addToRepeatedWrapperField(this,5,e,proto.protocol.Vote,t)},proto.protocol.Account.prototype.clearVotesList=function(){this.setVotesList([])},proto.protocol.Account.prototype.getAssetMap=function(e){return n.Message.getMapField(this,6,e,null)},proto.protocol.Account.prototype.clearAssetMap=function(){this.getAssetMap().clear()},proto.protocol.Account.prototype.getFrozenList=function(){return n.Message.getRepeatedWrapperField(this,proto.protocol.Account.Frozen,7)},proto.protocol.Account.prototype.setFrozenList=function(e){n.Message.setRepeatedWrapperField(this,7,e)},proto.protocol.Account.prototype.addFrozen=function(e,t){return n.Message.addToRepeatedWrapperField(this,7,e,proto.protocol.Account.Frozen,t)},proto.protocol.Account.prototype.clearFrozenList=function(){this.setFrozenList([])},proto.protocol.Account.prototype.getNetUsage=function(){return n.Message.getFieldWithDefault(this,8,0)},proto.protocol.Account.prototype.setNetUsage=function(e){n.Message.setProto3IntField(this,8,e)},proto.protocol.Account.prototype.getCreateTime=function(){return n.Message.getFieldWithDefault(this,9,0)},proto.protocol.Account.prototype.setCreateTime=function(e){n.Message.setProto3IntField(this,9,e)},proto.protocol.Account.prototype.getLatestOprationTime=function(){return n.Message.getFieldWithDefault(this,10,0)},proto.protocol.Account.prototype.setLatestOprationTime=function(e){n.Message.setProto3IntField(this,10,e)},proto.protocol.Account.prototype.getAllowance=function(){return n.Message.getFieldWithDefault(this,11,0)},proto.protocol.Account.prototype.setAllowance=function(e){n.Message.setProto3IntField(this,11,e)},proto.protocol.Account.prototype.getLatestWithdrawTime=function(){return n.Message.getFieldWithDefault(this,12,0)},proto.protocol.Account.prototype.setLatestWithdrawTime=function(e){n.Message.setProto3IntField(this,12,e)},proto.protocol.Account.prototype.getCode=function(){return n.Message.getFieldWithDefault(this,13,"")},proto.protocol.Account.prototype.getCode_asB64=function(){return n.Message.bytesAsB64(this.getCode())},proto.protocol.Account.prototype.getCode_asU8=function(){return n.Message.bytesAsU8(this.getCode())},proto.protocol.Account.prototype.setCode=function(e){n.Message.setProto3BytesField(this,13,e)},proto.protocol.Account.prototype.getIsWitness=function(){return n.Message.getFieldWithDefault(this,14,!1)},proto.protocol.Account.prototype.setIsWitness=function(e){n.Message.setProto3BooleanField(this,14,e)},proto.protocol.Account.prototype.getIsCommittee=function(){return n.Message.getFieldWithDefault(this,15,!1)},proto.protocol.Account.prototype.setIsCommittee=function(e){n.Message.setProto3BooleanField(this,15,e)},proto.protocol.Account.prototype.getFrozenSupplyList=function(){return n.Message.getRepeatedWrapperField(this,proto.protocol.Account.Frozen,16)},proto.protocol.Account.prototype.setFrozenSupplyList=function(e){n.Message.setRepeatedWrapperField(this,16,e)},proto.protocol.Account.prototype.addFrozenSupply=function(e,t){return n.Message.addToRepeatedWrapperField(this,16,e,proto.protocol.Account.Frozen,t)},proto.protocol.Account.prototype.clearFrozenSupplyList=function(){this.setFrozenSupplyList([])},proto.protocol.Account.prototype.getAssetIssuedName=function(){return n.Message.getFieldWithDefault(this,17,"")},proto.protocol.Account.prototype.getAssetIssuedName_asB64=function(){return n.Message.bytesAsB64(this.getAssetIssuedName())},proto.protocol.Account.prototype.getAssetIssuedName_asU8=function(){return n.Message.bytesAsU8(this.getAssetIssuedName())},proto.protocol.Account.prototype.setAssetIssuedName=function(e){n.Message.setProto3BytesField(this,17,e)},proto.protocol.Account.prototype.getLatestAssetOperationTimeMap=function(e){return n.Message.getMapField(this,18,e,null)},proto.protocol.Account.prototype.clearLatestAssetOperationTimeMap=function(){this.getLatestAssetOperationTimeMap().clear()},proto.protocol.Account.prototype.getFreeNetUsage=function(){return n.Message.getFieldWithDefault(this,19,0)},proto.protocol.Account.prototype.setFreeNetUsage=function(e){n.Message.setProto3IntField(this,19,e)},proto.protocol.Account.prototype.getFreeAssetNetUsageMap=function(e){return n.Message.getMapField(this,20,e,null)},proto.protocol.Account.prototype.clearFreeAssetNetUsageMap=function(){this.getFreeAssetNetUsageMap().clear()},proto.protocol.Account.prototype.getLatestConsumeTime=function(){return n.Message.getFieldWithDefault(this,21,0)},proto.protocol.Account.prototype.setLatestConsumeTime=function(e){n.Message.setProto3IntField(this,21,e)},proto.protocol.Account.prototype.getLatestConsumeFreeTime=function(){return n.Message.getFieldWithDefault(this,22,0)},proto.protocol.Account.prototype.setLatestConsumeFreeTime=function(e){n.Message.setProto3IntField(this,22,e)},proto.protocol.acuthrity=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.acuthrity,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.acuthrity.displayName="proto.protocol.acuthrity"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.acuthrity.prototype.toObject=function(e){return proto.protocol.acuthrity.toObject(e,this)},proto.protocol.acuthrity.toObject=function(e,t){var l,n={account:(l=t.getAccount())&&proto.protocol.AccountId.toObject(e,l),permissionName:t.getPermissionName_asB64()};return e&&(n.$jspbMessageInstance=t),n}),proto.protocol.acuthrity.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.acuthrity;return proto.protocol.acuthrity.deserializeBinaryFromReader(l,t)},proto.protocol.acuthrity.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=new proto.protocol.AccountId;t.readMessage(l,proto.protocol.AccountId.deserializeBinaryFromReader),e.setAccount(l);break;case 2:l=t.readBytes();e.setPermissionName(l);break;default:t.skipField()}}return e},proto.protocol.acuthrity.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.acuthrity.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.acuthrity.serializeBinaryToWriter=function(e,t){var l=void 0;null!=(l=e.getAccount())&&t.writeMessage(1,l,proto.protocol.AccountId.serializeBinaryToWriter),(l=e.getPermissionName_asU8()).length>0&&t.writeBytes(2,l)},proto.protocol.acuthrity.prototype.getAccount=function(){return n.Message.getWrapperField(this,proto.protocol.AccountId,1)},proto.protocol.acuthrity.prototype.setAccount=function(e){n.Message.setWrapperField(this,1,e)},proto.protocol.acuthrity.prototype.clearAccount=function(){this.setAccount(void 0)},proto.protocol.acuthrity.prototype.hasAccount=function(){return null!=n.Message.getField(this,1)},proto.protocol.acuthrity.prototype.getPermissionName=function(){return n.Message.getFieldWithDefault(this,2,"")},proto.protocol.acuthrity.prototype.getPermissionName_asB64=function(){return n.Message.bytesAsB64(this.getPermissionName())},proto.protocol.acuthrity.prototype.getPermissionName_asU8=function(){return n.Message.bytesAsU8(this.getPermissionName())},proto.protocol.acuthrity.prototype.setPermissionName=function(e){n.Message.setProto3BytesField(this,2,e)},proto.protocol.permision=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.permision,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.permision.displayName="proto.protocol.permision"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.permision.prototype.toObject=function(e){return proto.protocol.permision.toObject(e,this)},proto.protocol.permision.toObject=function(e,t){var l,n={account:(l=t.getAccount())&&proto.protocol.AccountId.toObject(e,l)};return e&&(n.$jspbMessageInstance=t),n}),proto.protocol.permision.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.permision;return proto.protocol.permision.deserializeBinaryFromReader(l,t)},proto.protocol.permision.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=new proto.protocol.AccountId;t.readMessage(l,proto.protocol.AccountId.deserializeBinaryFromReader),e.setAccount(l);break;default:t.skipField()}}return e},proto.protocol.permision.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.permision.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.permision.serializeBinaryToWriter=function(e,t){var l;null!=(l=e.getAccount())&&t.writeMessage(1,l,proto.protocol.AccountId.serializeBinaryToWriter)},proto.protocol.permision.prototype.getAccount=function(){return n.Message.getWrapperField(this,proto.protocol.AccountId,1)},proto.protocol.permision.prototype.setAccount=function(e){n.Message.setWrapperField(this,1,e)},proto.protocol.permision.prototype.clearAccount=function(){this.setAccount(void 0)},proto.protocol.permision.prototype.hasAccount=function(){return null!=n.Message.getField(this,1)},proto.protocol.Witness=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.Witness,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.Witness.displayName="proto.protocol.Witness"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.Witness.prototype.toObject=function(e){return proto.protocol.Witness.toObject(e,this)},proto.protocol.Witness.toObject=function(e,t){var l={address:t.getAddress_asB64(),votecount:n.Message.getFieldWithDefault(t,2,0),pubkey:t.getPubkey_asB64(),url:n.Message.getFieldWithDefault(t,4,""),totalproduced:n.Message.getFieldWithDefault(t,5,0),totalmissed:n.Message.getFieldWithDefault(t,6,0),latestblocknum:n.Message.getFieldWithDefault(t,7,0),latestslotnum:n.Message.getFieldWithDefault(t,8,0),isjobs:n.Message.getFieldWithDefault(t,9,!1)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.Witness.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.Witness;return proto.protocol.Witness.deserializeBinaryFromReader(l,t)},proto.protocol.Witness.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setAddress(l);break;case 2:l=t.readInt64();e.setVotecount(l);break;case 3:l=t.readBytes();e.setPubkey(l);break;case 4:l=t.readString();e.setUrl(l);break;case 5:l=t.readInt64();e.setTotalproduced(l);break;case 6:l=t.readInt64();e.setTotalmissed(l);break;case 7:l=t.readInt64();e.setLatestblocknum(l);break;case 8:l=t.readInt64();e.setLatestslotnum(l);break;case 9:l=t.readBool();e.setIsjobs(l);break;default:t.skipField()}}return e},proto.protocol.Witness.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.Witness.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.Witness.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getAddress_asU8()).length>0&&t.writeBytes(1,l),0!==(l=e.getVotecount())&&t.writeInt64(2,l),(l=e.getPubkey_asU8()).length>0&&t.writeBytes(3,l),(l=e.getUrl()).length>0&&t.writeString(4,l),0!==(l=e.getTotalproduced())&&t.writeInt64(5,l),0!==(l=e.getTotalmissed())&&t.writeInt64(6,l),0!==(l=e.getLatestblocknum())&&t.writeInt64(7,l),0!==(l=e.getLatestslotnum())&&t.writeInt64(8,l),(l=e.getIsjobs())&&t.writeBool(9,l)},proto.protocol.Witness.prototype.getAddress=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.Witness.prototype.getAddress_asB64=function(){return n.Message.bytesAsB64(this.getAddress())},proto.protocol.Witness.prototype.getAddress_asU8=function(){return n.Message.bytesAsU8(this.getAddress())},proto.protocol.Witness.prototype.setAddress=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.Witness.prototype.getVotecount=function(){return n.Message.getFieldWithDefault(this,2,0)},proto.protocol.Witness.prototype.setVotecount=function(e){n.Message.setProto3IntField(this,2,e)},proto.protocol.Witness.prototype.getPubkey=function(){return n.Message.getFieldWithDefault(this,3,"")},proto.protocol.Witness.prototype.getPubkey_asB64=function(){return n.Message.bytesAsB64(this.getPubkey())},proto.protocol.Witness.prototype.getPubkey_asU8=function(){return n.Message.bytesAsU8(this.getPubkey())},proto.protocol.Witness.prototype.setPubkey=function(e){n.Message.setProto3BytesField(this,3,e)},proto.protocol.Witness.prototype.getUrl=function(){return n.Message.getFieldWithDefault(this,4,"")},proto.protocol.Witness.prototype.setUrl=function(e){n.Message.setProto3StringField(this,4,e)},proto.protocol.Witness.prototype.getTotalproduced=function(){return n.Message.getFieldWithDefault(this,5,0)},proto.protocol.Witness.prototype.setTotalproduced=function(e){n.Message.setProto3IntField(this,5,e)},proto.protocol.Witness.prototype.getTotalmissed=function(){return n.Message.getFieldWithDefault(this,6,0)},proto.protocol.Witness.prototype.setTotalmissed=function(e){n.Message.setProto3IntField(this,6,e)},proto.protocol.Witness.prototype.getLatestblocknum=function(){return n.Message.getFieldWithDefault(this,7,0)},proto.protocol.Witness.prototype.setLatestblocknum=function(e){n.Message.setProto3IntField(this,7,e)},proto.protocol.Witness.prototype.getLatestslotnum=function(){return n.Message.getFieldWithDefault(this,8,0)},proto.protocol.Witness.prototype.setLatestslotnum=function(e){n.Message.setProto3IntField(this,8,e)},proto.protocol.Witness.prototype.getIsjobs=function(){return n.Message.getFieldWithDefault(this,9,!1)},proto.protocol.Witness.prototype.setIsjobs=function(e){n.Message.setProto3BooleanField(this,9,e)},proto.protocol.Votes=function(e){n.Message.initialize(this,e,0,-1,proto.protocol.Votes.repeatedFields_,null)},r.inherits(proto.protocol.Votes,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.Votes.displayName="proto.protocol.Votes"),proto.protocol.Votes.repeatedFields_=[2,3],n.Message.GENERATE_TO_OBJECT&&(proto.protocol.Votes.prototype.toObject=function(e){return proto.protocol.Votes.toObject(e,this)},proto.protocol.Votes.toObject=function(e,t){var l={address:t.getAddress_asB64(),oldVotesList:n.Message.toObjectList(t.getOldVotesList(),proto.protocol.Vote.toObject,e),newVotesList:n.Message.toObjectList(t.getNewVotesList(),proto.protocol.Vote.toObject,e)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.Votes.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.Votes;return proto.protocol.Votes.deserializeBinaryFromReader(l,t)},proto.protocol.Votes.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setAddress(l);break;case 2:l=new proto.protocol.Vote;t.readMessage(l,proto.protocol.Vote.deserializeBinaryFromReader),e.addOldVotes(l);break;case 3:l=new proto.protocol.Vote;t.readMessage(l,proto.protocol.Vote.deserializeBinaryFromReader),e.addNewVotes(l);break;default:t.skipField()}}return e},proto.protocol.Votes.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.Votes.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.Votes.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getAddress_asU8()).length>0&&t.writeBytes(1,l),(l=e.getOldVotesList()).length>0&&t.writeRepeatedMessage(2,l,proto.protocol.Vote.serializeBinaryToWriter),(l=e.getNewVotesList()).length>0&&t.writeRepeatedMessage(3,l,proto.protocol.Vote.serializeBinaryToWriter)},proto.protocol.Votes.prototype.getAddress=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.Votes.prototype.getAddress_asB64=function(){return n.Message.bytesAsB64(this.getAddress())},proto.protocol.Votes.prototype.getAddress_asU8=function(){return n.Message.bytesAsU8(this.getAddress())},proto.protocol.Votes.prototype.setAddress=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.Votes.prototype.getOldVotesList=function(){return n.Message.getRepeatedWrapperField(this,proto.protocol.Vote,2)},proto.protocol.Votes.prototype.setOldVotesList=function(e){n.Message.setRepeatedWrapperField(this,2,e)},proto.protocol.Votes.prototype.addOldVotes=function(e,t){return n.Message.addToRepeatedWrapperField(this,2,e,proto.protocol.Vote,t)},proto.protocol.Votes.prototype.clearOldVotesList=function(){this.setOldVotesList([])},proto.protocol.Votes.prototype.getNewVotesList=function(){return n.Message.getRepeatedWrapperField(this,proto.protocol.Vote,3)},proto.protocol.Votes.prototype.setNewVotesList=function(e){n.Message.setRepeatedWrapperField(this,3,e)},proto.protocol.Votes.prototype.addNewVotes=function(e,t){return n.Message.addToRepeatedWrapperField(this,3,e,proto.protocol.Vote,t)},proto.protocol.Votes.prototype.clearNewVotesList=function(){this.setNewVotesList([])},proto.protocol.TXOutput=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.TXOutput,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.TXOutput.displayName="proto.protocol.TXOutput"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.TXOutput.prototype.toObject=function(e){return proto.protocol.TXOutput.toObject(e,this)},proto.protocol.TXOutput.toObject=function(e,t){var l={value:n.Message.getFieldWithDefault(t,1,0),pubkeyhash:t.getPubkeyhash_asB64()};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.TXOutput.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.TXOutput;return proto.protocol.TXOutput.deserializeBinaryFromReader(l,t)},proto.protocol.TXOutput.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readInt64();e.setValue(l);break;case 2:l=t.readBytes();e.setPubkeyhash(l);break;default:t.skipField()}}return e},proto.protocol.TXOutput.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.TXOutput.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.TXOutput.serializeBinaryToWriter=function(e,t){var l=void 0;0!==(l=e.getValue())&&t.writeInt64(1,l),(l=e.getPubkeyhash_asU8()).length>0&&t.writeBytes(2,l)},proto.protocol.TXOutput.prototype.getValue=function(){return n.Message.getFieldWithDefault(this,1,0)},proto.protocol.TXOutput.prototype.setValue=function(e){n.Message.setProto3IntField(this,1,e)},proto.protocol.TXOutput.prototype.getPubkeyhash=function(){return n.Message.getFieldWithDefault(this,2,"")},proto.protocol.TXOutput.prototype.getPubkeyhash_asB64=function(){return n.Message.bytesAsB64(this.getPubkeyhash())},proto.protocol.TXOutput.prototype.getPubkeyhash_asU8=function(){return n.Message.bytesAsU8(this.getPubkeyhash())},proto.protocol.TXOutput.prototype.setPubkeyhash=function(e){n.Message.setProto3BytesField(this,2,e)},proto.protocol.TXInput=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.TXInput,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.TXInput.displayName="proto.protocol.TXInput"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.TXInput.prototype.toObject=function(e){return proto.protocol.TXInput.toObject(e,this)},proto.protocol.TXInput.toObject=function(e,t){var l,n={rawData:(l=t.getRawData())&&proto.protocol.TXInput.raw.toObject(e,l),signature:t.getSignature_asB64()};return e&&(n.$jspbMessageInstance=t),n}),proto.protocol.TXInput.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.TXInput;return proto.protocol.TXInput.deserializeBinaryFromReader(l,t)},proto.protocol.TXInput.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=new proto.protocol.TXInput.raw;t.readMessage(l,proto.protocol.TXInput.raw.deserializeBinaryFromReader),e.setRawData(l);break;case 4:l=t.readBytes();e.setSignature(l);break;default:t.skipField()}}return e},proto.protocol.TXInput.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.TXInput.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.TXInput.serializeBinaryToWriter=function(e,t){var l=void 0;null!=(l=e.getRawData())&&t.writeMessage(1,l,proto.protocol.TXInput.raw.serializeBinaryToWriter),(l=e.getSignature_asU8()).length>0&&t.writeBytes(4,l)},proto.protocol.TXInput.raw=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.TXInput.raw,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.TXInput.raw.displayName="proto.protocol.TXInput.raw"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.TXInput.raw.prototype.toObject=function(e){return proto.protocol.TXInput.raw.toObject(e,this)},proto.protocol.TXInput.raw.toObject=function(e,t){var l={txid:t.getTxid_asB64(),vout:n.Message.getFieldWithDefault(t,2,0),pubkey:t.getPubkey_asB64()};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.TXInput.raw.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.TXInput.raw;return proto.protocol.TXInput.raw.deserializeBinaryFromReader(l,t)},proto.protocol.TXInput.raw.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setTxid(l);break;case 2:l=t.readInt64();e.setVout(l);break;case 3:l=t.readBytes();e.setPubkey(l);break;default:t.skipField()}}return e},proto.protocol.TXInput.raw.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.TXInput.raw.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.TXInput.raw.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getTxid_asU8()).length>0&&t.writeBytes(1,l),0!==(l=e.getVout())&&t.writeInt64(2,l),(l=e.getPubkey_asU8()).length>0&&t.writeBytes(3,l)},proto.protocol.TXInput.raw.prototype.getTxid=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.TXInput.raw.prototype.getTxid_asB64=function(){return n.Message.bytesAsB64(this.getTxid())},proto.protocol.TXInput.raw.prototype.getTxid_asU8=function(){return n.Message.bytesAsU8(this.getTxid())},proto.protocol.TXInput.raw.prototype.setTxid=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.TXInput.raw.prototype.getVout=function(){return n.Message.getFieldWithDefault(this,2,0)},proto.protocol.TXInput.raw.prototype.setVout=function(e){n.Message.setProto3IntField(this,2,e)},proto.protocol.TXInput.raw.prototype.getPubkey=function(){return n.Message.getFieldWithDefault(this,3,"")},proto.protocol.TXInput.raw.prototype.getPubkey_asB64=function(){return n.Message.bytesAsB64(this.getPubkey())},proto.protocol.TXInput.raw.prototype.getPubkey_asU8=function(){return n.Message.bytesAsU8(this.getPubkey())},proto.protocol.TXInput.raw.prototype.setPubkey=function(e){n.Message.setProto3BytesField(this,3,e)},proto.protocol.TXInput.prototype.getRawData=function(){return n.Message.getWrapperField(this,proto.protocol.TXInput.raw,1)},proto.protocol.TXInput.prototype.setRawData=function(e){n.Message.setWrapperField(this,1,e)},proto.protocol.TXInput.prototype.clearRawData=function(){this.setRawData(void 0)},proto.protocol.TXInput.prototype.hasRawData=function(){return null!=n.Message.getField(this,1)},proto.protocol.TXInput.prototype.getSignature=function(){return n.Message.getFieldWithDefault(this,4,"")},proto.protocol.TXInput.prototype.getSignature_asB64=function(){return n.Message.bytesAsB64(this.getSignature())},proto.protocol.TXInput.prototype.getSignature_asU8=function(){return n.Message.bytesAsU8(this.getSignature())},proto.protocol.TXInput.prototype.setSignature=function(e){n.Message.setProto3BytesField(this,4,e)},proto.protocol.TXOutputs=function(e){n.Message.initialize(this,e,0,-1,proto.protocol.TXOutputs.repeatedFields_,null)},r.inherits(proto.protocol.TXOutputs,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.TXOutputs.displayName="proto.protocol.TXOutputs"),proto.protocol.TXOutputs.repeatedFields_=[1],n.Message.GENERATE_TO_OBJECT&&(proto.protocol.TXOutputs.prototype.toObject=function(e){return proto.protocol.TXOutputs.toObject(e,this)},proto.protocol.TXOutputs.toObject=function(e,t){var l={outputsList:n.Message.toObjectList(t.getOutputsList(),proto.protocol.TXOutput.toObject,e)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.TXOutputs.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.TXOutputs;return proto.protocol.TXOutputs.deserializeBinaryFromReader(l,t)},proto.protocol.TXOutputs.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=new proto.protocol.TXOutput;t.readMessage(l,proto.protocol.TXOutput.deserializeBinaryFromReader),e.addOutputs(l);break;default:t.skipField()}}return e},proto.protocol.TXOutputs.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.TXOutputs.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.TXOutputs.serializeBinaryToWriter=function(e,t){var l;(l=e.getOutputsList()).length>0&&t.writeRepeatedMessage(1,l,proto.protocol.TXOutput.serializeBinaryToWriter)},proto.protocol.TXOutputs.prototype.getOutputsList=function(){return n.Message.getRepeatedWrapperField(this,proto.protocol.TXOutput,1)},proto.protocol.TXOutputs.prototype.setOutputsList=function(e){n.Message.setRepeatedWrapperField(this,1,e)},proto.protocol.TXOutputs.prototype.addOutputs=function(e,t){return n.Message.addToRepeatedWrapperField(this,1,e,proto.protocol.TXOutput,t)},proto.protocol.TXOutputs.prototype.clearOutputsList=function(){this.setOutputsList([])},proto.protocol.Transaction=function(e){n.Message.initialize(this,e,0,-1,proto.protocol.Transaction.repeatedFields_,null)},r.inherits(proto.protocol.Transaction,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.Transaction.displayName="proto.protocol.Transaction"),proto.protocol.Transaction.repeatedFields_=[2,5],n.Message.GENERATE_TO_OBJECT&&(proto.protocol.Transaction.prototype.toObject=function(e){return proto.protocol.Transaction.toObject(e,this)},proto.protocol.Transaction.toObject=function(e,t){var l,r={rawData:(l=t.getRawData())&&proto.protocol.Transaction.raw.toObject(e,l),signatureList:t.getSignatureList_asB64(),retList:n.Message.toObjectList(t.getRetList(),proto.protocol.Transaction.Result.toObject,e)};return e&&(r.$jspbMessageInstance=t),r}),proto.protocol.Transaction.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.Transaction;return proto.protocol.Transaction.deserializeBinaryFromReader(l,t)},proto.protocol.Transaction.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=new proto.protocol.Transaction.raw;t.readMessage(l,proto.protocol.Transaction.raw.deserializeBinaryFromReader),e.setRawData(l);break;case 2:l=t.readBytes();e.addSignature(l);break;case 5:l=new proto.protocol.Transaction.Result;t.readMessage(l,proto.protocol.Transaction.Result.deserializeBinaryFromReader),e.addRet(l);break;default:t.skipField()}}return e},proto.protocol.Transaction.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.Transaction.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.Transaction.serializeBinaryToWriter=function(e,t){var l=void 0;null!=(l=e.getRawData())&&t.writeMessage(1,l,proto.protocol.Transaction.raw.serializeBinaryToWriter),(l=e.getSignatureList_asU8()).length>0&&t.writeRepeatedBytes(2,l),(l=e.getRetList()).length>0&&t.writeRepeatedMessage(5,l,proto.protocol.Transaction.Result.serializeBinaryToWriter)},proto.protocol.Transaction.Contract=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.Transaction.Contract,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.Transaction.Contract.displayName="proto.protocol.Transaction.Contract"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.Transaction.Contract.prototype.toObject=function(e){return proto.protocol.Transaction.Contract.toObject(e,this)},proto.protocol.Transaction.Contract.toObject=function(e,t){var l,r={type:n.Message.getFieldWithDefault(t,1,0),parameter:(l=t.getParameter())&&u.Any.toObject(e,l),provider:t.getProvider_asB64(),contractname:t.getContractname_asB64()};return e&&(r.$jspbMessageInstance=t),r}),proto.protocol.Transaction.Contract.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.Transaction.Contract;return proto.protocol.Transaction.Contract.deserializeBinaryFromReader(l,t)},proto.protocol.Transaction.Contract.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readEnum();e.setType(l);break;case 2:l=new u.Any;t.readMessage(l,u.Any.deserializeBinaryFromReader),e.setParameter(l);break;case 3:l=t.readBytes();e.setProvider(l);break;case 4:l=t.readBytes();e.setContractname(l);break;default:t.skipField()}}return e},proto.protocol.Transaction.Contract.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.Transaction.Contract.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.Transaction.Contract.serializeBinaryToWriter=function(e,t){var l=void 0;0!==(l=e.getType())&&t.writeEnum(1,l),null!=(l=e.getParameter())&&t.writeMessage(2,l,u.Any.serializeBinaryToWriter),(l=e.getProvider_asU8()).length>0&&t.writeBytes(3,l),(l=e.getContractname_asU8()).length>0&&t.writeBytes(4,l)},proto.protocol.Transaction.Contract.ContractType={ACCOUNTCREATECONTRACT:0,TRANSFERCONTRACT:1,TRANSFERASSETCONTRACT:2,VOTEASSETCONTRACT:3,VOTEWITNESSCONTRACT:4,WITNESSCREATECONTRACT:5,ASSETISSUECONTRACT:6,DEPLOYCONTRACT:7,WITNESSUPDATECONTRACT:8,PARTICIPATEASSETISSUECONTRACT:9,ACCOUNTUPDATECONTRACT:10,FREEZEBALANCECONTRACT:11,UNFREEZEBALANCECONTRACT:12,WITHDRAWBALANCECONTRACT:13,UNFREEZEASSETCONTRACT:14,UPDATEASSETCONTRACT:15,CUSTOMCONTRACT:20},proto.protocol.Transaction.Contract.prototype.getType=function(){return n.Message.getFieldWithDefault(this,1,0)},proto.protocol.Transaction.Contract.prototype.setType=function(e){n.Message.setProto3EnumField(this,1,e)},proto.protocol.Transaction.Contract.prototype.getParameter=function(){return n.Message.getWrapperField(this,u.Any,2)},proto.protocol.Transaction.Contract.prototype.setParameter=function(e){n.Message.setWrapperField(this,2,e)},proto.protocol.Transaction.Contract.prototype.clearParameter=function(){this.setParameter(void 0)},proto.protocol.Transaction.Contract.prototype.hasParameter=function(){return null!=n.Message.getField(this,2)},proto.protocol.Transaction.Contract.prototype.getProvider=function(){return n.Message.getFieldWithDefault(this,3,"")},proto.protocol.Transaction.Contract.prototype.getProvider_asB64=function(){return n.Message.bytesAsB64(this.getProvider())},proto.protocol.Transaction.Contract.prototype.getProvider_asU8=function(){return n.Message.bytesAsU8(this.getProvider())},proto.protocol.Transaction.Contract.prototype.setProvider=function(e){n.Message.setProto3BytesField(this,3,e)},proto.protocol.Transaction.Contract.prototype.getContractname=function(){return n.Message.getFieldWithDefault(this,4,"")},proto.protocol.Transaction.Contract.prototype.getContractname_asB64=function(){return n.Message.bytesAsB64(this.getContractname())},proto.protocol.Transaction.Contract.prototype.getContractname_asU8=function(){return n.Message.bytesAsU8(this.getContractname())},proto.protocol.Transaction.Contract.prototype.setContractname=function(e){n.Message.setProto3BytesField(this,4,e)},proto.protocol.Transaction.Result=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.Transaction.Result,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.Transaction.Result.displayName="proto.protocol.Transaction.Result"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.Transaction.Result.prototype.toObject=function(e){return proto.protocol.Transaction.Result.toObject(e,this)},proto.protocol.Transaction.Result.toObject=function(e,t){var l={fee:n.Message.getFieldWithDefault(t,1,0),ret:n.Message.getFieldWithDefault(t,2,0)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.Transaction.Result.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.Transaction.Result;return proto.protocol.Transaction.Result.deserializeBinaryFromReader(l,t)},proto.protocol.Transaction.Result.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readInt64();e.setFee(l);break;case 2:l=t.readEnum();e.setRet(l);break;default:t.skipField()}}return e},proto.protocol.Transaction.Result.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.Transaction.Result.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.Transaction.Result.serializeBinaryToWriter=function(e,t){var l=void 0;0!==(l=e.getFee())&&t.writeInt64(1,l),0!==(l=e.getRet())&&t.writeEnum(2,l)},proto.protocol.Transaction.Result.code={SUCESS:0,FAILED:1},proto.protocol.Transaction.Result.prototype.getFee=function(){return n.Message.getFieldWithDefault(this,1,0)},proto.protocol.Transaction.Result.prototype.setFee=function(e){n.Message.setProto3IntField(this,1,e)},proto.protocol.Transaction.Result.prototype.getRet=function(){return n.Message.getFieldWithDefault(this,2,0)},proto.protocol.Transaction.Result.prototype.setRet=function(e){n.Message.setProto3EnumField(this,2,e)},proto.protocol.Transaction.raw=function(e){n.Message.initialize(this,e,0,-1,proto.protocol.Transaction.raw.repeatedFields_,null)},r.inherits(proto.protocol.Transaction.raw,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.Transaction.raw.displayName="proto.protocol.Transaction.raw"),proto.protocol.Transaction.raw.repeatedFields_=[9,11],n.Message.GENERATE_TO_OBJECT&&(proto.protocol.Transaction.raw.prototype.toObject=function(e){return proto.protocol.Transaction.raw.toObject(e,this)},proto.protocol.Transaction.raw.toObject=function(e,t){var l={refBlockBytes:t.getRefBlockBytes_asB64(),refBlockNum:n.Message.getFieldWithDefault(t,3,0),refBlockHash:t.getRefBlockHash_asB64(),expiration:n.Message.getFieldWithDefault(t,8,0),authsList:n.Message.toObjectList(t.getAuthsList(),proto.protocol.acuthrity.toObject,e),data:t.getData_asB64(),contractList:n.Message.toObjectList(t.getContractList(),proto.protocol.Transaction.Contract.toObject,e),scripts:t.getScripts_asB64(),timestamp:n.Message.getFieldWithDefault(t,14,0)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.Transaction.raw.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.Transaction.raw;return proto.protocol.Transaction.raw.deserializeBinaryFromReader(l,t)},proto.protocol.Transaction.raw.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setRefBlockBytes(l);break;case 3:l=t.readInt64();e.setRefBlockNum(l);break;case 4:l=t.readBytes();e.setRefBlockHash(l);break;case 8:l=t.readInt64();e.setExpiration(l);break;case 9:l=new proto.protocol.acuthrity;t.readMessage(l,proto.protocol.acuthrity.deserializeBinaryFromReader),e.addAuths(l);break;case 10:l=t.readBytes();e.setData(l);break;case 11:l=new proto.protocol.Transaction.Contract;t.readMessage(l,proto.protocol.Transaction.Contract.deserializeBinaryFromReader),e.addContract(l);break;case 12:l=t.readBytes();e.setScripts(l);break;case 14:l=t.readInt64();e.setTimestamp(l);break;default:t.skipField()}}return e},proto.protocol.Transaction.raw.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.Transaction.raw.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.Transaction.raw.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getRefBlockBytes_asU8()).length>0&&t.writeBytes(1,l),0!==(l=e.getRefBlockNum())&&t.writeInt64(3,l),(l=e.getRefBlockHash_asU8()).length>0&&t.writeBytes(4,l),0!==(l=e.getExpiration())&&t.writeInt64(8,l),(l=e.getAuthsList()).length>0&&t.writeRepeatedMessage(9,l,proto.protocol.acuthrity.serializeBinaryToWriter),(l=e.getData_asU8()).length>0&&t.writeBytes(10,l),(l=e.getContractList()).length>0&&t.writeRepeatedMessage(11,l,proto.protocol.Transaction.Contract.serializeBinaryToWriter),(l=e.getScripts_asU8()).length>0&&t.writeBytes(12,l),0!==(l=e.getTimestamp())&&t.writeInt64(14,l)},proto.protocol.Transaction.raw.prototype.getRefBlockBytes=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.Transaction.raw.prototype.getRefBlockBytes_asB64=function(){return n.Message.bytesAsB64(this.getRefBlockBytes())},proto.protocol.Transaction.raw.prototype.getRefBlockBytes_asU8=function(){return n.Message.bytesAsU8(this.getRefBlockBytes())},proto.protocol.Transaction.raw.prototype.setRefBlockBytes=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.Transaction.raw.prototype.getRefBlockNum=function(){return n.Message.getFieldWithDefault(this,3,0)},proto.protocol.Transaction.raw.prototype.setRefBlockNum=function(e){n.Message.setProto3IntField(this,3,e)},proto.protocol.Transaction.raw.prototype.getRefBlockHash=function(){return n.Message.getFieldWithDefault(this,4,"")},proto.protocol.Transaction.raw.prototype.getRefBlockHash_asB64=function(){return n.Message.bytesAsB64(this.getRefBlockHash())},proto.protocol.Transaction.raw.prototype.getRefBlockHash_asU8=function(){return n.Message.bytesAsU8(this.getRefBlockHash())},proto.protocol.Transaction.raw.prototype.setRefBlockHash=function(e){n.Message.setProto3BytesField(this,4,e)},proto.protocol.Transaction.raw.prototype.getExpiration=function(){return n.Message.getFieldWithDefault(this,8,0)},proto.protocol.Transaction.raw.prototype.setExpiration=function(e){n.Message.setProto3IntField(this,8,e)},proto.protocol.Transaction.raw.prototype.getAuthsList=function(){return n.Message.getRepeatedWrapperField(this,proto.protocol.acuthrity,9)},proto.protocol.Transaction.raw.prototype.setAuthsList=function(e){n.Message.setRepeatedWrapperField(this,9,e)},proto.protocol.Transaction.raw.prototype.addAuths=function(e,t){return n.Message.addToRepeatedWrapperField(this,9,e,proto.protocol.acuthrity,t)},proto.protocol.Transaction.raw.prototype.clearAuthsList=function(){this.setAuthsList([])},proto.protocol.Transaction.raw.prototype.getData=function(){return n.Message.getFieldWithDefault(this,10,"")},proto.protocol.Transaction.raw.prototype.getData_asB64=function(){return n.Message.bytesAsB64(this.getData())},proto.protocol.Transaction.raw.prototype.getData_asU8=function(){return n.Message.bytesAsU8(this.getData())},proto.protocol.Transaction.raw.prototype.setData=function(e){n.Message.setProto3BytesField(this,10,e)},proto.protocol.Transaction.raw.prototype.getContractList=function(){return n.Message.getRepeatedWrapperField(this,proto.protocol.Transaction.Contract,11)},proto.protocol.Transaction.raw.prototype.setContractList=function(e){n.Message.setRepeatedWrapperField(this,11,e)},proto.protocol.Transaction.raw.prototype.addContract=function(e,t){return n.Message.addToRepeatedWrapperField(this,11,e,proto.protocol.Transaction.Contract,t)},proto.protocol.Transaction.raw.prototype.clearContractList=function(){this.setContractList([])},proto.protocol.Transaction.raw.prototype.getScripts=function(){return n.Message.getFieldWithDefault(this,12,"")},proto.protocol.Transaction.raw.prototype.getScripts_asB64=function(){return n.Message.bytesAsB64(this.getScripts())},proto.protocol.Transaction.raw.prototype.getScripts_asU8=function(){return n.Message.bytesAsU8(this.getScripts())},proto.protocol.Transaction.raw.prototype.setScripts=function(e){n.Message.setProto3BytesField(this,12,e)},proto.protocol.Transaction.raw.prototype.getTimestamp=function(){return n.Message.getFieldWithDefault(this,14,0)},proto.protocol.Transaction.raw.prototype.setTimestamp=function(e){n.Message.setProto3IntField(this,14,e)},proto.protocol.Transaction.prototype.getRawData=function(){return n.Message.getWrapperField(this,proto.protocol.Transaction.raw,1)},proto.protocol.Transaction.prototype.setRawData=function(e){n.Message.setWrapperField(this,1,e)},proto.protocol.Transaction.prototype.clearRawData=function(){this.setRawData(void 0)},proto.protocol.Transaction.prototype.hasRawData=function(){return null!=n.Message.getField(this,1)},proto.protocol.Transaction.prototype.getSignatureList=function(){return n.Message.getRepeatedField(this,2)},proto.protocol.Transaction.prototype.getSignatureList_asB64=function(){return n.Message.bytesListAsB64(this.getSignatureList())},proto.protocol.Transaction.prototype.getSignatureList_asU8=function(){return n.Message.bytesListAsU8(this.getSignatureList())},proto.protocol.Transaction.prototype.setSignatureList=function(e){n.Message.setField(this,2,e||[])},proto.protocol.Transaction.prototype.addSignature=function(e,t){n.Message.addToRepeatedField(this,2,e,t)},proto.protocol.Transaction.prototype.clearSignatureList=function(){this.setSignatureList([])},proto.protocol.Transaction.prototype.getRetList=function(){return n.Message.getRepeatedWrapperField(this,proto.protocol.Transaction.Result,5)},proto.protocol.Transaction.prototype.setRetList=function(e){n.Message.setRepeatedWrapperField(this,5,e)},proto.protocol.Transaction.prototype.addRet=function(e,t){return n.Message.addToRepeatedWrapperField(this,5,e,proto.protocol.Transaction.Result,t)},proto.protocol.Transaction.prototype.clearRetList=function(){this.setRetList([])},proto.protocol.Transactions=function(e){n.Message.initialize(this,e,0,-1,proto.protocol.Transactions.repeatedFields_,null)},r.inherits(proto.protocol.Transactions,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.Transactions.displayName="proto.protocol.Transactions"),proto.protocol.Transactions.repeatedFields_=[1],n.Message.GENERATE_TO_OBJECT&&(proto.protocol.Transactions.prototype.toObject=function(e){return proto.protocol.Transactions.toObject(e,this)},proto.protocol.Transactions.toObject=function(e,t){var l={transactionsList:n.Message.toObjectList(t.getTransactionsList(),proto.protocol.Transaction.toObject,e)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.Transactions.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.Transactions;return proto.protocol.Transactions.deserializeBinaryFromReader(l,t)},proto.protocol.Transactions.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=new proto.protocol.Transaction;t.readMessage(l,proto.protocol.Transaction.deserializeBinaryFromReader),e.addTransactions(l);break;default:t.skipField()}}return e},proto.protocol.Transactions.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.Transactions.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.Transactions.serializeBinaryToWriter=function(e,t){var l;(l=e.getTransactionsList()).length>0&&t.writeRepeatedMessage(1,l,proto.protocol.Transaction.serializeBinaryToWriter)},proto.protocol.Transactions.prototype.getTransactionsList=function(){return n.Message.getRepeatedWrapperField(this,proto.protocol.Transaction,1)},proto.protocol.Transactions.prototype.setTransactionsList=function(e){n.Message.setRepeatedWrapperField(this,1,e)},proto.protocol.Transactions.prototype.addTransactions=function(e,t){return n.Message.addToRepeatedWrapperField(this,1,e,proto.protocol.Transaction,t)},proto.protocol.Transactions.prototype.clearTransactionsList=function(){this.setTransactionsList([])},proto.protocol.BlockHeader=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.BlockHeader,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.BlockHeader.displayName="proto.protocol.BlockHeader"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.BlockHeader.prototype.toObject=function(e){return proto.protocol.BlockHeader.toObject(e,this)},proto.protocol.BlockHeader.toObject=function(e,t){var l,n={rawData:(l=t.getRawData())&&proto.protocol.BlockHeader.raw.toObject(e,l),witnessSignature:t.getWitnessSignature_asB64()};return e&&(n.$jspbMessageInstance=t),n}),proto.protocol.BlockHeader.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.BlockHeader;return proto.protocol.BlockHeader.deserializeBinaryFromReader(l,t)},proto.protocol.BlockHeader.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=new proto.protocol.BlockHeader.raw;t.readMessage(l,proto.protocol.BlockHeader.raw.deserializeBinaryFromReader),e.setRawData(l);break;case 2:l=t.readBytes();e.setWitnessSignature(l);break;default:t.skipField()}}return e},proto.protocol.BlockHeader.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.BlockHeader.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.BlockHeader.serializeBinaryToWriter=function(e,t){var l=void 0;null!=(l=e.getRawData())&&t.writeMessage(1,l,proto.protocol.BlockHeader.raw.serializeBinaryToWriter),(l=e.getWitnessSignature_asU8()).length>0&&t.writeBytes(2,l)},proto.protocol.BlockHeader.raw=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.BlockHeader.raw,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.BlockHeader.raw.displayName="proto.protocol.BlockHeader.raw"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.BlockHeader.raw.prototype.toObject=function(e){return proto.protocol.BlockHeader.raw.toObject(e,this)},proto.protocol.BlockHeader.raw.toObject=function(e,t){var l={timestamp:n.Message.getFieldWithDefault(t,1,0),txtrieroot:t.getTxtrieroot_asB64(),parenthash:t.getParenthash_asB64(),number:n.Message.getFieldWithDefault(t,7,0),witnessId:n.Message.getFieldWithDefault(t,8,0),witnessAddress:t.getWitnessAddress_asB64()};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.BlockHeader.raw.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.BlockHeader.raw;return proto.protocol.BlockHeader.raw.deserializeBinaryFromReader(l,t)},proto.protocol.BlockHeader.raw.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readInt64();e.setTimestamp(l);break;case 2:l=t.readBytes();e.setTxtrieroot(l);break;case 3:l=t.readBytes();e.setParenthash(l);break;case 7:l=t.readInt64();e.setNumber(l);break;case 8:l=t.readInt64();e.setWitnessId(l);break;case 9:l=t.readBytes();e.setWitnessAddress(l);break;default:t.skipField()}}return e},proto.protocol.BlockHeader.raw.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.BlockHeader.raw.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.BlockHeader.raw.serializeBinaryToWriter=function(e,t){var l=void 0;0!==(l=e.getTimestamp())&&t.writeInt64(1,l),(l=e.getTxtrieroot_asU8()).length>0&&t.writeBytes(2,l),(l=e.getParenthash_asU8()).length>0&&t.writeBytes(3,l),0!==(l=e.getNumber())&&t.writeInt64(7,l),0!==(l=e.getWitnessId())&&t.writeInt64(8,l),(l=e.getWitnessAddress_asU8()).length>0&&t.writeBytes(9,l)},proto.protocol.BlockHeader.raw.prototype.getTimestamp=function(){return n.Message.getFieldWithDefault(this,1,0)},proto.protocol.BlockHeader.raw.prototype.setTimestamp=function(e){n.Message.setProto3IntField(this,1,e)},proto.protocol.BlockHeader.raw.prototype.getTxtrieroot=function(){return n.Message.getFieldWithDefault(this,2,"")},proto.protocol.BlockHeader.raw.prototype.getTxtrieroot_asB64=function(){return n.Message.bytesAsB64(this.getTxtrieroot())},proto.protocol.BlockHeader.raw.prototype.getTxtrieroot_asU8=function(){return n.Message.bytesAsU8(this.getTxtrieroot())},proto.protocol.BlockHeader.raw.prototype.setTxtrieroot=function(e){n.Message.setProto3BytesField(this,2,e)},proto.protocol.BlockHeader.raw.prototype.getParenthash=function(){return n.Message.getFieldWithDefault(this,3,"")},proto.protocol.BlockHeader.raw.prototype.getParenthash_asB64=function(){return n.Message.bytesAsB64(this.getParenthash())},proto.protocol.BlockHeader.raw.prototype.getParenthash_asU8=function(){return n.Message.bytesAsU8(this.getParenthash())},proto.protocol.BlockHeader.raw.prototype.setParenthash=function(e){n.Message.setProto3BytesField(this,3,e)},proto.protocol.BlockHeader.raw.prototype.getNumber=function(){return n.Message.getFieldWithDefault(this,7,0)},proto.protocol.BlockHeader.raw.prototype.setNumber=function(e){n.Message.setProto3IntField(this,7,e)},proto.protocol.BlockHeader.raw.prototype.getWitnessId=function(){return n.Message.getFieldWithDefault(this,8,0)},proto.protocol.BlockHeader.raw.prototype.setWitnessId=function(e){n.Message.setProto3IntField(this,8,e)},proto.protocol.BlockHeader.raw.prototype.getWitnessAddress=function(){return n.Message.getFieldWithDefault(this,9,"")},proto.protocol.BlockHeader.raw.prototype.getWitnessAddress_asB64=function(){return n.Message.bytesAsB64(this.getWitnessAddress())},proto.protocol.BlockHeader.raw.prototype.getWitnessAddress_asU8=function(){return n.Message.bytesAsU8(this.getWitnessAddress())},proto.protocol.BlockHeader.raw.prototype.setWitnessAddress=function(e){n.Message.setProto3BytesField(this,9,e)},proto.protocol.BlockHeader.prototype.getRawData=function(){return n.Message.getWrapperField(this,proto.protocol.BlockHeader.raw,1)},proto.protocol.BlockHeader.prototype.setRawData=function(e){n.Message.setWrapperField(this,1,e)},proto.protocol.BlockHeader.prototype.clearRawData=function(){this.setRawData(void 0)},proto.protocol.BlockHeader.prototype.hasRawData=function(){return null!=n.Message.getField(this,1)},proto.protocol.BlockHeader.prototype.getWitnessSignature=function(){return n.Message.getFieldWithDefault(this,2,"")},proto.protocol.BlockHeader.prototype.getWitnessSignature_asB64=function(){return n.Message.bytesAsB64(this.getWitnessSignature())},proto.protocol.BlockHeader.prototype.getWitnessSignature_asU8=function(){return n.Message.bytesAsU8(this.getWitnessSignature())},proto.protocol.BlockHeader.prototype.setWitnessSignature=function(e){n.Message.setProto3BytesField(this,2,e)},proto.protocol.Block=function(e){n.Message.initialize(this,e,0,-1,proto.protocol.Block.repeatedFields_,null)},r.inherits(proto.protocol.Block,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.Block.displayName="proto.protocol.Block"),proto.protocol.Block.repeatedFields_=[1],n.Message.GENERATE_TO_OBJECT&&(proto.protocol.Block.prototype.toObject=function(e){return proto.protocol.Block.toObject(e,this)},proto.protocol.Block.toObject=function(e,t){var l,r={transactionsList:n.Message.toObjectList(t.getTransactionsList(),proto.protocol.Transaction.toObject,e),blockHeader:(l=t.getBlockHeader())&&proto.protocol.BlockHeader.toObject(e,l)};return e&&(r.$jspbMessageInstance=t),r}),proto.protocol.Block.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.Block;return proto.protocol.Block.deserializeBinaryFromReader(l,t)},proto.protocol.Block.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=new proto.protocol.Transaction;t.readMessage(l,proto.protocol.Transaction.deserializeBinaryFromReader),e.addTransactions(l);break;case 2:l=new proto.protocol.BlockHeader;t.readMessage(l,proto.protocol.BlockHeader.deserializeBinaryFromReader),e.setBlockHeader(l);break;default:t.skipField()}}return e},proto.protocol.Block.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.Block.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.Block.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getTransactionsList()).length>0&&t.writeRepeatedMessage(1,l,proto.protocol.Transaction.serializeBinaryToWriter),null!=(l=e.getBlockHeader())&&t.writeMessage(2,l,proto.protocol.BlockHeader.serializeBinaryToWriter)},proto.protocol.Block.prototype.getTransactionsList=function(){return n.Message.getRepeatedWrapperField(this,proto.protocol.Transaction,1)},proto.protocol.Block.prototype.setTransactionsList=function(e){n.Message.setRepeatedWrapperField(this,1,e)},proto.protocol.Block.prototype.addTransactions=function(e,t){return n.Message.addToRepeatedWrapperField(this,1,e,proto.protocol.Transaction,t)},proto.protocol.Block.prototype.clearTransactionsList=function(){this.setTransactionsList([])},proto.protocol.Block.prototype.getBlockHeader=function(){return n.Message.getWrapperField(this,proto.protocol.BlockHeader,2)},proto.protocol.Block.prototype.setBlockHeader=function(e){n.Message.setWrapperField(this,2,e)},proto.protocol.Block.prototype.clearBlockHeader=function(){this.setBlockHeader(void 0)},proto.protocol.Block.prototype.hasBlockHeader=function(){return null!=n.Message.getField(this,2)},proto.protocol.ChainInventory=function(e){n.Message.initialize(this,e,0,-1,proto.protocol.ChainInventory.repeatedFields_,null)},r.inherits(proto.protocol.ChainInventory,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.ChainInventory.displayName="proto.protocol.ChainInventory"),proto.protocol.ChainInventory.repeatedFields_=[1],n.Message.GENERATE_TO_OBJECT&&(proto.protocol.ChainInventory.prototype.toObject=function(e){return proto.protocol.ChainInventory.toObject(e,this)},proto.protocol.ChainInventory.toObject=function(e,t){var l={idsList:n.Message.toObjectList(t.getIdsList(),proto.protocol.ChainInventory.BlockId.toObject,e),remainNum:n.Message.getFieldWithDefault(t,2,0)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.ChainInventory.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.ChainInventory;return proto.protocol.ChainInventory.deserializeBinaryFromReader(l,t)},proto.protocol.ChainInventory.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=new proto.protocol.ChainInventory.BlockId;t.readMessage(l,proto.protocol.ChainInventory.BlockId.deserializeBinaryFromReader),e.addIds(l);break;case 2:l=t.readInt64();e.setRemainNum(l);break;default:t.skipField()}}return e},proto.protocol.ChainInventory.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.ChainInventory.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.ChainInventory.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getIdsList()).length>0&&t.writeRepeatedMessage(1,l,proto.protocol.ChainInventory.BlockId.serializeBinaryToWriter),0!==(l=e.getRemainNum())&&t.writeInt64(2,l)},proto.protocol.ChainInventory.BlockId=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.ChainInventory.BlockId,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.ChainInventory.BlockId.displayName="proto.protocol.ChainInventory.BlockId"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.ChainInventory.BlockId.prototype.toObject=function(e){return proto.protocol.ChainInventory.BlockId.toObject(e,this)},proto.protocol.ChainInventory.BlockId.toObject=function(e,t){var l={hash:t.getHash_asB64(),number:n.Message.getFieldWithDefault(t,2,0)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.ChainInventory.BlockId.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.ChainInventory.BlockId;return proto.protocol.ChainInventory.BlockId.deserializeBinaryFromReader(l,t)},proto.protocol.ChainInventory.BlockId.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setHash(l);break;case 2:l=t.readInt64();e.setNumber(l);break;default:t.skipField()}}return e},proto.protocol.ChainInventory.BlockId.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.ChainInventory.BlockId.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.ChainInventory.BlockId.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getHash_asU8()).length>0&&t.writeBytes(1,l),0!==(l=e.getNumber())&&t.writeInt64(2,l)},proto.protocol.ChainInventory.BlockId.prototype.getHash=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.ChainInventory.BlockId.prototype.getHash_asB64=function(){return n.Message.bytesAsB64(this.getHash())},proto.protocol.ChainInventory.BlockId.prototype.getHash_asU8=function(){return n.Message.bytesAsU8(this.getHash())},proto.protocol.ChainInventory.BlockId.prototype.setHash=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.ChainInventory.BlockId.prototype.getNumber=function(){return n.Message.getFieldWithDefault(this,2,0)},proto.protocol.ChainInventory.BlockId.prototype.setNumber=function(e){n.Message.setProto3IntField(this,2,e)},proto.protocol.ChainInventory.prototype.getIdsList=function(){return n.Message.getRepeatedWrapperField(this,proto.protocol.ChainInventory.BlockId,1)},proto.protocol.ChainInventory.prototype.setIdsList=function(e){n.Message.setRepeatedWrapperField(this,1,e)},proto.protocol.ChainInventory.prototype.addIds=function(e,t){return n.Message.addToRepeatedWrapperField(this,1,e,proto.protocol.ChainInventory.BlockId,t)},proto.protocol.ChainInventory.prototype.clearIdsList=function(){this.setIdsList([])},proto.protocol.ChainInventory.prototype.getRemainNum=function(){return n.Message.getFieldWithDefault(this,2,0)},proto.protocol.ChainInventory.prototype.setRemainNum=function(e){n.Message.setProto3IntField(this,2,e)},proto.protocol.BlockInventory=function(e){n.Message.initialize(this,e,0,-1,proto.protocol.BlockInventory.repeatedFields_,null)},r.inherits(proto.protocol.BlockInventory,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.BlockInventory.displayName="proto.protocol.BlockInventory"),proto.protocol.BlockInventory.repeatedFields_=[1],n.Message.GENERATE_TO_OBJECT&&(proto.protocol.BlockInventory.prototype.toObject=function(e){return proto.protocol.BlockInventory.toObject(e,this)},proto.protocol.BlockInventory.toObject=function(e,t){var l={idsList:n.Message.toObjectList(t.getIdsList(),proto.protocol.BlockInventory.BlockId.toObject,e),type:n.Message.getFieldWithDefault(t,2,0)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.BlockInventory.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.BlockInventory;return proto.protocol.BlockInventory.deserializeBinaryFromReader(l,t)},proto.protocol.BlockInventory.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=new proto.protocol.BlockInventory.BlockId;t.readMessage(l,proto.protocol.BlockInventory.BlockId.deserializeBinaryFromReader),e.addIds(l);break;case 2:l=t.readEnum();e.setType(l);break;default:t.skipField()}}return e},proto.protocol.BlockInventory.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.BlockInventory.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.BlockInventory.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getIdsList()).length>0&&t.writeRepeatedMessage(1,l,proto.protocol.BlockInventory.BlockId.serializeBinaryToWriter),0!==(l=e.getType())&&t.writeEnum(2,l)},proto.protocol.BlockInventory.Type={SYNC:0,ADVTISE:1,FETCH:2},proto.protocol.BlockInventory.BlockId=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.BlockInventory.BlockId,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.BlockInventory.BlockId.displayName="proto.protocol.BlockInventory.BlockId"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.BlockInventory.BlockId.prototype.toObject=function(e){return proto.protocol.BlockInventory.BlockId.toObject(e,this)},proto.protocol.BlockInventory.BlockId.toObject=function(e,t){var l={hash:t.getHash_asB64(),number:n.Message.getFieldWithDefault(t,2,0)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.BlockInventory.BlockId.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.BlockInventory.BlockId;return proto.protocol.BlockInventory.BlockId.deserializeBinaryFromReader(l,t)},proto.protocol.BlockInventory.BlockId.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setHash(l);break;case 2:l=t.readInt64();e.setNumber(l);break;default:t.skipField()}}return e},proto.protocol.BlockInventory.BlockId.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.BlockInventory.BlockId.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.BlockInventory.BlockId.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getHash_asU8()).length>0&&t.writeBytes(1,l),0!==(l=e.getNumber())&&t.writeInt64(2,l)},proto.protocol.BlockInventory.BlockId.prototype.getHash=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.BlockInventory.BlockId.prototype.getHash_asB64=function(){return n.Message.bytesAsB64(this.getHash())},proto.protocol.BlockInventory.BlockId.prototype.getHash_asU8=function(){return n.Message.bytesAsU8(this.getHash())},proto.protocol.BlockInventory.BlockId.prototype.setHash=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.BlockInventory.BlockId.prototype.getNumber=function(){return n.Message.getFieldWithDefault(this,2,0)},proto.protocol.BlockInventory.BlockId.prototype.setNumber=function(e){n.Message.setProto3IntField(this,2,e)},proto.protocol.BlockInventory.prototype.getIdsList=function(){return n.Message.getRepeatedWrapperField(this,proto.protocol.BlockInventory.BlockId,1)},proto.protocol.BlockInventory.prototype.setIdsList=function(e){n.Message.setRepeatedWrapperField(this,1,e)},proto.protocol.BlockInventory.prototype.addIds=function(e,t){return n.Message.addToRepeatedWrapperField(this,1,e,proto.protocol.BlockInventory.BlockId,t)},proto.protocol.BlockInventory.prototype.clearIdsList=function(){this.setIdsList([])},proto.protocol.BlockInventory.prototype.getType=function(){return n.Message.getFieldWithDefault(this,2,0)},proto.protocol.BlockInventory.prototype.setType=function(e){n.Message.setProto3EnumField(this,2,e)},proto.protocol.Inventory=function(e){n.Message.initialize(this,e,0,-1,proto.protocol.Inventory.repeatedFields_,null)},r.inherits(proto.protocol.Inventory,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.Inventory.displayName="proto.protocol.Inventory"),proto.protocol.Inventory.repeatedFields_=[2],n.Message.GENERATE_TO_OBJECT&&(proto.protocol.Inventory.prototype.toObject=function(e){return proto.protocol.Inventory.toObject(e,this)},proto.protocol.Inventory.toObject=function(e,t){var l={type:n.Message.getFieldWithDefault(t,1,0),idsList:t.getIdsList_asB64()};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.Inventory.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.Inventory;return proto.protocol.Inventory.deserializeBinaryFromReader(l,t)},proto.protocol.Inventory.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readEnum();e.setType(l);break;case 2:l=t.readBytes();e.addIds(l);break;default:t.skipField()}}return e},proto.protocol.Inventory.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.Inventory.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.Inventory.serializeBinaryToWriter=function(e,t){var l=void 0;0!==(l=e.getType())&&t.writeEnum(1,l),(l=e.getIdsList_asU8()).length>0&&t.writeRepeatedBytes(2,l)},proto.protocol.Inventory.InventoryType={TRX:0,BLOCK:1},proto.protocol.Inventory.prototype.getType=function(){return n.Message.getFieldWithDefault(this,1,0)},proto.protocol.Inventory.prototype.setType=function(e){n.Message.setProto3EnumField(this,1,e)},proto.protocol.Inventory.prototype.getIdsList=function(){return n.Message.getRepeatedField(this,2)},proto.protocol.Inventory.prototype.getIdsList_asB64=function(){return n.Message.bytesListAsB64(this.getIdsList())},proto.protocol.Inventory.prototype.getIdsList_asU8=function(){return n.Message.bytesListAsU8(this.getIdsList())},proto.protocol.Inventory.prototype.setIdsList=function(e){n.Message.setField(this,2,e||[])},proto.protocol.Inventory.prototype.addIds=function(e,t){n.Message.addToRepeatedField(this,2,e,t)},proto.protocol.Inventory.prototype.clearIdsList=function(){this.setIdsList([])},proto.protocol.Items=function(e){n.Message.initialize(this,e,0,-1,proto.protocol.Items.repeatedFields_,null)},r.inherits(proto.protocol.Items,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.Items.displayName="proto.protocol.Items"),proto.protocol.Items.repeatedFields_=[2,3,4],n.Message.GENERATE_TO_OBJECT&&(proto.protocol.Items.prototype.toObject=function(e){return proto.protocol.Items.toObject(e,this)},proto.protocol.Items.toObject=function(e,t){var l={type:n.Message.getFieldWithDefault(t,1,0),blocksList:n.Message.toObjectList(t.getBlocksList(),proto.protocol.Block.toObject,e),blockHeadersList:n.Message.toObjectList(t.getBlockHeadersList(),proto.protocol.BlockHeader.toObject,e),transactionsList:n.Message.toObjectList(t.getTransactionsList(),proto.protocol.Transaction.toObject,e)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.Items.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.Items;return proto.protocol.Items.deserializeBinaryFromReader(l,t)},proto.protocol.Items.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readEnum();e.setType(l);break;case 2:l=new proto.protocol.Block;t.readMessage(l,proto.protocol.Block.deserializeBinaryFromReader),e.addBlocks(l);break;case 3:l=new proto.protocol.BlockHeader;t.readMessage(l,proto.protocol.BlockHeader.deserializeBinaryFromReader),e.addBlockHeaders(l);break;case 4:l=new proto.protocol.Transaction;t.readMessage(l,proto.protocol.Transaction.deserializeBinaryFromReader),e.addTransactions(l);break;default:t.skipField()}}return e},proto.protocol.Items.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.Items.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.Items.serializeBinaryToWriter=function(e,t){var l=void 0;0!==(l=e.getType())&&t.writeEnum(1,l),(l=e.getBlocksList()).length>0&&t.writeRepeatedMessage(2,l,proto.protocol.Block.serializeBinaryToWriter),(l=e.getBlockHeadersList()).length>0&&t.writeRepeatedMessage(3,l,proto.protocol.BlockHeader.serializeBinaryToWriter),(l=e.getTransactionsList()).length>0&&t.writeRepeatedMessage(4,l,proto.protocol.Transaction.serializeBinaryToWriter)},proto.protocol.Items.ItemType={ERR:0,TRX:1,BLOCK:2,BLOCKHEADER:3},proto.protocol.Items.prototype.getType=function(){return n.Message.getFieldWithDefault(this,1,0)},proto.protocol.Items.prototype.setType=function(e){n.Message.setProto3EnumField(this,1,e)},proto.protocol.Items.prototype.getBlocksList=function(){return n.Message.getRepeatedWrapperField(this,proto.protocol.Block,2)},proto.protocol.Items.prototype.setBlocksList=function(e){n.Message.setRepeatedWrapperField(this,2,e)},proto.protocol.Items.prototype.addBlocks=function(e,t){return n.Message.addToRepeatedWrapperField(this,2,e,proto.protocol.Block,t)},proto.protocol.Items.prototype.clearBlocksList=function(){this.setBlocksList([])},proto.protocol.Items.prototype.getBlockHeadersList=function(){return n.Message.getRepeatedWrapperField(this,proto.protocol.BlockHeader,3)},proto.protocol.Items.prototype.setBlockHeadersList=function(e){n.Message.setRepeatedWrapperField(this,3,e)},proto.protocol.Items.prototype.addBlockHeaders=function(e,t){return n.Message.addToRepeatedWrapperField(this,3,e,proto.protocol.BlockHeader,t)},proto.protocol.Items.prototype.clearBlockHeadersList=function(){this.setBlockHeadersList([])},proto.protocol.Items.prototype.getTransactionsList=function(){return n.Message.getRepeatedWrapperField(this,proto.protocol.Transaction,4)},proto.protocol.Items.prototype.setTransactionsList=function(e){n.Message.setRepeatedWrapperField(this,4,e)},proto.protocol.Items.prototype.addTransactions=function(e,t){return n.Message.addToRepeatedWrapperField(this,4,e,proto.protocol.Transaction,t)},proto.protocol.Items.prototype.clearTransactionsList=function(){this.setTransactionsList([])},proto.protocol.DynamicProperties=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.DynamicProperties,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.DynamicProperties.displayName="proto.protocol.DynamicProperties"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.DynamicProperties.prototype.toObject=function(e){return proto.protocol.DynamicProperties.toObject(e,this)},proto.protocol.DynamicProperties.toObject=function(e,t){var l={lastSolidityBlockNum:n.Message.getFieldWithDefault(t,1,0)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.DynamicProperties.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.DynamicProperties;return proto.protocol.DynamicProperties.deserializeBinaryFromReader(l,t)},proto.protocol.DynamicProperties.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readInt64();e.setLastSolidityBlockNum(l);break;default:t.skipField()}}return e},proto.protocol.DynamicProperties.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.DynamicProperties.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.DynamicProperties.serializeBinaryToWriter=function(e,t){var l;0!==(l=e.getLastSolidityBlockNum())&&t.writeInt64(1,l)},proto.protocol.DynamicProperties.prototype.getLastSolidityBlockNum=function(){return n.Message.getFieldWithDefault(this,1,0)},proto.protocol.DynamicProperties.prototype.setLastSolidityBlockNum=function(e){n.Message.setProto3IntField(this,1,e)},proto.protocol.DisconnectMessage=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.DisconnectMessage,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.DisconnectMessage.displayName="proto.protocol.DisconnectMessage"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.DisconnectMessage.prototype.toObject=function(e){return proto.protocol.DisconnectMessage.toObject(e,this)},proto.protocol.DisconnectMessage.toObject=function(e,t){var l={reason:n.Message.getFieldWithDefault(t,1,0)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.DisconnectMessage.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.DisconnectMessage;return proto.protocol.DisconnectMessage.deserializeBinaryFromReader(l,t)},proto.protocol.DisconnectMessage.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readEnum();e.setReason(l);break;default:t.skipField()}}return e},proto.protocol.DisconnectMessage.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.DisconnectMessage.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.DisconnectMessage.serializeBinaryToWriter=function(e,t){var l;0!==(l=e.getReason())&&t.writeEnum(1,l)},proto.protocol.DisconnectMessage.prototype.getReason=function(){return n.Message.getFieldWithDefault(this,1,0)},proto.protocol.DisconnectMessage.prototype.setReason=function(e){n.Message.setProto3EnumField(this,1,e)},proto.protocol.HelloMessage=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.HelloMessage,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.HelloMessage.displayName="proto.protocol.HelloMessage"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.HelloMessage.prototype.toObject=function(e){return proto.protocol.HelloMessage.toObject(e,this)},proto.protocol.HelloMessage.toObject=function(e,t){var l,r={from:(l=t.getFrom())&&i.Endpoint.toObject(e,l),version:n.Message.getFieldWithDefault(t,2,0),timestamp:n.Message.getFieldWithDefault(t,3,0),genesisblockid:(l=t.getGenesisblockid())&&proto.protocol.HelloMessage.BlockId.toObject(e,l),solidblockid:(l=t.getSolidblockid())&&proto.protocol.HelloMessage.BlockId.toObject(e,l),headblockid:(l=t.getHeadblockid())&&proto.protocol.HelloMessage.BlockId.toObject(e,l)};return e&&(r.$jspbMessageInstance=t),r}),proto.protocol.HelloMessage.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.HelloMessage;return proto.protocol.HelloMessage.deserializeBinaryFromReader(l,t)},proto.protocol.HelloMessage.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=new i.Endpoint;t.readMessage(l,i.Endpoint.deserializeBinaryFromReader),e.setFrom(l);break;case 2:l=t.readInt32();e.setVersion(l);break;case 3:l=t.readInt64();e.setTimestamp(l);break;case 4:l=new proto.protocol.HelloMessage.BlockId;t.readMessage(l,proto.protocol.HelloMessage.BlockId.deserializeBinaryFromReader),e.setGenesisblockid(l);break;case 5:l=new proto.protocol.HelloMessage.BlockId;t.readMessage(l,proto.protocol.HelloMessage.BlockId.deserializeBinaryFromReader),e.setSolidblockid(l);break;case 6:l=new proto.protocol.HelloMessage.BlockId;t.readMessage(l,proto.protocol.HelloMessage.BlockId.deserializeBinaryFromReader),e.setHeadblockid(l);break;default:t.skipField()}}return e},proto.protocol.HelloMessage.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.HelloMessage.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.HelloMessage.serializeBinaryToWriter=function(e,t){var l=void 0;null!=(l=e.getFrom())&&t.writeMessage(1,l,i.Endpoint.serializeBinaryToWriter),0!==(l=e.getVersion())&&t.writeInt32(2,l),0!==(l=e.getTimestamp())&&t.writeInt64(3,l),null!=(l=e.getGenesisblockid())&&t.writeMessage(4,l,proto.protocol.HelloMessage.BlockId.serializeBinaryToWriter),null!=(l=e.getSolidblockid())&&t.writeMessage(5,l,proto.protocol.HelloMessage.BlockId.serializeBinaryToWriter),null!=(l=e.getHeadblockid())&&t.writeMessage(6,l,proto.protocol.HelloMessage.BlockId.serializeBinaryToWriter)},proto.protocol.HelloMessage.BlockId=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.HelloMessage.BlockId,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.HelloMessage.BlockId.displayName="proto.protocol.HelloMessage.BlockId"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.HelloMessage.BlockId.prototype.toObject=function(e){return proto.protocol.HelloMessage.BlockId.toObject(e,this)},proto.protocol.HelloMessage.BlockId.toObject=function(e,t){var l={hash:t.getHash_asB64(),number:n.Message.getFieldWithDefault(t,2,0)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.HelloMessage.BlockId.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.HelloMessage.BlockId;return proto.protocol.HelloMessage.BlockId.deserializeBinaryFromReader(l,t)},proto.protocol.HelloMessage.BlockId.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setHash(l);break;case 2:l=t.readInt64();e.setNumber(l);break;default:t.skipField()}}return e},proto.protocol.HelloMessage.BlockId.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.HelloMessage.BlockId.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.HelloMessage.BlockId.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getHash_asU8()).length>0&&t.writeBytes(1,l),0!==(l=e.getNumber())&&t.writeInt64(2,l)},proto.protocol.HelloMessage.BlockId.prototype.getHash=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.HelloMessage.BlockId.prototype.getHash_asB64=function(){return n.Message.bytesAsB64(this.getHash())},proto.protocol.HelloMessage.BlockId.prototype.getHash_asU8=function(){return n.Message.bytesAsU8(this.getHash())},proto.protocol.HelloMessage.BlockId.prototype.setHash=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.HelloMessage.BlockId.prototype.getNumber=function(){return n.Message.getFieldWithDefault(this,2,0)},proto.protocol.HelloMessage.BlockId.prototype.setNumber=function(e){n.Message.setProto3IntField(this,2,e)},proto.protocol.HelloMessage.prototype.getFrom=function(){return n.Message.getWrapperField(this,i.Endpoint,1)},proto.protocol.HelloMessage.prototype.setFrom=function(e){n.Message.setWrapperField(this,1,e)},proto.protocol.HelloMessage.prototype.clearFrom=function(){this.setFrom(void 0)},proto.protocol.HelloMessage.prototype.hasFrom=function(){return null!=n.Message.getField(this,1)},proto.protocol.HelloMessage.prototype.getVersion=function(){return n.Message.getFieldWithDefault(this,2,0)},proto.protocol.HelloMessage.prototype.setVersion=function(e){n.Message.setProto3IntField(this,2,e)},proto.protocol.HelloMessage.prototype.getTimestamp=function(){return n.Message.getFieldWithDefault(this,3,0)},proto.protocol.HelloMessage.prototype.setTimestamp=function(e){n.Message.setProto3IntField(this,3,e)},proto.protocol.HelloMessage.prototype.getGenesisblockid=function(){return n.Message.getWrapperField(this,proto.protocol.HelloMessage.BlockId,4)},proto.protocol.HelloMessage.prototype.setGenesisblockid=function(e){n.Message.setWrapperField(this,4,e)},proto.protocol.HelloMessage.prototype.clearGenesisblockid=function(){this.setGenesisblockid(void 0)},proto.protocol.HelloMessage.prototype.hasGenesisblockid=function(){return null!=n.Message.getField(this,4)},proto.protocol.HelloMessage.prototype.getSolidblockid=function(){return n.Message.getWrapperField(this,proto.protocol.HelloMessage.BlockId,5)},proto.protocol.HelloMessage.prototype.setSolidblockid=function(e){n.Message.setWrapperField(this,5,e)},proto.protocol.HelloMessage.prototype.clearSolidblockid=function(){this.setSolidblockid(void 0)},proto.protocol.HelloMessage.prototype.hasSolidblockid=function(){return null!=n.Message.getField(this,5)},proto.protocol.HelloMessage.prototype.getHeadblockid=function(){return n.Message.getWrapperField(this,proto.protocol.HelloMessage.BlockId,6)},proto.protocol.HelloMessage.prototype.setHeadblockid=function(e){n.Message.setWrapperField(this,6,e)},proto.protocol.HelloMessage.prototype.clearHeadblockid=function(){this.setHeadblockid(void 0)},proto.protocol.HelloMessage.prototype.hasHeadblockid=function(){return null!=n.Message.getField(this,6)},proto.protocol.AccountType={NORMAL:0,ASSETISSUE:1,CONTRACT:2},proto.protocol.ReasonCode={REQUESTED:0,BAD_PROTOCOL:2,TOO_MANY_PEERS:4,DUPLICATE_PEER:5,INCOMPATIBLE_PROTOCOL:6,NULL_IDENTITY:7,PEER_QUITING:8,UNEXPECTED_IDENTITY:9,LOCAL_IDENTITY:10,PING_TIMEOUT:11,USER_REASON:16,RESET:17,SYNC_FAIL:18,FETCH_FAIL:19,BAD_TX:20,BAD_BLOCK:21,FORKED:22,UNLINKABLE:23,INCOMPATIBLE_VERSION:24,INCOMPATIBLE_CHAIN:25,TIME_OUT:32,CONNECT_FAIL:33,UNKNOWN:255},r.object.extend(t,proto.protocol)},function(e,t,l){(function(t){var n=l(19),r=n.hexStr2byteArray,o=n.base64EncodeToString,u=n.base64DecodeFromString,i=l(50),s=l(120).TextDecoder,a=l(117);e.exports={hexStr2byteArray:r,base64EncodeToString:o,base64DecodeFromString:u,base64StringToString:function(e){return t.from(result.message,"base64").toString()},base58AddressToUint8Array:function(e){var t=i.decode58(e);return t.splice(-4,4),new Uint8Array(t)},stringToUint8Array:function(e){return Uint8Array.from(u(a(e)))},uint8ToBase64:function(e){var t=new s("utf8");return a(t.decode(e))}}}).call(this,l(6).Buffer)},function(e,t,l){(function(e){function l(e){return(l="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function n(e){return Object.prototype.toString.call(e)}t.isArray=function(e){return Array.isArray?Array.isArray(e):"[object Array]"===n(e)},t.isBoolean=function(e){return"boolean"===typeof e},t.isNull=function(e){return null===e},t.isNullOrUndefined=function(e){return null==e},t.isNumber=function(e){return"number"===typeof e},t.isString=function(e){return"string"===typeof e},t.isSymbol=function(e){return"symbol"===l(e)},t.isUndefined=function(e){return void 0===e},t.isRegExp=function(e){return"[object RegExp]"===n(e)},t.isObject=function(e){return"object"===l(e)&&null!==e},t.isDate=function(e){return"[object Date]"===n(e)},t.isError=function(e){return"[object Error]"===n(e)||e instanceof Error},t.isFunction=function(e){return"function"===typeof e},t.isPrimitive=function(e){return null===e||"boolean"===typeof e||"number"===typeof e||"string"===typeof e||"symbol"===l(e)||"undefined"===typeof e},t.isBuffer=e.isBuffer}).call(this,l(6).Buffer)},function(module,exports,__webpack_require__){(function(global,Buffer){function _typeof(e){return(_typeof="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var $jscomp={scope:{},getGlobal:function(e){return"undefined"!=typeof window&&window===e?e:"undefined"!=typeof global?global:e}};$jscomp.global=$jscomp.getGlobal(this),$jscomp.initSymbol=function(){$jscomp.global.Symbol||($jscomp.global.Symbol=$jscomp.Symbol),$jscomp.initSymbol=function(){}},$jscomp.symbolCounter_=0,$jscomp.Symbol=function(e){return"jscomp_symbol_"+e+$jscomp.symbolCounter_++},$jscomp.initSymbolIterator=function(){$jscomp.initSymbol(),$jscomp.global.Symbol.iterator||($jscomp.global.Symbol.iterator=$jscomp.global.Symbol("iterator")),$jscomp.initSymbolIterator=function(){}},$jscomp.makeIterator=function(e){$jscomp.initSymbolIterator(),$jscomp.initSymbol(),$jscomp.initSymbolIterator();var t=e[Symbol.iterator];if(t)return t.call(e);var l=0;return{next:function(){return l<e.length?{done:!1,value:e[l++]}:{done:!0}}}},$jscomp.arrayFromIterator=function(e){for(var t,l=[];!(t=e.next()).done;)l.push(t.value);return l},$jscomp.arrayFromIterable=function(e){return e instanceof Array?e:$jscomp.arrayFromIterator($jscomp.makeIterator(e))},$jscomp.inherits=function(e,t){function l(){}for(var n in l.prototype=t.prototype,e.prototype=new l,e.prototype.constructor=e,t)if(Object.defineProperties){var r=Object.getOwnPropertyDescriptor(t,n);r&&Object.defineProperty(e,n,r)}else e[n]=t[n]},$jscomp.array=$jscomp.array||{},$jscomp.iteratorFromArray=function(e,t){$jscomp.initSymbolIterator(),e instanceof String&&(e+="");var l=0,n={next:function(){if(l<e.length){var r=l++;return{value:t(r,e[r]),done:!1}}return n.next=function(){return{done:!0,value:void 0}},n.next()}};return $jscomp.initSymbol(),$jscomp.initSymbolIterator(),n[Symbol.iterator]=function(){return n},n},$jscomp.findInternal=function(e,t,l){e instanceof String&&(e=String(e));for(var n=e.length,r=0;r<n;r++){var o=e[r];if(t.call(l,o,r,e))return{i:r,v:o}}return{i:-1,v:void 0}},$jscomp.array.from=function(e,t,l){$jscomp.initSymbolIterator(),t=null!=t?t:function(e){return e};var n=[];if($jscomp.initSymbol(),$jscomp.initSymbolIterator(),"function"==typeof(r=e[Symbol.iterator])&&(e=r.call(e)),"function"==typeof e.next)for(;!(r=e.next()).done;)n.push(t.call(l,r.value));else for(var r=e.length,o=0;o<r;o++)n.push(t.call(l,e[o]));return n},$jscomp.array.of=function(e){return $jscomp.array.from(arguments)},$jscomp.array.entries=function(){return $jscomp.iteratorFromArray(this,function(e,t){return[e,t]})},$jscomp.array.installHelper_=function(e,t){!Array.prototype[e]&&Object.defineProperties&&Object.defineProperty&&Object.defineProperty(Array.prototype,e,{configurable:!0,enumerable:!1,writable:!0,value:t})},$jscomp.array.entries$install=function(){$jscomp.array.installHelper_("entries",$jscomp.array.entries)},$jscomp.array.keys=function(){return $jscomp.iteratorFromArray(this,function(e){return e})},$jscomp.array.keys$install=function(){$jscomp.array.installHelper_("keys",$jscomp.array.keys)},$jscomp.array.values=function(){return $jscomp.iteratorFromArray(this,function(e,t){return t})},$jscomp.array.values$install=function(){$jscomp.array.installHelper_("values",$jscomp.array.values)},$jscomp.array.copyWithin=function(e,t,l){var n=this.length;if(e=Number(e),t=Number(t),l=Number(null!=l?l:n),e<t)for(l=Math.min(l,n);t<l;)t in this?this[e++]=this[t++]:(delete this[e++],t++);else for(e+=(l=Math.min(l,n+t-e))-t;l>t;)--l in this?this[--e]=this[l]:delete this[e];return this},$jscomp.array.copyWithin$install=function(){$jscomp.array.installHelper_("copyWithin",$jscomp.array.copyWithin)},$jscomp.array.fill=function(e,t,l){var n=this.length||0;for(0>t&&(t=Math.max(0,n+t)),(null==l||l>n)&&(l=n),0>(l=Number(l))&&(l=Math.max(0,n+l)),t=Number(t||0);t<l;t++)this[t]=e;return this},$jscomp.array.fill$install=function(){$jscomp.array.installHelper_("fill",$jscomp.array.fill)},$jscomp.array.find=function(e,t){return $jscomp.findInternal(this,e,t).v},$jscomp.array.find$install=function(){$jscomp.array.installHelper_("find",$jscomp.array.find)},$jscomp.array.findIndex=function(e,t){return $jscomp.findInternal(this,e,t).i},$jscomp.array.findIndex$install=function(){$jscomp.array.installHelper_("findIndex",$jscomp.array.findIndex)},$jscomp.ASSUME_NO_NATIVE_MAP=!1,$jscomp.Map$isConformant=function(){if($jscomp.ASSUME_NO_NATIVE_MAP)return!1;var e=$jscomp.global.Map;if(!e||!e.prototype.entries||"function"!=typeof Object.seal)return!1;try{var t=Object.seal({x:4}),l=new e($jscomp.makeIterator([[t,"s"]]));if("s"!=l.get(t)||1!=l.size||l.get({x:4})||l.set({x:4},"t")!=l||2!=l.size)return!1;var n=l.entries(),r=n.next();return!r.done&&r.value[0]==t&&"s"==r.value[1]&&!((r=n.next()).done||4!=r.value[0].x||"t"!=r.value[1]||!n.next().done)}catch(e){return!1}},$jscomp.Map=function(e){if(this.data_={},this.head_=$jscomp.Map.createHead(),this.size=0,e){e=$jscomp.makeIterator(e);for(var t;!(t=e.next()).done;)t=t.value,this.set(t[0],t[1])}},$jscomp.Map.prototype.set=function(e,t){var l=$jscomp.Map.maybeGetEntry(this,e);return l.list||(l.list=this.data_[l.id]=[]),l.entry?l.entry.value=t:(l.entry={next:this.head_,previous:this.head_.previous,head:this.head_,key:e,value:t},l.list.push(l.entry),this.head_.previous.next=l.entry,this.head_.previous=l.entry,this.size++),this},$jscomp.Map.prototype.delete=function(e){return!(!(e=$jscomp.Map.maybeGetEntry(this,e)).entry||!e.list)&&(e.list.splice(e.index,1),e.list.length||delete this.data_[e.id],e.entry.previous.next=e.entry.next,e.entry.next.previous=e.entry.previous,e.entry.head=null,this.size--,!0)},$jscomp.Map.prototype.clear=function(){this.data_={},this.head_=this.head_.previous=$jscomp.Map.createHead(),this.size=0},$jscomp.Map.prototype.has=function(e){return!!$jscomp.Map.maybeGetEntry(this,e).entry},$jscomp.Map.prototype.get=function(e){return(e=$jscomp.Map.maybeGetEntry(this,e).entry)&&e.value},$jscomp.Map.prototype.entries=function(){return $jscomp.Map.makeIterator_(this,function(e){return[e.key,e.value]})},$jscomp.Map.prototype.keys=function(){return $jscomp.Map.makeIterator_(this,function(e){return e.key})},$jscomp.Map.prototype.values=function(){return $jscomp.Map.makeIterator_(this,function(e){return e.value})},$jscomp.Map.prototype.forEach=function(e,t){for(var l,n=this.entries();!(l=n.next()).done;)l=l.value,e.call(t,l[1],l[0],this)},$jscomp.Map.maybeGetEntry=function(e,t){var l=$jscomp.Map.getId(t),n=e.data_[l];if(n&&Object.prototype.hasOwnProperty.call(e.data_,l))for(var r=0;r<n.length;r++){var o=n[r];if(t!==t&&o.key!==o.key||t===o.key)return{id:l,list:n,index:r,entry:o}}return{id:l,list:n,index:-1,entry:void 0}},$jscomp.Map.makeIterator_=function(e,t){var l=e.head_,n={next:function(){if(l){for(;l.head!=e.head_;)l=l.previous;for(;l.next!=l.head;)return l=l.next,{done:!1,value:t(l)};l=null}return{done:!0,value:void 0}}};return $jscomp.initSymbol(),$jscomp.initSymbolIterator(),n[Symbol.iterator]=function(){return n},n},$jscomp.Map.mapIndex_=0,$jscomp.Map.createHead=function(){var e={};return e.previous=e.next=e.head=e},$jscomp.Map.getId=function(e){if(!(e instanceof Object))return"p_"+e;if(!($jscomp.Map.idKey in e))try{$jscomp.Map.defineProperty(e,$jscomp.Map.idKey,{value:++$jscomp.Map.mapIndex_})}catch(e){}return $jscomp.Map.idKey in e?e[$jscomp.Map.idKey]:"o_ "+e},$jscomp.Map.defineProperty=Object.defineProperty?function(e,t,l){Object.defineProperty(e,t,{value:String(l)})}:function(e,t,l){e[t]=String(l)},$jscomp.Map.Entry=function(){},$jscomp.Map$install=function(){$jscomp.initSymbol(),$jscomp.initSymbolIterator(),$jscomp.Map$isConformant()?$jscomp.Map=$jscomp.global.Map:($jscomp.initSymbol(),$jscomp.initSymbolIterator(),$jscomp.Map.prototype[Symbol.iterator]=$jscomp.Map.prototype.entries,$jscomp.initSymbol(),$jscomp.Map.idKey=Symbol("map-id-key"),$jscomp.Map$install=function(){})},$jscomp.math=$jscomp.math||{},$jscomp.math.clz32=function(e){if(0===(e=Number(e)>>>0))return 32;var t=0;return 0===(4294901760&e)&&(e<<=16,t+=16),0===(4278190080&e)&&(e<<=8,t+=8),0===(4026531840&e)&&(e<<=4,t+=4),0===(3221225472&e)&&(e<<=2,t+=2),0===(2147483648&e)&&t++,t},$jscomp.math.imul=function(e,t){var l=65535&(e=Number(e)),n=65535&(t=Number(t));return l*n+((e>>>16&65535)*n+l*(t>>>16&65535)<<16>>>0)|0},$jscomp.math.sign=function(e){return 0===(e=Number(e))||isNaN(e)?e:0<e?1:-1},$jscomp.math.log10=function(e){return Math.log(e)/Math.LN10},$jscomp.math.log2=function(e){return Math.log(e)/Math.LN2},$jscomp.math.log1p=function(e){if(.25>(e=Number(e))&&-.25<e){for(var t=e,l=1,n=e,r=0,o=1;r!=n;)n=(r=n)+(o*=-1)*(t*=e)/++l;return n}return Math.log(1+e)},$jscomp.math.expm1=function(e){if(.25>(e=Number(e))&&-.25<e){for(var t=e,l=1,n=e,r=0;r!=n;)n=(r=n)+(t*=e/++l);return n}return Math.exp(e)-1},$jscomp.math.cosh=function(e){return e=Number(e),(Math.exp(e)+Math.exp(-e))/2},$jscomp.math.sinh=function(e){return 0===(e=Number(e))?e:(Math.exp(e)-Math.exp(-e))/2},$jscomp.math.tanh=function(e){if(0===(e=Number(e)))return e;var t=(1-(t=Math.exp(-2*Math.abs(e))))/(1+t);return 0>e?-t:t},$jscomp.math.acosh=function(e){return e=Number(e),Math.log(e+Math.sqrt(e*e-1))},$jscomp.math.asinh=function(e){if(0===(e=Number(e)))return e;var t=Math.log(Math.abs(e)+Math.sqrt(e*e+1));return 0>e?-t:t},$jscomp.math.atanh=function(e){return e=Number(e),($jscomp.math.log1p(e)-$jscomp.math.log1p(-e))/2},$jscomp.math.hypot=function(e,t,l){e=Number(e),t=Number(t);var n,r,o,u=Math.max(Math.abs(e),Math.abs(t));for(n=2;n<arguments.length;n++)u=Math.max(u,Math.abs(arguments[n]));if(1e100<u||1e-100>u){for(o=(e/=u)*e+(t/=u)*t,n=2;n<arguments.length;n++)o+=(r=Number(arguments[n])/u)*r;return Math.sqrt(o)*u}for(o=e*e+t*t,n=2;n<arguments.length;n++)o+=(r=Number(arguments[n]))*r;return Math.sqrt(o)},$jscomp.math.trunc=function(e){if(e=Number(e),isNaN(e)||1/0===e||-1/0===e||0===e)return e;var t=Math.floor(Math.abs(e));return 0>e?-t:t},$jscomp.math.cbrt=function(e){if(0===e)return e;e=Number(e);var t=Math.pow(Math.abs(e),1/3);return 0>e?-t:t},$jscomp.number=$jscomp.number||{},$jscomp.number.isFinite=function(e){return"number"===typeof e&&(!isNaN(e)&&1/0!==e&&-1/0!==e)},$jscomp.number.isInteger=function(e){return!!$jscomp.number.isFinite(e)&&e===Math.floor(e)},$jscomp.number.isNaN=function(e){return"number"===typeof e&&isNaN(e)},$jscomp.number.isSafeInteger=function(e){return $jscomp.number.isInteger(e)&&Math.abs(e)<=$jscomp.number.MAX_SAFE_INTEGER},$jscomp.number.EPSILON=Math.pow(2,-52),$jscomp.number.MAX_SAFE_INTEGER=9007199254740991,$jscomp.number.MIN_SAFE_INTEGER=-9007199254740991,$jscomp.object=$jscomp.object||{},$jscomp.object.assign=function(e,t){for(var l=1;l<arguments.length;l++){var n=arguments[l];if(n)for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},$jscomp.object.is=function(e,t){return e===t?0!==e||1/e===1/t:e!==e&&t!==t},$jscomp.ASSUME_NO_NATIVE_SET=!1,$jscomp.Set$isConformant=function(){if($jscomp.ASSUME_NO_NATIVE_SET)return!1;var e=$jscomp.global.Set;if(!e||!e.prototype.entries||"function"!=typeof Object.seal)return!1;try{var t=Object.seal({x:4}),l=new e($jscomp.makeIterator([t]));if(!l.has(t)||1!=l.size||l.add(t)!=l||1!=l.size||l.add({x:4})!=l||2!=l.size)return!1;var n=l.entries(),r=n.next();return!r.done&&r.value[0]==t&&r.value[1]==t&&(!(r=n.next()).done&&r.value[0]!=t&&4==r.value[0].x&&r.value[1]==r.value[0]&&n.next().done)}catch(e){return!1}},$jscomp.Set=function(e){if(this.map_=new $jscomp.Map,e){e=$jscomp.makeIterator(e);for(var t;!(t=e.next()).done;)this.add(t.value)}this.size=this.map_.size},$jscomp.Set.prototype.add=function(e){return this.map_.set(e,e),this.size=this.map_.size,this},$jscomp.Set.prototype.delete=function(e){return e=this.map_.delete(e),this.size=this.map_.size,e},$jscomp.Set.prototype.clear=function(){this.map_.clear(),this.size=0},$jscomp.Set.prototype.has=function(e){return this.map_.has(e)},$jscomp.Set.prototype.entries=function(){return this.map_.entries()},$jscomp.Set.prototype.values=function(){return this.map_.values()},$jscomp.Set.prototype.forEach=function(e,t){var l=this;this.map_.forEach(function(n){return e.call(t,n,n,l)})},$jscomp.Set$install=function(){$jscomp.Map$install(),$jscomp.Set$isConformant()?$jscomp.Set=$jscomp.global.Set:($jscomp.initSymbol(),$jscomp.initSymbolIterator(),$jscomp.Set.prototype[Symbol.iterator]=$jscomp.Set.prototype.values,$jscomp.Set$install=function(){})},$jscomp.string=$jscomp.string||{},$jscomp.checkStringArgs=function(e,t,l){if(null==e)throw new TypeError("The 'this' value for String.prototype."+l+" must not be null or undefined");if(t instanceof RegExp)throw new TypeError("First argument to String.prototype."+l+" must not be a regular expression");return e+""},$jscomp.string.fromCodePoint=function(e){for(var t="",l=0;l<arguments.length;l++){var n=Number(arguments[l]);if(0>n||1114111<n||n!==Math.floor(n))throw new RangeError("invalid_code_point "+n);65535>=n?t+=String.fromCharCode(n):(n-=65536,t+=String.fromCharCode(n>>>10&1023|55296),t+=String.fromCharCode(1023&n|56320))}return t},$jscomp.string.repeat=function(e){var t=$jscomp.checkStringArgs(this,null,"repeat");if(0>e||1342177279<e)throw new RangeError("Invalid count value");e|=0;for(var l="";e;)1&e&&(l+=t),(e>>>=1)&&(t+=t);return l},$jscomp.string.repeat$install=function(){String.prototype.repeat||(String.prototype.repeat=$jscomp.string.repeat)},$jscomp.string.codePointAt=function(e){var t=$jscomp.checkStringArgs(this,null,"codePointAt"),l=t.length;if(0<=(e=Number(e)||0)&&e<l){e|=0;var n=t.charCodeAt(e);return 55296>n||56319<n||e+1===l?n:56320>(e=t.charCodeAt(e+1))||57343<e?n:1024*(n-55296)+e+9216}},$jscomp.string.codePointAt$install=function(){String.prototype.codePointAt||(String.prototype.codePointAt=$jscomp.string.codePointAt)},$jscomp.string.includes=function(e,t){return-1!==$jscomp.checkStringArgs(this,e,"includes").indexOf(e,t||0)},$jscomp.string.includes$install=function(){String.prototype.includes||(String.prototype.includes=$jscomp.string.includes)},$jscomp.string.startsWith=function(e,t){var l=$jscomp.checkStringArgs(this,e,"startsWith");e+="";for(var n=l.length,r=e.length,o=Math.max(0,Math.min(0|t,l.length)),u=0;u<r&&o<n;)if(l[o++]!=e[u++])return!1;return u>=r},$jscomp.string.startsWith$install=function(){String.prototype.startsWith||(String.prototype.startsWith=$jscomp.string.startsWith)},$jscomp.string.endsWith=function(e,t){var l=$jscomp.checkStringArgs(this,e,"endsWith");e+="",void 0===t&&(t=l.length);for(var n=Math.max(0,Math.min(0|t,l.length)),r=e.length;0<r&&0<n;)if(l[--n]!=e[--r])return!1;return 0>=r},$jscomp.string.endsWith$install=function(){String.prototype.endsWith||(String.prototype.endsWith=$jscomp.string.endsWith)};var COMPILED=!0,goog=goog||{};goog.global=this,goog.isDef=function(e){return void 0!==e},goog.exportPath_=function(e,t,l){e=e.split("."),l=l||goog.global,e[0]in l||!l.execScript||l.execScript("var "+e[0]);for(var n;e.length&&(n=e.shift());)!e.length&&goog.isDef(t)?l[n]=t:l=l[n]?l[n]:l[n]={}},goog.define=function(e,t){var l=t;COMPILED||(goog.global.CLOSURE_UNCOMPILED_DEFINES&&Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES,e)?l=goog.global.CLOSURE_UNCOMPILED_DEFINES[e]:goog.global.CLOSURE_DEFINES&&Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES,e)&&(l=goog.global.CLOSURE_DEFINES[e])),goog.exportPath_(e,l)},goog.DEBUG=!0,goog.LOCALE="en",goog.TRUSTED_SITE=!0,goog.STRICT_MODE_COMPATIBLE=!1,goog.DISALLOW_TEST_ONLY_CODE=COMPILED&&!goog.DEBUG,goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING=!1,goog.provide=function(e){if(!COMPILED&&goog.isProvided_(e))throw Error('Namespace "'+e+'" already declared.');goog.constructNamespace_(e)},goog.constructNamespace_=function(e,t){if(!COMPILED){delete goog.implicitNamespaces_[e];for(var l=e;(l=l.substring(0,l.lastIndexOf(".")))&&!goog.getObjectByName(l);)goog.implicitNamespaces_[l]=!0}goog.exportPath_(e,t)},goog.VALID_MODULE_RE_=/^[a-zA-Z_$][a-zA-Z0-9._$]*$/,goog.module=function(e){if(!goog.isString(e)||!e||-1==e.search(goog.VALID_MODULE_RE_))throw Error("Invalid module identifier");if(!goog.isInModuleLoader_())throw Error("Module "+e+" has been loaded incorrectly.");if(goog.moduleLoaderState_.moduleName)throw Error("goog.module may only be called once per module.");if(goog.moduleLoaderState_.moduleName=e,!COMPILED){if(goog.isProvided_(e))throw Error('Namespace "'+e+'" already declared.');delete goog.implicitNamespaces_[e]}},goog.module.get=function(e){return goog.module.getInternal_(e)},goog.module.getInternal_=function(e){if(!COMPILED)return goog.isProvided_(e)?e in goog.loadedModules_?goog.loadedModules_[e]:goog.getObjectByName(e):null},goog.moduleLoaderState_=null,goog.isInModuleLoader_=function(){return null!=goog.moduleLoaderState_},goog.module.declareLegacyNamespace=function(){if(!COMPILED&&!goog.isInModuleLoader_())throw Error("goog.module.declareLegacyNamespace must be called from within a goog.module");if(!COMPILED&&!goog.moduleLoaderState_.moduleName)throw Error("goog.module must be called prior to goog.module.declareLegacyNamespace.");goog.moduleLoaderState_.declareLegacyNamespace=!0},goog.setTestOnly=function(e){if(goog.DISALLOW_TEST_ONLY_CODE)throw e=e||"",Error("Importing test-only code into non-debug environment"+(e?": "+e:"."))},goog.forwardDeclare=function(e){},COMPILED||(goog.isProvided_=function(e){return e in goog.loadedModules_||!goog.implicitNamespaces_[e]&&goog.isDefAndNotNull(goog.getObjectByName(e))},goog.implicitNamespaces_={"goog.module":!0}),goog.getObjectByName=function(e,t){for(var l,n=e.split("."),r=t||goog.global;l=n.shift();){if(!goog.isDefAndNotNull(r[l]))return null;r=r[l]}return r},goog.globalize=function(e,t){var l,n=t||goog.global;for(l in e)n[l]=e[l]},goog.addDependency=function(e,t,l,n){if(goog.DEPENDENCIES_ENABLED){var r;e=e.replace(/\\/g,"/");for(var o=goog.dependencies_,u=0;r=t[u];u++)o.nameToPath[r]=e,o.pathIsModule[e]=!!n;for(n=0;t=l[n];n++)e in o.requires||(o.requires[e]={}),o.requires[e][t]=!0}},goog.ENABLE_DEBUG_LOADER=!0,goog.logToConsole_=function(e){goog.global.console&&goog.global.console.error(e)},goog.require=function(e){if(!COMPILED){if(goog.ENABLE_DEBUG_LOADER&&goog.IS_OLD_IE_&&goog.maybeProcessDeferredDep_(e),goog.isProvided_(e))return goog.isInModuleLoader_()?goog.module.getInternal_(e):null;if(goog.ENABLE_DEBUG_LOADER){var t=goog.getPathFromDeps_(e);if(t)return goog.writeScripts_(t),null}throw e="goog.require could not find: "+e,goog.logToConsole_(e),Error(e)}},goog.basePath="",goog.nullFunction=function(){},goog.abstractMethod=function(){throw Error("unimplemented abstract method")},goog.addSingletonGetter=function(e){e.getInstance=function(){return e.instance_?e.instance_:(goog.DEBUG&&(goog.instantiatedSingletons_[goog.instantiatedSingletons_.length]=e),e.instance_=new e)}},goog.instantiatedSingletons_=[],goog.LOAD_MODULE_USING_EVAL=!0,goog.SEAL_MODULE_EXPORTS=goog.DEBUG,goog.loadedModules_={},goog.DEPENDENCIES_ENABLED=!COMPILED&&goog.ENABLE_DEBUG_LOADER,goog.DEPENDENCIES_ENABLED&&(goog.dependencies_={pathIsModule:{},nameToPath:{},requires:{},visited:{},written:{},deferred:{}},goog.inHtmlDocument_=function(){var e=goog.global.document;return null!=e&&"write"in e},goog.findBasePath_=function(){if(goog.isDef(goog.global.CLOSURE_BASE_PATH))goog.basePath=goog.global.CLOSURE_BASE_PATH;else if(goog.inHtmlDocument_())for(var e=goog.global.document.getElementsByTagName("SCRIPT"),t=e.length-1;0<=t;--t){var l=e[t].src,n=-1==(n=l.lastIndexOf("?"))?l.length:n;if("base.js"==l.substr(n-7,7)){goog.basePath=l.substr(0,n-7);break}}},goog.importScript_=function(e,t){(goog.global.CLOSURE_IMPORT_SCRIPT||goog.writeScriptTag_)(e,t)&&(goog.dependencies_.written[e]=!0)},goog.IS_OLD_IE_=!(goog.global.atob||!goog.global.document||!goog.global.document.all),goog.importModule_=function(e){goog.importScript_("",'goog.retrieveAndExecModule_("'+e+'");')&&(goog.dependencies_.written[e]=!0)},goog.queuedModules_=[],goog.wrapModule_=function(e,t){return goog.LOAD_MODULE_USING_EVAL&&goog.isDef(goog.global.JSON)?"goog.loadModule("+goog.global.JSON.stringify(t+"\n//# sourceURL="+e+"\n")+");":'goog.loadModule(function(exports) {"use strict";'+t+"\n;return exports});\n//# sourceURL="+e+"\n"},goog.loadQueuedModules_=function(){var e=goog.queuedModules_.length;if(0<e){var t=goog.queuedModules_;goog.queuedModules_=[];for(var l=0;l<e;l++)goog.maybeProcessDeferredPath_(t[l])}},goog.maybeProcessDeferredDep_=function(e){goog.isDeferredModule_(e)&&goog.allDepsAreAvailable_(e)&&(e=goog.getPathFromDeps_(e),goog.maybeProcessDeferredPath_(goog.basePath+e))},goog.isDeferredModule_=function(e){return!(!(e=goog.getPathFromDeps_(e))||!goog.dependencies_.pathIsModule[e])&&goog.basePath+e in goog.dependencies_.deferred},goog.allDepsAreAvailable_=function(e){if((e=goog.getPathFromDeps_(e))&&e in goog.dependencies_.requires)for(var t in goog.dependencies_.requires[e])if(!goog.isProvided_(t)&&!goog.isDeferredModule_(t))return!1;return!0},goog.maybeProcessDeferredPath_=function(e){if(e in goog.dependencies_.deferred){var t=goog.dependencies_.deferred[e];delete goog.dependencies_.deferred[e],goog.globalEval(t)}},goog.loadModuleFromUrl=function(e){goog.retrieveAndExecModule_(e)},goog.loadModule=function(e){var t=goog.moduleLoaderState_;try{var l;if(goog.moduleLoaderState_={moduleName:void 0,declareLegacyNamespace:!1},goog.isFunction(e))l=e.call(goog.global,{});else{if(!goog.isString(e))throw Error("Invalid module definition");l=goog.loadModuleFromSource_.call(goog.global,e)}var n=goog.moduleLoaderState_.moduleName;if(!goog.isString(n)||!n)throw Error('Invalid module name "'+n+'"');goog.moduleLoaderState_.declareLegacyNamespace?goog.constructNamespace_(n,l):goog.SEAL_MODULE_EXPORTS&&Object.seal&&Object.seal(l),goog.loadedModules_[n]=l}finally{goog.moduleLoaderState_=t}},goog.loadModuleFromSource_=function(a){return eval(a),{}},goog.writeScriptSrcNode_=function(e){goog.global.document.write('<script type="text/javascript" src="'+e+'"><\/script>')},goog.appendScriptSrcNode_=function(e){var t=goog.global.document,l=t.createElement("script");l.type="text/javascript",l.src=e,l.defer=!1,l.async=!1,t.head.appendChild(l)},goog.writeScriptTag_=function(e,t){if(goog.inHtmlDocument_()){var l=goog.global.document;if(!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING&&"complete"==l.readyState){if(/\bdeps.js$/.test(e))return!1;throw Error('Cannot write "'+e+'" after document load')}var n=goog.IS_OLD_IE_;return void 0===t?n?(n=" onreadystatechange='goog.onScriptLoad_(this, "+ ++goog.lastNonModuleScriptIndex_+")' ",l.write('<script type="text/javascript" src="'+e+'"'+n+"><\/script>")):goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING?goog.appendScriptSrcNode_(e):goog.writeScriptSrcNode_(e):l.write('<script type="text/javascript">'+t+"<\/script>"),!0}return!1},goog.lastNonModuleScriptIndex_=0,goog.onScriptLoad_=function(e,t){return"complete"==e.readyState&&goog.lastNonModuleScriptIndex_==t&&goog.loadQueuedModules_(),!0},goog.writeScripts_=function(e){var t=[],l={},n=goog.dependencies_;for(function e(r){if(!(r in n.written||r in n.visited)){if(n.visited[r]=!0,r in n.requires)for(var o in n.requires[r])if(!goog.isProvided_(o)){if(!(o in n.nameToPath))throw Error("Undefined nameToPath for "+o);e(n.nameToPath[o])}r in l||(l[r]=!0,t.push(r))}}(e),e=0;e<t.length;e++){var r=t[e];goog.dependencies_.written[r]=!0}var o=goog.moduleLoaderState_;for(goog.moduleLoaderState_=null,e=0;e<t.length;e++){if(!(r=t[e]))throw goog.moduleLoaderState_=o,Error("Undefined script input");n.pathIsModule[r]?goog.importModule_(goog.basePath+r):goog.importScript_(goog.basePath+r)}goog.moduleLoaderState_=o},goog.getPathFromDeps_=function(e){return e in goog.dependencies_.nameToPath?goog.dependencies_.nameToPath[e]:null},goog.findBasePath_(),goog.global.CLOSURE_NO_DEPS||goog.importScript_(goog.basePath+"deps.js")),goog.normalizePath_=function(e){e=e.split("/");for(var t=0;t<e.length;)"."==e[t]?e.splice(t,1):t&&".."==e[t]&&e[t-1]&&".."!=e[t-1]?e.splice(--t,2):t++;return e.join("/")},goog.loadFileSync_=function(e){if(goog.global.CLOSURE_LOAD_FILE_SYNC)return goog.global.CLOSURE_LOAD_FILE_SYNC(e);var t=new goog.global.XMLHttpRequest;return t.open("get",e,!1),t.send(),t.responseText},goog.retrieveAndExecModule_=function(e){if(!COMPILED){var t=e;e=goog.normalizePath_(e);var l=goog.global.CLOSURE_IMPORT_SCRIPT||goog.writeScriptTag_,n=goog.loadFileSync_(e);if(null==n)throw Error("load of "+e+"failed");n=goog.wrapModule_(e,n),goog.IS_OLD_IE_?(goog.dependencies_.deferred[t]=n,goog.queuedModules_.push(t)):l(e,n)}},goog.typeOf=function(e){var t=_typeof(e);if("object"==t){if(!e)return"null";if(e instanceof Array)return"array";if(e instanceof Object)return t;var l=Object.prototype.toString.call(e);if("[object Window]"==l)return"object";if("[object Array]"==l||"number"==typeof e.length&&"undefined"!=typeof e.splice&&"undefined"!=typeof e.propertyIsEnumerable&&!e.propertyIsEnumerable("splice"))return"array";if("[object Function]"==l||"undefined"!=typeof e.call&&"undefined"!=typeof e.propertyIsEnumerable&&!e.propertyIsEnumerable("call"))return"function"}else if("function"==t&&"undefined"==typeof e.call)return"object";return t},goog.isNull=function(e){return null===e},goog.isDefAndNotNull=function(e){return null!=e},goog.isArray=function(e){return"array"==goog.typeOf(e)},goog.isArrayLike=function(e){var t=goog.typeOf(e);return"array"==t||"object"==t&&"number"==typeof e.length},goog.isDateLike=function(e){return goog.isObject(e)&&"function"==typeof e.getFullYear},goog.isString=function(e){return"string"==typeof e},goog.isBoolean=function(e){return"boolean"==typeof e},goog.isNumber=function(e){return"number"==typeof e},goog.isFunction=function(e){return"function"==goog.typeOf(e)},goog.isObject=function(e){var t=_typeof(e);return"object"==t&&null!=e||"function"==t},goog.getUid=function(e){return e[goog.UID_PROPERTY_]||(e[goog.UID_PROPERTY_]=++goog.uidCounter_)},goog.hasUid=function(e){return!!e[goog.UID_PROPERTY_]},goog.removeUid=function(e){null!==e&&"removeAttribute"in e&&e.removeAttribute(goog.UID_PROPERTY_);try{delete e[goog.UID_PROPERTY_]}catch(e){}},goog.UID_PROPERTY_="closure_uid_"+(1e9*Math.random()>>>0),goog.uidCounter_=0,goog.getHashCode=goog.getUid,goog.removeHashCode=goog.removeUid,goog.cloneObject=function(e){if("object"==(l=goog.typeOf(e))||"array"==l){if(e.clone)return e.clone();var t,l="array"==l?[]:{};for(t in e)l[t]=goog.cloneObject(e[t]);return l}return e},goog.bindNative_=function(e,t,l){return e.call.apply(e.bind,arguments)},goog.bindJs_=function(e,t,l){if(!e)throw Error();if(2<arguments.length){var n=Array.prototype.slice.call(arguments,2);return function(){var l=Array.prototype.slice.call(arguments);return Array.prototype.unshift.apply(l,n),e.apply(t,l)}}return function(){return e.apply(t,arguments)}},goog.bind=function(e,t,l){return Function.prototype.bind&&-1!=Function.prototype.bind.toString().indexOf("native code")?goog.bind=goog.bindNative_:goog.bind=goog.bindJs_,goog.bind.apply(null,arguments)},goog.partial=function(e,t){var l=Array.prototype.slice.call(arguments,1);return function(){var t=l.slice();return t.push.apply(t,arguments),e.apply(this,t)}},goog.mixin=function(e,t){for(var l in t)e[l]=t[l]},goog.now=goog.TRUSTED_SITE&&Date.now||function(){return+new Date},goog.globalEval=function(e){if(goog.global.execScript)goog.global.execScript(e,"JavaScript");else{if(!goog.global.eval)throw Error("goog.globalEval not available");if(null==goog.evalWorksForGlobals_)if(goog.global.eval("var _evalTest_ = 1;"),"undefined"!=typeof goog.global._evalTest_){try{delete goog.global._evalTest_}catch(e){}goog.evalWorksForGlobals_=!0}else goog.evalWorksForGlobals_=!1;if(goog.evalWorksForGlobals_)goog.global.eval(e);else{var t=goog.global.document,l=t.createElement("SCRIPT");l.type="text/javascript",l.defer=!1,l.appendChild(t.createTextNode(e)),t.body.appendChild(l),t.body.removeChild(l)}}},goog.evalWorksForGlobals_=null,goog.getCssName=function(e,t){var l=function(e){return goog.cssNameMapping_[e]||e},n=function(e){e=e.split("-");for(var t=[],n=0;n<e.length;n++)t.push(l(e[n]));return t.join("-")};n=goog.cssNameMapping_?"BY_WHOLE"==goog.cssNameMappingStyle_?l:n:function(e){return e};return t?e+"-"+n(t):n(e)},goog.setCssNameMapping=function(e,t){goog.cssNameMapping_=e,goog.cssNameMappingStyle_=t},!COMPILED&&goog.global.CLOSURE_CSS_NAME_MAPPING&&(goog.cssNameMapping_=goog.global.CLOSURE_CSS_NAME_MAPPING),goog.getMsg=function(e,t){return t&&(e=e.replace(/\{\$([^}]+)}/g,function(e,l){return null!=t&&l in t?t[l]:e})),e},goog.getMsgWithFallback=function(e,t){return e},goog.exportSymbol=function(e,t,l){goog.exportPath_(e,t,l)},goog.exportProperty=function(e,t,l){e[t]=l},goog.inherits=function(e,t){function l(){}l.prototype=t.prototype,e.superClass_=t.prototype,e.prototype=new l,e.prototype.constructor=e,e.base=function(e,l,n){for(var r=Array(arguments.length-2),o=2;o<arguments.length;o++)r[o-2]=arguments[o];return t.prototype[l].apply(e,r)}},goog.base=function(e,t,l){var n=arguments.callee.caller;if(goog.STRICT_MODE_COMPATIBLE||goog.DEBUG&&!n)throw Error("arguments.caller not defined.  goog.base() cannot be used with strict mode code. See http://www.ecma-international.org/ecma-262/5.1/#sec-C");if(n.superClass_){for(var r=Array(arguments.length-1),o=1;o<arguments.length;o++)r[o-1]=arguments[o];return n.superClass_.constructor.apply(e,r)}for(r=Array(arguments.length-2),o=2;o<arguments.length;o++)r[o-2]=arguments[o];o=!1;for(var u=e.constructor;u;u=u.superClass_&&u.superClass_.constructor)if(u.prototype[t]===n)o=!0;else if(o)return u.prototype[t].apply(e,r);if(e[t]===n)return e.constructor.prototype[t].apply(e,r);throw Error("goog.base called from a method of one name to a method of a different name")},goog.scope=function(e){e.call(goog.global)},COMPILED||(goog.global.COMPILED=COMPILED),goog.defineClass=function(e,t){var l=t.constructor,n=t.statics;return l&&l!=Object.prototype.constructor||(l=function(){throw Error("cannot instantiate an interface (no constructor defined).")}),l=goog.defineClass.createSealingConstructor_(l,e),e&&goog.inherits(l,e),delete t.constructor,delete t.statics,goog.defineClass.applyProperties_(l.prototype,t),null!=n&&(n instanceof Function?n(l):goog.defineClass.applyProperties_(l,n)),l},goog.defineClass.SEAL_CLASS_INSTANCES=goog.DEBUG,goog.defineClass.createSealingConstructor_=function(e,t){if(goog.defineClass.SEAL_CLASS_INSTANCES&&Object.seal instanceof Function){if(t&&t.prototype&&t.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_])return e;return function t(){var l=e.apply(this,arguments)||this;return l[goog.UID_PROPERTY_]=l[goog.UID_PROPERTY_],this.constructor===t&&Object.seal(l),l}}return e},goog.defineClass.OBJECT_PROTOTYPE_FIELDS_="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" "),goog.defineClass.applyProperties_=function(e,t){for(var l in t)Object.prototype.hasOwnProperty.call(t,l)&&(e[l]=t[l]);for(var n=0;n<goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;n++)l=goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[n],Object.prototype.hasOwnProperty.call(t,l)&&(e[l]=t[l])},goog.tagUnsealableClass=function(e){!COMPILED&&goog.defineClass.SEAL_CLASS_INSTANCES&&(e.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]=!0)},goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_="goog_defineClass_legacy_unsealable",goog.dom={},goog.dom.NodeType={ELEMENT:1,ATTRIBUTE:2,TEXT:3,CDATA_SECTION:4,ENTITY_REFERENCE:5,ENTITY:6,PROCESSING_INSTRUCTION:7,COMMENT:8,DOCUMENT:9,DOCUMENT_TYPE:10,DOCUMENT_FRAGMENT:11,NOTATION:12},goog.debug={},goog.debug.Error=function(e){if(Error.captureStackTrace)Error.captureStackTrace(this,goog.debug.Error);else{var t=Error().stack;t&&(this.stack=t)}e&&(this.message=String(e)),this.reportErrorToServer=!0},goog.inherits(goog.debug.Error,Error),goog.debug.Error.prototype.name="CustomError",goog.string={},goog.string.DETECT_DOUBLE_ESCAPING=!1,goog.string.FORCE_NON_DOM_HTML_UNESCAPING=!1,goog.string.Unicode={NBSP:"\xa0"},goog.string.startsWith=function(e,t){return 0==e.lastIndexOf(t,0)},goog.string.endsWith=function(e,t){var l=e.length-t.length;return 0<=l&&e.indexOf(t,l)==l},goog.string.caseInsensitiveStartsWith=function(e,t){return 0==goog.string.caseInsensitiveCompare(t,e.substr(0,t.length))},goog.string.caseInsensitiveEndsWith=function(e,t){return 0==goog.string.caseInsensitiveCompare(t,e.substr(e.length-t.length,t.length))},goog.string.caseInsensitiveEquals=function(e,t){return e.toLowerCase()==t.toLowerCase()},goog.string.subs=function(e,t){for(var l=e.split("%s"),n="",r=Array.prototype.slice.call(arguments,1);r.length&&1<l.length;)n+=l.shift()+r.shift();return n+l.join("%s")},goog.string.collapseWhitespace=function(e){return e.replace(/[\s\xa0]+/g," ").replace(/^\s+|\s+$/g,"")},goog.string.isEmptyOrWhitespace=function(e){return/^[\s\xa0]*$/.test(e)},goog.string.isEmptyString=function(e){return 0==e.length},goog.string.isEmpty=goog.string.isEmptyOrWhitespace,goog.string.isEmptyOrWhitespaceSafe=function(e){return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(e))},goog.string.isEmptySafe=goog.string.isEmptyOrWhitespaceSafe,goog.string.isBreakingWhitespace=function(e){return!/[^\t\n\r ]/.test(e)},goog.string.isAlpha=function(e){return!/[^a-zA-Z]/.test(e)},goog.string.isNumeric=function(e){return!/[^0-9]/.test(e)},goog.string.isAlphaNumeric=function(e){return!/[^a-zA-Z0-9]/.test(e)},goog.string.isSpace=function(e){return" "==e},goog.string.isUnicodeChar=function(e){return 1==e.length&&" "<=e&&"~">=e||"\x80"<=e&&"\ufffd">=e},goog.string.stripNewlines=function(e){return e.replace(/(\r\n|\r|\n)+/g," ")},goog.string.canonicalizeNewlines=function(e){return e.replace(/(\r\n|\r|\n)/g,"\n")},goog.string.normalizeWhitespace=function(e){return e.replace(/\xa0|\s/g," ")},goog.string.normalizeSpaces=function(e){return e.replace(/\xa0|[ \t]+/g," ")},goog.string.collapseBreakingSpaces=function(e){return e.replace(/[\t\r\n ]+/g," ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g,"")},goog.string.trim=goog.TRUSTED_SITE&&String.prototype.trim?function(e){return e.trim()}:function(e){return e.replace(/^[\s\xa0]+|[\s\xa0]+$/g,"")},goog.string.trimLeft=function(e){return e.replace(/^[\s\xa0]+/,"")},goog.string.trimRight=function(e){return e.replace(/[\s\xa0]+$/,"")},goog.string.caseInsensitiveCompare=function(e,t){var l=String(e).toLowerCase(),n=String(t).toLowerCase();return l<n?-1:l==n?0:1},goog.string.numberAwareCompare_=function(e,t,l){if(e==t)return 0;if(!e)return-1;if(!t)return 1;for(var n=e.toLowerCase().match(l),r=t.toLowerCase().match(l),o=Math.min(n.length,r.length),u=0;u<o;u++){l=n[u];var i=r[u];if(l!=i)return e=parseInt(l,10),!isNaN(e)&&(t=parseInt(i,10),!isNaN(t)&&e-t)?e-t:l<i?-1:1}return n.length!=r.length?n.length-r.length:e<t?-1:1},goog.string.intAwareCompare=function(e,t){return goog.string.numberAwareCompare_(e,t,/\d+|\D+/g)},goog.string.floatAwareCompare=function(e,t){return goog.string.numberAwareCompare_(e,t,/\d+|\.\d+|\D+/g)},goog.string.numerateCompare=goog.string.floatAwareCompare,goog.string.urlEncode=function(e){return encodeURIComponent(String(e))},goog.string.urlDecode=function(e){return decodeURIComponent(e.replace(/\+/g," "))},goog.string.newLineToBr=function(e,t){return e.replace(/(\r\n|\r|\n)/g,t?"<br />":"<br>")},goog.string.htmlEscape=function(e,t){if(t)e=e.replace(goog.string.AMP_RE_,"&amp;").replace(goog.string.LT_RE_,"&lt;").replace(goog.string.GT_RE_,"&gt;").replace(goog.string.QUOT_RE_,"&quot;").replace(goog.string.SINGLE_QUOTE_RE_,"&#39;").replace(goog.string.NULL_RE_,"&#0;"),goog.string.DETECT_DOUBLE_ESCAPING&&(e=e.replace(goog.string.E_RE_,"&#101;"));else{if(!goog.string.ALL_RE_.test(e))return e;-1!=e.indexOf("&")&&(e=e.replace(goog.string.AMP_RE_,"&amp;")),-1!=e.indexOf("<")&&(e=e.replace(goog.string.LT_RE_,"&lt;")),-1!=e.indexOf(">")&&(e=e.replace(goog.string.GT_RE_,"&gt;")),-1!=e.indexOf('"')&&(e=e.replace(goog.string.QUOT_RE_,"&quot;")),-1!=e.indexOf("'")&&(e=e.replace(goog.string.SINGLE_QUOTE_RE_,"&#39;")),-1!=e.indexOf("\0")&&(e=e.replace(goog.string.NULL_RE_,"&#0;")),goog.string.DETECT_DOUBLE_ESCAPING&&-1!=e.indexOf("e")&&(e=e.replace(goog.string.E_RE_,"&#101;"))}return e},goog.string.AMP_RE_=/&/g,goog.string.LT_RE_=/</g,goog.string.GT_RE_=/>/g,goog.string.QUOT_RE_=/"/g,goog.string.SINGLE_QUOTE_RE_=/'/g,goog.string.NULL_RE_=/\x00/g,goog.string.E_RE_=/e/g,goog.string.ALL_RE_=goog.string.DETECT_DOUBLE_ESCAPING?/[\x00&<>"'e]/:/[\x00&<>"']/,goog.string.unescapeEntities=function(e){return goog.string.contains(e,"&")?!goog.string.FORCE_NON_DOM_HTML_UNESCAPING&&"document"in goog.global?goog.string.unescapeEntitiesUsingDom_(e):goog.string.unescapePureXmlEntities_(e):e},goog.string.unescapeEntitiesWithDocument=function(e,t){return goog.string.contains(e,"&")?goog.string.unescapeEntitiesUsingDom_(e,t):e},goog.string.unescapeEntitiesUsingDom_=function(e,t){var l,n={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"'};return l=t?t.createElement("div"):goog.global.document.createElement("div"),e.replace(goog.string.HTML_ENTITY_PATTERN_,function(e,t){var r=n[e];if(r)return r;if("#"==t.charAt(0)){var o=Number("0"+t.substr(1));isNaN(o)||(r=String.fromCharCode(o))}return r||(l.innerHTML=e+" ",r=l.firstChild.nodeValue.slice(0,-1)),n[e]=r})},goog.string.unescapePureXmlEntities_=function(e){return e.replace(/&([^;]+);/g,function(e,t){switch(t){case"amp":return"&";case"lt":return"<";case"gt":return">";case"quot":return'"';default:if("#"==t.charAt(0)){var l=Number("0"+t.substr(1));if(!isNaN(l))return String.fromCharCode(l)}return e}})},goog.string.HTML_ENTITY_PATTERN_=/&([^;\s<&]+);?/g,goog.string.whitespaceEscape=function(e,t){return goog.string.newLineToBr(e.replace(/  /g," &#160;"),t)},goog.string.preserveSpaces=function(e){return e.replace(/(^|[\n ]) /g,"$1"+goog.string.Unicode.NBSP)},goog.string.stripQuotes=function(e,t){for(var l=t.length,n=0;n<l;n++){var r=1==l?t:t.charAt(n);if(e.charAt(0)==r&&e.charAt(e.length-1)==r)return e.substring(1,e.length-1)}return e},goog.string.truncate=function(e,t,l){return l&&(e=goog.string.unescapeEntities(e)),e.length>t&&(e=e.substring(0,t-3)+"..."),l&&(e=goog.string.htmlEscape(e)),e},goog.string.truncateMiddle=function(e,t,l,n){if(l&&(e=goog.string.unescapeEntities(e)),n&&e.length>t){n>t&&(n=t);var r=e.length-n;e=e.substring(0,t-n)+"..."+e.substring(r)}else e.length>t&&(n=Math.floor(t/2),r=e.length-n,e=e.substring(0,n+t%2)+"..."+e.substring(r));return l&&(e=goog.string.htmlEscape(e)),e},goog.string.specialEscapeChars_={"\0":"\\0","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t","\v":"\\x0B",'"':'\\"',"\\":"\\\\","<":"<"},goog.string.jsEscapeCache_={"'":"\\'"},goog.string.quote=function(e){e=String(e);for(var t=['"'],l=0;l<e.length;l++){var n=e.charAt(l),r=n.charCodeAt(0);t[l+1]=goog.string.specialEscapeChars_[n]||(31<r&&127>r?n:goog.string.escapeChar(n))}return t.push('"'),t.join("")},goog.string.escapeString=function(e){for(var t=[],l=0;l<e.length;l++)t[l]=goog.string.escapeChar(e.charAt(l));return t.join("")},goog.string.escapeChar=function(e){if(e in goog.string.jsEscapeCache_)return goog.string.jsEscapeCache_[e];if(e in goog.string.specialEscapeChars_)return goog.string.jsEscapeCache_[e]=goog.string.specialEscapeChars_[e];var t,l=e.charCodeAt(0);return 31<l&&127>l?t=e:(256>l?(t="\\x",(16>l||256<l)&&(t+="0")):(t="\\u",4096>l&&(t+="0")),t+=l.toString(16).toUpperCase()),goog.string.jsEscapeCache_[e]=t},goog.string.contains=function(e,t){return-1!=e.indexOf(t)},goog.string.caseInsensitiveContains=function(e,t){return goog.string.contains(e.toLowerCase(),t.toLowerCase())},goog.string.countOf=function(e,t){return e&&t?e.split(t).length-1:0},goog.string.removeAt=function(e,t,l){var n=e;return 0<=t&&t<e.length&&0<l&&(n=e.substr(0,t)+e.substr(t+l,e.length-t-l)),n},goog.string.remove=function(e,t){var l=new RegExp(goog.string.regExpEscape(t),"");return e.replace(l,"")},goog.string.removeAll=function(e,t){var l=new RegExp(goog.string.regExpEscape(t),"g");return e.replace(l,"")},goog.string.regExpEscape=function(e){return String(e).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g,"\\$1").replace(/\x08/g,"\\x08")},goog.string.repeat=String.prototype.repeat?function(e,t){return e.repeat(t)}:function(e,t){return Array(t+1).join(e)},goog.string.padNumber=function(e,t,l){return-1==(l=(e=goog.isDef(l)?e.toFixed(l):String(e)).indexOf("."))&&(l=e.length),goog.string.repeat("0",Math.max(0,t-l))+e},goog.string.makeSafe=function(e){return null==e?"":String(e)},goog.string.buildString=function(e){return Array.prototype.join.call(arguments,"")},goog.string.getRandomString=function(){return Math.floor(2147483648*Math.random()).toString(36)+Math.abs(Math.floor(2147483648*Math.random())^goog.now()).toString(36)},goog.string.compareVersions=function(e,t){for(var l=0,n=goog.string.trim(String(e)).split("."),r=goog.string.trim(String(t)).split("."),o=Math.max(n.length,r.length),u=0;0==l&&u<o;u++){var i=n[u]||"",s=r[u]||"",a=RegExp("(\\d*)(\\D*)","g"),c=RegExp("(\\d*)(\\D*)","g");do{var p=a.exec(i)||["","",""],d=c.exec(s)||["","",""];if(0==p[0].length&&0==d[0].length)break;l=0==p[1].length?0:parseInt(p[1],10);var f=0==d[1].length?0:parseInt(d[1],10);l=goog.string.compareElements_(l,f)||goog.string.compareElements_(0==p[2].length,0==d[2].length)||goog.string.compareElements_(p[2],d[2])}while(0==l)}return l},goog.string.compareElements_=function(e,t){return e<t?-1:e>t?1:0},goog.string.hashCode=function(e){for(var t=0,l=0;l<e.length;++l)t=31*t+e.charCodeAt(l)>>>0;return t},goog.string.uniqueStringCounter_=2147483648*Math.random()|0,goog.string.createUniqueString=function(){return"goog_"+goog.string.uniqueStringCounter_++},goog.string.toNumber=function(e){var t=Number(e);return 0==t&&goog.string.isEmptyOrWhitespace(e)?NaN:t},goog.string.isLowerCamelCase=function(e){return/^[a-z]+([A-Z][a-z]*)*$/.test(e)},goog.string.isUpperCamelCase=function(e){return/^([A-Z][a-z]*)+$/.test(e)},goog.string.toCamelCase=function(e){return String(e).replace(/\-([a-z])/g,function(e,t){return t.toUpperCase()})},goog.string.toSelectorCase=function(e){return String(e).replace(/([A-Z])/g,"-$1").toLowerCase()},goog.string.toTitleCase=function(e,t){var l=goog.isString(t)?goog.string.regExpEscape(t):"\\s";return e.replace(new RegExp("(^"+(l?"|["+l+"]+":"")+")([a-z])","g"),function(e,t,l){return t+l.toUpperCase()})},goog.string.capitalize=function(e){return String(e.charAt(0)).toUpperCase()+String(e.substr(1)).toLowerCase()},goog.string.parseInt=function(e){return isFinite(e)&&(e=String(e)),goog.isString(e)?/^\s*-?0x/i.test(e)?parseInt(e,16):parseInt(e,10):NaN},goog.string.splitLimit=function(e,t,l){e=e.split(t);for(var n=[];0<l&&e.length;)n.push(e.shift()),l--;return e.length&&n.push(e.join(t)),n},goog.string.editDistance=function(e,t){var l=[],n=[];if(e==t)return 0;if(!e.length||!t.length)return Math.max(e.length,t.length);for(var r=0;r<t.length+1;r++)l[r]=r;for(r=0;r<e.length;r++){n[0]=r+1;for(var o=0;o<t.length;o++)n[o+1]=Math.min(n[o]+1,l[o+1]+1,l[o]+Number(e[r]!=t[o]));for(o=0;o<l.length;o++)l[o]=n[o]}return n[t.length]},goog.asserts={},goog.asserts.ENABLE_ASSERTS=goog.DEBUG,goog.asserts.AssertionError=function(e,t){t.unshift(e),goog.debug.Error.call(this,goog.string.subs.apply(null,t)),t.shift(),this.messagePattern=e},goog.inherits(goog.asserts.AssertionError,goog.debug.Error),goog.asserts.AssertionError.prototype.name="AssertionError",goog.asserts.DEFAULT_ERROR_HANDLER=function(e){throw e},goog.asserts.errorHandler_=goog.asserts.DEFAULT_ERROR_HANDLER,goog.asserts.doAssertFailure_=function(e,t,l,n){var r="Assertion failed";if(l){r=r+": "+l;var o=n}else e&&(r+=": "+e,o=t);e=new goog.asserts.AssertionError(""+r,o||[]),goog.asserts.errorHandler_(e)},goog.asserts.setErrorHandler=function(e){goog.asserts.ENABLE_ASSERTS&&(goog.asserts.errorHandler_=e)},goog.asserts.assert=function(e,t,l){return goog.asserts.ENABLE_ASSERTS&&!e&&goog.asserts.doAssertFailure_("",null,t,Array.prototype.slice.call(arguments,2)),e},goog.asserts.fail=function(e,t){goog.asserts.ENABLE_ASSERTS&&goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure"+(e?": "+e:""),Array.prototype.slice.call(arguments,1)))},goog.asserts.assertNumber=function(e,t,l){return goog.asserts.ENABLE_ASSERTS&&!goog.isNumber(e)&&goog.asserts.doAssertFailure_("Expected number but got %s: %s.",[goog.typeOf(e),e],t,Array.prototype.slice.call(arguments,2)),e},goog.asserts.assertString=function(e,t,l){return goog.asserts.ENABLE_ASSERTS&&!goog.isString(e)&&goog.asserts.doAssertFailure_("Expected string but got %s: %s.",[goog.typeOf(e),e],t,Array.prototype.slice.call(arguments,2)),e},goog.asserts.assertFunction=function(e,t,l){return goog.asserts.ENABLE_ASSERTS&&!goog.isFunction(e)&&goog.asserts.doAssertFailure_("Expected function but got %s: %s.",[goog.typeOf(e),e],t,Array.prototype.slice.call(arguments,2)),e},goog.asserts.assertObject=function(e,t,l){return goog.asserts.ENABLE_ASSERTS&&!goog.isObject(e)&&goog.asserts.doAssertFailure_("Expected object but got %s: %s.",[goog.typeOf(e),e],t,Array.prototype.slice.call(arguments,2)),e},goog.asserts.assertArray=function(e,t,l){return goog.asserts.ENABLE_ASSERTS&&!goog.isArray(e)&&goog.asserts.doAssertFailure_("Expected array but got %s: %s.",[goog.typeOf(e),e],t,Array.prototype.slice.call(arguments,2)),e},goog.asserts.assertBoolean=function(e,t,l){return goog.asserts.ENABLE_ASSERTS&&!goog.isBoolean(e)&&goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.",[goog.typeOf(e),e],t,Array.prototype.slice.call(arguments,2)),e},goog.asserts.assertElement=function(e,t,l){return!goog.asserts.ENABLE_ASSERTS||goog.isObject(e)&&e.nodeType==goog.dom.NodeType.ELEMENT||goog.asserts.doAssertFailure_("Expected Element but got %s: %s.",[goog.typeOf(e),e],t,Array.prototype.slice.call(arguments,2)),e},goog.asserts.assertInstanceof=function(e,t,l,n){return!goog.asserts.ENABLE_ASSERTS||e instanceof t||goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.",[goog.asserts.getType_(t),goog.asserts.getType_(e)],l,Array.prototype.slice.call(arguments,3)),e},goog.asserts.assertObjectPrototypeIsIntact=function(){for(var e in Object.prototype)goog.asserts.fail(e+" should not be enumerable in Object.prototype.")},goog.asserts.getType_=function(e){return e instanceof Function?e.displayName||e.name||"unknown type name":e instanceof Object?e.constructor.displayName||e.constructor.name||Object.prototype.toString.call(e):null===e?"null":_typeof(e)};var jspb={Map:function(e,t){this.arr_=e,this.valueCtor_=t,this.map_={},this.arrClean=!0,0<this.arr_.length&&this.loadFromArray_()}},a,b;jspb.Map.prototype.loadFromArray_=function(){for(var e=0;e<this.arr_.length;e++){var t=this.arr_[e],l=t[0];this.map_[l.toString()]=new jspb.Map.Entry_(l,t[1])}this.arrClean=!0},jspb.Map.prototype.toArray=function(){if(this.arrClean){if(this.valueCtor_){var e,t=this.map_;for(e in t)if(Object.prototype.hasOwnProperty.call(t,e)){var l=t[e].valueWrapper;l&&l.toArray()}}}else{for(this.arr_.length=0,(t=this.stringKeys_()).sort(),e=0;e<t.length;e++){var n=this.map_[t[e]];(l=n.valueWrapper)&&l.toArray(),this.arr_.push([n.key,n.value])}this.arrClean=!0}return this.arr_},jspb.Map.prototype.toObject=function(e,t){for(var l=this.toArray(),n=[],r=0;r<l.length;r++){var o=this.map_[l[r][0].toString()];this.wrapEntry_(o);var u=o.valueWrapper;u?(goog.asserts.assert(t),n.push([o.key,t(e,u)])):n.push([o.key,o.value])}return n},jspb.Map.fromObject=function(e,t,l){t=new jspb.Map([],t);for(var n=0;n<e.length;n++){var r=e[n][0],o=l(e[n][1]);t.set(r,o)}return t},jspb.Map.ArrayIteratorIterable_=function(e){this.idx_=0,this.arr_=e},jspb.Map.ArrayIteratorIterable_.prototype.next=function(){return this.idx_<this.arr_.length?{done:!1,value:this.arr_[this.idx_++]}:{done:!0,value:void 0}},$jscomp.initSymbol(),"undefined"!=typeof Symbol&&($jscomp.initSymbol(),$jscomp.initSymbolIterator(),jspb.Map.ArrayIteratorIterable_.prototype[Symbol.iterator]=function(){return this}),jspb.Map.prototype.getLength=function(){return this.stringKeys_().length},jspb.Map.prototype.clear=function(){this.map_={},this.arrClean=!1},jspb.Map.prototype.del=function(e){e=e.toString();var t=this.map_.hasOwnProperty(e);return delete this.map_[e],this.arrClean=!1,t},jspb.Map.prototype.getEntryList=function(){var e=[],t=this.stringKeys_();t.sort();for(var l=0;l<t.length;l++){var n=this.map_[t[l]];e.push([n.key,n.value])}return e},jspb.Map.prototype.entries=function(){var e=[],t=this.stringKeys_();t.sort();for(var l=0;l<t.length;l++){var n=this.map_[t[l]];e.push([n.key,this.wrapEntry_(n)])}return new jspb.Map.ArrayIteratorIterable_(e)},jspb.Map.prototype.keys=function(){var e=[],t=this.stringKeys_();t.sort();for(var l=0;l<t.length;l++)e.push(this.map_[t[l]].key);return new jspb.Map.ArrayIteratorIterable_(e)},jspb.Map.prototype.values=function(){var e=[],t=this.stringKeys_();t.sort();for(var l=0;l<t.length;l++)e.push(this.wrapEntry_(this.map_[t[l]]));return new jspb.Map.ArrayIteratorIterable_(e)},jspb.Map.prototype.forEach=function(e,t){var l=this.stringKeys_();l.sort();for(var n=0;n<l.length;n++){var r=this.map_[l[n]];e.call(t,this.wrapEntry_(r),r.key,this)}},jspb.Map.prototype.set=function(e,t){var l=new jspb.Map.Entry_(e);return this.valueCtor_?(l.valueWrapper=t,l.value=t.toArray()):l.value=t,this.map_[e.toString()]=l,this.arrClean=!1,this},jspb.Map.prototype.wrapEntry_=function(e){return this.valueCtor_?(e.valueWrapper||(e.valueWrapper=new this.valueCtor_(e.value)),e.valueWrapper):e.value},jspb.Map.prototype.get=function(e){if(e=this.map_[e.toString()])return this.wrapEntry_(e)},jspb.Map.prototype.has=function(e){return e.toString()in this.map_},jspb.Map.prototype.serializeBinary=function(e,t,l,n,r){var o=this.stringKeys_();o.sort();for(var u=0;u<o.length;u++){var i=this.map_[o[u]];t.beginSubMessage(e),l.call(t,1,i.key),this.valueCtor_?n.call(t,2,this.wrapEntry_(i),r):n.call(t,2,i.value),t.endSubMessage()}},jspb.Map.deserializeBinary=function(e,t,l,n,r,o){for(var u=void 0;t.nextField()&&!t.isEndGroup();){var i=t.getFieldNumber();1==i?o=l.call(t):2==i&&(e.valueCtor_?(goog.asserts.assert(r),u=new e.valueCtor_,n.call(t,u,r)):u=n.call(t))}goog.asserts.assert(void 0!=o),goog.asserts.assert(void 0!=u),e.set(o,u)},jspb.Map.prototype.stringKeys_=function(){var e,t=this.map_,l=[];for(e in t)Object.prototype.hasOwnProperty.call(t,e)&&l.push(e);return l},jspb.Map.Entry_=function(e,t){this.key=e,this.value=t,this.valueWrapper=void 0},goog.array={},goog.NATIVE_ARRAY_PROTOTYPES=goog.TRUSTED_SITE,goog.array.ASSUME_NATIVE_FUNCTIONS=!1,goog.array.peek=function(e){return e[e.length-1]},goog.array.last=goog.array.peek,goog.array.indexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.indexOf)?function(e,t,l){return goog.asserts.assert(null!=e.length),Array.prototype.indexOf.call(e,t,l)}:function(e,t,l){if(l=null==l?0:0>l?Math.max(0,e.length+l):l,goog.isString(e))return goog.isString(t)&&1==t.length?e.indexOf(t,l):-1;for(;l<e.length;l++)if(l in e&&e[l]===t)return l;return-1},goog.array.lastIndexOf=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.lastIndexOf)?function(e,t,l){return goog.asserts.assert(null!=e.length),Array.prototype.lastIndexOf.call(e,t,null==l?e.length-1:l)}:function(e,t,l){if(0>(l=null==l?e.length-1:l)&&(l=Math.max(0,e.length+l)),goog.isString(e))return goog.isString(t)&&1==t.length?e.lastIndexOf(t,l):-1;for(;0<=l;l--)if(l in e&&e[l]===t)return l;return-1},goog.array.forEach=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.forEach)?function(e,t,l){goog.asserts.assert(null!=e.length),Array.prototype.forEach.call(e,t,l)}:function(e,t,l){for(var n=e.length,r=goog.isString(e)?e.split(""):e,o=0;o<n;o++)o in r&&t.call(l,r[o],o,e)},goog.array.forEachRight=function(e,t,l){var n=e.length,r=goog.isString(e)?e.split(""):e;for(n=n-1;0<=n;--n)n in r&&t.call(l,r[n],n,e)},goog.array.filter=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.filter)?function(e,t,l){return goog.asserts.assert(null!=e.length),Array.prototype.filter.call(e,t,l)}:function(e,t,l){for(var n=e.length,r=[],o=0,u=goog.isString(e)?e.split(""):e,i=0;i<n;i++)if(i in u){var s=u[i];t.call(l,s,i,e)&&(r[o++]=s)}return r},goog.array.map=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.map)?function(e,t,l){return goog.asserts.assert(null!=e.length),Array.prototype.map.call(e,t,l)}:function(e,t,l){for(var n=e.length,r=Array(n),o=goog.isString(e)?e.split(""):e,u=0;u<n;u++)u in o&&(r[u]=t.call(l,o[u],u,e));return r},goog.array.reduce=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduce)?function(e,t,l,n){return goog.asserts.assert(null!=e.length),n&&(t=goog.bind(t,n)),Array.prototype.reduce.call(e,t,l)}:function(e,t,l,n){var r=l;return goog.array.forEach(e,function(l,o){r=t.call(n,r,l,o,e)}),r},goog.array.reduceRight=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.reduceRight)?function(e,t,l,n){return goog.asserts.assert(null!=e.length),goog.asserts.assert(null!=t),n&&(t=goog.bind(t,n)),Array.prototype.reduceRight.call(e,t,l)}:function(e,t,l,n){var r=l;return goog.array.forEachRight(e,function(l,o){r=t.call(n,r,l,o,e)}),r},goog.array.some=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.some)?function(e,t,l){return goog.asserts.assert(null!=e.length),Array.prototype.some.call(e,t,l)}:function(e,t,l){for(var n=e.length,r=goog.isString(e)?e.split(""):e,o=0;o<n;o++)if(o in r&&t.call(l,r[o],o,e))return!0;return!1},goog.array.every=goog.NATIVE_ARRAY_PROTOTYPES&&(goog.array.ASSUME_NATIVE_FUNCTIONS||Array.prototype.every)?function(e,t,l){return goog.asserts.assert(null!=e.length),Array.prototype.every.call(e,t,l)}:function(e,t,l){for(var n=e.length,r=goog.isString(e)?e.split(""):e,o=0;o<n;o++)if(o in r&&!t.call(l,r[o],o,e))return!1;return!0},goog.array.count=function(e,t,l){var n=0;return goog.array.forEach(e,function(e,r,o){t.call(l,e,r,o)&&++n},l),n},goog.array.find=function(e,t,l){return 0>(t=goog.array.findIndex(e,t,l))?null:goog.isString(e)?e.charAt(t):e[t]},goog.array.findIndex=function(e,t,l){for(var n=e.length,r=goog.isString(e)?e.split(""):e,o=0;o<n;o++)if(o in r&&t.call(l,r[o],o,e))return o;return-1},goog.array.findRight=function(e,t,l){return 0>(t=goog.array.findIndexRight(e,t,l))?null:goog.isString(e)?e.charAt(t):e[t]},goog.array.findIndexRight=function(e,t,l){var n=e.length,r=goog.isString(e)?e.split(""):e;for(n=n-1;0<=n;n--)if(n in r&&t.call(l,r[n],n,e))return n;return-1},goog.array.contains=function(e,t){return 0<=goog.array.indexOf(e,t)},goog.array.isEmpty=function(e){return 0==e.length},goog.array.clear=function(e){if(!goog.isArray(e))for(var t=e.length-1;0<=t;t--)delete e[t];e.length=0},goog.array.insert=function(e,t){goog.array.contains(e,t)||e.push(t)},goog.array.insertAt=function(e,t,l){goog.array.splice(e,l,0,t)},goog.array.insertArrayAt=function(e,t,l){goog.partial(goog.array.splice,e,l,0).apply(null,t)},goog.array.insertBefore=function(e,t,l){var n;2==arguments.length||0>(n=goog.array.indexOf(e,l))?e.push(t):goog.array.insertAt(e,t,n)},goog.array.remove=function(e,t){var l,n=goog.array.indexOf(e,t);return(l=0<=n)&&goog.array.removeAt(e,n),l},goog.array.removeAt=function(e,t){return goog.asserts.assert(null!=e.length),1==Array.prototype.splice.call(e,t,1).length},goog.array.removeIf=function(e,t,l){return 0<=(t=goog.array.findIndex(e,t,l))&&(goog.array.removeAt(e,t),!0)},goog.array.removeAllIf=function(e,t,l){var n=0;return goog.array.forEachRight(e,function(r,o){t.call(l,r,o,e)&&goog.array.removeAt(e,o)&&n++}),n},goog.array.concat=function(e){return Array.prototype.concat.apply(Array.prototype,arguments)},goog.array.join=function(e){return Array.prototype.concat.apply(Array.prototype,arguments)},goog.array.toArray=function(e){var t=e.length;if(0<t){for(var l=Array(t),n=0;n<t;n++)l[n]=e[n];return l}return[]},goog.array.clone=goog.array.toArray,goog.array.extend=function(e,t){for(var l=1;l<arguments.length;l++){var n=arguments[l];if(goog.isArrayLike(n)){var r=e.length||0,o=n.length||0;e.length=r+o;for(var u=0;u<o;u++)e[r+u]=n[u]}else e.push(n)}},goog.array.splice=function(e,t,l,n){return goog.asserts.assert(null!=e.length),Array.prototype.splice.apply(e,goog.array.slice(arguments,1))},goog.array.slice=function(e,t,l){return goog.asserts.assert(null!=e.length),2>=arguments.length?Array.prototype.slice.call(e,t):Array.prototype.slice.call(e,t,l)},goog.array.removeDuplicates=function(e,t,l){t=t||e;var n=function(e){return goog.isObject(e)?"o"+goog.getUid(e):_typeof(e).charAt(0)+e};l=l||n;n={};for(var r=0,o=0;o<e.length;){var u=e[o++],i=l(u);Object.prototype.hasOwnProperty.call(n,i)||(n[i]=!0,t[r++]=u)}t.length=r},goog.array.binarySearch=function(e,t,l){return goog.array.binarySearch_(e,l||goog.array.defaultCompare,!1,t)},goog.array.binarySelect=function(e,t,l){return goog.array.binarySearch_(e,t,!0,void 0,l)},goog.array.binarySearch_=function(e,t,l,n,r){for(var o,u=0,i=e.length;u<i;){var s,a=u+i>>1;0<(s=l?t.call(r,e[a],a,e):t(n,e[a]))?u=a+1:(i=a,o=!s)}return o?u:~u},goog.array.sort=function(e,t){e.sort(t||goog.array.defaultCompare)},goog.array.stableSort=function(e,t){for(var l=0;l<e.length;l++)e[l]={index:l,value:e[l]};var n=t||goog.array.defaultCompare;for(goog.array.sort(e,function(e,t){return n(e.value,t.value)||e.index-t.index}),l=0;l<e.length;l++)e[l]=e[l].value},goog.array.sortByKey=function(e,t,l){var n=l||goog.array.defaultCompare;goog.array.sort(e,function(e,l){return n(t(e),t(l))})},goog.array.sortObjectsByKey=function(e,t,l){goog.array.sortByKey(e,function(e){return e[t]},l)},goog.array.isSorted=function(e,t,l){t=t||goog.array.defaultCompare;for(var n=1;n<e.length;n++){var r=t(e[n-1],e[n]);if(0<r||0==r&&l)return!1}return!0},goog.array.equals=function(e,t,l){if(!goog.isArrayLike(e)||!goog.isArrayLike(t)||e.length!=t.length)return!1;var n=e.length;l=l||goog.array.defaultCompareEquality;for(var r=0;r<n;r++)if(!l(e[r],t[r]))return!1;return!0},goog.array.compare3=function(e,t,l){l=l||goog.array.defaultCompare;for(var n=Math.min(e.length,t.length),r=0;r<n;r++){var o=l(e[r],t[r]);if(0!=o)return o}return goog.array.defaultCompare(e.length,t.length)},goog.array.defaultCompare=function(e,t){return e>t?1:e<t?-1:0},goog.array.inverseDefaultCompare=function(e,t){return-goog.array.defaultCompare(e,t)},goog.array.defaultCompareEquality=function(e,t){return e===t},goog.array.binaryInsert=function(e,t,l){return 0>(l=goog.array.binarySearch(e,t,l))&&(goog.array.insertAt(e,t,-(l+1)),!0)},goog.array.binaryRemove=function(e,t,l){return 0<=(t=goog.array.binarySearch(e,t,l))&&goog.array.removeAt(e,t)},goog.array.bucket=function(e,t,l){for(var n={},r=0;r<e.length;r++){var o=e[r],u=t.call(l,o,r,e);goog.isDef(u)&&(n[u]||(n[u]=[])).push(o)}return n},goog.array.toObject=function(e,t,l){var n={};return goog.array.forEach(e,function(r,o){n[t.call(l,r,o,e)]=r}),n},goog.array.range=function(e,t,l){var n=[],r=0,o=e;if(l=l||1,void 0!==t&&(r=e,o=t),0>l*(o-r))return[];if(0<l)for(e=r;e<o;e+=l)n.push(e);else for(e=r;e>o;e+=l)n.push(e);return n},goog.array.repeat=function(e,t){for(var l=[],n=0;n<t;n++)l[n]=e;return l},goog.array.flatten=function(e){for(var t=[],l=0;l<arguments.length;l++){var n=arguments[l];if(goog.isArray(n))for(var r=0;r<n.length;r+=8192)for(var o=goog.array.slice(n,r,r+8192),u=(o=goog.array.flatten.apply(null,o),0);u<o.length;u++)t.push(o[u]);else t.push(n)}return t},goog.array.rotate=function(e,t){return goog.asserts.assert(null!=e.length),e.length&&(0<(t%=e.length)?Array.prototype.unshift.apply(e,e.splice(-t,t)):0>t&&Array.prototype.push.apply(e,e.splice(0,-t))),e},goog.array.moveItem=function(e,t,l){goog.asserts.assert(0<=t&&t<e.length),goog.asserts.assert(0<=l&&l<e.length),t=Array.prototype.splice.call(e,t,1),Array.prototype.splice.call(e,l,0,t[0])},goog.array.zip=function(e){if(!arguments.length)return[];for(var t=[],l=arguments[0].length,n=1;n<arguments.length;n++)arguments[n].length<l&&(l=arguments[n].length);for(n=0;n<l;n++){for(var r=[],o=0;o<arguments.length;o++)r.push(arguments[o][n]);t.push(r)}return t},goog.array.shuffle=function(e,t){for(var l=t||Math.random,n=e.length-1;0<n;n--){var r=Math.floor(l()*(n+1)),o=e[n];e[n]=e[r],e[r]=o}},goog.array.copyByIndex=function(e,t){var l=[];return goog.array.forEach(t,function(t){l.push(e[t])}),l},goog.crypt={},goog.crypt.stringToByteArray=function(e){for(var t=[],l=0,n=0;n<e.length;n++){for(var r=e.charCodeAt(n);255<r;)t[l++]=255&r,r>>=8;t[l++]=r}return t},goog.crypt.byteArrayToString=function(e){if(8192>=e.length)return String.fromCharCode.apply(null,e);for(var t="",l=0;l<e.length;l+=8192){var n=goog.array.slice(e,l,l+8192);t=t+String.fromCharCode.apply(null,n)}return t},goog.crypt.byteArrayToHex=function(e){return goog.array.map(e,function(e){return 1<(e=e.toString(16)).length?e:"0"+e}).join("")},goog.crypt.hexToByteArray=function(e){goog.asserts.assert(0==e.length%2,"Key string length must be multiple of 2");for(var t=[],l=0;l<e.length;l+=2)t.push(parseInt(e.substring(l,l+2),16));return t},goog.crypt.stringToUtf8ByteArray=function(e){for(var t=[],l=0,n=0;n<e.length;n++){var r=e.charCodeAt(n);128>r?t[l++]=r:(2048>r?t[l++]=r>>6|192:(55296==(64512&r)&&n+1<e.length&&56320==(64512&e.charCodeAt(n+1))?(r=65536+((1023&r)<<10)+(1023&e.charCodeAt(++n)),t[l++]=r>>18|240,t[l++]=r>>12&63|128):t[l++]=r>>12|224,t[l++]=r>>6&63|128),t[l++]=63&r|128)}return t},goog.crypt.utf8ByteArrayToString=function(e){for(var t=[],l=0,n=0;l<e.length;){if(128>(u=e[l++]))t[n++]=String.fromCharCode(u);else if(191<u&&224>u){var r=e[l++];t[n++]=String.fromCharCode((31&u)<<6|63&r)}else if(239<u&&365>u){r=e[l++];var o=e[l++],u=((7&u)<<18|(63&r)<<12|(63&o)<<6|63&e[l++])-65536;t[n++]=String.fromCharCode(55296+(u>>10)),t[n++]=String.fromCharCode(56320+(1023&u))}else r=e[l++],o=e[l++],t[n++]=String.fromCharCode((15&u)<<12|(63&r)<<6|63&o)}return t.join("")},goog.crypt.xorByteArray=function(e,t){goog.asserts.assert(e.length==t.length,"XOR array lengths must match");for(var l=[],n=0;n<e.length;n++)l.push(e[n]^t[n]);return l},goog.labs={},goog.labs.userAgent={},goog.labs.userAgent.util={},goog.labs.userAgent.util.getNativeUserAgentString_=function(){var e=goog.labs.userAgent.util.getNavigator_();return e&&(e=e.userAgent)?e:""},goog.labs.userAgent.util.getNavigator_=function(){return goog.global.navigator},goog.labs.userAgent.util.userAgent_=goog.labs.userAgent.util.getNativeUserAgentString_(),goog.labs.userAgent.util.setUserAgent=function(e){goog.labs.userAgent.util.userAgent_=e||goog.labs.userAgent.util.getNativeUserAgentString_()},goog.labs.userAgent.util.getUserAgent=function(){return goog.labs.userAgent.util.userAgent_},goog.labs.userAgent.util.matchUserAgent=function(e){var t=goog.labs.userAgent.util.getUserAgent();return goog.string.contains(t,e)},goog.labs.userAgent.util.matchUserAgentIgnoreCase=function(e){var t=goog.labs.userAgent.util.getUserAgent();return goog.string.caseInsensitiveContains(t,e)},goog.labs.userAgent.util.extractVersionTuples=function(e){for(var t,l=RegExp("(\\w[\\w ]+)/([^\\s]+)\\s*(?:\\((.*?)\\))?","g"),n=[];t=l.exec(e);)n.push([t[1],t[2],t[3]||void 0]);return n},goog.labs.userAgent.platform={},goog.labs.userAgent.platform.isAndroid=function(){return goog.labs.userAgent.util.matchUserAgent("Android")},goog.labs.userAgent.platform.isIpod=function(){return goog.labs.userAgent.util.matchUserAgent("iPod")},goog.labs.userAgent.platform.isIphone=function(){return goog.labs.userAgent.util.matchUserAgent("iPhone")&&!goog.labs.userAgent.util.matchUserAgent("iPod")&&!goog.labs.userAgent.util.matchUserAgent("iPad")},goog.labs.userAgent.platform.isIpad=function(){return goog.labs.userAgent.util.matchUserAgent("iPad")},goog.labs.userAgent.platform.isIos=function(){return goog.labs.userAgent.platform.isIphone()||goog.labs.userAgent.platform.isIpad()||goog.labs.userAgent.platform.isIpod()},goog.labs.userAgent.platform.isMacintosh=function(){return goog.labs.userAgent.util.matchUserAgent("Macintosh")},goog.labs.userAgent.platform.isLinux=function(){return goog.labs.userAgent.util.matchUserAgent("Linux")},goog.labs.userAgent.platform.isWindows=function(){return goog.labs.userAgent.util.matchUserAgent("Windows")},goog.labs.userAgent.platform.isChromeOS=function(){return goog.labs.userAgent.util.matchUserAgent("CrOS")},goog.labs.userAgent.platform.getVersion=function(){var e=goog.labs.userAgent.util.getUserAgent(),t="";return goog.labs.userAgent.platform.isWindows()?t=(e=(t=/Windows (?:NT|Phone) ([0-9.]+)/).exec(e))?e[1]:"0.0":goog.labs.userAgent.platform.isIos()?t=(e=(t=/(?:iPhone|iPod|iPad|CPU)\s+OS\s+(\S+)/).exec(e))&&e[1].replace(/_/g,"."):goog.labs.userAgent.platform.isMacintosh()?t=(e=(t=/Mac OS X ([0-9_.]+)/).exec(e))?e[1].replace(/_/g,"."):"10":goog.labs.userAgent.platform.isAndroid()?t=(e=(t=/Android\s+([^\);]+)(\)|;)/).exec(e))&&e[1]:goog.labs.userAgent.platform.isChromeOS()&&(t=(e=(t=/(?:CrOS\s+(?:i686|x86_64)\s+([0-9.]+))/).exec(e))&&e[1]),t||""},goog.labs.userAgent.platform.isVersionOrHigher=function(e){return 0<=goog.string.compareVersions(goog.labs.userAgent.platform.getVersion(),e)},goog.object={},goog.object.forEach=function(e,t,l){for(var n in e)t.call(l,e[n],n,e)},goog.object.filter=function(e,t,l){var n,r={};for(n in e)t.call(l,e[n],n,e)&&(r[n]=e[n]);return r},goog.object.map=function(e,t,l){var n,r={};for(n in e)r[n]=t.call(l,e[n],n,e);return r},goog.object.some=function(e,t,l){for(var n in e)if(t.call(l,e[n],n,e))return!0;return!1},goog.object.every=function(e,t,l){for(var n in e)if(!t.call(l,e[n],n,e))return!1;return!0},goog.object.getCount=function(e){var t,l=0;for(t in e)l++;return l},goog.object.getAnyKey=function(e){for(var t in e)return t},goog.object.getAnyValue=function(e){for(var t in e)return e[t]},goog.object.contains=function(e,t){return goog.object.containsValue(e,t)},goog.object.getValues=function(e){var t,l=[],n=0;for(t in e)l[n++]=e[t];return l},goog.object.getKeys=function(e){var t,l=[],n=0;for(t in e)l[n++]=t;return l},goog.object.getValueByKeys=function(e,t){for(var l=(n=goog.isArrayLike(t))?t:arguments,n=n?0:1;n<l.length&&(e=e[l[n]],goog.isDef(e));n++);return e},goog.object.containsKey=function(e,t){return null!==e&&t in e},goog.object.containsValue=function(e,t){for(var l in e)if(e[l]==t)return!0;return!1},goog.object.findKey=function(e,t,l){for(var n in e)if(t.call(l,e[n],n,e))return n},goog.object.findValue=function(e,t,l){return(t=goog.object.findKey(e,t,l))&&e[t]},goog.object.isEmpty=function(e){for(var t in e)return!1;return!0},goog.object.clear=function(e){for(var t in e)delete e[t]},goog.object.remove=function(e,t){var l;return(l=t in e)&&delete e[t],l},goog.object.add=function(e,t,l){if(null!==e&&t in e)throw Error('The object already contains the key "'+t+'"');goog.object.set(e,t,l)},goog.object.get=function(e,t,l){return null!==e&&t in e?e[t]:l},goog.object.set=function(e,t,l){e[t]=l},goog.object.setIfUndefined=function(e,t,l){return t in e?e[t]:e[t]=l},goog.object.setWithReturnValueIfNotSet=function(e,t,l){return t in e?e[t]:(l=l(),e[t]=l)},goog.object.equals=function(e,t){for(var l in e)if(!(l in t)||e[l]!==t[l])return!1;for(l in t)if(!(l in e))return!1;return!0},goog.object.clone=function(e){var t,l={};for(t in e)l[t]=e[t];return l},goog.object.unsafeClone=function(e){if("object"==(l=goog.typeOf(e))||"array"==l){if(goog.isFunction(e.clone))return e.clone();var t,l="array"==l?[]:{};for(t in e)l[t]=goog.object.unsafeClone(e[t]);return l}return e},goog.object.transpose=function(e){var t,l={};for(t in e)l[e[t]]=t;return l},goog.object.PROTOTYPE_FIELDS_="constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" "),goog.object.extend=function(e,t){for(var l,n,r=1;r<arguments.length;r++){for(l in n=arguments[r])e[l]=n[l];for(var o=0;o<goog.object.PROTOTYPE_FIELDS_.length;o++)l=goog.object.PROTOTYPE_FIELDS_[o],Object.prototype.hasOwnProperty.call(n,l)&&(e[l]=n[l])}},goog.object.create=function(e){var t=arguments.length;if(1==t&&goog.isArray(arguments[0]))return goog.object.create.apply(null,arguments[0]);if(t%2)throw Error("Uneven number of arguments");for(var l={},n=0;n<t;n+=2)l[arguments[n]]=arguments[n+1];return l},goog.object.createSet=function(e){var t=arguments.length;if(1==t&&goog.isArray(arguments[0]))return goog.object.createSet.apply(null,arguments[0]);for(var l={},n=0;n<t;n++)l[arguments[n]]=!0;return l},goog.object.createImmutableView=function(e){var t=e;return Object.isFrozen&&!Object.isFrozen(e)&&(t=Object.create(e),Object.freeze(t)),t},goog.object.isImmutableView=function(e){return!!Object.isFrozen&&Object.isFrozen(e)},goog.labs.userAgent.browser={},goog.labs.userAgent.browser.matchOpera_=function(){return goog.labs.userAgent.util.matchUserAgent("Opera")||goog.labs.userAgent.util.matchUserAgent("OPR")},goog.labs.userAgent.browser.matchIE_=function(){return goog.labs.userAgent.util.matchUserAgent("Trident")||goog.labs.userAgent.util.matchUserAgent("MSIE")},goog.labs.userAgent.browser.matchEdge_=function(){return goog.labs.userAgent.util.matchUserAgent("Edge")},goog.labs.userAgent.browser.matchFirefox_=function(){return goog.labs.userAgent.util.matchUserAgent("Firefox")},goog.labs.userAgent.browser.matchSafari_=function(){return goog.labs.userAgent.util.matchUserAgent("Safari")&&!(goog.labs.userAgent.browser.matchChrome_()||goog.labs.userAgent.browser.matchCoast_()||goog.labs.userAgent.browser.matchOpera_()||goog.labs.userAgent.browser.matchEdge_()||goog.labs.userAgent.browser.isSilk()||goog.labs.userAgent.util.matchUserAgent("Android"))},goog.labs.userAgent.browser.matchCoast_=function(){return goog.labs.userAgent.util.matchUserAgent("Coast")},goog.labs.userAgent.browser.matchIosWebview_=function(){return(goog.labs.userAgent.util.matchUserAgent("iPad")||goog.labs.userAgent.util.matchUserAgent("iPhone"))&&!goog.labs.userAgent.browser.matchSafari_()&&!goog.labs.userAgent.browser.matchChrome_()&&!goog.labs.userAgent.browser.matchCoast_()&&goog.labs.userAgent.util.matchUserAgent("AppleWebKit")},goog.labs.userAgent.browser.matchChrome_=function(){return(goog.labs.userAgent.util.matchUserAgent("Chrome")||goog.labs.userAgent.util.matchUserAgent("CriOS"))&&!goog.labs.userAgent.browser.matchOpera_()&&!goog.labs.userAgent.browser.matchEdge_()},goog.labs.userAgent.browser.matchAndroidBrowser_=function(){return goog.labs.userAgent.util.matchUserAgent("Android")&&!(goog.labs.userAgent.browser.isChrome()||goog.labs.userAgent.browser.isFirefox()||goog.labs.userAgent.browser.isOpera()||goog.labs.userAgent.browser.isSilk())},goog.labs.userAgent.browser.isOpera=goog.labs.userAgent.browser.matchOpera_,goog.labs.userAgent.browser.isIE=goog.labs.userAgent.browser.matchIE_,goog.labs.userAgent.browser.isEdge=goog.labs.userAgent.browser.matchEdge_,goog.labs.userAgent.browser.isFirefox=goog.labs.userAgent.browser.matchFirefox_,goog.labs.userAgent.browser.isSafari=goog.labs.userAgent.browser.matchSafari_,goog.labs.userAgent.browser.isCoast=goog.labs.userAgent.browser.matchCoast_,goog.labs.userAgent.browser.isIosWebview=goog.labs.userAgent.browser.matchIosWebview_,goog.labs.userAgent.browser.isChrome=goog.labs.userAgent.browser.matchChrome_,goog.labs.userAgent.browser.isAndroidBrowser=goog.labs.userAgent.browser.matchAndroidBrowser_,goog.labs.userAgent.browser.isSilk=function(){return goog.labs.userAgent.util.matchUserAgent("Silk")},goog.labs.userAgent.browser.getVersion=function(){function e(e){return e=goog.array.find(e,n),l[e]||""}var t=goog.labs.userAgent.util.getUserAgent();if(goog.labs.userAgent.browser.isIE())return goog.labs.userAgent.browser.getIEVersion_(t);t=goog.labs.userAgent.util.extractVersionTuples(t);var l={};goog.array.forEach(t,function(e){l[e[0]]=e[1]});var n=goog.partial(goog.object.containsKey,l);return goog.labs.userAgent.browser.isOpera()?e(["Version","Opera","OPR"]):goog.labs.userAgent.browser.isEdge()?e(["Edge"]):goog.labs.userAgent.browser.isChrome()?e(["Chrome","CriOS"]):(t=t[2])&&t[1]||""},goog.labs.userAgent.browser.isVersionOrHigher=function(e){return 0<=goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(),e)},goog.labs.userAgent.browser.getIEVersion_=function(e){if((t=/rv: *([\d\.]*)/.exec(e))&&t[1])return t[1];var t="",l=/MSIE +([\d\.]+)/.exec(e);if(l&&l[1])if(e=/Trident\/(\d.\d)/.exec(e),"7.0"==l[1])if(e&&e[1])switch(e[1]){case"4.0":t="8.0";break;case"5.0":t="9.0";break;case"6.0":t="10.0";break;case"7.0":t="11.0"}else t="7.0";else t=l[1];return t},goog.labs.userAgent.engine={},goog.labs.userAgent.engine.isPresto=function(){return goog.labs.userAgent.util.matchUserAgent("Presto")},goog.labs.userAgent.engine.isTrident=function(){return goog.labs.userAgent.util.matchUserAgent("Trident")||goog.labs.userAgent.util.matchUserAgent("MSIE")},goog.labs.userAgent.engine.isEdge=function(){return goog.labs.userAgent.util.matchUserAgent("Edge")},goog.labs.userAgent.engine.isWebKit=function(){return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit")&&!goog.labs.userAgent.engine.isEdge()},goog.labs.userAgent.engine.isGecko=function(){return goog.labs.userAgent.util.matchUserAgent("Gecko")&&!goog.labs.userAgent.engine.isWebKit()&&!goog.labs.userAgent.engine.isTrident()&&!goog.labs.userAgent.engine.isEdge()},goog.labs.userAgent.engine.getVersion=function(){if(t=goog.labs.userAgent.util.getUserAgent()){var e,t=goog.labs.userAgent.util.extractVersionTuples(t),l=goog.labs.userAgent.engine.getEngineTuple_(t);if(l)return"Gecko"==l[0]?goog.labs.userAgent.engine.getVersionForKey_(t,"Firefox"):l[1];if((t=t[0])&&(e=t[2])&&(e=/Trident\/([^\s;]+)/.exec(e)))return e[1]}return""},goog.labs.userAgent.engine.getEngineTuple_=function(e){if(!goog.labs.userAgent.engine.isEdge())return e[1];for(var t=0;t<e.length;t++){var l=e[t];if("Edge"==l[0])return l}},goog.labs.userAgent.engine.isVersionOrHigher=function(e){return 0<=goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(),e)},goog.labs.userAgent.engine.getVersionForKey_=function(e,t){var l=goog.array.find(e,function(e){return t==e[0]});return l&&l[1]||""},goog.userAgent={},goog.userAgent.ASSUME_IE=!1,goog.userAgent.ASSUME_EDGE=!1,goog.userAgent.ASSUME_GECKO=!1,goog.userAgent.ASSUME_WEBKIT=!1,goog.userAgent.ASSUME_MOBILE_WEBKIT=!1,goog.userAgent.ASSUME_OPERA=!1,goog.userAgent.ASSUME_ANY_VERSION=!1,goog.userAgent.BROWSER_KNOWN_=goog.userAgent.ASSUME_IE||goog.userAgent.ASSUME_EDGE||goog.userAgent.ASSUME_GECKO||goog.userAgent.ASSUME_MOBILE_WEBKIT||goog.userAgent.ASSUME_WEBKIT||goog.userAgent.ASSUME_OPERA,goog.userAgent.getUserAgentString=function(){return goog.labs.userAgent.util.getUserAgent()},goog.userAgent.getNavigator=function(){return goog.global.navigator||null},goog.userAgent.OPERA=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_OPERA:goog.labs.userAgent.browser.isOpera(),goog.userAgent.IE=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_IE:goog.labs.userAgent.browser.isIE(),goog.userAgent.EDGE=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_EDGE:goog.labs.userAgent.engine.isEdge(),goog.userAgent.EDGE_OR_IE=goog.userAgent.EDGE||goog.userAgent.IE,goog.userAgent.GECKO=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_GECKO:goog.labs.userAgent.engine.isGecko(),goog.userAgent.WEBKIT=goog.userAgent.BROWSER_KNOWN_?goog.userAgent.ASSUME_WEBKIT||goog.userAgent.ASSUME_MOBILE_WEBKIT:goog.labs.userAgent.engine.isWebKit(),goog.userAgent.isMobile_=function(){return goog.userAgent.WEBKIT&&goog.labs.userAgent.util.matchUserAgent("Mobile")},goog.userAgent.MOBILE=goog.userAgent.ASSUME_MOBILE_WEBKIT||goog.userAgent.isMobile_(),goog.userAgent.SAFARI=goog.userAgent.WEBKIT,goog.userAgent.determinePlatform_=function(){var e=goog.userAgent.getNavigator();return e&&e.platform||""},goog.userAgent.PLATFORM=goog.userAgent.determinePlatform_(),goog.userAgent.ASSUME_MAC=!1,goog.userAgent.ASSUME_WINDOWS=!1,goog.userAgent.ASSUME_LINUX=!1,goog.userAgent.ASSUME_X11=!1,goog.userAgent.ASSUME_ANDROID=!1,goog.userAgent.ASSUME_IPHONE=!1,goog.userAgent.ASSUME_IPAD=!1,goog.userAgent.PLATFORM_KNOWN_=goog.userAgent.ASSUME_MAC||goog.userAgent.ASSUME_WINDOWS||goog.userAgent.ASSUME_LINUX||goog.userAgent.ASSUME_X11||goog.userAgent.ASSUME_ANDROID||goog.userAgent.ASSUME_IPHONE||goog.userAgent.ASSUME_IPAD,goog.userAgent.MAC=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_MAC:goog.labs.userAgent.platform.isMacintosh(),goog.userAgent.WINDOWS=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_WINDOWS:goog.labs.userAgent.platform.isWindows(),goog.userAgent.isLegacyLinux_=function(){return goog.labs.userAgent.platform.isLinux()||goog.labs.userAgent.platform.isChromeOS()},goog.userAgent.LINUX=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_LINUX:goog.userAgent.isLegacyLinux_(),goog.userAgent.isX11_=function(){var e=goog.userAgent.getNavigator();return!!e&&goog.string.contains(e.appVersion||"","X11")},goog.userAgent.X11=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_X11:goog.userAgent.isX11_(),goog.userAgent.ANDROID=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_ANDROID:goog.labs.userAgent.platform.isAndroid(),goog.userAgent.IPHONE=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPHONE:goog.labs.userAgent.platform.isIphone(),goog.userAgent.IPAD=goog.userAgent.PLATFORM_KNOWN_?goog.userAgent.ASSUME_IPAD:goog.labs.userAgent.platform.isIpad(),goog.userAgent.operaVersion_=function(){var e=goog.global.opera.version;try{return e()}catch(t){return e}},goog.userAgent.determineVersion_=function(){if(goog.userAgent.OPERA&&goog.global.opera)return goog.userAgent.operaVersion_();var e="",t=goog.userAgent.getVersionRegexResult_();return t&&(e=t?t[1]:""),goog.userAgent.IE&&(t=goog.userAgent.getDocumentMode_())>parseFloat(e)?String(t):e},goog.userAgent.getVersionRegexResult_=function(){var e=goog.userAgent.getUserAgentString();return goog.userAgent.GECKO?/rv\:([^\);]+)(\)|;)/.exec(e):goog.userAgent.EDGE?/Edge\/([\d\.]+)/.exec(e):goog.userAgent.IE?/\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(e):goog.userAgent.WEBKIT?/WebKit\/(\S+)/.exec(e):void 0},goog.userAgent.getDocumentMode_=function(){var e=goog.global.document;return e?e.documentMode:void 0},goog.userAgent.VERSION=goog.userAgent.determineVersion_(),goog.userAgent.compare=function(e,t){return goog.string.compareVersions(e,t)},goog.userAgent.isVersionOrHigherCache_={},goog.userAgent.isVersionOrHigher=function(e){return goog.userAgent.ASSUME_ANY_VERSION||goog.userAgent.isVersionOrHigherCache_[e]||(goog.userAgent.isVersionOrHigherCache_[e]=0<=goog.string.compareVersions(goog.userAgent.VERSION,e))},goog.userAgent.isVersion=goog.userAgent.isVersionOrHigher,goog.userAgent.isDocumentModeOrHigher=function(e){return Number(goog.userAgent.DOCUMENT_MODE)>=e},goog.userAgent.isDocumentMode=goog.userAgent.isDocumentModeOrHigher,goog.userAgent.DOCUMENT_MODE=(a=goog.global.document,b=goog.userAgent.getDocumentMode_(),a&&goog.userAgent.IE?b||("CSS1Compat"==a.compatMode?parseInt(goog.userAgent.VERSION,10):5):void 0),goog.userAgent.product={},goog.userAgent.product.ASSUME_FIREFOX=!1,goog.userAgent.product.ASSUME_IPHONE=!1,goog.userAgent.product.ASSUME_IPAD=!1,goog.userAgent.product.ASSUME_ANDROID=!1,goog.userAgent.product.ASSUME_CHROME=!1,goog.userAgent.product.ASSUME_SAFARI=!1,goog.userAgent.product.PRODUCT_KNOWN_=goog.userAgent.ASSUME_IE||goog.userAgent.ASSUME_EDGE||goog.userAgent.ASSUME_OPERA||goog.userAgent.product.ASSUME_FIREFOX||goog.userAgent.product.ASSUME_IPHONE||goog.userAgent.product.ASSUME_IPAD||goog.userAgent.product.ASSUME_ANDROID||goog.userAgent.product.ASSUME_CHROME||goog.userAgent.product.ASSUME_SAFARI,goog.userAgent.product.OPERA=goog.userAgent.OPERA,goog.userAgent.product.IE=goog.userAgent.IE,goog.userAgent.product.EDGE=goog.userAgent.EDGE,goog.userAgent.product.FIREFOX=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_FIREFOX:goog.labs.userAgent.browser.isFirefox(),goog.userAgent.product.isIphoneOrIpod_=function(){return goog.labs.userAgent.platform.isIphone()||goog.labs.userAgent.platform.isIpod()},goog.userAgent.product.IPHONE=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_IPHONE:goog.userAgent.product.isIphoneOrIpod_(),goog.userAgent.product.IPAD=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_IPAD:goog.labs.userAgent.platform.isIpad(),goog.userAgent.product.ANDROID=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_ANDROID:goog.labs.userAgent.browser.isAndroidBrowser(),goog.userAgent.product.CHROME=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_CHROME:goog.labs.userAgent.browser.isChrome(),goog.userAgent.product.isSafariDesktop_=function(){return goog.labs.userAgent.browser.isSafari()&&!goog.labs.userAgent.platform.isIos()},goog.userAgent.product.SAFARI=goog.userAgent.product.PRODUCT_KNOWN_?goog.userAgent.product.ASSUME_SAFARI:goog.userAgent.product.isSafariDesktop_(),goog.crypt.base64={},goog.crypt.base64.byteToCharMap_=null,goog.crypt.base64.charToByteMap_=null,goog.crypt.base64.byteToCharMapWebSafe_=null,goog.crypt.base64.ENCODED_VALS_BASE="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",goog.crypt.base64.ENCODED_VALS=goog.crypt.base64.ENCODED_VALS_BASE+"+/=",goog.crypt.base64.ENCODED_VALS_WEBSAFE=goog.crypt.base64.ENCODED_VALS_BASE+"-_.",goog.crypt.base64.ASSUME_NATIVE_SUPPORT_=goog.userAgent.GECKO||goog.userAgent.WEBKIT&&!goog.userAgent.product.SAFARI||goog.userAgent.OPERA,goog.crypt.base64.HAS_NATIVE_ENCODE_=goog.crypt.base64.ASSUME_NATIVE_SUPPORT_||"function"==typeof goog.global.btoa,goog.crypt.base64.HAS_NATIVE_DECODE_=goog.crypt.base64.ASSUME_NATIVE_SUPPORT_||!goog.userAgent.product.SAFARI&&!goog.userAgent.IE&&"function"==typeof goog.global.atob,goog.crypt.base64.encodeByteArray=function(e,t){goog.asserts.assert(goog.isArrayLike(e),"encodeByteArray takes an array as a parameter"),goog.crypt.base64.init_();for(var l=t?goog.crypt.base64.byteToCharMapWebSafe_:goog.crypt.base64.byteToCharMap_,n=[],r=0;r<e.length;r+=3){var o=e[r],u=r+1<e.length,i=u?e[r+1]:0,s=r+2<e.length,a=o>>2,c=(o=(3&o)<<4|i>>4,i=(15&i)<<2|(c=s?e[r+2]:0)>>6,63&c);s||(c=64,u||(i=64)),n.push(l[a],l[o],l[i],l[c])}return n.join("")},goog.crypt.base64.encodeString=function(e,t){return goog.crypt.base64.HAS_NATIVE_ENCODE_&&!t?goog.global.btoa(e):goog.crypt.base64.encodeByteArray(goog.crypt.stringToByteArray(e),t)},goog.crypt.base64.decodeString=function(e,t){if(goog.crypt.base64.HAS_NATIVE_DECODE_&&!t)return goog.global.atob(e);var l="";return goog.crypt.base64.decodeStringInternal_(e,function(e){l+=String.fromCharCode(e)}),l},goog.crypt.base64.decodeStringToByteArray=function(e,t){var l=[];return goog.crypt.base64.decodeStringInternal_(e,function(e){l.push(e)}),l},goog.crypt.base64.decodeStringToUint8Array=function(e){goog.asserts.assert(!goog.userAgent.IE||goog.userAgent.isVersionOrHigher("10"),"Browser does not support typed arrays");var t=new Uint8Array(Math.ceil(3*e.length/4)),l=0;return goog.crypt.base64.decodeStringInternal_(e,function(e){t[l++]=e}),t.subarray(0,l)},goog.crypt.base64.decodeStringInternal_=function(e,t){function l(t){for(;n<e.length;){var l=e.charAt(n++),r=goog.crypt.base64.charToByteMap_[l];if(null!=r)return r;if(!goog.string.isEmptyOrWhitespace(l))throw Error("Unknown base64 encoding at char: "+l)}return t}goog.crypt.base64.init_();for(var n=0;;){var r=l(-1),o=l(0),u=l(64),i=l(64);if(64===i&&-1===r)break;t(r<<2|o>>4),64!=u&&(t(o<<4&240|u>>2),64!=i&&t(u<<6&192|i))}},goog.crypt.base64.init_=function(){if(!goog.crypt.base64.byteToCharMap_){goog.crypt.base64.byteToCharMap_={},goog.crypt.base64.charToByteMap_={},goog.crypt.base64.byteToCharMapWebSafe_={};for(var e=0;e<goog.crypt.base64.ENCODED_VALS.length;e++)goog.crypt.base64.byteToCharMap_[e]=goog.crypt.base64.ENCODED_VALS.charAt(e),goog.crypt.base64.charToByteMap_[goog.crypt.base64.byteToCharMap_[e]]=e,goog.crypt.base64.byteToCharMapWebSafe_[e]=goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(e),e>=goog.crypt.base64.ENCODED_VALS_BASE.length&&(goog.crypt.base64.charToByteMap_[goog.crypt.base64.ENCODED_VALS_WEBSAFE.charAt(e)]=e)}},jspb.ExtensionFieldInfo=function(e,t,l,n,r){this.fieldIndex=e,this.fieldName=t,this.ctor=l,this.toObjectFn=n,this.isRepeated=r},jspb.ExtensionFieldBinaryInfo=function(e,t,l,n,r,o){this.fieldInfo=e,this.binaryReaderFn=t,this.binaryWriterFn=l,this.binaryMessageSerializeFn=n,this.binaryMessageDeserializeFn=r,this.isPacked=o},jspb.ExtensionFieldInfo.prototype.isMessageType=function(){return!!this.ctor},jspb.Message=function(){},jspb.Message.GENERATE_TO_OBJECT=!0,jspb.Message.GENERATE_FROM_OBJECT=!goog.DISALLOW_TEST_ONLY_CODE,jspb.Message.GENERATE_TO_STRING=!0,jspb.Message.ASSUME_LOCAL_ARRAYS=!1,jspb.Message.SERIALIZE_EMPTY_TRAILING_FIELDS=!0,jspb.Message.SUPPORTS_UINT8ARRAY_="function"==typeof Uint8Array,jspb.Message.prototype.getJsPbMessageId=function(){return this.messageId_},jspb.Message.getIndex_=function(e,t){return t+e.arrayIndexOffset_},jspb.Message.getFieldNumber_=function(e,t){return t-e.arrayIndexOffset_},jspb.Message.initialize=function(e,t,l,n,r,o){if(e.wrappers_=null,t||(t=l?[l]:[]),e.messageId_=l?String(l):void 0,e.arrayIndexOffset_=0===l?-1:0,e.array=t,jspb.Message.initPivotAndExtensionObject_(e,n),e.convertedFloatingPointFields_={},jspb.Message.SERIALIZE_EMPTY_TRAILING_FIELDS||(e.repeatedFields=r),r)for(t=0;t<r.length;t++)(l=r[t])<e.pivot_?(l=jspb.Message.getIndex_(e,l),e.array[l]=e.array[l]||jspb.Message.EMPTY_LIST_SENTINEL_):(jspb.Message.maybeInitEmptyExtensionObject_(e),e.extensionObject_[l]=e.extensionObject_[l]||jspb.Message.EMPTY_LIST_SENTINEL_);if(o&&o.length)for(t=0;t<o.length;t++)jspb.Message.computeOneofCase(e,o[t])},jspb.Message.EMPTY_LIST_SENTINEL_=goog.DEBUG&&Object.freeze?Object.freeze([]):[],jspb.Message.isArray_=function(e){return jspb.Message.ASSUME_LOCAL_ARRAYS?e instanceof Array:goog.isArray(e)},jspb.Message.initPivotAndExtensionObject_=function(e,t){if(e.array.length){var l=e.array.length-1,n=e.array[l];if(n&&"object"==_typeof(n)&&!jspb.Message.isArray_(n)&&!(jspb.Message.SUPPORTS_UINT8ARRAY_&&n instanceof Uint8Array))return e.pivot_=jspb.Message.getFieldNumber_(e,l),void(e.extensionObject_=n)}-1<t?(e.pivot_=t,e.extensionObject_=null):e.pivot_=Number.MAX_VALUE},jspb.Message.maybeInitEmptyExtensionObject_=function(e){var t=jspb.Message.getIndex_(e,e.pivot_);e.array[t]||(e.extensionObject_=e.array[t]={})},jspb.Message.toObjectList=function(e,t,l){for(var n=[],r=0;r<e.length;r++)n[r]=t.call(e[r],l,e[r]);return n},jspb.Message.toObjectExtension=function(e,t,l,n,r){for(var o in l){var u=l[o],i=n.call(e,u);if(null!=i){for(var s in u.fieldName)if(u.fieldName.hasOwnProperty(s))break;t[s]=u.toObjectFn?u.isRepeated?jspb.Message.toObjectList(i,u.toObjectFn,r):u.toObjectFn(r,i):i}}},jspb.Message.serializeBinaryExtensions=function(e,t,l,n){for(var r in l){var o=l[r],u=o.fieldInfo;if(!o.binaryWriterFn)throw Error("Message extension present that was generated without binary serialization support");var i=n.call(e,u);if(null!=i)if(u.isMessageType()){if(!o.binaryMessageSerializeFn)throw Error("Message extension present holding submessage without binary support enabled, and message is being serialized to binary format");o.binaryWriterFn.call(t,u.fieldIndex,i,o.binaryMessageSerializeFn)}else o.binaryWriterFn.call(t,u.fieldIndex,i)}},jspb.Message.readBinaryExtension=function(e,t,l,n,r){var o=l[t.getFieldNumber()];if(o){if(l=o.fieldInfo,!o.binaryReaderFn)throw Error("Deserializing extension whose generated code does not support binary format");var u;l.isMessageType()?(u=new l.ctor,o.binaryReaderFn.call(t,u,o.binaryMessageDeserializeFn)):u=o.binaryReaderFn.call(t),l.isRepeated&&!o.isPacked?(t=n.call(e,l))?t.push(u):r.call(e,l,[u]):r.call(e,l,u)}else t.skipField()},jspb.Message.getField=function(e,t){if(t<e.pivot_){var l=jspb.Message.getIndex_(e,t),n=e.array[l];return n===jspb.Message.EMPTY_LIST_SENTINEL_?e.array[l]=[]:n}if(e.extensionObject_)return(n=e.extensionObject_[t])===jspb.Message.EMPTY_LIST_SENTINEL_?e.extensionObject_[t]=[]:n},jspb.Message.getRepeatedField=function(e,t){if(t<e.pivot_){var l=jspb.Message.getIndex_(e,t),n=e.array[l];return n===jspb.Message.EMPTY_LIST_SENTINEL_?e.array[l]=[]:n}return(n=e.extensionObject_[t])===jspb.Message.EMPTY_LIST_SENTINEL_?e.extensionObject_[t]=[]:n},jspb.Message.getOptionalFloatingPointField=function(e,t){var l=jspb.Message.getField(e,t);return null==l?l:+l},jspb.Message.getRepeatedFloatingPointField=function(e,t){var l=jspb.Message.getRepeatedField(e,t);if(e.convertedFloatingPointFields_||(e.convertedFloatingPointFields_={}),!e.convertedFloatingPointFields_[t]){for(var n=0;n<l.length;n++)l[n]=+l[n];e.convertedFloatingPointFields_[t]=!0}return l},jspb.Message.bytesAsB64=function(e){return null==e||goog.isString(e)?e:jspb.Message.SUPPORTS_UINT8ARRAY_&&e instanceof Uint8Array?goog.crypt.base64.encodeByteArray(e):(goog.asserts.fail("Cannot coerce to b64 string: "+goog.typeOf(e)),null)},jspb.Message.bytesAsU8=function(e){return null==e||e instanceof Uint8Array?e:goog.isString(e)?goog.crypt.base64.decodeStringToUint8Array(e):(goog.asserts.fail("Cannot coerce to Uint8Array: "+goog.typeOf(e)),null)},jspb.Message.bytesListAsB64=function(e){return jspb.Message.assertConsistentTypes_(e),!e.length||goog.isString(e[0])?e:goog.array.map(e,jspb.Message.bytesAsB64)},jspb.Message.bytesListAsU8=function(e){return jspb.Message.assertConsistentTypes_(e),!e.length||e[0]instanceof Uint8Array?e:goog.array.map(e,jspb.Message.bytesAsU8)},jspb.Message.assertConsistentTypes_=function(e){if(goog.DEBUG&&e&&1<e.length){var t=goog.typeOf(e[0]);goog.array.forEach(e,function(e){goog.typeOf(e)!=t&&goog.asserts.fail("Inconsistent type in JSPB repeated field array. Got "+goog.typeOf(e)+" expected "+t)})}},jspb.Message.getFieldWithDefault=function(e,t,l){return null==(e=jspb.Message.getField(e,t))?l:e},jspb.Message.getFieldProto3=jspb.Message.getFieldWithDefault,jspb.Message.getMapField=function(e,t,l,n){return e.wrappers_||(e.wrappers_={}),t in e.wrappers_?e.wrappers_[t]:l?void 0:((l=jspb.Message.getField(e,t))||(l=[],jspb.Message.setField(e,t,l)),e.wrappers_[t]=new jspb.Map(l,n))},jspb.Message.setField=function(e,t,l){t<e.pivot_?e.array[jspb.Message.getIndex_(e,t)]=l:(jspb.Message.maybeInitEmptyExtensionObject_(e),e.extensionObject_[t]=l)},jspb.Message.setProto3IntField=function(e,t,l){jspb.Message.setFieldIgnoringDefault_(e,t,l,0)},jspb.Message.setProto3StringIntField=function(e,t,l){jspb.Message.setFieldIgnoringDefault_(e,t,l,"0")},jspb.Message.setProto3FloatField=function(e,t,l){jspb.Message.setFieldIgnoringDefault_(e,t,l,0)},jspb.Message.setProto3BooleanField=function(e,t,l){jspb.Message.setFieldIgnoringDefault_(e,t,l,!1)},jspb.Message.setProto3StringField=function(e,t,l){jspb.Message.setFieldIgnoringDefault_(e,t,l,"")},jspb.Message.setProto3BytesField=function(e,t,l){jspb.Message.setFieldIgnoringDefault_(e,t,l,"")},jspb.Message.setProto3EnumField=function(e,t,l){jspb.Message.setFieldIgnoringDefault_(e,t,l,0)},jspb.Message.setFieldIgnoringDefault_=function(e,t,l,n){l!=n?jspb.Message.setField(e,t,l):e.array[jspb.Message.getIndex_(e,t)]=null},jspb.Message.addToRepeatedField=function(e,t,l,n){e=jspb.Message.getRepeatedField(e,t),void 0!=n?e.splice(n,0,l):e.push(l)},jspb.Message.setOneofField=function(e,t,l,n){(l=jspb.Message.computeOneofCase(e,l))&&l!==t&&void 0!==n&&(e.wrappers_&&l in e.wrappers_&&(e.wrappers_[l]=void 0),jspb.Message.setField(e,l,void 0)),jspb.Message.setField(e,t,n)},jspb.Message.computeOneofCase=function(e,t){for(var l,n,r=0;r<t.length;r++){var o=t[r],u=jspb.Message.getField(e,o);null!=u&&(l=o,n=u,jspb.Message.setField(e,o,void 0))}return l?(jspb.Message.setField(e,l,n),l):0},jspb.Message.getWrapperField=function(e,t,l,n){if(e.wrappers_||(e.wrappers_={}),!e.wrappers_[l]){var r=jspb.Message.getField(e,l);(n||r)&&(e.wrappers_[l]=new t(r))}return e.wrappers_[l]},jspb.Message.getRepeatedWrapperField=function(e,t,l){return jspb.Message.wrapRepeatedField_(e,t,l),(t=e.wrappers_[l])==jspb.Message.EMPTY_LIST_SENTINEL_&&(t=e.wrappers_[l]=[]),t},jspb.Message.wrapRepeatedField_=function(e,t,l){if(e.wrappers_||(e.wrappers_={}),!e.wrappers_[l]){for(var n=jspb.Message.getRepeatedField(e,l),r=[],o=0;o<n.length;o++)r[o]=new t(n[o]);e.wrappers_[l]=r}},jspb.Message.setWrapperField=function(e,t,l){e.wrappers_||(e.wrappers_={});var n=l?l.toArray():l;e.wrappers_[t]=l,jspb.Message.setField(e,t,n)},jspb.Message.setOneofWrapperField=function(e,t,l,n){e.wrappers_||(e.wrappers_={});var r=n?n.toArray():n;e.wrappers_[t]=n,jspb.Message.setOneofField(e,t,l,r)},jspb.Message.setRepeatedWrapperField=function(e,t,l){e.wrappers_||(e.wrappers_={}),l=l||[];for(var n=[],r=0;r<l.length;r++)n[r]=l[r].toArray();e.wrappers_[t]=l,jspb.Message.setField(e,t,n)},jspb.Message.addToRepeatedWrapperField=function(e,t,l,n,r){jspb.Message.wrapRepeatedField_(e,n,t);var o=e.wrappers_[t];return o||(o=e.wrappers_[t]=[]),l=l||new n,e=jspb.Message.getRepeatedField(e,t),void 0!=r?(o.splice(r,0,l),e.splice(r,0,l.toArray())):(o.push(l),e.push(l.toArray())),l},jspb.Message.toMap=function(e,t,l,n){for(var r={},o=0;o<e.length;o++)r[t.call(e[o])]=l?l.call(e[o],n,e[o]):e[o];return r},jspb.Message.prototype.syncMapFields_=function(){if(this.wrappers_)for(var e in this.wrappers_){var t=this.wrappers_[e];if(goog.isArray(t))for(var l=0;l<t.length;l++)t[l]&&t[l].toArray();else t&&t.toArray()}},jspb.Message.prototype.toArray=function(){return this.syncMapFields_(),this.array},jspb.Message.GENERATE_TO_STRING&&(jspb.Message.prototype.toString=function(){return this.syncMapFields_(),this.array.toString()}),jspb.Message.prototype.getExtension=function(e){if(this.extensionObject_){this.wrappers_||(this.wrappers_={});var t=e.fieldIndex;if(e.isRepeated){if(e.isMessageType())return this.wrappers_[t]||(this.wrappers_[t]=goog.array.map(this.extensionObject_[t]||[],function(t){return new e.ctor(t)})),this.wrappers_[t]}else if(e.isMessageType())return!this.wrappers_[t]&&this.extensionObject_[t]&&(this.wrappers_[t]=new e.ctor(this.extensionObject_[t])),this.wrappers_[t];return this.extensionObject_[t]}},jspb.Message.prototype.setExtension=function(e,t){this.wrappers_||(this.wrappers_={}),jspb.Message.maybeInitEmptyExtensionObject_(this);var l=e.fieldIndex;return e.isRepeated?(t=t||[],e.isMessageType()?(this.wrappers_[l]=t,this.extensionObject_[l]=goog.array.map(t,function(e){return e.toArray()})):this.extensionObject_[l]=t):e.isMessageType()?(this.wrappers_[l]=t,this.extensionObject_[l]=t?t.toArray():t):this.extensionObject_[l]=t,this},jspb.Message.difference=function(e,t){if(!(e instanceof t.constructor))throw Error("Messages have different types.");var l=e.toArray(),n=t.toArray(),r=[],o=0,u=l.length>n.length?l.length:n.length;for(e.getJsPbMessageId()&&(r[0]=e.getJsPbMessageId(),o=1);o<u;o++)jspb.Message.compareFields(l[o],n[o])||(r[o]=n[o]);return new e.constructor(r)},jspb.Message.equals=function(e,t){return e==t||!(!e||!t)&&e instanceof t.constructor&&jspb.Message.compareFields(e.toArray(),t.toArray())},jspb.Message.compareExtensions=function(e,t){e=e||{},t=t||{};var l,n={};for(l in e)n[l]=0;for(l in t)n[l]=0;for(l in n)if(!jspb.Message.compareFields(e[l],t[l]))return!1;return!0},jspb.Message.compareFields=function(e,t){if(e==t)return!0;if(!goog.isObject(e)||!goog.isObject(t))return!!(goog.isNumber(e)&&isNaN(e)||goog.isNumber(t)&&isNaN(t))&&String(e)==String(t);if(e.constructor!=t.constructor)return!1;if(jspb.Message.SUPPORTS_UINT8ARRAY_&&e.constructor===Uint8Array){if(e.length!=t.length)return!1;for(var l=0;l<e.length;l++)if(e[l]!=t[l])return!1;return!0}if(e.constructor===Array){var n=void 0,r=void 0,o=Math.max(e.length,t.length);for(l=0;l<o;l++){var u=e[l],i=t[l];if(u&&u.constructor==Object&&(goog.asserts.assert(void 0===n),goog.asserts.assert(l===e.length-1),n=u,u=void 0),i&&i.constructor==Object&&(goog.asserts.assert(void 0===r),goog.asserts.assert(l===t.length-1),r=i,i=void 0),!jspb.Message.compareFields(u,i))return!1}return!n&&!r||(n=n||{},r=r||{},jspb.Message.compareExtensions(n,r))}if(e.constructor===Object)return jspb.Message.compareExtensions(e,t);throw Error("Invalid type in JSPB array")},jspb.Message.prototype.cloneMessage=function(){return jspb.Message.cloneMessage(this)},jspb.Message.prototype.clone=function(){return jspb.Message.cloneMessage(this)},jspb.Message.clone=function(e){return jspb.Message.cloneMessage(e)},jspb.Message.cloneMessage=function(e){return new e.constructor(jspb.Message.clone_(e.toArray()))},jspb.Message.copyInto=function(e,t){goog.asserts.assertInstanceof(e,jspb.Message),goog.asserts.assertInstanceof(t,jspb.Message),goog.asserts.assert(e.constructor==t.constructor,"Copy source and target message should have the same type.");for(var l=jspb.Message.clone(e),n=t.toArray(),r=l.toArray(),o=n.length=0;o<r.length;o++)n[o]=r[o];t.wrappers_=l.wrappers_,t.extensionObject_=l.extensionObject_},jspb.Message.clone_=function(e){var t;if(goog.isArray(e)){for(var l=Array(e.length),n=0;n<e.length;n++)null!=(t=e[n])&&(l[n]="object"==_typeof(t)?jspb.Message.clone_(goog.asserts.assert(t)):t);return l}if(jspb.Message.SUPPORTS_UINT8ARRAY_&&e instanceof Uint8Array)return new Uint8Array(e);for(n in l={},e)null!=(t=e[n])&&(l[n]="object"==_typeof(t)?jspb.Message.clone_(goog.asserts.assert(t)):t);return l},jspb.Message.registerMessageType=function(e,t){jspb.Message.registry_[e]=t,t.messageId=e},jspb.Message.registry_={},jspb.Message.messageSetExtensions={},jspb.Message.messageSetExtensionsBinary={},jspb.arith={},jspb.arith.UInt64=function(e,t){this.lo=e,this.hi=t},jspb.arith.UInt64.prototype.cmp=function(e){return this.hi<e.hi||this.hi==e.hi&&this.lo<e.lo?-1:this.hi==e.hi&&this.lo==e.lo?0:1},jspb.arith.UInt64.prototype.rightShift=function(){return new jspb.arith.UInt64((this.lo>>>1|(1&this.hi)<<31)>>>0,this.hi>>>1>>>0)},jspb.arith.UInt64.prototype.leftShift=function(){return new jspb.arith.UInt64(this.lo<<1>>>0,(this.hi<<1|this.lo>>>31)>>>0)},jspb.arith.UInt64.prototype.msb=function(){return!!(2147483648&this.hi)},jspb.arith.UInt64.prototype.lsb=function(){return!!(1&this.lo)},jspb.arith.UInt64.prototype.zero=function(){return 0==this.lo&&0==this.hi},jspb.arith.UInt64.prototype.add=function(e){return new jspb.arith.UInt64((this.lo+e.lo&4294967295)>>>0>>>0,((this.hi+e.hi&4294967295)>>>0)+(4294967296<=this.lo+e.lo?1:0)>>>0)},jspb.arith.UInt64.prototype.sub=function(e){return new jspb.arith.UInt64((this.lo-e.lo&4294967295)>>>0>>>0,((this.hi-e.hi&4294967295)>>>0)-(0>this.lo-e.lo?1:0)>>>0)},jspb.arith.UInt64.mul32x32=function(e,t){for(var l=e>>>16,n=65535&t,r=t>>>16,o=(u=65535&e)*n+65536*(u*r&65535)+65536*(l*n&65535),u=l*r+(u*r>>>16)+(l*n>>>16);4294967296<=o;)o-=4294967296,u+=1;return new jspb.arith.UInt64(o>>>0,u>>>0)},jspb.arith.UInt64.prototype.mul=function(e){var t=jspb.arith.UInt64.mul32x32(this.lo,e);return(e=jspb.arith.UInt64.mul32x32(this.hi,e)).hi=e.lo,e.lo=0,t.add(e)},jspb.arith.UInt64.prototype.div=function(e){if(0==e)return[];var t=new jspb.arith.UInt64(0,0),l=new jspb.arith.UInt64(this.lo,this.hi);e=new jspb.arith.UInt64(e,0);for(var n=new jspb.arith.UInt64(1,0);!e.msb();)e=e.leftShift(),n=n.leftShift();for(;!n.zero();)0>=e.cmp(l)&&(t=t.add(n),l=l.sub(e)),e=e.rightShift(),n=n.rightShift();return[t,l]},jspb.arith.UInt64.prototype.toString=function(){for(var e="",t=this;!t.zero();){var l=(t=t.div(10))[0];e=t[1].lo+e,t=l}return""==e&&(e="0"),e},jspb.arith.UInt64.fromString=function(e){for(var t=new jspb.arith.UInt64(0,0),l=new jspb.arith.UInt64(0,0),n=0;n<e.length;n++){if("0">e[n]||"9"<e[n])return null;var r=parseInt(e[n],10);l.lo=r,t=t.mul(10).add(l)}return t},jspb.arith.UInt64.prototype.clone=function(){return new jspb.arith.UInt64(this.lo,this.hi)},jspb.arith.Int64=function(e,t){this.lo=e,this.hi=t},jspb.arith.Int64.prototype.add=function(e){return new jspb.arith.Int64((this.lo+e.lo&4294967295)>>>0>>>0,((this.hi+e.hi&4294967295)>>>0)+(4294967296<=this.lo+e.lo?1:0)>>>0)},jspb.arith.Int64.prototype.sub=function(e){return new jspb.arith.Int64((this.lo-e.lo&4294967295)>>>0>>>0,((this.hi-e.hi&4294967295)>>>0)-(0>this.lo-e.lo?1:0)>>>0)},jspb.arith.Int64.prototype.clone=function(){return new jspb.arith.Int64(this.lo,this.hi)},jspb.arith.Int64.prototype.toString=function(){var e=0!=(2147483648&this.hi),t=new jspb.arith.UInt64(this.lo,this.hi);return e&&(t=new jspb.arith.UInt64(0,0).sub(t)),(e?"-":"")+t.toString()},jspb.arith.Int64.fromString=function(e){var t=0<e.length&&"-"==e[0];return t&&(e=e.substring(1)),null===(e=jspb.arith.UInt64.fromString(e))?null:(t&&(e=new jspb.arith.UInt64(0,0).sub(e)),new jspb.arith.Int64(e.lo,e.hi))},jspb.BinaryConstants={},jspb.ConstBinaryMessage=function(){},jspb.BinaryMessage=function(){},jspb.BinaryConstants.FieldType={INVALID:-1,DOUBLE:1,FLOAT:2,INT64:3,UINT64:4,INT32:5,FIXED64:6,FIXED32:7,BOOL:8,STRING:9,GROUP:10,MESSAGE:11,BYTES:12,UINT32:13,ENUM:14,SFIXED32:15,SFIXED64:16,SINT32:17,SINT64:18,FHASH64:30,VHASH64:31},jspb.BinaryConstants.WireType={INVALID:-1,VARINT:0,FIXED64:1,DELIMITED:2,START_GROUP:3,END_GROUP:4,FIXED32:5},jspb.BinaryConstants.FieldTypeToWireType=function(e){var t=jspb.BinaryConstants.FieldType,l=jspb.BinaryConstants.WireType;switch(e){case t.INT32:case t.INT64:case t.UINT32:case t.UINT64:case t.SINT32:case t.SINT64:case t.BOOL:case t.ENUM:case t.VHASH64:return l.VARINT;case t.DOUBLE:case t.FIXED64:case t.SFIXED64:case t.FHASH64:return l.FIXED64;case t.STRING:case t.MESSAGE:case t.BYTES:return l.DELIMITED;case t.FLOAT:case t.FIXED32:case t.SFIXED32:return l.FIXED32;default:return l.INVALID}},jspb.BinaryConstants.INVALID_FIELD_NUMBER=-1,jspb.BinaryConstants.FLOAT32_EPS=1.401298464324817e-45,jspb.BinaryConstants.FLOAT32_MIN=1.1754943508222875e-38,jspb.BinaryConstants.FLOAT32_MAX=3.4028234663852886e38,jspb.BinaryConstants.FLOAT64_EPS=5e-324,jspb.BinaryConstants.FLOAT64_MIN=2.2250738585072014e-308,jspb.BinaryConstants.FLOAT64_MAX=1.7976931348623157e308,jspb.BinaryConstants.TWO_TO_20=1048576,jspb.BinaryConstants.TWO_TO_23=8388608,jspb.BinaryConstants.TWO_TO_31=2147483648,jspb.BinaryConstants.TWO_TO_32=4294967296,jspb.BinaryConstants.TWO_TO_52=4503599627370496,jspb.BinaryConstants.TWO_TO_63=0x8000000000000000,jspb.BinaryConstants.TWO_TO_64=0x10000000000000000,jspb.BinaryConstants.ZERO_HASH="\0\0\0\0\0\0\0\0",jspb.utils={},jspb.utils.split64Low=0,jspb.utils.split64High=0,jspb.utils.splitUint64=function(e){var t=e>>>0;e=Math.floor((e-t)/jspb.BinaryConstants.TWO_TO_32)>>>0,jspb.utils.split64Low=t,jspb.utils.split64High=e},jspb.utils.splitInt64=function(e){var t=0>e,l=(e=Math.abs(e))>>>0;e=Math.floor((e-l)/jspb.BinaryConstants.TWO_TO_32),e>>>=0,t&&(e=~e>>>0,4294967295<(l=1+(~l>>>0))&&(l=0,4294967295<++e&&(e=0))),jspb.utils.split64Low=l,jspb.utils.split64High=e},jspb.utils.splitZigzag64=function(e){var t=0>e;e=2*Math.abs(e),jspb.utils.splitUint64(e),e=jspb.utils.split64Low;var l=jspb.utils.split64High;t&&(0==e?0==l?l=e=4294967295:(l--,e=4294967295):e--),jspb.utils.split64Low=e,jspb.utils.split64High=l},jspb.utils.splitFloat32=function(e){var t,l=0>e?1:0;0===(e=l?-e:e)?0<1/e?(jspb.utils.split64High=0,jspb.utils.split64Low=0):(jspb.utils.split64High=0,jspb.utils.split64Low=2147483648):isNaN(e)?(jspb.utils.split64High=0,jspb.utils.split64Low=2147483647):e>jspb.BinaryConstants.FLOAT32_MAX?(jspb.utils.split64High=0,jspb.utils.split64Low=(l<<31|2139095040)>>>0):e<jspb.BinaryConstants.FLOAT32_MIN?(e=Math.round(e/Math.pow(2,-149)),jspb.utils.split64High=0,jspb.utils.split64Low=(l<<31|e)>>>0):(t=Math.floor(Math.log(e)/Math.LN2),e*=Math.pow(2,-t),e=8388607&Math.round(e*jspb.BinaryConstants.TWO_TO_23),jspb.utils.split64High=0,jspb.utils.split64Low=(l<<31|t+127<<23|e)>>>0)},jspb.utils.splitFloat64=function(e){var t=0>e?1:0;if(0===(e=t?-e:e))jspb.utils.split64High=0<1/e?0:2147483648,jspb.utils.split64Low=0;else if(isNaN(e))jspb.utils.split64High=2147483647,jspb.utils.split64Low=4294967295;else if(e>jspb.BinaryConstants.FLOAT64_MAX)jspb.utils.split64High=(t<<31|2146435072)>>>0,jspb.utils.split64Low=0;else if(e<jspb.BinaryConstants.FLOAT64_MIN){var l=e/Math.pow(2,-1074);e=l/jspb.BinaryConstants.TWO_TO_32,jspb.utils.split64High=(t<<31|e)>>>0,jspb.utils.split64Low=l>>>0}else{var n=Math.floor(Math.log(e)/Math.LN2);1024==n&&(n=1023),e=(l=e*Math.pow(2,-n))*jspb.BinaryConstants.TWO_TO_20&1048575,l=l*jspb.BinaryConstants.TWO_TO_52>>>0,jspb.utils.split64High=(t<<31|n+1023<<20|e)>>>0,jspb.utils.split64Low=l}},jspb.utils.splitHash64=function(e){var t=e.charCodeAt(0),l=e.charCodeAt(1),n=e.charCodeAt(2),r=e.charCodeAt(3),o=e.charCodeAt(4),u=e.charCodeAt(5),i=e.charCodeAt(6);e=e.charCodeAt(7),jspb.utils.split64Low=t+(l<<8)+(n<<16)+(r<<24)>>>0,jspb.utils.split64High=o+(u<<8)+(i<<16)+(e<<24)>>>0},jspb.utils.joinUint64=function(e,t){return t*jspb.BinaryConstants.TWO_TO_32+e},jspb.utils.joinInt64=function(e,t){var l=2147483648&t;l&&(t=~t>>>0,0==(e=1+~e>>>0)&&(t=t+1>>>0));var n=jspb.utils.joinUint64(e,t);return l?-n:n},jspb.utils.joinZigzag64=function(e,t){var l=1&e;e=(e>>>1|t<<31)>>>0,t>>>=1,l&&(0==(e=e+1>>>0)&&(t=t+1>>>0));var n=jspb.utils.joinUint64(e,t);return l?-n:n},jspb.utils.joinFloat32=function(e,t){var l=2*(e>>31)+1,n=e>>>23&255,r=8388607&e;return 255==n?r?NaN:1/0*l:0==n?l*Math.pow(2,-149)*r:l*Math.pow(2,n-150)*(r+Math.pow(2,23))},jspb.utils.joinFloat64=function(e,t){var l=2*(t>>31)+1,n=t>>>20&2047,r=jspb.BinaryConstants.TWO_TO_32*(1048575&t)+e;return 2047==n?r?NaN:1/0*l:0==n?l*Math.pow(2,-1074)*r:l*Math.pow(2,n-1075)*(r+jspb.BinaryConstants.TWO_TO_52)},jspb.utils.joinHash64=function(e,t){return String.fromCharCode(e>>>0&255,e>>>8&255,e>>>16&255,e>>>24&255,t>>>0&255,t>>>8&255,t>>>16&255,t>>>24&255)},jspb.utils.DIGITS="0123456789abcdef".split(""),jspb.utils.joinUnsignedDecimalString=function(e,t){function l(e){for(var t=1e7,l=0;7>l;l++){var n=e/(t=t/10)%10>>>0;(0!=n||i)&&(i=!0,s+=u[n])}}if(2097151>=t)return""+(jspb.BinaryConstants.TWO_TO_32*t+e);var n=(16777215&e)+6777216*(r=(e>>>24|t<<8)>>>0&16777215)+6710656*(o=t>>16&65535),r=r+8147497*o,o=2*o;1e7<=n&&(r+=Math.floor(n/1e7),n%=1e7),1e7<=r&&(o+=Math.floor(r/1e7),r%=1e7);var u=jspb.utils.DIGITS,i=!1,s="";return(o||i)&&l(o),(r||i)&&l(r),(n||i)&&l(n),s},jspb.utils.joinSignedDecimalString=function(e,t){var l=2147483648&t;l&&(t=~t+(0==(e=1+~e>>>0)?1:0)>>>0);var n=jspb.utils.joinUnsignedDecimalString(e,t);return l?"-"+n:n},jspb.utils.hash64ToDecimalString=function(e,t){jspb.utils.splitHash64(e);var l=jspb.utils.split64Low,n=jspb.utils.split64High;return t?jspb.utils.joinSignedDecimalString(l,n):jspb.utils.joinUnsignedDecimalString(l,n)},jspb.utils.hash64ArrayToDecimalStrings=function(e,t){for(var l=Array(e.length),n=0;n<e.length;n++)l[n]=jspb.utils.hash64ToDecimalString(e[n],t);return l},jspb.utils.decimalStringToHash64=function(e){function t(e,t){for(var l=0;8>l&&(1!==e||0<t);l++){var r=e*n[l]+t;n[l]=255&r,t=r>>>8}}goog.asserts.assert(0<e.length);var l=!1;"-"===e[0]&&(l=!0,e=e.slice(1));for(var n=[0,0,0,0,0,0,0,0],r=0;r<e.length;r++)t(10,jspb.utils.DIGITS.indexOf(e[r]));return l&&(function(){for(var e=0;8>e;e++)n[e]=255&~n[e]}(),t(1,1)),goog.crypt.byteArrayToString(n)},jspb.utils.splitDecimalString=function(e){jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(e))},jspb.utils.hash64ToHexString=function(e){var t=Array(18);t[0]="0",t[1]="x";for(var l=0;8>l;l++){var n=e.charCodeAt(7-l);t[2*l+2]=jspb.utils.DIGITS[n>>4],t[2*l+3]=jspb.utils.DIGITS[15&n]}return t.join("")},jspb.utils.hexStringToHash64=function(e){e=e.toLowerCase(),goog.asserts.assert(18==e.length),goog.asserts.assert("0"==e[0]),goog.asserts.assert("x"==e[1]);for(var t="",l=0;8>l;l++){var n=jspb.utils.DIGITS.indexOf(e[2*l+2]),r=jspb.utils.DIGITS.indexOf(e[2*l+3]);t=String.fromCharCode(16*n+r)+t}return t},jspb.utils.hash64ToNumber=function(e,t){jspb.utils.splitHash64(e);var l=jspb.utils.split64Low,n=jspb.utils.split64High;return t?jspb.utils.joinInt64(l,n):jspb.utils.joinUint64(l,n)},jspb.utils.numberToHash64=function(e){return jspb.utils.splitInt64(e),jspb.utils.joinHash64(jspb.utils.split64Low,jspb.utils.split64High)},jspb.utils.countVarints=function(e,t,l){for(var n=0,r=t;r<l;r++)n+=e[r]>>7;return l-t-n},jspb.utils.countVarintFields=function(e,t,l,n){var r=0;if(128>(n=8*n+jspb.BinaryConstants.WireType.VARINT))for(;t<l&&e[t++]==n;)for(r++;;){var o=e[t++];if(0==(128&o))break}else for(;t<l;){for(o=n;128<o;){if(e[t]!=(127&o|128))return r;t++,o>>=7}if(e[t++]!=o)break;for(r++;0!=(128&(o=e[t++])););}return r},jspb.utils.countFixedFields_=function(e,t,l,n,r){var o=0;if(128>n)for(;t<l&&e[t++]==n;)o++,t+=r;else for(;t<l;){for(var u=n;128<u;){if(e[t++]!=(127&u|128))return o;u>>=7}if(e[t++]!=u)break;o++,t+=r}return o},jspb.utils.countFixed32Fields=function(e,t,l,n){return jspb.utils.countFixedFields_(e,t,l,8*n+jspb.BinaryConstants.WireType.FIXED32,4)},jspb.utils.countFixed64Fields=function(e,t,l,n){return jspb.utils.countFixedFields_(e,t,l,8*n+jspb.BinaryConstants.WireType.FIXED64,8)},jspb.utils.countDelimitedFields=function(e,t,l,n){var r=0;for(n=8*n+jspb.BinaryConstants.WireType.DELIMITED;t<l;){for(var o=n;128<o;){if(e[t++]!=(127&o|128))return r;o>>=7}if(e[t++]!=o)break;r++;for(var u=0,i=1;u+=(127&(o=e[t++]))*i,i*=128,0!=(128&o););t+=u}return r},jspb.utils.debugBytesToTextFormat=function(e){var t='"';if(e){e=jspb.utils.byteSourceToUint8Array(e);for(var l=0;l<e.length;l++)t+="\\x",16>e[l]&&(t+="0"),t+=e[l].toString(16)}return t+'"'},jspb.utils.debugScalarToTextFormat=function(e){return goog.isString(e)?goog.string.quote(e):e.toString()},jspb.utils.stringToByteArray=function(e){for(var t=new Uint8Array(e.length),l=0;l<e.length;l++){var n=e.charCodeAt(l);if(255<n)throw Error("Conversion error: string contains codepoint outside of byte range");t[l]=n}return t},jspb.utils.byteSourceToUint8Array=function(e){return e.constructor===Uint8Array?e:e.constructor===ArrayBuffer||e.constructor===Buffer||e.constructor===Array?new Uint8Array(e):e.constructor===String?goog.crypt.base64.decodeStringToUint8Array(e):(goog.asserts.fail("Type not convertible to Uint8Array."),new Uint8Array(0))},jspb.BinaryEncoder=function(){this.buffer_=[]},jspb.BinaryEncoder.prototype.length=function(){return this.buffer_.length},jspb.BinaryEncoder.prototype.end=function(){var e=this.buffer_;return this.buffer_=[],e},jspb.BinaryEncoder.prototype.writeSplitVarint64=function(e,t){for(goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(t==Math.floor(t)),goog.asserts.assert(0<=e&&e<jspb.BinaryConstants.TWO_TO_32),goog.asserts.assert(0<=t&&t<jspb.BinaryConstants.TWO_TO_32);0<t||127<e;)this.buffer_.push(127&e|128),e=(e>>>7|t<<25)>>>0,t>>>=7;this.buffer_.push(e)},jspb.BinaryEncoder.prototype.writeSplitFixed64=function(e,t){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(t==Math.floor(t)),goog.asserts.assert(0<=e&&e<jspb.BinaryConstants.TWO_TO_32),goog.asserts.assert(0<=t&&t<jspb.BinaryConstants.TWO_TO_32),this.writeUint32(e),this.writeUint32(t)},jspb.BinaryEncoder.prototype.writeUnsignedVarint32=function(e){for(goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(0<=e&&e<jspb.BinaryConstants.TWO_TO_32);127<e;)this.buffer_.push(127&e|128),e>>>=7;this.buffer_.push(e)},jspb.BinaryEncoder.prototype.writeSignedVarint32=function(e){if(goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(e>=-jspb.BinaryConstants.TWO_TO_31&&e<jspb.BinaryConstants.TWO_TO_31),0<=e)this.writeUnsignedVarint32(e);else{for(var t=0;9>t;t++)this.buffer_.push(127&e|128),e>>=7;this.buffer_.push(1)}},jspb.BinaryEncoder.prototype.writeUnsignedVarint64=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(0<=e&&e<jspb.BinaryConstants.TWO_TO_64),jspb.utils.splitInt64(e),this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)},jspb.BinaryEncoder.prototype.writeSignedVarint64=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(e>=-jspb.BinaryConstants.TWO_TO_63&&e<jspb.BinaryConstants.TWO_TO_63),jspb.utils.splitInt64(e),this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)},jspb.BinaryEncoder.prototype.writeZigzagVarint32=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(e>=-jspb.BinaryConstants.TWO_TO_31&&e<jspb.BinaryConstants.TWO_TO_31),this.writeUnsignedVarint32((e<<1^e>>31)>>>0)},jspb.BinaryEncoder.prototype.writeZigzagVarint64=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(e>=-jspb.BinaryConstants.TWO_TO_63&&e<jspb.BinaryConstants.TWO_TO_63),jspb.utils.splitZigzag64(e),this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)},jspb.BinaryEncoder.prototype.writeZigzagVarint64String=function(e){this.writeZigzagVarint64(parseInt(e,10))},jspb.BinaryEncoder.prototype.writeUint8=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(0<=e&&256>e),this.buffer_.push(e>>>0&255)},jspb.BinaryEncoder.prototype.writeUint16=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(0<=e&&65536>e),this.buffer_.push(e>>>0&255),this.buffer_.push(e>>>8&255)},jspb.BinaryEncoder.prototype.writeUint32=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(0<=e&&e<jspb.BinaryConstants.TWO_TO_32),this.buffer_.push(e>>>0&255),this.buffer_.push(e>>>8&255),this.buffer_.push(e>>>16&255),this.buffer_.push(e>>>24&255)},jspb.BinaryEncoder.prototype.writeUint64=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(0<=e&&e<jspb.BinaryConstants.TWO_TO_64),jspb.utils.splitUint64(e),this.writeUint32(jspb.utils.split64Low),this.writeUint32(jspb.utils.split64High)},jspb.BinaryEncoder.prototype.writeInt8=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(-128<=e&&128>e),this.buffer_.push(e>>>0&255)},jspb.BinaryEncoder.prototype.writeInt16=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(-32768<=e&&32768>e),this.buffer_.push(e>>>0&255),this.buffer_.push(e>>>8&255)},jspb.BinaryEncoder.prototype.writeInt32=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(e>=-jspb.BinaryConstants.TWO_TO_31&&e<jspb.BinaryConstants.TWO_TO_31),this.buffer_.push(e>>>0&255),this.buffer_.push(e>>>8&255),this.buffer_.push(e>>>16&255),this.buffer_.push(e>>>24&255)},jspb.BinaryEncoder.prototype.writeInt64=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(e>=-jspb.BinaryConstants.TWO_TO_63&&e<jspb.BinaryConstants.TWO_TO_63),jspb.utils.splitInt64(e),this.writeSplitFixed64(jspb.utils.split64Low,jspb.utils.split64High)},jspb.BinaryEncoder.prototype.writeInt64String=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(+e>=-jspb.BinaryConstants.TWO_TO_63&&+e<jspb.BinaryConstants.TWO_TO_63),jspb.utils.splitHash64(jspb.utils.decimalStringToHash64(e)),this.writeSplitFixed64(jspb.utils.split64Low,jspb.utils.split64High)},jspb.BinaryEncoder.prototype.writeFloat=function(e){goog.asserts.assert(e>=-jspb.BinaryConstants.FLOAT32_MAX&&e<=jspb.BinaryConstants.FLOAT32_MAX),jspb.utils.splitFloat32(e),this.writeUint32(jspb.utils.split64Low)},jspb.BinaryEncoder.prototype.writeDouble=function(e){goog.asserts.assert(e>=-jspb.BinaryConstants.FLOAT64_MAX&&e<=jspb.BinaryConstants.FLOAT64_MAX),jspb.utils.splitFloat64(e),this.writeUint32(jspb.utils.split64Low),this.writeUint32(jspb.utils.split64High)},jspb.BinaryEncoder.prototype.writeBool=function(e){goog.asserts.assert(goog.isBoolean(e)||goog.isNumber(e)),this.buffer_.push(e?1:0)},jspb.BinaryEncoder.prototype.writeEnum=function(e){goog.asserts.assert(e==Math.floor(e)),goog.asserts.assert(e>=-jspb.BinaryConstants.TWO_TO_31&&e<jspb.BinaryConstants.TWO_TO_31),this.writeSignedVarint32(e)},jspb.BinaryEncoder.prototype.writeBytes=function(e){this.buffer_.push.apply(this.buffer_,e)},jspb.BinaryEncoder.prototype.writeVarintHash64=function(e){jspb.utils.splitHash64(e),this.writeSplitVarint64(jspb.utils.split64Low,jspb.utils.split64High)},jspb.BinaryEncoder.prototype.writeFixedHash64=function(e){jspb.utils.splitHash64(e),this.writeUint32(jspb.utils.split64Low),this.writeUint32(jspb.utils.split64High)},jspb.BinaryEncoder.prototype.writeString=function(e){for(var t=this.buffer_.length,l=0;l<e.length;l++){var n=e.charCodeAt(l);if(128>n)this.buffer_.push(n);else if(2048>n)this.buffer_.push(n>>6|192),this.buffer_.push(63&n|128);else if(65536>n)if(55296<=n&&56319>=n&&l+1<e.length){var r=e.charCodeAt(l+1);56320<=r&&57343>=r&&(n=1024*(n-55296)+r-56320+65536,this.buffer_.push(n>>18|240),this.buffer_.push(n>>12&63|128),this.buffer_.push(n>>6&63|128),this.buffer_.push(63&n|128),l++)}else this.buffer_.push(n>>12|224),this.buffer_.push(n>>6&63|128),this.buffer_.push(63&n|128)}return this.buffer_.length-t},jspb.BinaryWriter=function(){this.blocks_=[],this.totalLength_=0,this.encoder_=new jspb.BinaryEncoder,this.bookmarks_=[]},jspb.BinaryWriter.prototype.appendUint8Array_=function(e){var t=this.encoder_.end();this.blocks_.push(t),this.blocks_.push(e),this.totalLength_+=t.length+e.length},jspb.BinaryWriter.prototype.beginDelimited_=function(e){return this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),e=this.encoder_.end(),this.blocks_.push(e),this.totalLength_+=e.length,e.push(this.totalLength_),e},jspb.BinaryWriter.prototype.endDelimited_=function(e){var t=e.pop();t=this.totalLength_+this.encoder_.length()-t;for(goog.asserts.assert(0<=t);127<t;)e.push(127&t|128),t>>>=7,this.totalLength_++;e.push(t),this.totalLength_++},jspb.BinaryWriter.prototype.writeSerializedMessage=function(e,t,l){this.appendUint8Array_(e.subarray(t,l))},jspb.BinaryWriter.prototype.maybeWriteSerializedMessage=function(e,t,l){null!=e&&null!=t&&null!=l&&this.writeSerializedMessage(e,t,l)},jspb.BinaryWriter.prototype.reset=function(){this.blocks_=[],this.encoder_.end(),this.totalLength_=0,this.bookmarks_=[]},jspb.BinaryWriter.prototype.getResultBuffer=function(){goog.asserts.assert(0==this.bookmarks_.length);for(var e=new Uint8Array(this.totalLength_+this.encoder_.length()),t=this.blocks_,l=t.length,n=0,r=0;r<l;r++){var o=t[r];e.set(o,n),n+=o.length}return t=this.encoder_.end(),e.set(t,n),n+=t.length,goog.asserts.assert(n==e.length),this.blocks_=[e],e},jspb.BinaryWriter.prototype.getResultBase64String=function(e){return goog.crypt.base64.encodeByteArray(this.getResultBuffer(),e)},jspb.BinaryWriter.prototype.beginSubMessage=function(e){this.bookmarks_.push(this.beginDelimited_(e))},jspb.BinaryWriter.prototype.endSubMessage=function(){goog.asserts.assert(0<=this.bookmarks_.length),this.endDelimited_(this.bookmarks_.pop())},jspb.BinaryWriter.prototype.writeFieldHeader_=function(e,t){goog.asserts.assert(1<=e&&e==Math.floor(e)),this.encoder_.writeUnsignedVarint32(8*e+t)},jspb.BinaryWriter.prototype.writeAny=function(e,t,l){var n=jspb.BinaryConstants.FieldType;switch(e){case n.DOUBLE:this.writeDouble(t,l);break;case n.FLOAT:this.writeFloat(t,l);break;case n.INT64:this.writeInt64(t,l);break;case n.UINT64:this.writeUint64(t,l);break;case n.INT32:this.writeInt32(t,l);break;case n.FIXED64:this.writeFixed64(t,l);break;case n.FIXED32:this.writeFixed32(t,l);break;case n.BOOL:this.writeBool(t,l);break;case n.STRING:this.writeString(t,l);break;case n.GROUP:goog.asserts.fail("Group field type not supported in writeAny()");break;case n.MESSAGE:goog.asserts.fail("Message field type not supported in writeAny()");break;case n.BYTES:this.writeBytes(t,l);break;case n.UINT32:this.writeUint32(t,l);break;case n.ENUM:this.writeEnum(t,l);break;case n.SFIXED32:this.writeSfixed32(t,l);break;case n.SFIXED64:this.writeSfixed64(t,l);break;case n.SINT32:this.writeSint32(t,l);break;case n.SINT64:this.writeSint64(t,l);break;case n.FHASH64:this.writeFixedHash64(t,l);break;case n.VHASH64:this.writeVarintHash64(t,l);break;default:goog.asserts.fail("Invalid field type in writeAny()")}},jspb.BinaryWriter.prototype.writeUnsignedVarint32_=function(e,t){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeUnsignedVarint32(t))},jspb.BinaryWriter.prototype.writeSignedVarint32_=function(e,t){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint32(t))},jspb.BinaryWriter.prototype.writeUnsignedVarint64_=function(e,t){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeUnsignedVarint64(t))},jspb.BinaryWriter.prototype.writeSignedVarint64_=function(e,t){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint64(t))},jspb.BinaryWriter.prototype.writeZigzagVarint32_=function(e,t){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint32(t))},jspb.BinaryWriter.prototype.writeZigzagVarint64_=function(e,t){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint64(t))},jspb.BinaryWriter.prototype.writeZigzagVarint64String_=function(e,t){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeZigzagVarint64String(t))},jspb.BinaryWriter.prototype.writeInt32=function(e,t){null!=t&&(goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_31&&t<jspb.BinaryConstants.TWO_TO_31),this.writeSignedVarint32_(e,t))},jspb.BinaryWriter.prototype.writeInt32String=function(e,t){if(null!=t){var l=parseInt(t,10);goog.asserts.assert(l>=-jspb.BinaryConstants.TWO_TO_31&&l<jspb.BinaryConstants.TWO_TO_31),this.writeSignedVarint32_(e,l)}},jspb.BinaryWriter.prototype.writeInt64=function(e,t){null!=t&&(goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_63&&t<jspb.BinaryConstants.TWO_TO_63),this.writeSignedVarint64_(e,t))},jspb.BinaryWriter.prototype.writeInt64String=function(e,t){if(null!=t){var l=jspb.arith.Int64.fromString(t);this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSplitVarint64(l.lo,l.hi)}},jspb.BinaryWriter.prototype.writeUint32=function(e,t){null!=t&&(goog.asserts.assert(0<=t&&t<jspb.BinaryConstants.TWO_TO_32),this.writeUnsignedVarint32_(e,t))},jspb.BinaryWriter.prototype.writeUint32String=function(e,t){if(null!=t){var l=parseInt(t,10);goog.asserts.assert(0<=l&&l<jspb.BinaryConstants.TWO_TO_32),this.writeUnsignedVarint32_(e,l)}},jspb.BinaryWriter.prototype.writeUint64=function(e,t){null!=t&&(goog.asserts.assert(0<=t&&t<jspb.BinaryConstants.TWO_TO_64),this.writeUnsignedVarint64_(e,t))},jspb.BinaryWriter.prototype.writeUint64String=function(e,t){if(null!=t){var l=jspb.arith.UInt64.fromString(t);this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSplitVarint64(l.lo,l.hi)}},jspb.BinaryWriter.prototype.writeSint32=function(e,t){null!=t&&(goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_31&&t<jspb.BinaryConstants.TWO_TO_31),this.writeZigzagVarint32_(e,t))},jspb.BinaryWriter.prototype.writeSint64=function(e,t){null!=t&&(goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_63&&t<jspb.BinaryConstants.TWO_TO_63),this.writeZigzagVarint64_(e,t))},jspb.BinaryWriter.prototype.writeSint64String=function(e,t){null!=t&&(goog.asserts.assert(+t>=-jspb.BinaryConstants.TWO_TO_63&&+t<jspb.BinaryConstants.TWO_TO_63),this.writeZigzagVarint64String_(e,t))},jspb.BinaryWriter.prototype.writeFixed32=function(e,t){null!=t&&(goog.asserts.assert(0<=t&&t<jspb.BinaryConstants.TWO_TO_32),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeUint32(t))},jspb.BinaryWriter.prototype.writeFixed64=function(e,t){null!=t&&(goog.asserts.assert(0<=t&&t<jspb.BinaryConstants.TWO_TO_64),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeUint64(t))},jspb.BinaryWriter.prototype.writeFixed64String=function(e,t){if(null!=t){var l=jspb.arith.UInt64.fromString(t);this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeSplitFixed64(l.lo,l.hi)}},jspb.BinaryWriter.prototype.writeSfixed32=function(e,t){null!=t&&(goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_31&&t<jspb.BinaryConstants.TWO_TO_31),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeInt32(t))},jspb.BinaryWriter.prototype.writeSfixed64=function(e,t){null!=t&&(goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_63&&t<jspb.BinaryConstants.TWO_TO_63),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeInt64(t))},jspb.BinaryWriter.prototype.writeSfixed64String=function(e,t){if(null!=t){var l=jspb.arith.Int64.fromString(t);this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeSplitFixed64(l.lo,l.hi)}},jspb.BinaryWriter.prototype.writeFloat=function(e,t){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.FIXED32),this.encoder_.writeFloat(t))},jspb.BinaryWriter.prototype.writeDouble=function(e,t){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeDouble(t))},jspb.BinaryWriter.prototype.writeBool=function(e,t){null!=t&&(goog.asserts.assert(goog.isBoolean(t)||goog.isNumber(t)),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeBool(t))},jspb.BinaryWriter.prototype.writeEnum=function(e,t){null!=t&&(goog.asserts.assert(t>=-jspb.BinaryConstants.TWO_TO_31&&t<jspb.BinaryConstants.TWO_TO_31),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeSignedVarint32(t))},jspb.BinaryWriter.prototype.writeString=function(e,t){if(null!=t){var l=this.beginDelimited_(e);this.encoder_.writeString(t),this.endDelimited_(l)}},jspb.BinaryWriter.prototype.writeBytes=function(e,t){if(null!=t){var l=jspb.utils.byteSourceToUint8Array(t);this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(l.length),this.appendUint8Array_(l)}},jspb.BinaryWriter.prototype.writeMessage=function(e,t,l){null!=t&&(e=this.beginDelimited_(e),l(t,this),this.endDelimited_(e))},jspb.BinaryWriter.prototype.writeGroup=function(e,t,l){null!=t&&(this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.START_GROUP),l(t,this),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.END_GROUP))},jspb.BinaryWriter.prototype.writeFixedHash64=function(e,t){null!=t&&(goog.asserts.assert(8==t.length),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.FIXED64),this.encoder_.writeFixedHash64(t))},jspb.BinaryWriter.prototype.writeVarintHash64=function(e,t){null!=t&&(goog.asserts.assert(8==t.length),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.VARINT),this.encoder_.writeVarintHash64(t))},jspb.BinaryWriter.prototype.writeRepeatedInt32=function(e,t){if(null!=t)for(var l=0;l<t.length;l++)this.writeSignedVarint32_(e,t[l])},jspb.BinaryWriter.prototype.writeRepeatedInt32String=function(e,t){if(null!=t)for(var l=0;l<t.length;l++)this.writeInt32String(e,t[l])},jspb.BinaryWriter.prototype.writeRepeatedInt64=function(e,t){if(null!=t)for(var l=0;l<t.length;l++)this.writeSignedVarint64_(e,t[l])},jspb.BinaryWriter.prototype.writeRepeatedInt64String=function(e,t){if(null!=t)for(var l=0;l<t.length;l++)this.writeInt64String(e,t[l])},jspb.BinaryWriter.prototype.writeRepeatedUint32=function(e,t){if(null!=t)for(var l=0;l<t.length;l++)this.writeUnsignedVarint32_(e,t[l])},jspb.BinaryWriter.prototype.writeRepeatedUint32String=function(e,t){if(null!=t)for(var l=0;l<t.length;l++)this.writeUint32String(e,t[l])},jspb.BinaryWriter.prototype.writeRepeatedUint64=function(e,t){if(null!=t)for(var l=0;l<t.length;l++)this.writeUnsignedVarint64_(e,t[l])},jspb.BinaryWriter.prototype.writeRepeatedUint64String=function(e,t){if(null!=t)for(var l=0;l<t.length;l++)this.writeUint64String(e,t[l])},jspb.BinaryWriter.prototype.writeRepeatedSint32=function(e,t){if(null!=t)for(var l=0;l<t.length;l++)this.writeZigzagVarint32_(e,t[l])},jspb.BinaryWriter.prototype.writeRepeatedSint64=function(e,t){if(null!=t)for(var l=0;l<t.length;l++)this.writeZigzagVarint64_(e,t[l])},jspb.BinaryWriter.prototype.writeRepeatedSint64String=function(e,t){if(null!=t)for(var l=0;l<t.length;l++)this.writeZigzagVarint64String_(e,t[l])},jspb.BinaryWriter.prototype.writeRepeatedFixed32=function(e,t){if(null!=t)for(var l=0;l<t.length;l++)this.writeFixed32(e,t[l])},jspb.BinaryWriter.prototype.writeRepeatedFixed64=function(e,t){if(null!=t)for(var l=0;l<t.length;l++)this.writeFixed64(e,t[l])},jspb.BinaryWriter.prototype.writeRepeatedFixed64String=function(e,t){if(null!=t)for(var l=0;l<t.length;l++)this.writeFixed64String(e,t[l])},jspb.BinaryWriter.prototype.writeRepeatedSfixed32=function(e,t){if(null!=t)for(var l=0;l<t.length;l++)this.writeSfixed32(e,t[l])},jspb.BinaryWriter.prototype.writeRepeatedSfixed64=function(e,t){if(null!=t)for(var l=0;l<t.length;l++)this.writeSfixed64(e,t[l])},jspb.BinaryWriter.prototype.writeRepeatedSfixed64String=function(e,t){if(null!=t)for(var l=0;l<t.length;l++)this.writeSfixed64String(e,t[l])},jspb.BinaryWriter.prototype.writeRepeatedFloat=function(e,t){if(null!=t)for(var l=0;l<t.length;l++)this.writeFloat(e,t[l])},jspb.BinaryWriter.prototype.writeRepeatedDouble=function(e,t){if(null!=t)for(var l=0;l<t.length;l++)this.writeDouble(e,t[l])},jspb.BinaryWriter.prototype.writeRepeatedBool=function(e,t){if(null!=t)for(var l=0;l<t.length;l++)this.writeBool(e,t[l])},jspb.BinaryWriter.prototype.writeRepeatedEnum=function(e,t){if(null!=t)for(var l=0;l<t.length;l++)this.writeEnum(e,t[l])},jspb.BinaryWriter.prototype.writeRepeatedString=function(e,t){if(null!=t)for(var l=0;l<t.length;l++)this.writeString(e,t[l])},jspb.BinaryWriter.prototype.writeRepeatedBytes=function(e,t){if(null!=t)for(var l=0;l<t.length;l++)this.writeBytes(e,t[l])},jspb.BinaryWriter.prototype.writeRepeatedMessage=function(e,t,l){if(null!=t)for(var n=0;n<t.length;n++){var r=this.beginDelimited_(e);l(t[n],this),this.endDelimited_(r)}},jspb.BinaryWriter.prototype.writeRepeatedGroup=function(e,t,l){if(null!=t)for(var n=0;n<t.length;n++)this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.START_GROUP),l(t[n],this),this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.END_GROUP)},jspb.BinaryWriter.prototype.writeRepeatedFixedHash64=function(e,t){if(null!=t)for(var l=0;l<t.length;l++)this.writeFixedHash64(e,t[l])},jspb.BinaryWriter.prototype.writeRepeatedVarintHash64=function(e,t){if(null!=t)for(var l=0;l<t.length;l++)this.writeVarintHash64(e,t[l])},jspb.BinaryWriter.prototype.writePackedInt32=function(e,t){if(null!=t&&t.length){for(var l=this.beginDelimited_(e),n=0;n<t.length;n++)this.encoder_.writeSignedVarint32(t[n]);this.endDelimited_(l)}},jspb.BinaryWriter.prototype.writePackedInt32String=function(e,t){if(null!=t&&t.length){for(var l=this.beginDelimited_(e),n=0;n<t.length;n++)this.encoder_.writeSignedVarint32(parseInt(t[n],10));this.endDelimited_(l)}},jspb.BinaryWriter.prototype.writePackedInt64=function(e,t){if(null!=t&&t.length){for(var l=this.beginDelimited_(e),n=0;n<t.length;n++)this.encoder_.writeSignedVarint64(t[n]);this.endDelimited_(l)}},jspb.BinaryWriter.prototype.writePackedInt64String=function(e,t){if(null!=t&&t.length){for(var l=this.beginDelimited_(e),n=0;n<t.length;n++){var r=jspb.arith.Int64.fromString(t[n]);this.encoder_.writeSplitVarint64(r.lo,r.hi)}this.endDelimited_(l)}},jspb.BinaryWriter.prototype.writePackedUint32=function(e,t){if(null!=t&&t.length){for(var l=this.beginDelimited_(e),n=0;n<t.length;n++)this.encoder_.writeUnsignedVarint32(t[n]);this.endDelimited_(l)}},jspb.BinaryWriter.prototype.writePackedUint32String=function(e,t){if(null!=t&&t.length){for(var l=this.beginDelimited_(e),n=0;n<t.length;n++)this.encoder_.writeUnsignedVarint32(parseInt(t[n],10));this.endDelimited_(l)}},jspb.BinaryWriter.prototype.writePackedUint64=function(e,t){if(null!=t&&t.length){for(var l=this.beginDelimited_(e),n=0;n<t.length;n++)this.encoder_.writeUnsignedVarint64(t[n]);this.endDelimited_(l)}},jspb.BinaryWriter.prototype.writePackedUint64String=function(e,t){if(null!=t&&t.length){for(var l=this.beginDelimited_(e),n=0;n<t.length;n++){var r=jspb.arith.UInt64.fromString(t[n]);this.encoder_.writeSplitVarint64(r.lo,r.hi)}this.endDelimited_(l)}},jspb.BinaryWriter.prototype.writePackedSint32=function(e,t){if(null!=t&&t.length){for(var l=this.beginDelimited_(e),n=0;n<t.length;n++)this.encoder_.writeZigzagVarint32(t[n]);this.endDelimited_(l)}},jspb.BinaryWriter.prototype.writePackedSint64=function(e,t){if(null!=t&&t.length){for(var l=this.beginDelimited_(e),n=0;n<t.length;n++)this.encoder_.writeZigzagVarint64(t[n]);this.endDelimited_(l)}},jspb.BinaryWriter.prototype.writePackedSint64String=function(e,t){if(null!=t&&t.length){for(var l=this.beginDelimited_(e),n=0;n<t.length;n++)this.encoder_.writeZigzagVarint64(parseInt(t[n],10));this.endDelimited_(l)}},jspb.BinaryWriter.prototype.writePackedFixed32=function(e,t){if(null!=t&&t.length){this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(4*t.length);for(var l=0;l<t.length;l++)this.encoder_.writeUint32(t[l])}},jspb.BinaryWriter.prototype.writePackedFixed64=function(e,t){if(null!=t&&t.length){this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*t.length);for(var l=0;l<t.length;l++)this.encoder_.writeUint64(t[l])}},jspb.BinaryWriter.prototype.writePackedFixed64String=function(e,t){if(null!=t&&t.length){this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*t.length);for(var l=0;l<t.length;l++){var n=jspb.arith.UInt64.fromString(t[l]);this.encoder_.writeSplitFixed64(n.lo,n.hi)}}},jspb.BinaryWriter.prototype.writePackedSfixed32=function(e,t){if(null!=t&&t.length){this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(4*t.length);for(var l=0;l<t.length;l++)this.encoder_.writeInt32(t[l])}},jspb.BinaryWriter.prototype.writePackedSfixed64=function(e,t){if(null!=t&&t.length){this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*t.length);for(var l=0;l<t.length;l++)this.encoder_.writeInt64(t[l])}},jspb.BinaryWriter.prototype.writePackedSfixed64String=function(e,t){if(null!=t&&t.length){this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*t.length);for(var l=0;l<t.length;l++)this.encoder_.writeInt64String(t[l])}},jspb.BinaryWriter.prototype.writePackedFloat=function(e,t){if(null!=t&&t.length){this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(4*t.length);for(var l=0;l<t.length;l++)this.encoder_.writeFloat(t[l])}},jspb.BinaryWriter.prototype.writePackedDouble=function(e,t){if(null!=t&&t.length){this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*t.length);for(var l=0;l<t.length;l++)this.encoder_.writeDouble(t[l])}},jspb.BinaryWriter.prototype.writePackedBool=function(e,t){if(null!=t&&t.length){this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(t.length);for(var l=0;l<t.length;l++)this.encoder_.writeBool(t[l])}},jspb.BinaryWriter.prototype.writePackedEnum=function(e,t){if(null!=t&&t.length){for(var l=this.beginDelimited_(e),n=0;n<t.length;n++)this.encoder_.writeEnum(t[n]);this.endDelimited_(l)}},jspb.BinaryWriter.prototype.writePackedFixedHash64=function(e,t){if(null!=t&&t.length){this.writeFieldHeader_(e,jspb.BinaryConstants.WireType.DELIMITED),this.encoder_.writeUnsignedVarint32(8*t.length);for(var l=0;l<t.length;l++)this.encoder_.writeFixedHash64(t[l])}},jspb.BinaryWriter.prototype.writePackedVarintHash64=function(e,t){if(null!=t&&t.length){for(var l=this.beginDelimited_(e),n=0;n<t.length;n++)this.encoder_.writeVarintHash64(t[n]);this.endDelimited_(l)}},jspb.BinaryIterator=function(e,t,l){this.elements_=this.nextMethod_=this.decoder_=null,this.cursor_=0,this.nextValue_=null,this.atEnd_=!0,this.init_(e,t,l)},jspb.BinaryIterator.prototype.init_=function(e,t,l){e&&t&&(this.decoder_=e,this.nextMethod_=t),this.elements_=l||null,this.cursor_=0,this.nextValue_=null,this.atEnd_=!this.decoder_&&!this.elements_,this.next()},jspb.BinaryIterator.instanceCache_=[],jspb.BinaryIterator.alloc=function(e,t,l){if(jspb.BinaryIterator.instanceCache_.length){var n=jspb.BinaryIterator.instanceCache_.pop();return n.init_(e,t,l),n}return new jspb.BinaryIterator(e,t,l)},jspb.BinaryIterator.prototype.free=function(){this.clear(),100>jspb.BinaryIterator.instanceCache_.length&&jspb.BinaryIterator.instanceCache_.push(this)},jspb.BinaryIterator.prototype.clear=function(){this.decoder_&&this.decoder_.free(),this.elements_=this.nextMethod_=this.decoder_=null,this.cursor_=0,this.nextValue_=null,this.atEnd_=!0},jspb.BinaryIterator.prototype.get=function(){return this.nextValue_},jspb.BinaryIterator.prototype.atEnd=function(){return this.atEnd_},jspb.BinaryIterator.prototype.next=function(){var e=this.nextValue_;return this.decoder_?this.decoder_.atEnd()?(this.nextValue_=null,this.atEnd_=!0):this.nextValue_=this.nextMethod_.call(this.decoder_):this.elements_&&(this.cursor_==this.elements_.length?(this.nextValue_=null,this.atEnd_=!0):this.nextValue_=this.elements_[this.cursor_++]),e},jspb.BinaryDecoder=function(e,t,l){this.bytes_=null,this.tempHigh_=this.tempLow_=this.cursor_=this.end_=this.start_=0,this.error_=!1,e&&this.setBlock(e,t,l)},jspb.BinaryDecoder.instanceCache_=[],jspb.BinaryDecoder.alloc=function(e,t,l){if(jspb.BinaryDecoder.instanceCache_.length){var n=jspb.BinaryDecoder.instanceCache_.pop();return e&&n.setBlock(e,t,l),n}return new jspb.BinaryDecoder(e,t,l)},jspb.BinaryDecoder.prototype.free=function(){this.clear(),100>jspb.BinaryDecoder.instanceCache_.length&&jspb.BinaryDecoder.instanceCache_.push(this)},jspb.BinaryDecoder.prototype.clone=function(){return jspb.BinaryDecoder.alloc(this.bytes_,this.start_,this.end_-this.start_)},jspb.BinaryDecoder.prototype.clear=function(){this.bytes_=null,this.cursor_=this.end_=this.start_=0,this.error_=!1},jspb.BinaryDecoder.prototype.getBuffer=function(){return this.bytes_},jspb.BinaryDecoder.prototype.setBlock=function(e,t,l){this.bytes_=jspb.utils.byteSourceToUint8Array(e),this.start_=goog.isDef(t)?t:0,this.end_=goog.isDef(l)?this.start_+l:this.bytes_.length,this.cursor_=this.start_},jspb.BinaryDecoder.prototype.getEnd=function(){return this.end_},jspb.BinaryDecoder.prototype.setEnd=function(e){this.end_=e},jspb.BinaryDecoder.prototype.reset=function(){this.cursor_=this.start_},jspb.BinaryDecoder.prototype.getCursor=function(){return this.cursor_},jspb.BinaryDecoder.prototype.setCursor=function(e){this.cursor_=e},jspb.BinaryDecoder.prototype.advance=function(e){this.cursor_+=e,goog.asserts.assert(this.cursor_<=this.end_)},jspb.BinaryDecoder.prototype.atEnd=function(){return this.cursor_==this.end_},jspb.BinaryDecoder.prototype.pastEnd=function(){return this.cursor_>this.end_},jspb.BinaryDecoder.prototype.getError=function(){return this.error_||0>this.cursor_||this.cursor_>this.end_},jspb.BinaryDecoder.prototype.readSplitVarint64_=function(){for(var e,t,l=0,n=0;4>n;n++)if(l|=(127&(e=this.bytes_[this.cursor_++]))<<7*n,128>e)return this.tempLow_=l>>>0,void(this.tempHigh_=0);if(l|=(127&(e=this.bytes_[this.cursor_++]))<<28,t=0|(127&e)>>4,128>e)this.tempLow_=l>>>0,this.tempHigh_=t>>>0;else{for(n=0;5>n;n++)if(t|=(127&(e=this.bytes_[this.cursor_++]))<<7*n+3,128>e)return this.tempLow_=l>>>0,void(this.tempHigh_=t>>>0);goog.asserts.fail("Failed to read varint, encoding is invalid."),this.error_=!0}},jspb.BinaryDecoder.prototype.skipVarint=function(){for(;128&this.bytes_[this.cursor_];)this.cursor_++;this.cursor_++},jspb.BinaryDecoder.prototype.unskipVarint=function(e){for(;128<e;)this.cursor_--,e>>>=7;this.cursor_--},jspb.BinaryDecoder.prototype.readUnsignedVarint32=function(){var e,t=this.bytes_,l=127&(e=t[this.cursor_+0]);return 128>e?(this.cursor_+=1,goog.asserts.assert(this.cursor_<=this.end_),l):(l|=(127&(e=t[this.cursor_+1]))<<7,128>e?(this.cursor_+=2,goog.asserts.assert(this.cursor_<=this.end_),l):(l|=(127&(e=t[this.cursor_+2]))<<14,128>e?(this.cursor_+=3,goog.asserts.assert(this.cursor_<=this.end_),l):(l|=(127&(e=t[this.cursor_+3]))<<21,128>e?(this.cursor_+=4,goog.asserts.assert(this.cursor_<=this.end_),l):(l|=(15&(e=t[this.cursor_+4]))<<28,128>e?(this.cursor_+=5,goog.asserts.assert(this.cursor_<=this.end_),l>>>0):(this.cursor_+=5,128<=t[this.cursor_++]&&128<=t[this.cursor_++]&&128<=t[this.cursor_++]&&128<=t[this.cursor_++]&&128<=t[this.cursor_++]&&goog.asserts.assert(!1),goog.asserts.assert(this.cursor_<=this.end_),l)))))},jspb.BinaryDecoder.prototype.readSignedVarint32=jspb.BinaryDecoder.prototype.readUnsignedVarint32,jspb.BinaryDecoder.prototype.readUnsignedVarint32String=function(){return this.readUnsignedVarint32().toString()},jspb.BinaryDecoder.prototype.readSignedVarint32String=function(){return this.readSignedVarint32().toString()},jspb.BinaryDecoder.prototype.readZigzagVarint32=function(){var e=this.readUnsignedVarint32();return e>>>1^-(1&e)},jspb.BinaryDecoder.prototype.readUnsignedVarint64=function(){return this.readSplitVarint64_(),jspb.utils.joinUint64(this.tempLow_,this.tempHigh_)},jspb.BinaryDecoder.prototype.readUnsignedVarint64String=function(){return this.readSplitVarint64_(),jspb.utils.joinUnsignedDecimalString(this.tempLow_,this.tempHigh_)},jspb.BinaryDecoder.prototype.readSignedVarint64=function(){return this.readSplitVarint64_(),jspb.utils.joinInt64(this.tempLow_,this.tempHigh_)},jspb.BinaryDecoder.prototype.readSignedVarint64String=function(){return this.readSplitVarint64_(),jspb.utils.joinSignedDecimalString(this.tempLow_,this.tempHigh_)},jspb.BinaryDecoder.prototype.readZigzagVarint64=function(){return this.readSplitVarint64_(),jspb.utils.joinZigzag64(this.tempLow_,this.tempHigh_)},jspb.BinaryDecoder.prototype.readZigzagVarint64String=function(){return this.readZigzagVarint64().toString()},jspb.BinaryDecoder.prototype.readUint8=function(){var e=this.bytes_[this.cursor_+0];return this.cursor_+=1,goog.asserts.assert(this.cursor_<=this.end_),e},jspb.BinaryDecoder.prototype.readUint16=function(){var e=this.bytes_[this.cursor_+0],t=this.bytes_[this.cursor_+1];return this.cursor_+=2,goog.asserts.assert(this.cursor_<=this.end_),e<<0|t<<8},jspb.BinaryDecoder.prototype.readUint32=function(){var e=this.bytes_[this.cursor_+0],t=this.bytes_[this.cursor_+1],l=this.bytes_[this.cursor_+2],n=this.bytes_[this.cursor_+3];return this.cursor_+=4,goog.asserts.assert(this.cursor_<=this.end_),(e<<0|t<<8|l<<16|n<<24)>>>0},jspb.BinaryDecoder.prototype.readUint64=function(){var e=this.readUint32(),t=this.readUint32();return jspb.utils.joinUint64(e,t)},jspb.BinaryDecoder.prototype.readUint64String=function(){var e=this.readUint32(),t=this.readUint32();return jspb.utils.joinUnsignedDecimalString(e,t)},jspb.BinaryDecoder.prototype.readInt8=function(){var e=this.bytes_[this.cursor_+0];return this.cursor_+=1,goog.asserts.assert(this.cursor_<=this.end_),e<<24>>24},jspb.BinaryDecoder.prototype.readInt16=function(){var e=this.bytes_[this.cursor_+0],t=this.bytes_[this.cursor_+1];return this.cursor_+=2,goog.asserts.assert(this.cursor_<=this.end_),(e<<0|t<<8)<<16>>16},jspb.BinaryDecoder.prototype.readInt32=function(){var e=this.bytes_[this.cursor_+0],t=this.bytes_[this.cursor_+1],l=this.bytes_[this.cursor_+2],n=this.bytes_[this.cursor_+3];return this.cursor_+=4,goog.asserts.assert(this.cursor_<=this.end_),e<<0|t<<8|l<<16|n<<24},jspb.BinaryDecoder.prototype.readInt64=function(){var e=this.readUint32(),t=this.readUint32();return jspb.utils.joinInt64(e,t)},jspb.BinaryDecoder.prototype.readInt64String=function(){var e=this.readUint32(),t=this.readUint32();return jspb.utils.joinSignedDecimalString(e,t)},jspb.BinaryDecoder.prototype.readFloat=function(){var e=this.readUint32();return jspb.utils.joinFloat32(e,0)},jspb.BinaryDecoder.prototype.readDouble=function(){var e=this.readUint32(),t=this.readUint32();return jspb.utils.joinFloat64(e,t)},jspb.BinaryDecoder.prototype.readBool=function(){return!!this.bytes_[this.cursor_++]},jspb.BinaryDecoder.prototype.readEnum=function(){return this.readSignedVarint32()},jspb.BinaryDecoder.prototype.readString=function(e){var t=this.bytes_,l=this.cursor_;e=l+e;for(var n=[],r="";l<e;){if(128>(i=t[l++]))n.push(i);else{if(192>i)continue;if(224>i){var o=t[l++];n.push((31&i)<<6|63&o)}else if(240>i){o=t[l++];var u=t[l++];n.push((15&i)<<12|(63&o)<<6|63&u)}else if(248>i){var i=(i=(7&i)<<18|(63&(o=t[l++]))<<12|(63&(u=t[l++]))<<6|63&t[l++])-65536;n.push(55296+(i>>10&1023),56320+(1023&i))}}8192<=n.length&&(r+=String.fromCharCode.apply(null,n),n.length=0)}return r+=goog.crypt.byteArrayToString(n),this.cursor_=l,r},jspb.BinaryDecoder.prototype.readStringWithLength=function(){var e=this.readUnsignedVarint32();return this.readString(e)},jspb.BinaryDecoder.prototype.readBytes=function(e){if(0>e||this.cursor_+e>this.bytes_.length)return this.error_=!0,goog.asserts.fail("Invalid byte length!"),new Uint8Array(0);var t=this.bytes_.subarray(this.cursor_,this.cursor_+e);return this.cursor_+=e,goog.asserts.assert(this.cursor_<=this.end_),t},jspb.BinaryDecoder.prototype.readVarintHash64=function(){return this.readSplitVarint64_(),jspb.utils.joinHash64(this.tempLow_,this.tempHigh_)},jspb.BinaryDecoder.prototype.readFixedHash64=function(){var e=this.bytes_,t=this.cursor_,l=e[t+0],n=e[t+1],r=e[t+2],o=e[t+3],u=e[t+4],i=e[t+5],s=e[t+6];e=e[t+7];return this.cursor_+=8,String.fromCharCode(l,n,r,o,u,i,s,e)},jspb.BinaryReader=function(e,t,l){this.decoder_=jspb.BinaryDecoder.alloc(e,t,l),this.fieldCursor_=this.decoder_.getCursor(),this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER,this.nextWireType_=jspb.BinaryConstants.WireType.INVALID,this.error_=!1,this.readCallbacks_=null},jspb.BinaryReader.instanceCache_=[],jspb.BinaryReader.alloc=function(e,t,l){if(jspb.BinaryReader.instanceCache_.length){var n=jspb.BinaryReader.instanceCache_.pop();return e&&n.decoder_.setBlock(e,t,l),n}return new jspb.BinaryReader(e,t,l)},jspb.BinaryReader.prototype.alloc=jspb.BinaryReader.alloc,jspb.BinaryReader.prototype.free=function(){this.decoder_.clear(),this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER,this.nextWireType_=jspb.BinaryConstants.WireType.INVALID,this.error_=!1,this.readCallbacks_=null,100>jspb.BinaryReader.instanceCache_.length&&jspb.BinaryReader.instanceCache_.push(this)},jspb.BinaryReader.prototype.getFieldCursor=function(){return this.fieldCursor_},jspb.BinaryReader.prototype.getCursor=function(){return this.decoder_.getCursor()},jspb.BinaryReader.prototype.getBuffer=function(){return this.decoder_.getBuffer()},jspb.BinaryReader.prototype.getFieldNumber=function(){return this.nextField_},jspb.BinaryReader.prototype.getWireType=function(){return this.nextWireType_},jspb.BinaryReader.prototype.isEndGroup=function(){return this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP},jspb.BinaryReader.prototype.getError=function(){return this.error_||this.decoder_.getError()},jspb.BinaryReader.prototype.setBlock=function(e,t,l){this.decoder_.setBlock(e,t,l),this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER,this.nextWireType_=jspb.BinaryConstants.WireType.INVALID},jspb.BinaryReader.prototype.reset=function(){this.decoder_.reset(),this.nextField_=jspb.BinaryConstants.INVALID_FIELD_NUMBER,this.nextWireType_=jspb.BinaryConstants.WireType.INVALID},jspb.BinaryReader.prototype.advance=function(e){this.decoder_.advance(e)},jspb.BinaryReader.prototype.nextField=function(){if(this.decoder_.atEnd())return!1;if(this.getError())return goog.asserts.fail("Decoder hit an error"),!1;this.fieldCursor_=this.decoder_.getCursor();var e,t=(e=this.decoder_.readUnsignedVarint32())>>>3;return(e=7&e)!=jspb.BinaryConstants.WireType.VARINT&&e!=jspb.BinaryConstants.WireType.FIXED32&&e!=jspb.BinaryConstants.WireType.FIXED64&&e!=jspb.BinaryConstants.WireType.DELIMITED&&e!=jspb.BinaryConstants.WireType.START_GROUP&&e!=jspb.BinaryConstants.WireType.END_GROUP?(goog.asserts.fail("Invalid wire type"),this.error_=!0,!1):(this.nextField_=t,this.nextWireType_=e,!0)},jspb.BinaryReader.prototype.unskipHeader=function(){this.decoder_.unskipVarint(this.nextField_<<3|this.nextWireType_)},jspb.BinaryReader.prototype.skipMatchingFields=function(){var e=this.nextField_;for(this.unskipHeader();this.nextField()&&this.getFieldNumber()==e;)this.skipField();this.decoder_.atEnd()||this.unskipHeader()},jspb.BinaryReader.prototype.skipVarintField=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.VARINT?(goog.asserts.fail("Invalid wire type for skipVarintField"),this.skipField()):this.decoder_.skipVarint()},jspb.BinaryReader.prototype.skipDelimitedField=function(){if(this.nextWireType_!=jspb.BinaryConstants.WireType.DELIMITED)goog.asserts.fail("Invalid wire type for skipDelimitedField"),this.skipField();else{var e=this.decoder_.readUnsignedVarint32();this.decoder_.advance(e)}},jspb.BinaryReader.prototype.skipFixed32Field=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.FIXED32?(goog.asserts.fail("Invalid wire type for skipFixed32Field"),this.skipField()):this.decoder_.advance(4)},jspb.BinaryReader.prototype.skipFixed64Field=function(){this.nextWireType_!=jspb.BinaryConstants.WireType.FIXED64?(goog.asserts.fail("Invalid wire type for skipFixed64Field"),this.skipField()):this.decoder_.advance(8)},jspb.BinaryReader.prototype.skipGroup=function(){var e=[this.nextField_];do{if(!this.nextField()){goog.asserts.fail("Unmatched start-group tag: stream EOF"),this.error_=!0;break}if(this.nextWireType_==jspb.BinaryConstants.WireType.START_GROUP)e.push(this.nextField_);else if(this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP&&this.nextField_!=e.pop()){goog.asserts.fail("Unmatched end-group tag"),this.error_=!0;break}}while(0<e.length)},jspb.BinaryReader.prototype.skipField=function(){switch(this.nextWireType_){case jspb.BinaryConstants.WireType.VARINT:this.skipVarintField();break;case jspb.BinaryConstants.WireType.FIXED64:this.skipFixed64Field();break;case jspb.BinaryConstants.WireType.DELIMITED:this.skipDelimitedField();break;case jspb.BinaryConstants.WireType.FIXED32:this.skipFixed32Field();break;case jspb.BinaryConstants.WireType.START_GROUP:this.skipGroup();break;default:goog.asserts.fail("Invalid wire encoding for field.")}},jspb.BinaryReader.prototype.registerReadCallback=function(e,t){goog.isNull(this.readCallbacks_)&&(this.readCallbacks_={}),goog.asserts.assert(!this.readCallbacks_[e]),this.readCallbacks_[e]=t},jspb.BinaryReader.prototype.runReadCallback=function(e){return goog.asserts.assert(!goog.isNull(this.readCallbacks_)),e=this.readCallbacks_[e],goog.asserts.assert(e),e(this)},jspb.BinaryReader.prototype.readAny=function(e){this.nextWireType_=jspb.BinaryConstants.FieldTypeToWireType(e);var t=jspb.BinaryConstants.FieldType;switch(e){case t.DOUBLE:return this.readDouble();case t.FLOAT:return this.readFloat();case t.INT64:return this.readInt64();case t.UINT64:return this.readUint64();case t.INT32:return this.readInt32();case t.FIXED64:return this.readFixed64();case t.FIXED32:return this.readFixed32();case t.BOOL:return this.readBool();case t.STRING:return this.readString();case t.GROUP:goog.asserts.fail("Group field type not supported in readAny()");case t.MESSAGE:goog.asserts.fail("Message field type not supported in readAny()");case t.BYTES:return this.readBytes();case t.UINT32:return this.readUint32();case t.ENUM:return this.readEnum();case t.SFIXED32:return this.readSfixed32();case t.SFIXED64:return this.readSfixed64();case t.SINT32:return this.readSint32();case t.SINT64:return this.readSint64();case t.FHASH64:return this.readFixedHash64();case t.VHASH64:return this.readVarintHash64();default:goog.asserts.fail("Invalid field type in readAny()")}return 0},jspb.BinaryReader.prototype.readMessage=function(e,t){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var l=this.decoder_.getEnd(),n=this.decoder_.readUnsignedVarint32();n=this.decoder_.getCursor()+n;this.decoder_.setEnd(n),t(e,this),this.decoder_.setCursor(n),this.decoder_.setEnd(l)},jspb.BinaryReader.prototype.readGroup=function(e,t,l){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.START_GROUP),goog.asserts.assert(this.nextField_==e),l(t,this),this.error_||this.nextWireType_==jspb.BinaryConstants.WireType.END_GROUP||(goog.asserts.fail("Group submessage did not end with an END_GROUP tag"),this.error_=!0)},jspb.BinaryReader.prototype.getFieldDecoder=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var e=this.decoder_.readUnsignedVarint32(),t=this.decoder_.getCursor(),l=t+e;e=jspb.BinaryDecoder.alloc(this.decoder_.getBuffer(),t,e);return this.decoder_.setCursor(l),e},jspb.BinaryReader.prototype.readInt32=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readSignedVarint32()},jspb.BinaryReader.prototype.readInt32String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readSignedVarint32String()},jspb.BinaryReader.prototype.readInt64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readSignedVarint64()},jspb.BinaryReader.prototype.readInt64String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readSignedVarint64String()},jspb.BinaryReader.prototype.readUint32=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readUnsignedVarint32()},jspb.BinaryReader.prototype.readUint32String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readUnsignedVarint32String()},jspb.BinaryReader.prototype.readUint64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readUnsignedVarint64()},jspb.BinaryReader.prototype.readUint64String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readUnsignedVarint64String()},jspb.BinaryReader.prototype.readSint32=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readZigzagVarint32()},jspb.BinaryReader.prototype.readSint64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readZigzagVarint64()},jspb.BinaryReader.prototype.readSint64String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readZigzagVarint64String()},jspb.BinaryReader.prototype.readFixed32=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32),this.decoder_.readUint32()},jspb.BinaryReader.prototype.readFixed64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64),this.decoder_.readUint64()},jspb.BinaryReader.prototype.readFixed64String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64),this.decoder_.readUint64String()},jspb.BinaryReader.prototype.readSfixed32=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32),this.decoder_.readInt32()},jspb.BinaryReader.prototype.readSfixed32String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32),this.decoder_.readInt32().toString()},jspb.BinaryReader.prototype.readSfixed64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64),this.decoder_.readInt64()},jspb.BinaryReader.prototype.readSfixed64String=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64),this.decoder_.readInt64String()},jspb.BinaryReader.prototype.readFloat=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED32),this.decoder_.readFloat()},jspb.BinaryReader.prototype.readDouble=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64),this.decoder_.readDouble()},jspb.BinaryReader.prototype.readBool=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),!!this.decoder_.readUnsignedVarint32()},jspb.BinaryReader.prototype.readEnum=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readSignedVarint64()},jspb.BinaryReader.prototype.readString=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var e=this.decoder_.readUnsignedVarint32();return this.decoder_.readString(e)},jspb.BinaryReader.prototype.readBytes=function(){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);var e=this.decoder_.readUnsignedVarint32();return this.decoder_.readBytes(e)},jspb.BinaryReader.prototype.readVarintHash64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.VARINT),this.decoder_.readVarintHash64()},jspb.BinaryReader.prototype.readFixedHash64=function(){return goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.FIXED64),this.decoder_.readFixedHash64()},jspb.BinaryReader.prototype.readPackedField_=function(e){goog.asserts.assert(this.nextWireType_==jspb.BinaryConstants.WireType.DELIMITED);for(var t=this.decoder_.readUnsignedVarint32(),l=(t=this.decoder_.getCursor()+t,[]);this.decoder_.getCursor()<t;)l.push(e.call(this.decoder_));return l},jspb.BinaryReader.prototype.readPackedInt32=function(){return this.readPackedField_(this.decoder_.readSignedVarint32)},jspb.BinaryReader.prototype.readPackedInt32String=function(){return this.readPackedField_(this.decoder_.readSignedVarint32String)},jspb.BinaryReader.prototype.readPackedInt64=function(){return this.readPackedField_(this.decoder_.readSignedVarint64)},jspb.BinaryReader.prototype.readPackedInt64String=function(){return this.readPackedField_(this.decoder_.readSignedVarint64String)},jspb.BinaryReader.prototype.readPackedUint32=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint32)},jspb.BinaryReader.prototype.readPackedUint32String=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint32String)},jspb.BinaryReader.prototype.readPackedUint64=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint64)},jspb.BinaryReader.prototype.readPackedUint64String=function(){return this.readPackedField_(this.decoder_.readUnsignedVarint64String)},jspb.BinaryReader.prototype.readPackedSint32=function(){return this.readPackedField_(this.decoder_.readZigzagVarint32)},jspb.BinaryReader.prototype.readPackedSint64=function(){return this.readPackedField_(this.decoder_.readZigzagVarint64)},jspb.BinaryReader.prototype.readPackedSint64String=function(){return this.readPackedField_(this.decoder_.readZigzagVarint64String)},jspb.BinaryReader.prototype.readPackedFixed32=function(){return this.readPackedField_(this.decoder_.readUint32)},jspb.BinaryReader.prototype.readPackedFixed64=function(){return this.readPackedField_(this.decoder_.readUint64)},jspb.BinaryReader.prototype.readPackedFixed64String=function(){return this.readPackedField_(this.decoder_.readUint64String)},jspb.BinaryReader.prototype.readPackedSfixed32=function(){return this.readPackedField_(this.decoder_.readInt32)},jspb.BinaryReader.prototype.readPackedSfixed64=function(){return this.readPackedField_(this.decoder_.readInt64)},jspb.BinaryReader.prototype.readPackedSfixed64String=function(){return this.readPackedField_(this.decoder_.readInt64String)},jspb.BinaryReader.prototype.readPackedFloat=function(){return this.readPackedField_(this.decoder_.readFloat)},jspb.BinaryReader.prototype.readPackedDouble=function(){return this.readPackedField_(this.decoder_.readDouble)},jspb.BinaryReader.prototype.readPackedBool=function(){return this.readPackedField_(this.decoder_.readBool)},jspb.BinaryReader.prototype.readPackedEnum=function(){return this.readPackedField_(this.decoder_.readEnum)},jspb.BinaryReader.prototype.readPackedVarintHash64=function(){return this.readPackedField_(this.decoder_.readVarintHash64)},jspb.BinaryReader.prototype.readPackedFixedHash64=function(){return this.readPackedField_(this.decoder_.readFixedHash64)},jspb.Export={},exports.Map=jspb.Map,exports.Message=jspb.Message,exports.BinaryReader=jspb.BinaryReader,exports.BinaryWriter=jspb.BinaryWriter,exports.ExtensionFieldInfo=jspb.ExtensionFieldInfo,exports.ExtensionFieldBinaryInfo=jspb.ExtensionFieldBinaryInfo,exports.exportSymbol=goog.exportSymbol,exports.inherits=goog.inherits,exports.object={extend:goog.object.extend},exports.typeOf=goog.typeOf}).call(this,__webpack_require__(3),__webpack_require__(6).Buffer)},function(e,t,l){"use strict";var n=l(4),r=l(9);function o(){this.pending=null,this.pendingTotal=0,this.blockSize=this.constructor.blockSize,this.outSize=this.constructor.outSize,this.hmacStrength=this.constructor.hmacStrength,this.padLength=this.constructor.padLength/8,this.endian="big",this._delta8=this.blockSize/8,this._delta32=this.blockSize/32}t.BlockHash=o,o.prototype.update=function(e,t){if(e=n.toArray(e,t),this.pending?this.pending=this.pending.concat(e):this.pending=e,this.pendingTotal+=e.length,this.pending.length>=this._delta8){var l=(e=this.pending).length%this._delta8;this.pending=e.slice(e.length-l,e.length),0===this.pending.length&&(this.pending=null),e=n.join32(e,0,e.length-l,this.endian);for(var r=0;r<e.length;r+=this._delta32)this._update(e,r,r+this._delta32)}return this},o.prototype.digest=function(e){return this.update(this._pad()),r(null===this.pending),this._digest(e)},o.prototype._pad=function(){var e=this.pendingTotal,t=this._delta8,l=t-(e+this.padLength)%t,n=new Array(l+this.padLength);n[0]=128;for(var r=1;r<l;r++)n[r]=0;if(e<<=3,"big"===this.endian){for(var o=8;o<this.padLength;o++)n[r++]=0;n[r++]=0,n[r++]=0,n[r++]=0,n[r++]=0,n[r++]=e>>>24&255,n[r++]=e>>>16&255,n[r++]=e>>>8&255,n[r++]=255&e}else for(n[r++]=255&e,n[r++]=e>>>8&255,n[r++]=e>>>16&255,n[r++]=e>>>24&255,n[r++]=0,n[r++]=0,n[r++]=0,n[r++]=0,o=8;o<this.padLength;o++)n[r++]=0;return n}},function(e,t,l){"use strict";(function(t){!t.version||0===t.version.indexOf("v0.")||0===t.version.indexOf("v1.")&&0!==t.version.indexOf("v1.8.")?e.exports={nextTick:function(e,l,n,r){if("function"!==typeof e)throw new TypeError('"callback" argument must be a function');var o,u,i=arguments.length;switch(i){case 0:case 1:return t.nextTick(e);case 2:return t.nextTick(function(){e.call(null,l)});case 3:return t.nextTick(function(){e.call(null,l,n)});case 4:return t.nextTick(function(){e.call(null,l,n,r)});default:for(o=new Array(i-1),u=0;u<o.length;)o[u++]=arguments[u];return t.nextTick(function(){e.apply(null,o)})}}}:e.exports=t}).call(this,l(7))},function(e,t,l){"use strict";var n=t;n.base=l(110),n.short=l(109),n.mont=l(108),n.edwards=l(107)},function(e,t,l){var n=l(48),r=n.ADDRESS_PREFIX,o=n.ADDRESS_PREFIX_BYTE,u=(l(19).base64EncodeToString,l(19)),i=u.base64DecodeFromString,s=u.hexStr2byteArray,a=l(50),c=a.encode58,p=a.decode58,d=l(2).ec,f=l(91).keccak256,g=l(89),h=l(48).ADDRESS_SIZE,b=l(49),y=b.byte2hexStr,m=b.byteArray2hexStr;function v(e){65===e.length&&(e=e.slice(1));var t=f(e).toString().substring(24);return s(t=r+t)}function _(e){return v(A(e))}function w(e){var t=M(M(e)).slice(0,4);return t=e.concat(t),c(t)}function A(e){for(var t=new d("secp256k1").keyFromPrivate(e,"bytes").getPublic(),l=t.x,n=t.y,r=l.toString("hex");r.length<64;)r="0"+r;for(var o=n.toString("hex");o.length<64;)o="0"+o;return s("04"+r+o)}function B(e,t){for(var l=new d("secp256k1").keyFromPrivate(t,"bytes").sign(e),n=l.r,r=l.s,o=l.recoveryParam,u=n.toString("hex");u.length<64;)u="0"+u;for(var i=r.toString("hex");i.length<64;)i="0"+i;var a=y(o);return s(u+i+a)}function M(e){var t=new g("SHA-256","HEX"),l=m(e);t.update(l);var n=t.getHash("HEX");return s(n)}e.exports={signTransaction:function(e,t){"string"===typeof e&&(e=s(e));for(var l=t.getRawData(),n=B(M(l.serializeBinary()),e),r=new Uint8Array(n),o=l.getContractList().length,u=0;u<o;u++)t.addSignature(r);return t},passwordToAddress:function(e){return w(_(i(e)))},genPriKey:function(){for(var e=new d("secp256k1").genKeyPair().getPrivate().toString("hex");e.length<64;)e="0"+e;return s(e)},getAddressFromPriKey:_,getPubKeyFromPriKey:A,getBase58CheckAddress:w,isAddressValid:function(e){if("string"!==typeof e)return!1;if(e.length!==h)return!1;var t=p(e);if(25!==t.length)return!1;if(t[0]!==o)return!1;var l=t.slice(21),n=M(M(t=t.slice(0,21))).slice(0,4);return l[0]==n[0]&&l[1]==n[1]&&l[2]==n[2]&&l[3]==n[3]},getBase58CheckAddressFromPriKeyBase64String:function(e){return w(v(A(i(e))))},pkToAddress:function(e){return w(_(s(e)))},decode58Check:function(e){var t=p(e);if(t.length<=4)return console.error("ERROR CHECK"),null;var l=t.slice(0,t.length-4),n=M(M(l));return n[0]===t[l.length]&&n[1]===t[l.length+1]&&n[2]===t[l.length+2]&&n[3]===t[l.length+3]?l:null},signBytes:function(e,t){return"string"===typeof e&&(e=s(e)),B(M(t),e)},SHA256:M}},function(e,t){function l(e){var t=0;return e>="A"&&e<="F"?t=e.charCodeAt(0)-"A".charCodeAt(0)+10:e>="a"&&e<="f"?t=e.charCodeAt(0)-"a".charCodeAt(0)+10:e>="0"&&e<="9"&&(t=e.charCodeAt(0)-"0".charCodeAt(0)),t}function n(e){return e>="A"&&e<="F"||e>="a"&&e<="f"||e>="0"&&e<="9"?1:0}function r(e){return(new o).decodeToByteArray(e)}function o(){var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";this.encode=function(t){for(var l,n,r,o,u,i,s,a="",c=0;c<t.length;)o=(l=t.charCodeAt(c++))>>2,u=(3&l)<<4|(n=t.charCodeAt(c++))>>4,i=(15&n)<<2|(r=t.charCodeAt(c++))>>6,s=63&r,isNaN(n)?i=s=64:isNaN(r)&&(s=64),a=a+e.charAt(o)+e.charAt(u)+e.charAt(i)+e.charAt(s);return a},this.encodeIgnoreUtf8=function(t){for(var l,n,r,o,u,i,s,a="",c=0;c<t.length;)o=(l=t[c++])>>2,u=(3&l)<<4|(n=t[c++])>>4,i=(15&n)<<2|(r=t[c++])>>6,s=63&r,isNaN(n)?i=s=64:isNaN(r)&&(s=64),a=a+e.charAt(o)+e.charAt(u)+e.charAt(i)+e.charAt(s);return a},this.decode=function(t){var l,n,r,o,u,i,s="",a=0;for(t=t.replace(/[^A-Za-z0-9\+\/\=]/g,"");a<t.length;)l=e.indexOf(t.charAt(a++))<<2|(o=e.indexOf(t.charAt(a++)))>>4,n=(15&o)<<4|(u=e.indexOf(t.charAt(a++)))>>2,r=(3&u)<<6|(i=e.indexOf(t.charAt(a++))),s+=String.fromCharCode(l),64!=u&&(s+=String.fromCharCode(n)),64!=i&&(s+=String.fromCharCode(r));return s=this._utf8_decode(s)},this.decodeToByteArray=function(t){var l,n,r,o,u,i,s="",a=0;for(t=t.replace(/[^A-Za-z0-9\+\/\=]/g,"");a<t.length;)l=e.indexOf(t.charAt(a++))<<2|(o=e.indexOf(t.charAt(a++)))>>4,n=(15&o)<<4|(u=e.indexOf(t.charAt(a++)))>>2,r=(3&u)<<6|(i=e.indexOf(t.charAt(a++))),s+=String.fromCharCode(l),64!=u&&(s+=String.fromCharCode(n)),64!=i&&(s+=String.fromCharCode(r));return this._out2ByteArray(s)},this._out2ByteArray=function(e){for(var t=new Array(e.length),l=0,n=0;l<e.length;)n=e.charCodeAt(l),t[l]=n,l++;return t},this._utf8_encode=function(e){e=e.replace(/\r\n/g,"\n");for(var t="",l=0;l<e.length;l++){var n=e.charCodeAt(l);n<128?t+=String.fromCharCode(n):n>127&&n<2048?(t+=String.fromCharCode(n>>6|192),t+=String.fromCharCode(63&n|128)):(t+=String.fromCharCode(n>>12|224),t+=String.fromCharCode(n>>6&63|128),t+=String.fromCharCode(63&n|128))}return t},this._utf8_decode=function(e){for(var t="",l=0,n=c1=c2=0;l<e.length;)(n=e.charCodeAt(l))<128?(t+=String.fromCharCode(n),l++):n>191&&n<224?(c2=e.charCodeAt(l+1),t+=String.fromCharCode((31&n)<<6|63&c2),l+=2):(c2=e.charCodeAt(l+1),c3=e.charCodeAt(l+2),t+=String.fromCharCode((15&n)<<12|(63&c2)<<6|63&c3),l+=3);return t}}e.exports={base64EncodeToString:function(e){return(new o).encodeIgnoreUtf8(e)},base64DecodeFromString:r,hexStr2byteArray:function(e){for(var t=Array(),r=0,o=0,u=0,i=0;i<e.length;i++){var s=e.charAt(i);n(s)&&(r<<=4,r+=l(s),0===++o%2&&(t[u++]=r,r=0))}return t},stringToBytes:function(e){var t,l,n=new Array;t=e.length;for(var r=0;r<t;r++)(l=e.charCodeAt(r))>=65536&&l<=1114111?(n.push(l>>18&7|240),n.push(l>>12&63|128),n.push(l>>6&63|128),n.push(63&l|128)):l>=2048&&l<=65535?(n.push(l>>12&15|224),n.push(l>>6&63|128),n.push(63&l|128)):l>=128&&l<=2047?(n.push(l>>6&31|192),n.push(63&l|128)):n.push(255&l);return n}}},function(e){e.exports=["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"]},function(e,t,l){"use strict";var n=l(1).Buffer,r=n.isEncoding||function(e){switch((e=""+e)&&e.toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":case"raw":return!0;default:return!1}};function o(e){var t;switch(this.encoding=function(e){var t=function(e){if(!e)return"utf8";for(var t;;)switch(e){case"utf8":case"utf-8":return"utf8";case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return"utf16le";case"latin1":case"binary":return"latin1";case"base64":case"ascii":case"hex":return e;default:if(t)return;e=(""+e).toLowerCase(),t=!0}}(e);if("string"!==typeof t&&(n.isEncoding===r||!r(e)))throw new Error("Unknown encoding: "+e);return t||e}(e),this.encoding){case"utf16le":this.text=s,this.end=a,t=4;break;case"utf8":this.fillLast=i,t=4;break;case"base64":this.text=c,this.end=p,t=3;break;default:return this.write=d,void(this.end=f)}this.lastNeed=0,this.lastTotal=0,this.lastChar=n.allocUnsafe(t)}function u(e){return e<=127?0:e>>5===6?2:e>>4===14?3:e>>3===30?4:e>>6===2?-1:-2}function i(e){var t=this.lastTotal-this.lastNeed,l=function(e,t,l){if(128!==(192&t[0]))return e.lastNeed=0,"\ufffd";if(e.lastNeed>1&&t.length>1){if(128!==(192&t[1]))return e.lastNeed=1,"\ufffd";if(e.lastNeed>2&&t.length>2&&128!==(192&t[2]))return e.lastNeed=2,"\ufffd"}}(this,e);return void 0!==l?l:this.lastNeed<=e.length?(e.copy(this.lastChar,t,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal)):(e.copy(this.lastChar,t,0,e.length),void(this.lastNeed-=e.length))}function s(e,t){if((e.length-t)%2===0){var l=e.toString("utf16le",t);if(l){var n=l.charCodeAt(l.length-1);if(n>=55296&&n<=56319)return this.lastNeed=2,this.lastTotal=4,this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1],l.slice(0,-1)}return l}return this.lastNeed=1,this.lastTotal=2,this.lastChar[0]=e[e.length-1],e.toString("utf16le",t,e.length-1)}function a(e){var t=e&&e.length?this.write(e):"";if(this.lastNeed){var l=this.lastTotal-this.lastNeed;return t+this.lastChar.toString("utf16le",0,l)}return t}function c(e,t){var l=(e.length-t)%3;return 0===l?e.toString("base64",t):(this.lastNeed=3-l,this.lastTotal=3,1===l?this.lastChar[0]=e[e.length-1]:(this.lastChar[0]=e[e.length-2],this.lastChar[1]=e[e.length-1]),e.toString("base64",t,e.length-l))}function p(e){var t=e&&e.length?this.write(e):"";return this.lastNeed?t+this.lastChar.toString("base64",0,3-this.lastNeed):t}function d(e){return e.toString(this.encoding)}function f(e){return e&&e.length?this.write(e):""}t.StringDecoder=o,o.prototype.write=function(e){if(0===e.length)return"";var t,l;if(this.lastNeed){if(void 0===(t=this.fillLast(e)))return"";l=this.lastNeed,this.lastNeed=0}else l=0;return l<e.length?t?t+this.text(e,l):this.text(e,l):t||""},o.prototype.end=function(e){var t=e&&e.length?this.write(e):"";return this.lastNeed?t+"\ufffd":t},o.prototype.text=function(e,t){var l=function(e,t,l){var n=t.length-1;if(n<l)return 0;var r=u(t[n]);if(r>=0)return r>0&&(e.lastNeed=r-1),r;if(--n<l||-2===r)return 0;if((r=u(t[n]))>=0)return r>0&&(e.lastNeed=r-2),r;if(--n<l||-2===r)return 0;if((r=u(t[n]))>=0)return r>0&&(2===r?r=0:e.lastNeed=r-3),r;return 0}(this,e,t);if(!this.lastNeed)return e.toString("utf8",t);this.lastTotal=l;var n=e.length-(l-this.lastNeed);return e.copy(this.lastChar,0,n),e.toString("utf8",t,n)},o.prototype.fillLast=function(e){if(this.lastNeed<=e.length)return e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,this.lastNeed),this.lastChar.toString(this.encoding,0,this.lastTotal);e.copy(this.lastChar,this.lastTotal-this.lastNeed,0,e.length),this.lastNeed-=e.length}},function(e,t,l){"use strict";(function(t,n,r){var o=l(16);function u(e){var t=this;this.next=null,this.entry=null,this.finish=function(){!function(e,t,l){var n=e.entry;e.entry=null;for(;n;){var r=n.callback;t.pendingcb--,r(l),n=n.next}t.corkedRequestsFree?t.corkedRequestsFree.next=e:t.corkedRequestsFree=e}(t,e)}}e.exports=m;var i,s=!t.browser&&["v0.10","v0.9."].indexOf(t.version.slice(0,5))>-1?n:o.nextTick;m.WritableState=y;var a=l(13);a.inherits=l(0);var c={deprecate:l(78)},p=l(36),d=l(1).Buffer,f=r.Uint8Array||function(){};var g,h=l(35);function b(){}function y(e,t){i=i||l(8),e=e||{};var n=t instanceof i;this.objectMode=!!e.objectMode,n&&(this.objectMode=this.objectMode||!!e.writableObjectMode);var r=e.highWaterMark,a=e.writableHighWaterMark,c=this.objectMode?16:16384;this.highWaterMark=r||0===r?r:n&&(a||0===a)?a:c,this.highWaterMark=Math.floor(this.highWaterMark),this.finalCalled=!1,this.needDrain=!1,this.ending=!1,this.ended=!1,this.finished=!1,this.destroyed=!1;var p=!1===e.decodeStrings;this.decodeStrings=!p,this.defaultEncoding=e.defaultEncoding||"utf8",this.length=0,this.writing=!1,this.corked=0,this.sync=!0,this.bufferProcessing=!1,this.onwrite=function(e){!function(e,t){var l=e._writableState,n=l.sync,r=l.writecb;if(function(e){e.writing=!1,e.writecb=null,e.length-=e.writelen,e.writelen=0}(l),t)!function(e,t,l,n,r){--t.pendingcb,l?(o.nextTick(r,n),o.nextTick(M,e,t),e._writableState.errorEmitted=!0,e.emit("error",n)):(r(n),e._writableState.errorEmitted=!0,e.emit("error",n),M(e,t))}(e,l,n,t,r);else{var u=A(l);u||l.corked||l.bufferProcessing||!l.bufferedRequest||w(e,l),n?s(_,e,l,u,r):_(e,l,u,r)}}(t,e)},this.writecb=null,this.writelen=0,this.bufferedRequest=null,this.lastBufferedRequest=null,this.pendingcb=0,this.prefinished=!1,this.errorEmitted=!1,this.bufferedRequestCount=0,this.corkedRequestsFree=new u(this)}function m(e){if(i=i||l(8),!g.call(m,this)&&!(this instanceof i))return new m(e);this._writableState=new y(e,this),this.writable=!0,e&&("function"===typeof e.write&&(this._write=e.write),"function"===typeof e.writev&&(this._writev=e.writev),"function"===typeof e.destroy&&(this._destroy=e.destroy),"function"===typeof e.final&&(this._final=e.final)),p.call(this)}function v(e,t,l,n,r,o,u){t.writelen=n,t.writecb=u,t.writing=!0,t.sync=!0,l?e._writev(r,t.onwrite):e._write(r,o,t.onwrite),t.sync=!1}function _(e,t,l,n){l||function(e,t){0===t.length&&t.needDrain&&(t.needDrain=!1,e.emit("drain"))}(e,t),t.pendingcb--,n(),M(e,t)}function w(e,t){t.bufferProcessing=!0;var l=t.bufferedRequest;if(e._writev&&l&&l.next){var n=t.bufferedRequestCount,r=new Array(n),o=t.corkedRequestsFree;o.entry=l;for(var i=0,s=!0;l;)r[i]=l,l.isBuf||(s=!1),l=l.next,i+=1;r.allBuffers=s,v(e,t,!0,t.length,r,"",o.finish),t.pendingcb++,t.lastBufferedRequest=null,o.next?(t.corkedRequestsFree=o.next,o.next=null):t.corkedRequestsFree=new u(t),t.bufferedRequestCount=0}else{for(;l;){var a=l.chunk,c=l.encoding,p=l.callback;if(v(e,t,!1,t.objectMode?1:a.length,a,c,p),l=l.next,t.bufferedRequestCount--,t.writing)break}null===l&&(t.lastBufferedRequest=null)}t.bufferedRequest=l,t.bufferProcessing=!1}function A(e){return e.ending&&0===e.length&&null===e.bufferedRequest&&!e.finished&&!e.writing}function B(e,t){e._final(function(l){t.pendingcb--,l&&e.emit("error",l),t.prefinished=!0,e.emit("prefinish"),M(e,t)})}function M(e,t){var l=A(t);return l&&(!function(e,t){t.prefinished||t.finalCalled||("function"===typeof e._final?(t.pendingcb++,t.finalCalled=!0,o.nextTick(B,e,t)):(t.prefinished=!0,e.emit("prefinish")))}(e,t),0===t.pendingcb&&(t.finished=!0,e.emit("finish"))),l}a.inherits(m,p),y.prototype.getBuffer=function(){for(var e=this.bufferedRequest,t=[];e;)t.push(e),e=e.next;return t},function(){try{Object.defineProperty(y.prototype,"buffer",{get:c.deprecate(function(){return this.getBuffer()},"_writableState.buffer is deprecated. Use _writableState.getBuffer instead.","DEP0003")})}catch(e){}}(),"function"===typeof Symbol&&Symbol.hasInstance&&"function"===typeof Function.prototype[Symbol.hasInstance]?(g=Function.prototype[Symbol.hasInstance],Object.defineProperty(m,Symbol.hasInstance,{value:function(e){return!!g.call(this,e)||this===m&&(e&&e._writableState instanceof y)}})):g=function(e){return e instanceof this},m.prototype.pipe=function(){this.emit("error",new Error("Cannot pipe, not readable"))},m.prototype.write=function(e,t,l){var n,r=this._writableState,u=!1,i=!r.objectMode&&(n=e,d.isBuffer(n)||n instanceof f);return i&&!d.isBuffer(e)&&(e=function(e){return d.from(e)}(e)),"function"===typeof t&&(l=t,t=null),i?t="buffer":t||(t=r.defaultEncoding),"function"!==typeof l&&(l=b),r.ended?function(e,t){var l=new Error("write after end");e.emit("error",l),o.nextTick(t,l)}(this,l):(i||function(e,t,l,n){var r=!0,u=!1;return null===l?u=new TypeError("May not write null values to stream"):"string"===typeof l||void 0===l||t.objectMode||(u=new TypeError("Invalid non-string/buffer chunk")),u&&(e.emit("error",u),o.nextTick(n,u),r=!1),r}(this,r,e,l))&&(r.pendingcb++,u=function(e,t,l,n,r,o){if(!l){var u=function(e,t,l){e.objectMode||!1===e.decodeStrings||"string"!==typeof t||(t=d.from(t,l));return t}(t,n,r);n!==u&&(l=!0,r="buffer",n=u)}var i=t.objectMode?1:n.length;t.length+=i;var s=t.length<t.highWaterMark;s||(t.needDrain=!0);if(t.writing||t.corked){var a=t.lastBufferedRequest;t.lastBufferedRequest={chunk:n,encoding:r,isBuf:l,callback:o,next:null},a?a.next=t.lastBufferedRequest:t.bufferedRequest=t.lastBufferedRequest,t.bufferedRequestCount+=1}else v(e,t,!1,i,n,r,o);return s}(this,r,i,e,t,l)),u},m.prototype.cork=function(){this._writableState.corked++},m.prototype.uncork=function(){var e=this._writableState;e.corked&&(e.corked--,e.writing||e.corked||e.finished||e.bufferProcessing||!e.bufferedRequest||w(this,e))},m.prototype.setDefaultEncoding=function(e){if("string"===typeof e&&(e=e.toLowerCase()),!(["hex","utf8","utf-8","ascii","binary","base64","ucs2","ucs-2","utf16le","utf-16le","raw"].indexOf((e+"").toLowerCase())>-1))throw new TypeError("Unknown encoding: "+e);return this._writableState.defaultEncoding=e,this},Object.defineProperty(m.prototype,"writableHighWaterMark",{enumerable:!1,get:function(){return this._writableState.highWaterMark}}),m.prototype._write=function(e,t,l){l(new Error("_write() is not implemented"))},m.prototype._writev=null,m.prototype.end=function(e,t,l){var n=this._writableState;"function"===typeof e?(l=e,e=null,t=null):"function"===typeof t&&(l=t,t=null),null!==e&&void 0!==e&&this.write(e,t),n.corked&&(n.corked=1,this.uncork()),n.ending||n.finished||function(e,t,l){t.ending=!0,M(e,t),l&&(t.finished?o.nextTick(l):e.once("finish",l));t.ended=!0,e.writable=!1}(this,n,l)},Object.defineProperty(m.prototype,"destroyed",{get:function(){return void 0!==this._writableState&&this._writableState.destroyed},set:function(e){this._writableState&&(this._writableState.destroyed=e)}}),m.prototype.destroy=h.destroy,m.prototype._undestroy=h.undestroy,m.prototype._destroy=function(e,t){this.end(),t(e)}}).call(this,l(7),l(80).setImmediate,l(3))},function(e,t,l){(t=e.exports=l(37)).Stream=t,t.Readable=t,t.Writable=l(22),t.Duplex=l(8),t.Transform=l(34),t.PassThrough=l(77)},function(e,t){function l(e){return(l="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function n(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function r(e){return"function"===typeof e}function o(e){return"object"===l(e)&&null!==e}function u(e){return void 0===e}e.exports=n,n.EventEmitter=n,n.prototype._events=void 0,n.prototype._maxListeners=void 0,n.defaultMaxListeners=10,n.prototype.setMaxListeners=function(e){if("number"!==typeof e||e<0||isNaN(e))throw TypeError("n must be a positive number");return this._maxListeners=e,this},n.prototype.emit=function(e){var t,l,n,i,s,a;if(this._events||(this._events={}),"error"===e&&(!this._events.error||o(this._events.error)&&!this._events.error.length)){if((t=arguments[1])instanceof Error)throw t;var c=new Error('Uncaught, unspecified "error" event. ('+t+")");throw c.context=t,c}if(u(l=this._events[e]))return!1;if(r(l))switch(arguments.length){case 1:l.call(this);break;case 2:l.call(this,arguments[1]);break;case 3:l.call(this,arguments[1],arguments[2]);break;default:i=Array.prototype.slice.call(arguments,1),l.apply(this,i)}else if(o(l))for(i=Array.prototype.slice.call(arguments,1),n=(a=l.slice()).length,s=0;s<n;s++)a[s].apply(this,i);return!0},n.prototype.addListener=function(e,t){var l;if(!r(t))throw TypeError("listener must be a function");return this._events||(this._events={}),this._events.newListener&&this.emit("newListener",e,r(t.listener)?t.listener:t),this._events[e]?o(this._events[e])?this._events[e].push(t):this._events[e]=[this._events[e],t]:this._events[e]=t,o(this._events[e])&&!this._events[e].warned&&(l=u(this._maxListeners)?n.defaultMaxListeners:this._maxListeners)&&l>0&&this._events[e].length>l&&(this._events[e].warned=!0,console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[e].length),"function"===typeof console.trace&&console.trace()),this},n.prototype.on=n.prototype.addListener,n.prototype.once=function(e,t){if(!r(t))throw TypeError("listener must be a function");var l=!1;function n(){this.removeListener(e,n),l||(l=!0,t.apply(this,arguments))}return n.listener=t,this.on(e,n),this},n.prototype.removeListener=function(e,t){var l,n,u,i;if(!r(t))throw TypeError("listener must be a function");if(!this._events||!this._events[e])return this;if(u=(l=this._events[e]).length,n=-1,l===t||r(l.listener)&&l.listener===t)delete this._events[e],this._events.removeListener&&this.emit("removeListener",e,t);else if(o(l)){for(i=u;i-- >0;)if(l[i]===t||l[i].listener&&l[i].listener===t){n=i;break}if(n<0)return this;1===l.length?(l.length=0,delete this._events[e]):l.splice(n,1),this._events.removeListener&&this.emit("removeListener",e,t)}return this},n.prototype.removeAllListeners=function(e){var t,l;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[e]&&delete this._events[e],this;if(0===arguments.length){for(t in this._events)"removeListener"!==t&&this.removeAllListeners(t);return this.removeAllListeners("removeListener"),this._events={},this}if(r(l=this._events[e]))this.removeListener(e,l);else if(l)for(;l.length;)this.removeListener(e,l[l.length-1]);return delete this._events[e],this},n.prototype.listeners=function(e){return this._events&&this._events[e]?r(this._events[e])?[this._events[e]]:this._events[e].slice():[]},n.prototype.listenerCount=function(e){if(this._events){var t=this._events[e];if(r(t))return 1;if(t)return t.length}return 0},n.listenerCount=function(e,t){return e.listenerCount(t)}},function(e,t,l){var n=t;n.utils=l(4),n.common=l(15),n.sha=l(105),n.ripemd=l(101),n.hmac=l(100),n.sha1=n.sha.sha1,n.sha256=n.sha.sha256,n.sha224=n.sha.sha224,n.sha384=n.sha.sha384,n.sha512=n.sha.sha512,n.ripemd160=n.ripemd.ripemd160},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,l){var n=l(65),r=l(33),o=l(32),u=l(29),i=l(28),s=l(1).Buffer,a=s.alloc(128),c={md5:16,sha1:20,sha224:28,sha256:32,sha384:48,sha512:64,rmd160:20,ripemd160:20};function p(e,t,l){var u=function(e){return"rmd160"===e||"ripemd160"===e?r:"md5"===e?n:function(t){return o(e).update(t).digest()}}(e),i="sha512"===e||"sha384"===e?128:64;t.length>i?t=u(t):t.length<i&&(t=s.concat([t,a],i));for(var p=s.allocUnsafe(i+c[e]),d=s.allocUnsafe(i+c[e]),f=0;f<i;f++)p[f]=54^t[f],d[f]=92^t[f];var g=s.allocUnsafe(i+l+4);p.copy(g,0,0,i),this.ipad1=g,this.ipad2=p,this.opad=d,this.alg=e,this.blocksize=i,this.hash=u,this.size=c[e]}p.prototype.run=function(e,t){return e.copy(t,this.blocksize),this.hash(t).copy(this.opad,this.blocksize),this.hash(this.opad)},e.exports=function(e,t,l,n,r){u(e,t,l,n),s.isBuffer(e)||(e=s.from(e,i)),s.isBuffer(t)||(t=s.from(t,i));var o=new p(r=r||"sha1",e,t.length),a=s.allocUnsafe(n),d=s.allocUnsafe(t.length+4);t.copy(d,0,0,t.length);for(var f=0,g=c[r],h=Math.ceil(n/g),b=1;b<=h;b++){d.writeUInt32BE(b,t.length);for(var y=o.run(d,o.ipad1),m=y,v=1;v<l;v++){m=o.run(m,o.ipad2);for(var _=0;_<g;_++)y[_]^=m[_]}y.copy(a,f),f+=g}return a}},function(e,t,l){(function(t){var l;t.browser?l="utf-8":l=parseInt(t.version.split(".")[0].slice(1),10)>=6?"utf-8":"binary";e.exports=l}).call(this,l(7))},function(e,t,l){(function(t){var l=Math.pow(2,30)-1;function n(e,l){if("string"!==typeof e&&!t.isBuffer(e))throw new TypeError(l+" must be a buffer or string")}e.exports=function(e,t,r,o){if(n(e,"Password"),n(t,"Salt"),"number"!==typeof r)throw new TypeError("Iterations not a number");if(r<0)throw new TypeError("Bad iterations");if("number"!==typeof o)throw new TypeError("Key length not a number");if(o<0||o>l||o!==o)throw new TypeError("Bad key length")}}).call(this,l(6).Buffer)},function(e,t,l){var n=l(0),r=l(10),o=l(1).Buffer,u=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591],i=new Array(160);function s(){this.init(),this._w=i,r.call(this,128,112)}function a(e,t,l){return l^e&(t^l)}function c(e,t,l){return e&t|l&(e|t)}function p(e,t){return(e>>>28|t<<4)^(t>>>2|e<<30)^(t>>>7|e<<25)}function d(e,t){return(e>>>14|t<<18)^(e>>>18|t<<14)^(t>>>9|e<<23)}function f(e,t){return(e>>>1|t<<31)^(e>>>8|t<<24)^e>>>7}function g(e,t){return(e>>>1|t<<31)^(e>>>8|t<<24)^(e>>>7|t<<25)}function h(e,t){return(e>>>19|t<<13)^(t>>>29|e<<3)^e>>>6}function b(e,t){return(e>>>19|t<<13)^(t>>>29|e<<3)^(e>>>6|t<<26)}function y(e,t){return e>>>0<t>>>0?1:0}n(s,r),s.prototype.init=function(){return this._ah=1779033703,this._bh=3144134277,this._ch=1013904242,this._dh=2773480762,this._eh=1359893119,this._fh=2600822924,this._gh=528734635,this._hh=1541459225,this._al=4089235720,this._bl=2227873595,this._cl=4271175723,this._dl=1595750129,this._el=2917565137,this._fl=725511199,this._gl=4215389547,this._hl=327033209,this},s.prototype._update=function(e){for(var t=this._w,l=0|this._ah,n=0|this._bh,r=0|this._ch,o=0|this._dh,i=0|this._eh,s=0|this._fh,m=0|this._gh,v=0|this._hh,_=0|this._al,w=0|this._bl,A=0|this._cl,B=0|this._dl,M=0|this._el,T=0|this._fl,E=0|this._gl,S=0|this._hl,I=0;I<32;I+=2)t[I]=e.readInt32BE(4*I),t[I+1]=e.readInt32BE(4*I+4);for(;I<160;I+=2){var j=t[I-30],F=t[I-30+1],C=f(j,F),O=g(F,j),k=h(j=t[I-4],F=t[I-4+1]),R=b(F,j),x=t[I-14],z=t[I-14+1],N=t[I-32],W=t[I-32+1],U=O+z|0,D=C+x+y(U,O)|0;D=(D=D+k+y(U=U+R|0,R)|0)+N+y(U=U+W|0,W)|0,t[I]=D,t[I+1]=U}for(var L=0;L<160;L+=2){D=t[L],U=t[L+1];var P=c(l,n,r),V=c(_,w,A),H=p(l,_),q=p(_,l),G=d(i,M),$=d(M,i),X=u[L],Y=u[L+1],J=a(i,s,m),K=a(M,T,E),Z=S+$|0,Q=v+G+y(Z,S)|0;Q=(Q=(Q=Q+J+y(Z=Z+K|0,K)|0)+X+y(Z=Z+Y|0,Y)|0)+D+y(Z=Z+U|0,U)|0;var ee=q+V|0,te=H+P+y(ee,q)|0;v=m,S=E,m=s,E=T,s=i,T=M,i=o+Q+y(M=B+Z|0,B)|0,o=r,B=A,r=n,A=w,n=l,w=_,l=Q+te+y(_=Z+ee|0,Z)|0}this._al=this._al+_|0,this._bl=this._bl+w|0,this._cl=this._cl+A|0,this._dl=this._dl+B|0,this._el=this._el+M|0,this._fl=this._fl+T|0,this._gl=this._gl+E|0,this._hl=this._hl+S|0,this._ah=this._ah+l+y(this._al,_)|0,this._bh=this._bh+n+y(this._bl,w)|0,this._ch=this._ch+r+y(this._cl,A)|0,this._dh=this._dh+o+y(this._dl,B)|0,this._eh=this._eh+i+y(this._el,M)|0,this._fh=this._fh+s+y(this._fl,T)|0,this._gh=this._gh+m+y(this._gl,E)|0,this._hh=this._hh+v+y(this._hl,S)|0},s.prototype._hash=function(){var e=o.allocUnsafe(64);function t(t,l,n){e.writeInt32BE(t,n),e.writeInt32BE(l,n+4)}return t(this._ah,this._al,0),t(this._bh,this._bl,8),t(this._ch,this._cl,16),t(this._dh,this._dl,24),t(this._eh,this._el,32),t(this._fh,this._fl,40),t(this._gh,this._gl,48),t(this._hh,this._hl,56),e},e.exports=s},function(e,t,l){var n=l(0),r=l(10),o=l(1).Buffer,u=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],i=new Array(64);function s(){this.init(),this._w=i,r.call(this,64,56)}function a(e,t,l){return l^e&(t^l)}function c(e,t,l){return e&t|l&(e|t)}function p(e){return(e>>>2|e<<30)^(e>>>13|e<<19)^(e>>>22|e<<10)}function d(e){return(e>>>6|e<<26)^(e>>>11|e<<21)^(e>>>25|e<<7)}function f(e){return(e>>>7|e<<25)^(e>>>18|e<<14)^e>>>3}n(s,r),s.prototype.init=function(){return this._a=1779033703,this._b=3144134277,this._c=1013904242,this._d=2773480762,this._e=1359893119,this._f=2600822924,this._g=528734635,this._h=1541459225,this},s.prototype._update=function(e){for(var t,l=this._w,n=0|this._a,r=0|this._b,o=0|this._c,i=0|this._d,s=0|this._e,g=0|this._f,h=0|this._g,b=0|this._h,y=0;y<16;++y)l[y]=e.readInt32BE(4*y);for(;y<64;++y)l[y]=0|(((t=l[y-2])>>>17|t<<15)^(t>>>19|t<<13)^t>>>10)+l[y-7]+f(l[y-15])+l[y-16];for(var m=0;m<64;++m){var v=b+d(s)+a(s,g,h)+u[m]+l[m]|0,_=p(n)+c(n,r,o)|0;b=h,h=g,g=s,s=i+v|0,i=o,o=r,r=n,n=v+_|0}this._a=n+this._a|0,this._b=r+this._b|0,this._c=o+this._c|0,this._d=i+this._d|0,this._e=s+this._e|0,this._f=g+this._f|0,this._g=h+this._g|0,this._h=b+this._h|0},s.prototype._hash=function(){var e=o.allocUnsafe(32);return e.writeInt32BE(this._a,0),e.writeInt32BE(this._b,4),e.writeInt32BE(this._c,8),e.writeInt32BE(this._d,12),e.writeInt32BE(this._e,16),e.writeInt32BE(this._f,20),e.writeInt32BE(this._g,24),e.writeInt32BE(this._h,28),e},e.exports=s},function(e,t,l){(t=e.exports=function(e){e=e.toLowerCase();var l=t[e];if(!l)throw new Error(e+" is not supported (we accept pull requests)");return new l}).sha=l(72),t.sha1=l(71),t.sha224=l(70),t.sha256=l(31),t.sha384=l(69),t.sha512=l(30)},function(e,t,l){"use strict";var n=l(6).Buffer,r=l(0),o=l(39),u=new Array(16),i=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],s=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],a=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],c=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11],p=[0,1518500249,1859775393,2400959708,2840853838],d=[1352829926,1548603684,1836072691,2053994217,0];function f(){o.call(this,64),this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520}function g(e,t){return e<<t|e>>>32-t}function h(e,t,l,n,r,o,u,i){return g(e+(t^l^n)+o+u|0,i)+r|0}function b(e,t,l,n,r,o,u,i){return g(e+(t&l|~t&n)+o+u|0,i)+r|0}function y(e,t,l,n,r,o,u,i){return g(e+((t|~l)^n)+o+u|0,i)+r|0}function m(e,t,l,n,r,o,u,i){return g(e+(t&n|l&~n)+o+u|0,i)+r|0}function v(e,t,l,n,r,o,u,i){return g(e+(t^(l|~n))+o+u|0,i)+r|0}r(f,o),f.prototype._update=function(){for(var e=u,t=0;t<16;++t)e[t]=this._block.readInt32LE(4*t);for(var l=0|this._a,n=0|this._b,r=0|this._c,o=0|this._d,f=0|this._e,_=0|this._a,w=0|this._b,A=0|this._c,B=0|this._d,M=0|this._e,T=0;T<80;T+=1){var E,S;T<16?(E=h(l,n,r,o,f,e[i[T]],p[0],a[T]),S=v(_,w,A,B,M,e[s[T]],d[0],c[T])):T<32?(E=b(l,n,r,o,f,e[i[T]],p[1],a[T]),S=m(_,w,A,B,M,e[s[T]],d[1],c[T])):T<48?(E=y(l,n,r,o,f,e[i[T]],p[2],a[T]),S=y(_,w,A,B,M,e[s[T]],d[2],c[T])):T<64?(E=m(l,n,r,o,f,e[i[T]],p[3],a[T]),S=b(_,w,A,B,M,e[s[T]],d[3],c[T])):(E=v(l,n,r,o,f,e[i[T]],p[4],a[T]),S=h(_,w,A,B,M,e[s[T]],d[4],c[T])),l=f,f=o,o=g(r,10),r=n,n=E,_=M,M=B,B=g(A,10),A=w,w=S}var I=this._b+r+B|0;this._b=this._c+o+M|0,this._c=this._d+f+_|0,this._d=this._e+l+w|0,this._e=this._a+n+A|0,this._a=I},f.prototype._digest=function(){this._block[this._blockOffset++]=128,this._blockOffset>56&&(this._block.fill(0,this._blockOffset,64),this._update(),this._blockOffset=0),this._block.fill(0,this._blockOffset,56),this._block.writeUInt32LE(this._length[0],56),this._block.writeUInt32LE(this._length[1],60),this._update();var e=n.alloc?n.alloc(20):new n(20);return e.writeInt32LE(this._a,0),e.writeInt32LE(this._b,4),e.writeInt32LE(this._c,8),e.writeInt32LE(this._d,12),e.writeInt32LE(this._e,16),e},e.exports=f},function(e,t,l){"use strict";e.exports=o;var n=l(8),r=l(13);function o(e){if(!(this instanceof o))return new o(e);n.call(this,e),this._transformState={afterTransform:function(e,t){var l=this._transformState;l.transforming=!1;var n=l.writecb;if(!n)return this.emit("error",new Error("write callback called multiple times"));l.writechunk=null,l.writecb=null,null!=t&&this.push(t),n(e);var r=this._readableState;r.reading=!1,(r.needReadable||r.length<r.highWaterMark)&&this._read(r.highWaterMark)}.bind(this),needTransform:!1,transforming:!1,writecb:null,writechunk:null,writeencoding:null},this._readableState.needReadable=!0,this._readableState.sync=!1,e&&("function"===typeof e.transform&&(this._transform=e.transform),"function"===typeof e.flush&&(this._flush=e.flush)),this.on("prefinish",u)}function u(){var e=this;"function"===typeof this._flush?this._flush(function(t,l){i(e,t,l)}):i(this,null,null)}function i(e,t,l){if(t)return e.emit("error",t);if(null!=l&&e.push(l),e._writableState.length)throw new Error("Calling transform done when ws.length != 0");if(e._transformState.transforming)throw new Error("Calling transform done when still transforming");return e.push(null)}r.inherits=l(0),r.inherits(o,n),o.prototype.push=function(e,t){return this._transformState.needTransform=!1,n.prototype.push.call(this,e,t)},o.prototype._transform=function(e,t,l){throw new Error("_transform() is not implemented")},o.prototype._write=function(e,t,l){var n=this._transformState;if(n.writecb=l,n.writechunk=e,n.writeencoding=t,!n.transforming){var r=this._readableState;(n.needTransform||r.needReadable||r.length<r.highWaterMark)&&this._read(r.highWaterMark)}},o.prototype._read=function(e){var t=this._transformState;null!==t.writechunk&&t.writecb&&!t.transforming?(t.transforming=!0,this._transform(t.writechunk,t.writeencoding,t.afterTransform)):t.needTransform=!0},o.prototype._destroy=function(e,t){var l=this;n.prototype._destroy.call(this,e,function(e){t(e),l.emit("close")})}},function(e,t,l){"use strict";var n=l(16);function r(e,t){e.emit("error",t)}e.exports={destroy:function(e,t){var l=this,o=this._readableState&&this._readableState.destroyed,u=this._writableState&&this._writableState.destroyed;return o||u?(t?t(e):!e||this._writableState&&this._writableState.errorEmitted||n.nextTick(r,this,e),this):(this._readableState&&(this._readableState.destroyed=!0),this._writableState&&(this._writableState.destroyed=!0),this._destroy(e||null,function(e){!t&&e?(n.nextTick(r,l,e),l._writableState&&(l._writableState.errorEmitted=!0)):t&&t(e)}),this)},undestroy:function(){this._readableState&&(this._readableState.destroyed=!1,this._readableState.reading=!1,this._readableState.ended=!1,this._readableState.endEmitted=!1),this._writableState&&(this._writableState.destroyed=!1,this._writableState.ended=!1,this._writableState.ending=!1,this._writableState.finished=!1,this._writableState.errorEmitted=!1)}}},function(e,t,l){e.exports=l(24).EventEmitter},function(e,t,l){"use strict";(function(t,n){var r=l(16);e.exports=v;var o,u=l(51);v.ReadableState=m;l(24).EventEmitter;var i=function(e,t){return e.listeners(t).length},s=l(36),a=l(1).Buffer,c=t.Uint8Array||function(){};var p=l(13);p.inherits=l(0);var d=l(83),f=void 0;f=d&&d.debuglog?d.debuglog("stream"):function(){};var g,h=l(82),b=l(35);p.inherits(v,s);var y=["error","close","destroy","pause","resume"];function m(e,t){o=o||l(8),e=e||{};var n=t instanceof o;this.objectMode=!!e.objectMode,n&&(this.objectMode=this.objectMode||!!e.readableObjectMode);var r=e.highWaterMark,u=e.readableHighWaterMark,i=this.objectMode?16:16384;this.highWaterMark=r||0===r?r:n&&(u||0===u)?u:i,this.highWaterMark=Math.floor(this.highWaterMark),this.buffer=new h,this.length=0,this.pipes=null,this.pipesCount=0,this.flowing=null,this.ended=!1,this.endEmitted=!1,this.reading=!1,this.sync=!0,this.needReadable=!1,this.emittedReadable=!1,this.readableListening=!1,this.resumeScheduled=!1,this.destroyed=!1,this.defaultEncoding=e.defaultEncoding||"utf8",this.awaitDrain=0,this.readingMore=!1,this.decoder=null,this.encoding=null,e.encoding&&(g||(g=l(21).StringDecoder),this.decoder=new g(e.encoding),this.encoding=e.encoding)}function v(e){if(o=o||l(8),!(this instanceof v))return new v(e);this._readableState=new m(e,this),this.readable=!0,e&&("function"===typeof e.read&&(this._read=e.read),"function"===typeof e.destroy&&(this._destroy=e.destroy)),s.call(this)}function _(e,t,l,n,r){var o,u=e._readableState;null===t?(u.reading=!1,function(e,t){if(t.ended)return;if(t.decoder){var l=t.decoder.end();l&&l.length&&(t.buffer.push(l),t.length+=t.objectMode?1:l.length)}t.ended=!0,M(e)}(e,u)):(r||(o=function(e,t){var l;n=t,a.isBuffer(n)||n instanceof c||"string"===typeof t||void 0===t||e.objectMode||(l=new TypeError("Invalid non-string/buffer chunk"));var n;return l}(u,t)),o?e.emit("error",o):u.objectMode||t&&t.length>0?("string"===typeof t||u.objectMode||Object.getPrototypeOf(t)===a.prototype||(t=function(e){return a.from(e)}(t)),n?u.endEmitted?e.emit("error",new Error("stream.unshift() after end event")):w(e,u,t,!0):u.ended?e.emit("error",new Error("stream.push() after EOF")):(u.reading=!1,u.decoder&&!l?(t=u.decoder.write(t),u.objectMode||0!==t.length?w(e,u,t,!1):E(e,u)):w(e,u,t,!1))):n||(u.reading=!1));return function(e){return!e.ended&&(e.needReadable||e.length<e.highWaterMark||0===e.length)}(u)}function w(e,t,l,n){t.flowing&&0===t.length&&!t.sync?(e.emit("data",l),e.read(0)):(t.length+=t.objectMode?1:l.length,n?t.buffer.unshift(l):t.buffer.push(l),t.needReadable&&M(e)),E(e,t)}Object.defineProperty(v.prototype,"destroyed",{get:function(){return void 0!==this._readableState&&this._readableState.destroyed},set:function(e){this._readableState&&(this._readableState.destroyed=e)}}),v.prototype.destroy=b.destroy,v.prototype._undestroy=b.undestroy,v.prototype._destroy=function(e,t){this.push(null),t(e)},v.prototype.push=function(e,t){var l,n=this._readableState;return n.objectMode?l=!0:"string"===typeof e&&((t=t||n.defaultEncoding)!==n.encoding&&(e=a.from(e,t),t=""),l=!0),_(this,e,t,!1,l)},v.prototype.unshift=function(e){return _(this,e,null,!0,!1)},v.prototype.isPaused=function(){return!1===this._readableState.flowing},v.prototype.setEncoding=function(e){return g||(g=l(21).StringDecoder),this._readableState.decoder=new g(e),this._readableState.encoding=e,this};var A=8388608;function B(e,t){return e<=0||0===t.length&&t.ended?0:t.objectMode?1:e!==e?t.flowing&&t.length?t.buffer.head.data.length:t.length:(e>t.highWaterMark&&(t.highWaterMark=function(e){return e>=A?e=A:(e--,e|=e>>>1,e|=e>>>2,e|=e>>>4,e|=e>>>8,e|=e>>>16,e++),e}(e)),e<=t.length?e:t.ended?t.length:(t.needReadable=!0,0))}function M(e){var t=e._readableState;t.needReadable=!1,t.emittedReadable||(f("emitReadable",t.flowing),t.emittedReadable=!0,t.sync?r.nextTick(T,e):T(e))}function T(e){f("emit readable"),e.emit("readable"),F(e)}function E(e,t){t.readingMore||(t.readingMore=!0,r.nextTick(S,e,t))}function S(e,t){for(var l=t.length;!t.reading&&!t.flowing&&!t.ended&&t.length<t.highWaterMark&&(f("maybeReadMore read 0"),e.read(0),l!==t.length);)l=t.length;t.readingMore=!1}function I(e){f("readable nexttick read 0"),e.read(0)}function j(e,t){t.reading||(f("resume read 0"),e.read(0)),t.resumeScheduled=!1,t.awaitDrain=0,e.emit("resume"),F(e),t.flowing&&!t.reading&&e.read(0)}function F(e){var t=e._readableState;for(f("flow",t.flowing);t.flowing&&null!==e.read(););}function C(e,t){return 0===t.length?null:(t.objectMode?l=t.buffer.shift():!e||e>=t.length?(l=t.decoder?t.buffer.join(""):1===t.buffer.length?t.buffer.head.data:t.buffer.concat(t.length),t.buffer.clear()):l=function(e,t,l){var n;e<t.head.data.length?(n=t.head.data.slice(0,e),t.head.data=t.head.data.slice(e)):n=e===t.head.data.length?t.shift():l?function(e,t){var l=t.head,n=1,r=l.data;e-=r.length;for(;l=l.next;){var o=l.data,u=e>o.length?o.length:e;if(u===o.length?r+=o:r+=o.slice(0,e),0===(e-=u)){u===o.length?(++n,l.next?t.head=l.next:t.head=t.tail=null):(t.head=l,l.data=o.slice(u));break}++n}return t.length-=n,r}(e,t):function(e,t){var l=a.allocUnsafe(e),n=t.head,r=1;n.data.copy(l),e-=n.data.length;for(;n=n.next;){var o=n.data,u=e>o.length?o.length:e;if(o.copy(l,l.length-e,0,u),0===(e-=u)){u===o.length?(++r,n.next?t.head=n.next:t.head=t.tail=null):(t.head=n,n.data=o.slice(u));break}++r}return t.length-=r,l}(e,t);return n}(e,t.buffer,t.decoder),l);var l}function O(e){var t=e._readableState;if(t.length>0)throw new Error('"endReadable()" called on non-empty stream');t.endEmitted||(t.ended=!0,r.nextTick(k,t,e))}function k(e,t){e.endEmitted||0!==e.length||(e.endEmitted=!0,t.readable=!1,t.emit("end"))}function R(e,t){for(var l=0,n=e.length;l<n;l++)if(e[l]===t)return l;return-1}v.prototype.read=function(e){f("read",e),e=parseInt(e,10);var t=this._readableState,l=e;if(0!==e&&(t.emittedReadable=!1),0===e&&t.needReadable&&(t.length>=t.highWaterMark||t.ended))return f("read: emitReadable",t.length,t.ended),0===t.length&&t.ended?O(this):M(this),null;if(0===(e=B(e,t))&&t.ended)return 0===t.length&&O(this),null;var n,r=t.needReadable;return f("need readable",r),(0===t.length||t.length-e<t.highWaterMark)&&f("length less than watermark",r=!0),t.ended||t.reading?f("reading or ended",r=!1):r&&(f("do read"),t.reading=!0,t.sync=!0,0===t.length&&(t.needReadable=!0),this._read(t.highWaterMark),t.sync=!1,t.reading||(e=B(l,t))),null===(n=e>0?C(e,t):null)?(t.needReadable=!0,e=0):t.length-=e,0===t.length&&(t.ended||(t.needReadable=!0),l!==e&&t.ended&&O(this)),null!==n&&this.emit("data",n),n},v.prototype._read=function(e){this.emit("error",new Error("_read() is not implemented"))},v.prototype.pipe=function(e,t){var l=this,o=this._readableState;switch(o.pipesCount){case 0:o.pipes=e;break;case 1:o.pipes=[o.pipes,e];break;default:o.pipes.push(e)}o.pipesCount+=1,f("pipe count=%d opts=%j",o.pipesCount,t);var s=(!t||!1!==t.end)&&e!==n.stdout&&e!==n.stderr?c:v;function a(t,n){f("onunpipe"),t===l&&n&&!1===n.hasUnpiped&&(n.hasUnpiped=!0,f("cleanup"),e.removeListener("close",y),e.removeListener("finish",m),e.removeListener("drain",p),e.removeListener("error",b),e.removeListener("unpipe",a),l.removeListener("end",c),l.removeListener("end",v),l.removeListener("data",h),d=!0,!o.awaitDrain||e._writableState&&!e._writableState.needDrain||p())}function c(){f("onend"),e.end()}o.endEmitted?r.nextTick(s):l.once("end",s),e.on("unpipe",a);var p=function(e){return function(){var t=e._readableState;f("pipeOnDrain",t.awaitDrain),t.awaitDrain&&t.awaitDrain--,0===t.awaitDrain&&i(e,"data")&&(t.flowing=!0,F(e))}}(l);e.on("drain",p);var d=!1;var g=!1;function h(t){f("ondata"),g=!1,!1!==e.write(t)||g||((1===o.pipesCount&&o.pipes===e||o.pipesCount>1&&-1!==R(o.pipes,e))&&!d&&(f("false write response, pause",l._readableState.awaitDrain),l._readableState.awaitDrain++,g=!0),l.pause())}function b(t){f("onerror",t),v(),e.removeListener("error",b),0===i(e,"error")&&e.emit("error",t)}function y(){e.removeListener("finish",m),v()}function m(){f("onfinish"),e.removeListener("close",y),v()}function v(){f("unpipe"),l.unpipe(e)}return l.on("data",h),function(e,t,l){if("function"===typeof e.prependListener)return e.prependListener(t,l);e._events&&e._events[t]?u(e._events[t])?e._events[t].unshift(l):e._events[t]=[l,e._events[t]]:e.on(t,l)}(e,"error",b),e.once("close",y),e.once("finish",m),e.emit("pipe",l),o.flowing||(f("pipe resume"),l.resume()),e},v.prototype.unpipe=function(e){var t=this._readableState,l={hasUnpiped:!1};if(0===t.pipesCount)return this;if(1===t.pipesCount)return e&&e!==t.pipes?this:(e||(e=t.pipes),t.pipes=null,t.pipesCount=0,t.flowing=!1,e&&e.emit("unpipe",this,l),this);if(!e){var n=t.pipes,r=t.pipesCount;t.pipes=null,t.pipesCount=0,t.flowing=!1;for(var o=0;o<r;o++)n[o].emit("unpipe",this,l);return this}var u=R(t.pipes,e);return-1===u?this:(t.pipes.splice(u,1),t.pipesCount-=1,1===t.pipesCount&&(t.pipes=t.pipes[0]),e.emit("unpipe",this,l),this)},v.prototype.on=function(e,t){var l=s.prototype.on.call(this,e,t);if("data"===e)!1!==this._readableState.flowing&&this.resume();else if("readable"===e){var n=this._readableState;n.endEmitted||n.readableListening||(n.readableListening=n.needReadable=!0,n.emittedReadable=!1,n.reading?n.length&&M(this):r.nextTick(I,this))}return l},v.prototype.addListener=v.prototype.on,v.prototype.resume=function(){var e=this._readableState;return e.flowing||(f("resume"),e.flowing=!0,function(e,t){t.resumeScheduled||(t.resumeScheduled=!0,r.nextTick(j,e,t))}(this,e)),this},v.prototype.pause=function(){return f("call pause flowing=%j",this._readableState.flowing),!1!==this._readableState.flowing&&(f("pause"),this._readableState.flowing=!1,this.emit("pause")),this},v.prototype.wrap=function(e){var t=this,l=this._readableState,n=!1;for(var r in e.on("end",function(){if(f("wrapped end"),l.decoder&&!l.ended){var e=l.decoder.end();e&&e.length&&t.push(e)}t.push(null)}),e.on("data",function(r){(f("wrapped data"),l.decoder&&(r=l.decoder.write(r)),!l.objectMode||null!==r&&void 0!==r)&&((l.objectMode||r&&r.length)&&(t.push(r)||(n=!0,e.pause())))}),e)void 0===this[r]&&"function"===typeof e[r]&&(this[r]=function(t){return function(){return e[t].apply(e,arguments)}}(r));for(var o=0;o<y.length;o++)e.on(y[o],this.emit.bind(this,y[o]));return this._read=function(t){f("wrapped _read",t),n&&(n=!1,e.resume())},this},Object.defineProperty(v.prototype,"readableHighWaterMark",{enumerable:!1,get:function(){return this._readableState.highWaterMark}}),v._fromList=C}).call(this,l(3),l(7))},function(e,t,l){e.exports=r;var n=l(24).EventEmitter;function r(){n.call(this)}l(0)(r,n),r.Readable=l(23),r.Writable=l(76),r.Duplex=l(75),r.Transform=l(74),r.PassThrough=l(73),r.Stream=r,r.prototype.pipe=function(e,t){var l=this;function r(t){e.writable&&!1===e.write(t)&&l.pause&&l.pause()}function o(){l.readable&&l.resume&&l.resume()}l.on("data",r),e.on("drain",o),e._isStdio||t&&!1===t.end||(l.on("end",i),l.on("close",s));var u=!1;function i(){u||(u=!0,e.end())}function s(){u||(u=!0,"function"===typeof e.destroy&&e.destroy())}function a(e){if(c(),0===n.listenerCount(this,"error"))throw e}function c(){l.removeListener("data",r),e.removeListener("drain",o),l.removeListener("end",i),l.removeListener("close",s),l.removeListener("error",a),e.removeListener("error",a),l.removeListener("end",c),l.removeListener("close",c),e.removeListener("close",c)}return l.on("error",a),e.on("error",a),l.on("end",c),l.on("close",c),e.on("close",c),e.emit("pipe",l),e}},function(e,t,l){"use strict";var n=l(1).Buffer,r=l(38).Transform;function o(e){r.call(this),this._block=n.allocUnsafe(e),this._blockSize=e,this._blockOffset=0,this._length=[0,0,0,0],this._finalized=!1}l(0)(o,r),o.prototype._transform=function(e,t,l){var n=null;try{this.update(e,t)}catch(e){n=e}l(n)},o.prototype._flush=function(e){var t=null;try{this.push(this.digest())}catch(e){t=e}e(t)},o.prototype.update=function(e,t){if(function(e,t){if(!n.isBuffer(e)&&"string"!==typeof e)throw new TypeError(t+" must be a string or a buffer")}(e,"Data"),this._finalized)throw new Error("Digest already called");n.isBuffer(e)||(e=n.from(e,t));for(var l=this._block,r=0;this._blockOffset+e.length-r>=this._blockSize;){for(var o=this._blockOffset;o<this._blockSize;)l[o++]=e[r++];this._update(),this._blockOffset=0}for(;r<e.length;)l[this._blockOffset++]=e[r++];for(var u=0,i=8*e.length;i>0;++u)this._length[u]+=i,(i=this._length[u]/4294967296|0)>0&&(this._length[u]-=4294967296*i);return this},o.prototype._update=function(){throw new Error("_update is not implemented")},o.prototype.digest=function(e){if(this._finalized)throw new Error("Digest already called");this._finalized=!0;var t=this._digest();void 0!==e&&(t=t.toString(e)),this._block.fill(0),this._blockOffset=0;for(var l=0;l<4;++l)this._length[l]=0;return t},o.prototype._digest=function(){throw new Error("_digest is not implemented")},e.exports=o},function(e,t,l){"use strict";(function(t){var n=l(0),r=l(39),o=new Array(16);function u(){r.call(this,64),this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878}function i(e,t){return e<<t|e>>>32-t}function s(e,t,l,n,r,o,u){return i(e+(t&l|~t&n)+r+o|0,u)+t|0}function a(e,t,l,n,r,o,u){return i(e+(t&n|l&~n)+r+o|0,u)+t|0}function c(e,t,l,n,r,o,u){return i(e+(t^l^n)+r+o|0,u)+t|0}function p(e,t,l,n,r,o,u){return i(e+(l^(t|~n))+r+o|0,u)+t|0}n(u,r),u.prototype._update=function(){for(var e=o,t=0;t<16;++t)e[t]=this._block.readInt32LE(4*t);var l=this._a,n=this._b,r=this._c,u=this._d;n=p(n=p(n=p(n=p(n=c(n=c(n=c(n=c(n=a(n=a(n=a(n=a(n=s(n=s(n=s(n=s(n,r=s(r,u=s(u,l=s(l,n,r,u,e[0],3614090360,7),n,r,e[1],3905402710,12),l,n,e[2],606105819,17),u,l,e[3],3250441966,22),r=s(r,u=s(u,l=s(l,n,r,u,e[4],4118548399,7),n,r,e[5],1200080426,12),l,n,e[6],2821735955,17),u,l,e[7],4249261313,22),r=s(r,u=s(u,l=s(l,n,r,u,e[8],1770035416,7),n,r,e[9],2336552879,12),l,n,e[10],4294925233,17),u,l,e[11],2304563134,22),r=s(r,u=s(u,l=s(l,n,r,u,e[12],1804603682,7),n,r,e[13],4254626195,12),l,n,e[14],2792965006,17),u,l,e[15],1236535329,22),r=a(r,u=a(u,l=a(l,n,r,u,e[1],4129170786,5),n,r,e[6],3225465664,9),l,n,e[11],643717713,14),u,l,e[0],3921069994,20),r=a(r,u=a(u,l=a(l,n,r,u,e[5],3593408605,5),n,r,e[10],38016083,9),l,n,e[15],3634488961,14),u,l,e[4],3889429448,20),r=a(r,u=a(u,l=a(l,n,r,u,e[9],568446438,5),n,r,e[14],3275163606,9),l,n,e[3],4107603335,14),u,l,e[8],1163531501,20),r=a(r,u=a(u,l=a(l,n,r,u,e[13],2850285829,5),n,r,e[2],4243563512,9),l,n,e[7],1735328473,14),u,l,e[12],2368359562,20),r=c(r,u=c(u,l=c(l,n,r,u,e[5],4294588738,4),n,r,e[8],2272392833,11),l,n,e[11],1839030562,16),u,l,e[14],4259657740,23),r=c(r,u=c(u,l=c(l,n,r,u,e[1],2763975236,4),n,r,e[4],1272893353,11),l,n,e[7],4139469664,16),u,l,e[10],3200236656,23),r=c(r,u=c(u,l=c(l,n,r,u,e[13],681279174,4),n,r,e[0],3936430074,11),l,n,e[3],3572445317,16),u,l,e[6],76029189,23),r=c(r,u=c(u,l=c(l,n,r,u,e[9],3654602809,4),n,r,e[12],3873151461,11),l,n,e[15],530742520,16),u,l,e[2],3299628645,23),r=p(r,u=p(u,l=p(l,n,r,u,e[0],4096336452,6),n,r,e[7],1126891415,10),l,n,e[14],2878612391,15),u,l,e[5],4237533241,21),r=p(r,u=p(u,l=p(l,n,r,u,e[12],1700485571,6),n,r,e[3],2399980690,10),l,n,e[10],4293915773,15),u,l,e[1],2240044497,21),r=p(r,u=p(u,l=p(l,n,r,u,e[8],1873313359,6),n,r,e[15],4264355552,10),l,n,e[6],2734768916,15),u,l,e[13],1309151649,21),r=p(r,u=p(u,l=p(l,n,r,u,e[4],4149444226,6),n,r,e[11],3174756917,10),l,n,e[2],718787259,15),u,l,e[9],3951481745,21),this._a=this._a+l|0,this._b=this._b+n|0,this._c=this._c+r|0,this._d=this._d+u|0},u.prototype._digest=function(){this._block[this._blockOffset++]=128,this._blockOffset>56&&(this._block.fill(0,this._blockOffset,64),this._update(),this._blockOffset=0),this._block.fill(0,this._blockOffset,56),this._block.writeUInt32LE(this._length[0],56),this._block.writeUInt32LE(this._length[1],60),this._update();var e=new t(16);return e.writeInt32LE(this._a,0),e.writeInt32LE(this._b,4),e.writeInt32LE(this._c,8),e.writeInt32LE(this._d,12),e},e.exports=u}).call(this,l(6).Buffer)},function(e,t,l){var n=l(14),r=n,o=Function("return this")(),u=l(11),i=l(42);r.exportSymbol("proto.protocol.AccountNetMessage",null,o),r.exportSymbol("proto.protocol.AccountPaginated",null,o),r.exportSymbol("proto.protocol.Address",null,o),r.exportSymbol("proto.protocol.AssetIssueList",null,o),r.exportSymbol("proto.protocol.BlockLimit",null,o),r.exportSymbol("proto.protocol.BlockList",null,o),r.exportSymbol("proto.protocol.BlockReference",null,o),r.exportSymbol("proto.protocol.BytesMessage",null,o),r.exportSymbol("proto.protocol.EmptyMessage",null,o),r.exportSymbol("proto.protocol.Node",null,o),r.exportSymbol("proto.protocol.NodeList",null,o),r.exportSymbol("proto.protocol.NumberMessage",null,o),r.exportSymbol("proto.protocol.Return",null,o),r.exportSymbol("proto.protocol.Return.response_code",null,o),r.exportSymbol("proto.protocol.TimeMessage",null,o),r.exportSymbol("proto.protocol.TimePaginatedMessage",null,o),r.exportSymbol("proto.protocol.TransactionLimit",null,o),r.exportSymbol("proto.protocol.TransactionList",null,o),r.exportSymbol("proto.protocol.WitnessList",null,o),proto.protocol.Return=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.Return,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.Return.displayName="proto.protocol.Return"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.Return.prototype.toObject=function(e){return proto.protocol.Return.toObject(e,this)},proto.protocol.Return.toObject=function(e,t){var l={result:n.Message.getFieldWithDefault(t,1,!1),code:n.Message.getFieldWithDefault(t,2,0),message:t.getMessage_asB64()};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.Return.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.Return;return proto.protocol.Return.deserializeBinaryFromReader(l,t)},proto.protocol.Return.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBool();e.setResult(l);break;case 2:l=t.readEnum();e.setCode(l);break;case 3:l=t.readBytes();e.setMessage(l);break;default:t.skipField()}}return e},proto.protocol.Return.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.Return.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.Return.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getResult())&&t.writeBool(1,l),0!==(l=e.getCode())&&t.writeEnum(2,l),(l=e.getMessage_asU8()).length>0&&t.writeBytes(3,l)},proto.protocol.Return.response_code={SUCCESS:0,SIGERROR:1,CONTRACT_VALIDATE_ERROR:2,CONTRACT_EXE_ERROR:3,BANDWITH_ERROR:4,DUP_TRANSACTION_ERROR:5,TAPOS_ERROR:6,TOO_BIG_TRANSACTION_ERROR:7,TRANSACTION_EXPIRATION_ERROR:8,SERVER_BUSY:9,OTHER_ERROR:20},proto.protocol.Return.prototype.getResult=function(){return n.Message.getFieldWithDefault(this,1,!1)},proto.protocol.Return.prototype.setResult=function(e){n.Message.setProto3BooleanField(this,1,e)},proto.protocol.Return.prototype.getCode=function(){return n.Message.getFieldWithDefault(this,2,0)},proto.protocol.Return.prototype.setCode=function(e){n.Message.setProto3EnumField(this,2,e)},proto.protocol.Return.prototype.getMessage=function(){return n.Message.getFieldWithDefault(this,3,"")},proto.protocol.Return.prototype.getMessage_asB64=function(){return n.Message.bytesAsB64(this.getMessage())},proto.protocol.Return.prototype.getMessage_asU8=function(){return n.Message.bytesAsU8(this.getMessage())},proto.protocol.Return.prototype.setMessage=function(e){n.Message.setProto3BytesField(this,3,e)},proto.protocol.BlockReference=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.BlockReference,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.BlockReference.displayName="proto.protocol.BlockReference"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.BlockReference.prototype.toObject=function(e){return proto.protocol.BlockReference.toObject(e,this)},proto.protocol.BlockReference.toObject=function(e,t){var l={blockNum:n.Message.getFieldWithDefault(t,1,0),blockHash:t.getBlockHash_asB64()};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.BlockReference.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.BlockReference;return proto.protocol.BlockReference.deserializeBinaryFromReader(l,t)},proto.protocol.BlockReference.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readInt64();e.setBlockNum(l);break;case 2:l=t.readBytes();e.setBlockHash(l);break;default:t.skipField()}}return e},proto.protocol.BlockReference.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.BlockReference.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.BlockReference.serializeBinaryToWriter=function(e,t){var l=void 0;0!==(l=e.getBlockNum())&&t.writeInt64(1,l),(l=e.getBlockHash_asU8()).length>0&&t.writeBytes(2,l)},proto.protocol.BlockReference.prototype.getBlockNum=function(){return n.Message.getFieldWithDefault(this,1,0)},proto.protocol.BlockReference.prototype.setBlockNum=function(e){n.Message.setProto3IntField(this,1,e)},proto.protocol.BlockReference.prototype.getBlockHash=function(){return n.Message.getFieldWithDefault(this,2,"")},proto.protocol.BlockReference.prototype.getBlockHash_asB64=function(){return n.Message.bytesAsB64(this.getBlockHash())},proto.protocol.BlockReference.prototype.getBlockHash_asU8=function(){return n.Message.bytesAsU8(this.getBlockHash())},proto.protocol.BlockReference.prototype.setBlockHash=function(e){n.Message.setProto3BytesField(this,2,e)},proto.protocol.WitnessList=function(e){n.Message.initialize(this,e,0,-1,proto.protocol.WitnessList.repeatedFields_,null)},r.inherits(proto.protocol.WitnessList,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.WitnessList.displayName="proto.protocol.WitnessList"),proto.protocol.WitnessList.repeatedFields_=[1],n.Message.GENERATE_TO_OBJECT&&(proto.protocol.WitnessList.prototype.toObject=function(e){return proto.protocol.WitnessList.toObject(e,this)},proto.protocol.WitnessList.toObject=function(e,t){var l={witnessesList:n.Message.toObjectList(t.getWitnessesList(),u.Witness.toObject,e)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.WitnessList.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.WitnessList;return proto.protocol.WitnessList.deserializeBinaryFromReader(l,t)},proto.protocol.WitnessList.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=new u.Witness;t.readMessage(l,u.Witness.deserializeBinaryFromReader),e.addWitnesses(l);break;default:t.skipField()}}return e},proto.protocol.WitnessList.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.WitnessList.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.WitnessList.serializeBinaryToWriter=function(e,t){var l;(l=e.getWitnessesList()).length>0&&t.writeRepeatedMessage(1,l,u.Witness.serializeBinaryToWriter)},proto.protocol.WitnessList.prototype.getWitnessesList=function(){return n.Message.getRepeatedWrapperField(this,u.Witness,1)},proto.protocol.WitnessList.prototype.setWitnessesList=function(e){n.Message.setRepeatedWrapperField(this,1,e)},proto.protocol.WitnessList.prototype.addWitnesses=function(e,t){return n.Message.addToRepeatedWrapperField(this,1,e,proto.protocol.Witness,t)},proto.protocol.WitnessList.prototype.clearWitnessesList=function(){this.setWitnessesList([])},proto.protocol.AssetIssueList=function(e){n.Message.initialize(this,e,0,-1,proto.protocol.AssetIssueList.repeatedFields_,null)},r.inherits(proto.protocol.AssetIssueList,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.AssetIssueList.displayName="proto.protocol.AssetIssueList"),proto.protocol.AssetIssueList.repeatedFields_=[1],n.Message.GENERATE_TO_OBJECT&&(proto.protocol.AssetIssueList.prototype.toObject=function(e){return proto.protocol.AssetIssueList.toObject(e,this)},proto.protocol.AssetIssueList.toObject=function(e,t){var l={assetissueList:n.Message.toObjectList(t.getAssetissueList(),i.AssetIssueContract.toObject,e)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.AssetIssueList.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.AssetIssueList;return proto.protocol.AssetIssueList.deserializeBinaryFromReader(l,t)},proto.protocol.AssetIssueList.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=new i.AssetIssueContract;t.readMessage(l,i.AssetIssueContract.deserializeBinaryFromReader),e.addAssetissue(l);break;default:t.skipField()}}return e},proto.protocol.AssetIssueList.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.AssetIssueList.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.AssetIssueList.serializeBinaryToWriter=function(e,t){var l;(l=e.getAssetissueList()).length>0&&t.writeRepeatedMessage(1,l,i.AssetIssueContract.serializeBinaryToWriter)},proto.protocol.AssetIssueList.prototype.getAssetissueList=function(){return n.Message.getRepeatedWrapperField(this,i.AssetIssueContract,1)},proto.protocol.AssetIssueList.prototype.setAssetissueList=function(e){n.Message.setRepeatedWrapperField(this,1,e)},proto.protocol.AssetIssueList.prototype.addAssetissue=function(e,t){return n.Message.addToRepeatedWrapperField(this,1,e,proto.protocol.AssetIssueContract,t)},proto.protocol.AssetIssueList.prototype.clearAssetissueList=function(){this.setAssetissueList([])},proto.protocol.BlockList=function(e){n.Message.initialize(this,e,0,-1,proto.protocol.BlockList.repeatedFields_,null)},r.inherits(proto.protocol.BlockList,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.BlockList.displayName="proto.protocol.BlockList"),proto.protocol.BlockList.repeatedFields_=[1],n.Message.GENERATE_TO_OBJECT&&(proto.protocol.BlockList.prototype.toObject=function(e){return proto.protocol.BlockList.toObject(e,this)},proto.protocol.BlockList.toObject=function(e,t){var l={blockList:n.Message.toObjectList(t.getBlockList(),u.Block.toObject,e)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.BlockList.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.BlockList;return proto.protocol.BlockList.deserializeBinaryFromReader(l,t)},proto.protocol.BlockList.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=new u.Block;t.readMessage(l,u.Block.deserializeBinaryFromReader),e.addBlock(l);break;default:t.skipField()}}return e},proto.protocol.BlockList.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.BlockList.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.BlockList.serializeBinaryToWriter=function(e,t){var l;(l=e.getBlockList()).length>0&&t.writeRepeatedMessage(1,l,u.Block.serializeBinaryToWriter)},proto.protocol.BlockList.prototype.getBlockList=function(){return n.Message.getRepeatedWrapperField(this,u.Block,1)},proto.protocol.BlockList.prototype.setBlockList=function(e){n.Message.setRepeatedWrapperField(this,1,e)},proto.protocol.BlockList.prototype.addBlock=function(e,t){return n.Message.addToRepeatedWrapperField(this,1,e,proto.protocol.Block,t)},proto.protocol.BlockList.prototype.clearBlockList=function(){this.setBlockList([])},proto.protocol.TransactionList=function(e){n.Message.initialize(this,e,0,-1,proto.protocol.TransactionList.repeatedFields_,null)},r.inherits(proto.protocol.TransactionList,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.TransactionList.displayName="proto.protocol.TransactionList"),proto.protocol.TransactionList.repeatedFields_=[1],n.Message.GENERATE_TO_OBJECT&&(proto.protocol.TransactionList.prototype.toObject=function(e){return proto.protocol.TransactionList.toObject(e,this)},proto.protocol.TransactionList.toObject=function(e,t){var l={transactionList:n.Message.toObjectList(t.getTransactionList(),u.Transaction.toObject,e)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.TransactionList.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.TransactionList;return proto.protocol.TransactionList.deserializeBinaryFromReader(l,t)},proto.protocol.TransactionList.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=new u.Transaction;t.readMessage(l,u.Transaction.deserializeBinaryFromReader),e.addTransaction(l);break;default:t.skipField()}}return e},proto.protocol.TransactionList.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.TransactionList.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.TransactionList.serializeBinaryToWriter=function(e,t){var l;(l=e.getTransactionList()).length>0&&t.writeRepeatedMessage(1,l,u.Transaction.serializeBinaryToWriter)},proto.protocol.TransactionList.prototype.getTransactionList=function(){return n.Message.getRepeatedWrapperField(this,u.Transaction,1)},proto.protocol.TransactionList.prototype.setTransactionList=function(e){n.Message.setRepeatedWrapperField(this,1,e)},proto.protocol.TransactionList.prototype.addTransaction=function(e,t){return n.Message.addToRepeatedWrapperField(this,1,e,proto.protocol.Transaction,t)},proto.protocol.TransactionList.prototype.clearTransactionList=function(){this.setTransactionList([])},proto.protocol.NodeList=function(e){n.Message.initialize(this,e,0,-1,proto.protocol.NodeList.repeatedFields_,null)},r.inherits(proto.protocol.NodeList,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.NodeList.displayName="proto.protocol.NodeList"),proto.protocol.NodeList.repeatedFields_=[1],n.Message.GENERATE_TO_OBJECT&&(proto.protocol.NodeList.prototype.toObject=function(e){return proto.protocol.NodeList.toObject(e,this)},proto.protocol.NodeList.toObject=function(e,t){var l={nodesList:n.Message.toObjectList(t.getNodesList(),proto.protocol.Node.toObject,e)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.NodeList.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.NodeList;return proto.protocol.NodeList.deserializeBinaryFromReader(l,t)},proto.protocol.NodeList.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=new proto.protocol.Node;t.readMessage(l,proto.protocol.Node.deserializeBinaryFromReader),e.addNodes(l);break;default:t.skipField()}}return e},proto.protocol.NodeList.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.NodeList.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.NodeList.serializeBinaryToWriter=function(e,t){var l;(l=e.getNodesList()).length>0&&t.writeRepeatedMessage(1,l,proto.protocol.Node.serializeBinaryToWriter)},proto.protocol.NodeList.prototype.getNodesList=function(){return n.Message.getRepeatedWrapperField(this,proto.protocol.Node,1)},proto.protocol.NodeList.prototype.setNodesList=function(e){n.Message.setRepeatedWrapperField(this,1,e)},proto.protocol.NodeList.prototype.addNodes=function(e,t){return n.Message.addToRepeatedWrapperField(this,1,e,proto.protocol.Node,t)},proto.protocol.NodeList.prototype.clearNodesList=function(){this.setNodesList([])},proto.protocol.Node=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.Node,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.Node.displayName="proto.protocol.Node"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.Node.prototype.toObject=function(e){return proto.protocol.Node.toObject(e,this)},proto.protocol.Node.toObject=function(e,t){var l,n={address:(l=t.getAddress())&&proto.protocol.Address.toObject(e,l)};return e&&(n.$jspbMessageInstance=t),n}),proto.protocol.Node.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.Node;return proto.protocol.Node.deserializeBinaryFromReader(l,t)},proto.protocol.Node.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=new proto.protocol.Address;t.readMessage(l,proto.protocol.Address.deserializeBinaryFromReader),e.setAddress(l);break;default:t.skipField()}}return e},proto.protocol.Node.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.Node.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.Node.serializeBinaryToWriter=function(e,t){var l;null!=(l=e.getAddress())&&t.writeMessage(1,l,proto.protocol.Address.serializeBinaryToWriter)},proto.protocol.Node.prototype.getAddress=function(){return n.Message.getWrapperField(this,proto.protocol.Address,1)},proto.protocol.Node.prototype.setAddress=function(e){n.Message.setWrapperField(this,1,e)},proto.protocol.Node.prototype.clearAddress=function(){this.setAddress(void 0)},proto.protocol.Node.prototype.hasAddress=function(){return null!=n.Message.getField(this,1)},proto.protocol.Address=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.Address,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.Address.displayName="proto.protocol.Address"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.Address.prototype.toObject=function(e){return proto.protocol.Address.toObject(e,this)},proto.protocol.Address.toObject=function(e,t){var l={host:t.getHost_asB64(),port:n.Message.getFieldWithDefault(t,2,0)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.Address.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.Address;return proto.protocol.Address.deserializeBinaryFromReader(l,t)},proto.protocol.Address.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setHost(l);break;case 2:l=t.readInt32();e.setPort(l);break;default:t.skipField()}}return e},proto.protocol.Address.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.Address.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.Address.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getHost_asU8()).length>0&&t.writeBytes(1,l),0!==(l=e.getPort())&&t.writeInt32(2,l)},proto.protocol.Address.prototype.getHost=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.Address.prototype.getHost_asB64=function(){return n.Message.bytesAsB64(this.getHost())},proto.protocol.Address.prototype.getHost_asU8=function(){return n.Message.bytesAsU8(this.getHost())},proto.protocol.Address.prototype.setHost=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.Address.prototype.getPort=function(){return n.Message.getFieldWithDefault(this,2,0)},proto.protocol.Address.prototype.setPort=function(e){n.Message.setProto3IntField(this,2,e)},proto.protocol.EmptyMessage=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.EmptyMessage,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.EmptyMessage.displayName="proto.protocol.EmptyMessage"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.EmptyMessage.prototype.toObject=function(e){return proto.protocol.EmptyMessage.toObject(e,this)},proto.protocol.EmptyMessage.toObject=function(e,t){var l={};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.EmptyMessage.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.EmptyMessage;return proto.protocol.EmptyMessage.deserializeBinaryFromReader(l,t)},proto.protocol.EmptyMessage.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){t.getFieldNumber();t.skipField()}return e},proto.protocol.EmptyMessage.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.EmptyMessage.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.EmptyMessage.serializeBinaryToWriter=function(e,t){},proto.protocol.NumberMessage=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.NumberMessage,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.NumberMessage.displayName="proto.protocol.NumberMessage"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.NumberMessage.prototype.toObject=function(e){return proto.protocol.NumberMessage.toObject(e,this)},proto.protocol.NumberMessage.toObject=function(e,t){var l={num:n.Message.getFieldWithDefault(t,1,0)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.NumberMessage.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.NumberMessage;return proto.protocol.NumberMessage.deserializeBinaryFromReader(l,t)},proto.protocol.NumberMessage.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readInt64();e.setNum(l);break;default:t.skipField()}}return e},proto.protocol.NumberMessage.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.NumberMessage.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.NumberMessage.serializeBinaryToWriter=function(e,t){var l;0!==(l=e.getNum())&&t.writeInt64(1,l)},proto.protocol.NumberMessage.prototype.getNum=function(){return n.Message.getFieldWithDefault(this,1,0)},proto.protocol.NumberMessage.prototype.setNum=function(e){n.Message.setProto3IntField(this,1,e)},proto.protocol.BytesMessage=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.BytesMessage,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.BytesMessage.displayName="proto.protocol.BytesMessage"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.BytesMessage.prototype.toObject=function(e){return proto.protocol.BytesMessage.toObject(e,this)},proto.protocol.BytesMessage.toObject=function(e,t){var l={value:t.getValue_asB64()};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.BytesMessage.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.BytesMessage;return proto.protocol.BytesMessage.deserializeBinaryFromReader(l,t)},proto.protocol.BytesMessage.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setValue(l);break;default:t.skipField()}}return e},proto.protocol.BytesMessage.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.BytesMessage.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.BytesMessage.serializeBinaryToWriter=function(e,t){var l;(l=e.getValue_asU8()).length>0&&t.writeBytes(1,l)},proto.protocol.BytesMessage.prototype.getValue=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.BytesMessage.prototype.getValue_asB64=function(){return n.Message.bytesAsB64(this.getValue())},proto.protocol.BytesMessage.prototype.getValue_asU8=function(){return n.Message.bytesAsU8(this.getValue())},proto.protocol.BytesMessage.prototype.setValue=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.TimeMessage=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.TimeMessage,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.TimeMessage.displayName="proto.protocol.TimeMessage"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.TimeMessage.prototype.toObject=function(e){return proto.protocol.TimeMessage.toObject(e,this)},proto.protocol.TimeMessage.toObject=function(e,t){var l={begininmilliseconds:n.Message.getFieldWithDefault(t,1,0),endinmilliseconds:n.Message.getFieldWithDefault(t,2,0)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.TimeMessage.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.TimeMessage;return proto.protocol.TimeMessage.deserializeBinaryFromReader(l,t)},proto.protocol.TimeMessage.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readInt64();e.setBegininmilliseconds(l);break;case 2:l=t.readInt64();e.setEndinmilliseconds(l);break;default:t.skipField()}}return e},proto.protocol.TimeMessage.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.TimeMessage.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.TimeMessage.serializeBinaryToWriter=function(e,t){var l=void 0;0!==(l=e.getBegininmilliseconds())&&t.writeInt64(1,l),0!==(l=e.getEndinmilliseconds())&&t.writeInt64(2,l)},proto.protocol.TimeMessage.prototype.getBegininmilliseconds=function(){return n.Message.getFieldWithDefault(this,1,0)},proto.protocol.TimeMessage.prototype.setBegininmilliseconds=function(e){n.Message.setProto3IntField(this,1,e)},proto.protocol.TimeMessage.prototype.getEndinmilliseconds=function(){return n.Message.getFieldWithDefault(this,2,0)},proto.protocol.TimeMessage.prototype.setEndinmilliseconds=function(e){n.Message.setProto3IntField(this,2,e)},proto.protocol.BlockLimit=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.BlockLimit,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.BlockLimit.displayName="proto.protocol.BlockLimit"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.BlockLimit.prototype.toObject=function(e){return proto.protocol.BlockLimit.toObject(e,this)},proto.protocol.BlockLimit.toObject=function(e,t){var l={startnum:n.Message.getFieldWithDefault(t,1,0),endnum:n.Message.getFieldWithDefault(t,2,0)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.BlockLimit.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.BlockLimit;return proto.protocol.BlockLimit.deserializeBinaryFromReader(l,t)},proto.protocol.BlockLimit.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readInt64();e.setStartnum(l);break;case 2:l=t.readInt64();e.setEndnum(l);break;default:t.skipField()}}return e},proto.protocol.BlockLimit.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.BlockLimit.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.BlockLimit.serializeBinaryToWriter=function(e,t){var l=void 0;0!==(l=e.getStartnum())&&t.writeInt64(1,l),0!==(l=e.getEndnum())&&t.writeInt64(2,l)},proto.protocol.BlockLimit.prototype.getStartnum=function(){return n.Message.getFieldWithDefault(this,1,0)},proto.protocol.BlockLimit.prototype.setStartnum=function(e){n.Message.setProto3IntField(this,1,e)},proto.protocol.BlockLimit.prototype.getEndnum=function(){return n.Message.getFieldWithDefault(this,2,0)},proto.protocol.BlockLimit.prototype.setEndnum=function(e){n.Message.setProto3IntField(this,2,e)},proto.protocol.TransactionLimit=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.TransactionLimit,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.TransactionLimit.displayName="proto.protocol.TransactionLimit"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.TransactionLimit.prototype.toObject=function(e){return proto.protocol.TransactionLimit.toObject(e,this)},proto.protocol.TransactionLimit.toObject=function(e,t){var l={transactionid:t.getTransactionid_asB64(),limitnum:n.Message.getFieldWithDefault(t,2,0)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.TransactionLimit.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.TransactionLimit;return proto.protocol.TransactionLimit.deserializeBinaryFromReader(l,t)},proto.protocol.TransactionLimit.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setTransactionid(l);break;case 2:l=t.readInt64();e.setLimitnum(l);break;default:t.skipField()}}return e},proto.protocol.TransactionLimit.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.TransactionLimit.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.TransactionLimit.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getTransactionid_asU8()).length>0&&t.writeBytes(1,l),0!==(l=e.getLimitnum())&&t.writeInt64(2,l)},proto.protocol.TransactionLimit.prototype.getTransactionid=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.TransactionLimit.prototype.getTransactionid_asB64=function(){return n.Message.bytesAsB64(this.getTransactionid())},proto.protocol.TransactionLimit.prototype.getTransactionid_asU8=function(){return n.Message.bytesAsU8(this.getTransactionid())},proto.protocol.TransactionLimit.prototype.setTransactionid=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.TransactionLimit.prototype.getLimitnum=function(){return n.Message.getFieldWithDefault(this,2,0)},proto.protocol.TransactionLimit.prototype.setLimitnum=function(e){n.Message.setProto3IntField(this,2,e)},proto.protocol.AccountPaginated=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.AccountPaginated,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.AccountPaginated.displayName="proto.protocol.AccountPaginated"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.AccountPaginated.prototype.toObject=function(e){return proto.protocol.AccountPaginated.toObject(e,this)},proto.protocol.AccountPaginated.toObject=function(e,t){var l,r={account:(l=t.getAccount())&&u.Account.toObject(e,l),offset:n.Message.getFieldWithDefault(t,2,0),limit:n.Message.getFieldWithDefault(t,3,0)};return e&&(r.$jspbMessageInstance=t),r}),proto.protocol.AccountPaginated.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.AccountPaginated;return proto.protocol.AccountPaginated.deserializeBinaryFromReader(l,t)},proto.protocol.AccountPaginated.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=new u.Account;t.readMessage(l,u.Account.deserializeBinaryFromReader),e.setAccount(l);break;case 2:l=t.readInt64();e.setOffset(l);break;case 3:l=t.readInt64();e.setLimit(l);break;default:t.skipField()}}return e},proto.protocol.AccountPaginated.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.AccountPaginated.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.AccountPaginated.serializeBinaryToWriter=function(e,t){var l=void 0;null!=(l=e.getAccount())&&t.writeMessage(1,l,u.Account.serializeBinaryToWriter),0!==(l=e.getOffset())&&t.writeInt64(2,l),0!==(l=e.getLimit())&&t.writeInt64(3,l)},proto.protocol.AccountPaginated.prototype.getAccount=function(){return n.Message.getWrapperField(this,u.Account,1)},proto.protocol.AccountPaginated.prototype.setAccount=function(e){n.Message.setWrapperField(this,1,e)},proto.protocol.AccountPaginated.prototype.clearAccount=function(){this.setAccount(void 0)},proto.protocol.AccountPaginated.prototype.hasAccount=function(){return null!=n.Message.getField(this,1)},proto.protocol.AccountPaginated.prototype.getOffset=function(){return n.Message.getFieldWithDefault(this,2,0)},proto.protocol.AccountPaginated.prototype.setOffset=function(e){n.Message.setProto3IntField(this,2,e)},proto.protocol.AccountPaginated.prototype.getLimit=function(){return n.Message.getFieldWithDefault(this,3,0)},proto.protocol.AccountPaginated.prototype.setLimit=function(e){n.Message.setProto3IntField(this,3,e)},proto.protocol.TimePaginatedMessage=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.TimePaginatedMessage,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.TimePaginatedMessage.displayName="proto.protocol.TimePaginatedMessage"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.TimePaginatedMessage.prototype.toObject=function(e){return proto.protocol.TimePaginatedMessage.toObject(e,this)},proto.protocol.TimePaginatedMessage.toObject=function(e,t){var l,r={timemessage:(l=t.getTimemessage())&&proto.protocol.TimeMessage.toObject(e,l),offset:n.Message.getFieldWithDefault(t,2,0),limit:n.Message.getFieldWithDefault(t,3,0)};return e&&(r.$jspbMessageInstance=t),r}),proto.protocol.TimePaginatedMessage.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.TimePaginatedMessage;return proto.protocol.TimePaginatedMessage.deserializeBinaryFromReader(l,t)},proto.protocol.TimePaginatedMessage.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=new proto.protocol.TimeMessage;t.readMessage(l,proto.protocol.TimeMessage.deserializeBinaryFromReader),e.setTimemessage(l);break;case 2:l=t.readInt64();e.setOffset(l);break;case 3:l=t.readInt64();e.setLimit(l);break;default:t.skipField()}}return e},proto.protocol.TimePaginatedMessage.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.TimePaginatedMessage.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.TimePaginatedMessage.serializeBinaryToWriter=function(e,t){var l=void 0;null!=(l=e.getTimemessage())&&t.writeMessage(1,l,proto.protocol.TimeMessage.serializeBinaryToWriter),0!==(l=e.getOffset())&&t.writeInt64(2,l),0!==(l=e.getLimit())&&t.writeInt64(3,l)},proto.protocol.TimePaginatedMessage.prototype.getTimemessage=function(){return n.Message.getWrapperField(this,proto.protocol.TimeMessage,1)},proto.protocol.TimePaginatedMessage.prototype.setTimemessage=function(e){n.Message.setWrapperField(this,1,e)},proto.protocol.TimePaginatedMessage.prototype.clearTimemessage=function(){this.setTimemessage(void 0)},proto.protocol.TimePaginatedMessage.prototype.hasTimemessage=function(){return null!=n.Message.getField(this,1)},proto.protocol.TimePaginatedMessage.prototype.getOffset=function(){return n.Message.getFieldWithDefault(this,2,0)},proto.protocol.TimePaginatedMessage.prototype.setOffset=function(e){n.Message.setProto3IntField(this,2,e)},proto.protocol.TimePaginatedMessage.prototype.getLimit=function(){return n.Message.getFieldWithDefault(this,3,0)},proto.protocol.TimePaginatedMessage.prototype.setLimit=function(e){n.Message.setProto3IntField(this,3,e)},proto.protocol.AccountNetMessage=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.AccountNetMessage,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.AccountNetMessage.displayName="proto.protocol.AccountNetMessage"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.AccountNetMessage.prototype.toObject=function(e){return proto.protocol.AccountNetMessage.toObject(e,this)},proto.protocol.AccountNetMessage.toObject=function(e,t){var l,r={freenetused:n.Message.getFieldWithDefault(t,1,0),freenetlimit:n.Message.getFieldWithDefault(t,2,0),netused:n.Message.getFieldWithDefault(t,3,0),netlimit:n.Message.getFieldWithDefault(t,4,0),assetnetusedMap:(l=t.getAssetnetusedMap())?l.toObject(e,void 0):[],assetnetlimitMap:(l=t.getAssetnetlimitMap())?l.toObject(e,void 0):[]};return e&&(r.$jspbMessageInstance=t),r}),proto.protocol.AccountNetMessage.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.AccountNetMessage;return proto.protocol.AccountNetMessage.deserializeBinaryFromReader(l,t)},proto.protocol.AccountNetMessage.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readInt64();e.setFreenetused(l);break;case 2:l=t.readInt64();e.setFreenetlimit(l);break;case 3:l=t.readInt64();e.setNetused(l);break;case 4:l=t.readInt64();e.setNetlimit(l);break;case 5:l=e.getAssetnetusedMap();t.readMessage(l,function(e,t){n.Map.deserializeBinary(e,t,n.BinaryReader.prototype.readString,n.BinaryReader.prototype.readInt64)});break;case 6:l=e.getAssetnetlimitMap();t.readMessage(l,function(e,t){n.Map.deserializeBinary(e,t,n.BinaryReader.prototype.readString,n.BinaryReader.prototype.readInt64)});break;default:t.skipField()}}return e},proto.protocol.AccountNetMessage.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.AccountNetMessage.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.AccountNetMessage.serializeBinaryToWriter=function(e,t){var l=void 0;0!==(l=e.getFreenetused())&&t.writeInt64(1,l),0!==(l=e.getFreenetlimit())&&t.writeInt64(2,l),0!==(l=e.getNetused())&&t.writeInt64(3,l),0!==(l=e.getNetlimit())&&t.writeInt64(4,l),(l=e.getAssetnetusedMap(!0))&&l.getLength()>0&&l.serializeBinary(5,t,n.BinaryWriter.prototype.writeString,n.BinaryWriter.prototype.writeInt64),(l=e.getAssetnetlimitMap(!0))&&l.getLength()>0&&l.serializeBinary(6,t,n.BinaryWriter.prototype.writeString,n.BinaryWriter.prototype.writeInt64)},proto.protocol.AccountNetMessage.prototype.getFreenetused=function(){return n.Message.getFieldWithDefault(this,1,0)},proto.protocol.AccountNetMessage.prototype.setFreenetused=function(e){n.Message.setProto3IntField(this,1,e)},proto.protocol.AccountNetMessage.prototype.getFreenetlimit=function(){return n.Message.getFieldWithDefault(this,2,0)},proto.protocol.AccountNetMessage.prototype.setFreenetlimit=function(e){n.Message.setProto3IntField(this,2,e)},proto.protocol.AccountNetMessage.prototype.getNetused=function(){return n.Message.getFieldWithDefault(this,3,0)},proto.protocol.AccountNetMessage.prototype.setNetused=function(e){n.Message.setProto3IntField(this,3,e)},proto.protocol.AccountNetMessage.prototype.getNetlimit=function(){return n.Message.getFieldWithDefault(this,4,0)},proto.protocol.AccountNetMessage.prototype.setNetlimit=function(e){n.Message.setProto3IntField(this,4,e)},proto.protocol.AccountNetMessage.prototype.getAssetnetusedMap=function(e){return n.Message.getMapField(this,5,e,null)},proto.protocol.AccountNetMessage.prototype.clearAssetnetusedMap=function(){this.getAssetnetusedMap().clear()},proto.protocol.AccountNetMessage.prototype.getAssetnetlimitMap=function(e){return n.Message.getMapField(this,6,e,null)},proto.protocol.AccountNetMessage.prototype.clearAssetnetlimitMap=function(){this.getAssetnetlimitMap().clear()},r.object.extend(t,proto.protocol)},function(e,t,l){var n=l(14),r=n,o=Function("return this")();l(11);r.exportSymbol("proto.protocol.AccountCreateContract",null,o),r.exportSymbol("proto.protocol.AccountUpdateContract",null,o),r.exportSymbol("proto.protocol.AssetIssueContract",null,o),r.exportSymbol("proto.protocol.AssetIssueContract.FrozenSupply",null,o),r.exportSymbol("proto.protocol.DeployContract",null,o),r.exportSymbol("proto.protocol.FreezeBalanceContract",null,o),r.exportSymbol("proto.protocol.ParticipateAssetIssueContract",null,o),r.exportSymbol("proto.protocol.TransferAssetContract",null,o),r.exportSymbol("proto.protocol.TransferContract",null,o),r.exportSymbol("proto.protocol.UnfreezeAssetContract",null,o),r.exportSymbol("proto.protocol.UnfreezeBalanceContract",null,o),r.exportSymbol("proto.protocol.UpdateAssetContract",null,o),r.exportSymbol("proto.protocol.VoteAssetContract",null,o),r.exportSymbol("proto.protocol.VoteWitnessContract",null,o),r.exportSymbol("proto.protocol.VoteWitnessContract.Vote",null,o),r.exportSymbol("proto.protocol.WithdrawBalanceContract",null,o),r.exportSymbol("proto.protocol.WitnessCreateContract",null,o),r.exportSymbol("proto.protocol.WitnessUpdateContract",null,o),proto.protocol.AccountCreateContract=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.AccountCreateContract,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.AccountCreateContract.displayName="proto.protocol.AccountCreateContract"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.AccountCreateContract.prototype.toObject=function(e){return proto.protocol.AccountCreateContract.toObject(e,this)},proto.protocol.AccountCreateContract.toObject=function(e,t){var l={type:n.Message.getFieldWithDefault(t,1,0),accountName:t.getAccountName_asB64(),ownerAddress:t.getOwnerAddress_asB64()};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.AccountCreateContract.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.AccountCreateContract;return proto.protocol.AccountCreateContract.deserializeBinaryFromReader(l,t)},proto.protocol.AccountCreateContract.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readEnum();e.setType(l);break;case 2:l=t.readBytes();e.setAccountName(l);break;case 3:l=t.readBytes();e.setOwnerAddress(l);break;default:t.skipField()}}return e},proto.protocol.AccountCreateContract.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.AccountCreateContract.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.AccountCreateContract.serializeBinaryToWriter=function(e,t){var l=void 0;0!==(l=e.getType())&&t.writeEnum(1,l),(l=e.getAccountName_asU8()).length>0&&t.writeBytes(2,l),(l=e.getOwnerAddress_asU8()).length>0&&t.writeBytes(3,l)},proto.protocol.AccountCreateContract.prototype.getType=function(){return n.Message.getFieldWithDefault(this,1,0)},proto.protocol.AccountCreateContract.prototype.setType=function(e){n.Message.setProto3EnumField(this,1,e)},proto.protocol.AccountCreateContract.prototype.getAccountName=function(){return n.Message.getFieldWithDefault(this,2,"")},proto.protocol.AccountCreateContract.prototype.getAccountName_asB64=function(){return n.Message.bytesAsB64(this.getAccountName())},proto.protocol.AccountCreateContract.prototype.getAccountName_asU8=function(){return n.Message.bytesAsU8(this.getAccountName())},proto.protocol.AccountCreateContract.prototype.setAccountName=function(e){n.Message.setProto3BytesField(this,2,e)},proto.protocol.AccountCreateContract.prototype.getOwnerAddress=function(){return n.Message.getFieldWithDefault(this,3,"")},proto.protocol.AccountCreateContract.prototype.getOwnerAddress_asB64=function(){return n.Message.bytesAsB64(this.getOwnerAddress())},proto.protocol.AccountCreateContract.prototype.getOwnerAddress_asU8=function(){return n.Message.bytesAsU8(this.getOwnerAddress())},proto.protocol.AccountCreateContract.prototype.setOwnerAddress=function(e){n.Message.setProto3BytesField(this,3,e)},proto.protocol.AccountUpdateContract=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.AccountUpdateContract,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.AccountUpdateContract.displayName="proto.protocol.AccountUpdateContract"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.AccountUpdateContract.prototype.toObject=function(e){return proto.protocol.AccountUpdateContract.toObject(e,this)},proto.protocol.AccountUpdateContract.toObject=function(e,t){var l={accountName:t.getAccountName_asB64(),ownerAddress:t.getOwnerAddress_asB64()};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.AccountUpdateContract.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.AccountUpdateContract;return proto.protocol.AccountUpdateContract.deserializeBinaryFromReader(l,t)},proto.protocol.AccountUpdateContract.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setAccountName(l);break;case 2:l=t.readBytes();e.setOwnerAddress(l);break;default:t.skipField()}}return e},proto.protocol.AccountUpdateContract.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.AccountUpdateContract.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.AccountUpdateContract.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getAccountName_asU8()).length>0&&t.writeBytes(1,l),(l=e.getOwnerAddress_asU8()).length>0&&t.writeBytes(2,l)},proto.protocol.AccountUpdateContract.prototype.getAccountName=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.AccountUpdateContract.prototype.getAccountName_asB64=function(){return n.Message.bytesAsB64(this.getAccountName())},proto.protocol.AccountUpdateContract.prototype.getAccountName_asU8=function(){return n.Message.bytesAsU8(this.getAccountName())},proto.protocol.AccountUpdateContract.prototype.setAccountName=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.AccountUpdateContract.prototype.getOwnerAddress=function(){return n.Message.getFieldWithDefault(this,2,"")},proto.protocol.AccountUpdateContract.prototype.getOwnerAddress_asB64=function(){return n.Message.bytesAsB64(this.getOwnerAddress())},proto.protocol.AccountUpdateContract.prototype.getOwnerAddress_asU8=function(){return n.Message.bytesAsU8(this.getOwnerAddress())},proto.protocol.AccountUpdateContract.prototype.setOwnerAddress=function(e){n.Message.setProto3BytesField(this,2,e)},proto.protocol.TransferContract=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.TransferContract,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.TransferContract.displayName="proto.protocol.TransferContract"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.TransferContract.prototype.toObject=function(e){return proto.protocol.TransferContract.toObject(e,this)},proto.protocol.TransferContract.toObject=function(e,t){var l={ownerAddress:t.getOwnerAddress_asB64(),toAddress:t.getToAddress_asB64(),amount:n.Message.getFieldWithDefault(t,3,0)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.TransferContract.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.TransferContract;return proto.protocol.TransferContract.deserializeBinaryFromReader(l,t)},proto.protocol.TransferContract.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setOwnerAddress(l);break;case 2:l=t.readBytes();e.setToAddress(l);break;case 3:l=t.readInt64();e.setAmount(l);break;default:t.skipField()}}return e},proto.protocol.TransferContract.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.TransferContract.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.TransferContract.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getOwnerAddress_asU8()).length>0&&t.writeBytes(1,l),(l=e.getToAddress_asU8()).length>0&&t.writeBytes(2,l),0!==(l=e.getAmount())&&t.writeInt64(3,l)},proto.protocol.TransferContract.prototype.getOwnerAddress=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.TransferContract.prototype.getOwnerAddress_asB64=function(){return n.Message.bytesAsB64(this.getOwnerAddress())},proto.protocol.TransferContract.prototype.getOwnerAddress_asU8=function(){return n.Message.bytesAsU8(this.getOwnerAddress())},proto.protocol.TransferContract.prototype.setOwnerAddress=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.TransferContract.prototype.getToAddress=function(){return n.Message.getFieldWithDefault(this,2,"")},proto.protocol.TransferContract.prototype.getToAddress_asB64=function(){return n.Message.bytesAsB64(this.getToAddress())},proto.protocol.TransferContract.prototype.getToAddress_asU8=function(){return n.Message.bytesAsU8(this.getToAddress())},proto.protocol.TransferContract.prototype.setToAddress=function(e){n.Message.setProto3BytesField(this,2,e)},proto.protocol.TransferContract.prototype.getAmount=function(){return n.Message.getFieldWithDefault(this,3,0)},proto.protocol.TransferContract.prototype.setAmount=function(e){n.Message.setProto3IntField(this,3,e)},proto.protocol.TransferAssetContract=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.TransferAssetContract,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.TransferAssetContract.displayName="proto.protocol.TransferAssetContract"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.TransferAssetContract.prototype.toObject=function(e){return proto.protocol.TransferAssetContract.toObject(e,this)},proto.protocol.TransferAssetContract.toObject=function(e,t){var l={assetName:t.getAssetName_asB64(),ownerAddress:t.getOwnerAddress_asB64(),toAddress:t.getToAddress_asB64(),amount:n.Message.getFieldWithDefault(t,4,0)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.TransferAssetContract.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.TransferAssetContract;return proto.protocol.TransferAssetContract.deserializeBinaryFromReader(l,t)},proto.protocol.TransferAssetContract.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setAssetName(l);break;case 2:l=t.readBytes();e.setOwnerAddress(l);break;case 3:l=t.readBytes();e.setToAddress(l);break;case 4:l=t.readInt64();e.setAmount(l);break;default:t.skipField()}}return e},proto.protocol.TransferAssetContract.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.TransferAssetContract.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.TransferAssetContract.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getAssetName_asU8()).length>0&&t.writeBytes(1,l),(l=e.getOwnerAddress_asU8()).length>0&&t.writeBytes(2,l),(l=e.getToAddress_asU8()).length>0&&t.writeBytes(3,l),0!==(l=e.getAmount())&&t.writeInt64(4,l)},proto.protocol.TransferAssetContract.prototype.getAssetName=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.TransferAssetContract.prototype.getAssetName_asB64=function(){return n.Message.bytesAsB64(this.getAssetName())},proto.protocol.TransferAssetContract.prototype.getAssetName_asU8=function(){return n.Message.bytesAsU8(this.getAssetName())},proto.protocol.TransferAssetContract.prototype.setAssetName=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.TransferAssetContract.prototype.getOwnerAddress=function(){return n.Message.getFieldWithDefault(this,2,"")},proto.protocol.TransferAssetContract.prototype.getOwnerAddress_asB64=function(){return n.Message.bytesAsB64(this.getOwnerAddress())},proto.protocol.TransferAssetContract.prototype.getOwnerAddress_asU8=function(){return n.Message.bytesAsU8(this.getOwnerAddress())},proto.protocol.TransferAssetContract.prototype.setOwnerAddress=function(e){n.Message.setProto3BytesField(this,2,e)},proto.protocol.TransferAssetContract.prototype.getToAddress=function(){return n.Message.getFieldWithDefault(this,3,"")},proto.protocol.TransferAssetContract.prototype.getToAddress_asB64=function(){return n.Message.bytesAsB64(this.getToAddress())},proto.protocol.TransferAssetContract.prototype.getToAddress_asU8=function(){return n.Message.bytesAsU8(this.getToAddress())},proto.protocol.TransferAssetContract.prototype.setToAddress=function(e){n.Message.setProto3BytesField(this,3,e)},proto.protocol.TransferAssetContract.prototype.getAmount=function(){return n.Message.getFieldWithDefault(this,4,0)},proto.protocol.TransferAssetContract.prototype.setAmount=function(e){n.Message.setProto3IntField(this,4,e)},proto.protocol.VoteAssetContract=function(e){n.Message.initialize(this,e,0,-1,proto.protocol.VoteAssetContract.repeatedFields_,null)},r.inherits(proto.protocol.VoteAssetContract,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.VoteAssetContract.displayName="proto.protocol.VoteAssetContract"),proto.protocol.VoteAssetContract.repeatedFields_=[2],n.Message.GENERATE_TO_OBJECT&&(proto.protocol.VoteAssetContract.prototype.toObject=function(e){return proto.protocol.VoteAssetContract.toObject(e,this)},proto.protocol.VoteAssetContract.toObject=function(e,t){var l={ownerAddress:t.getOwnerAddress_asB64(),voteAddressList:t.getVoteAddressList_asB64(),support:n.Message.getFieldWithDefault(t,3,!1),count:n.Message.getFieldWithDefault(t,5,0)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.VoteAssetContract.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.VoteAssetContract;return proto.protocol.VoteAssetContract.deserializeBinaryFromReader(l,t)},proto.protocol.VoteAssetContract.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setOwnerAddress(l);break;case 2:l=t.readBytes();e.addVoteAddress(l);break;case 3:l=t.readBool();e.setSupport(l);break;case 5:l=t.readInt32();e.setCount(l);break;default:t.skipField()}}return e},proto.protocol.VoteAssetContract.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.VoteAssetContract.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.VoteAssetContract.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getOwnerAddress_asU8()).length>0&&t.writeBytes(1,l),(l=e.getVoteAddressList_asU8()).length>0&&t.writeRepeatedBytes(2,l),(l=e.getSupport())&&t.writeBool(3,l),0!==(l=e.getCount())&&t.writeInt32(5,l)},proto.protocol.VoteAssetContract.prototype.getOwnerAddress=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.VoteAssetContract.prototype.getOwnerAddress_asB64=function(){return n.Message.bytesAsB64(this.getOwnerAddress())},proto.protocol.VoteAssetContract.prototype.getOwnerAddress_asU8=function(){return n.Message.bytesAsU8(this.getOwnerAddress())},proto.protocol.VoteAssetContract.prototype.setOwnerAddress=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.VoteAssetContract.prototype.getVoteAddressList=function(){return n.Message.getRepeatedField(this,2)},proto.protocol.VoteAssetContract.prototype.getVoteAddressList_asB64=function(){return n.Message.bytesListAsB64(this.getVoteAddressList())},proto.protocol.VoteAssetContract.prototype.getVoteAddressList_asU8=function(){return n.Message.bytesListAsU8(this.getVoteAddressList())},proto.protocol.VoteAssetContract.prototype.setVoteAddressList=function(e){n.Message.setField(this,2,e||[])},proto.protocol.VoteAssetContract.prototype.addVoteAddress=function(e,t){n.Message.addToRepeatedField(this,2,e,t)},proto.protocol.VoteAssetContract.prototype.clearVoteAddressList=function(){this.setVoteAddressList([])},proto.protocol.VoteAssetContract.prototype.getSupport=function(){return n.Message.getFieldWithDefault(this,3,!1)},proto.protocol.VoteAssetContract.prototype.setSupport=function(e){n.Message.setProto3BooleanField(this,3,e)},proto.protocol.VoteAssetContract.prototype.getCount=function(){return n.Message.getFieldWithDefault(this,5,0)},proto.protocol.VoteAssetContract.prototype.setCount=function(e){n.Message.setProto3IntField(this,5,e)},proto.protocol.VoteWitnessContract=function(e){n.Message.initialize(this,e,0,-1,proto.protocol.VoteWitnessContract.repeatedFields_,null)},r.inherits(proto.protocol.VoteWitnessContract,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.VoteWitnessContract.displayName="proto.protocol.VoteWitnessContract"),proto.protocol.VoteWitnessContract.repeatedFields_=[2],n.Message.GENERATE_TO_OBJECT&&(proto.protocol.VoteWitnessContract.prototype.toObject=function(e){return proto.protocol.VoteWitnessContract.toObject(e,this)},proto.protocol.VoteWitnessContract.toObject=function(e,t){var l={ownerAddress:t.getOwnerAddress_asB64(),votesList:n.Message.toObjectList(t.getVotesList(),proto.protocol.VoteWitnessContract.Vote.toObject,e),support:n.Message.getFieldWithDefault(t,3,!1)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.VoteWitnessContract.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.VoteWitnessContract;return proto.protocol.VoteWitnessContract.deserializeBinaryFromReader(l,t)},proto.protocol.VoteWitnessContract.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setOwnerAddress(l);break;case 2:l=new proto.protocol.VoteWitnessContract.Vote;t.readMessage(l,proto.protocol.VoteWitnessContract.Vote.deserializeBinaryFromReader),e.addVotes(l);break;case 3:l=t.readBool();e.setSupport(l);break;default:t.skipField()}}return e},proto.protocol.VoteWitnessContract.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.VoteWitnessContract.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.VoteWitnessContract.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getOwnerAddress_asU8()).length>0&&t.writeBytes(1,l),(l=e.getVotesList()).length>0&&t.writeRepeatedMessage(2,l,proto.protocol.VoteWitnessContract.Vote.serializeBinaryToWriter),(l=e.getSupport())&&t.writeBool(3,l)},proto.protocol.VoteWitnessContract.Vote=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.VoteWitnessContract.Vote,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.VoteWitnessContract.Vote.displayName="proto.protocol.VoteWitnessContract.Vote"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.VoteWitnessContract.Vote.prototype.toObject=function(e){return proto.protocol.VoteWitnessContract.Vote.toObject(e,this)},proto.protocol.VoteWitnessContract.Vote.toObject=function(e,t){var l={voteAddress:t.getVoteAddress_asB64(),voteCount:n.Message.getFieldWithDefault(t,2,0)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.VoteWitnessContract.Vote.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.VoteWitnessContract.Vote;return proto.protocol.VoteWitnessContract.Vote.deserializeBinaryFromReader(l,t)},proto.protocol.VoteWitnessContract.Vote.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setVoteAddress(l);break;case 2:l=t.readInt64();e.setVoteCount(l);break;default:t.skipField()}}return e},proto.protocol.VoteWitnessContract.Vote.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.VoteWitnessContract.Vote.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.VoteWitnessContract.Vote.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getVoteAddress_asU8()).length>0&&t.writeBytes(1,l),0!==(l=e.getVoteCount())&&t.writeInt64(2,l)},proto.protocol.VoteWitnessContract.Vote.prototype.getVoteAddress=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.VoteWitnessContract.Vote.prototype.getVoteAddress_asB64=function(){return n.Message.bytesAsB64(this.getVoteAddress())},proto.protocol.VoteWitnessContract.Vote.prototype.getVoteAddress_asU8=function(){return n.Message.bytesAsU8(this.getVoteAddress())},proto.protocol.VoteWitnessContract.Vote.prototype.setVoteAddress=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.VoteWitnessContract.Vote.prototype.getVoteCount=function(){return n.Message.getFieldWithDefault(this,2,0)},proto.protocol.VoteWitnessContract.Vote.prototype.setVoteCount=function(e){n.Message.setProto3IntField(this,2,e)},proto.protocol.VoteWitnessContract.prototype.getOwnerAddress=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.VoteWitnessContract.prototype.getOwnerAddress_asB64=function(){return n.Message.bytesAsB64(this.getOwnerAddress())},proto.protocol.VoteWitnessContract.prototype.getOwnerAddress_asU8=function(){return n.Message.bytesAsU8(this.getOwnerAddress())},proto.protocol.VoteWitnessContract.prototype.setOwnerAddress=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.VoteWitnessContract.prototype.getVotesList=function(){return n.Message.getRepeatedWrapperField(this,proto.protocol.VoteWitnessContract.Vote,2)},proto.protocol.VoteWitnessContract.prototype.setVotesList=function(e){n.Message.setRepeatedWrapperField(this,2,e)},proto.protocol.VoteWitnessContract.prototype.addVotes=function(e,t){return n.Message.addToRepeatedWrapperField(this,2,e,proto.protocol.VoteWitnessContract.Vote,t)},proto.protocol.VoteWitnessContract.prototype.clearVotesList=function(){this.setVotesList([])},proto.protocol.VoteWitnessContract.prototype.getSupport=function(){return n.Message.getFieldWithDefault(this,3,!1)},proto.protocol.VoteWitnessContract.prototype.setSupport=function(e){n.Message.setProto3BooleanField(this,3,e)},proto.protocol.WitnessCreateContract=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.WitnessCreateContract,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.WitnessCreateContract.displayName="proto.protocol.WitnessCreateContract"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.WitnessCreateContract.prototype.toObject=function(e){return proto.protocol.WitnessCreateContract.toObject(e,this)},proto.protocol.WitnessCreateContract.toObject=function(e,t){var l={ownerAddress:t.getOwnerAddress_asB64(),url:t.getUrl_asB64()};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.WitnessCreateContract.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.WitnessCreateContract;return proto.protocol.WitnessCreateContract.deserializeBinaryFromReader(l,t)},proto.protocol.WitnessCreateContract.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setOwnerAddress(l);break;case 2:l=t.readBytes();e.setUrl(l);break;default:t.skipField()}}return e},proto.protocol.WitnessCreateContract.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.WitnessCreateContract.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.WitnessCreateContract.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getOwnerAddress_asU8()).length>0&&t.writeBytes(1,l),(l=e.getUrl_asU8()).length>0&&t.writeBytes(2,l)},proto.protocol.WitnessCreateContract.prototype.getOwnerAddress=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.WitnessCreateContract.prototype.getOwnerAddress_asB64=function(){return n.Message.bytesAsB64(this.getOwnerAddress())},proto.protocol.WitnessCreateContract.prototype.getOwnerAddress_asU8=function(){return n.Message.bytesAsU8(this.getOwnerAddress())},proto.protocol.WitnessCreateContract.prototype.setOwnerAddress=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.WitnessCreateContract.prototype.getUrl=function(){return n.Message.getFieldWithDefault(this,2,"")},proto.protocol.WitnessCreateContract.prototype.getUrl_asB64=function(){return n.Message.bytesAsB64(this.getUrl())},proto.protocol.WitnessCreateContract.prototype.getUrl_asU8=function(){return n.Message.bytesAsU8(this.getUrl())},proto.protocol.WitnessCreateContract.prototype.setUrl=function(e){n.Message.setProto3BytesField(this,2,e)},proto.protocol.WitnessUpdateContract=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.WitnessUpdateContract,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.WitnessUpdateContract.displayName="proto.protocol.WitnessUpdateContract"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.WitnessUpdateContract.prototype.toObject=function(e){return proto.protocol.WitnessUpdateContract.toObject(e,this)},proto.protocol.WitnessUpdateContract.toObject=function(e,t){var l={ownerAddress:t.getOwnerAddress_asB64(),updateUrl:t.getUpdateUrl_asB64()};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.WitnessUpdateContract.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.WitnessUpdateContract;return proto.protocol.WitnessUpdateContract.deserializeBinaryFromReader(l,t)},proto.protocol.WitnessUpdateContract.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setOwnerAddress(l);break;case 12:l=t.readBytes();e.setUpdateUrl(l);break;default:t.skipField()}}return e},proto.protocol.WitnessUpdateContract.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.WitnessUpdateContract.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.WitnessUpdateContract.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getOwnerAddress_asU8()).length>0&&t.writeBytes(1,l),(l=e.getUpdateUrl_asU8()).length>0&&t.writeBytes(12,l)},proto.protocol.WitnessUpdateContract.prototype.getOwnerAddress=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.WitnessUpdateContract.prototype.getOwnerAddress_asB64=function(){return n.Message.bytesAsB64(this.getOwnerAddress())},proto.protocol.WitnessUpdateContract.prototype.getOwnerAddress_asU8=function(){return n.Message.bytesAsU8(this.getOwnerAddress())},proto.protocol.WitnessUpdateContract.prototype.setOwnerAddress=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.WitnessUpdateContract.prototype.getUpdateUrl=function(){return n.Message.getFieldWithDefault(this,12,"")},proto.protocol.WitnessUpdateContract.prototype.getUpdateUrl_asB64=function(){return n.Message.bytesAsB64(this.getUpdateUrl())},proto.protocol.WitnessUpdateContract.prototype.getUpdateUrl_asU8=function(){return n.Message.bytesAsU8(this.getUpdateUrl())},proto.protocol.WitnessUpdateContract.prototype.setUpdateUrl=function(e){n.Message.setProto3BytesField(this,12,e)},proto.protocol.AssetIssueContract=function(e){n.Message.initialize(this,e,0,-1,proto.protocol.AssetIssueContract.repeatedFields_,null)},r.inherits(proto.protocol.AssetIssueContract,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.AssetIssueContract.displayName="proto.protocol.AssetIssueContract"),proto.protocol.AssetIssueContract.repeatedFields_=[5],n.Message.GENERATE_TO_OBJECT&&(proto.protocol.AssetIssueContract.prototype.toObject=function(e){return proto.protocol.AssetIssueContract.toObject(e,this)},proto.protocol.AssetIssueContract.toObject=function(e,t){var l={ownerAddress:t.getOwnerAddress_asB64(),name:t.getName_asB64(),abbr:t.getAbbr_asB64(),totalSupply:n.Message.getFieldWithDefault(t,4,0),frozenSupplyList:n.Message.toObjectList(t.getFrozenSupplyList(),proto.protocol.AssetIssueContract.FrozenSupply.toObject,e),trxNum:n.Message.getFieldWithDefault(t,6,0),num:n.Message.getFieldWithDefault(t,8,0),startTime:n.Message.getFieldWithDefault(t,9,0),endTime:n.Message.getFieldWithDefault(t,10,0),voteScore:n.Message.getFieldWithDefault(t,16,0),description:t.getDescription_asB64(),url:t.getUrl_asB64(),freeAssetNetLimit:n.Message.getFieldWithDefault(t,22,0),publicFreeAssetNetLimit:n.Message.getFieldWithDefault(t,23,0),publicFreeAssetNetUsage:n.Message.getFieldWithDefault(t,24,0),publicLatestFreeNetTime:n.Message.getFieldWithDefault(t,25,0)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.AssetIssueContract.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.AssetIssueContract;return proto.protocol.AssetIssueContract.deserializeBinaryFromReader(l,t)},proto.protocol.AssetIssueContract.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setOwnerAddress(l);break;case 2:l=t.readBytes();e.setName(l);break;case 3:l=t.readBytes();e.setAbbr(l);break;case 4:l=t.readInt64();e.setTotalSupply(l);break;case 5:l=new proto.protocol.AssetIssueContract.FrozenSupply;t.readMessage(l,proto.protocol.AssetIssueContract.FrozenSupply.deserializeBinaryFromReader),e.addFrozenSupply(l);break;case 6:l=t.readInt32();e.setTrxNum(l);break;case 8:l=t.readInt32();e.setNum(l);break;case 9:l=t.readInt64();e.setStartTime(l);break;case 10:l=t.readInt64();e.setEndTime(l);break;case 16:l=t.readInt32();e.setVoteScore(l);break;case 20:l=t.readBytes();e.setDescription(l);break;case 21:l=t.readBytes();e.setUrl(l);break;case 22:l=t.readInt64();e.setFreeAssetNetLimit(l);break;case 23:l=t.readInt64();e.setPublicFreeAssetNetLimit(l);break;case 24:l=t.readInt64();e.setPublicFreeAssetNetUsage(l);break;case 25:l=t.readInt64();e.setPublicLatestFreeNetTime(l);break;default:t.skipField()}}return e},proto.protocol.AssetIssueContract.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.AssetIssueContract.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.AssetIssueContract.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getOwnerAddress_asU8()).length>0&&t.writeBytes(1,l),(l=e.getName_asU8()).length>0&&t.writeBytes(2,l),(l=e.getAbbr_asU8()).length>0&&t.writeBytes(3,l),0!==(l=e.getTotalSupply())&&t.writeInt64(4,l),(l=e.getFrozenSupplyList()).length>0&&t.writeRepeatedMessage(5,l,proto.protocol.AssetIssueContract.FrozenSupply.serializeBinaryToWriter),0!==(l=e.getTrxNum())&&t.writeInt32(6,l),0!==(l=e.getNum())&&t.writeInt32(8,l),0!==(l=e.getStartTime())&&t.writeInt64(9,l),0!==(l=e.getEndTime())&&t.writeInt64(10,l),0!==(l=e.getVoteScore())&&t.writeInt32(16,l),(l=e.getDescription_asU8()).length>0&&t.writeBytes(20,l),(l=e.getUrl_asU8()).length>0&&t.writeBytes(21,l),0!==(l=e.getFreeAssetNetLimit())&&t.writeInt64(22,l),0!==(l=e.getPublicFreeAssetNetLimit())&&t.writeInt64(23,l),0!==(l=e.getPublicFreeAssetNetUsage())&&t.writeInt64(24,l),0!==(l=e.getPublicLatestFreeNetTime())&&t.writeInt64(25,l)},proto.protocol.AssetIssueContract.FrozenSupply=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.AssetIssueContract.FrozenSupply,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.AssetIssueContract.FrozenSupply.displayName="proto.protocol.AssetIssueContract.FrozenSupply"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.AssetIssueContract.FrozenSupply.prototype.toObject=function(e){return proto.protocol.AssetIssueContract.FrozenSupply.toObject(e,this)},proto.protocol.AssetIssueContract.FrozenSupply.toObject=function(e,t){var l={frozenAmount:n.Message.getFieldWithDefault(t,1,0),frozenDays:n.Message.getFieldWithDefault(t,2,0)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.AssetIssueContract.FrozenSupply.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.AssetIssueContract.FrozenSupply;return proto.protocol.AssetIssueContract.FrozenSupply.deserializeBinaryFromReader(l,t)},proto.protocol.AssetIssueContract.FrozenSupply.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readInt64();e.setFrozenAmount(l);break;case 2:l=t.readInt64();e.setFrozenDays(l);break;default:t.skipField()}}return e},proto.protocol.AssetIssueContract.FrozenSupply.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.AssetIssueContract.FrozenSupply.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.AssetIssueContract.FrozenSupply.serializeBinaryToWriter=function(e,t){var l=void 0;0!==(l=e.getFrozenAmount())&&t.writeInt64(1,l),0!==(l=e.getFrozenDays())&&t.writeInt64(2,l)},proto.protocol.AssetIssueContract.FrozenSupply.prototype.getFrozenAmount=function(){return n.Message.getFieldWithDefault(this,1,0)},proto.protocol.AssetIssueContract.FrozenSupply.prototype.setFrozenAmount=function(e){n.Message.setProto3IntField(this,1,e)},proto.protocol.AssetIssueContract.FrozenSupply.prototype.getFrozenDays=function(){return n.Message.getFieldWithDefault(this,2,0)},proto.protocol.AssetIssueContract.FrozenSupply.prototype.setFrozenDays=function(e){n.Message.setProto3IntField(this,2,e)},proto.protocol.AssetIssueContract.prototype.getOwnerAddress=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.AssetIssueContract.prototype.getOwnerAddress_asB64=function(){return n.Message.bytesAsB64(this.getOwnerAddress())},proto.protocol.AssetIssueContract.prototype.getOwnerAddress_asU8=function(){return n.Message.bytesAsU8(this.getOwnerAddress())},proto.protocol.AssetIssueContract.prototype.setOwnerAddress=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.AssetIssueContract.prototype.getName=function(){return n.Message.getFieldWithDefault(this,2,"")},proto.protocol.AssetIssueContract.prototype.getName_asB64=function(){return n.Message.bytesAsB64(this.getName())},proto.protocol.AssetIssueContract.prototype.getName_asU8=function(){return n.Message.bytesAsU8(this.getName())},proto.protocol.AssetIssueContract.prototype.setName=function(e){n.Message.setProto3BytesField(this,2,e)},proto.protocol.AssetIssueContract.prototype.getAbbr=function(){return n.Message.getFieldWithDefault(this,3,"")},proto.protocol.AssetIssueContract.prototype.getAbbr_asB64=function(){return n.Message.bytesAsB64(this.getAbbr())},proto.protocol.AssetIssueContract.prototype.getAbbr_asU8=function(){return n.Message.bytesAsU8(this.getAbbr())},proto.protocol.AssetIssueContract.prototype.setAbbr=function(e){n.Message.setProto3BytesField(this,3,e)},proto.protocol.AssetIssueContract.prototype.getTotalSupply=function(){return n.Message.getFieldWithDefault(this,4,0)},proto.protocol.AssetIssueContract.prototype.setTotalSupply=function(e){n.Message.setProto3IntField(this,4,e)},proto.protocol.AssetIssueContract.prototype.getFrozenSupplyList=function(){return n.Message.getRepeatedWrapperField(this,proto.protocol.AssetIssueContract.FrozenSupply,5)},proto.protocol.AssetIssueContract.prototype.setFrozenSupplyList=function(e){n.Message.setRepeatedWrapperField(this,5,e)},proto.protocol.AssetIssueContract.prototype.addFrozenSupply=function(e,t){return n.Message.addToRepeatedWrapperField(this,5,e,proto.protocol.AssetIssueContract.FrozenSupply,t)},proto.protocol.AssetIssueContract.prototype.clearFrozenSupplyList=function(){this.setFrozenSupplyList([])},proto.protocol.AssetIssueContract.prototype.getTrxNum=function(){return n.Message.getFieldWithDefault(this,6,0)},proto.protocol.AssetIssueContract.prototype.setTrxNum=function(e){n.Message.setProto3IntField(this,6,e)},proto.protocol.AssetIssueContract.prototype.getNum=function(){return n.Message.getFieldWithDefault(this,8,0)},proto.protocol.AssetIssueContract.prototype.setNum=function(e){n.Message.setProto3IntField(this,8,e)},proto.protocol.AssetIssueContract.prototype.getStartTime=function(){return n.Message.getFieldWithDefault(this,9,0)},proto.protocol.AssetIssueContract.prototype.setStartTime=function(e){n.Message.setProto3IntField(this,9,e)},proto.protocol.AssetIssueContract.prototype.getEndTime=function(){return n.Message.getFieldWithDefault(this,10,0)},proto.protocol.AssetIssueContract.prototype.setEndTime=function(e){n.Message.setProto3IntField(this,10,e)},proto.protocol.AssetIssueContract.prototype.getVoteScore=function(){return n.Message.getFieldWithDefault(this,16,0)},proto.protocol.AssetIssueContract.prototype.setVoteScore=function(e){n.Message.setProto3IntField(this,16,e)},proto.protocol.AssetIssueContract.prototype.getDescription=function(){return n.Message.getFieldWithDefault(this,20,"")},proto.protocol.AssetIssueContract.prototype.getDescription_asB64=function(){return n.Message.bytesAsB64(this.getDescription())},proto.protocol.AssetIssueContract.prototype.getDescription_asU8=function(){return n.Message.bytesAsU8(this.getDescription())},proto.protocol.AssetIssueContract.prototype.setDescription=function(e){n.Message.setProto3BytesField(this,20,e)},proto.protocol.AssetIssueContract.prototype.getUrl=function(){return n.Message.getFieldWithDefault(this,21,"")},proto.protocol.AssetIssueContract.prototype.getUrl_asB64=function(){return n.Message.bytesAsB64(this.getUrl())},proto.protocol.AssetIssueContract.prototype.getUrl_asU8=function(){return n.Message.bytesAsU8(this.getUrl())},proto.protocol.AssetIssueContract.prototype.setUrl=function(e){n.Message.setProto3BytesField(this,21,e)},proto.protocol.AssetIssueContract.prototype.getFreeAssetNetLimit=function(){return n.Message.getFieldWithDefault(this,22,0)},proto.protocol.AssetIssueContract.prototype.setFreeAssetNetLimit=function(e){n.Message.setProto3IntField(this,22,e)},proto.protocol.AssetIssueContract.prototype.getPublicFreeAssetNetLimit=function(){return n.Message.getFieldWithDefault(this,23,0)},proto.protocol.AssetIssueContract.prototype.setPublicFreeAssetNetLimit=function(e){n.Message.setProto3IntField(this,23,e)},proto.protocol.AssetIssueContract.prototype.getPublicFreeAssetNetUsage=function(){return n.Message.getFieldWithDefault(this,24,0)},proto.protocol.AssetIssueContract.prototype.setPublicFreeAssetNetUsage=function(e){n.Message.setProto3IntField(this,24,e)},proto.protocol.AssetIssueContract.prototype.getPublicLatestFreeNetTime=function(){return n.Message.getFieldWithDefault(this,25,0)},proto.protocol.AssetIssueContract.prototype.setPublicLatestFreeNetTime=function(e){n.Message.setProto3IntField(this,25,e)},proto.protocol.ParticipateAssetIssueContract=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.ParticipateAssetIssueContract,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.ParticipateAssetIssueContract.displayName="proto.protocol.ParticipateAssetIssueContract"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.ParticipateAssetIssueContract.prototype.toObject=function(e){return proto.protocol.ParticipateAssetIssueContract.toObject(e,this)},proto.protocol.ParticipateAssetIssueContract.toObject=function(e,t){var l={ownerAddress:t.getOwnerAddress_asB64(),toAddress:t.getToAddress_asB64(),assetName:t.getAssetName_asB64(),amount:n.Message.getFieldWithDefault(t,4,0)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.ParticipateAssetIssueContract.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.ParticipateAssetIssueContract;return proto.protocol.ParticipateAssetIssueContract.deserializeBinaryFromReader(l,t)},proto.protocol.ParticipateAssetIssueContract.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setOwnerAddress(l);break;case 2:l=t.readBytes();e.setToAddress(l);break;case 3:l=t.readBytes();e.setAssetName(l);break;case 4:l=t.readInt64();e.setAmount(l);break;default:t.skipField()}}return e},proto.protocol.ParticipateAssetIssueContract.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.ParticipateAssetIssueContract.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.ParticipateAssetIssueContract.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getOwnerAddress_asU8()).length>0&&t.writeBytes(1,l),(l=e.getToAddress_asU8()).length>0&&t.writeBytes(2,l),(l=e.getAssetName_asU8()).length>0&&t.writeBytes(3,l),0!==(l=e.getAmount())&&t.writeInt64(4,l)},proto.protocol.ParticipateAssetIssueContract.prototype.getOwnerAddress=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.ParticipateAssetIssueContract.prototype.getOwnerAddress_asB64=function(){return n.Message.bytesAsB64(this.getOwnerAddress())},proto.protocol.ParticipateAssetIssueContract.prototype.getOwnerAddress_asU8=function(){return n.Message.bytesAsU8(this.getOwnerAddress())},proto.protocol.ParticipateAssetIssueContract.prototype.setOwnerAddress=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.ParticipateAssetIssueContract.prototype.getToAddress=function(){return n.Message.getFieldWithDefault(this,2,"")},proto.protocol.ParticipateAssetIssueContract.prototype.getToAddress_asB64=function(){return n.Message.bytesAsB64(this.getToAddress())},proto.protocol.ParticipateAssetIssueContract.prototype.getToAddress_asU8=function(){return n.Message.bytesAsU8(this.getToAddress())},proto.protocol.ParticipateAssetIssueContract.prototype.setToAddress=function(e){n.Message.setProto3BytesField(this,2,e)},proto.protocol.ParticipateAssetIssueContract.prototype.getAssetName=function(){return n.Message.getFieldWithDefault(this,3,"")},proto.protocol.ParticipateAssetIssueContract.prototype.getAssetName_asB64=function(){return n.Message.bytesAsB64(this.getAssetName())},proto.protocol.ParticipateAssetIssueContract.prototype.getAssetName_asU8=function(){return n.Message.bytesAsU8(this.getAssetName())},proto.protocol.ParticipateAssetIssueContract.prototype.setAssetName=function(e){n.Message.setProto3BytesField(this,3,e)},proto.protocol.ParticipateAssetIssueContract.prototype.getAmount=function(){return n.Message.getFieldWithDefault(this,4,0)},proto.protocol.ParticipateAssetIssueContract.prototype.setAmount=function(e){n.Message.setProto3IntField(this,4,e)},proto.protocol.DeployContract=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.DeployContract,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.DeployContract.displayName="proto.protocol.DeployContract"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.DeployContract.prototype.toObject=function(e){return proto.protocol.DeployContract.toObject(e,this)},proto.protocol.DeployContract.toObject=function(e,t){var l={ownerAddress:t.getOwnerAddress_asB64(),script:t.getScript_asB64()};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.DeployContract.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.DeployContract;return proto.protocol.DeployContract.deserializeBinaryFromReader(l,t)},proto.protocol.DeployContract.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setOwnerAddress(l);break;case 2:l=t.readBytes();e.setScript(l);break;default:t.skipField()}}return e},proto.protocol.DeployContract.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.DeployContract.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.DeployContract.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getOwnerAddress_asU8()).length>0&&t.writeBytes(1,l),(l=e.getScript_asU8()).length>0&&t.writeBytes(2,l)},proto.protocol.DeployContract.prototype.getOwnerAddress=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.DeployContract.prototype.getOwnerAddress_asB64=function(){return n.Message.bytesAsB64(this.getOwnerAddress())},proto.protocol.DeployContract.prototype.getOwnerAddress_asU8=function(){return n.Message.bytesAsU8(this.getOwnerAddress())},proto.protocol.DeployContract.prototype.setOwnerAddress=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.DeployContract.prototype.getScript=function(){return n.Message.getFieldWithDefault(this,2,"")},proto.protocol.DeployContract.prototype.getScript_asB64=function(){return n.Message.bytesAsB64(this.getScript())},proto.protocol.DeployContract.prototype.getScript_asU8=function(){return n.Message.bytesAsU8(this.getScript())},proto.protocol.DeployContract.prototype.setScript=function(e){n.Message.setProto3BytesField(this,2,e)},proto.protocol.FreezeBalanceContract=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.FreezeBalanceContract,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.FreezeBalanceContract.displayName="proto.protocol.FreezeBalanceContract"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.FreezeBalanceContract.prototype.toObject=function(e){return proto.protocol.FreezeBalanceContract.toObject(e,this)},proto.protocol.FreezeBalanceContract.toObject=function(e,t){var l={ownerAddress:t.getOwnerAddress_asB64(),frozenBalance:n.Message.getFieldWithDefault(t,2,0),frozenDuration:n.Message.getFieldWithDefault(t,3,0)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.FreezeBalanceContract.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.FreezeBalanceContract;return proto.protocol.FreezeBalanceContract.deserializeBinaryFromReader(l,t)},proto.protocol.FreezeBalanceContract.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setOwnerAddress(l);break;case 2:l=t.readInt64();e.setFrozenBalance(l);break;case 3:l=t.readInt64();e.setFrozenDuration(l);break;default:t.skipField()}}return e},proto.protocol.FreezeBalanceContract.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.FreezeBalanceContract.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.FreezeBalanceContract.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getOwnerAddress_asU8()).length>0&&t.writeBytes(1,l),0!==(l=e.getFrozenBalance())&&t.writeInt64(2,l),0!==(l=e.getFrozenDuration())&&t.writeInt64(3,l)},proto.protocol.FreezeBalanceContract.prototype.getOwnerAddress=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.FreezeBalanceContract.prototype.getOwnerAddress_asB64=function(){return n.Message.bytesAsB64(this.getOwnerAddress())},proto.protocol.FreezeBalanceContract.prototype.getOwnerAddress_asU8=function(){return n.Message.bytesAsU8(this.getOwnerAddress())},proto.protocol.FreezeBalanceContract.prototype.setOwnerAddress=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.FreezeBalanceContract.prototype.getFrozenBalance=function(){return n.Message.getFieldWithDefault(this,2,0)},proto.protocol.FreezeBalanceContract.prototype.setFrozenBalance=function(e){n.Message.setProto3IntField(this,2,e)},proto.protocol.FreezeBalanceContract.prototype.getFrozenDuration=function(){return n.Message.getFieldWithDefault(this,3,0)},proto.protocol.FreezeBalanceContract.prototype.setFrozenDuration=function(e){n.Message.setProto3IntField(this,3,e)},proto.protocol.UnfreezeBalanceContract=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.UnfreezeBalanceContract,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.UnfreezeBalanceContract.displayName="proto.protocol.UnfreezeBalanceContract"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.UnfreezeBalanceContract.prototype.toObject=function(e){return proto.protocol.UnfreezeBalanceContract.toObject(e,this)},proto.protocol.UnfreezeBalanceContract.toObject=function(e,t){var l={ownerAddress:t.getOwnerAddress_asB64()};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.UnfreezeBalanceContract.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.UnfreezeBalanceContract;return proto.protocol.UnfreezeBalanceContract.deserializeBinaryFromReader(l,t)},proto.protocol.UnfreezeBalanceContract.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setOwnerAddress(l);break;default:t.skipField()}}return e},proto.protocol.UnfreezeBalanceContract.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.UnfreezeBalanceContract.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.UnfreezeBalanceContract.serializeBinaryToWriter=function(e,t){var l;(l=e.getOwnerAddress_asU8()).length>0&&t.writeBytes(1,l)},proto.protocol.UnfreezeBalanceContract.prototype.getOwnerAddress=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.UnfreezeBalanceContract.prototype.getOwnerAddress_asB64=function(){return n.Message.bytesAsB64(this.getOwnerAddress())},proto.protocol.UnfreezeBalanceContract.prototype.getOwnerAddress_asU8=function(){return n.Message.bytesAsU8(this.getOwnerAddress())},proto.protocol.UnfreezeBalanceContract.prototype.setOwnerAddress=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.UnfreezeAssetContract=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.UnfreezeAssetContract,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.UnfreezeAssetContract.displayName="proto.protocol.UnfreezeAssetContract"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.UnfreezeAssetContract.prototype.toObject=function(e){return proto.protocol.UnfreezeAssetContract.toObject(e,this)},proto.protocol.UnfreezeAssetContract.toObject=function(e,t){var l={ownerAddress:t.getOwnerAddress_asB64()};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.UnfreezeAssetContract.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.UnfreezeAssetContract;return proto.protocol.UnfreezeAssetContract.deserializeBinaryFromReader(l,t)},proto.protocol.UnfreezeAssetContract.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setOwnerAddress(l);break;default:t.skipField()}}return e},proto.protocol.UnfreezeAssetContract.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.UnfreezeAssetContract.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.UnfreezeAssetContract.serializeBinaryToWriter=function(e,t){var l;(l=e.getOwnerAddress_asU8()).length>0&&t.writeBytes(1,l)},proto.protocol.UnfreezeAssetContract.prototype.getOwnerAddress=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.UnfreezeAssetContract.prototype.getOwnerAddress_asB64=function(){return n.Message.bytesAsB64(this.getOwnerAddress())},proto.protocol.UnfreezeAssetContract.prototype.getOwnerAddress_asU8=function(){return n.Message.bytesAsU8(this.getOwnerAddress())},proto.protocol.UnfreezeAssetContract.prototype.setOwnerAddress=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.WithdrawBalanceContract=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.WithdrawBalanceContract,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.WithdrawBalanceContract.displayName="proto.protocol.WithdrawBalanceContract"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.WithdrawBalanceContract.prototype.toObject=function(e){return proto.protocol.WithdrawBalanceContract.toObject(e,this)},proto.protocol.WithdrawBalanceContract.toObject=function(e,t){var l={ownerAddress:t.getOwnerAddress_asB64()};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.WithdrawBalanceContract.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.WithdrawBalanceContract;return proto.protocol.WithdrawBalanceContract.deserializeBinaryFromReader(l,t)},proto.protocol.WithdrawBalanceContract.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setOwnerAddress(l);break;default:t.skipField()}}return e},proto.protocol.WithdrawBalanceContract.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.WithdrawBalanceContract.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.WithdrawBalanceContract.serializeBinaryToWriter=function(e,t){var l;(l=e.getOwnerAddress_asU8()).length>0&&t.writeBytes(1,l)},proto.protocol.WithdrawBalanceContract.prototype.getOwnerAddress=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.WithdrawBalanceContract.prototype.getOwnerAddress_asB64=function(){return n.Message.bytesAsB64(this.getOwnerAddress())},proto.protocol.WithdrawBalanceContract.prototype.getOwnerAddress_asU8=function(){return n.Message.bytesAsU8(this.getOwnerAddress())},proto.protocol.WithdrawBalanceContract.prototype.setOwnerAddress=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.UpdateAssetContract=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.UpdateAssetContract,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.UpdateAssetContract.displayName="proto.protocol.UpdateAssetContract"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.UpdateAssetContract.prototype.toObject=function(e){return proto.protocol.UpdateAssetContract.toObject(e,this)},proto.protocol.UpdateAssetContract.toObject=function(e,t){var l={ownerAddress:t.getOwnerAddress_asB64(),description:t.getDescription_asB64(),url:t.getUrl_asB64(),newLimit:n.Message.getFieldWithDefault(t,4,0),newPublicLimit:n.Message.getFieldWithDefault(t,5,0)};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.UpdateAssetContract.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.UpdateAssetContract;return proto.protocol.UpdateAssetContract.deserializeBinaryFromReader(l,t)},proto.protocol.UpdateAssetContract.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setOwnerAddress(l);break;case 2:l=t.readBytes();e.setDescription(l);break;case 3:l=t.readBytes();e.setUrl(l);break;case 4:l=t.readInt64();e.setNewLimit(l);break;case 5:l=t.readInt64();e.setNewPublicLimit(l);break;default:t.skipField()}}return e},proto.protocol.UpdateAssetContract.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.UpdateAssetContract.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.UpdateAssetContract.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getOwnerAddress_asU8()).length>0&&t.writeBytes(1,l),(l=e.getDescription_asU8()).length>0&&t.writeBytes(2,l),(l=e.getUrl_asU8()).length>0&&t.writeBytes(3,l),0!==(l=e.getNewLimit())&&t.writeInt64(4,l),0!==(l=e.getNewPublicLimit())&&t.writeInt64(5,l)},proto.protocol.UpdateAssetContract.prototype.getOwnerAddress=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.UpdateAssetContract.prototype.getOwnerAddress_asB64=function(){return n.Message.bytesAsB64(this.getOwnerAddress())},proto.protocol.UpdateAssetContract.prototype.getOwnerAddress_asU8=function(){return n.Message.bytesAsU8(this.getOwnerAddress())},proto.protocol.UpdateAssetContract.prototype.setOwnerAddress=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.UpdateAssetContract.prototype.getDescription=function(){return n.Message.getFieldWithDefault(this,2,"")},proto.protocol.UpdateAssetContract.prototype.getDescription_asB64=function(){return n.Message.bytesAsB64(this.getDescription())},proto.protocol.UpdateAssetContract.prototype.getDescription_asU8=function(){return n.Message.bytesAsU8(this.getDescription())},proto.protocol.UpdateAssetContract.prototype.setDescription=function(e){n.Message.setProto3BytesField(this,2,e)},proto.protocol.UpdateAssetContract.prototype.getUrl=function(){return n.Message.getFieldWithDefault(this,3,"")},proto.protocol.UpdateAssetContract.prototype.getUrl_asB64=function(){return n.Message.bytesAsB64(this.getUrl())},proto.protocol.UpdateAssetContract.prototype.getUrl_asU8=function(){return n.Message.bytesAsU8(this.getUrl())},proto.protocol.UpdateAssetContract.prototype.setUrl=function(e){n.Message.setProto3BytesField(this,3,e)},proto.protocol.UpdateAssetContract.prototype.getNewLimit=function(){return n.Message.getFieldWithDefault(this,4,0)},proto.protocol.UpdateAssetContract.prototype.setNewLimit=function(e){n.Message.setProto3IntField(this,4,e)},proto.protocol.UpdateAssetContract.prototype.getNewPublicLimit=function(){return n.Message.getFieldWithDefault(this,5,0)},proto.protocol.UpdateAssetContract.prototype.setNewPublicLimit=function(e){n.Message.setProto3IntField(this,5,e)},r.object.extend(t,proto.protocol)},function(e,t,l){var n=l(14),r=n,o=Function("return this")();r.exportSymbol("proto.google.protobuf.Any",null,o),proto.google.protobuf.Any=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.google.protobuf.Any,n.Message),r.DEBUG&&!COMPILED&&(proto.google.protobuf.Any.displayName="proto.google.protobuf.Any"),n.Message.GENERATE_TO_OBJECT&&(proto.google.protobuf.Any.prototype.toObject=function(e){return proto.google.protobuf.Any.toObject(e,this)},proto.google.protobuf.Any.toObject=function(e,t){var l={typeUrl:n.Message.getFieldWithDefault(t,1,""),value:t.getValue_asB64()};return e&&(l.$jspbMessageInstance=t),l}),proto.google.protobuf.Any.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.google.protobuf.Any;return proto.google.protobuf.Any.deserializeBinaryFromReader(l,t)},proto.google.protobuf.Any.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readString();e.setTypeUrl(l);break;case 2:l=t.readBytes();e.setValue(l);break;default:t.skipField()}}return e},proto.google.protobuf.Any.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.google.protobuf.Any.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.google.protobuf.Any.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getTypeUrl()).length>0&&t.writeString(1,l),(l=e.getValue_asU8()).length>0&&t.writeBytes(2,l)},proto.google.protobuf.Any.prototype.getTypeUrl=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.google.protobuf.Any.prototype.setTypeUrl=function(e){n.Message.setProto3StringField(this,1,e)},proto.google.protobuf.Any.prototype.getValue=function(){return n.Message.getFieldWithDefault(this,2,"")},proto.google.protobuf.Any.prototype.getValue_asB64=function(){return n.Message.bytesAsB64(this.getValue())},proto.google.protobuf.Any.prototype.getValue_asU8=function(){return n.Message.bytesAsU8(this.getValue())},proto.google.protobuf.Any.prototype.setValue=function(e){n.Message.setProto3BytesField(this,2,e)},r.object.extend(t,proto.google.protobuf),proto.google.protobuf.Any.prototype.getTypeName=function(){return this.getTypeUrl().split("/").pop()},proto.google.protobuf.Any.prototype.pack=function(e,t,l){l||(l="type.googleapis.com/"),"/"!=l.substr(-1)?this.setTypeUrl(l+"/"+t):this.setTypeUrl(l+t),this.setValue(e)},proto.google.protobuf.Any.prototype.unpack=function(e,t){return this.getTypeName()==t?e(this.getValue_asU8()):null}},function(e,t,l){"use strict";var n=l(4),r=l(15),o=l(9),u=n.rotr64_hi,i=n.rotr64_lo,s=n.shr64_hi,a=n.shr64_lo,c=n.sum64,p=n.sum64_hi,d=n.sum64_lo,f=n.sum64_4_hi,g=n.sum64_4_lo,h=n.sum64_5_hi,b=n.sum64_5_lo,y=r.BlockHash,m=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function v(){if(!(this instanceof v))return new v;y.call(this),this.h=[1779033703,4089235720,3144134277,2227873595,1013904242,4271175723,2773480762,1595750129,1359893119,2917565137,2600822924,725511199,528734635,4215389547,1541459225,327033209],this.k=m,this.W=new Array(160)}function _(e,t,l,n,r){var o=e&l^~e&r;return o<0&&(o+=4294967296),o}function w(e,t,l,n,r,o){var u=t&n^~t&o;return u<0&&(u+=4294967296),u}function A(e,t,l,n,r){var o=e&l^e&r^l&r;return o<0&&(o+=4294967296),o}function B(e,t,l,n,r,o){var u=t&n^t&o^n&o;return u<0&&(u+=4294967296),u}function M(e,t){var l=u(e,t,28)^u(t,e,2)^u(t,e,7);return l<0&&(l+=4294967296),l}function T(e,t){var l=i(e,t,28)^i(t,e,2)^i(t,e,7);return l<0&&(l+=4294967296),l}function E(e,t){var l=u(e,t,14)^u(e,t,18)^u(t,e,9);return l<0&&(l+=4294967296),l}function S(e,t){var l=i(e,t,14)^i(e,t,18)^i(t,e,9);return l<0&&(l+=4294967296),l}function I(e,t){var l=u(e,t,1)^u(e,t,8)^s(e,t,7);return l<0&&(l+=4294967296),l}function j(e,t){var l=i(e,t,1)^i(e,t,8)^a(e,t,7);return l<0&&(l+=4294967296),l}function F(e,t){var l=u(e,t,19)^u(t,e,29)^s(e,t,6);return l<0&&(l+=4294967296),l}function C(e,t){var l=i(e,t,19)^i(t,e,29)^a(e,t,6);return l<0&&(l+=4294967296),l}n.inherits(v,y),e.exports=v,v.blockSize=1024,v.outSize=512,v.hmacStrength=192,v.padLength=128,v.prototype._prepareBlock=function(e,t){for(var l=this.W,n=0;n<32;n++)l[n]=e[t+n];for(;n<l.length;n+=2){var r=F(l[n-4],l[n-3]),o=C(l[n-4],l[n-3]),u=l[n-14],i=l[n-13],s=I(l[n-30],l[n-29]),a=j(l[n-30],l[n-29]),c=l[n-32],p=l[n-31];l[n]=f(r,o,u,i,s,a,c,p),l[n+1]=g(r,o,u,i,s,a,c,p)}},v.prototype._update=function(e,t){this._prepareBlock(e,t);var l=this.W,n=this.h[0],r=this.h[1],u=this.h[2],i=this.h[3],s=this.h[4],a=this.h[5],f=this.h[6],g=this.h[7],y=this.h[8],m=this.h[9],v=this.h[10],I=this.h[11],j=this.h[12],F=this.h[13],C=this.h[14],O=this.h[15];o(this.k.length===l.length);for(var k=0;k<l.length;k+=2){var R=C,x=O,z=E(y,m),N=S(y,m),W=_(y,m,v,I,j),U=w(y,m,v,I,j,F),D=this.k[k],L=this.k[k+1],P=l[k],V=l[k+1],H=h(R,x,z,N,W,U,D,L,P,V),q=b(R,x,z,N,W,U,D,L,P,V);R=M(n,r),x=T(n,r),z=A(n,r,u,i,s),N=B(n,r,u,i,s,a);var G=p(R,x,z,N),$=d(R,x,z,N);C=j,O=F,j=v,F=I,v=y,I=m,y=p(f,g,H,q),m=d(g,g,H,q),f=s,g=a,s=u,a=i,u=n,i=r,n=p(H,q,G,$),r=d(H,q,G,$)}c(this.h,0,n,r),c(this.h,2,u,i),c(this.h,4,s,a),c(this.h,6,f,g),c(this.h,8,y,m),c(this.h,10,v,I),c(this.h,12,j,F),c(this.h,14,C,O)},v.prototype._digest=function(e){return"hex"===e?n.toHex32(this.h,"big"):n.split32(this.h,"big")}},function(e,t,l){"use strict";var n=l(4),r=l(15),o=l(46),u=l(9),i=n.sum32,s=n.sum32_4,a=n.sum32_5,c=o.ch32,p=o.maj32,d=o.s0_256,f=o.s1_256,g=o.g0_256,h=o.g1_256,b=r.BlockHash,y=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298];function m(){if(!(this instanceof m))return new m;b.call(this),this.h=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],this.k=y,this.W=new Array(64)}n.inherits(m,b),e.exports=m,m.blockSize=512,m.outSize=256,m.hmacStrength=192,m.padLength=64,m.prototype._update=function(e,t){for(var l=this.W,n=0;n<16;n++)l[n]=e[t+n];for(;n<l.length;n++)l[n]=s(h(l[n-2]),l[n-7],g(l[n-15]),l[n-16]);var r=this.h[0],o=this.h[1],b=this.h[2],y=this.h[3],m=this.h[4],v=this.h[5],_=this.h[6],w=this.h[7];for(u(this.k.length===l.length),n=0;n<l.length;n++){var A=a(w,f(m),c(m,v,_),this.k[n],l[n]),B=i(d(r),p(r,o,b));w=_,_=v,v=m,m=i(y,A),y=b,b=o,o=r,r=i(A,B)}this.h[0]=i(this.h[0],r),this.h[1]=i(this.h[1],o),this.h[2]=i(this.h[2],b),this.h[3]=i(this.h[3],y),this.h[4]=i(this.h[4],m),this.h[5]=i(this.h[5],v),this.h[6]=i(this.h[6],_),this.h[7]=i(this.h[7],w)},m.prototype._digest=function(e){return"hex"===e?n.toHex32(this.h,"big"):n.split32(this.h,"big")}},function(e,t,l){"use strict";var n=l(4).rotr32;function r(e,t,l){return e&t^~e&l}function o(e,t,l){return e&t^e&l^t&l}function u(e,t,l){return e^t^l}t.ft_1=function(e,t,l,n){return 0===e?r(t,l,n):1===e||3===e?u(t,l,n):2===e?o(t,l,n):void 0},t.ch32=r,t.maj32=o,t.p32=u,t.s0_256=function(e){return n(e,2)^n(e,13)^n(e,22)},t.s1_256=function(e){return n(e,6)^n(e,11)^n(e,25)},t.g0_256=function(e){return n(e,7)^n(e,18)^e>>>3},t.g1_256=function(e){return n(e,17)^n(e,19)^e>>>10}},function(e,t,l){"use strict";var n=t;function r(e){return 1===e.length?"0"+e:e}function o(e){for(var t="",l=0;l<e.length;l++)t+=r(e[l].toString(16));return t}n.toArray=function(e,t){if(Array.isArray(e))return e.slice();if(!e)return[];var l=[];if("string"!==typeof e){for(var n=0;n<e.length;n++)l[n]=0|e[n];return l}if("hex"===t)for((e=e.replace(/[^a-z0-9]+/gi,"")).length%2!==0&&(e="0"+e),n=0;n<e.length;n+=2)l.push(parseInt(e[n]+e[n+1],16));else for(n=0;n<e.length;n++){var r=e.charCodeAt(n),o=r>>8,u=255&r;o?l.push(o,u):l.push(u)}return l},n.zero2=r,n.toHex=o,n.encode=function(e,t){return"hex"===t?o(e):e}},function(e,t){var l="testnet"===Object({NODE_ENV:"production",PUBLIC_URL:"/Seed-Recovery"}).NET,n=l?35:34,r=l?"a0":"41",o=l?160:65;e.exports={ADDRESS_SIZE:n,ADDRESS_PREFIX:r,ADDRESS_PREFIX_BYTE:o}},function(e,t,l){var n=l(116).Base64;function r(e){var t="";return t+="0123456789ABCDEF".charAt(e>>4),t+="0123456789ABCDEF".charAt(15&e)}e.exports={byteArray2hexStr:function(e){for(var t="",l=0;l<e.length;l++)t+=r(e[l]);return t},hextoString:function(e){for(var t=e.split(""),l="",n=0;n<t.length/2;n++){var r="0x"+t[2*n]+t[2*n+1];l+=String.fromCharCode(r)}return l},base64DecodeFromString:function(e){return(new n).decodeToByteArray(e)},bytesToString:function(e){if("string"===typeof e)return e;for(var t="",l=e,n=0;n<l.length;n++){var r=l[n].toString(2),o=r.match(/^1+?(?=0)/);if(o&&8===r.length){for(var u=o[0].length,i=l[n].toString(2).slice(7-u),s=1;s<u;s++)i+=l[s+n].toString(2).slice(2);t+=String.fromCharCode(parseInt(i,2)),n+=u-1}else t+=String.fromCharCode(l[n])}return t},byte2hexStr:r,longToByteArray:function(e){for(var t=[0,0,0,0,0,0,0,0],l=0;l<t.length;l++){var n=255&e;t[l]=n,e=(e-n)/256}return t}}},function(e,t){for(var l="123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",n={},r=0;r<l.length;r++)n[l.charAt(r)]=r;var o=58;e.exports={encode58:function(e){if(0===e.length)return"";var t,n,r=[0];for(t=0;t<e.length;t++){for(n=0;n<r.length;n++)r[n]<<=8;r[0]+=e[t];var u=0;for(n=0;n<r.length;++n)r[n]+=u,u=r[n]/o|0,r[n]%=o;for(;u;)r.push(u%o),u=u/o|0}for(t=0;0===e[t]&&t<e.length-1;t++)r.push(0);return r.reverse().map(function(e){return l[e]}).join("")},decode58:function(e){if(0===e.length)return[];var t,l,r=[0];for(t=0;t<e.length;t++){var u=e[t];if(!(u in n))throw new Error("Non-base58 character");for(l=0;l<r.length;l++)r[l]*=o;r[0]+=n[u];var i=0;for(l=0;l<r.length;++l)r[l]+=i,i=r[l]>>8,r[l]&=255;for(;i;)r.push(255&i),i>>=8}for(t=0;"1"===e[t]&&t<e.length-1;t++)r.push(0);return r.reverse()}}},function(e,t){var l={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==l.call(e)}},function(e,t,l){e.exports={transactions:l(126),witnesses:l(87),accounts:l(86),blocks:l(54),api:l(53),utils:l(12)}},function(e,t,l){var n=l(12),r=l(41).Return;e.exports={returnFromBase64:function(e){return r.deserializeBinary(n.base64DecodeFromString(e))}}},function(e,t,l){var n=l(12),r=l(11).Block,o=l(18).SHA256;e.exports={blockFromBase64:function(e){return r.deserializeBinary(n.base64DecodeFromString(e))},getBlockHash:function(e){var t=e.getBlockHeader().getRawData().serializeBinary();return o(t)}}},function(e,t){!function(t){"use strict";var l={bytesToString:function(e){return e.map(function(e){return String.fromCharCode(e)}).join("")},stringToBytes:function(e){return e.split("").map(function(e){return e.charCodeAt(0)})}};l.UTF8={bytesToString:function(e){return decodeURIComponent(escape(l.bytesToString(e)))},stringToBytes:function(e){return l.stringToBytes(unescape(encodeURIComponent(e)))}},"undefined"!==typeof e&&e.exports?e.exports=l:t.convertString=l}(this)},function(e,t){!function(t){"use strict";var l={bytesToHex:function(e){return function(e){return e.map(function(e){return t=e.toString(16),l=2,t.length>l?t:Array(l-t.length+1).join("0")+t;var t,l}).join("")}(e)},hexToBytes:function(e){if(e.length%2===1)throw new Error("hexToBytes can't have a string with an odd number of characters.");return 0===e.indexOf("0x")&&(e=e.slice(2)),e.match(/../g).map(function(e){return parseInt(e,16)})}};"undefined"!==typeof e&&e.exports?e.exports=l:t.convertHex=l}(this)},function(e,t,l){!function(t){"use strict";var n={};"undefined"!==typeof e&&e.exports?(n.bytesToHex=l(56).bytesToHex,n.convertString=l(55),e.exports=a):(n.bytesToHex=t.convertHex.bytesToHex,n.convertString=t.convertString,t.sha256=a);var r=[];!function(){function e(e){for(var t=Math.sqrt(e),l=2;l<=t;l++)if(!(e%l))return!1;return!0}function t(e){return 4294967296*(e-(0|e))|0}for(var l=2,n=0;n<64;)e(l)&&(r[n]=t(Math.pow(l,1/3)),n++),l++}();var o=function(e){for(var t=[],l=0,n=0;l<e.length;l++,n+=8)t[n>>>5]|=e[l]<<24-n%32;return t},u=function(e){for(var t=[],l=0;l<32*e.length;l+=8)t.push(e[l>>>5]>>>24-l%32&255);return t},i=[],s=function(e,t,l){for(var n=e[0],o=e[1],u=e[2],s=e[3],a=e[4],c=e[5],p=e[6],d=e[7],f=0;f<64;f++){if(f<16)i[f]=0|t[l+f];else{var g=i[f-15],h=(g<<25|g>>>7)^(g<<14|g>>>18)^g>>>3,b=i[f-2],y=(b<<15|b>>>17)^(b<<13|b>>>19)^b>>>10;i[f]=h+i[f-7]+y+i[f-16]}var m=n&o^n&u^o&u,v=(n<<30|n>>>2)^(n<<19|n>>>13)^(n<<10|n>>>22),_=d+((a<<26|a>>>6)^(a<<21|a>>>11)^(a<<7|a>>>25))+(a&c^~a&p)+r[f]+i[f];d=p,p=c,c=a,a=s+_|0,s=u,u=o,o=n,n=_+(v+m)|0}e[0]=e[0]+n|0,e[1]=e[1]+o|0,e[2]=e[2]+u|0,e[3]=e[3]+s|0,e[4]=e[4]+a|0,e[5]=e[5]+c|0,e[6]=e[6]+p|0,e[7]=e[7]+d|0};function a(e,t){e.constructor===String&&(e=n.convertString.UTF8.stringToBytes(e));var l=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],r=o(e),i=8*e.length;r[i>>5]|=128<<24-i%32,r[15+(i+64>>9<<4)]=i;for(var a=0;a<r.length;a+=16)s(l,r,a);var c=u(l);return t&&t.asBytes?c:t&&t.asString?n.convertString.bytesToString(c):n.bytesToHex(c)}a.x2=function(e,t){return a(a(e,{asBytes:!0}),t)}}(this)},function(e){e.exports=["a\u0301baco","abdomen","abeja","abierto","abogado","abono","aborto","abrazo","abrir","abuelo","abuso","acabar","academia","acceso","accio\u0301n","aceite","acelga","acento","aceptar","a\u0301cido","aclarar","acne\u0301","acoger","acoso","activo","acto","actriz","actuar","acudir","acuerdo","acusar","adicto","admitir","adoptar","adorno","aduana","adulto","ae\u0301reo","afectar","aficio\u0301n","afinar","afirmar","a\u0301gil","agitar","agoni\u0301a","agosto","agotar","agregar","agrio","agua","agudo","a\u0301guila","aguja","ahogo","ahorro","aire","aislar","ajedrez","ajeno","ajuste","alacra\u0301n","alambre","alarma","alba","a\u0301lbum","alcalde","aldea","alegre","alejar","alerta","aleta","alfiler","alga","algodo\u0301n","aliado","aliento","alivio","alma","almeja","almi\u0301bar","altar","alteza","altivo","alto","altura","alumno","alzar","amable","amante","amapola","amargo","amasar","a\u0301mbar","a\u0301mbito","ameno","amigo","amistad","amor","amparo","amplio","ancho","anciano","ancla","andar","ande\u0301n","anemia","a\u0301ngulo","anillo","a\u0301nimo","ani\u0301s","anotar","antena","antiguo","antojo","anual","anular","anuncio","an\u0303adir","an\u0303ejo","an\u0303o","apagar","aparato","apetito","apio","aplicar","apodo","aporte","apoyo","aprender","aprobar","apuesta","apuro","arado","aran\u0303a","arar","a\u0301rbitro","a\u0301rbol","arbusto","archivo","arco","arder","ardilla","arduo","a\u0301rea","a\u0301rido","aries","armoni\u0301a","arne\u0301s","aroma","arpa","arpo\u0301n","arreglo","arroz","arruga","arte","artista","asa","asado","asalto","ascenso","asegurar","aseo","asesor","asiento","asilo","asistir","asno","asombro","a\u0301spero","astilla","astro","astuto","asumir","asunto","atajo","ataque","atar","atento","ateo","a\u0301tico","atleta","a\u0301tomo","atraer","atroz","atu\u0301n","audaz","audio","auge","aula","aumento","ausente","autor","aval","avance","avaro","ave","avellana","avena","avestruz","avio\u0301n","aviso","ayer","ayuda","ayuno","azafra\u0301n","azar","azote","azu\u0301car","azufre","azul","baba","babor","bache","bahi\u0301a","baile","bajar","balanza","balco\u0301n","balde","bambu\u0301","banco","banda","ban\u0303o","barba","barco","barniz","barro","ba\u0301scula","basto\u0301n","basura","batalla","bateri\u0301a","batir","batuta","bau\u0301l","bazar","bebe\u0301","bebida","bello","besar","beso","bestia","bicho","bien","bingo","blanco","bloque","blusa","boa","bobina","bobo","boca","bocina","boda","bodega","boina","bola","bolero","bolsa","bomba","bondad","bonito","bono","bonsa\u0301i","borde","borrar","bosque","bote","boti\u0301n","bo\u0301veda","bozal","bravo","brazo","brecha","breve","brillo","brinco","brisa","broca","broma","bronce","brote","bruja","brusco","bruto","buceo","bucle","bueno","buey","bufanda","bufo\u0301n","bu\u0301ho","buitre","bulto","burbuja","burla","burro","buscar","butaca","buzo\u0301n","caballo","cabeza","cabina","cabra","cacao","cada\u0301ver","cadena","caer","cafe\u0301","cai\u0301da","caima\u0301n","caja","cajo\u0301n","cal","calamar","calcio","caldo","calidad","calle","calma","calor","calvo","cama","cambio","camello","camino","campo","ca\u0301ncer","candil","canela","canguro","canica","canto","can\u0303a","can\u0303o\u0301n","caoba","caos","capaz","capita\u0301n","capote","captar","capucha","cara","carbo\u0301n","ca\u0301rcel","careta","carga","carin\u0303o","carne","carpeta","carro","carta","casa","casco","casero","caspa","castor","catorce","catre","caudal","causa","cazo","cebolla","ceder","cedro","celda","ce\u0301lebre","celoso","ce\u0301lula","cemento","ceniza","centro","cerca","cerdo","cereza","cero","cerrar","certeza","ce\u0301sped","cetro","chacal","chaleco","champu\u0301","chancla","chapa","charla","chico","chiste","chivo","choque","choza","chuleta","chupar","ciclo\u0301n","ciego","cielo","cien","cierto","cifra","cigarro","cima","cinco","cine","cinta","cipre\u0301s","circo","ciruela","cisne","cita","ciudad","clamor","clan","claro","clase","clave","cliente","clima","cli\u0301nica","cobre","coccio\u0301n","cochino","cocina","coco","co\u0301digo","codo","cofre","coger","cohete","coji\u0301n","cojo","cola","colcha","colegio","colgar","colina","collar","colmo","columna","combate","comer","comida","co\u0301modo","compra","conde","conejo","conga","conocer","consejo","contar","copa","copia","corazo\u0301n","corbata","corcho","cordo\u0301n","corona","correr","coser","cosmos","costa","cra\u0301neo","cra\u0301ter","crear","crecer","crei\u0301do","crema","cri\u0301a","crimen","cripta","crisis","cromo","cro\u0301nica","croqueta","crudo","cruz","cuadro","cuarto","cuatro","cubo","cubrir","cuchara","cuello","cuento","cuerda","cuesta","cueva","cuidar","culebra","culpa","culto","cumbre","cumplir","cuna","cuneta","cuota","cupo\u0301n","cu\u0301pula","curar","curioso","curso","curva","cutis","dama","danza","dar","dardo","da\u0301til","deber","de\u0301bil","de\u0301cada","decir","dedo","defensa","definir","dejar","delfi\u0301n","delgado","delito","demora","denso","dental","deporte","derecho","derrota","desayuno","deseo","desfile","desnudo","destino","desvi\u0301o","detalle","detener","deuda","di\u0301a","diablo","diadema","diamante","diana","diario","dibujo","dictar","diente","dieta","diez","difi\u0301cil","digno","dilema","diluir","dinero","directo","dirigir","disco","disen\u0303o","disfraz","diva","divino","doble","doce","dolor","domingo","don","donar","dorado","dormir","dorso","dos","dosis","drago\u0301n","droga","ducha","duda","duelo","duen\u0303o","dulce","du\u0301o","duque","durar","dureza","duro","e\u0301bano","ebrio","echar","eco","ecuador","edad","edicio\u0301n","edificio","editor","educar","efecto","eficaz","eje","ejemplo","elefante","elegir","elemento","elevar","elipse","e\u0301lite","elixir","elogio","eludir","embudo","emitir","emocio\u0301n","empate","empen\u0303o","empleo","empresa","enano","encargo","enchufe","enci\u0301a","enemigo","enero","enfado","enfermo","engan\u0303o","enigma","enlace","enorme","enredo","ensayo","ensen\u0303ar","entero","entrar","envase","envi\u0301o","e\u0301poca","equipo","erizo","escala","escena","escolar","escribir","escudo","esencia","esfera","esfuerzo","espada","espejo","espi\u0301a","esposa","espuma","esqui\u0301","estar","este","estilo","estufa","etapa","eterno","e\u0301tica","etnia","evadir","evaluar","evento","evitar","exacto","examen","exceso","excusa","exento","exigir","exilio","existir","e\u0301xito","experto","explicar","exponer","extremo","fa\u0301brica","fa\u0301bula","fachada","fa\u0301cil","factor","faena","faja","falda","fallo","falso","faltar","fama","familia","famoso","farao\u0301n","farmacia","farol","farsa","fase","fatiga","fauna","favor","fax","febrero","fecha","feliz","feo","feria","feroz","fe\u0301rtil","fervor","festi\u0301n","fiable","fianza","fiar","fibra","ficcio\u0301n","ficha","fideo","fiebre","fiel","fiera","fiesta","figura","fijar","fijo","fila","filete","filial","filtro","fin","finca","fingir","finito","firma","flaco","flauta","flecha","flor","flota","fluir","flujo","flu\u0301or","fobia","foca","fogata","fogo\u0301n","folio","folleto","fondo","forma","forro","fortuna","forzar","fosa","foto","fracaso","fra\u0301gil","franja","frase","fraude","frei\u0301r","freno","fresa","fri\u0301o","frito","fruta","fuego","fuente","fuerza","fuga","fumar","funcio\u0301n","funda","furgo\u0301n","furia","fusil","fu\u0301tbol","futuro","gacela","gafas","gaita","gajo","gala","galeri\u0301a","gallo","gamba","ganar","gancho","ganga","ganso","garaje","garza","gasolina","gastar","gato","gavila\u0301n","gemelo","gemir","gen","ge\u0301nero","genio","gente","geranio","gerente","germen","gesto","gigante","gimnasio","girar","giro","glaciar","globo","gloria","gol","golfo","goloso","golpe","goma","gordo","gorila","gorra","gota","goteo","gozar","grada","gra\u0301fico","grano","grasa","gratis","grave","grieta","grillo","gripe","gris","grito","grosor","gru\u0301a","grueso","grumo","grupo","guante","guapo","guardia","guerra","gui\u0301a","guin\u0303o","guion","guiso","guitarra","gusano","gustar","haber","ha\u0301bil","hablar","hacer","hacha","hada","hallar","hamaca","harina","haz","hazan\u0303a","hebilla","hebra","hecho","helado","helio","hembra","herir","hermano","he\u0301roe","hervir","hielo","hierro","hi\u0301gado","higiene","hijo","himno","historia","hocico","hogar","hoguera","hoja","hombre","hongo","honor","honra","hora","hormiga","horno","hostil","hoyo","hueco","huelga","huerta","hueso","huevo","huida","huir","humano","hu\u0301medo","humilde","humo","hundir","huraca\u0301n","hurto","icono","ideal","idioma","i\u0301dolo","iglesia","iglu\u0301","igual","ilegal","ilusio\u0301n","imagen","ima\u0301n","imitar","impar","imperio","imponer","impulso","incapaz","i\u0301ndice","inerte","infiel","informe","ingenio","inicio","inmenso","inmune","innato","insecto","instante","intere\u0301s","i\u0301ntimo","intuir","inu\u0301til","invierno","ira","iris","ironi\u0301a","isla","islote","jabali\u0301","jabo\u0301n","jamo\u0301n","jarabe","jardi\u0301n","jarra","jaula","jazmi\u0301n","jefe","jeringa","jinete","jornada","joroba","joven","joya","juerga","jueves","juez","jugador","jugo","juguete","juicio","junco","jungla","junio","juntar","ju\u0301piter","jurar","justo","juvenil","juzgar","kilo","koala","labio","lacio","lacra","lado","ladro\u0301n","lagarto","la\u0301grima","laguna","laico","lamer","la\u0301mina","la\u0301mpara","lana","lancha","langosta","lanza","la\u0301piz","largo","larva","la\u0301stima","lata","la\u0301tex","latir","laurel","lavar","lazo","leal","leccio\u0301n","leche","lector","leer","legio\u0301n","legumbre","lejano","lengua","lento","len\u0303a","leo\u0301n","leopardo","lesio\u0301n","letal","letra","leve","leyenda","libertad","libro","licor","li\u0301der","lidiar","lienzo","liga","ligero","lima","li\u0301mite","limo\u0301n","limpio","lince","lindo","li\u0301nea","lingote","lino","linterna","li\u0301quido","liso","lista","litera","litio","litro","llaga","llama","llanto","llave","llegar","llenar","llevar","llorar","llover","lluvia","lobo","locio\u0301n","loco","locura","lo\u0301gica","logro","lombriz","lomo","lonja","lote","lucha","lucir","lugar","lujo","luna","lunes","lupa","lustro","luto","luz","maceta","macho","madera","madre","maduro","maestro","mafia","magia","mago","mai\u0301z","maldad","maleta","malla","malo","mama\u0301","mambo","mamut","manco","mando","manejar","manga","maniqui\u0301","manjar","mano","manso","manta","man\u0303ana","mapa","ma\u0301quina","mar","marco","marea","marfil","margen","marido","ma\u0301rmol","marro\u0301n","martes","marzo","masa","ma\u0301scara","masivo","matar","materia","matiz","matriz","ma\u0301ximo","mayor","mazorca","mecha","medalla","medio","me\u0301dula","mejilla","mejor","melena","melo\u0301n","memoria","menor","mensaje","mente","menu\u0301","mercado","merengue","me\u0301rito","mes","meso\u0301n","meta","meter","me\u0301todo","metro","mezcla","miedo","miel","miembro","miga","mil","milagro","militar","millo\u0301n","mimo","mina","minero","mi\u0301nimo","minuto","miope","mirar","misa","miseria","misil","mismo","mitad","mito","mochila","mocio\u0301n","moda","modelo","moho","mojar","molde","moler","molino","momento","momia","monarca","moneda","monja","monto","mon\u0303o","morada","morder","moreno","morir","morro","morsa","mortal","mosca","mostrar","motivo","mover","mo\u0301vil","mozo","mucho","mudar","mueble","muela","muerte","muestra","mugre","mujer","mula","muleta","multa","mundo","mun\u0303eca","mural","muro","mu\u0301sculo","museo","musgo","mu\u0301sica","muslo","na\u0301car","nacio\u0301n","nadar","naipe","naranja","nariz","narrar","nasal","natal","nativo","natural","na\u0301usea","naval","nave","navidad","necio","ne\u0301ctar","negar","negocio","negro","neo\u0301n","nervio","neto","neutro","nevar","nevera","nicho","nido","niebla","nieto","nin\u0303ez","nin\u0303o","ni\u0301tido","nivel","nobleza","noche","no\u0301mina","noria","norma","norte","nota","noticia","novato","novela","novio","nube","nuca","nu\u0301cleo","nudillo","nudo","nuera","nueve","nuez","nulo","nu\u0301mero","nutria","oasis","obeso","obispo","objeto","obra","obrero","observar","obtener","obvio","oca","ocaso","oce\u0301ano","ochenta","ocho","ocio","ocre","octavo","octubre","oculto","ocupar","ocurrir","odiar","odio","odisea","oeste","ofensa","oferta","oficio","ofrecer","ogro","oi\u0301do","oi\u0301r","ojo","ola","oleada","olfato","olivo","olla","olmo","olor","olvido","ombligo","onda","onza","opaco","opcio\u0301n","o\u0301pera","opinar","oponer","optar","o\u0301ptica","opuesto","oracio\u0301n","orador","oral","o\u0301rbita","orca","orden","oreja","o\u0301rgano","orgi\u0301a","orgullo","oriente","origen","orilla","oro","orquesta","oruga","osadi\u0301a","oscuro","osezno","oso","ostra","oton\u0303o","otro","oveja","o\u0301vulo","o\u0301xido","oxi\u0301geno","oyente","ozono","pacto","padre","paella","pa\u0301gina","pago","pai\u0301s","pa\u0301jaro","palabra","palco","paleta","pa\u0301lido","palma","paloma","palpar","pan","panal","pa\u0301nico","pantera","pan\u0303uelo","papa\u0301","papel","papilla","paquete","parar","parcela","pared","parir","paro","pa\u0301rpado","parque","pa\u0301rrafo","parte","pasar","paseo","pasio\u0301n","paso","pasta","pata","patio","patria","pausa","pauta","pavo","payaso","peato\u0301n","pecado","pecera","pecho","pedal","pedir","pegar","peine","pelar","peldan\u0303o","pelea","peligro","pellejo","pelo","peluca","pena","pensar","pen\u0303o\u0301n","peo\u0301n","peor","pepino","pequen\u0303o","pera","percha","perder","pereza","perfil","perico","perla","permiso","perro","persona","pesa","pesca","pe\u0301simo","pestan\u0303a","pe\u0301talo","petro\u0301leo","pez","pezun\u0303a","picar","picho\u0301n","pie","piedra","pierna","pieza","pijama","pilar","piloto","pimienta","pino","pintor","pinza","pin\u0303a","piojo","pipa","pirata","pisar","piscina","piso","pista","pito\u0301n","pizca","placa","plan","plata","playa","plaza","pleito","pleno","plomo","pluma","plural","pobre","poco","poder","podio","poema","poesi\u0301a","poeta","polen","polici\u0301a","pollo","polvo","pomada","pomelo","pomo","pompa","poner","porcio\u0301n","portal","posada","poseer","posible","poste","potencia","potro","pozo","prado","precoz","pregunta","premio","prensa","preso","previo","primo","pri\u0301ncipe","prisio\u0301n","privar","proa","probar","proceso","producto","proeza","profesor","programa","prole","promesa","pronto","propio","pro\u0301ximo","prueba","pu\u0301blico","puchero","pudor","pueblo","puerta","puesto","pulga","pulir","pulmo\u0301n","pulpo","pulso","puma","punto","pun\u0303al","pun\u0303o","pupa","pupila","pure\u0301","quedar","queja","quemar","querer","queso","quieto","qui\u0301mica","quince","quitar","ra\u0301bano","rabia","rabo","racio\u0301n","radical","rai\u0301z","rama","rampa","rancho","rango","rapaz","ra\u0301pido","rapto","rasgo","raspa","rato","rayo","raza","razo\u0301n","reaccio\u0301n","realidad","reban\u0303o","rebote","recaer","receta","rechazo","recoger","recreo","recto","recurso","red","redondo","reducir","reflejo","reforma","refra\u0301n","refugio","regalo","regir","regla","regreso","rehe\u0301n","reino","rei\u0301r","reja","relato","relevo","relieve","relleno","reloj","remar","remedio","remo","rencor","rendir","renta","reparto","repetir","reposo","reptil","res","rescate","resina","respeto","resto","resumen","retiro","retorno","retrato","reunir","reve\u0301s","revista","rey","rezar","rico","riego","rienda","riesgo","rifa","ri\u0301gido","rigor","rinco\u0301n","rin\u0303o\u0301n","ri\u0301o","riqueza","risa","ritmo","rito","rizo","roble","roce","rociar","rodar","rodeo","rodilla","roer","rojizo","rojo","romero","romper","ron","ronco","ronda","ropa","ropero","rosa","rosca","rostro","rotar","rubi\u0301","rubor","rudo","rueda","rugir","ruido","ruina","ruleta","rulo","rumbo","rumor","ruptura","ruta","rutina","sa\u0301bado","saber","sabio","sable","sacar","sagaz","sagrado","sala","saldo","salero","salir","salmo\u0301n","salo\u0301n","salsa","salto","salud","salvar","samba","sancio\u0301n","sandi\u0301a","sanear","sangre","sanidad","sano","santo","sapo","saque","sardina","sarte\u0301n","sastre","sata\u0301n","sauna","saxofo\u0301n","seccio\u0301n","seco","secreto","secta","sed","seguir","seis","sello","selva","semana","semilla","senda","sensor","sen\u0303al","sen\u0303or","separar","sepia","sequi\u0301a","ser","serie","sermo\u0301n","servir","sesenta","sesio\u0301n","seta","setenta","severo","sexo","sexto","sidra","siesta","siete","siglo","signo","si\u0301laba","silbar","silencio","silla","si\u0301mbolo","simio","sirena","sistema","sitio","situar","sobre","socio","sodio","sol","solapa","soldado","soledad","so\u0301lido","soltar","solucio\u0301n","sombra","sondeo","sonido","sonoro","sonrisa","sopa","soplar","soporte","sordo","sorpresa","sorteo","soste\u0301n","so\u0301tano","suave","subir","suceso","sudor","suegra","suelo","suen\u0303o","suerte","sufrir","sujeto","sulta\u0301n","sumar","superar","suplir","suponer","supremo","sur","surco","suren\u0303o","surgir","susto","sutil","tabaco","tabique","tabla","tabu\u0301","taco","tacto","tajo","talar","talco","talento","talla","talo\u0301n","taman\u0303o","tambor","tango","tanque","tapa","tapete","tapia","tapo\u0301n","taquilla","tarde","tarea","tarifa","tarjeta","tarot","tarro","tarta","tatuaje","tauro","taza","tazo\u0301n","teatro","techo","tecla","te\u0301cnica","tejado","tejer","tejido","tela","tele\u0301fono","tema","temor","templo","tenaz","tender","tener","tenis","tenso","teori\u0301a","terapia","terco","te\u0301rmino","ternura","terror","tesis","tesoro","testigo","tetera","texto","tez","tibio","tiburo\u0301n","tiempo","tienda","tierra","tieso","tigre","tijera","tilde","timbre","ti\u0301mido","timo","tinta","ti\u0301o","ti\u0301pico","tipo","tira","tiro\u0301n","tita\u0301n","ti\u0301tere","ti\u0301tulo","tiza","toalla","tobillo","tocar","tocino","todo","toga","toldo","tomar","tono","tonto","topar","tope","toque","to\u0301rax","torero","tormenta","torneo","toro","torpedo","torre","torso","tortuga","tos","tosco","toser","to\u0301xico","trabajo","tractor","traer","tra\u0301fico","trago","traje","tramo","trance","trato","trauma","trazar","tre\u0301bol","tregua","treinta","tren","trepar","tres","tribu","trigo","tripa","triste","triunfo","trofeo","trompa","tronco","tropa","trote","trozo","truco","trueno","trufa","tuberi\u0301a","tubo","tuerto","tumba","tumor","tu\u0301nel","tu\u0301nica","turbina","turismo","turno","tutor","ubicar","u\u0301lcera","umbral","unidad","unir","universo","uno","untar","un\u0303a","urbano","urbe","urgente","urna","usar","usuario","u\u0301til","utopi\u0301a","uva","vaca","vaci\u0301o","vacuna","vagar","vago","vaina","vajilla","vale","va\u0301lido","valle","valor","va\u0301lvula","vampiro","vara","variar","varo\u0301n","vaso","vecino","vector","vehi\u0301culo","veinte","vejez","vela","velero","veloz","vena","vencer","venda","veneno","vengar","venir","venta","venus","ver","verano","verbo","verde","vereda","verja","verso","verter","vi\u0301a","viaje","vibrar","vicio","vi\u0301ctima","vida","vi\u0301deo","vidrio","viejo","viernes","vigor","vil","villa","vinagre","vino","vin\u0303edo","violi\u0301n","viral","virgo","virtud","visor","vi\u0301spera","vista","vitamina","viudo","vivaz","vivero","vivir","vivo","volca\u0301n","volumen","volver","voraz","votar","voto","voz","vuelo","vulgar","yacer","yate","yegua","yema","yerno","yeso","yodo","yoga","yogur","zafiro","zanja","zapato","zarza","zona","zorro","zumo","zurdo"]},function(e){e.exports=["\u3042\u3044\u3053\u304f\u3057\u3093","\u3042\u3044\u3055\u3064","\u3042\u3044\u305f\u3099","\u3042\u304a\u305d\u3099\u3089","\u3042\u304b\u3061\u3083\u3093","\u3042\u304d\u308b","\u3042\u3051\u304b\u3099\u305f","\u3042\u3051\u308b","\u3042\u3053\u304b\u3099\u308c\u308b","\u3042\u3055\u3044","\u3042\u3055\u3072","\u3042\u3057\u3042\u3068","\u3042\u3057\u3099\u308f\u3046","\u3042\u3059\u3099\u304b\u308b","\u3042\u3059\u3099\u304d","\u3042\u305d\u3075\u3099","\u3042\u305f\u3048\u308b","\u3042\u305f\u305f\u3081\u308b","\u3042\u305f\u308a\u307e\u3048","\u3042\u305f\u308b","\u3042\u3064\u3044","\u3042\u3064\u304b\u3046","\u3042\u3063\u3057\u3085\u304f","\u3042\u3064\u307e\u308a","\u3042\u3064\u3081\u308b","\u3042\u3066\u306a","\u3042\u3066\u306f\u307e\u308b","\u3042\u3072\u308b","\u3042\u3075\u3099\u3089","\u3042\u3075\u3099\u308b","\u3042\u3075\u308c\u308b","\u3042\u307e\u3044","\u3042\u307e\u3068\u3099","\u3042\u307e\u3084\u304b\u3059","\u3042\u307e\u308a","\u3042\u307f\u3082\u306e","\u3042\u3081\u308a\u304b","\u3042\u3084\u307e\u308b","\u3042\u3086\u3080","\u3042\u3089\u3044\u304f\u3099\u307e","\u3042\u3089\u3057","\u3042\u3089\u3059\u3057\u3099","\u3042\u3089\u305f\u3081\u308b","\u3042\u3089\u3086\u308b","\u3042\u3089\u308f\u3059","\u3042\u308a\u304b\u3099\u3068\u3046","\u3042\u308f\u305b\u308b","\u3042\u308f\u3066\u308b","\u3042\u3093\u3044","\u3042\u3093\u304b\u3099\u3044","\u3042\u3093\u3053","\u3042\u3093\u305b\u3099\u3093","\u3042\u3093\u3066\u3044","\u3042\u3093\u306a\u3044","\u3042\u3093\u307e\u308a","\u3044\u3044\u305f\u3099\u3059","\u3044\u304a\u3093","\u3044\u304b\u3099\u3044","\u3044\u304b\u3099\u304f","\u3044\u304d\u304a\u3044","\u3044\u304d\u306a\u308a","\u3044\u304d\u3082\u306e","\u3044\u304d\u308b","\u3044\u304f\u3057\u3099","\u3044\u304f\u3075\u3099\u3093","\u3044\u3051\u306f\u3099\u306a","\u3044\u3051\u3093","\u3044\u3053\u3046","\u3044\u3053\u304f","\u3044\u3053\u3064","\u3044\u3055\u307e\u3057\u3044","\u3044\u3055\u3093","\u3044\u3057\u304d","\u3044\u3057\u3099\u3085\u3046","\u3044\u3057\u3099\u3087\u3046","\u3044\u3057\u3099\u308f\u308b","\u3044\u3059\u3099\u307f","\u3044\u3059\u3099\u308c","\u3044\u305b\u3044","\u3044\u305b\u3048\u3072\u3099","\u3044\u305b\u304b\u3044","\u3044\u305b\u304d","\u3044\u305b\u3099\u3093","\u3044\u305d\u3046\u308d\u3046","\u3044\u305d\u304b\u3099\u3057\u3044","\u3044\u305f\u3099\u3044","\u3044\u305f\u3099\u304f","\u3044\u305f\u3059\u3099\u3089","\u3044\u305f\u307f","\u3044\u305f\u308a\u3042","\u3044\u3061\u304a\u3046","\u3044\u3061\u3057\u3099","\u3044\u3061\u3068\u3099","\u3044\u3061\u306f\u3099","\u3044\u3061\u3075\u3099","\u3044\u3061\u308a\u3085\u3046","\u3044\u3064\u304b","\u3044\u3063\u3057\u3085\u3093","\u3044\u3063\u305b\u3044","\u3044\u3063\u305d\u3046","\u3044\u3063\u305f\u3093","\u3044\u3063\u3061","\u3044\u3063\u3066\u3044","\u3044\u3063\u307b\u309a\u3046","\u3044\u3066\u3055\u3099","\u3044\u3066\u3093","\u3044\u3068\u3099\u3046","\u3044\u3068\u3053","\u3044\u306a\u3044","\u3044\u306a\u304b","\u3044\u306d\u3080\u308a","\u3044\u306e\u3061","\u3044\u306e\u308b","\u3044\u306f\u3064","\u3044\u306f\u3099\u308b","\u3044\u306f\u3093","\u3044\u3072\u3099\u304d","\u3044\u3072\u3093","\u3044\u3075\u304f","\u3044\u3078\u3093","\u3044\u307b\u3046","\u3044\u307f\u3093","\u3044\u3082\u3046\u3068","\u3044\u3082\u305f\u308c","\u3044\u3082\u308a","\u3044\u3084\u304b\u3099\u308b","\u3044\u3084\u3059","\u3044\u3088\u304b\u3093","\u3044\u3088\u304f","\u3044\u3089\u3044","\u3044\u3089\u3059\u3068","\u3044\u308a\u304f\u3099\u3061","\u3044\u308a\u3087\u3046","\u3044\u308c\u3044","\u3044\u308c\u3082\u306e","\u3044\u308c\u308b","\u3044\u308d\u3048\u3093\u3072\u309a\u3064","\u3044\u308f\u3044","\u3044\u308f\u3046","\u3044\u308f\u304b\u3093","\u3044\u308f\u306f\u3099","\u3044\u308f\u3086\u308b","\u3044\u3093\u3051\u3099\u3093\u307e\u3081","\u3044\u3093\u3055\u3064","\u3044\u3093\u3057\u3087\u3046","\u3044\u3093\u3088\u3046","\u3046\u3048\u304d","\u3046\u3048\u308b","\u3046\u304a\u3055\u3099","\u3046\u304b\u3099\u3044","\u3046\u304b\u3075\u3099","\u3046\u304b\u3078\u3099\u308b","\u3046\u304d\u308f","\u3046\u304f\u3089\u3044\u306a","\u3046\u304f\u308c\u308c","\u3046\u3051\u305f\u307e\u308f\u308b","\u3046\u3051\u3064\u3051","\u3046\u3051\u3068\u308b","\u3046\u3051\u3082\u3064","\u3046\u3051\u308b","\u3046\u3053\u3099\u304b\u3059","\u3046\u3053\u3099\u304f","\u3046\u3053\u3093","\u3046\u3055\u304d\u3099","\u3046\u3057\u306a\u3046","\u3046\u3057\u308d\u304b\u3099\u307f","\u3046\u3059\u3044","\u3046\u3059\u304d\u3099","\u3046\u3059\u304f\u3099\u3089\u3044","\u3046\u3059\u3081\u308b","\u3046\u305b\u3064","\u3046\u3061\u3042\u308f\u305b","\u3046\u3061\u304b\u3099\u308f","\u3046\u3061\u304d","\u3046\u3061\u3085\u3046","\u3046\u3063\u304b\u308a","\u3046\u3064\u304f\u3057\u3044","\u3046\u3063\u305f\u3048\u308b","\u3046\u3064\u308b","\u3046\u3068\u3099\u3093","\u3046\u306a\u304d\u3099","\u3046\u306a\u3057\u3099","\u3046\u306a\u3059\u3099\u304f","\u3046\u306a\u308b","\u3046\u306d\u308b","\u3046\u306e\u3046","\u3046\u3075\u3099\u3051\u3099","\u3046\u3075\u3099\u3053\u3099\u3048","\u3046\u307e\u308c\u308b","\u3046\u3081\u308b","\u3046\u3082\u3046","\u3046\u3084\u307e\u3046","\u3046\u3088\u304f","\u3046\u3089\u304b\u3099\u3048\u3059","\u3046\u3089\u304f\u3099\u3061","\u3046\u3089\u306a\u3044","\u3046\u308a\u3042\u3051\u3099","\u3046\u308a\u304d\u308c","\u3046\u308b\u3055\u3044","\u3046\u308c\u3057\u3044","\u3046\u308c\u3086\u304d","\u3046\u308c\u308b","\u3046\u308d\u3053","\u3046\u308f\u304d","\u3046\u308f\u3055","\u3046\u3093\u3053\u3046","\u3046\u3093\u3061\u3093","\u3046\u3093\u3066\u3093","\u3046\u3093\u3068\u3099\u3046","\u3048\u3044\u3048\u3093","\u3048\u3044\u304b\u3099","\u3048\u3044\u304d\u3087\u3046","\u3048\u3044\u3053\u3099","\u3048\u3044\u305b\u3044","\u3048\u3044\u3075\u3099\u3093","\u3048\u3044\u3088\u3046","\u3048\u3044\u308f","\u3048\u304a\u308a","\u3048\u304b\u3099\u304a","\u3048\u304b\u3099\u304f","\u3048\u304d\u305f\u3044","\u3048\u304f\u305b\u308b","\u3048\u3057\u3083\u304f","\u3048\u3059\u3066","\u3048\u3064\u3089\u3093","\u3048\u306e\u304f\u3099","\u3048\u307b\u3046\u307e\u304d","\u3048\u307b\u3093","\u3048\u307e\u304d","\u3048\u3082\u3057\u3099","\u3048\u3082\u306e","\u3048\u3089\u3044","\u3048\u3089\u3075\u3099","\u3048\u308a\u3042","\u3048\u3093\u3048\u3093","\u3048\u3093\u304b\u3044","\u3048\u3093\u304d\u3099","\u3048\u3093\u3051\u3099\u304d","\u3048\u3093\u3057\u3085\u3046","\u3048\u3093\u305b\u3099\u3064","\u3048\u3093\u305d\u304f","\u3048\u3093\u3061\u3087\u3046","\u3048\u3093\u3068\u3064","\u304a\u3044\u304b\u3051\u308b","\u304a\u3044\u3053\u3059","\u304a\u3044\u3057\u3044","\u304a\u3044\u3064\u304f","\u304a\u3046\u3048\u3093","\u304a\u3046\u3055\u307e","\u304a\u3046\u3057\u3099","\u304a\u3046\u305b\u3064","\u304a\u3046\u305f\u3044","\u304a\u3046\u3075\u304f","\u304a\u3046\u3078\u3099\u3044","\u304a\u3046\u3088\u3046","\u304a\u3048\u308b","\u304a\u304a\u3044","\u304a\u304a\u3046","\u304a\u304a\u3068\u3099\u304a\u308a","\u304a\u304a\u3084","\u304a\u304a\u3088\u305d","\u304a\u304b\u3048\u308a","\u304a\u304b\u3059\u3099","\u304a\u304b\u3099\u3080","\u304a\u304b\u308f\u308a","\u304a\u304d\u3099\u306a\u3046","\u304a\u304d\u308b","\u304a\u304f\u3055\u307e","\u304a\u304f\u3057\u3099\u3087\u3046","\u304a\u304f\u308a\u304b\u3099\u306a","\u304a\u304f\u308b","\u304a\u304f\u308c\u308b","\u304a\u3053\u3059","\u304a\u3053\u306a\u3046","\u304a\u3053\u308b","\u304a\u3055\u3048\u308b","\u304a\u3055\u306a\u3044","\u304a\u3055\u3081\u308b","\u304a\u3057\u3044\u308c","\u304a\u3057\u3048\u308b","\u304a\u3057\u3099\u304d\u3099","\u304a\u3057\u3099\u3055\u3093","\u304a\u3057\u3083\u308c","\u304a\u305d\u3089\u304f","\u304a\u305d\u308f\u308b","\u304a\u305f\u304b\u3099\u3044","\u304a\u305f\u304f","\u304a\u305f\u3099\u3084\u304b","\u304a\u3061\u3064\u304f","\u304a\u3063\u3068","\u304a\u3064\u308a","\u304a\u3066\u3099\u304b\u3051","\u304a\u3068\u3057\u3082\u306e","\u304a\u3068\u306a\u3057\u3044","\u304a\u3068\u3099\u308a","\u304a\u3068\u3099\u308d\u304b\u3059","\u304a\u306f\u3099\u3055\u3093","\u304a\u307e\u3044\u308a","\u304a\u3081\u3066\u3099\u3068\u3046","\u304a\u3082\u3044\u3066\u3099","\u304a\u3082\u3046","\u304a\u3082\u305f\u3044","\u304a\u3082\u3061\u3083","\u304a\u3084\u3064","\u304a\u3084\u3086\u3072\u3099","\u304a\u3088\u307b\u3099\u3059","\u304a\u3089\u3093\u305f\u3099","\u304a\u308d\u3059","\u304a\u3093\u304b\u3099\u304f","\u304a\u3093\u3051\u3044","\u304a\u3093\u3057\u3083","\u304a\u3093\u305b\u3093","\u304a\u3093\u305f\u3099\u3093","\u304a\u3093\u3061\u3085\u3046","\u304a\u3093\u3068\u3099\u3051\u3044","\u304b\u3042\u3064","\u304b\u3044\u304b\u3099","\u304b\u3099\u3044\u304d","\u304b\u3099\u3044\u3051\u3093","\u304b\u3099\u3044\u3053\u3046","\u304b\u3044\u3055\u3064","\u304b\u3044\u3057\u3083","\u304b\u3044\u3059\u3044\u3088\u304f","\u304b\u3044\u305b\u3099\u3093","\u304b\u3044\u305d\u3099\u3046\u3068\u3099","\u304b\u3044\u3064\u3046","\u304b\u3044\u3066\u3093","\u304b\u3044\u3068\u3046","\u304b\u3044\u3075\u304f","\u304b\u3099\u3044\u3078\u304d","\u304b\u3044\u307b\u3046","\u304b\u3044\u3088\u3046","\u304b\u3099\u3044\u3089\u3044","\u304b\u3044\u308f","\u304b\u3048\u308b","\u304b\u304a\u308a","\u304b\u304b\u3048\u308b","\u304b\u304b\u3099\u304f","\u304b\u304b\u3099\u3057","\u304b\u304b\u3099\u307f","\u304b\u304f\u3053\u3099","\u304b\u304f\u3068\u304f","\u304b\u3055\u3099\u308b","\u304b\u3099\u305d\u3099\u3046","\u304b\u305f\u3044","\u304b\u305f\u3061","\u304b\u3099\u3061\u3087\u3046","\u304b\u3099\u3063\u304d\u3085\u3046","\u304b\u3099\u3063\u3053\u3046","\u304b\u3099\u3063\u3055\u3093","\u304b\u3099\u3063\u3057\u3087\u3046","\u304b\u306a\u3055\u3099\u308f\u3057","\u304b\u306e\u3046","\u304b\u3099\u306f\u304f","\u304b\u3075\u3099\u304b","\u304b\u307b\u3046","\u304b\u307b\u3053\u3099","\u304b\u307e\u3046","\u304b\u307e\u307b\u3099\u3053","\u304b\u3081\u308c\u304a\u3093","\u304b\u3086\u3044","\u304b\u3088\u3046\u3072\u3099","\u304b\u3089\u3044","\u304b\u308b\u3044","\u304b\u308d\u3046","\u304b\u308f\u304f","\u304b\u308f\u3089","\u304b\u3099\u3093\u304b","\u304b\u3093\u3051\u3044","\u304b\u3093\u3053\u3046","\u304b\u3093\u3057\u3083","\u304b\u3093\u305d\u3046","\u304b\u3093\u305f\u3093","\u304b\u3093\u3061","\u304b\u3099\u3093\u306f\u3099\u308b","\u304d\u3042\u3044","\u304d\u3042\u3064","\u304d\u3044\u308d","\u304d\u3099\u3044\u3093","\u304d\u3046\u3044","\u304d\u3046\u3093","\u304d\u3048\u308b","\u304d\u304a\u3046","\u304d\u304a\u304f","\u304d\u304a\u3061","\u304d\u304a\u3093","\u304d\u304b\u3044","\u304d\u304b\u304f","\u304d\u304b\u3093\u3057\u3083","\u304d\u304d\u3066","\u304d\u304f\u306f\u3099\u308a","\u304d\u304f\u3089\u3051\u3099","\u304d\u3051\u3093\u305b\u3044","\u304d\u3053\u3046","\u304d\u3053\u3048\u308b","\u304d\u3053\u304f","\u304d\u3055\u3044","\u304d\u3055\u304f","\u304d\u3055\u307e","\u304d\u3055\u3089\u304d\u3099","\u304d\u3099\u3057\u3099\u304b\u304b\u3099\u304f","\u304d\u3099\u3057\u304d","\u304d\u3099\u3057\u3099\u305f\u3044\u3051\u3093","\u304d\u3099\u3057\u3099\u306b\u3063\u3066\u3044","\u304d\u3099\u3057\u3099\u3085\u3064\u3057\u3083","\u304d\u3059\u3046","\u304d\u305b\u3044","\u304d\u305b\u304d","\u304d\u305b\u3064","\u304d\u305d\u3046","\u304d\u305d\u3099\u304f","\u304d\u305d\u3099\u3093","\u304d\u305f\u3048\u308b","\u304d\u3061\u3087\u3046","\u304d\u3064\u3048\u3093","\u304d\u3099\u3063\u3061\u308a","\u304d\u3064\u3064\u304d","\u304d\u3064\u306d","\u304d\u3066\u3044","\u304d\u3068\u3099\u3046","\u304d\u3068\u3099\u304f","\u304d\u306a\u3044","\u304d\u306a\u304b\u3099","\u304d\u306a\u3053","\u304d\u306c\u3053\u3099\u3057","\u304d\u306d\u3093","\u304d\u306e\u3046","\u304d\u306e\u3057\u305f","\u304d\u306f\u304f","\u304d\u3072\u3099\u3057\u3044","\u304d\u3072\u3093","\u304d\u3075\u304f","\u304d\u3075\u3099\u3093","\u304d\u307b\u3099\u3046","\u304d\u307b\u3093","\u304d\u307e\u308b","\u304d\u307f\u3064","\u304d\u3080\u3059\u3099\u304b\u3057\u3044","\u304d\u3081\u308b","\u304d\u3082\u305f\u3099\u3081\u3057","\u304d\u3082\u3061","\u304d\u3082\u306e","\u304d\u3083\u304f","\u304d\u3084\u304f","\u304d\u3099\u3085\u3046\u306b\u304f","\u304d\u3088\u3046","\u304d\u3087\u3046\u308a\u3085\u3046","\u304d\u3089\u3044","\u304d\u3089\u304f","\u304d\u308a\u3093","\u304d\u308c\u3044","\u304d\u308c\u3064","\u304d\u308d\u304f","\u304d\u3099\u308d\u3093","\u304d\u308f\u3081\u308b","\u304d\u3099\u3093\u3044\u308d","\u304d\u3093\u304b\u304f\u3057\u3099","\u304d\u3093\u3057\u3099\u3087","\u304d\u3093\u3088\u3046\u3072\u3099","\u304f\u3099\u3042\u3044","\u304f\u3044\u3059\u3099","\u304f\u3046\u304b\u3093","\u304f\u3046\u304d","\u304f\u3046\u304f\u3099\u3093","\u304f\u3046\u3053\u3046","\u304f\u3099\u3046\u305b\u3044","\u304f\u3046\u305d\u3046","\u304f\u3099\u3046\u305f\u3089","\u304f\u3046\u3075\u304f","\u304f\u3046\u307b\u3099","\u304f\u304b\u3093","\u304f\u304d\u3087\u3046","\u304f\u3051\u3099\u3093","\u304f\u3099\u3053\u3046","\u304f\u3055\u3044","\u304f\u3055\u304d","\u304f\u3055\u306f\u3099\u306a","\u304f\u3055\u308b","\u304f\u3057\u3083\u307f","\u304f\u3057\u3087\u3046","\u304f\u3059\u306e\u304d","\u304f\u3059\u308a\u3086\u3072\u3099","\u304f\u305b\u3051\u3099","\u304f\u305b\u3093","\u304f\u3099\u305f\u3044\u3066\u304d","\u304f\u305f\u3099\u3055\u308b","\u304f\u305f\u3072\u3099\u308c\u308b","\u304f\u3061\u3053\u307f","\u304f\u3061\u3055\u304d","\u304f\u3064\u3057\u305f","\u304f\u3099\u3063\u3059\u308a","\u304f\u3064\u308d\u304f\u3099","\u304f\u3068\u3046\u3066\u3093","\u304f\u3068\u3099\u304f","\u304f\u306a\u3093","\u304f\u306d\u304f\u306d","\u304f\u306e\u3046","\u304f\u3075\u3046","\u304f\u307f\u3042\u308f\u305b","\u304f\u307f\u305f\u3066\u308b","\u304f\u3081\u308b","\u304f\u3084\u304f\u3057\u3087","\u304f\u3089\u3059","\u304f\u3089\u3078\u3099\u308b","\u304f\u308b\u307e","\u304f\u308c\u308b","\u304f\u308d\u3046","\u304f\u308f\u3057\u3044","\u304f\u3099\u3093\u304b\u3093","\u304f\u3099\u3093\u3057\u3087\u304f","\u304f\u3099\u3093\u305f\u3044","\u304f\u3099\u3093\u3066","\u3051\u3042\u306a","\u3051\u3044\u304b\u304f","\u3051\u3044\u3051\u3093","\u3051\u3044\u3053","\u3051\u3044\u3055\u3064","\u3051\u3099\u3044\u3057\u3099\u3085\u3064","\u3051\u3044\u305f\u3044","\u3051\u3099\u3044\u306e\u3046\u3057\u3099\u3093","\u3051\u3044\u308c\u304d","\u3051\u3044\u308d","\u3051\u304a\u3068\u3059","\u3051\u304a\u308a\u3082\u306e","\u3051\u3099\u304d\u304b","\u3051\u3099\u304d\u3051\u3099\u3093","\u3051\u3099\u304d\u305f\u3099\u3093","\u3051\u3099\u304d\u3061\u3093","\u3051\u3099\u304d\u3068\u3064","\u3051\u3099\u304d\u306f","\u3051\u3099\u304d\u3084\u304f","\u3051\u3099\u3053\u3046","\u3051\u3099\u3053\u304f\u3057\u3099\u3087\u3046","\u3051\u3099\u3055\u3099\u3044","\u3051\u3055\u304d","\u3051\u3099\u3055\u3099\u3093","\u3051\u3057\u304d","\u3051\u3057\u3053\u3099\u3080","\u3051\u3057\u3087\u3046","\u3051\u3099\u3059\u3068","\u3051\u305f\u306f\u3099","\u3051\u3061\u3083\u3063\u3075\u309a","\u3051\u3061\u3089\u3059","\u3051\u3064\u3042\u3064","\u3051\u3064\u3044","\u3051\u3064\u3048\u304d","\u3051\u3063\u3053\u3093","\u3051\u3064\u3057\u3099\u3087","\u3051\u3063\u305b\u304d","\u3051\u3063\u3066\u3044","\u3051\u3064\u307e\u3064","\u3051\u3099\u3064\u3088\u3046\u3072\u3099","\u3051\u3099\u3064\u308c\u3044","\u3051\u3064\u308d\u3093","\u3051\u3099\u3068\u3099\u304f","\u3051\u3068\u306f\u3099\u3059","\u3051\u3068\u308b","\u3051\u306a\u3051\u3099","\u3051\u306a\u3059","\u3051\u306a\u307f","\u3051\u306c\u304d","\u3051\u3099\u306d\u3064","\u3051\u306d\u3093","\u3051\u306f\u3044","\u3051\u3099\u3072\u3093","\u3051\u3075\u3099\u304b\u3044","\u3051\u3099\u307b\u3099\u304f","\u3051\u307e\u308a","\u3051\u307f\u304b\u308b","\u3051\u3080\u3057","\u3051\u3080\u308a","\u3051\u3082\u306e","\u3051\u3089\u3044","\u3051\u308d\u3051\u308d","\u3051\u308f\u3057\u3044","\u3051\u3093\u3044","\u3051\u3093\u3048\u3064","\u3051\u3093\u304a","\u3051\u3093\u304b","\u3051\u3099\u3093\u304d","\u3051\u3093\u3051\u3099\u3093","\u3051\u3093\u3053\u3046","\u3051\u3093\u3055\u304f","\u3051\u3093\u3057\u3085\u3046","\u3051\u3093\u3059\u3046","\u3051\u3099\u3093\u305d\u3046","\u3051\u3093\u3061\u304f","\u3051\u3093\u3066\u3044","\u3051\u3093\u3068\u3046","\u3051\u3093\u306a\u3044","\u3051\u3093\u306b\u3093","\u3051\u3099\u3093\u3075\u3099\u3064","\u3051\u3093\u307e","\u3051\u3093\u307f\u3093","\u3051\u3093\u3081\u3044","\u3051\u3093\u3089\u3093","\u3051\u3093\u308a","\u3053\u3042\u304f\u307e","\u3053\u3044\u306c","\u3053\u3044\u3072\u3099\u3068","\u3053\u3099\u3046\u3044","\u3053\u3046\u3048\u3093","\u3053\u3046\u304a\u3093","\u3053\u3046\u304b\u3093","\u3053\u3099\u3046\u304d\u3085\u3046","\u3053\u3099\u3046\u3051\u3044","\u3053\u3046\u3053\u3046","\u3053\u3046\u3055\u3044","\u3053\u3046\u3057\u3099","\u3053\u3046\u3059\u3044","\u3053\u3099\u3046\u305b\u3044","\u3053\u3046\u305d\u304f","\u3053\u3046\u305f\u3044","\u3053\u3046\u3061\u3083","\u3053\u3046\u3064\u3046","\u3053\u3046\u3066\u3044","\u3053\u3046\u3068\u3099\u3046","\u3053\u3046\u306a\u3044","\u3053\u3046\u306f\u3044","\u3053\u3099\u3046\u307b\u3046","\u3053\u3099\u3046\u307e\u3093","\u3053\u3046\u3082\u304f","\u3053\u3046\u308a\u3064","\u3053\u3048\u308b","\u3053\u304a\u308a","\u3053\u3099\u304b\u3044","\u3053\u3099\u304b\u3099\u3064","\u3053\u3099\u304b\u3093","\u3053\u304f\u3053\u3099","\u3053\u304f\u3055\u3044","\u3053\u304f\u3068\u3046","\u3053\u304f\u306a\u3044","\u3053\u304f\u306f\u304f","\u3053\u304f\u3099\u307e","\u3053\u3051\u3044","\u3053\u3051\u308b","\u3053\u3053\u306e\u304b","\u3053\u3053\u308d","\u3053\u3055\u3081","\u3053\u3057\u3064","\u3053\u3059\u3046","\u3053\u305b\u3044","\u3053\u305b\u304d","\u3053\u305b\u3099\u3093","\u3053\u305d\u305f\u3099\u3066","\u3053\u305f\u3044","\u3053\u305f\u3048\u308b","\u3053\u305f\u3064","\u3053\u3061\u3087\u3046","\u3053\u3063\u304b","\u3053\u3064\u3053\u3064","\u3053\u3064\u306f\u3099\u3093","\u3053\u3064\u3075\u3099","\u3053\u3066\u3044","\u3053\u3066\u3093","\u3053\u3068\u304b\u3099\u3089","\u3053\u3068\u3057","\u3053\u3068\u306f\u3099","\u3053\u3068\u308a","\u3053\u306a\u3053\u3099\u306a","\u3053\u306d\u3053\u306d","\u3053\u306e\u307e\u307e","\u3053\u306e\u307f","\u3053\u306e\u3088","\u3053\u3099\u306f\u3093","\u3053\u3072\u3064\u3057\u3099","\u3053\u3075\u3046","\u3053\u3075\u3093","\u3053\u307b\u3099\u308c\u308b","\u3053\u3099\u307e\u3042\u3075\u3099\u3089","\u3053\u307e\u304b\u3044","\u3053\u3099\u307e\u3059\u308a","\u3053\u307e\u3064\u306a","\u3053\u307e\u308b","\u3053\u3080\u304d\u3099\u3053","\u3053\u3082\u3057\u3099","\u3053\u3082\u3061","\u3053\u3082\u306e","\u3053\u3082\u3093","\u3053\u3084\u304f","\u3053\u3084\u307e","\u3053\u3086\u3046","\u3053\u3086\u3072\u3099","\u3053\u3088\u3044","\u3053\u3088\u3046","\u3053\u308a\u308b","\u3053\u308c\u304f\u3057\u3087\u3093","\u3053\u308d\u3063\u3051","\u3053\u308f\u3082\u3066","\u3053\u308f\u308c\u308b","\u3053\u3093\u3044\u3093","\u3053\u3093\u304b\u3044","\u3053\u3093\u304d","\u3053\u3093\u3057\u3085\u3046","\u3053\u3093\u3059\u3044","\u3053\u3093\u305f\u3099\u3066","\u3053\u3093\u3068\u3093","\u3053\u3093\u306a\u3093","\u3053\u3093\u3072\u3099\u306b","\u3053\u3093\u307b\u309a\u3093","\u3053\u3093\u307e\u3051","\u3053\u3093\u3084","\u3053\u3093\u308c\u3044","\u3053\u3093\u308f\u304f","\u3055\u3099\u3044\u3048\u304d","\u3055\u3044\u304b\u3044","\u3055\u3044\u304d\u3093","\u3055\u3099\u3044\u3051\u3099\u3093","\u3055\u3099\u3044\u3053","\u3055\u3044\u3057\u3087","\u3055\u3044\u305b\u3044","\u3055\u3099\u3044\u305f\u304f","\u3055\u3099\u3044\u3061\u3085\u3046","\u3055\u3044\u3066\u304d","\u3055\u3099\u3044\u308a\u3087\u3046","\u3055\u3046\u306a","\u3055\u304b\u3044\u3057","\u3055\u304b\u3099\u3059","\u3055\u304b\u306a","\u3055\u304b\u307f\u3061","\u3055\u304b\u3099\u308b","\u3055\u304d\u3099\u3087\u3046","\u3055\u304f\u3057","\u3055\u304f\u3072\u3093","\u3055\u304f\u3089","\u3055\u3053\u304f","\u3055\u3053\u3064","\u3055\u3059\u3099\u304b\u308b","\u3055\u3099\u305b\u304d","\u3055\u305f\u3093","\u3055\u3064\u3048\u3044","\u3055\u3099\u3064\u304a\u3093","\u3055\u3099\u3063\u304b","\u3055\u3099\u3064\u304b\u3099\u304f","\u3055\u3063\u304d\u3087\u304f","\u3055\u3099\u3063\u3057","\u3055\u3064\u3057\u3099\u3093","\u3055\u3099\u3063\u305d\u3046","\u3055\u3064\u305f\u306f\u3099","\u3055\u3064\u307e\u3044\u3082","\u3055\u3066\u3044","\u3055\u3068\u3044\u3082","\u3055\u3068\u3046","\u3055\u3068\u304a\u3084","\u3055\u3068\u3057","\u3055\u3068\u308b","\u3055\u306e\u3046","\u3055\u306f\u3099\u304f","\u3055\u3072\u3099\u3057\u3044","\u3055\u3078\u3099\u3064","\u3055\u307b\u3046","\u3055\u307b\u3068\u3099","\u3055\u307e\u3059","\u3055\u307f\u3057\u3044","\u3055\u307f\u305f\u3099\u308c","\u3055\u3080\u3051","\u3055\u3081\u308b","\u3055\u3084\u3048\u3093\u3068\u3099\u3046","\u3055\u3086\u3046","\u3055\u3088\u3046","\u3055\u3088\u304f","\u3055\u3089\u305f\u3099","\u3055\u3099\u308b\u305d\u306f\u3099","\u3055\u308f\u3084\u304b","\u3055\u308f\u308b","\u3055\u3093\u3044\u3093","\u3055\u3093\u304b","\u3055\u3093\u304d\u3083\u304f","\u3055\u3093\u3053\u3046","\u3055\u3093\u3055\u3044","\u3055\u3099\u3093\u3057\u3087","\u3055\u3093\u3059\u3046","\u3055\u3093\u305b\u3044","\u3055\u3093\u305d","\u3055\u3093\u3061","\u3055\u3093\u307e","\u3055\u3093\u307f","\u3055\u3093\u3089\u3093","\u3057\u3042\u3044","\u3057\u3042\u3051\u3099","\u3057\u3042\u3055\u3063\u3066","\u3057\u3042\u308f\u305b","\u3057\u3044\u304f","\u3057\u3044\u3093","\u3057\u3046\u3061","\u3057\u3048\u3044","\u3057\u304a\u3051","\u3057\u304b\u3044","\u3057\u304b\u304f","\u3057\u3099\u304b\u3093","\u3057\u3053\u3099\u3068","\u3057\u3059\u3046","\u3057\u3099\u305f\u3099\u3044","\u3057\u305f\u3046\u3051","\u3057\u305f\u304d\u3099","\u3057\u305f\u3066","\u3057\u305f\u307f","\u3057\u3061\u3087\u3046","\u3057\u3061\u308a\u3093","\u3057\u3063\u304b\u308a","\u3057\u3064\u3057\u3099","\u3057\u3064\u3082\u3093","\u3057\u3066\u3044","\u3057\u3066\u304d","\u3057\u3066\u3064","\u3057\u3099\u3066\u3093","\u3057\u3099\u3068\u3099\u3046","\u3057\u306a\u304d\u3099\u308c","\u3057\u306a\u3082\u306e","\u3057\u306a\u3093","\u3057\u306d\u307e","\u3057\u306d\u3093","\u3057\u306e\u304f\u3099","\u3057\u306e\u3075\u3099","\u3057\u306f\u3044","\u3057\u306f\u3099\u304b\u308a","\u3057\u306f\u3064","\u3057\u306f\u3089\u3044","\u3057\u306f\u3093","\u3057\u3072\u3087\u3046","\u3057\u3075\u304f","\u3057\u3099\u3075\u3099\u3093","\u3057\u3078\u3044","\u3057\u307b\u3046","\u3057\u307b\u3093","\u3057\u307e\u3046","\u3057\u307e\u308b","\u3057\u307f\u3093","\u3057\u3080\u3051\u308b","\u3057\u3099\u3080\u3057\u3087","\u3057\u3081\u3044","\u3057\u3081\u308b","\u3057\u3082\u3093","\u3057\u3083\u3044\u3093","\u3057\u3083\u3046\u3093","\u3057\u3083\u304a\u3093","\u3057\u3099\u3083\u304b\u3099\u3044\u3082","\u3057\u3084\u304f\u3057\u3087","\u3057\u3083\u304f\u307b\u3046","\u3057\u3083\u3051\u3093","\u3057\u3083\u3053","\u3057\u3083\u3055\u3099\u3044","\u3057\u3083\u3057\u3093","\u3057\u3083\u305b\u3093","\u3057\u3083\u305d\u3046","\u3057\u3083\u305f\u3044","\u3057\u3083\u3061\u3087\u3046","\u3057\u3083\u3063\u304d\u3093","\u3057\u3099\u3083\u307e","\u3057\u3083\u308a\u3093","\u3057\u3083\u308c\u3044","\u3057\u3099\u3086\u3046","\u3057\u3099\u3085\u3046\u3057\u3087","\u3057\u3085\u304f\u306f\u304f","\u3057\u3099\u3085\u3057\u3093","\u3057\u3085\u3063\u305b\u304d","\u3057\u3085\u307f","\u3057\u3085\u3089\u306f\u3099","\u3057\u3099\u3085\u3093\u306f\u3099\u3093","\u3057\u3087\u3046\u304b\u3044","\u3057\u3087\u304f\u305f\u304f","\u3057\u3087\u3063\u3051\u3093","\u3057\u3087\u3068\u3099\u3046","\u3057\u3087\u3082\u3064","\u3057\u3089\u305b\u308b","\u3057\u3089\u3078\u3099\u308b","\u3057\u3093\u304b","\u3057\u3093\u3053\u3046","\u3057\u3099\u3093\u3057\u3099\u3083","\u3057\u3093\u305b\u3044\u3057\u3099","\u3057\u3093\u3061\u304f","\u3057\u3093\u308a\u3093","\u3059\u3042\u3051\u3099","\u3059\u3042\u3057","\u3059\u3042\u306a","\u3059\u3099\u3042\u3093","\u3059\u3044\u3048\u3044","\u3059\u3044\u304b","\u3059\u3044\u3068\u3046","\u3059\u3099\u3044\u3075\u3099\u3093","\u3059\u3044\u3088\u3046\u3072\u3099","\u3059\u3046\u304b\u3099\u304f","\u3059\u3046\u3057\u3099\u3064","\u3059\u3046\u305b\u3093","\u3059\u304a\u3068\u3099\u308a","\u3059\u304d\u307e","\u3059\u304f\u3046","\u3059\u304f\u306a\u3044","\u3059\u3051\u308b","\u3059\u3053\u3099\u3044","\u3059\u3053\u3057","\u3059\u3099\u3055\u3093","\u3059\u3059\u3099\u3057\u3044","\u3059\u3059\u3080","\u3059\u3059\u3081\u308b","\u3059\u3063\u304b\u308a","\u3059\u3099\u3063\u3057\u308a","\u3059\u3099\u3063\u3068","\u3059\u3066\u304d","\u3059\u3066\u308b","\u3059\u306d\u308b","\u3059\u306e\u3053","\u3059\u306f\u305f\u3099","\u3059\u306f\u3099\u3089\u3057\u3044","\u3059\u3099\u3072\u3087\u3046","\u3059\u3099\u3075\u3099\u306c\u308c","\u3059\u3075\u3099\u308a","\u3059\u3075\u308c","\u3059\u3078\u3099\u3066","\u3059\u3078\u3099\u308b","\u3059\u3099\u307b\u3046","\u3059\u307b\u3099\u3093","\u3059\u307e\u3044","\u3059\u3081\u3057","\u3059\u3082\u3046","\u3059\u3084\u304d","\u3059\u3089\u3059\u3089","\u3059\u308b\u3081","\u3059\u308c\u3061\u304b\u3099\u3046","\u3059\u308d\u3063\u3068","\u3059\u308f\u308b","\u3059\u3093\u305b\u3099\u3093","\u3059\u3093\u307b\u309a\u3046","\u305b\u3042\u3075\u3099\u3089","\u305b\u3044\u304b\u3064","\u305b\u3044\u3051\u3099\u3093","\u305b\u3044\u3057\u3099","\u305b\u3044\u3088\u3046","\u305b\u304a\u3046","\u305b\u304b\u3044\u304b\u3093","\u305b\u304d\u306b\u3093","\u305b\u304d\u3080","\u305b\u304d\u3086","\u305b\u304d\u3089\u3093\u3046\u3093","\u305b\u3051\u3093","\u305b\u3053\u3046","\u305b\u3059\u3057\u3099","\u305b\u305f\u3044","\u305b\u305f\u3051","\u305b\u3063\u304b\u304f","\u305b\u3063\u304d\u3083\u304f","\u305b\u3099\u3063\u304f","\u305b\u3063\u3051\u3093","\u305b\u3063\u3053\u3064","\u305b\u3063\u3055\u305f\u304f\u307e","\u305b\u3064\u305d\u3099\u304f","\u305b\u3064\u305f\u3099\u3093","\u305b\u3064\u3066\u3099\u3093","\u305b\u3063\u306f\u309a\u3093","\u305b\u3064\u3072\u3099","\u305b\u3064\u3075\u3099\u3093","\u305b\u3064\u3081\u3044","\u305b\u3064\u308a\u3064","\u305b\u306a\u304b","\u305b\u306e\u3072\u3099","\u305b\u306f\u306f\u3099","\u305b\u3072\u3099\u308d","\u305b\u307b\u3099\u306d","\u305b\u307e\u3044","\u305b\u307e\u308b","\u305b\u3081\u308b","\u305b\u3082\u305f\u308c","\u305b\u308a\u3075","\u305b\u3099\u3093\u3042\u304f","\u305b\u3093\u3044","\u305b\u3093\u3048\u3044","\u305b\u3093\u304b","\u305b\u3093\u304d\u3087","\u305b\u3093\u304f","\u305b\u3093\u3051\u3099\u3093","\u305b\u3099\u3093\u3053\u3099","\u305b\u3093\u3055\u3044","\u305b\u3093\u3057\u3085","\u305b\u3093\u3059\u3044","\u305b\u3093\u305b\u3044","\u305b\u3093\u305d\u3099","\u305b\u3093\u305f\u304f","\u305b\u3093\u3061\u3087\u3046","\u305b\u3093\u3066\u3044","\u305b\u3093\u3068\u3046","\u305b\u3093\u306c\u304d","\u305b\u3093\u306d\u3093","\u305b\u3093\u306f\u309a\u3044","\u305b\u3099\u3093\u3075\u3099","\u305b\u3099\u3093\u307b\u309a\u3046","\u305b\u3093\u3080","\u305b\u3093\u3081\u3093\u3057\u3099\u3087","\u305b\u3093\u3082\u3093","\u305b\u3093\u3084\u304f","\u305b\u3093\u3086\u3046","\u305b\u3093\u3088\u3046","\u305b\u3099\u3093\u3089","\u305b\u3099\u3093\u308a\u3083\u304f","\u305b\u3093\u308c\u3044","\u305b\u3093\u308d","\u305d\u3042\u304f","\u305d\u3044\u3068\u3051\u3099\u308b","\u305d\u3044\u306d","\u305d\u3046\u304b\u3099\u3093\u304d\u3087\u3046","\u305d\u3046\u304d","\u305d\u3046\u3053\u3099","\u305d\u3046\u3057\u3093","\u305d\u3046\u305f\u3099\u3093","\u305d\u3046\u306a\u3093","\u305d\u3046\u3072\u3099","\u305d\u3046\u3081\u3093","\u305d\u3046\u308a","\u305d\u3048\u3082\u306e","\u305d\u3048\u3093","\u305d\u304b\u3099\u3044","\u305d\u3051\u3099\u304d","\u305d\u3053\u3046","\u305d\u3053\u305d\u3053","\u305d\u3055\u3099\u3044","\u305d\u3057\u306a","\u305d\u305b\u3044","\u305d\u305b\u3093","\u305d\u305d\u304f\u3099","\u305d\u305f\u3099\u3066\u308b","\u305d\u3064\u3046","\u305d\u3064\u3048\u3093","\u305d\u3063\u304b\u3093","\u305d\u3064\u304d\u3099\u3087\u3046","\u305d\u3063\u3051\u3064","\u305d\u3063\u3053\u3046","\u305d\u3063\u305b\u3093","\u305d\u3063\u3068","\u305d\u3068\u304b\u3099\u308f","\u305d\u3068\u3064\u3099\u3089","\u305d\u306a\u3048\u308b","\u305d\u306a\u305f","\u305d\u3075\u307b\u3099","\u305d\u307b\u3099\u304f","\u305d\u307b\u3099\u308d","\u305d\u307e\u3064","\u305d\u307e\u308b","\u305d\u3080\u304f","\u305d\u3080\u308a\u3048","\u305d\u3081\u308b","\u305d\u3082\u305d\u3082","\u305d\u3088\u304b\u305b\u3099","\u305d\u3089\u307e\u3081","\u305d\u308d\u3046","\u305d\u3093\u304b\u3044","\u305d\u3093\u3051\u3044","\u305d\u3093\u3055\u3099\u3044","\u305d\u3093\u3057\u3064","\u305d\u3093\u305d\u3099\u304f","\u305d\u3093\u3061\u3087\u3046","\u305d\u3099\u3093\u3072\u3099","\u305d\u3099\u3093\u3075\u3099\u3093","\u305d\u3093\u307f\u3093","\u305f\u3042\u3044","\u305f\u3044\u3044\u3093","\u305f\u3044\u3046\u3093","\u305f\u3044\u3048\u304d","\u305f\u3044\u304a\u3046","\u305f\u3099\u3044\u304b\u3099\u304f","\u305f\u3044\u304d","\u305f\u3044\u304f\u3099\u3046","\u305f\u3044\u3051\u3093","\u305f\u3044\u3053","\u305f\u3044\u3055\u3099\u3044","\u305f\u3099\u3044\u3057\u3099\u3087\u3046\u3075\u3099","\u305f\u3099\u3044\u3059\u304d","\u305f\u3044\u305b\u3064","\u305f\u3044\u305d\u3046","\u305f\u3099\u3044\u305f\u3044","\u305f\u3044\u3061\u3087\u3046","\u305f\u3044\u3066\u3044","\u305f\u3099\u3044\u3068\u3099\u3053\u308d","\u305f\u3044\u306a\u3044","\u305f\u3044\u306d\u3064","\u305f\u3044\u306e\u3046","\u305f\u3044\u306f\u3093","\u305f\u3099\u3044\u3072\u3087\u3046","\u305f\u3044\u3075\u3046","\u305f\u3044\u3078\u3093","\u305f\u3044\u307b","\u305f\u3044\u307e\u3064\u306f\u3099\u306a","\u305f\u3044\u307f\u3093\u304f\u3099","\u305f\u3044\u3080","\u305f\u3044\u3081\u3093","\u305f\u3044\u3084\u304d","\u305f\u3044\u3088\u3046","\u305f\u3044\u3089","\u305f\u3044\u308a\u3087\u304f","\u305f\u3044\u308b","\u305f\u3044\u308f\u3093","\u305f\u3046\u3048","\u305f\u3048\u308b","\u305f\u304a\u3059","\u305f\u304a\u308b","\u305f\u304a\u308c\u308b","\u305f\u304b\u3044","\u305f\u304b\u306d","\u305f\u304d\u3072\u3099","\u305f\u304f\u3055\u3093","\u305f\u3053\u304f","\u305f\u3053\u3084\u304d","\u305f\u3055\u3044","\u305f\u3057\u3055\u3099\u3093","\u305f\u3099\u3057\u3099\u3083\u308c","\u305f\u3059\u3051\u308b","\u305f\u3059\u3099\u3055\u308f\u308b","\u305f\u305d\u304b\u3099\u308c","\u305f\u305f\u304b\u3046","\u305f\u305f\u304f","\u305f\u305f\u3099\u3057\u3044","\u305f\u305f\u307f","\u305f\u3061\u306f\u3099\u306a","\u305f\u3099\u3063\u304b\u3044","\u305f\u3099\u3063\u304d\u3083\u304f","\u305f\u3099\u3063\u3053","\u305f\u3099\u3063\u3057\u3085\u3064","\u305f\u3099\u3063\u305f\u3044","\u305f\u3066\u308b","\u305f\u3068\u3048\u308b","\u305f\u306a\u306f\u3099\u305f","\u305f\u306b\u3093","\u305f\u306c\u304d","\u305f\u306e\u3057\u307f","\u305f\u306f\u3064","\u305f\u3075\u3099\u3093","\u305f\u3078\u3099\u308b","\u305f\u307b\u3099\u3046","\u305f\u307e\u3053\u3099","\u305f\u307e\u308b","\u305f\u3099\u3080\u308b","\u305f\u3081\u3044\u304d","\u305f\u3081\u3059","\u305f\u3081\u308b","\u305f\u3082\u3064","\u305f\u3084\u3059\u3044","\u305f\u3088\u308b","\u305f\u3089\u3059","\u305f\u308a\u304d\u307b\u3093\u304b\u3099\u3093","\u305f\u308a\u3087\u3046","\u305f\u308a\u308b","\u305f\u308b\u3068","\u305f\u308c\u308b","\u305f\u308c\u3093\u3068","\u305f\u308d\u3063\u3068","\u305f\u308f\u3080\u308c\u308b","\u305f\u3099\u3093\u3042\u3064","\u305f\u3093\u3044","\u305f\u3093\u304a\u3093","\u305f\u3093\u304b","\u305f\u3093\u304d","\u305f\u3093\u3051\u3093","\u305f\u3093\u3053\u3099","\u305f\u3093\u3055\u3093","\u305f\u3093\u3057\u3099\u3087\u3046\u3072\u3099","\u305f\u3099\u3093\u305b\u3044","\u305f\u3093\u305d\u304f","\u305f\u3093\u305f\u3044","\u305f\u3099\u3093\u3061","\u305f\u3093\u3066\u3044","\u305f\u3093\u3068\u3046","\u305f\u3099\u3093\u306a","\u305f\u3093\u306b\u3093","\u305f\u3099\u3093\u306d\u3064","\u305f\u3093\u306e\u3046","\u305f\u3093\u3072\u309a\u3093","\u305f\u3099\u3093\u307b\u3099\u3046","\u305f\u3093\u307e\u3064","\u305f\u3093\u3081\u3044","\u305f\u3099\u3093\u308c\u3064","\u305f\u3099\u3093\u308d","\u305f\u3099\u3093\u308f","\u3061\u3042\u3044","\u3061\u3042\u3093","\u3061\u3044\u304d","\u3061\u3044\u3055\u3044","\u3061\u3048\u3093","\u3061\u304b\u3044","\u3061\u304b\u3089","\u3061\u304d\u3085\u3046","\u3061\u304d\u3093","\u3061\u3051\u3044\u3059\u3099","\u3061\u3051\u3093","\u3061\u3053\u304f","\u3061\u3055\u3044","\u3061\u3057\u304d","\u3061\u3057\u308a\u3087\u3046","\u3061\u305b\u3044","\u3061\u305d\u3046","\u3061\u305f\u3044","\u3061\u305f\u3093","\u3061\u3061\u304a\u3084","\u3061\u3064\u3057\u3099\u3087","\u3061\u3066\u304d","\u3061\u3066\u3093","\u3061\u306c\u304d","\u3061\u306c\u308a","\u3061\u306e\u3046","\u3061\u3072\u3087\u3046","\u3061\u3078\u3044\u305b\u3093","\u3061\u307b\u3046","\u3061\u307e\u305f","\u3061\u307f\u3064","\u3061\u307f\u3068\u3099\u308d","\u3061\u3081\u3044\u3068\u3099","\u3061\u3083\u3093\u3053\u306a\u3078\u3099","\u3061\u3085\u3046\u3044","\u3061\u3086\u308a\u3087\u304f","\u3061\u3087\u3046\u3057","\u3061\u3087\u3055\u304f\u3051\u3093","\u3061\u3089\u3057","\u3061\u3089\u307f","\u3061\u308a\u304b\u3099\u307f","\u3061\u308a\u3087\u3046","\u3061\u308b\u3068\u3099","\u3061\u308f\u308f","\u3061\u3093\u305f\u3044","\u3061\u3093\u3082\u304f","\u3064\u3044\u304b","\u3064\u3044\u305f\u3061","\u3064\u3046\u304b","\u3064\u3046\u3057\u3099\u3087\u3046","\u3064\u3046\u306f\u3093","\u3064\u3046\u308f","\u3064\u304b\u3046","\u3064\u304b\u308c\u308b","\u3064\u304f\u306d","\u3064\u304f\u308b","\u3064\u3051\u306d","\u3064\u3051\u308b","\u3064\u3053\u3099\u3046","\u3064\u305f\u3048\u308b","\u3064\u3064\u3099\u304f","\u3064\u3064\u3057\u3099","\u3064\u3064\u3080","\u3064\u3068\u3081\u308b","\u3064\u306a\u304b\u3099\u308b","\u3064\u306a\u307f","\u3064\u306d\u3064\u3099\u306d","\u3064\u306e\u308b","\u3064\u3075\u3099\u3059","\u3064\u307e\u3089\u306a\u3044","\u3064\u307e\u308b","\u3064\u307f\u304d","\u3064\u3081\u305f\u3044","\u3064\u3082\u308a","\u3064\u3082\u308b","\u3064\u3088\u3044","\u3064\u308b\u307b\u3099","\u3064\u308b\u307f\u304f","\u3064\u308f\u3082\u306e","\u3064\u308f\u308a","\u3066\u3042\u3057","\u3066\u3042\u3066","\u3066\u3042\u307f","\u3066\u3044\u304a\u3093","\u3066\u3044\u304b","\u3066\u3044\u304d","\u3066\u3044\u3051\u3044","\u3066\u3044\u3053\u304f","\u3066\u3044\u3055\u3064","\u3066\u3044\u3057","\u3066\u3044\u305b\u3044","\u3066\u3044\u305f\u3044","\u3066\u3044\u3068\u3099","\u3066\u3044\u306d\u3044","\u3066\u3044\u3072\u3087\u3046","\u3066\u3044\u3078\u3093","\u3066\u3044\u307b\u3099\u3046","\u3066\u3046\u3061","\u3066\u304a\u304f\u308c","\u3066\u304d\u3068\u3046","\u3066\u304f\u3072\u3099","\u3066\u3099\u3053\u307b\u3099\u3053","\u3066\u3055\u304d\u3099\u3087\u3046","\u3066\u3055\u3051\u3099","\u3066\u3059\u308a","\u3066\u305d\u3046","\u3066\u3061\u304b\u3099\u3044","\u3066\u3061\u3087\u3046","\u3066\u3064\u304b\u3099\u304f","\u3066\u3064\u3064\u3099\u304d","\u3066\u3099\u3063\u306f\u309a","\u3066\u3064\u307b\u3099\u3046","\u3066\u3064\u3084","\u3066\u3099\u306c\u304b\u3048","\u3066\u306c\u304d","\u3066\u306c\u304f\u3099\u3044","\u3066\u306e\u3072\u3089","\u3066\u306f\u3044","\u3066\u3075\u3099\u304f\u308d","\u3066\u3075\u305f\u3099","\u3066\u307b\u3068\u3099\u304d","\u3066\u307b\u3093","\u3066\u307e\u3048","\u3066\u307e\u304d\u3059\u3099\u3057","\u3066\u307f\u3057\u3099\u304b","\u3066\u307f\u3084\u3051\u3099","\u3066\u3089\u3059","\u3066\u308c\u3072\u3099","\u3066\u308f\u3051","\u3066\u308f\u305f\u3057","\u3066\u3099\u3093\u3042\u3064","\u3066\u3093\u3044\u3093","\u3066\u3093\u304b\u3044","\u3066\u3093\u304d","\u3066\u3093\u304f\u3099","\u3066\u3093\u3051\u3093","\u3066\u3093\u3053\u3099\u304f","\u3066\u3093\u3055\u3044","\u3066\u3093\u3057","\u3066\u3093\u3059\u3046","\u3066\u3099\u3093\u3061","\u3066\u3093\u3066\u304d","\u3066\u3093\u3068\u3046","\u3066\u3093\u306a\u3044","\u3066\u3093\u3075\u309a\u3089","\u3066\u3093\u307b\u3099\u3046\u305f\u3099\u3044","\u3066\u3093\u3081\u3064","\u3066\u3093\u3089\u3093\u304b\u3044","\u3066\u3099\u3093\u308a\u3087\u304f","\u3066\u3099\u3093\u308f","\u3068\u3099\u3042\u3044","\u3068\u3044\u308c","\u3068\u3099\u3046\u304b\u3093","\u3068\u3046\u304d\u3085\u3046","\u3068\u3099\u3046\u304f\u3099","\u3068\u3046\u3057","\u3068\u3046\u3080\u304d\u3099","\u3068\u304a\u3044","\u3068\u304a\u304b","\u3068\u304a\u304f","\u3068\u304a\u3059","\u3068\u304a\u308b","\u3068\u304b\u3044","\u3068\u304b\u3059","\u3068\u304d\u304a\u308a","\u3068\u304d\u3068\u3099\u304d","\u3068\u304f\u3044","\u3068\u304f\u3057\u3085\u3046","\u3068\u304f\u3066\u3093","\u3068\u304f\u306b","\u3068\u304f\u3078\u3099\u3064","\u3068\u3051\u3044","\u3068\u3051\u308b","\u3068\u3053\u3084","\u3068\u3055\u304b","\u3068\u3057\u3087\u304b\u3093","\u3068\u305d\u3046","\u3068\u305f\u3093","\u3068\u3061\u3085\u3046","\u3068\u3063\u304d\u3085\u3046","\u3068\u3063\u304f\u3093","\u3068\u3064\u305b\u3099\u3093","\u3068\u3064\u306b\u3085\u3046","\u3068\u3068\u3099\u3051\u308b","\u3068\u3068\u306e\u3048\u308b","\u3068\u306a\u3044","\u3068\u306a\u3048\u308b","\u3068\u306a\u308a","\u3068\u306e\u3055\u307e","\u3068\u306f\u3099\u3059","\u3068\u3099\u3075\u3099\u304b\u3099\u308f","\u3068\u307b\u3046","\u3068\u307e\u308b","\u3068\u3081\u308b","\u3068\u3082\u305f\u3099\u3061","\u3068\u3082\u308b","\u3068\u3099\u3088\u3046\u3072\u3099","\u3068\u3089\u3048\u308b","\u3068\u3093\u304b\u3064","\u3068\u3099\u3093\u3075\u3099\u308a","\u306a\u3044\u304b\u304f","\u306a\u3044\u3053\u3046","\u306a\u3044\u3057\u3087","\u306a\u3044\u3059","\u306a\u3044\u305b\u3093","\u306a\u3044\u305d\u3046","\u306a\u304a\u3059","\u306a\u304b\u3099\u3044","\u306a\u304f\u3059","\u306a\u3051\u3099\u308b","\u306a\u3053\u3046\u3068\u3099","\u306a\u3055\u3051","\u306a\u305f\u3066\u3099\u3053\u3053","\u306a\u3063\u3068\u3046","\u306a\u3064\u3084\u3059\u307f","\u306a\u306a\u304a\u3057","\u306a\u306b\u3053\u3099\u3068","\u306a\u306b\u3082\u306e","\u306a\u306b\u308f","\u306a\u306e\u304b","\u306a\u3075\u305f\u3099","\u306a\u307e\u3044\u304d","\u306a\u307e\u3048","\u306a\u307e\u307f","\u306a\u307f\u305f\u3099","\u306a\u3081\u3089\u304b","\u306a\u3081\u308b","\u306a\u3084\u3080","\u306a\u3089\u3046","\u306a\u3089\u3072\u3099","\u306a\u3089\u3075\u3099","\u306a\u308c\u308b","\u306a\u308f\u3068\u3072\u3099","\u306a\u308f\u306f\u3099\u308a","\u306b\u3042\u3046","\u306b\u3044\u304b\u3099\u305f","\u306b\u3046\u3051","\u306b\u304a\u3044","\u306b\u304b\u3044","\u306b\u304b\u3099\u3066","\u306b\u304d\u3072\u3099","\u306b\u304f\u3057\u307f","\u306b\u304f\u307e\u3093","\u306b\u3051\u3099\u308b","\u306b\u3055\u3093\u304b\u305f\u3093\u305d","\u306b\u3057\u304d","\u306b\u305b\u3082\u306e","\u306b\u3061\u3057\u3099\u3087\u3046","\u306b\u3061\u3088\u3046\u3072\u3099","\u306b\u3063\u304b","\u306b\u3063\u304d","\u306b\u3063\u3051\u3044","\u306b\u3063\u3053\u3046","\u306b\u3063\u3055\u3093","\u306b\u3063\u3057\u3087\u304f","\u306b\u3063\u3059\u3046","\u306b\u3063\u305b\u304d","\u306b\u3063\u3066\u3044","\u306b\u306a\u3046","\u306b\u307b\u3093","\u306b\u307e\u3081","\u306b\u3082\u3064","\u306b\u3084\u308a","\u306b\u3085\u3046\u3044\u3093","\u306b\u308a\u3093\u3057\u3083","\u306b\u308f\u3068\u308a","\u306b\u3093\u3044","\u306b\u3093\u304b","\u306b\u3093\u304d","\u306b\u3093\u3051\u3099\u3093","\u306b\u3093\u3057\u304d","\u306b\u3093\u3059\u3099\u3046","\u306b\u3093\u305d\u3046","\u306b\u3093\u305f\u3044","\u306b\u3093\u3061","\u306b\u3093\u3066\u3044","\u306b\u3093\u306b\u304f","\u306b\u3093\u3075\u309a","\u306b\u3093\u307e\u308a","\u306b\u3093\u3080","\u306b\u3093\u3081\u3044","\u306b\u3093\u3088\u3046","\u306c\u3044\u304f\u304d\u3099","\u306c\u304b\u3059","\u306c\u304f\u3099\u3044\u3068\u308b","\u306c\u304f\u3099\u3046","\u306c\u304f\u3082\u308a","\u306c\u3059\u3080","\u306c\u307e\u3048\u3072\u3099","\u306c\u3081\u308a","\u306c\u3089\u3059","\u306c\u3093\u3061\u3083\u304f","\u306d\u3042\u3051\u3099","\u306d\u3044\u304d","\u306d\u3044\u308b","\u306d\u3044\u308d","\u306d\u304f\u3099\u305b","\u306d\u304f\u305f\u3044","\u306d\u304f\u3089","\u306d\u3053\u305b\u3099","\u306d\u3053\u3080","\u306d\u3055\u3051\u3099","\u306d\u3059\u3053\u3099\u3059","\u306d\u305d\u3078\u3099\u308b","\u306d\u305f\u3099\u3093","\u306d\u3064\u3044","\u306d\u3063\u3057\u3093","\u306d\u3064\u305d\u3099\u3046","\u306d\u3063\u305f\u3044\u304d\u3099\u3087","\u306d\u3075\u3099\u305d\u304f","\u306d\u3075\u305f\u3099","\u306d\u307b\u3099\u3046","\u306d\u307b\u308a\u306f\u307b\u308a","\u306d\u307e\u304d","\u306d\u307e\u308f\u3057","\u306d\u307f\u307f","\u306d\u3080\u3044","\u306d\u3080\u305f\u3044","\u306d\u3082\u3068","\u306d\u3089\u3046","\u306d\u308f\u3055\u3099","\u306d\u3093\u3044\u308a","\u306d\u3093\u304a\u3057","\u306d\u3093\u304b\u3093","\u306d\u3093\u304d\u3093","\u306d\u3093\u304f\u3099","\u306d\u3093\u3055\u3099","\u306d\u3093\u3057","\u306d\u3093\u3061\u3083\u304f","\u306d\u3093\u3068\u3099","\u306d\u3093\u3072\u309a","\u306d\u3093\u3075\u3099\u3064","\u306d\u3093\u307e\u3064","\u306d\u3093\u308a\u3087\u3046","\u306d\u3093\u308c\u3044","\u306e\u3044\u3059\u3099","\u306e\u304a\u3064\u3099\u307e","\u306e\u304b\u3099\u3059","\u306e\u304d\u306a\u307f","\u306e\u3053\u304d\u3099\u308a","\u306e\u3053\u3059","\u306e\u3053\u308b","\u306e\u305b\u308b","\u306e\u305d\u3099\u304f","\u306e\u305d\u3099\u3080","\u306e\u305f\u307e\u3046","\u306e\u3061\u307b\u3068\u3099","\u306e\u3063\u304f","\u306e\u306f\u3099\u3059","\u306e\u306f\u3089","\u306e\u3078\u3099\u308b","\u306e\u307b\u3099\u308b","\u306e\u307f\u3082\u306e","\u306e\u3084\u307e","\u306e\u3089\u3044\u306c","\u306e\u3089\u306d\u3053","\u306e\u308a\u3082\u306e","\u306e\u308a\u3086\u304d","\u306e\u308c\u3093","\u306e\u3093\u304d","\u306f\u3099\u3042\u3044","\u306f\u3042\u304f","\u306f\u3099\u3042\u3055\u3093","\u306f\u3099\u3044\u304b","\u306f\u3099\u3044\u304f","\u306f\u3044\u3051\u3093","\u306f\u3044\u3053\u3099","\u306f\u3044\u3057\u3093","\u306f\u3044\u3059\u3044","\u306f\u3044\u305b\u3093","\u306f\u3044\u305d\u3046","\u306f\u3044\u3061","\u306f\u3099\u3044\u306f\u3099\u3044","\u306f\u3044\u308c\u3064","\u306f\u3048\u308b","\u306f\u304a\u308b","\u306f\u304b\u3044","\u306f\u3099\u304b\u308a","\u306f\u304b\u308b","\u306f\u304f\u3057\u3085","\u306f\u3051\u3093","\u306f\u3053\u3075\u3099","\u306f\u3055\u307f","\u306f\u3055\u3093","\u306f\u3057\u3053\u3099","\u306f\u3099\u3057\u3087","\u306f\u3057\u308b","\u306f\u305b\u308b","\u306f\u309a\u305d\u3053\u3093","\u306f\u305d\u3093","\u306f\u305f\u3093","\u306f\u3061\u307f\u3064","\u306f\u3064\u304a\u3093","\u306f\u3063\u304b\u304f","\u306f\u3064\u3099\u304d","\u306f\u3063\u304d\u308a","\u306f\u3063\u304f\u3064","\u306f\u3063\u3051\u3093","\u306f\u3063\u3053\u3046","\u306f\u3063\u3055\u3093","\u306f\u3063\u3057\u3093","\u306f\u3063\u305f\u3064","\u306f\u3063\u3061\u3085\u3046","\u306f\u3063\u3066\u3093","\u306f\u3063\u3072\u309a\u3087\u3046","\u306f\u3063\u307b\u309a\u3046","\u306f\u306a\u3059","\u306f\u306a\u3072\u3099","\u306f\u306b\u304b\u3080","\u306f\u3075\u3099\u3089\u3057","\u306f\u307f\u304b\u3099\u304d","\u306f\u3080\u304b\u3046","\u306f\u3081\u3064","\u306f\u3084\u3044","\u306f\u3084\u3057","\u306f\u3089\u3046","\u306f\u308d\u3046\u3043\u3093","\u306f\u308f\u3044","\u306f\u3093\u3044","\u306f\u3093\u3048\u3044","\u306f\u3093\u304a\u3093","\u306f\u3093\u304b\u304f","\u306f\u3093\u304d\u3087\u3046","\u306f\u3099\u3093\u304f\u3099\u307f","\u306f\u3093\u3053","\u306f\u3093\u3057\u3083","\u306f\u3093\u3059\u3046","\u306f\u3093\u305f\u3099\u3093","\u306f\u309a\u3093\u3061","\u306f\u309a\u3093\u3064","\u306f\u3093\u3066\u3044","\u306f\u3093\u3068\u3057","\u306f\u3093\u306e\u3046","\u306f\u3093\u306f\u309a","\u306f\u3093\u3075\u3099\u3093","\u306f\u3093\u3078\u309a\u3093","\u306f\u3093\u307b\u3099\u3046\u304d","\u306f\u3093\u3081\u3044","\u306f\u3093\u3089\u3093","\u306f\u3093\u308d\u3093","\u3072\u3044\u304d","\u3072\u3046\u3093","\u3072\u3048\u308b","\u3072\u304b\u304f","\u3072\u304b\u308a","\u3072\u304b\u308b","\u3072\u304b\u3093","\u3072\u304f\u3044","\u3072\u3051\u3064","\u3072\u3053\u3046\u304d","\u3072\u3053\u304f","\u3072\u3055\u3044","\u3072\u3055\u3057\u3075\u3099\u308a","\u3072\u3055\u3093","\u3072\u3099\u3057\u3099\u3085\u3064\u304b\u3093","\u3072\u3057\u3087","\u3072\u305d\u304b","\u3072\u305d\u3080","\u3072\u305f\u3080\u304d","\u3072\u305f\u3099\u308a","\u3072\u305f\u308b","\u3072\u3064\u304d\u3099","\u3072\u3063\u3053\u3057","\u3072\u3063\u3057","\u3072\u3064\u3057\u3099\u3085\u3072\u3093","\u3072\u3063\u3059","\u3072\u3064\u305b\u3099\u3093","\u3072\u309a\u3063\u305f\u308a","\u3072\u309a\u3063\u3061\u308a","\u3072\u3064\u3088\u3046","\u3072\u3066\u3044","\u3072\u3068\u3053\u3099\u307f","\u3072\u306a\u307e\u3064\u308a","\u3072\u306a\u3093","\u3072\u306d\u308b","\u3072\u306f\u3093","\u3072\u3072\u3099\u304f","\u3072\u3072\u3087\u3046","\u3072\u307b\u3046","\u3072\u307e\u308f\u308a","\u3072\u307e\u3093","\u3072\u307f\u3064","\u3072\u3081\u3044","\u3072\u3081\u3057\u3099\u3057","\u3072\u3084\u3051","\u3072\u3084\u3059","\u3072\u3088\u3046","\u3072\u3099\u3087\u3046\u304d","\u3072\u3089\u304b\u3099\u306a","\u3072\u3089\u304f","\u3072\u308a\u3064","\u3072\u308a\u3087\u3046","\u3072\u308b\u307e","\u3072\u308b\u3084\u3059\u307f","\u3072\u308c\u3044","\u3072\u308d\u3044","\u3072\u308d\u3046","\u3072\u308d\u304d","\u3072\u308d\u3086\u304d","\u3072\u3093\u304b\u304f","\u3072\u3093\u3051\u3064","\u3072\u3093\u3053\u3093","\u3072\u3093\u3057\u3085","\u3072\u3093\u305d\u3046","\u3072\u309a\u3093\u3061","\u3072\u3093\u306f\u309a\u3093","\u3072\u3099\u3093\u307b\u3099\u3046","\u3075\u3042\u3093","\u3075\u3044\u3046\u3061","\u3075\u3046\u3051\u3044","\u3075\u3046\u305b\u3093","\u3075\u309a\u3046\u305f\u308d\u3046","\u3075\u3046\u3068\u3046","\u3075\u3046\u3075","\u3075\u3048\u308b","\u3075\u304a\u3093","\u3075\u304b\u3044","\u3075\u304d\u3093","\u3075\u304f\u3055\u3099\u3064","\u3075\u304f\u3075\u3099\u304f\u308d","\u3075\u3053\u3046","\u3075\u3055\u3044","\u3075\u3057\u304d\u3099","\u3075\u3057\u3099\u307f","\u3075\u3059\u307e","\u3075\u305b\u3044","\u3075\u305b\u304f\u3099","\u3075\u305d\u304f","\u3075\u3099\u305f\u306b\u304f","\u3075\u305f\u3093","\u3075\u3061\u3087\u3046","\u3075\u3064\u3046","\u3075\u3064\u304b","\u3075\u3063\u304b\u3064","\u3075\u3063\u304d","\u3075\u3063\u3053\u304f","\u3075\u3099\u3068\u3099\u3046","\u3075\u3068\u308b","\u3075\u3068\u3093","\u3075\u306e\u3046","\u3075\u306f\u3044","\u3075\u3072\u3087\u3046","\u3075\u3078\u3093","\u3075\u307e\u3093","\u3075\u307f\u3093","\u3075\u3081\u3064","\u3075\u3081\u3093","\u3075\u3088\u3046","\u3075\u308a\u3053","\u3075\u308a\u308b","\u3075\u308b\u3044","\u3075\u3093\u3044\u304d","\u3075\u3099\u3093\u304b\u3099\u304f","\u3075\u3099\u3093\u304f\u3099","\u3075\u3093\u3057\u3064","\u3075\u3099\u3093\u305b\u304d","\u3075\u3093\u305d\u3046","\u3075\u3099\u3093\u307b\u309a\u3046","\u3078\u3044\u3042\u3093","\u3078\u3044\u304a\u3093","\u3078\u3044\u304b\u3099\u3044","\u3078\u3044\u304d","\u3078\u3044\u3051\u3099\u3093","\u3078\u3044\u3053\u3046","\u3078\u3044\u3055","\u3078\u3044\u3057\u3083","\u3078\u3044\u305b\u3064","\u3078\u3044\u305d","\u3078\u3044\u305f\u304f","\u3078\u3044\u3066\u3093","\u3078\u3044\u306d\u3064","\u3078\u3044\u308f","\u3078\u304d\u304b\u3099","\u3078\u3053\u3080","\u3078\u3099\u306b\u3044\u308d","\u3078\u3099\u306b\u3057\u3087\u3046\u304b\u3099","\u3078\u3089\u3059","\u3078\u3093\u304b\u3093","\u3078\u3099\u3093\u304d\u3087\u3046","\u3078\u3099\u3093\u3053\u3099\u3057","\u3078\u3093\u3055\u3044","\u3078\u3093\u305f\u3044","\u3078\u3099\u3093\u308a","\u307b\u3042\u3093","\u307b\u3044\u304f","\u307b\u3099\u3046\u304d\u3099\u3087","\u307b\u3046\u3053\u304f","\u307b\u3046\u305d\u3046","\u307b\u3046\u307b\u3046","\u307b\u3046\u3082\u3093","\u307b\u3046\u308a\u3064","\u307b\u3048\u308b","\u307b\u304a\u3093","\u307b\u304b\u3093","\u307b\u304d\u3087\u3046","\u307b\u3099\u304d\u3093","\u307b\u304f\u308d","\u307b\u3051\u3064","\u307b\u3051\u3093","\u307b\u3053\u3046","\u307b\u3053\u308b","\u307b\u3057\u3044","\u307b\u3057\u3064","\u307b\u3057\u3085","\u307b\u3057\u3087\u3046","\u307b\u305b\u3044","\u307b\u305d\u3044","\u307b\u305d\u304f","\u307b\u305f\u3066","\u307b\u305f\u308b","\u307b\u309a\u3061\u3075\u3099\u304f\u308d","\u307b\u3063\u304d\u3087\u304f","\u307b\u3063\u3055","\u307b\u3063\u305f\u3093","\u307b\u3068\u3093\u3068\u3099","\u307b\u3081\u308b","\u307b\u3093\u3044","\u307b\u3093\u304d","\u307b\u3093\u3051","\u307b\u3093\u3057\u3064","\u307b\u3093\u3084\u304f","\u307e\u3044\u306b\u3061","\u307e\u304b\u3044","\u307e\u304b\u305b\u308b","\u307e\u304b\u3099\u308b","\u307e\u3051\u308b","\u307e\u3053\u3068","\u307e\u3055\u3064","\u307e\u3057\u3099\u3081","\u307e\u3059\u304f","\u307e\u305b\u3099\u308b","\u307e\u3064\u308a","\u307e\u3068\u3081","\u307e\u306a\u3075\u3099","\u307e\u306c\u3051","\u307e\u306d\u304f","\u307e\u307b\u3046","\u307e\u3082\u308b","\u307e\u3086\u3051\u3099","\u307e\u3088\u3046","\u307e\u308d\u3084\u304b","\u307e\u308f\u3059","\u307e\u308f\u308a","\u307e\u308f\u308b","\u307e\u3093\u304b\u3099","\u307e\u3093\u304d\u3064","\u307e\u3093\u305d\u3099\u304f","\u307e\u3093\u306a\u304b","\u307f\u3044\u3089","\u307f\u3046\u3061","\u307f\u3048\u308b","\u307f\u304b\u3099\u304f","\u307f\u304b\u305f","\u307f\u304b\u3093","\u307f\u3051\u3093","\u307f\u3053\u3093","\u307f\u3057\u3099\u304b\u3044","\u307f\u3059\u3044","\u307f\u3059\u3048\u308b","\u307f\u305b\u308b","\u307f\u3063\u304b","\u307f\u3064\u304b\u308b","\u307f\u3064\u3051\u308b","\u307f\u3066\u3044","\u307f\u3068\u3081\u308b","\u307f\u306a\u3068","\u307f\u306a\u307f\u304b\u3055\u3044","\u307f\u306d\u3089\u308b","\u307f\u306e\u3046","\u307f\u306e\u304b\u3099\u3059","\u307f\u307b\u3093","\u307f\u3082\u3068","\u307f\u3084\u3051\u3099","\u307f\u3089\u3044","\u307f\u308a\u3087\u304f","\u307f\u308f\u304f","\u307f\u3093\u304b","\u307f\u3093\u305d\u3099\u304f","\u3080\u3044\u304b","\u3080\u3048\u304d","\u3080\u3048\u3093","\u3080\u304b\u3044","\u3080\u304b\u3046","\u3080\u304b\u3048","\u3080\u304b\u3057","\u3080\u304d\u3099\u3061\u3083","\u3080\u3051\u308b","\u3080\u3051\u3099\u3093","\u3080\u3055\u307b\u3099\u308b","\u3080\u3057\u3042\u3064\u3044","\u3080\u3057\u306f\u3099","\u3080\u3057\u3099\u3085\u3093","\u3080\u3057\u308d","\u3080\u3059\u3046","\u3080\u3059\u3053","\u3080\u3059\u3075\u3099","\u3080\u3059\u3081","\u3080\u305b\u308b","\u3080\u305b\u3093","\u3080\u3061\u3085\u3046","\u3080\u306a\u3057\u3044","\u3080\u306e\u3046","\u3080\u3084\u307f","\u3080\u3088\u3046","\u3080\u3089\u3055\u304d","\u3080\u308a\u3087\u3046","\u3080\u308d\u3093","\u3081\u3044\u3042\u3093","\u3081\u3044\u3046\u3093","\u3081\u3044\u3048\u3093","\u3081\u3044\u304b\u304f","\u3081\u3044\u304d\u3087\u304f","\u3081\u3044\u3055\u3044","\u3081\u3044\u3057","\u3081\u3044\u305d\u3046","\u3081\u3044\u3075\u3099\u3064","\u3081\u3044\u308c\u3044","\u3081\u3044\u308f\u304f","\u3081\u304f\u3099\u307e\u308c\u308b","\u3081\u3055\u3099\u3059","\u3081\u3057\u305f","\u3081\u3059\u3099\u3089\u3057\u3044","\u3081\u305f\u3099\u3064","\u3081\u307e\u3044","\u3081\u3084\u3059","\u3081\u3093\u304d\u3087","\u3081\u3093\u305b\u304d","\u3081\u3093\u3068\u3099\u3046","\u3082\u3046\u3057\u3042\u3051\u3099\u308b","\u3082\u3046\u3068\u3099\u3046\u3051\u3093","\u3082\u3048\u308b","\u3082\u304f\u3057","\u3082\u304f\u3066\u304d","\u3082\u304f\u3088\u3046\u3072\u3099","\u3082\u3061\u308d\u3093","\u3082\u3068\u3099\u308b","\u3082\u3089\u3046","\u3082\u3093\u304f","\u3082\u3093\u305f\u3099\u3044","\u3084\u304a\u3084","\u3084\u3051\u308b","\u3084\u3055\u3044","\u3084\u3055\u3057\u3044","\u3084\u3059\u3044","\u3084\u3059\u305f\u308d\u3046","\u3084\u3059\u307f","\u3084\u305b\u308b","\u3084\u305d\u3046","\u3084\u305f\u3044","\u3084\u3061\u3093","\u3084\u3063\u3068","\u3084\u3063\u306f\u309a\u308a","\u3084\u3075\u3099\u308b","\u3084\u3081\u308b","\u3084\u3084\u3053\u3057\u3044","\u3084\u3088\u3044","\u3084\u308f\u3089\u304b\u3044","\u3086\u3046\u304d","\u3086\u3046\u3072\u3099\u3093\u304d\u3087\u304f","\u3086\u3046\u3078\u3099","\u3086\u3046\u3081\u3044","\u3086\u3051\u3064","\u3086\u3057\u3085\u3064","\u3086\u305b\u3093","\u3086\u305d\u3046","\u3086\u305f\u304b","\u3086\u3061\u3083\u304f","\u3086\u3066\u3099\u308b","\u3086\u306b\u3085\u3046","\u3086\u3072\u3099\u308f","\u3086\u3089\u3044","\u3086\u308c\u308b","\u3088\u3046\u3044","\u3088\u3046\u304b","\u3088\u3046\u304d\u3085\u3046","\u3088\u3046\u3057\u3099","\u3088\u3046\u3059","\u3088\u3046\u3061\u3048\u3093","\u3088\u304b\u305b\u3099","\u3088\u304b\u3093","\u3088\u304d\u3093","\u3088\u304f\u305b\u3044","\u3088\u304f\u307b\u3099\u3046","\u3088\u3051\u3044","\u3088\u3053\u3099\u308c\u308b","\u3088\u3055\u3093","\u3088\u3057\u3085\u3046","\u3088\u305d\u3046","\u3088\u305d\u304f","\u3088\u3063\u304b","\u3088\u3066\u3044","\u3088\u3068\u3099\u304b\u3099\u308f\u304f","\u3088\u306d\u3064","\u3088\u3084\u304f","\u3088\u3086\u3046","\u3088\u308d\u3053\u3075\u3099","\u3088\u308d\u3057\u3044","\u3089\u3044\u3046","\u3089\u304f\u304b\u3099\u304d","\u3089\u304f\u3053\u3099","\u3089\u304f\u3055\u3064","\u3089\u304f\u305f\u3099","\u3089\u3057\u3093\u306f\u3099\u3093","\u3089\u305b\u3093","\u3089\u305d\u3099\u304f","\u3089\u305f\u3044","\u3089\u3063\u304b","\u3089\u308c\u3064","\u308a\u3048\u304d","\u308a\u304b\u3044","\u308a\u304d\u3055\u304f","\u308a\u304d\u305b\u3064","\u308a\u304f\u304f\u3099\u3093","\u308a\u304f\u3064","\u308a\u3051\u3093","\u308a\u3053\u3046","\u308a\u305b\u3044","\u308a\u305d\u3046","\u308a\u305d\u304f","\u308a\u3066\u3093","\u308a\u306d\u3093","\u308a\u3086\u3046","\u308a\u3085\u3046\u304b\u3099\u304f","\u308a\u3088\u3046","\u308a\u3087\u3046\u308a","\u308a\u3087\u304b\u3093","\u308a\u3087\u304f\u3061\u3083","\u308a\u3087\u3053\u3046","\u308a\u308a\u304f","\u308a\u308c\u304d","\u308a\u308d\u3093","\u308a\u3093\u3053\u3099","\u308b\u3044\u3051\u3044","\u308b\u3044\u3055\u3044","\u308b\u3044\u3057\u3099","\u308b\u3044\u305b\u304d","\u308b\u3059\u306f\u3099\u3093","\u308b\u308a\u304b\u3099\u308f\u3089","\u308c\u3044\u304b\u3093","\u308c\u3044\u304d\u3099","\u308c\u3044\u305b\u3044","\u308c\u3044\u305d\u3099\u3046\u3053","\u308c\u3044\u3068\u3046","\u308c\u3044\u307b\u3099\u3046","\u308c\u304d\u3057","\u308c\u304d\u305f\u3099\u3044","\u308c\u3093\u3042\u3044","\u308c\u3093\u3051\u3044","\u308c\u3093\u3053\u3093","\u308c\u3093\u3055\u3044","\u308c\u3093\u3057\u3085\u3046","\u308c\u3093\u305d\u3099\u304f","\u308c\u3093\u3089\u304f","\u308d\u3046\u304b","\u308d\u3046\u3053\u3099","\u308d\u3046\u3057\u3099\u3093","\u308d\u3046\u305d\u304f","\u308d\u304f\u304b\u3099","\u308d\u3053\u3064","\u308d\u3057\u3099\u3046\u3089","\u308d\u3057\u3085\u3064","\u308d\u305b\u3093","\u308d\u3066\u3093","\u308d\u3081\u3093","\u308d\u308c\u3064","\u308d\u3093\u304d\u3099","\u308d\u3093\u306f\u309a","\u308d\u3093\u3075\u3099\u3093","\u308d\u3093\u308a","\u308f\u304b\u3059","\u308f\u304b\u3081","\u308f\u304b\u3084\u307e","\u308f\u304b\u308c\u308b","\u308f\u3057\u3064","\u308f\u3057\u3099\u307e\u3057","\u308f\u3059\u308c\u3082\u306e","\u308f\u3089\u3046","\u308f\u308c\u308b"]},function(e){e.exports=["abaco","abbaglio","abbinato","abete","abisso","abolire","abrasivo","abrogato","accadere","accenno","accusato","acetone","achille","acido","acqua","acre","acrilico","acrobata","acuto","adagio","addebito","addome","adeguato","aderire","adipe","adottare","adulare","affabile","affetto","affisso","affranto","aforisma","afoso","africano","agave","agente","agevole","aggancio","agire","agitare","agonismo","agricolo","agrumeto","aguzzo","alabarda","alato","albatro","alberato","albo","albume","alce","alcolico","alettone","alfa","algebra","aliante","alibi","alimento","allagato","allegro","allievo","allodola","allusivo","almeno","alogeno","alpaca","alpestre","altalena","alterno","alticcio","altrove","alunno","alveolo","alzare","amalgama","amanita","amarena","ambito","ambrato","ameba","america","ametista","amico","ammasso","ammenda","ammirare","ammonito","amore","ampio","ampliare","amuleto","anacardo","anagrafe","analista","anarchia","anatra","anca","ancella","ancora","andare","andrea","anello","angelo","angolare","angusto","anima","annegare","annidato","anno","annuncio","anonimo","anticipo","anzi","apatico","apertura","apode","apparire","appetito","appoggio","approdo","appunto","aprile","arabica","arachide","aragosta","araldica","arancio","aratura","arazzo","arbitro","archivio","ardito","arenile","argento","argine","arguto","aria","armonia","arnese","arredato","arringa","arrosto","arsenico","arso","artefice","arzillo","asciutto","ascolto","asepsi","asettico","asfalto","asino","asola","aspirato","aspro","assaggio","asse","assoluto","assurdo","asta","astenuto","astice","astratto","atavico","ateismo","atomico","atono","attesa","attivare","attorno","attrito","attuale","ausilio","austria","autista","autonomo","autunno","avanzato","avere","avvenire","avviso","avvolgere","azione","azoto","azzimo","azzurro","babele","baccano","bacino","baco","badessa","badilata","bagnato","baita","balcone","baldo","balena","ballata","balzano","bambino","bandire","baraonda","barbaro","barca","baritono","barlume","barocco","basilico","basso","batosta","battuto","baule","bava","bavosa","becco","beffa","belgio","belva","benda","benevole","benigno","benzina","bere","berlina","beta","bibita","bici","bidone","bifido","biga","bilancia","bimbo","binocolo","biologo","bipede","bipolare","birbante","birra","biscotto","bisesto","bisnonno","bisonte","bisturi","bizzarro","blando","blatta","bollito","bonifico","bordo","bosco","botanico","bottino","bozzolo","braccio","bradipo","brama","branca","bravura","bretella","brevetto","brezza","briglia","brillante","brindare","broccolo","brodo","bronzina","brullo","bruno","bubbone","buca","budino","buffone","buio","bulbo","buono","burlone","burrasca","bussola","busta","cadetto","caduco","calamaro","calcolo","calesse","calibro","calmo","caloria","cambusa","camerata","camicia","cammino","camola","campale","canapa","candela","cane","canino","canotto","cantina","capace","capello","capitolo","capogiro","cappero","capra","capsula","carapace","carcassa","cardo","carisma","carovana","carretto","cartolina","casaccio","cascata","caserma","caso","cassone","castello","casuale","catasta","catena","catrame","cauto","cavillo","cedibile","cedrata","cefalo","celebre","cellulare","cena","cenone","centesimo","ceramica","cercare","certo","cerume","cervello","cesoia","cespo","ceto","chela","chiaro","chicca","chiedere","chimera","china","chirurgo","chitarra","ciao","ciclismo","cifrare","cigno","cilindro","ciottolo","circa","cirrosi","citrico","cittadino","ciuffo","civetta","civile","classico","clinica","cloro","cocco","codardo","codice","coerente","cognome","collare","colmato","colore","colposo","coltivato","colza","coma","cometa","commando","comodo","computer","comune","conciso","condurre","conferma","congelare","coniuge","connesso","conoscere","consumo","continuo","convegno","coperto","copione","coppia","copricapo","corazza","cordata","coricato","cornice","corolla","corpo","corredo","corsia","cortese","cosmico","costante","cottura","covato","cratere","cravatta","creato","credere","cremoso","crescita","creta","criceto","crinale","crisi","critico","croce","cronaca","crostata","cruciale","crusca","cucire","cuculo","cugino","cullato","cupola","curatore","cursore","curvo","cuscino","custode","dado","daino","dalmata","damerino","daniela","dannoso","danzare","datato","davanti","davvero","debutto","decennio","deciso","declino","decollo","decreto","dedicato","definito","deforme","degno","delegare","delfino","delirio","delta","demenza","denotato","dentro","deposito","derapata","derivare","deroga","descritto","deserto","desiderio","desumere","detersivo","devoto","diametro","dicembre","diedro","difeso","diffuso","digerire","digitale","diluvio","dinamico","dinnanzi","dipinto","diploma","dipolo","diradare","dire","dirotto","dirupo","disagio","discreto","disfare","disgelo","disposto","distanza","disumano","dito","divano","divelto","dividere","divorato","doblone","docente","doganale","dogma","dolce","domato","domenica","dominare","dondolo","dono","dormire","dote","dottore","dovuto","dozzina","drago","druido","dubbio","dubitare","ducale","duna","duomo","duplice","duraturo","ebano","eccesso","ecco","eclissi","economia","edera","edicola","edile","editoria","educare","egemonia","egli","egoismo","egregio","elaborato","elargire","elegante","elencato","eletto","elevare","elfico","elica","elmo","elsa","eluso","emanato","emblema","emesso","emiro","emotivo","emozione","empirico","emulo","endemico","enduro","energia","enfasi","enoteca","entrare","enzima","epatite","epilogo","episodio","epocale","eppure","equatore","erario","erba","erboso","erede","eremita","erigere","ermetico","eroe","erosivo","errante","esagono","esame","esanime","esaudire","esca","esempio","esercito","esibito","esigente","esistere","esito","esofago","esortato","esoso","espanso","espresso","essenza","esso","esteso","estimare","estonia","estroso","esultare","etilico","etnico","etrusco","etto","euclideo","europa","evaso","evidenza","evitato","evoluto","evviva","fabbrica","faccenda","fachiro","falco","famiglia","fanale","fanfara","fango","fantasma","fare","farfalla","farinoso","farmaco","fascia","fastoso","fasullo","faticare","fato","favoloso","febbre","fecola","fede","fegato","felpa","feltro","femmina","fendere","fenomeno","fermento","ferro","fertile","fessura","festivo","fetta","feudo","fiaba","fiducia","fifa","figurato","filo","finanza","finestra","finire","fiore","fiscale","fisico","fiume","flacone","flamenco","flebo","flemma","florido","fluente","fluoro","fobico","focaccia","focoso","foderato","foglio","folata","folclore","folgore","fondente","fonetico","fonia","fontana","forbito","forchetta","foresta","formica","fornaio","foro","fortezza","forzare","fosfato","fosso","fracasso","frana","frassino","fratello","freccetta","frenata","fresco","frigo","frollino","fronde","frugale","frutta","fucilata","fucsia","fuggente","fulmine","fulvo","fumante","fumetto","fumoso","fune","funzione","fuoco","furbo","furgone","furore","fuso","futile","gabbiano","gaffe","galateo","gallina","galoppo","gambero","gamma","garanzia","garbo","garofano","garzone","gasdotto","gasolio","gastrico","gatto","gaudio","gazebo","gazzella","geco","gelatina","gelso","gemello","gemmato","gene","genitore","gennaio","genotipo","gergo","ghepardo","ghiaccio","ghisa","giallo","gilda","ginepro","giocare","gioiello","giorno","giove","girato","girone","gittata","giudizio","giurato","giusto","globulo","glutine","gnomo","gobba","golf","gomito","gommone","gonfio","gonna","governo","gracile","grado","grafico","grammo","grande","grattare","gravoso","grazia","greca","gregge","grifone","grigio","grinza","grotta","gruppo","guadagno","guaio","guanto","guardare","gufo","guidare","ibernato","icona","identico","idillio","idolo","idra","idrico","idrogeno","igiene","ignaro","ignorato","ilare","illeso","illogico","illudere","imballo","imbevuto","imbocco","imbuto","immane","immerso","immolato","impacco","impeto","impiego","importo","impronta","inalare","inarcare","inattivo","incanto","incendio","inchino","incisivo","incluso","incontro","incrocio","incubo","indagine","india","indole","inedito","infatti","infilare","inflitto","ingaggio","ingegno","inglese","ingordo","ingrosso","innesco","inodore","inoltrare","inondato","insano","insetto","insieme","insonnia","insulina","intasato","intero","intonaco","intuito","inumidire","invalido","invece","invito","iperbole","ipnotico","ipotesi","ippica","iride","irlanda","ironico","irrigato","irrorare","isolato","isotopo","isterico","istituto","istrice","italia","iterare","labbro","labirinto","lacca","lacerato","lacrima","lacuna","laddove","lago","lampo","lancetta","lanterna","lardoso","larga","laringe","lastra","latenza","latino","lattuga","lavagna","lavoro","legale","leggero","lembo","lentezza","lenza","leone","lepre","lesivo","lessato","lesto","letterale","leva","levigato","libero","lido","lievito","lilla","limatura","limitare","limpido","lineare","lingua","liquido","lira","lirica","lisca","lite","litigio","livrea","locanda","lode","logica","lombare","londra","longevo","loquace","lorenzo","loto","lotteria","luce","lucidato","lumaca","luminoso","lungo","lupo","luppolo","lusinga","lusso","lutto","macabro","macchina","macero","macinato","madama","magico","maglia","magnete","magro","maiolica","malafede","malgrado","malinteso","malsano","malto","malumore","mana","mancia","mandorla","mangiare","manifesto","mannaro","manovra","mansarda","mantide","manubrio","mappa","maratona","marcire","maretta","marmo","marsupio","maschera","massaia","mastino","materasso","matricola","mattone","maturo","mazurca","meandro","meccanico","mecenate","medesimo","meditare","mega","melassa","melis","melodia","meninge","meno","mensola","mercurio","merenda","merlo","meschino","mese","messere","mestolo","metallo","metodo","mettere","miagolare","mica","micelio","michele","microbo","midollo","miele","migliore","milano","milite","mimosa","minerale","mini","minore","mirino","mirtillo","miscela","missiva","misto","misurare","mitezza","mitigare","mitra","mittente","mnemonico","modello","modifica","modulo","mogano","mogio","mole","molosso","monastero","monco","mondina","monetario","monile","monotono","monsone","montato","monviso","mora","mordere","morsicato","mostro","motivato","motosega","motto","movenza","movimento","mozzo","mucca","mucosa","muffa","mughetto","mugnaio","mulatto","mulinello","multiplo","mummia","munto","muovere","murale","musa","muscolo","musica","mutevole","muto","nababbo","nafta","nanometro","narciso","narice","narrato","nascere","nastrare","naturale","nautica","naviglio","nebulosa","necrosi","negativo","negozio","nemmeno","neofita","neretto","nervo","nessuno","nettuno","neutrale","neve","nevrotico","nicchia","ninfa","nitido","nobile","nocivo","nodo","nome","nomina","nordico","normale","norvegese","nostrano","notare","notizia","notturno","novella","nucleo","nulla","numero","nuovo","nutrire","nuvola","nuziale","oasi","obbedire","obbligo","obelisco","oblio","obolo","obsoleto","occasione","occhio","occidente","occorrere","occultare","ocra","oculato","odierno","odorare","offerta","offrire","offuscato","oggetto","oggi","ognuno","olandese","olfatto","oliato","oliva","ologramma","oltre","omaggio","ombelico","ombra","omega","omissione","ondoso","onere","onice","onnivoro","onorevole","onta","operato","opinione","opposto","oracolo","orafo","ordine","orecchino","orefice","orfano","organico","origine","orizzonte","orma","ormeggio","ornativo","orologio","orrendo","orribile","ortensia","ortica","orzata","orzo","osare","oscurare","osmosi","ospedale","ospite","ossa","ossidare","ostacolo","oste","otite","otre","ottagono","ottimo","ottobre","ovale","ovest","ovino","oviparo","ovocito","ovunque","ovviare","ozio","pacchetto","pace","pacifico","padella","padrone","paese","paga","pagina","palazzina","palesare","pallido","palo","palude","pandoro","pannello","paolo","paonazzo","paprica","parabola","parcella","parere","pargolo","pari","parlato","parola","partire","parvenza","parziale","passivo","pasticca","patacca","patologia","pattume","pavone","peccato","pedalare","pedonale","peggio","peloso","penare","pendice","penisola","pennuto","penombra","pensare","pentola","pepe","pepita","perbene","percorso","perdonato","perforare","pergamena","periodo","permesso","perno","perplesso","persuaso","pertugio","pervaso","pesatore","pesista","peso","pestifero","petalo","pettine","petulante","pezzo","piacere","pianta","piattino","piccino","picozza","piega","pietra","piffero","pigiama","pigolio","pigro","pila","pilifero","pillola","pilota","pimpante","pineta","pinna","pinolo","pioggia","piombo","piramide","piretico","pirite","pirolisi","pitone","pizzico","placebo","planare","plasma","platano","plenario","pochezza","poderoso","podismo","poesia","poggiare","polenta","poligono","pollice","polmonite","polpetta","polso","poltrona","polvere","pomice","pomodoro","ponte","popoloso","porfido","poroso","porpora","porre","portata","posa","positivo","possesso","postulato","potassio","potere","pranzo","prassi","pratica","precluso","predica","prefisso","pregiato","prelievo","premere","prenotare","preparato","presenza","pretesto","prevalso","prima","principe","privato","problema","procura","produrre","profumo","progetto","prolunga","promessa","pronome","proposta","proroga","proteso","prova","prudente","prugna","prurito","psiche","pubblico","pudica","pugilato","pugno","pulce","pulito","pulsante","puntare","pupazzo","pupilla","puro","quadro","qualcosa","quasi","querela","quota","raccolto","raddoppio","radicale","radunato","raffica","ragazzo","ragione","ragno","ramarro","ramingo","ramo","randagio","rantolare","rapato","rapina","rappreso","rasatura","raschiato","rasente","rassegna","rastrello","rata","ravveduto","reale","recepire","recinto","recluta","recondito","recupero","reddito","redimere","regalato","registro","regola","regresso","relazione","remare","remoto","renna","replica","reprimere","reputare","resa","residente","responso","restauro","rete","retina","retorica","rettifica","revocato","riassunto","ribadire","ribelle","ribrezzo","ricarica","ricco","ricevere","riciclato","ricordo","ricreduto","ridicolo","ridurre","rifasare","riflesso","riforma","rifugio","rigare","rigettato","righello","rilassato","rilevato","rimanere","rimbalzo","rimedio","rimorchio","rinascita","rincaro","rinforzo","rinnovo","rinomato","rinsavito","rintocco","rinuncia","rinvenire","riparato","ripetuto","ripieno","riportare","ripresa","ripulire","risata","rischio","riserva","risibile","riso","rispetto","ristoro","risultato","risvolto","ritardo","ritegno","ritmico","ritrovo","riunione","riva","riverso","rivincita","rivolto","rizoma","roba","robotico","robusto","roccia","roco","rodaggio","rodere","roditore","rogito","rollio","romantico","rompere","ronzio","rosolare","rospo","rotante","rotondo","rotula","rovescio","rubizzo","rubrica","ruga","rullino","rumine","rumoroso","ruolo","rupe","russare","rustico","sabato","sabbiare","sabotato","sagoma","salasso","saldatura","salgemma","salivare","salmone","salone","saltare","saluto","salvo","sapere","sapido","saporito","saraceno","sarcasmo","sarto","sassoso","satellite","satira","satollo","saturno","savana","savio","saziato","sbadiglio","sbalzo","sbancato","sbarra","sbattere","sbavare","sbendare","sbirciare","sbloccato","sbocciato","sbrinare","sbruffone","sbuffare","scabroso","scadenza","scala","scambiare","scandalo","scapola","scarso","scatenare","scavato","scelto","scenico","scettro","scheda","schiena","sciarpa","scienza","scindere","scippo","sciroppo","scivolo","sclerare","scodella","scolpito","scomparto","sconforto","scoprire","scorta","scossone","scozzese","scriba","scrollare","scrutinio","scuderia","scultore","scuola","scuro","scusare","sdebitare","sdoganare","seccatura","secondo","sedano","seggiola","segnalato","segregato","seguito","selciato","selettivo","sella","selvaggio","semaforo","sembrare","seme","seminato","sempre","senso","sentire","sepolto","sequenza","serata","serbato","sereno","serio","serpente","serraglio","servire","sestina","setola","settimana","sfacelo","sfaldare","sfamato","sfarzoso","sfaticato","sfera","sfida","sfilato","sfinge","sfocato","sfoderare","sfogo","sfoltire","sforzato","sfratto","sfruttato","sfuggito","sfumare","sfuso","sgabello","sgarbato","sgonfiare","sgorbio","sgrassato","sguardo","sibilo","siccome","sierra","sigla","signore","silenzio","sillaba","simbolo","simpatico","simulato","sinfonia","singolo","sinistro","sino","sintesi","sinusoide","sipario","sisma","sistole","situato","slitta","slogatura","sloveno","smarrito","smemorato","smentito","smeraldo","smilzo","smontare","smottato","smussato","snellire","snervato","snodo","sobbalzo","sobrio","soccorso","sociale","sodale","soffitto","sogno","soldato","solenne","solido","sollazzo","solo","solubile","solvente","somatico","somma","sonda","sonetto","sonnifero","sopire","soppeso","sopra","sorgere","sorpasso","sorriso","sorso","sorteggio","sorvolato","sospiro","sosta","sottile","spada","spalla","spargere","spatola","spavento","spazzola","specie","spedire","spegnere","spelatura","speranza","spessore","spettrale","spezzato","spia","spigoloso","spillato","spinoso","spirale","splendido","sportivo","sposo","spranga","sprecare","spronato","spruzzo","spuntino","squillo","sradicare","srotolato","stabile","stacco","staffa","stagnare","stampato","stantio","starnuto","stasera","statuto","stelo","steppa","sterzo","stiletto","stima","stirpe","stivale","stizzoso","stonato","storico","strappo","stregato","stridulo","strozzare","strutto","stuccare","stufo","stupendo","subentro","succoso","sudore","suggerito","sugo","sultano","suonare","superbo","supporto","surgelato","surrogato","sussurro","sutura","svagare","svedese","sveglio","svelare","svenuto","svezia","sviluppo","svista","svizzera","svolta","svuotare","tabacco","tabulato","tacciare","taciturno","tale","talismano","tampone","tannino","tara","tardivo","targato","tariffa","tarpare","tartaruga","tasto","tattico","taverna","tavolata","tazza","teca","tecnico","telefono","temerario","tempo","temuto","tendone","tenero","tensione","tentacolo","teorema","terme","terrazzo","terzetto","tesi","tesserato","testato","tetro","tettoia","tifare","tigella","timbro","tinto","tipico","tipografo","tiraggio","tiro","titanio","titolo","titubante","tizio","tizzone","toccare","tollerare","tolto","tombola","tomo","tonfo","tonsilla","topazio","topologia","toppa","torba","tornare","torrone","tortora","toscano","tossire","tostatura","totano","trabocco","trachea","trafila","tragedia","tralcio","tramonto","transito","trapano","trarre","trasloco","trattato","trave","treccia","tremolio","trespolo","tributo","tricheco","trifoglio","trillo","trincea","trio","tristezza","triturato","trivella","tromba","trono","troppo","trottola","trovare","truccato","tubatura","tuffato","tulipano","tumulto","tunisia","turbare","turchino","tuta","tutela","ubicato","uccello","uccisore","udire","uditivo","uffa","ufficio","uguale","ulisse","ultimato","umano","umile","umorismo","uncinetto","ungere","ungherese","unicorno","unificato","unisono","unitario","unte","uovo","upupa","uragano","urgenza","urlo","usanza","usato","uscito","usignolo","usuraio","utensile","utilizzo","utopia","vacante","vaccinato","vagabondo","vagliato","valanga","valgo","valico","valletta","valoroso","valutare","valvola","vampata","vangare","vanitoso","vano","vantaggio","vanvera","vapore","varano","varcato","variante","vasca","vedetta","vedova","veduto","vegetale","veicolo","velcro","velina","velluto","veloce","venato","vendemmia","vento","verace","verbale","vergogna","verifica","vero","verruca","verticale","vescica","vessillo","vestale","veterano","vetrina","vetusto","viandante","vibrante","vicenda","vichingo","vicinanza","vidimare","vigilia","vigneto","vigore","vile","villano","vimini","vincitore","viola","vipera","virgola","virologo","virulento","viscoso","visione","vispo","vissuto","visura","vita","vitello","vittima","vivanda","vivido","viziare","voce","voga","volatile","volere","volpe","voragine","vulcano","zampogna","zanna","zappato","zattera","zavorra","zefiro","zelante","zelo","zenzero","zerbino","zibetto","zinco","zircone","zitto","zolla","zotico","zucchero","zufolo","zulu","zuppa"]},function(e){e.exports=["abaisser","abandon","abdiquer","abeille","abolir","aborder","aboutir","aboyer","abrasif","abreuver","abriter","abroger","abrupt","absence","absolu","absurde","abusif","abyssal","acade\u0301mie","acajou","acarien","accabler","accepter","acclamer","accolade","accroche","accuser","acerbe","achat","acheter","aciduler","acier","acompte","acque\u0301rir","acronyme","acteur","actif","actuel","adepte","ade\u0301quat","adhe\u0301sif","adjectif","adjuger","admettre","admirer","adopter","adorer","adoucir","adresse","adroit","adulte","adverbe","ae\u0301rer","ae\u0301ronef","affaire","affecter","affiche","affreux","affubler","agacer","agencer","agile","agiter","agrafer","agre\u0301able","agrume","aider","aiguille","ailier","aimable","aisance","ajouter","ajuster","alarmer","alchimie","alerte","alge\u0300bre","algue","alie\u0301ner","aliment","alle\u0301ger","alliage","allouer","allumer","alourdir","alpaga","altesse","alve\u0301ole","amateur","ambigu","ambre","ame\u0301nager","amertume","amidon","amiral","amorcer","amour","amovible","amphibie","ampleur","amusant","analyse","anaphore","anarchie","anatomie","ancien","ane\u0301antir","angle","angoisse","anguleux","animal","annexer","annonce","annuel","anodin","anomalie","anonyme","anormal","antenne","antidote","anxieux","apaiser","ape\u0301ritif","aplanir","apologie","appareil","appeler","apporter","appuyer","aquarium","aqueduc","arbitre","arbuste","ardeur","ardoise","argent","arlequin","armature","armement","armoire","armure","arpenter","arracher","arriver","arroser","arsenic","arte\u0301riel","article","aspect","asphalte","aspirer","assaut","asservir","assiette","associer","assurer","asticot","astre","astuce","atelier","atome","atrium","atroce","attaque","attentif","attirer","attraper","aubaine","auberge","audace","audible","augurer","aurore","automne","autruche","avaler","avancer","avarice","avenir","averse","aveugle","aviateur","avide","avion","aviser","avoine","avouer","avril","axial","axiome","badge","bafouer","bagage","baguette","baignade","balancer","balcon","baleine","balisage","bambin","bancaire","bandage","banlieue","bannie\u0300re","banquier","barbier","baril","baron","barque","barrage","bassin","bastion","bataille","bateau","batterie","baudrier","bavarder","belette","be\u0301lier","belote","be\u0301ne\u0301fice","berceau","berger","berline","bermuda","besace","besogne","be\u0301tail","beurre","biberon","bicycle","bidule","bijou","bilan","bilingue","billard","binaire","biologie","biopsie","biotype","biscuit","bison","bistouri","bitume","bizarre","blafard","blague","blanchir","blessant","blinder","blond","bloquer","blouson","bobard","bobine","boire","boiser","bolide","bonbon","bondir","bonheur","bonifier","bonus","bordure","borne","botte","boucle","boueux","bougie","boulon","bouquin","bourse","boussole","boutique","boxeur","branche","brasier","brave","brebis","bre\u0300che","breuvage","bricoler","brigade","brillant","brioche","brique","brochure","broder","bronzer","brousse","broyeur","brume","brusque","brutal","bruyant","buffle","buisson","bulletin","bureau","burin","bustier","butiner","butoir","buvable","buvette","cabanon","cabine","cachette","cadeau","cadre","cafe\u0301ine","caillou","caisson","calculer","calepin","calibre","calmer","calomnie","calvaire","camarade","came\u0301ra","camion","campagne","canal","caneton","canon","cantine","canular","capable","caporal","caprice","capsule","capter","capuche","carabine","carbone","caresser","caribou","carnage","carotte","carreau","carton","cascade","casier","casque","cassure","causer","caution","cavalier","caverne","caviar","ce\u0301dille","ceinture","ce\u0301leste","cellule","cendrier","censurer","central","cercle","ce\u0301re\u0301bral","cerise","cerner","cerveau","cesser","chagrin","chaise","chaleur","chambre","chance","chapitre","charbon","chasseur","chaton","chausson","chavirer","chemise","chenille","che\u0301quier","chercher","cheval","chien","chiffre","chignon","chime\u0300re","chiot","chlorure","chocolat","choisir","chose","chouette","chrome","chute","cigare","cigogne","cimenter","cine\u0301ma","cintrer","circuler","cirer","cirque","citerne","citoyen","citron","civil","clairon","clameur","claquer","classe","clavier","client","cligner","climat","clivage","cloche","clonage","cloporte","cobalt","cobra","cocasse","cocotier","coder","codifier","coffre","cogner","cohe\u0301sion","coiffer","coincer","cole\u0300re","colibri","colline","colmater","colonel","combat","come\u0301die","commande","compact","concert","conduire","confier","congeler","connoter","consonne","contact","convexe","copain","copie","corail","corbeau","cordage","corniche","corpus","correct","corte\u0300ge","cosmique","costume","coton","coude","coupure","courage","couteau","couvrir","coyote","crabe","crainte","cravate","crayon","cre\u0301ature","cre\u0301diter","cre\u0301meux","creuser","crevette","cribler","crier","cristal","crite\u0300re","croire","croquer","crotale","crucial","cruel","crypter","cubique","cueillir","cuille\u0300re","cuisine","cuivre","culminer","cultiver","cumuler","cupide","curatif","curseur","cyanure","cycle","cylindre","cynique","daigner","damier","danger","danseur","dauphin","de\u0301battre","de\u0301biter","de\u0301border","de\u0301brider","de\u0301butant","de\u0301caler","de\u0301cembre","de\u0301chirer","de\u0301cider","de\u0301clarer","de\u0301corer","de\u0301crire","de\u0301cupler","de\u0301dale","de\u0301ductif","de\u0301esse","de\u0301fensif","de\u0301filer","de\u0301frayer","de\u0301gager","de\u0301givrer","de\u0301glutir","de\u0301grafer","de\u0301jeuner","de\u0301lice","de\u0301loger","demander","demeurer","de\u0301molir","de\u0301nicher","de\u0301nouer","dentelle","de\u0301nuder","de\u0301part","de\u0301penser","de\u0301phaser","de\u0301placer","de\u0301poser","de\u0301ranger","de\u0301rober","de\u0301sastre","descente","de\u0301sert","de\u0301signer","de\u0301sobe\u0301ir","dessiner","destrier","de\u0301tacher","de\u0301tester","de\u0301tourer","de\u0301tresse","devancer","devenir","deviner","devoir","diable","dialogue","diamant","dicter","diffe\u0301rer","dige\u0301rer","digital","digne","diluer","dimanche","diminuer","dioxyde","directif","diriger","discuter","disposer","dissiper","distance","divertir","diviser","docile","docteur","dogme","doigt","domaine","domicile","dompter","donateur","donjon","donner","dopamine","dortoir","dorure","dosage","doseur","dossier","dotation","douanier","double","douceur","douter","doyen","dragon","draper","dresser","dribbler","droiture","duperie","duplexe","durable","durcir","dynastie","e\u0301blouir","e\u0301carter","e\u0301charpe","e\u0301chelle","e\u0301clairer","e\u0301clipse","e\u0301clore","e\u0301cluse","e\u0301cole","e\u0301conomie","e\u0301corce","e\u0301couter","e\u0301craser","e\u0301cre\u0301mer","e\u0301crivain","e\u0301crou","e\u0301cume","e\u0301cureuil","e\u0301difier","e\u0301duquer","effacer","effectif","effigie","effort","effrayer","effusion","e\u0301galiser","e\u0301garer","e\u0301jecter","e\u0301laborer","e\u0301largir","e\u0301lectron","e\u0301le\u0301gant","e\u0301le\u0301phant","e\u0301le\u0300ve","e\u0301ligible","e\u0301litisme","e\u0301loge","e\u0301lucider","e\u0301luder","emballer","embellir","embryon","e\u0301meraude","e\u0301mission","emmener","e\u0301motion","e\u0301mouvoir","empereur","employer","emporter","emprise","e\u0301mulsion","encadrer","enche\u0300re","enclave","encoche","endiguer","endosser","endroit","enduire","e\u0301nergie","enfance","enfermer","enfouir","engager","engin","englober","e\u0301nigme","enjamber","enjeu","enlever","ennemi","ennuyeux","enrichir","enrobage","enseigne","entasser","entendre","entier","entourer","entraver","e\u0301nume\u0301rer","envahir","enviable","envoyer","enzyme","e\u0301olien","e\u0301paissir","e\u0301pargne","e\u0301patant","e\u0301paule","e\u0301picerie","e\u0301pide\u0301mie","e\u0301pier","e\u0301pilogue","e\u0301pine","e\u0301pisode","e\u0301pitaphe","e\u0301poque","e\u0301preuve","e\u0301prouver","e\u0301puisant","e\u0301querre","e\u0301quipe","e\u0301riger","e\u0301rosion","erreur","e\u0301ruption","escalier","espadon","espe\u0300ce","espie\u0300gle","espoir","esprit","esquiver","essayer","essence","essieu","essorer","estime","estomac","estrade","e\u0301tage\u0300re","e\u0301taler","e\u0301tanche","e\u0301tatique","e\u0301teindre","e\u0301tendoir","e\u0301ternel","e\u0301thanol","e\u0301thique","ethnie","e\u0301tirer","e\u0301toffer","e\u0301toile","e\u0301tonnant","e\u0301tourdir","e\u0301trange","e\u0301troit","e\u0301tude","euphorie","e\u0301valuer","e\u0301vasion","e\u0301ventail","e\u0301vidence","e\u0301viter","e\u0301volutif","e\u0301voquer","exact","exage\u0301rer","exaucer","exceller","excitant","exclusif","excuse","exe\u0301cuter","exemple","exercer","exhaler","exhorter","exigence","exiler","exister","exotique","expe\u0301dier","explorer","exposer","exprimer","exquis","extensif","extraire","exulter","fable","fabuleux","facette","facile","facture","faiblir","falaise","fameux","famille","farceur","farfelu","farine","farouche","fasciner","fatal","fatigue","faucon","fautif","faveur","favori","fe\u0301brile","fe\u0301conder","fe\u0301de\u0301rer","fe\u0301lin","femme","fe\u0301mur","fendoir","fe\u0301odal","fermer","fe\u0301roce","ferveur","festival","feuille","feutre","fe\u0301vrier","fiasco","ficeler","fictif","fide\u0300le","figure","filature","filetage","filie\u0300re","filleul","filmer","filou","filtrer","financer","finir","fiole","firme","fissure","fixer","flairer","flamme","flasque","flatteur","fle\u0301au","fle\u0300che","fleur","flexion","flocon","flore","fluctuer","fluide","fluvial","folie","fonderie","fongible","fontaine","forcer","forgeron","formuler","fortune","fossile","foudre","fouge\u0300re","fouiller","foulure","fourmi","fragile","fraise","franchir","frapper","frayeur","fre\u0301gate","freiner","frelon","fre\u0301mir","fre\u0301ne\u0301sie","fre\u0300re","friable","friction","frisson","frivole","froid","fromage","frontal","frotter","fruit","fugitif","fuite","fureur","furieux","furtif","fusion","futur","gagner","galaxie","galerie","gambader","garantir","gardien","garnir","garrigue","gazelle","gazon","ge\u0301ant","ge\u0301latine","ge\u0301lule","gendarme","ge\u0301ne\u0301ral","ge\u0301nie","genou","gentil","ge\u0301ologie","ge\u0301ome\u0300tre","ge\u0301ranium","germe","gestuel","geyser","gibier","gicler","girafe","givre","glace","glaive","glisser","globe","gloire","glorieux","golfeur","gomme","gonfler","gorge","gorille","goudron","gouffre","goulot","goupille","gourmand","goutte","graduel","graffiti","graine","grand","grappin","gratuit","gravir","grenat","griffure","griller","grimper","grogner","gronder","grotte","groupe","gruger","grutier","gruye\u0300re","gue\u0301pard","guerrier","guide","guimauve","guitare","gustatif","gymnaste","gyrostat","habitude","hachoir","halte","hameau","hangar","hanneton","haricot","harmonie","harpon","hasard","he\u0301lium","he\u0301matome","herbe","he\u0301risson","hermine","he\u0301ron","he\u0301siter","heureux","hiberner","hibou","hilarant","histoire","hiver","homard","hommage","homoge\u0300ne","honneur","honorer","honteux","horde","horizon","horloge","hormone","horrible","houleux","housse","hublot","huileux","humain","humble","humide","humour","hurler","hydromel","hygie\u0300ne","hymne","hypnose","idylle","ignorer","iguane","illicite","illusion","image","imbiber","imiter","immense","immobile","immuable","impact","impe\u0301rial","implorer","imposer","imprimer","imputer","incarner","incendie","incident","incliner","incolore","indexer","indice","inductif","ine\u0301dit","ineptie","inexact","infini","infliger","informer","infusion","inge\u0301rer","inhaler","inhiber","injecter","injure","innocent","inoculer","inonder","inscrire","insecte","insigne","insolite","inspirer","instinct","insulter","intact","intense","intime","intrigue","intuitif","inutile","invasion","inventer","inviter","invoquer","ironique","irradier","irre\u0301el","irriter","isoler","ivoire","ivresse","jaguar","jaillir","jambe","janvier","jardin","jauger","jaune","javelot","jetable","jeton","jeudi","jeunesse","joindre","joncher","jongler","joueur","jouissif","journal","jovial","joyau","joyeux","jubiler","jugement","junior","jupon","juriste","justice","juteux","juve\u0301nile","kayak","kimono","kiosque","label","labial","labourer","lace\u0301rer","lactose","lagune","laine","laisser","laitier","lambeau","lamelle","lampe","lanceur","langage","lanterne","lapin","largeur","larme","laurier","lavabo","lavoir","lecture","le\u0301gal","le\u0301ger","le\u0301gume","lessive","lettre","levier","lexique","le\u0301zard","liasse","libe\u0301rer","libre","licence","licorne","lie\u0300ge","lie\u0300vre","ligature","ligoter","ligue","limer","limite","limonade","limpide","line\u0301aire","lingot","lionceau","liquide","lisie\u0300re","lister","lithium","litige","littoral","livreur","logique","lointain","loisir","lombric","loterie","louer","lourd","loutre","louve","loyal","lubie","lucide","lucratif","lueur","lugubre","luisant","lumie\u0300re","lunaire","lundi","luron","lutter","luxueux","machine","magasin","magenta","magique","maigre","maillon","maintien","mairie","maison","majorer","malaxer","male\u0301fice","malheur","malice","mallette","mammouth","mandater","maniable","manquant","manteau","manuel","marathon","marbre","marchand","mardi","maritime","marqueur","marron","marteler","mascotte","massif","mate\u0301riel","matie\u0300re","matraque","maudire","maussade","mauve","maximal","me\u0301chant","me\u0301connu","me\u0301daille","me\u0301decin","me\u0301diter","me\u0301duse","meilleur","me\u0301lange","me\u0301lodie","membre","me\u0301moire","menacer","mener","menhir","mensonge","mentor","mercredi","me\u0301rite","merle","messager","mesure","me\u0301tal","me\u0301te\u0301ore","me\u0301thode","me\u0301tier","meuble","miauler","microbe","miette","mignon","migrer","milieu","million","mimique","mince","mine\u0301ral","minimal","minorer","minute","miracle","miroiter","missile","mixte","mobile","moderne","moelleux","mondial","moniteur","monnaie","monotone","monstre","montagne","monument","moqueur","morceau","morsure","mortier","moteur","motif","mouche","moufle","moulin","mousson","mouton","mouvant","multiple","munition","muraille","mure\u0300ne","murmure","muscle","muse\u0301um","musicien","mutation","muter","mutuel","myriade","myrtille","myste\u0300re","mythique","nageur","nappe","narquois","narrer","natation","nation","nature","naufrage","nautique","navire","ne\u0301buleux","nectar","ne\u0301faste","ne\u0301gation","ne\u0301gliger","ne\u0301gocier","neige","nerveux","nettoyer","neurone","neutron","neveu","niche","nickel","nitrate","niveau","noble","nocif","nocturne","noirceur","noisette","nomade","nombreux","nommer","normatif","notable","notifier","notoire","nourrir","nouveau","novateur","novembre","novice","nuage","nuancer","nuire","nuisible","nume\u0301ro","nuptial","nuque","nutritif","obe\u0301ir","objectif","obliger","obscur","observer","obstacle","obtenir","obturer","occasion","occuper","oce\u0301an","octobre","octroyer","octupler","oculaire","odeur","odorant","offenser","officier","offrir","ogive","oiseau","oisillon","olfactif","olivier","ombrage","omettre","onctueux","onduler","one\u0301reux","onirique","opale","opaque","ope\u0301rer","opinion","opportun","opprimer","opter","optique","orageux","orange","orbite","ordonner","oreille","organe","orgueil","orifice","ornement","orque","ortie","osciller","osmose","ossature","otarie","ouragan","ourson","outil","outrager","ouvrage","ovation","oxyde","oxyge\u0300ne","ozone","paisible","palace","palmare\u0300s","palourde","palper","panache","panda","pangolin","paniquer","panneau","panorama","pantalon","papaye","papier","papoter","papyrus","paradoxe","parcelle","paresse","parfumer","parler","parole","parrain","parsemer","partager","parure","parvenir","passion","paste\u0300que","paternel","patience","patron","pavillon","pavoiser","payer","paysage","peigne","peintre","pelage","pe\u0301lican","pelle","pelouse","peluche","pendule","pe\u0301ne\u0301trer","pe\u0301nible","pensif","pe\u0301nurie","pe\u0301pite","pe\u0301plum","perdrix","perforer","pe\u0301riode","permuter","perplexe","persil","perte","peser","pe\u0301tale","petit","pe\u0301trir","peuple","pharaon","phobie","phoque","photon","phrase","physique","piano","pictural","pie\u0300ce","pierre","pieuvre","pilote","pinceau","pipette","piquer","pirogue","piscine","piston","pivoter","pixel","pizza","placard","plafond","plaisir","planer","plaque","plastron","plateau","pleurer","plexus","pliage","plomb","plonger","pluie","plumage","pochette","poe\u0301sie","poe\u0300te","pointe","poirier","poisson","poivre","polaire","policier","pollen","polygone","pommade","pompier","ponctuel","ponde\u0301rer","poney","portique","position","posse\u0301der","posture","potager","poteau","potion","pouce","poulain","poumon","pourpre","poussin","pouvoir","prairie","pratique","pre\u0301cieux","pre\u0301dire","pre\u0301fixe","pre\u0301lude","pre\u0301nom","pre\u0301sence","pre\u0301texte","pre\u0301voir","primitif","prince","prison","priver","proble\u0300me","proce\u0301der","prodige","profond","progre\u0300s","proie","projeter","prologue","promener","propre","prospe\u0300re","prote\u0301ger","prouesse","proverbe","prudence","pruneau","psychose","public","puceron","puiser","pulpe","pulsar","punaise","punitif","pupitre","purifier","puzzle","pyramide","quasar","querelle","question","quie\u0301tude","quitter","quotient","racine","raconter","radieux","ragondin","raideur","raisin","ralentir","rallonge","ramasser","rapide","rasage","ratisser","ravager","ravin","rayonner","re\u0301actif","re\u0301agir","re\u0301aliser","re\u0301animer","recevoir","re\u0301citer","re\u0301clamer","re\u0301colter","recruter","reculer","recycler","re\u0301diger","redouter","refaire","re\u0301flexe","re\u0301former","refrain","refuge","re\u0301galien","re\u0301gion","re\u0301glage","re\u0301gulier","re\u0301ite\u0301rer","rejeter","rejouer","relatif","relever","relief","remarque","reme\u0300de","remise","remonter","remplir","remuer","renard","renfort","renifler","renoncer","rentrer","renvoi","replier","reporter","reprise","reptile","requin","re\u0301serve","re\u0301sineux","re\u0301soudre","respect","rester","re\u0301sultat","re\u0301tablir","retenir","re\u0301ticule","retomber","retracer","re\u0301union","re\u0301ussir","revanche","revivre","re\u0301volte","re\u0301vulsif","richesse","rideau","rieur","rigide","rigoler","rincer","riposter","risible","risque","rituel","rival","rivie\u0300re","rocheux","romance","rompre","ronce","rondin","roseau","rosier","rotatif","rotor","rotule","rouge","rouille","rouleau","routine","royaume","ruban","rubis","ruche","ruelle","rugueux","ruiner","ruisseau","ruser","rustique","rythme","sabler","saboter","sabre","sacoche","safari","sagesse","saisir","salade","salive","salon","saluer","samedi","sanction","sanglier","sarcasme","sardine","saturer","saugrenu","saumon","sauter","sauvage","savant","savonner","scalpel","scandale","sce\u0301le\u0301rat","sce\u0301nario","sceptre","sche\u0301ma","science","scinder","score","scrutin","sculpter","se\u0301ance","se\u0301cable","se\u0301cher","secouer","se\u0301cre\u0301ter","se\u0301datif","se\u0301duire","seigneur","se\u0301jour","se\u0301lectif","semaine","sembler","semence","se\u0301minal","se\u0301nateur","sensible","sentence","se\u0301parer","se\u0301quence","serein","sergent","se\u0301rieux","serrure","se\u0301rum","service","se\u0301same","se\u0301vir","sevrage","sextuple","side\u0301ral","sie\u0300cle","sie\u0301ger","siffler","sigle","signal","silence","silicium","simple","since\u0300re","sinistre","siphon","sirop","sismique","situer","skier","social","socle","sodium","soigneux","soldat","soleil","solitude","soluble","sombre","sommeil","somnoler","sonde","songeur","sonnette","sonore","sorcier","sortir","sosie","sottise","soucieux","soudure","souffle","soulever","soupape","source","soutirer","souvenir","spacieux","spatial","spe\u0301cial","sphe\u0300re","spiral","stable","station","sternum","stimulus","stipuler","strict","studieux","stupeur","styliste","sublime","substrat","subtil","subvenir","succe\u0300s","sucre","suffixe","sugge\u0301rer","suiveur","sulfate","superbe","supplier","surface","suricate","surmener","surprise","sursaut","survie","suspect","syllabe","symbole","syme\u0301trie","synapse","syntaxe","syste\u0300me","tabac","tablier","tactile","tailler","talent","talisman","talonner","tambour","tamiser","tangible","tapis","taquiner","tarder","tarif","tartine","tasse","tatami","tatouage","taupe","taureau","taxer","te\u0301moin","temporel","tenaille","tendre","teneur","tenir","tension","terminer","terne","terrible","te\u0301tine","texte","the\u0300me","the\u0301orie","the\u0301rapie","thorax","tibia","tie\u0300de","timide","tirelire","tiroir","tissu","titane","titre","tituber","toboggan","tole\u0301rant","tomate","tonique","tonneau","toponyme","torche","tordre","tornade","torpille","torrent","torse","tortue","totem","toucher","tournage","tousser","toxine","traction","trafic","tragique","trahir","train","trancher","travail","tre\u0300fle","tremper","tre\u0301sor","treuil","triage","tribunal","tricoter","trilogie","triomphe","tripler","triturer","trivial","trombone","tronc","tropical","troupeau","tuile","tulipe","tumulte","tunnel","turbine","tuteur","tutoyer","tuyau","tympan","typhon","typique","tyran","ubuesque","ultime","ultrason","unanime","unifier","union","unique","unitaire","univers","uranium","urbain","urticant","usage","usine","usuel","usure","utile","utopie","vacarme","vaccin","vagabond","vague","vaillant","vaincre","vaisseau","valable","valise","vallon","valve","vampire","vanille","vapeur","varier","vaseux","vassal","vaste","vecteur","vedette","ve\u0301ge\u0301tal","ve\u0301hicule","veinard","ve\u0301loce","vendredi","ve\u0301ne\u0301rer","venger","venimeux","ventouse","verdure","ve\u0301rin","vernir","verrou","verser","vertu","veston","ve\u0301te\u0301ran","ve\u0301tuste","vexant","vexer","viaduc","viande","victoire","vidange","vide\u0301o","vignette","vigueur","vilain","village","vinaigre","violon","vipe\u0300re","virement","virtuose","virus","visage","viseur","vision","visqueux","visuel","vital","vitesse","viticole","vitrine","vivace","vivipare","vocation","voguer","voile","voisin","voiture","volaille","volcan","voltiger","volume","vorace","vortex","voter","vouloir","voyage","voyelle","wagon","xe\u0301non","yacht","ze\u0300bre","ze\u0301nith","zeste","zoologie"]},function(e){e.exports=["abandon","ability","able","about","above","absent","absorb","abstract","absurd","abuse","access","accident","account","accuse","achieve","acid","acoustic","acquire","across","act","action","actor","actress","actual","adapt","add","addict","address","adjust","admit","adult","advance","advice","aerobic","affair","afford","afraid","again","age","agent","agree","ahead","aim","air","airport","aisle","alarm","album","alcohol","alert","alien","all","alley","allow","almost","alone","alpha","already","also","alter","always","amateur","amazing","among","amount","amused","analyst","anchor","ancient","anger","angle","angry","animal","ankle","announce","annual","another","answer","antenna","antique","anxiety","any","apart","apology","appear","apple","approve","april","arch","arctic","area","arena","argue","arm","armed","armor","army","around","arrange","arrest","arrive","arrow","art","artefact","artist","artwork","ask","aspect","assault","asset","assist","assume","asthma","athlete","atom","attack","attend","attitude","attract","auction","audit","august","aunt","author","auto","autumn","average","avocado","avoid","awake","aware","away","awesome","awful","awkward","axis","baby","bachelor","bacon","badge","bag","balance","balcony","ball","bamboo","banana","banner","bar","barely","bargain","barrel","base","basic","basket","battle","beach","bean","beauty","because","become","beef","before","begin","behave","behind","believe","below","belt","bench","benefit","best","betray","better","between","beyond","bicycle","bid","bike","bind","biology","bird","birth","bitter","black","blade","blame","blanket","blast","bleak","bless","blind","blood","blossom","blouse","blue","blur","blush","board","boat","body","boil","bomb","bone","bonus","book","boost","border","boring","borrow","boss","bottom","bounce","box","boy","bracket","brain","brand","brass","brave","bread","breeze","brick","bridge","brief","bright","bring","brisk","broccoli","broken","bronze","broom","brother","brown","brush","bubble","buddy","budget","buffalo","build","bulb","bulk","bullet","bundle","bunker","burden","burger","burst","bus","business","busy","butter","buyer","buzz","cabbage","cabin","cable","cactus","cage","cake","call","calm","camera","camp","can","canal","cancel","candy","cannon","canoe","canvas","canyon","capable","capital","captain","car","carbon","card","cargo","carpet","carry","cart","case","cash","casino","castle","casual","cat","catalog","catch","category","cattle","caught","cause","caution","cave","ceiling","celery","cement","census","century","cereal","certain","chair","chalk","champion","change","chaos","chapter","charge","chase","chat","cheap","check","cheese","chef","cherry","chest","chicken","chief","child","chimney","choice","choose","chronic","chuckle","chunk","churn","cigar","cinnamon","circle","citizen","city","civil","claim","clap","clarify","claw","clay","clean","clerk","clever","click","client","cliff","climb","clinic","clip","clock","clog","close","cloth","cloud","clown","club","clump","cluster","clutch","coach","coast","coconut","code","coffee","coil","coin","collect","color","column","combine","come","comfort","comic","common","company","concert","conduct","confirm","congress","connect","consider","control","convince","cook","cool","copper","copy","coral","core","corn","correct","cost","cotton","couch","country","couple","course","cousin","cover","coyote","crack","cradle","craft","cram","crane","crash","crater","crawl","crazy","cream","credit","creek","crew","cricket","crime","crisp","critic","crop","cross","crouch","crowd","crucial","cruel","cruise","crumble","crunch","crush","cry","crystal","cube","culture","cup","cupboard","curious","current","curtain","curve","cushion","custom","cute","cycle","dad","damage","damp","dance","danger","daring","dash","daughter","dawn","day","deal","debate","debris","decade","december","decide","decline","decorate","decrease","deer","defense","define","defy","degree","delay","deliver","demand","demise","denial","dentist","deny","depart","depend","deposit","depth","deputy","derive","describe","desert","design","desk","despair","destroy","detail","detect","develop","device","devote","diagram","dial","diamond","diary","dice","diesel","diet","differ","digital","dignity","dilemma","dinner","dinosaur","direct","dirt","disagree","discover","disease","dish","dismiss","disorder","display","distance","divert","divide","divorce","dizzy","doctor","document","dog","doll","dolphin","domain","donate","donkey","donor","door","dose","double","dove","draft","dragon","drama","drastic","draw","dream","dress","drift","drill","drink","drip","drive","drop","drum","dry","duck","dumb","dune","during","dust","dutch","duty","dwarf","dynamic","eager","eagle","early","earn","earth","easily","east","easy","echo","ecology","economy","edge","edit","educate","effort","egg","eight","either","elbow","elder","electric","elegant","element","elephant","elevator","elite","else","embark","embody","embrace","emerge","emotion","employ","empower","empty","enable","enact","end","endless","endorse","enemy","energy","enforce","engage","engine","enhance","enjoy","enlist","enough","enrich","enroll","ensure","enter","entire","entry","envelope","episode","equal","equip","era","erase","erode","erosion","error","erupt","escape","essay","essence","estate","eternal","ethics","evidence","evil","evoke","evolve","exact","example","excess","exchange","excite","exclude","excuse","execute","exercise","exhaust","exhibit","exile","exist","exit","exotic","expand","expect","expire","explain","expose","express","extend","extra","eye","eyebrow","fabric","face","faculty","fade","faint","faith","fall","false","fame","family","famous","fan","fancy","fantasy","farm","fashion","fat","fatal","father","fatigue","fault","favorite","feature","february","federal","fee","feed","feel","female","fence","festival","fetch","fever","few","fiber","fiction","field","figure","file","film","filter","final","find","fine","finger","finish","fire","firm","first","fiscal","fish","fit","fitness","fix","flag","flame","flash","flat","flavor","flee","flight","flip","float","flock","floor","flower","fluid","flush","fly","foam","focus","fog","foil","fold","follow","food","foot","force","forest","forget","fork","fortune","forum","forward","fossil","foster","found","fox","fragile","frame","frequent","fresh","friend","fringe","frog","front","frost","frown","frozen","fruit","fuel","fun","funny","furnace","fury","future","gadget","gain","galaxy","gallery","game","gap","garage","garbage","garden","garlic","garment","gas","gasp","gate","gather","gauge","gaze","general","genius","genre","gentle","genuine","gesture","ghost","giant","gift","giggle","ginger","giraffe","girl","give","glad","glance","glare","glass","glide","glimpse","globe","gloom","glory","glove","glow","glue","goat","goddess","gold","good","goose","gorilla","gospel","gossip","govern","gown","grab","grace","grain","grant","grape","grass","gravity","great","green","grid","grief","grit","grocery","group","grow","grunt","guard","guess","guide","guilt","guitar","gun","gym","habit","hair","half","hammer","hamster","hand","happy","harbor","hard","harsh","harvest","hat","have","hawk","hazard","head","health","heart","heavy","hedgehog","height","hello","helmet","help","hen","hero","hidden","high","hill","hint","hip","hire","history","hobby","hockey","hold","hole","holiday","hollow","home","honey","hood","hope","horn","horror","horse","hospital","host","hotel","hour","hover","hub","huge","human","humble","humor","hundred","hungry","hunt","hurdle","hurry","hurt","husband","hybrid","ice","icon","idea","identify","idle","ignore","ill","illegal","illness","image","imitate","immense","immune","impact","impose","improve","impulse","inch","include","income","increase","index","indicate","indoor","industry","infant","inflict","inform","inhale","inherit","initial","inject","injury","inmate","inner","innocent","input","inquiry","insane","insect","inside","inspire","install","intact","interest","into","invest","invite","involve","iron","island","isolate","issue","item","ivory","jacket","jaguar","jar","jazz","jealous","jeans","jelly","jewel","job","join","joke","journey","joy","judge","juice","jump","jungle","junior","junk","just","kangaroo","keen","keep","ketchup","key","kick","kid","kidney","kind","kingdom","kiss","kit","kitchen","kite","kitten","kiwi","knee","knife","knock","know","lab","label","labor","ladder","lady","lake","lamp","language","laptop","large","later","latin","laugh","laundry","lava","law","lawn","lawsuit","layer","lazy","leader","leaf","learn","leave","lecture","left","leg","legal","legend","leisure","lemon","lend","length","lens","leopard","lesson","letter","level","liar","liberty","library","license","life","lift","light","like","limb","limit","link","lion","liquid","list","little","live","lizard","load","loan","lobster","local","lock","logic","lonely","long","loop","lottery","loud","lounge","love","loyal","lucky","luggage","lumber","lunar","lunch","luxury","lyrics","machine","mad","magic","magnet","maid","mail","main","major","make","mammal","man","manage","mandate","mango","mansion","manual","maple","marble","march","margin","marine","market","marriage","mask","mass","master","match","material","math","matrix","matter","maximum","maze","meadow","mean","measure","meat","mechanic","medal","media","melody","melt","member","memory","mention","menu","mercy","merge","merit","merry","mesh","message","metal","method","middle","midnight","milk","million","mimic","mind","minimum","minor","minute","miracle","mirror","misery","miss","mistake","mix","mixed","mixture","mobile","model","modify","mom","moment","monitor","monkey","monster","month","moon","moral","more","morning","mosquito","mother","motion","motor","mountain","mouse","move","movie","much","muffin","mule","multiply","muscle","museum","mushroom","music","must","mutual","myself","mystery","myth","naive","name","napkin","narrow","nasty","nation","nature","near","neck","need","negative","neglect","neither","nephew","nerve","nest","net","network","neutral","never","news","next","nice","night","noble","noise","nominee","noodle","normal","north","nose","notable","note","nothing","notice","novel","now","nuclear","number","nurse","nut","oak","obey","object","oblige","obscure","observe","obtain","obvious","occur","ocean","october","odor","off","offer","office","often","oil","okay","old","olive","olympic","omit","once","one","onion","online","only","open","opera","opinion","oppose","option","orange","orbit","orchard","order","ordinary","organ","orient","original","orphan","ostrich","other","outdoor","outer","output","outside","oval","oven","over","own","owner","oxygen","oyster","ozone","pact","paddle","page","pair","palace","palm","panda","panel","panic","panther","paper","parade","parent","park","parrot","party","pass","patch","path","patient","patrol","pattern","pause","pave","payment","peace","peanut","pear","peasant","pelican","pen","penalty","pencil","people","pepper","perfect","permit","person","pet","phone","photo","phrase","physical","piano","picnic","picture","piece","pig","pigeon","pill","pilot","pink","pioneer","pipe","pistol","pitch","pizza","place","planet","plastic","plate","play","please","pledge","pluck","plug","plunge","poem","poet","point","polar","pole","police","pond","pony","pool","popular","portion","position","possible","post","potato","pottery","poverty","powder","power","practice","praise","predict","prefer","prepare","present","pretty","prevent","price","pride","primary","print","priority","prison","private","prize","problem","process","produce","profit","program","project","promote","proof","property","prosper","protect","proud","provide","public","pudding","pull","pulp","pulse","pumpkin","punch","pupil","puppy","purchase","purity","purpose","purse","push","put","puzzle","pyramid","quality","quantum","quarter","question","quick","quit","quiz","quote","rabbit","raccoon","race","rack","radar","radio","rail","rain","raise","rally","ramp","ranch","random","range","rapid","rare","rate","rather","raven","raw","razor","ready","real","reason","rebel","rebuild","recall","receive","recipe","record","recycle","reduce","reflect","reform","refuse","region","regret","regular","reject","relax","release","relief","rely","remain","remember","remind","remove","render","renew","rent","reopen","repair","repeat","replace","report","require","rescue","resemble","resist","resource","response","result","retire","retreat","return","reunion","reveal","review","reward","rhythm","rib","ribbon","rice","rich","ride","ridge","rifle","right","rigid","ring","riot","ripple","risk","ritual","rival","river","road","roast","robot","robust","rocket","romance","roof","rookie","room","rose","rotate","rough","round","route","royal","rubber","rude","rug","rule","run","runway","rural","sad","saddle","sadness","safe","sail","salad","salmon","salon","salt","salute","same","sample","sand","satisfy","satoshi","sauce","sausage","save","say","scale","scan","scare","scatter","scene","scheme","school","science","scissors","scorpion","scout","scrap","screen","script","scrub","sea","search","season","seat","second","secret","section","security","seed","seek","segment","select","sell","seminar","senior","sense","sentence","series","service","session","settle","setup","seven","shadow","shaft","shallow","share","shed","shell","sheriff","shield","shift","shine","ship","shiver","shock","shoe","shoot","shop","short","shoulder","shove","shrimp","shrug","shuffle","shy","sibling","sick","side","siege","sight","sign","silent","silk","silly","silver","similar","simple","since","sing","siren","sister","situate","six","size","skate","sketch","ski","skill","skin","skirt","skull","slab","slam","sleep","slender","slice","slide","slight","slim","slogan","slot","slow","slush","small","smart","smile","smoke","smooth","snack","snake","snap","sniff","snow","soap","soccer","social","sock","soda","soft","solar","soldier","solid","solution","solve","someone","song","soon","sorry","sort","soul","sound","soup","source","south","space","spare","spatial","spawn","speak","special","speed","spell","spend","sphere","spice","spider","spike","spin","spirit","split","spoil","sponsor","spoon","sport","spot","spray","spread","spring","spy","square","squeeze","squirrel","stable","stadium","staff","stage","stairs","stamp","stand","start","state","stay","steak","steel","stem","step","stereo","stick","still","sting","stock","stomach","stone","stool","story","stove","strategy","street","strike","strong","struggle","student","stuff","stumble","style","subject","submit","subway","success","such","sudden","suffer","sugar","suggest","suit","summer","sun","sunny","sunset","super","supply","supreme","sure","surface","surge","surprise","surround","survey","suspect","sustain","swallow","swamp","swap","swarm","swear","sweet","swift","swim","swing","switch","sword","symbol","symptom","syrup","system","table","tackle","tag","tail","talent","talk","tank","tape","target","task","taste","tattoo","taxi","teach","team","tell","ten","tenant","tennis","tent","term","test","text","thank","that","theme","then","theory","there","they","thing","this","thought","three","thrive","throw","thumb","thunder","ticket","tide","tiger","tilt","timber","time","tiny","tip","tired","tissue","title","toast","tobacco","today","toddler","toe","together","toilet","token","tomato","tomorrow","tone","tongue","tonight","tool","tooth","top","topic","topple","torch","tornado","tortoise","toss","total","tourist","toward","tower","town","toy","track","trade","traffic","tragic","train","transfer","trap","trash","travel","tray","treat","tree","trend","trial","tribe","trick","trigger","trim","trip","trophy","trouble","truck","true","truly","trumpet","trust","truth","try","tube","tuition","tumble","tuna","tunnel","turkey","turn","turtle","twelve","twenty","twice","twin","twist","two","type","typical","ugly","umbrella","unable","unaware","uncle","uncover","under","undo","unfair","unfold","unhappy","uniform","unique","unit","universe","unknown","unlock","until","unusual","unveil","update","upgrade","uphold","upon","upper","upset","urban","urge","usage","use","used","useful","useless","usual","utility","vacant","vacuum","vague","valid","valley","valve","van","vanish","vapor","various","vast","vault","vehicle","velvet","vendor","venture","venue","verb","verify","version","very","vessel","veteran","viable","vibrant","vicious","victory","video","view","village","vintage","violin","virtual","virus","visa","visit","visual","vital","vivid","vocal","voice","void","volcano","volume","vote","voyage","wage","wagon","wait","walk","wall","walnut","want","warfare","warm","warrior","wash","wasp","waste","water","wave","way","wealth","weapon","wear","weasel","weather","web","wedding","weekend","weird","welcome","west","wet","whale","what","wheat","wheel","when","where","whip","whisper","wide","width","wife","wild","will","win","window","wine","wing","wink","winner","winter","wire","wisdom","wise","wish","witness","wolf","woman","wonder","wood","wool","word","work","world","worry","worth","wrap","wreck","wrestle","wrist","write","wrong","yard","year","yellow","you","young","youth","zebra","zero","zone","zoo"]},function(e,t,l){(function(e){var n;function r(e){return(r="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}!function(o){"use strict";for(var u=[null,0,{}],i=10,s=44032,a=4352,c=4449,p=4519,d=19,f=21,g=28,h=f*g,b=d*h,y=function(e,t){this.codepoint=e,this.feature=t},m={},v=[],_=0;_<=255;++_)v[_]=0;var w=[function(e,t,l){return t<60||13311<t&&t<42607?new y(t,u):e(t,l)},function(e,t,l){var n=m[t];return n||(n=e(t,l)).feature&&++v[t>>8&255]>i&&(m[t]=n),n},function(e,t,l){return l?e(t,l):new y(t,null)},function(e,t,l){var n;if(t<a||a+d<=t&&t<s||s+b<t)return e(t,l);if(a<=t&&t<a+d){var r={},o=(t-a)*f;for(n=0;n<f;++n)r[c+n]=s+g*(n+o);return new y(t,[,,r])}var u=t-s,i=u%g,m=[];if(0!==i)m[0]=[s+u-i,p+i];else for(m[0]=[a+Math.floor(u/h),c+Math.floor(u%h/g)],m[2]={},n=1;n<g;++n)m[2][p+n]=t+n;return new y(t,m)},function(e,t,l){var n=65280&t,r=(y.udata[n]||{})[t];return new y(t,r||u)}];y.fromCharCode=w.reduceRight(function(e,t){return function(l,n){return t(e,l,n)}},null),y.isHighSurrogate=function(e){return e>=55296&&e<=56319},y.isLowSurrogate=function(e){return e>=56320&&e<=57343},y.prototype.prepFeature=function(){this.feature||(this.feature=y.fromCharCode(this.codepoint,!0).feature)},y.prototype.toString=function(){if(this.codepoint<65536)return String.fromCharCode(this.codepoint);var e=this.codepoint-65536;return String.fromCharCode(Math.floor(e/1024)+55296,e%1024+56320)},y.prototype.getDecomp=function(){return this.prepFeature(),this.feature[0]||null},y.prototype.isCompatibility=function(){return this.prepFeature(),!!this.feature[1]&&256&this.feature[1]},y.prototype.isExclude=function(){return this.prepFeature(),!!this.feature[1]&&512&this.feature[1]},y.prototype.getCanonicalClass=function(){return this.prepFeature(),this.feature[1]?255&this.feature[1]:0},y.prototype.getComposite=function(e){if(this.prepFeature(),!this.feature[2])return null;var t=this.feature[2][e.codepoint];return t?y.fromCharCode(t):null};var A=function(e){this.str=e,this.cursor=0};A.prototype.next=function(){if(this.str&&this.cursor<this.str.length){var e,t=this.str.charCodeAt(this.cursor++);return y.isHighSurrogate(t)&&this.cursor<this.str.length&&y.isLowSurrogate(e=this.str.charCodeAt(this.cursor))&&(t=1024*(t-55296)+(e-56320)+65536,++this.cursor),y.fromCharCode(t)}return this.str=null,null};var B=function(e,t){this.it=e,this.canonical=t,this.resBuf=[]};B.prototype.next=function(){if(0===this.resBuf.length){var e=this.it.next();if(!e)return null;this.resBuf=function e(t,l){var n=l.getDecomp();if(!n||t&&l.isCompatibility())return[l];for(var r=[],o=0;o<n.length;++o){var u=e(t,y.fromCharCode(n[o]));r=r.concat(u)}return r}(this.canonical,e)}return this.resBuf.shift()};var M=function(e){this.it=e,this.resBuf=[]};M.prototype.next=function(){var e;if(0===this.resBuf.length)do{var t=this.it.next();if(!t)break;e=t.getCanonicalClass();var l=this.resBuf.length;if(0!==e)for(;l>0;--l){if(this.resBuf[l-1].getCanonicalClass()<=e)break}this.resBuf.splice(l,0,t)}while(0!==e);return this.resBuf.shift()};var T=function(e){this.it=e,this.procBuf=[],this.resBuf=[],this.lastClass=null};T.prototype.next=function(){for(;0===this.resBuf.length;){var e=this.it.next();if(!e){this.resBuf=this.procBuf,this.procBuf=[];break}if(0===this.procBuf.length)this.lastClass=e.getCanonicalClass(),this.procBuf.push(e);else{var t=this.procBuf[0].getComposite(e),l=e.getCanonicalClass();t&&(this.lastClass<l||0===this.lastClass)?this.procBuf[0]=t:(0===l&&(this.resBuf=this.procBuf,this.procBuf=[]),this.lastClass=l,this.procBuf.push(e))}}return this.resBuf.shift()};var E=function(e,t){for(var l,n=function(e,t){switch(e){case"NFD":return new M(new B(new A(t),!0));case"NFKD":return new M(new B(new A(t),!1));case"NFC":return new T(new M(new B(new A(t),!0)));case"NFKC":return new T(new M(new B(new A(t),!1)))}throw e+" is invalid"}(e,t),r="";l=n.next();)r+=l.toString();return r};y.udata={0:{60:[,,{824:8814}],61:[,,{824:8800}],62:[,,{824:8815}],65:[,,{768:192,769:193,770:194,771:195,772:256,774:258,775:550,776:196,777:7842,778:197,780:461,783:512,785:514,803:7840,805:7680,808:260}],66:[,,{775:7682,803:7684,817:7686}],67:[,,{769:262,770:264,775:266,780:268,807:199}],68:[,,{775:7690,780:270,803:7692,807:7696,813:7698,817:7694}],69:[,,{768:200,769:201,770:202,771:7868,772:274,774:276,775:278,776:203,777:7866,780:282,783:516,785:518,803:7864,807:552,808:280,813:7704,816:7706}],70:[,,{775:7710}],71:[,,{769:500,770:284,772:7712,774:286,775:288,780:486,807:290}],72:[,,{770:292,775:7714,776:7718,780:542,803:7716,807:7720,814:7722}],73:[,,{768:204,769:205,770:206,771:296,772:298,774:300,775:304,776:207,777:7880,780:463,783:520,785:522,803:7882,808:302,816:7724}],74:[,,{770:308}],75:[,,{769:7728,780:488,803:7730,807:310,817:7732}],76:[,,{769:313,780:317,803:7734,807:315,813:7740,817:7738}],77:[,,{769:7742,775:7744,803:7746}],78:[,,{768:504,769:323,771:209,775:7748,780:327,803:7750,807:325,813:7754,817:7752}],79:[,,{768:210,769:211,770:212,771:213,772:332,774:334,775:558,776:214,777:7886,779:336,780:465,783:524,785:526,795:416,803:7884,808:490}],80:[,,{769:7764,775:7766}],82:[,,{769:340,775:7768,780:344,783:528,785:530,803:7770,807:342,817:7774}],83:[,,{769:346,770:348,775:7776,780:352,803:7778,806:536,807:350}],84:[,,{775:7786,780:356,803:7788,806:538,807:354,813:7792,817:7790}],85:[,,{768:217,769:218,770:219,771:360,772:362,774:364,776:220,777:7910,778:366,779:368,780:467,783:532,785:534,795:431,803:7908,804:7794,808:370,813:7798,816:7796}],86:[,,{771:7804,803:7806}],87:[,,{768:7808,769:7810,770:372,775:7814,776:7812,803:7816}],88:[,,{775:7818,776:7820}],89:[,,{768:7922,769:221,770:374,771:7928,772:562,775:7822,776:376,777:7926,803:7924}],90:[,,{769:377,770:7824,775:379,780:381,803:7826,817:7828}],97:[,,{768:224,769:225,770:226,771:227,772:257,774:259,775:551,776:228,777:7843,778:229,780:462,783:513,785:515,803:7841,805:7681,808:261}],98:[,,{775:7683,803:7685,817:7687}],99:[,,{769:263,770:265,775:267,780:269,807:231}],100:[,,{775:7691,780:271,803:7693,807:7697,813:7699,817:7695}],101:[,,{768:232,769:233,770:234,771:7869,772:275,774:277,775:279,776:235,777:7867,780:283,783:517,785:519,803:7865,807:553,808:281,813:7705,816:7707}],102:[,,{775:7711}],103:[,,{769:501,770:285,772:7713,774:287,775:289,780:487,807:291}],104:[,,{770:293,775:7715,776:7719,780:543,803:7717,807:7721,814:7723,817:7830}],105:[,,{768:236,769:237,770:238,771:297,772:299,774:301,776:239,777:7881,780:464,783:521,785:523,803:7883,808:303,816:7725}],106:[,,{770:309,780:496}],107:[,,{769:7729,780:489,803:7731,807:311,817:7733}],108:[,,{769:314,780:318,803:7735,807:316,813:7741,817:7739}],109:[,,{769:7743,775:7745,803:7747}],110:[,,{768:505,769:324,771:241,775:7749,780:328,803:7751,807:326,813:7755,817:7753}],111:[,,{768:242,769:243,770:244,771:245,772:333,774:335,775:559,776:246,777:7887,779:337,780:466,783:525,785:527,795:417,803:7885,808:491}],112:[,,{769:7765,775:7767}],114:[,,{769:341,775:7769,780:345,783:529,785:531,803:7771,807:343,817:7775}],115:[,,{769:347,770:349,775:7777,780:353,803:7779,806:537,807:351}],116:[,,{775:7787,776:7831,780:357,803:7789,806:539,807:355,813:7793,817:7791}],117:[,,{768:249,769:250,770:251,771:361,772:363,774:365,776:252,777:7911,778:367,779:369,780:468,783:533,785:535,795:432,803:7909,804:7795,808:371,813:7799,816:7797}],118:[,,{771:7805,803:7807}],119:[,,{768:7809,769:7811,770:373,775:7815,776:7813,778:7832,803:7817}],120:[,,{775:7819,776:7821}],121:[,,{768:7923,769:253,770:375,771:7929,772:563,775:7823,776:255,777:7927,778:7833,803:7925}],122:[,,{769:378,770:7825,775:380,780:382,803:7827,817:7829}],160:[[32],256],168:[[32,776],256,{768:8173,769:901,834:8129}],170:[[97],256],175:[[32,772],256],178:[[50],256],179:[[51],256],180:[[32,769],256],181:[[956],256],184:[[32,807],256],185:[[49],256],186:[[111],256],188:[[49,8260,52],256],189:[[49,8260,50],256],190:[[51,8260,52],256],192:[[65,768]],193:[[65,769]],194:[[65,770],,{768:7846,769:7844,771:7850,777:7848}],195:[[65,771]],196:[[65,776],,{772:478}],197:[[65,778],,{769:506}],198:[,,{769:508,772:482}],199:[[67,807],,{769:7688}],200:[[69,768]],201:[[69,769]],202:[[69,770],,{768:7872,769:7870,771:7876,777:7874}],203:[[69,776]],204:[[73,768]],205:[[73,769]],206:[[73,770]],207:[[73,776],,{769:7726}],209:[[78,771]],210:[[79,768]],211:[[79,769]],212:[[79,770],,{768:7890,769:7888,771:7894,777:7892}],213:[[79,771],,{769:7756,772:556,776:7758}],214:[[79,776],,{772:554}],216:[,,{769:510}],217:[[85,768]],218:[[85,769]],219:[[85,770]],220:[[85,776],,{768:475,769:471,772:469,780:473}],221:[[89,769]],224:[[97,768]],225:[[97,769]],226:[[97,770],,{768:7847,769:7845,771:7851,777:7849}],227:[[97,771]],228:[[97,776],,{772:479}],229:[[97,778],,{769:507}],230:[,,{769:509,772:483}],231:[[99,807],,{769:7689}],232:[[101,768]],233:[[101,769]],234:[[101,770],,{768:7873,769:7871,771:7877,777:7875}],235:[[101,776]],236:[[105,768]],237:[[105,769]],238:[[105,770]],239:[[105,776],,{769:7727}],241:[[110,771]],242:[[111,768]],243:[[111,769]],244:[[111,770],,{768:7891,769:7889,771:7895,777:7893}],245:[[111,771],,{769:7757,772:557,776:7759}],246:[[111,776],,{772:555}],248:[,,{769:511}],249:[[117,768]],250:[[117,769]],251:[[117,770]],252:[[117,776],,{768:476,769:472,772:470,780:474}],253:[[121,769]],255:[[121,776]]},256:{256:[[65,772]],257:[[97,772]],258:[[65,774],,{768:7856,769:7854,771:7860,777:7858}],259:[[97,774],,{768:7857,769:7855,771:7861,777:7859}],260:[[65,808]],261:[[97,808]],262:[[67,769]],263:[[99,769]],264:[[67,770]],265:[[99,770]],266:[[67,775]],267:[[99,775]],268:[[67,780]],269:[[99,780]],270:[[68,780]],271:[[100,780]],274:[[69,772],,{768:7700,769:7702}],275:[[101,772],,{768:7701,769:7703}],276:[[69,774]],277:[[101,774]],278:[[69,775]],279:[[101,775]],280:[[69,808]],281:[[101,808]],282:[[69,780]],283:[[101,780]],284:[[71,770]],285:[[103,770]],286:[[71,774]],287:[[103,774]],288:[[71,775]],289:[[103,775]],290:[[71,807]],291:[[103,807]],292:[[72,770]],293:[[104,770]],296:[[73,771]],297:[[105,771]],298:[[73,772]],299:[[105,772]],300:[[73,774]],301:[[105,774]],302:[[73,808]],303:[[105,808]],304:[[73,775]],306:[[73,74],256],307:[[105,106],256],308:[[74,770]],309:[[106,770]],310:[[75,807]],311:[[107,807]],313:[[76,769]],314:[[108,769]],315:[[76,807]],316:[[108,807]],317:[[76,780]],318:[[108,780]],319:[[76,183],256],320:[[108,183],256],323:[[78,769]],324:[[110,769]],325:[[78,807]],326:[[110,807]],327:[[78,780]],328:[[110,780]],329:[[700,110],256],332:[[79,772],,{768:7760,769:7762}],333:[[111,772],,{768:7761,769:7763}],334:[[79,774]],335:[[111,774]],336:[[79,779]],337:[[111,779]],340:[[82,769]],341:[[114,769]],342:[[82,807]],343:[[114,807]],344:[[82,780]],345:[[114,780]],346:[[83,769],,{775:7780}],347:[[115,769],,{775:7781}],348:[[83,770]],349:[[115,770]],350:[[83,807]],351:[[115,807]],352:[[83,780],,{775:7782}],353:[[115,780],,{775:7783}],354:[[84,807]],355:[[116,807]],356:[[84,780]],357:[[116,780]],360:[[85,771],,{769:7800}],361:[[117,771],,{769:7801}],362:[[85,772],,{776:7802}],363:[[117,772],,{776:7803}],364:[[85,774]],365:[[117,774]],366:[[85,778]],367:[[117,778]],368:[[85,779]],369:[[117,779]],370:[[85,808]],371:[[117,808]],372:[[87,770]],373:[[119,770]],374:[[89,770]],375:[[121,770]],376:[[89,776]],377:[[90,769]],378:[[122,769]],379:[[90,775]],380:[[122,775]],381:[[90,780]],382:[[122,780]],383:[[115],256,{775:7835}],416:[[79,795],,{768:7900,769:7898,771:7904,777:7902,803:7906}],417:[[111,795],,{768:7901,769:7899,771:7905,777:7903,803:7907}],431:[[85,795],,{768:7914,769:7912,771:7918,777:7916,803:7920}],432:[[117,795],,{768:7915,769:7913,771:7919,777:7917,803:7921}],439:[,,{780:494}],452:[[68,381],256],453:[[68,382],256],454:[[100,382],256],455:[[76,74],256],456:[[76,106],256],457:[[108,106],256],458:[[78,74],256],459:[[78,106],256],460:[[110,106],256],461:[[65,780]],462:[[97,780]],463:[[73,780]],464:[[105,780]],465:[[79,780]],466:[[111,780]],467:[[85,780]],468:[[117,780]],469:[[220,772]],470:[[252,772]],471:[[220,769]],472:[[252,769]],473:[[220,780]],474:[[252,780]],475:[[220,768]],476:[[252,768]],478:[[196,772]],479:[[228,772]],480:[[550,772]],481:[[551,772]],482:[[198,772]],483:[[230,772]],486:[[71,780]],487:[[103,780]],488:[[75,780]],489:[[107,780]],490:[[79,808],,{772:492}],491:[[111,808],,{772:493}],492:[[490,772]],493:[[491,772]],494:[[439,780]],495:[[658,780]],496:[[106,780]],497:[[68,90],256],498:[[68,122],256],499:[[100,122],256],500:[[71,769]],501:[[103,769]],504:[[78,768]],505:[[110,768]],506:[[197,769]],507:[[229,769]],508:[[198,769]],509:[[230,769]],510:[[216,769]],511:[[248,769]],66045:[,220]},512:{512:[[65,783]],513:[[97,783]],514:[[65,785]],515:[[97,785]],516:[[69,783]],517:[[101,783]],518:[[69,785]],519:[[101,785]],520:[[73,783]],521:[[105,783]],522:[[73,785]],523:[[105,785]],524:[[79,783]],525:[[111,783]],526:[[79,785]],527:[[111,785]],528:[[82,783]],529:[[114,783]],530:[[82,785]],531:[[114,785]],532:[[85,783]],533:[[117,783]],534:[[85,785]],535:[[117,785]],536:[[83,806]],537:[[115,806]],538:[[84,806]],539:[[116,806]],542:[[72,780]],543:[[104,780]],550:[[65,775],,{772:480}],551:[[97,775],,{772:481}],552:[[69,807],,{774:7708}],553:[[101,807],,{774:7709}],554:[[214,772]],555:[[246,772]],556:[[213,772]],557:[[245,772]],558:[[79,775],,{772:560}],559:[[111,775],,{772:561}],560:[[558,772]],561:[[559,772]],562:[[89,772]],563:[[121,772]],658:[,,{780:495}],688:[[104],256],689:[[614],256],690:[[106],256],691:[[114],256],692:[[633],256],693:[[635],256],694:[[641],256],695:[[119],256],696:[[121],256],728:[[32,774],256],729:[[32,775],256],730:[[32,778],256],731:[[32,808],256],732:[[32,771],256],733:[[32,779],256],736:[[611],256],737:[[108],256],738:[[115],256],739:[[120],256],740:[[661],256],66272:[,220]},768:{768:[,230],769:[,230],770:[,230],771:[,230],772:[,230],773:[,230],774:[,230],775:[,230],776:[,230,{769:836}],777:[,230],778:[,230],779:[,230],780:[,230],781:[,230],782:[,230],783:[,230],784:[,230],785:[,230],786:[,230],787:[,230],788:[,230],789:[,232],790:[,220],791:[,220],792:[,220],793:[,220],794:[,232],795:[,216],796:[,220],797:[,220],798:[,220],799:[,220],800:[,220],801:[,202],802:[,202],803:[,220],804:[,220],805:[,220],806:[,220],807:[,202],808:[,202],809:[,220],810:[,220],811:[,220],812:[,220],813:[,220],814:[,220],815:[,220],816:[,220],817:[,220],818:[,220],819:[,220],820:[,1],821:[,1],822:[,1],823:[,1],824:[,1],825:[,220],826:[,220],827:[,220],828:[,220],829:[,230],830:[,230],831:[,230],832:[[768],230],833:[[769],230],834:[,230],835:[[787],230],836:[[776,769],230],837:[,240],838:[,230],839:[,220],840:[,220],841:[,220],842:[,230],843:[,230],844:[,230],845:[,220],846:[,220],848:[,230],849:[,230],850:[,230],851:[,220],852:[,220],853:[,220],854:[,220],855:[,230],856:[,232],857:[,220],858:[,220],859:[,230],860:[,233],861:[,234],862:[,234],863:[,233],864:[,234],865:[,234],866:[,233],867:[,230],868:[,230],869:[,230],870:[,230],871:[,230],872:[,230],873:[,230],874:[,230],875:[,230],876:[,230],877:[,230],878:[,230],879:[,230],884:[[697]],890:[[32,837],256],894:[[59]],900:[[32,769],256],901:[[168,769]],902:[[913,769]],903:[[183]],904:[[917,769]],905:[[919,769]],906:[[921,769]],908:[[927,769]],910:[[933,769]],911:[[937,769]],912:[[970,769]],913:[,,{768:8122,769:902,772:8121,774:8120,787:7944,788:7945,837:8124}],917:[,,{768:8136,769:904,787:7960,788:7961}],919:[,,{768:8138,769:905,787:7976,788:7977,837:8140}],921:[,,{768:8154,769:906,772:8153,774:8152,776:938,787:7992,788:7993}],927:[,,{768:8184,769:908,787:8008,788:8009}],929:[,,{788:8172}],933:[,,{768:8170,769:910,772:8169,774:8168,776:939,788:8025}],937:[,,{768:8186,769:911,787:8040,788:8041,837:8188}],938:[[921,776]],939:[[933,776]],940:[[945,769],,{837:8116}],941:[[949,769]],942:[[951,769],,{837:8132}],943:[[953,769]],944:[[971,769]],945:[,,{768:8048,769:940,772:8113,774:8112,787:7936,788:7937,834:8118,837:8115}],949:[,,{768:8050,769:941,787:7952,788:7953}],951:[,,{768:8052,769:942,787:7968,788:7969,834:8134,837:8131}],953:[,,{768:8054,769:943,772:8145,774:8144,776:970,787:7984,788:7985,834:8150}],959:[,,{768:8056,769:972,787:8e3,788:8001}],961:[,,{787:8164,788:8165}],965:[,,{768:8058,769:973,772:8161,774:8160,776:971,787:8016,788:8017,834:8166}],969:[,,{768:8060,769:974,787:8032,788:8033,834:8182,837:8179}],970:[[953,776],,{768:8146,769:912,834:8151}],971:[[965,776],,{768:8162,769:944,834:8167}],972:[[959,769]],973:[[965,769]],974:[[969,769],,{837:8180}],976:[[946],256],977:[[952],256],978:[[933],256,{769:979,776:980}],979:[[978,769]],980:[[978,776]],981:[[966],256],982:[[960],256],1008:[[954],256],1009:[[961],256],1010:[[962],256],1012:[[920],256],1013:[[949],256],1017:[[931],256],66422:[,230],66423:[,230],66424:[,230],66425:[,230],66426:[,230]},1024:{1024:[[1045,768]],1025:[[1045,776]],1027:[[1043,769]],1030:[,,{776:1031}],1031:[[1030,776]],1036:[[1050,769]],1037:[[1048,768]],1038:[[1059,774]],1040:[,,{774:1232,776:1234}],1043:[,,{769:1027}],1045:[,,{768:1024,774:1238,776:1025}],1046:[,,{774:1217,776:1244}],1047:[,,{776:1246}],1048:[,,{768:1037,772:1250,774:1049,776:1252}],1049:[[1048,774]],1050:[,,{769:1036}],1054:[,,{776:1254}],1059:[,,{772:1262,774:1038,776:1264,779:1266}],1063:[,,{776:1268}],1067:[,,{776:1272}],1069:[,,{776:1260}],1072:[,,{774:1233,776:1235}],1075:[,,{769:1107}],1077:[,,{768:1104,774:1239,776:1105}],1078:[,,{774:1218,776:1245}],1079:[,,{776:1247}],1080:[,,{768:1117,772:1251,774:1081,776:1253}],1081:[[1080,774]],1082:[,,{769:1116}],1086:[,,{776:1255}],1091:[,,{772:1263,774:1118,776:1265,779:1267}],1095:[,,{776:1269}],1099:[,,{776:1273}],1101:[,,{776:1261}],1104:[[1077,768]],1105:[[1077,776]],1107:[[1075,769]],1110:[,,{776:1111}],1111:[[1110,776]],1116:[[1082,769]],1117:[[1080,768]],1118:[[1091,774]],1140:[,,{783:1142}],1141:[,,{783:1143}],1142:[[1140,783]],1143:[[1141,783]],1155:[,230],1156:[,230],1157:[,230],1158:[,230],1159:[,230],1217:[[1046,774]],1218:[[1078,774]],1232:[[1040,774]],1233:[[1072,774]],1234:[[1040,776]],1235:[[1072,776]],1238:[[1045,774]],1239:[[1077,774]],1240:[,,{776:1242}],1241:[,,{776:1243}],1242:[[1240,776]],1243:[[1241,776]],1244:[[1046,776]],1245:[[1078,776]],1246:[[1047,776]],1247:[[1079,776]],1250:[[1048,772]],1251:[[1080,772]],1252:[[1048,776]],1253:[[1080,776]],1254:[[1054,776]],1255:[[1086,776]],1256:[,,{776:1258}],1257:[,,{776:1259}],1258:[[1256,776]],1259:[[1257,776]],1260:[[1069,776]],1261:[[1101,776]],1262:[[1059,772]],1263:[[1091,772]],1264:[[1059,776]],1265:[[1091,776]],1266:[[1059,779]],1267:[[1091,779]],1268:[[1063,776]],1269:[[1095,776]],1272:[[1067,776]],1273:[[1099,776]]},1280:{1415:[[1381,1410],256],1425:[,220],1426:[,230],1427:[,230],1428:[,230],1429:[,230],1430:[,220],1431:[,230],1432:[,230],1433:[,230],1434:[,222],1435:[,220],1436:[,230],1437:[,230],1438:[,230],1439:[,230],1440:[,230],1441:[,230],1442:[,220],1443:[,220],1444:[,220],1445:[,220],1446:[,220],1447:[,220],1448:[,230],1449:[,230],1450:[,220],1451:[,230],1452:[,230],1453:[,222],1454:[,228],1455:[,230],1456:[,10],1457:[,11],1458:[,12],1459:[,13],1460:[,14],1461:[,15],1462:[,16],1463:[,17],1464:[,18],1465:[,19],1466:[,19],1467:[,20],1468:[,21],1469:[,22],1471:[,23],1473:[,24],1474:[,25],1476:[,230],1477:[,220],1479:[,18]},1536:{1552:[,230],1553:[,230],1554:[,230],1555:[,230],1556:[,230],1557:[,230],1558:[,230],1559:[,230],1560:[,30],1561:[,31],1562:[,32],1570:[[1575,1619]],1571:[[1575,1620]],1572:[[1608,1620]],1573:[[1575,1621]],1574:[[1610,1620]],1575:[,,{1619:1570,1620:1571,1621:1573}],1608:[,,{1620:1572}],1610:[,,{1620:1574}],1611:[,27],1612:[,28],1613:[,29],1614:[,30],1615:[,31],1616:[,32],1617:[,33],1618:[,34],1619:[,230],1620:[,230],1621:[,220],1622:[,220],1623:[,230],1624:[,230],1625:[,230],1626:[,230],1627:[,230],1628:[,220],1629:[,230],1630:[,230],1631:[,220],1648:[,35],1653:[[1575,1652],256],1654:[[1608,1652],256],1655:[[1735,1652],256],1656:[[1610,1652],256],1728:[[1749,1620]],1729:[,,{1620:1730}],1730:[[1729,1620]],1746:[,,{1620:1747}],1747:[[1746,1620]],1749:[,,{1620:1728}],1750:[,230],1751:[,230],1752:[,230],1753:[,230],1754:[,230],1755:[,230],1756:[,230],1759:[,230],1760:[,230],1761:[,230],1762:[,230],1763:[,220],1764:[,230],1767:[,230],1768:[,230],1770:[,220],1771:[,230],1772:[,230],1773:[,220]},1792:{1809:[,36],1840:[,230],1841:[,220],1842:[,230],1843:[,230],1844:[,220],1845:[,230],1846:[,230],1847:[,220],1848:[,220],1849:[,220],1850:[,230],1851:[,220],1852:[,220],1853:[,230],1854:[,220],1855:[,230],1856:[,230],1857:[,230],1858:[,220],1859:[,230],1860:[,220],1861:[,230],1862:[,220],1863:[,230],1864:[,220],1865:[,230],1866:[,230],2027:[,230],2028:[,230],2029:[,230],2030:[,230],2031:[,230],2032:[,230],2033:[,230],2034:[,220],2035:[,230]},2048:{2070:[,230],2071:[,230],2072:[,230],2073:[,230],2075:[,230],2076:[,230],2077:[,230],2078:[,230],2079:[,230],2080:[,230],2081:[,230],2082:[,230],2083:[,230],2085:[,230],2086:[,230],2087:[,230],2089:[,230],2090:[,230],2091:[,230],2092:[,230],2093:[,230],2137:[,220],2138:[,220],2139:[,220],2276:[,230],2277:[,230],2278:[,220],2279:[,230],2280:[,230],2281:[,220],2282:[,230],2283:[,230],2284:[,230],2285:[,220],2286:[,220],2287:[,220],2288:[,27],2289:[,28],2290:[,29],2291:[,230],2292:[,230],2293:[,230],2294:[,220],2295:[,230],2296:[,230],2297:[,220],2298:[,220],2299:[,230],2300:[,230],2301:[,230],2302:[,230],2303:[,230]},2304:{2344:[,,{2364:2345}],2345:[[2344,2364]],2352:[,,{2364:2353}],2353:[[2352,2364]],2355:[,,{2364:2356}],2356:[[2355,2364]],2364:[,7],2381:[,9],2385:[,230],2386:[,220],2387:[,230],2388:[,230],2392:[[2325,2364],512],2393:[[2326,2364],512],2394:[[2327,2364],512],2395:[[2332,2364],512],2396:[[2337,2364],512],2397:[[2338,2364],512],2398:[[2347,2364],512],2399:[[2351,2364],512],2492:[,7],2503:[,,{2494:2507,2519:2508}],2507:[[2503,2494]],2508:[[2503,2519]],2509:[,9],2524:[[2465,2492],512],2525:[[2466,2492],512],2527:[[2479,2492],512]},2560:{2611:[[2610,2620],512],2614:[[2616,2620],512],2620:[,7],2637:[,9],2649:[[2582,2620],512],2650:[[2583,2620],512],2651:[[2588,2620],512],2654:[[2603,2620],512],2748:[,7],2765:[,9],68109:[,220],68111:[,230],68152:[,230],68153:[,1],68154:[,220],68159:[,9],68325:[,230],68326:[,220]},2816:{2876:[,7],2887:[,,{2878:2891,2902:2888,2903:2892}],2888:[[2887,2902]],2891:[[2887,2878]],2892:[[2887,2903]],2893:[,9],2908:[[2849,2876],512],2909:[[2850,2876],512],2962:[,,{3031:2964}],2964:[[2962,3031]],3014:[,,{3006:3018,3031:3020}],3015:[,,{3006:3019}],3018:[[3014,3006]],3019:[[3015,3006]],3020:[[3014,3031]],3021:[,9]},3072:{3142:[,,{3158:3144}],3144:[[3142,3158]],3149:[,9],3157:[,84],3158:[,91],3260:[,7],3263:[,,{3285:3264}],3264:[[3263,3285]],3270:[,,{3266:3274,3285:3271,3286:3272}],3271:[[3270,3285]],3272:[[3270,3286]],3274:[[3270,3266],,{3285:3275}],3275:[[3274,3285]],3277:[,9]},3328:{3398:[,,{3390:3402,3415:3404}],3399:[,,{3390:3403}],3402:[[3398,3390]],3403:[[3399,3390]],3404:[[3398,3415]],3405:[,9],3530:[,9],3545:[,,{3530:3546,3535:3548,3551:3550}],3546:[[3545,3530]],3548:[[3545,3535],,{3530:3549}],3549:[[3548,3530]],3550:[[3545,3551]]},3584:{3635:[[3661,3634],256],3640:[,103],3641:[,103],3642:[,9],3656:[,107],3657:[,107],3658:[,107],3659:[,107],3763:[[3789,3762],256],3768:[,118],3769:[,118],3784:[,122],3785:[,122],3786:[,122],3787:[,122],3804:[[3755,3737],256],3805:[[3755,3745],256]},3840:{3852:[[3851],256],3864:[,220],3865:[,220],3893:[,220],3895:[,220],3897:[,216],3907:[[3906,4023],512],3917:[[3916,4023],512],3922:[[3921,4023],512],3927:[[3926,4023],512],3932:[[3931,4023],512],3945:[[3904,4021],512],3953:[,129],3954:[,130],3955:[[3953,3954],512],3956:[,132],3957:[[3953,3956],512],3958:[[4018,3968],512],3959:[[4018,3969],256],3960:[[4019,3968],512],3961:[[4019,3969],256],3962:[,130],3963:[,130],3964:[,130],3965:[,130],3968:[,130],3969:[[3953,3968],512],3970:[,230],3971:[,230],3972:[,9],3974:[,230],3975:[,230],3987:[[3986,4023],512],3997:[[3996,4023],512],4002:[[4001,4023],512],4007:[[4006,4023],512],4012:[[4011,4023],512],4025:[[3984,4021],512],4038:[,220]},4096:{4133:[,,{4142:4134}],4134:[[4133,4142]],4151:[,7],4153:[,9],4154:[,9],4237:[,220],4348:[[4316],256],69702:[,9],69759:[,9],69785:[,,{69818:69786}],69786:[[69785,69818]],69787:[,,{69818:69788}],69788:[[69787,69818]],69797:[,,{69818:69803}],69803:[[69797,69818]],69817:[,9],69818:[,7]},4352:{69888:[,230],69889:[,230],69890:[,230],69934:[[69937,69927]],69935:[[69938,69927]],69937:[,,{69927:69934}],69938:[,,{69927:69935}],69939:[,9],69940:[,9],70003:[,7],70080:[,9]},4608:{70197:[,9],70198:[,7],70377:[,7],70378:[,9]},4864:{4957:[,230],4958:[,230],4959:[,230],70460:[,7],70471:[,,{70462:70475,70487:70476}],70475:[[70471,70462]],70476:[[70471,70487]],70477:[,9],70502:[,230],70503:[,230],70504:[,230],70505:[,230],70506:[,230],70507:[,230],70508:[,230],70512:[,230],70513:[,230],70514:[,230],70515:[,230],70516:[,230]},5120:{70841:[,,{70832:70844,70842:70843,70845:70846}],70843:[[70841,70842]],70844:[[70841,70832]],70846:[[70841,70845]],70850:[,9],70851:[,7]},5376:{71096:[,,{71087:71098}],71097:[,,{71087:71099}],71098:[[71096,71087]],71099:[[71097,71087]],71103:[,9],71104:[,7]},5632:{71231:[,9],71350:[,9],71351:[,7]},5888:{5908:[,9],5940:[,9],6098:[,9],6109:[,230]},6144:{6313:[,228]},6400:{6457:[,222],6458:[,230],6459:[,220]},6656:{6679:[,230],6680:[,220],6752:[,9],6773:[,230],6774:[,230],6775:[,230],6776:[,230],6777:[,230],6778:[,230],6779:[,230],6780:[,230],6783:[,220],6832:[,230],6833:[,230],6834:[,230],6835:[,230],6836:[,230],6837:[,220],6838:[,220],6839:[,220],6840:[,220],6841:[,220],6842:[,220],6843:[,230],6844:[,230],6845:[,220]},6912:{6917:[,,{6965:6918}],6918:[[6917,6965]],6919:[,,{6965:6920}],6920:[[6919,6965]],6921:[,,{6965:6922}],6922:[[6921,6965]],6923:[,,{6965:6924}],6924:[[6923,6965]],6925:[,,{6965:6926}],6926:[[6925,6965]],6929:[,,{6965:6930}],6930:[[6929,6965]],6964:[,7],6970:[,,{6965:6971}],6971:[[6970,6965]],6972:[,,{6965:6973}],6973:[[6972,6965]],6974:[,,{6965:6976}],6975:[,,{6965:6977}],6976:[[6974,6965]],6977:[[6975,6965]],6978:[,,{6965:6979}],6979:[[6978,6965]],6980:[,9],7019:[,230],7020:[,220],7021:[,230],7022:[,230],7023:[,230],7024:[,230],7025:[,230],7026:[,230],7027:[,230],7082:[,9],7083:[,9],7142:[,7],7154:[,9],7155:[,9]},7168:{7223:[,7],7376:[,230],7377:[,230],7378:[,230],7380:[,1],7381:[,220],7382:[,220],7383:[,220],7384:[,220],7385:[,220],7386:[,230],7387:[,230],7388:[,220],7389:[,220],7390:[,220],7391:[,220],7392:[,230],7394:[,1],7395:[,1],7396:[,1],7397:[,1],7398:[,1],7399:[,1],7400:[,1],7405:[,220],7412:[,230],7416:[,230],7417:[,230]},7424:{7468:[[65],256],7469:[[198],256],7470:[[66],256],7472:[[68],256],7473:[[69],256],7474:[[398],256],7475:[[71],256],7476:[[72],256],7477:[[73],256],7478:[[74],256],7479:[[75],256],7480:[[76],256],7481:[[77],256],7482:[[78],256],7484:[[79],256],7485:[[546],256],7486:[[80],256],7487:[[82],256],7488:[[84],256],7489:[[85],256],7490:[[87],256],7491:[[97],256],7492:[[592],256],7493:[[593],256],7494:[[7426],256],7495:[[98],256],7496:[[100],256],7497:[[101],256],7498:[[601],256],7499:[[603],256],7500:[[604],256],7501:[[103],256],7503:[[107],256],7504:[[109],256],7505:[[331],256],7506:[[111],256],7507:[[596],256],7508:[[7446],256],7509:[[7447],256],7510:[[112],256],7511:[[116],256],7512:[[117],256],7513:[[7453],256],7514:[[623],256],7515:[[118],256],7516:[[7461],256],7517:[[946],256],7518:[[947],256],7519:[[948],256],7520:[[966],256],7521:[[967],256],7522:[[105],256],7523:[[114],256],7524:[[117],256],7525:[[118],256],7526:[[946],256],7527:[[947],256],7528:[[961],256],7529:[[966],256],7530:[[967],256],7544:[[1085],256],7579:[[594],256],7580:[[99],256],7581:[[597],256],7582:[[240],256],7583:[[604],256],7584:[[102],256],7585:[[607],256],7586:[[609],256],7587:[[613],256],7588:[[616],256],7589:[[617],256],7590:[[618],256],7591:[[7547],256],7592:[[669],256],7593:[[621],256],7594:[[7557],256],7595:[[671],256],7596:[[625],256],7597:[[624],256],7598:[[626],256],7599:[[627],256],7600:[[628],256],7601:[[629],256],7602:[[632],256],7603:[[642],256],7604:[[643],256],7605:[[427],256],7606:[[649],256],7607:[[650],256],7608:[[7452],256],7609:[[651],256],7610:[[652],256],7611:[[122],256],7612:[[656],256],7613:[[657],256],7614:[[658],256],7615:[[952],256],7616:[,230],7617:[,230],7618:[,220],7619:[,230],7620:[,230],7621:[,230],7622:[,230],7623:[,230],7624:[,230],7625:[,230],7626:[,220],7627:[,230],7628:[,230],7629:[,234],7630:[,214],7631:[,220],7632:[,202],7633:[,230],7634:[,230],7635:[,230],7636:[,230],7637:[,230],7638:[,230],7639:[,230],7640:[,230],7641:[,230],7642:[,230],7643:[,230],7644:[,230],7645:[,230],7646:[,230],7647:[,230],7648:[,230],7649:[,230],7650:[,230],7651:[,230],7652:[,230],7653:[,230],7654:[,230],7655:[,230],7656:[,230],7657:[,230],7658:[,230],7659:[,230],7660:[,230],7661:[,230],7662:[,230],7663:[,230],7664:[,230],7665:[,230],7666:[,230],7667:[,230],7668:[,230],7669:[,230],7676:[,233],7677:[,220],7678:[,230],7679:[,220]},7680:{7680:[[65,805]],7681:[[97,805]],7682:[[66,775]],7683:[[98,775]],7684:[[66,803]],7685:[[98,803]],7686:[[66,817]],7687:[[98,817]],7688:[[199,769]],7689:[[231,769]],7690:[[68,775]],7691:[[100,775]],7692:[[68,803]],7693:[[100,803]],7694:[[68,817]],7695:[[100,817]],7696:[[68,807]],7697:[[100,807]],7698:[[68,813]],7699:[[100,813]],7700:[[274,768]],7701:[[275,768]],7702:[[274,769]],7703:[[275,769]],7704:[[69,813]],7705:[[101,813]],7706:[[69,816]],7707:[[101,816]],7708:[[552,774]],7709:[[553,774]],7710:[[70,775]],7711:[[102,775]],7712:[[71,772]],7713:[[103,772]],7714:[[72,775]],7715:[[104,775]],7716:[[72,803]],7717:[[104,803]],7718:[[72,776]],7719:[[104,776]],7720:[[72,807]],7721:[[104,807]],7722:[[72,814]],7723:[[104,814]],7724:[[73,816]],7725:[[105,816]],7726:[[207,769]],7727:[[239,769]],7728:[[75,769]],7729:[[107,769]],7730:[[75,803]],7731:[[107,803]],7732:[[75,817]],7733:[[107,817]],7734:[[76,803],,{772:7736}],7735:[[108,803],,{772:7737}],7736:[[7734,772]],7737:[[7735,772]],7738:[[76,817]],7739:[[108,817]],7740:[[76,813]],7741:[[108,813]],7742:[[77,769]],7743:[[109,769]],7744:[[77,775]],7745:[[109,775]],7746:[[77,803]],7747:[[109,803]],7748:[[78,775]],7749:[[110,775]],7750:[[78,803]],7751:[[110,803]],7752:[[78,817]],7753:[[110,817]],7754:[[78,813]],7755:[[110,813]],7756:[[213,769]],7757:[[245,769]],7758:[[213,776]],7759:[[245,776]],7760:[[332,768]],7761:[[333,768]],7762:[[332,769]],7763:[[333,769]],7764:[[80,769]],7765:[[112,769]],7766:[[80,775]],7767:[[112,775]],7768:[[82,775]],7769:[[114,775]],7770:[[82,803],,{772:7772}],7771:[[114,803],,{772:7773}],7772:[[7770,772]],7773:[[7771,772]],7774:[[82,817]],7775:[[114,817]],7776:[[83,775]],7777:[[115,775]],7778:[[83,803],,{775:7784}],7779:[[115,803],,{775:7785}],7780:[[346,775]],7781:[[347,775]],7782:[[352,775]],7783:[[353,775]],7784:[[7778,775]],7785:[[7779,775]],7786:[[84,775]],7787:[[116,775]],7788:[[84,803]],7789:[[116,803]],7790:[[84,817]],7791:[[116,817]],7792:[[84,813]],7793:[[116,813]],7794:[[85,804]],7795:[[117,804]],7796:[[85,816]],7797:[[117,816]],7798:[[85,813]],7799:[[117,813]],7800:[[360,769]],7801:[[361,769]],7802:[[362,776]],7803:[[363,776]],7804:[[86,771]],7805:[[118,771]],7806:[[86,803]],7807:[[118,803]],7808:[[87,768]],7809:[[119,768]],7810:[[87,769]],7811:[[119,769]],7812:[[87,776]],7813:[[119,776]],7814:[[87,775]],7815:[[119,775]],7816:[[87,803]],7817:[[119,803]],7818:[[88,775]],7819:[[120,775]],7820:[[88,776]],7821:[[120,776]],7822:[[89,775]],7823:[[121,775]],7824:[[90,770]],7825:[[122,770]],7826:[[90,803]],7827:[[122,803]],7828:[[90,817]],7829:[[122,817]],7830:[[104,817]],7831:[[116,776]],7832:[[119,778]],7833:[[121,778]],7834:[[97,702],256],7835:[[383,775]],7840:[[65,803],,{770:7852,774:7862}],7841:[[97,803],,{770:7853,774:7863}],7842:[[65,777]],7843:[[97,777]],7844:[[194,769]],7845:[[226,769]],7846:[[194,768]],7847:[[226,768]],7848:[[194,777]],7849:[[226,777]],7850:[[194,771]],7851:[[226,771]],7852:[[7840,770]],7853:[[7841,770]],7854:[[258,769]],7855:[[259,769]],7856:[[258,768]],7857:[[259,768]],7858:[[258,777]],7859:[[259,777]],7860:[[258,771]],7861:[[259,771]],7862:[[7840,774]],7863:[[7841,774]],7864:[[69,803],,{770:7878}],7865:[[101,803],,{770:7879}],7866:[[69,777]],7867:[[101,777]],7868:[[69,771]],7869:[[101,771]],7870:[[202,769]],7871:[[234,769]],7872:[[202,768]],7873:[[234,768]],7874:[[202,777]],7875:[[234,777]],7876:[[202,771]],7877:[[234,771]],7878:[[7864,770]],7879:[[7865,770]],7880:[[73,777]],7881:[[105,777]],7882:[[73,803]],7883:[[105,803]],7884:[[79,803],,{770:7896}],7885:[[111,803],,{770:7897}],7886:[[79,777]],7887:[[111,777]],7888:[[212,769]],7889:[[244,769]],7890:[[212,768]],7891:[[244,768]],7892:[[212,777]],7893:[[244,777]],7894:[[212,771]],7895:[[244,771]],7896:[[7884,770]],7897:[[7885,770]],7898:[[416,769]],7899:[[417,769]],7900:[[416,768]],7901:[[417,768]],7902:[[416,777]],7903:[[417,777]],7904:[[416,771]],7905:[[417,771]],7906:[[416,803]],7907:[[417,803]],7908:[[85,803]],7909:[[117,803]],7910:[[85,777]],7911:[[117,777]],7912:[[431,769]],7913:[[432,769]],7914:[[431,768]],7915:[[432,768]],7916:[[431,777]],7917:[[432,777]],7918:[[431,771]],7919:[[432,771]],7920:[[431,803]],7921:[[432,803]],7922:[[89,768]],7923:[[121,768]],7924:[[89,803]],7925:[[121,803]],7926:[[89,777]],7927:[[121,777]],7928:[[89,771]],7929:[[121,771]]},7936:{7936:[[945,787],,{768:7938,769:7940,834:7942,837:8064}],7937:[[945,788],,{768:7939,769:7941,834:7943,837:8065}],7938:[[7936,768],,{837:8066}],7939:[[7937,768],,{837:8067}],7940:[[7936,769],,{837:8068}],7941:[[7937,769],,{837:8069}],7942:[[7936,834],,{837:8070}],7943:[[7937,834],,{837:8071}],7944:[[913,787],,{768:7946,769:7948,834:7950,837:8072}],7945:[[913,788],,{768:7947,769:7949,834:7951,837:8073}],7946:[[7944,768],,{837:8074}],7947:[[7945,768],,{837:8075}],7948:[[7944,769],,{837:8076}],7949:[[7945,769],,{837:8077}],7950:[[7944,834],,{837:8078}],7951:[[7945,834],,{837:8079}],7952:[[949,787],,{768:7954,769:7956}],7953:[[949,788],,{768:7955,769:7957}],7954:[[7952,768]],7955:[[7953,768]],7956:[[7952,769]],7957:[[7953,769]],7960:[[917,787],,{768:7962,769:7964}],7961:[[917,788],,{768:7963,769:7965}],7962:[[7960,768]],7963:[[7961,768]],7964:[[7960,769]],7965:[[7961,769]],7968:[[951,787],,{768:7970,769:7972,834:7974,837:8080}],7969:[[951,788],,{768:7971,769:7973,834:7975,837:8081}],7970:[[7968,768],,{837:8082}],7971:[[7969,768],,{837:8083}],7972:[[7968,769],,{837:8084}],7973:[[7969,769],,{837:8085}],7974:[[7968,834],,{837:8086}],7975:[[7969,834],,{837:8087}],7976:[[919,787],,{768:7978,769:7980,834:7982,837:8088}],7977:[[919,788],,{768:7979,769:7981,834:7983,837:8089}],7978:[[7976,768],,{837:8090}],7979:[[7977,768],,{837:8091}],7980:[[7976,769],,{837:8092}],7981:[[7977,769],,{837:8093}],7982:[[7976,834],,{837:8094}],7983:[[7977,834],,{837:8095}],7984:[[953,787],,{768:7986,769:7988,834:7990}],7985:[[953,788],,{768:7987,769:7989,834:7991}],7986:[[7984,768]],7987:[[7985,768]],7988:[[7984,769]],7989:[[7985,769]],7990:[[7984,834]],7991:[[7985,834]],7992:[[921,787],,{768:7994,769:7996,834:7998}],7993:[[921,788],,{768:7995,769:7997,834:7999}],7994:[[7992,768]],7995:[[7993,768]],7996:[[7992,769]],7997:[[7993,769]],7998:[[7992,834]],7999:[[7993,834]],8000:[[959,787],,{768:8002,769:8004}],8001:[[959,788],,{768:8003,769:8005}],8002:[[8e3,768]],8003:[[8001,768]],8004:[[8e3,769]],8005:[[8001,769]],8008:[[927,787],,{768:8010,769:8012}],8009:[[927,788],,{768:8011,769:8013}],8010:[[8008,768]],8011:[[8009,768]],8012:[[8008,769]],8013:[[8009,769]],8016:[[965,787],,{768:8018,769:8020,834:8022}],8017:[[965,788],,{768:8019,769:8021,834:8023}],8018:[[8016,768]],8019:[[8017,768]],8020:[[8016,769]],8021:[[8017,769]],8022:[[8016,834]],8023:[[8017,834]],8025:[[933,788],,{768:8027,769:8029,834:8031}],8027:[[8025,768]],8029:[[8025,769]],8031:[[8025,834]],8032:[[969,787],,{768:8034,769:8036,834:8038,837:8096}],8033:[[969,788],,{768:8035,769:8037,834:8039,837:8097}],8034:[[8032,768],,{837:8098}],8035:[[8033,768],,{837:8099}],8036:[[8032,769],,{837:8100}],8037:[[8033,769],,{837:8101}],8038:[[8032,834],,{837:8102}],8039:[[8033,834],,{837:8103}],8040:[[937,787],,{768:8042,769:8044,834:8046,837:8104}],8041:[[937,788],,{768:8043,769:8045,834:8047,837:8105}],8042:[[8040,768],,{837:8106}],8043:[[8041,768],,{837:8107}],8044:[[8040,769],,{837:8108}],8045:[[8041,769],,{837:8109}],8046:[[8040,834],,{837:8110}],8047:[[8041,834],,{837:8111}],8048:[[945,768],,{837:8114}],8049:[[940]],8050:[[949,768]],8051:[[941]],8052:[[951,768],,{837:8130}],8053:[[942]],8054:[[953,768]],8055:[[943]],8056:[[959,768]],8057:[[972]],8058:[[965,768]],8059:[[973]],8060:[[969,768],,{837:8178}],8061:[[974]],8064:[[7936,837]],8065:[[7937,837]],8066:[[7938,837]],8067:[[7939,837]],8068:[[7940,837]],8069:[[7941,837]],8070:[[7942,837]],8071:[[7943,837]],8072:[[7944,837]],8073:[[7945,837]],8074:[[7946,837]],8075:[[7947,837]],8076:[[7948,837]],8077:[[7949,837]],8078:[[7950,837]],8079:[[7951,837]],8080:[[7968,837]],8081:[[7969,837]],8082:[[7970,837]],8083:[[7971,837]],8084:[[7972,837]],8085:[[7973,837]],8086:[[7974,837]],8087:[[7975,837]],8088:[[7976,837]],8089:[[7977,837]],8090:[[7978,837]],8091:[[7979,837]],8092:[[7980,837]],8093:[[7981,837]],8094:[[7982,837]],8095:[[7983,837]],8096:[[8032,837]],8097:[[8033,837]],8098:[[8034,837]],8099:[[8035,837]],8100:[[8036,837]],8101:[[8037,837]],8102:[[8038,837]],8103:[[8039,837]],8104:[[8040,837]],8105:[[8041,837]],8106:[[8042,837]],8107:[[8043,837]],8108:[[8044,837]],8109:[[8045,837]],8110:[[8046,837]],8111:[[8047,837]],8112:[[945,774]],8113:[[945,772]],8114:[[8048,837]],8115:[[945,837]],8116:[[940,837]],8118:[[945,834],,{837:8119}],8119:[[8118,837]],8120:[[913,774]],8121:[[913,772]],8122:[[913,768]],8123:[[902]],8124:[[913,837]],8125:[[32,787],256],8126:[[953]],8127:[[32,787],256,{768:8141,769:8142,834:8143}],8128:[[32,834],256],8129:[[168,834]],8130:[[8052,837]],8131:[[951,837]],8132:[[942,837]],8134:[[951,834],,{837:8135}],8135:[[8134,837]],8136:[[917,768]],8137:[[904]],8138:[[919,768]],8139:[[905]],8140:[[919,837]],8141:[[8127,768]],8142:[[8127,769]],8143:[[8127,834]],8144:[[953,774]],8145:[[953,772]],8146:[[970,768]],8147:[[912]],8150:[[953,834]],8151:[[970,834]],8152:[[921,774]],8153:[[921,772]],8154:[[921,768]],8155:[[906]],8157:[[8190,768]],8158:[[8190,769]],8159:[[8190,834]],8160:[[965,774]],8161:[[965,772]],8162:[[971,768]],8163:[[944]],8164:[[961,787]],8165:[[961,788]],8166:[[965,834]],8167:[[971,834]],8168:[[933,774]],8169:[[933,772]],8170:[[933,768]],8171:[[910]],8172:[[929,788]],8173:[[168,768]],8174:[[901]],8175:[[96]],8178:[[8060,837]],8179:[[969,837]],8180:[[974,837]],8182:[[969,834],,{837:8183}],8183:[[8182,837]],8184:[[927,768]],8185:[[908]],8186:[[937,768]],8187:[[911]],8188:[[937,837]],8189:[[180]],8190:[[32,788],256,{768:8157,769:8158,834:8159}]},8192:{8192:[[8194]],8193:[[8195]],8194:[[32],256],8195:[[32],256],8196:[[32],256],8197:[[32],256],8198:[[32],256],8199:[[32],256],8200:[[32],256],8201:[[32],256],8202:[[32],256],8209:[[8208],256],8215:[[32,819],256],8228:[[46],256],8229:[[46,46],256],8230:[[46,46,46],256],8239:[[32],256],8243:[[8242,8242],256],8244:[[8242,8242,8242],256],8246:[[8245,8245],256],8247:[[8245,8245,8245],256],8252:[[33,33],256],8254:[[32,773],256],8263:[[63,63],256],8264:[[63,33],256],8265:[[33,63],256],8279:[[8242,8242,8242,8242],256],8287:[[32],256],8304:[[48],256],8305:[[105],256],8308:[[52],256],8309:[[53],256],8310:[[54],256],8311:[[55],256],8312:[[56],256],8313:[[57],256],8314:[[43],256],8315:[[8722],256],8316:[[61],256],8317:[[40],256],8318:[[41],256],8319:[[110],256],8320:[[48],256],8321:[[49],256],8322:[[50],256],8323:[[51],256],8324:[[52],256],8325:[[53],256],8326:[[54],256],8327:[[55],256],8328:[[56],256],8329:[[57],256],8330:[[43],256],8331:[[8722],256],8332:[[61],256],8333:[[40],256],8334:[[41],256],8336:[[97],256],8337:[[101],256],8338:[[111],256],8339:[[120],256],8340:[[601],256],8341:[[104],256],8342:[[107],256],8343:[[108],256],8344:[[109],256],8345:[[110],256],8346:[[112],256],8347:[[115],256],8348:[[116],256],8360:[[82,115],256],8400:[,230],8401:[,230],8402:[,1],8403:[,1],8404:[,230],8405:[,230],8406:[,230],8407:[,230],8408:[,1],8409:[,1],8410:[,1],8411:[,230],8412:[,230],8417:[,230],8421:[,1],8422:[,1],8423:[,230],8424:[,220],8425:[,230],8426:[,1],8427:[,1],8428:[,220],8429:[,220],8430:[,220],8431:[,220],8432:[,230]},8448:{8448:[[97,47,99],256],8449:[[97,47,115],256],8450:[[67],256],8451:[[176,67],256],8453:[[99,47,111],256],8454:[[99,47,117],256],8455:[[400],256],8457:[[176,70],256],8458:[[103],256],8459:[[72],256],8460:[[72],256],8461:[[72],256],8462:[[104],256],8463:[[295],256],8464:[[73],256],8465:[[73],256],8466:[[76],256],8467:[[108],256],8469:[[78],256],8470:[[78,111],256],8473:[[80],256],8474:[[81],256],8475:[[82],256],8476:[[82],256],8477:[[82],256],8480:[[83,77],256],8481:[[84,69,76],256],8482:[[84,77],256],8484:[[90],256],8486:[[937]],8488:[[90],256],8490:[[75]],8491:[[197]],8492:[[66],256],8493:[[67],256],8495:[[101],256],8496:[[69],256],8497:[[70],256],8499:[[77],256],8500:[[111],256],8501:[[1488],256],8502:[[1489],256],8503:[[1490],256],8504:[[1491],256],8505:[[105],256],8507:[[70,65,88],256],8508:[[960],256],8509:[[947],256],8510:[[915],256],8511:[[928],256],8512:[[8721],256],8517:[[68],256],8518:[[100],256],8519:[[101],256],8520:[[105],256],8521:[[106],256],8528:[[49,8260,55],256],8529:[[49,8260,57],256],8530:[[49,8260,49,48],256],8531:[[49,8260,51],256],8532:[[50,8260,51],256],8533:[[49,8260,53],256],8534:[[50,8260,53],256],8535:[[51,8260,53],256],8536:[[52,8260,53],256],8537:[[49,8260,54],256],8538:[[53,8260,54],256],8539:[[49,8260,56],256],8540:[[51,8260,56],256],8541:[[53,8260,56],256],8542:[[55,8260,56],256],8543:[[49,8260],256],8544:[[73],256],8545:[[73,73],256],8546:[[73,73,73],256],8547:[[73,86],256],8548:[[86],256],8549:[[86,73],256],8550:[[86,73,73],256],8551:[[86,73,73,73],256],8552:[[73,88],256],8553:[[88],256],8554:[[88,73],256],8555:[[88,73,73],256],8556:[[76],256],8557:[[67],256],8558:[[68],256],8559:[[77],256],8560:[[105],256],8561:[[105,105],256],8562:[[105,105,105],256],8563:[[105,118],256],8564:[[118],256],8565:[[118,105],256],8566:[[118,105,105],256],8567:[[118,105,105,105],256],8568:[[105,120],256],8569:[[120],256],8570:[[120,105],256],8571:[[120,105,105],256],8572:[[108],256],8573:[[99],256],8574:[[100],256],8575:[[109],256],8585:[[48,8260,51],256],8592:[,,{824:8602}],8594:[,,{824:8603}],8596:[,,{824:8622}],8602:[[8592,824]],8603:[[8594,824]],8622:[[8596,824]],8653:[[8656,824]],8654:[[8660,824]],8655:[[8658,824]],8656:[,,{824:8653}],8658:[,,{824:8655}],8660:[,,{824:8654}]},8704:{8707:[,,{824:8708}],8708:[[8707,824]],8712:[,,{824:8713}],8713:[[8712,824]],8715:[,,{824:8716}],8716:[[8715,824]],8739:[,,{824:8740}],8740:[[8739,824]],8741:[,,{824:8742}],8742:[[8741,824]],8748:[[8747,8747],256],8749:[[8747,8747,8747],256],8751:[[8750,8750],256],8752:[[8750,8750,8750],256],8764:[,,{824:8769}],8769:[[8764,824]],8771:[,,{824:8772}],8772:[[8771,824]],8773:[,,{824:8775}],8775:[[8773,824]],8776:[,,{824:8777}],8777:[[8776,824]],8781:[,,{824:8813}],8800:[[61,824]],8801:[,,{824:8802}],8802:[[8801,824]],8804:[,,{824:8816}],8805:[,,{824:8817}],8813:[[8781,824]],8814:[[60,824]],8815:[[62,824]],8816:[[8804,824]],8817:[[8805,824]],8818:[,,{824:8820}],8819:[,,{824:8821}],8820:[[8818,824]],8821:[[8819,824]],8822:[,,{824:8824}],8823:[,,{824:8825}],8824:[[8822,824]],8825:[[8823,824]],8826:[,,{824:8832}],8827:[,,{824:8833}],8828:[,,{824:8928}],8829:[,,{824:8929}],8832:[[8826,824]],8833:[[8827,824]],8834:[,,{824:8836}],8835:[,,{824:8837}],8836:[[8834,824]],8837:[[8835,824]],8838:[,,{824:8840}],8839:[,,{824:8841}],8840:[[8838,824]],8841:[[8839,824]],8849:[,,{824:8930}],8850:[,,{824:8931}],8866:[,,{824:8876}],8872:[,,{824:8877}],8873:[,,{824:8878}],8875:[,,{824:8879}],8876:[[8866,824]],8877:[[8872,824]],8878:[[8873,824]],8879:[[8875,824]],8882:[,,{824:8938}],8883:[,,{824:8939}],8884:[,,{824:8940}],8885:[,,{824:8941}],8928:[[8828,824]],8929:[[8829,824]],8930:[[8849,824]],8931:[[8850,824]],8938:[[8882,824]],8939:[[8883,824]],8940:[[8884,824]],8941:[[8885,824]]},8960:{9001:[[12296]],9002:[[12297]]},9216:{9312:[[49],256],9313:[[50],256],9314:[[51],256],9315:[[52],256],9316:[[53],256],9317:[[54],256],9318:[[55],256],9319:[[56],256],9320:[[57],256],9321:[[49,48],256],9322:[[49,49],256],9323:[[49,50],256],9324:[[49,51],256],9325:[[49,52],256],9326:[[49,53],256],9327:[[49,54],256],9328:[[49,55],256],9329:[[49,56],256],9330:[[49,57],256],9331:[[50,48],256],9332:[[40,49,41],256],9333:[[40,50,41],256],9334:[[40,51,41],256],9335:[[40,52,41],256],9336:[[40,53,41],256],9337:[[40,54,41],256],9338:[[40,55,41],256],9339:[[40,56,41],256],9340:[[40,57,41],256],9341:[[40,49,48,41],256],9342:[[40,49,49,41],256],9343:[[40,49,50,41],256],9344:[[40,49,51,41],256],9345:[[40,49,52,41],256],9346:[[40,49,53,41],256],9347:[[40,49,54,41],256],9348:[[40,49,55,41],256],9349:[[40,49,56,41],256],9350:[[40,49,57,41],256],9351:[[40,50,48,41],256],9352:[[49,46],256],9353:[[50,46],256],9354:[[51,46],256],9355:[[52,46],256],9356:[[53,46],256],9357:[[54,46],256],9358:[[55,46],256],9359:[[56,46],256],9360:[[57,46],256],9361:[[49,48,46],256],9362:[[49,49,46],256],9363:[[49,50,46],256],9364:[[49,51,46],256],9365:[[49,52,46],256],9366:[[49,53,46],256],9367:[[49,54,46],256],9368:[[49,55,46],256],9369:[[49,56,46],256],9370:[[49,57,46],256],9371:[[50,48,46],256],9372:[[40,97,41],256],9373:[[40,98,41],256],9374:[[40,99,41],256],9375:[[40,100,41],256],9376:[[40,101,41],256],9377:[[40,102,41],256],9378:[[40,103,41],256],9379:[[40,104,41],256],9380:[[40,105,41],256],9381:[[40,106,41],256],9382:[[40,107,41],256],9383:[[40,108,41],256],9384:[[40,109,41],256],9385:[[40,110,41],256],9386:[[40,111,41],256],9387:[[40,112,41],256],9388:[[40,113,41],256],9389:[[40,114,41],256],9390:[[40,115,41],256],9391:[[40,116,41],256],9392:[[40,117,41],256],9393:[[40,118,41],256],9394:[[40,119,41],256],9395:[[40,120,41],256],9396:[[40,121,41],256],9397:[[40,122,41],256],9398:[[65],256],9399:[[66],256],9400:[[67],256],9401:[[68],256],9402:[[69],256],9403:[[70],256],9404:[[71],256],9405:[[72],256],9406:[[73],256],9407:[[74],256],9408:[[75],256],9409:[[76],256],9410:[[77],256],9411:[[78],256],9412:[[79],256],9413:[[80],256],9414:[[81],256],9415:[[82],256],9416:[[83],256],9417:[[84],256],9418:[[85],256],9419:[[86],256],9420:[[87],256],9421:[[88],256],9422:[[89],256],9423:[[90],256],9424:[[97],256],9425:[[98],256],9426:[[99],256],9427:[[100],256],9428:[[101],256],9429:[[102],256],9430:[[103],256],9431:[[104],256],9432:[[105],256],9433:[[106],256],9434:[[107],256],9435:[[108],256],9436:[[109],256],9437:[[110],256],9438:[[111],256],9439:[[112],256],9440:[[113],256],9441:[[114],256],9442:[[115],256],9443:[[116],256],9444:[[117],256],9445:[[118],256],9446:[[119],256],9447:[[120],256],9448:[[121],256],9449:[[122],256],9450:[[48],256]},10752:{10764:[[8747,8747,8747,8747],256],10868:[[58,58,61],256],10869:[[61,61],256],10870:[[61,61,61],256],10972:[[10973,824],512]},11264:{11388:[[106],256],11389:[[86],256],11503:[,230],11504:[,230],11505:[,230]},11520:{11631:[[11617],256],11647:[,9],11744:[,230],11745:[,230],11746:[,230],11747:[,230],11748:[,230],11749:[,230],11750:[,230],11751:[,230],11752:[,230],11753:[,230],11754:[,230],11755:[,230],11756:[,230],11757:[,230],11758:[,230],11759:[,230],11760:[,230],11761:[,230],11762:[,230],11763:[,230],11764:[,230],11765:[,230],11766:[,230],11767:[,230],11768:[,230],11769:[,230],11770:[,230],11771:[,230],11772:[,230],11773:[,230],11774:[,230],11775:[,230]},11776:{11935:[[27597],256],12019:[[40863],256]},12032:{12032:[[19968],256],12033:[[20008],256],12034:[[20022],256],12035:[[20031],256],12036:[[20057],256],12037:[[20101],256],12038:[[20108],256],12039:[[20128],256],12040:[[20154],256],12041:[[20799],256],12042:[[20837],256],12043:[[20843],256],12044:[[20866],256],12045:[[20886],256],12046:[[20907],256],12047:[[20960],256],12048:[[20981],256],12049:[[20992],256],12050:[[21147],256],12051:[[21241],256],12052:[[21269],256],12053:[[21274],256],12054:[[21304],256],12055:[[21313],256],12056:[[21340],256],12057:[[21353],256],12058:[[21378],256],12059:[[21430],256],12060:[[21448],256],12061:[[21475],256],12062:[[22231],256],12063:[[22303],256],12064:[[22763],256],12065:[[22786],256],12066:[[22794],256],12067:[[22805],256],12068:[[22823],256],12069:[[22899],256],12070:[[23376],256],12071:[[23424],256],12072:[[23544],256],12073:[[23567],256],12074:[[23586],256],12075:[[23608],256],12076:[[23662],256],12077:[[23665],256],12078:[[24027],256],12079:[[24037],256],12080:[[24049],256],12081:[[24062],256],12082:[[24178],256],12083:[[24186],256],12084:[[24191],256],12085:[[24308],256],12086:[[24318],256],12087:[[24331],256],12088:[[24339],256],12089:[[24400],256],12090:[[24417],256],12091:[[24435],256],12092:[[24515],256],12093:[[25096],256],12094:[[25142],256],12095:[[25163],256],12096:[[25903],256],12097:[[25908],256],12098:[[25991],256],12099:[[26007],256],12100:[[26020],256],12101:[[26041],256],12102:[[26080],256],12103:[[26085],256],12104:[[26352],256],12105:[[26376],256],12106:[[26408],256],12107:[[27424],256],12108:[[27490],256],12109:[[27513],256],12110:[[27571],256],12111:[[27595],256],12112:[[27604],256],12113:[[27611],256],12114:[[27663],256],12115:[[27668],256],12116:[[27700],256],12117:[[28779],256],12118:[[29226],256],12119:[[29238],256],12120:[[29243],256],12121:[[29247],256],12122:[[29255],256],12123:[[29273],256],12124:[[29275],256],12125:[[29356],256],12126:[[29572],256],12127:[[29577],256],12128:[[29916],256],12129:[[29926],256],12130:[[29976],256],12131:[[29983],256],12132:[[29992],256],12133:[[3e4],256],12134:[[30091],256],12135:[[30098],256],12136:[[30326],256],12137:[[30333],256],12138:[[30382],256],12139:[[30399],256],12140:[[30446],256],12141:[[30683],256],12142:[[30690],256],12143:[[30707],256],12144:[[31034],256],12145:[[31160],256],12146:[[31166],256],12147:[[31348],256],12148:[[31435],256],12149:[[31481],256],12150:[[31859],256],12151:[[31992],256],12152:[[32566],256],12153:[[32593],256],12154:[[32650],256],12155:[[32701],256],12156:[[32769],256],12157:[[32780],256],12158:[[32786],256],12159:[[32819],256],12160:[[32895],256],12161:[[32905],256],12162:[[33251],256],12163:[[33258],256],12164:[[33267],256],12165:[[33276],256],12166:[[33292],256],12167:[[33307],256],12168:[[33311],256],12169:[[33390],256],12170:[[33394],256],12171:[[33400],256],12172:[[34381],256],12173:[[34411],256],12174:[[34880],256],12175:[[34892],256],12176:[[34915],256],12177:[[35198],256],12178:[[35211],256],12179:[[35282],256],12180:[[35328],256],12181:[[35895],256],12182:[[35910],256],12183:[[35925],256],12184:[[35960],256],12185:[[35997],256],12186:[[36196],256],12187:[[36208],256],12188:[[36275],256],12189:[[36523],256],12190:[[36554],256],12191:[[36763],256],12192:[[36784],256],12193:[[36789],256],12194:[[37009],256],12195:[[37193],256],12196:[[37318],256],12197:[[37324],256],12198:[[37329],256],12199:[[38263],256],12200:[[38272],256],12201:[[38428],256],12202:[[38582],256],12203:[[38585],256],12204:[[38632],256],12205:[[38737],256],12206:[[38750],256],12207:[[38754],256],12208:[[38761],256],12209:[[38859],256],12210:[[38893],256],12211:[[38899],256],12212:[[38913],256],12213:[[39080],256],12214:[[39131],256],12215:[[39135],256],12216:[[39318],256],12217:[[39321],256],12218:[[39340],256],12219:[[39592],256],12220:[[39640],256],12221:[[39647],256],12222:[[39717],256],12223:[[39727],256],12224:[[39730],256],12225:[[39740],256],12226:[[39770],256],12227:[[40165],256],12228:[[40565],256],12229:[[40575],256],12230:[[40613],256],12231:[[40635],256],12232:[[40643],256],12233:[[40653],256],12234:[[40657],256],12235:[[40697],256],12236:[[40701],256],12237:[[40718],256],12238:[[40723],256],12239:[[40736],256],12240:[[40763],256],12241:[[40778],256],12242:[[40786],256],12243:[[40845],256],12244:[[40860],256],12245:[[40864],256]},12288:{12288:[[32],256],12330:[,218],12331:[,228],12332:[,232],12333:[,222],12334:[,224],12335:[,224],12342:[[12306],256],12344:[[21313],256],12345:[[21316],256],12346:[[21317],256],12358:[,,{12441:12436}],12363:[,,{12441:12364}],12364:[[12363,12441]],12365:[,,{12441:12366}],12366:[[12365,12441]],12367:[,,{12441:12368}],12368:[[12367,12441]],12369:[,,{12441:12370}],12370:[[12369,12441]],12371:[,,{12441:12372}],12372:[[12371,12441]],12373:[,,{12441:12374}],12374:[[12373,12441]],12375:[,,{12441:12376}],12376:[[12375,12441]],12377:[,,{12441:12378}],12378:[[12377,12441]],12379:[,,{12441:12380}],12380:[[12379,12441]],12381:[,,{12441:12382}],12382:[[12381,12441]],12383:[,,{12441:12384}],12384:[[12383,12441]],12385:[,,{12441:12386}],12386:[[12385,12441]],12388:[,,{12441:12389}],12389:[[12388,12441]],12390:[,,{12441:12391}],12391:[[12390,12441]],12392:[,,{12441:12393}],12393:[[12392,12441]],12399:[,,{12441:12400,12442:12401}],12400:[[12399,12441]],12401:[[12399,12442]],12402:[,,{12441:12403,12442:12404}],12403:[[12402,12441]],12404:[[12402,12442]],12405:[,,{12441:12406,12442:12407}],12406:[[12405,12441]],12407:[[12405,12442]],12408:[,,{12441:12409,12442:12410}],12409:[[12408,12441]],12410:[[12408,12442]],12411:[,,{12441:12412,12442:12413}],12412:[[12411,12441]],12413:[[12411,12442]],12436:[[12358,12441]],12441:[,8],12442:[,8],12443:[[32,12441],256],12444:[[32,12442],256],12445:[,,{12441:12446}],12446:[[12445,12441]],12447:[[12424,12426],256],12454:[,,{12441:12532}],12459:[,,{12441:12460}],12460:[[12459,12441]],12461:[,,{12441:12462}],12462:[[12461,12441]],12463:[,,{12441:12464}],12464:[[12463,12441]],12465:[,,{12441:12466}],12466:[[12465,12441]],12467:[,,{12441:12468}],12468:[[12467,12441]],12469:[,,{12441:12470}],12470:[[12469,12441]],12471:[,,{12441:12472}],12472:[[12471,12441]],12473:[,,{12441:12474}],12474:[[12473,12441]],12475:[,,{12441:12476}],12476:[[12475,12441]],12477:[,,{12441:12478}],12478:[[12477,12441]],12479:[,,{12441:12480}],12480:[[12479,12441]],12481:[,,{12441:12482}],12482:[[12481,12441]],12484:[,,{12441:12485}],12485:[[12484,12441]],12486:[,,{12441:12487}],12487:[[12486,12441]],12488:[,,{12441:12489}],12489:[[12488,12441]],12495:[,,{12441:12496,12442:12497}],12496:[[12495,12441]],12497:[[12495,12442]],12498:[,,{12441:12499,12442:12500}],12499:[[12498,12441]],12500:[[12498,12442]],12501:[,,{12441:12502,12442:12503}],12502:[[12501,12441]],12503:[[12501,12442]],12504:[,,{12441:12505,12442:12506}],12505:[[12504,12441]],12506:[[12504,12442]],12507:[,,{12441:12508,12442:12509}],12508:[[12507,12441]],12509:[[12507,12442]],12527:[,,{12441:12535}],12528:[,,{12441:12536}],12529:[,,{12441:12537}],12530:[,,{12441:12538}],12532:[[12454,12441]],12535:[[12527,12441]],12536:[[12528,12441]],12537:[[12529,12441]],12538:[[12530,12441]],12541:[,,{12441:12542}],12542:[[12541,12441]],12543:[[12467,12488],256]},12544:{12593:[[4352],256],12594:[[4353],256],12595:[[4522],256],12596:[[4354],256],12597:[[4524],256],12598:[[4525],256],12599:[[4355],256],12600:[[4356],256],12601:[[4357],256],12602:[[4528],256],12603:[[4529],256],12604:[[4530],256],12605:[[4531],256],12606:[[4532],256],12607:[[4533],256],12608:[[4378],256],12609:[[4358],256],12610:[[4359],256],12611:[[4360],256],12612:[[4385],256],12613:[[4361],256],12614:[[4362],256],12615:[[4363],256],12616:[[4364],256],12617:[[4365],256],12618:[[4366],256],12619:[[4367],256],12620:[[4368],256],12621:[[4369],256],12622:[[4370],256],12623:[[4449],256],12624:[[4450],256],12625:[[4451],256],12626:[[4452],256],12627:[[4453],256],12628:[[4454],256],12629:[[4455],256],12630:[[4456],256],12631:[[4457],256],12632:[[4458],256],12633:[[4459],256],12634:[[4460],256],12635:[[4461],256],12636:[[4462],256],12637:[[4463],256],12638:[[4464],256],12639:[[4465],256],12640:[[4466],256],12641:[[4467],256],12642:[[4468],256],12643:[[4469],256],12644:[[4448],256],12645:[[4372],256],12646:[[4373],256],12647:[[4551],256],12648:[[4552],256],12649:[[4556],256],12650:[[4558],256],12651:[[4563],256],12652:[[4567],256],12653:[[4569],256],12654:[[4380],256],12655:[[4573],256],12656:[[4575],256],12657:[[4381],256],12658:[[4382],256],12659:[[4384],256],12660:[[4386],256],12661:[[4387],256],12662:[[4391],256],12663:[[4393],256],12664:[[4395],256],12665:[[4396],256],12666:[[4397],256],12667:[[4398],256],12668:[[4399],256],12669:[[4402],256],12670:[[4406],256],12671:[[4416],256],12672:[[4423],256],12673:[[4428],256],12674:[[4593],256],12675:[[4594],256],12676:[[4439],256],12677:[[4440],256],12678:[[4441],256],12679:[[4484],256],12680:[[4485],256],12681:[[4488],256],12682:[[4497],256],12683:[[4498],256],12684:[[4500],256],12685:[[4510],256],12686:[[4513],256],12690:[[19968],256],12691:[[20108],256],12692:[[19977],256],12693:[[22235],256],12694:[[19978],256],12695:[[20013],256],12696:[[19979],256],12697:[[30002],256],12698:[[20057],256],12699:[[19993],256],12700:[[19969],256],12701:[[22825],256],12702:[[22320],256],12703:[[20154],256]},12800:{12800:[[40,4352,41],256],12801:[[40,4354,41],256],12802:[[40,4355,41],256],12803:[[40,4357,41],256],12804:[[40,4358,41],256],12805:[[40,4359,41],256],12806:[[40,4361,41],256],12807:[[40,4363,41],256],12808:[[40,4364,41],256],12809:[[40,4366,41],256],12810:[[40,4367,41],256],12811:[[40,4368,41],256],12812:[[40,4369,41],256],12813:[[40,4370,41],256],12814:[[40,4352,4449,41],256],12815:[[40,4354,4449,41],256],12816:[[40,4355,4449,41],256],12817:[[40,4357,4449,41],256],12818:[[40,4358,4449,41],256],12819:[[40,4359,4449,41],256],12820:[[40,4361,4449,41],256],12821:[[40,4363,4449,41],256],12822:[[40,4364,4449,41],256],12823:[[40,4366,4449,41],256],12824:[[40,4367,4449,41],256],12825:[[40,4368,4449,41],256],12826:[[40,4369,4449,41],256],12827:[[40,4370,4449,41],256],12828:[[40,4364,4462,41],256],12829:[[40,4363,4457,4364,4453,4523,41],256],12830:[[40,4363,4457,4370,4462,41],256],12832:[[40,19968,41],256],12833:[[40,20108,41],256],12834:[[40,19977,41],256],12835:[[40,22235,41],256],12836:[[40,20116,41],256],12837:[[40,20845,41],256],12838:[[40,19971,41],256],12839:[[40,20843,41],256],12840:[[40,20061,41],256],12841:[[40,21313,41],256],12842:[[40,26376,41],256],12843:[[40,28779,41],256],12844:[[40,27700,41],256],12845:[[40,26408,41],256],12846:[[40,37329,41],256],12847:[[40,22303,41],256],12848:[[40,26085,41],256],12849:[[40,26666,41],256],12850:[[40,26377,41],256],12851:[[40,31038,41],256],12852:[[40,21517,41],256],12853:[[40,29305,41],256],12854:[[40,36001,41],256],12855:[[40,31069,41],256],12856:[[40,21172,41],256],12857:[[40,20195,41],256],12858:[[40,21628,41],256],12859:[[40,23398,41],256],12860:[[40,30435,41],256],12861:[[40,20225,41],256],12862:[[40,36039,41],256],12863:[[40,21332,41],256],12864:[[40,31085,41],256],12865:[[40,20241,41],256],12866:[[40,33258,41],256],12867:[[40,33267,41],256],12868:[[21839],256],12869:[[24188],256],12870:[[25991],256],12871:[[31631],256],12880:[[80,84,69],256],12881:[[50,49],256],12882:[[50,50],256],12883:[[50,51],256],12884:[[50,52],256],12885:[[50,53],256],12886:[[50,54],256],12887:[[50,55],256],12888:[[50,56],256],12889:[[50,57],256],12890:[[51,48],256],12891:[[51,49],256],12892:[[51,50],256],12893:[[51,51],256],12894:[[51,52],256],12895:[[51,53],256],12896:[[4352],256],12897:[[4354],256],12898:[[4355],256],12899:[[4357],256],12900:[[4358],256],12901:[[4359],256],12902:[[4361],256],12903:[[4363],256],12904:[[4364],256],12905:[[4366],256],12906:[[4367],256],12907:[[4368],256],12908:[[4369],256],12909:[[4370],256],12910:[[4352,4449],256],12911:[[4354,4449],256],12912:[[4355,4449],256],12913:[[4357,4449],256],12914:[[4358,4449],256],12915:[[4359,4449],256],12916:[[4361,4449],256],12917:[[4363,4449],256],12918:[[4364,4449],256],12919:[[4366,4449],256],12920:[[4367,4449],256],12921:[[4368,4449],256],12922:[[4369,4449],256],12923:[[4370,4449],256],12924:[[4366,4449,4535,4352,4457],256],12925:[[4364,4462,4363,4468],256],12926:[[4363,4462],256],12928:[[19968],256],12929:[[20108],256],12930:[[19977],256],12931:[[22235],256],12932:[[20116],256],12933:[[20845],256],12934:[[19971],256],12935:[[20843],256],12936:[[20061],256],12937:[[21313],256],12938:[[26376],256],12939:[[28779],256],12940:[[27700],256],12941:[[26408],256],12942:[[37329],256],12943:[[22303],256],12944:[[26085],256],12945:[[26666],256],12946:[[26377],256],12947:[[31038],256],12948:[[21517],256],12949:[[29305],256],12950:[[36001],256],12951:[[31069],256],12952:[[21172],256],12953:[[31192],256],12954:[[30007],256],12955:[[22899],256],12956:[[36969],256],12957:[[20778],256],12958:[[21360],256],12959:[[27880],256],12960:[[38917],256],12961:[[20241],256],12962:[[20889],256],12963:[[27491],256],12964:[[19978],256],12965:[[20013],256],12966:[[19979],256],12967:[[24038],256],12968:[[21491],256],12969:[[21307],256],12970:[[23447],256],12971:[[23398],256],12972:[[30435],256],12973:[[20225],256],12974:[[36039],256],12975:[[21332],256],12976:[[22812],256],12977:[[51,54],256],12978:[[51,55],256],12979:[[51,56],256],12980:[[51,57],256],12981:[[52,48],256],12982:[[52,49],256],12983:[[52,50],256],12984:[[52,51],256],12985:[[52,52],256],12986:[[52,53],256],12987:[[52,54],256],12988:[[52,55],256],12989:[[52,56],256],12990:[[52,57],256],12991:[[53,48],256],12992:[[49,26376],256],12993:[[50,26376],256],12994:[[51,26376],256],12995:[[52,26376],256],12996:[[53,26376],256],12997:[[54,26376],256],12998:[[55,26376],256],12999:[[56,26376],256],13000:[[57,26376],256],13001:[[49,48,26376],256],13002:[[49,49,26376],256],13003:[[49,50,26376],256],13004:[[72,103],256],13005:[[101,114,103],256],13006:[[101,86],256],13007:[[76,84,68],256],13008:[[12450],256],13009:[[12452],256],13010:[[12454],256],13011:[[12456],256],13012:[[12458],256],13013:[[12459],256],13014:[[12461],256],13015:[[12463],256],13016:[[12465],256],13017:[[12467],256],13018:[[12469],256],13019:[[12471],256],13020:[[12473],256],13021:[[12475],256],13022:[[12477],256],13023:[[12479],256],13024:[[12481],256],13025:[[12484],256],13026:[[12486],256],13027:[[12488],256],13028:[[12490],256],13029:[[12491],256],13030:[[12492],256],13031:[[12493],256],13032:[[12494],256],13033:[[12495],256],13034:[[12498],256],13035:[[12501],256],13036:[[12504],256],13037:[[12507],256],13038:[[12510],256],13039:[[12511],256],13040:[[12512],256],13041:[[12513],256],13042:[[12514],256],13043:[[12516],256],13044:[[12518],256],13045:[[12520],256],13046:[[12521],256],13047:[[12522],256],13048:[[12523],256],13049:[[12524],256],13050:[[12525],256],13051:[[12527],256],13052:[[12528],256],13053:[[12529],256],13054:[[12530],256]},13056:{13056:[[12450,12497,12540,12488],256],13057:[[12450,12523,12501,12449],256],13058:[[12450,12531,12506,12450],256],13059:[[12450,12540,12523],256],13060:[[12452,12491,12531,12464],256],13061:[[12452,12531,12481],256],13062:[[12454,12457,12531],256],13063:[[12456,12473,12463,12540,12489],256],13064:[[12456,12540,12459,12540],256],13065:[[12458,12531,12473],256],13066:[[12458,12540,12512],256],13067:[[12459,12452,12522],256],13068:[[12459,12521,12483,12488],256],13069:[[12459,12525,12522,12540],256],13070:[[12460,12525,12531],256],13071:[[12460,12531,12510],256],13072:[[12462,12460],256],13073:[[12462,12491,12540],256],13074:[[12461,12517,12522,12540],256],13075:[[12462,12523,12480,12540],256],13076:[[12461,12525],256],13077:[[12461,12525,12464,12521,12512],256],13078:[[12461,12525,12513,12540,12488,12523],256],13079:[[12461,12525,12527,12483,12488],256],13080:[[12464,12521,12512],256],13081:[[12464,12521,12512,12488,12531],256],13082:[[12463,12523,12476,12452,12525],256],13083:[[12463,12525,12540,12493],256],13084:[[12465,12540,12473],256],13085:[[12467,12523,12490],256],13086:[[12467,12540,12509],256],13087:[[12469,12452,12463,12523],256],13088:[[12469,12531,12481,12540,12512],256],13089:[[12471,12522,12531,12464],256],13090:[[12475,12531,12481],256],13091:[[12475,12531,12488],256],13092:[[12480,12540,12473],256],13093:[[12487,12471],256],13094:[[12489,12523],256],13095:[[12488,12531],256],13096:[[12490,12494],256],13097:[[12494,12483,12488],256],13098:[[12495,12452,12484],256],13099:[[12497,12540,12475,12531,12488],256],13100:[[12497,12540,12484],256],13101:[[12496,12540,12524,12523],256],13102:[[12500,12450,12473,12488,12523],256],13103:[[12500,12463,12523],256],13104:[[12500,12467],256],13105:[[12499,12523],256],13106:[[12501,12449,12521,12483,12489],256],13107:[[12501,12451,12540,12488],256],13108:[[12502,12483,12471,12455,12523],256],13109:[[12501,12521,12531],256],13110:[[12504,12463,12479,12540,12523],256],13111:[[12506,12477],256],13112:[[12506,12491,12498],256],13113:[[12504,12523,12484],256],13114:[[12506,12531,12473],256],13115:[[12506,12540,12472],256],13116:[[12505,12540,12479],256],13117:[[12509,12452,12531,12488],256],13118:[[12508,12523,12488],256],13119:[[12507,12531],256],13120:[[12509,12531,12489],256],13121:[[12507,12540,12523],256],13122:[[12507,12540,12531],256],13123:[[12510,12452,12463,12525],256],13124:[[12510,12452,12523],256],13125:[[12510,12483,12495],256],13126:[[12510,12523,12463],256],13127:[[12510,12531,12471,12519,12531],256],13128:[[12511,12463,12525,12531],256],13129:[[12511,12522],256],13130:[[12511,12522,12496,12540,12523],256],13131:[[12513,12460],256],13132:[[12513,12460,12488,12531],256],13133:[[12513,12540,12488,12523],256],13134:[[12516,12540,12489],256],13135:[[12516,12540,12523],256],13136:[[12518,12450,12531],256],13137:[[12522,12483,12488,12523],256],13138:[[12522,12521],256],13139:[[12523,12500,12540],256],13140:[[12523,12540,12502,12523],256],13141:[[12524,12512],256],13142:[[12524,12531,12488,12466,12531],256],13143:[[12527,12483,12488],256],13144:[[48,28857],256],13145:[[49,28857],256],13146:[[50,28857],256],13147:[[51,28857],256],13148:[[52,28857],256],13149:[[53,28857],256],13150:[[54,28857],256],13151:[[55,28857],256],13152:[[56,28857],256],13153:[[57,28857],256],13154:[[49,48,28857],256],13155:[[49,49,28857],256],13156:[[49,50,28857],256],13157:[[49,51,28857],256],13158:[[49,52,28857],256],13159:[[49,53,28857],256],13160:[[49,54,28857],256],13161:[[49,55,28857],256],13162:[[49,56,28857],256],13163:[[49,57,28857],256],13164:[[50,48,28857],256],13165:[[50,49,28857],256],13166:[[50,50,28857],256],13167:[[50,51,28857],256],13168:[[50,52,28857],256],13169:[[104,80,97],256],13170:[[100,97],256],13171:[[65,85],256],13172:[[98,97,114],256],13173:[[111,86],256],13174:[[112,99],256],13175:[[100,109],256],13176:[[100,109,178],256],13177:[[100,109,179],256],13178:[[73,85],256],13179:[[24179,25104],256],13180:[[26157,21644],256],13181:[[22823,27491],256],13182:[[26126,27835],256],13183:[[26666,24335,20250,31038],256],13184:[[112,65],256],13185:[[110,65],256],13186:[[956,65],256],13187:[[109,65],256],13188:[[107,65],256],13189:[[75,66],256],13190:[[77,66],256],13191:[[71,66],256],13192:[[99,97,108],256],13193:[[107,99,97,108],256],13194:[[112,70],256],13195:[[110,70],256],13196:[[956,70],256],13197:[[956,103],256],13198:[[109,103],256],13199:[[107,103],256],13200:[[72,122],256],13201:[[107,72,122],256],13202:[[77,72,122],256],13203:[[71,72,122],256],13204:[[84,72,122],256],13205:[[956,8467],256],13206:[[109,8467],256],13207:[[100,8467],256],13208:[[107,8467],256],13209:[[102,109],256],13210:[[110,109],256],13211:[[956,109],256],13212:[[109,109],256],13213:[[99,109],256],13214:[[107,109],256],13215:[[109,109,178],256],13216:[[99,109,178],256],13217:[[109,178],256],13218:[[107,109,178],256],13219:[[109,109,179],256],13220:[[99,109,179],256],13221:[[109,179],256],13222:[[107,109,179],256],13223:[[109,8725,115],256],13224:[[109,8725,115,178],256],13225:[[80,97],256],13226:[[107,80,97],256],13227:[[77,80,97],256],13228:[[71,80,97],256],13229:[[114,97,100],256],13230:[[114,97,100,8725,115],256],13231:[[114,97,100,8725,115,178],256],13232:[[112,115],256],13233:[[110,115],256],13234:[[956,115],256],13235:[[109,115],256],13236:[[112,86],256],13237:[[110,86],256],13238:[[956,86],256],13239:[[109,86],256],13240:[[107,86],256],13241:[[77,86],256],13242:[[112,87],256],13243:[[110,87],256],13244:[[956,87],256],13245:[[109,87],256],13246:[[107,87],256],13247:[[77,87],256],13248:[[107,937],256],13249:[[77,937],256],13250:[[97,46,109,46],256],13251:[[66,113],256],13252:[[99,99],256],13253:[[99,100],256],13254:[[67,8725,107,103],256],13255:[[67,111,46],256],13256:[[100,66],256],13257:[[71,121],256],13258:[[104,97],256],13259:[[72,80],256],13260:[[105,110],256],13261:[[75,75],256],13262:[[75,77],256],13263:[[107,116],256],13264:[[108,109],256],13265:[[108,110],256],13266:[[108,111,103],256],13267:[[108,120],256],13268:[[109,98],256],13269:[[109,105,108],256],13270:[[109,111,108],256],13271:[[80,72],256],13272:[[112,46,109,46],256],13273:[[80,80,77],256],13274:[[80,82],256],13275:[[115,114],256],13276:[[83,118],256],13277:[[87,98],256],13278:[[86,8725,109],256],13279:[[65,8725,109],256],13280:[[49,26085],256],13281:[[50,26085],256],13282:[[51,26085],256],13283:[[52,26085],256],13284:[[53,26085],256],13285:[[54,26085],256],13286:[[55,26085],256],13287:[[56,26085],256],13288:[[57,26085],256],13289:[[49,48,26085],256],13290:[[49,49,26085],256],13291:[[49,50,26085],256],13292:[[49,51,26085],256],13293:[[49,52,26085],256],13294:[[49,53,26085],256],13295:[[49,54,26085],256],13296:[[49,55,26085],256],13297:[[49,56,26085],256],13298:[[49,57,26085],256],13299:[[50,48,26085],256],13300:[[50,49,26085],256],13301:[[50,50,26085],256],13302:[[50,51,26085],256],13303:[[50,52,26085],256],13304:[[50,53,26085],256],13305:[[50,54,26085],256],13306:[[50,55,26085],256],13307:[[50,56,26085],256],13308:[[50,57,26085],256],13309:[[51,48,26085],256],13310:[[51,49,26085],256],13311:[[103,97,108],256]},27136:{92912:[,1],92913:[,1],92914:[,1],92915:[,1],92916:[,1]},27392:{92976:[,230],92977:[,230],92978:[,230],92979:[,230],92980:[,230],92981:[,230],92982:[,230]},42496:{42607:[,230],42612:[,230],42613:[,230],42614:[,230],42615:[,230],42616:[,230],42617:[,230],42618:[,230],42619:[,230],42620:[,230],42621:[,230],42652:[[1098],256],42653:[[1100],256],42655:[,230],42736:[,230],42737:[,230]},42752:{42864:[[42863],256],43000:[[294],256],43001:[[339],256]},43008:{43014:[,9],43204:[,9],43232:[,230],43233:[,230],43234:[,230],43235:[,230],43236:[,230],43237:[,230],43238:[,230],43239:[,230],43240:[,230],43241:[,230],43242:[,230],43243:[,230],43244:[,230],43245:[,230],43246:[,230],43247:[,230],43248:[,230],43249:[,230]},43264:{43307:[,220],43308:[,220],43309:[,220],43347:[,9],43443:[,7],43456:[,9]},43520:{43696:[,230],43698:[,230],43699:[,230],43700:[,220],43703:[,230],43704:[,230],43710:[,230],43711:[,230],43713:[,230],43766:[,9]},43776:{43868:[[42791],256],43869:[[43831],256],43870:[[619],256],43871:[[43858],256],44013:[,9]},48128:{113822:[,1]},53504:{119134:[[119127,119141],512],119135:[[119128,119141],512],119136:[[119135,119150],512],119137:[[119135,119151],512],119138:[[119135,119152],512],119139:[[119135,119153],512],119140:[[119135,119154],512],119141:[,216],119142:[,216],119143:[,1],119144:[,1],119145:[,1],119149:[,226],119150:[,216],119151:[,216],119152:[,216],119153:[,216],119154:[,216],119163:[,220],119164:[,220],119165:[,220],119166:[,220],119167:[,220],119168:[,220],119169:[,220],119170:[,220],119173:[,230],119174:[,230],119175:[,230],119176:[,230],119177:[,230],119178:[,220],119179:[,220],119210:[,230],119211:[,230],119212:[,230],119213:[,230],119227:[[119225,119141],512],119228:[[119226,119141],512],119229:[[119227,119150],512],119230:[[119228,119150],512],119231:[[119227,119151],512],119232:[[119228,119151],512]},53760:{119362:[,230],119363:[,230],119364:[,230]},54272:{119808:[[65],256],119809:[[66],256],119810:[[67],256],119811:[[68],256],119812:[[69],256],119813:[[70],256],119814:[[71],256],119815:[[72],256],119816:[[73],256],119817:[[74],256],119818:[[75],256],119819:[[76],256],119820:[[77],256],119821:[[78],256],119822:[[79],256],119823:[[80],256],119824:[[81],256],119825:[[82],256],119826:[[83],256],119827:[[84],256],119828:[[85],256],119829:[[86],256],119830:[[87],256],119831:[[88],256],119832:[[89],256],119833:[[90],256],119834:[[97],256],119835:[[98],256],119836:[[99],256],119837:[[100],256],119838:[[101],256],119839:[[102],256],119840:[[103],256],119841:[[104],256],119842:[[105],256],119843:[[106],256],119844:[[107],256],119845:[[108],256],119846:[[109],256],119847:[[110],256],119848:[[111],256],119849:[[112],256],119850:[[113],256],119851:[[114],256],119852:[[115],256],119853:[[116],256],119854:[[117],256],119855:[[118],256],119856:[[119],256],119857:[[120],256],119858:[[121],256],119859:[[122],256],119860:[[65],256],119861:[[66],256],119862:[[67],256],119863:[[68],256],119864:[[69],256],119865:[[70],256],119866:[[71],256],119867:[[72],256],119868:[[73],256],119869:[[74],256],119870:[[75],256],119871:[[76],256],119872:[[77],256],119873:[[78],256],119874:[[79],256],119875:[[80],256],119876:[[81],256],119877:[[82],256],119878:[[83],256],119879:[[84],256],119880:[[85],256],119881:[[86],256],119882:[[87],256],119883:[[88],256],119884:[[89],256],119885:[[90],256],119886:[[97],256],119887:[[98],256],119888:[[99],256],119889:[[100],256],119890:[[101],256],119891:[[102],256],119892:[[103],256],119894:[[105],256],119895:[[106],256],119896:[[107],256],119897:[[108],256],119898:[[109],256],119899:[[110],256],119900:[[111],256],119901:[[112],256],119902:[[113],256],119903:[[114],256],119904:[[115],256],119905:[[116],256],119906:[[117],256],119907:[[118],256],119908:[[119],256],119909:[[120],256],119910:[[121],256],119911:[[122],256],119912:[[65],256],119913:[[66],256],119914:[[67],256],119915:[[68],256],119916:[[69],256],119917:[[70],256],119918:[[71],256],119919:[[72],256],119920:[[73],256],119921:[[74],256],119922:[[75],256],119923:[[76],256],119924:[[77],256],119925:[[78],256],119926:[[79],256],119927:[[80],256],119928:[[81],256],119929:[[82],256],119930:[[83],256],119931:[[84],256],119932:[[85],256],119933:[[86],256],119934:[[87],256],119935:[[88],256],119936:[[89],256],119937:[[90],256],119938:[[97],256],119939:[[98],256],119940:[[99],256],119941:[[100],256],119942:[[101],256],119943:[[102],256],119944:[[103],256],119945:[[104],256],119946:[[105],256],119947:[[106],256],119948:[[107],256],119949:[[108],256],119950:[[109],256],119951:[[110],256],119952:[[111],256],119953:[[112],256],119954:[[113],256],119955:[[114],256],119956:[[115],256],119957:[[116],256],119958:[[117],256],119959:[[118],256],119960:[[119],256],119961:[[120],256],119962:[[121],256],119963:[[122],256],119964:[[65],256],119966:[[67],256],119967:[[68],256],119970:[[71],256],119973:[[74],256],119974:[[75],256],119977:[[78],256],119978:[[79],256],119979:[[80],256],119980:[[81],256],119982:[[83],256],119983:[[84],256],119984:[[85],256],119985:[[86],256],119986:[[87],256],119987:[[88],256],119988:[[89],256],119989:[[90],256],119990:[[97],256],119991:[[98],256],119992:[[99],256],119993:[[100],256],119995:[[102],256],119997:[[104],256],119998:[[105],256],119999:[[106],256],120000:[[107],256],120001:[[108],256],120002:[[109],256],120003:[[110],256],120005:[[112],256],120006:[[113],256],120007:[[114],256],120008:[[115],256],120009:[[116],256],120010:[[117],256],120011:[[118],256],120012:[[119],256],120013:[[120],256],120014:[[121],256],120015:[[122],256],120016:[[65],256],120017:[[66],256],120018:[[67],256],120019:[[68],256],120020:[[69],256],120021:[[70],256],120022:[[71],256],120023:[[72],256],120024:[[73],256],120025:[[74],256],120026:[[75],256],120027:[[76],256],120028:[[77],256],120029:[[78],256],120030:[[79],256],120031:[[80],256],120032:[[81],256],120033:[[82],256],120034:[[83],256],120035:[[84],256],120036:[[85],256],120037:[[86],256],120038:[[87],256],120039:[[88],256],120040:[[89],256],120041:[[90],256],120042:[[97],256],120043:[[98],256],120044:[[99],256],120045:[[100],256],120046:[[101],256],120047:[[102],256],120048:[[103],256],120049:[[104],256],120050:[[105],256],120051:[[106],256],120052:[[107],256],120053:[[108],256],120054:[[109],256],120055:[[110],256],120056:[[111],256],120057:[[112],256],120058:[[113],256],120059:[[114],256],120060:[[115],256],120061:[[116],256],120062:[[117],256],120063:[[118],256]},54528:{120064:[[119],256],120065:[[120],256],120066:[[121],256],120067:[[122],256],120068:[[65],256],120069:[[66],256],120071:[[68],256],120072:[[69],256],120073:[[70],256],120074:[[71],256],120077:[[74],256],120078:[[75],256],120079:[[76],256],120080:[[77],256],120081:[[78],256],120082:[[79],256],120083:[[80],256],120084:[[81],256],120086:[[83],256],120087:[[84],256],120088:[[85],256],120089:[[86],256],120090:[[87],256],120091:[[88],256],120092:[[89],256],120094:[[97],256],120095:[[98],256],120096:[[99],256],120097:[[100],256],120098:[[101],256],120099:[[102],256],120100:[[103],256],120101:[[104],256],120102:[[105],256],120103:[[106],256],120104:[[107],256],120105:[[108],256],120106:[[109],256],120107:[[110],256],120108:[[111],256],120109:[[112],256],120110:[[113],256],120111:[[114],256],120112:[[115],256],120113:[[116],256],120114:[[117],256],120115:[[118],256],120116:[[119],256],120117:[[120],256],120118:[[121],256],120119:[[122],256],120120:[[65],256],120121:[[66],256],120123:[[68],256],120124:[[69],256],120125:[[70],256],120126:[[71],256],120128:[[73],256],120129:[[74],256],120130:[[75],256],120131:[[76],256],120132:[[77],256],120134:[[79],256],120138:[[83],256],120139:[[84],256],120140:[[85],256],120141:[[86],256],120142:[[87],256],120143:[[88],256],120144:[[89],256],120146:[[97],256],120147:[[98],256],120148:[[99],256],120149:[[100],256],120150:[[101],256],120151:[[102],256],120152:[[103],256],120153:[[104],256],120154:[[105],256],120155:[[106],256],120156:[[107],256],120157:[[108],256],120158:[[109],256],120159:[[110],256],120160:[[111],256],120161:[[112],256],120162:[[113],256],120163:[[114],256],120164:[[115],256],120165:[[116],256],120166:[[117],256],120167:[[118],256],120168:[[119],256],120169:[[120],256],120170:[[121],256],120171:[[122],256],120172:[[65],256],120173:[[66],256],120174:[[67],256],120175:[[68],256],120176:[[69],256],120177:[[70],256],120178:[[71],256],120179:[[72],256],120180:[[73],256],120181:[[74],256],120182:[[75],256],120183:[[76],256],120184:[[77],256],120185:[[78],256],120186:[[79],256],120187:[[80],256],120188:[[81],256],120189:[[82],256],120190:[[83],256],120191:[[84],256],120192:[[85],256],120193:[[86],256],120194:[[87],256],120195:[[88],256],120196:[[89],256],120197:[[90],256],120198:[[97],256],120199:[[98],256],120200:[[99],256],120201:[[100],256],120202:[[101],256],120203:[[102],256],120204:[[103],256],120205:[[104],256],120206:[[105],256],120207:[[106],256],120208:[[107],256],120209:[[108],256],120210:[[109],256],120211:[[110],256],120212:[[111],256],120213:[[112],256],120214:[[113],256],120215:[[114],256],120216:[[115],256],120217:[[116],256],120218:[[117],256],120219:[[118],256],120220:[[119],256],120221:[[120],256],120222:[[121],256],120223:[[122],256],120224:[[65],256],120225:[[66],256],120226:[[67],256],120227:[[68],256],120228:[[69],256],120229:[[70],256],120230:[[71],256],120231:[[72],256],120232:[[73],256],120233:[[74],256],120234:[[75],256],120235:[[76],256],120236:[[77],256],120237:[[78],256],120238:[[79],256],120239:[[80],256],120240:[[81],256],120241:[[82],256],120242:[[83],256],120243:[[84],256],120244:[[85],256],120245:[[86],256],120246:[[87],256],120247:[[88],256],120248:[[89],256],120249:[[90],256],120250:[[97],256],120251:[[98],256],120252:[[99],256],120253:[[100],256],120254:[[101],256],120255:[[102],256],120256:[[103],256],120257:[[104],256],120258:[[105],256],120259:[[106],256],120260:[[107],256],120261:[[108],256],120262:[[109],256],120263:[[110],256],120264:[[111],256],120265:[[112],256],120266:[[113],256],120267:[[114],256],120268:[[115],256],120269:[[116],256],120270:[[117],256],120271:[[118],256],120272:[[119],256],120273:[[120],256],120274:[[121],256],120275:[[122],256],120276:[[65],256],120277:[[66],256],120278:[[67],256],120279:[[68],256],120280:[[69],256],120281:[[70],256],120282:[[71],256],120283:[[72],256],120284:[[73],256],120285:[[74],256],120286:[[75],256],120287:[[76],256],120288:[[77],256],120289:[[78],256],120290:[[79],256],120291:[[80],256],120292:[[81],256],120293:[[82],256],120294:[[83],256],120295:[[84],256],120296:[[85],256],120297:[[86],256],120298:[[87],256],120299:[[88],256],120300:[[89],256],120301:[[90],256],120302:[[97],256],120303:[[98],256],120304:[[99],256],120305:[[100],256],120306:[[101],256],120307:[[102],256],120308:[[103],256],120309:[[104],256],120310:[[105],256],120311:[[106],256],120312:[[107],256],120313:[[108],256],120314:[[109],256],120315:[[110],256],120316:[[111],256],120317:[[112],256],120318:[[113],256],120319:[[114],256]},54784:{120320:[[115],256],120321:[[116],256],120322:[[117],256],120323:[[118],256],120324:[[119],256],120325:[[120],256],120326:[[121],256],120327:[[122],256],120328:[[65],256],120329:[[66],256],120330:[[67],256],120331:[[68],256],120332:[[69],256],120333:[[70],256],120334:[[71],256],120335:[[72],256],120336:[[73],256],120337:[[74],256],120338:[[75],256],120339:[[76],256],120340:[[77],256],120341:[[78],256],120342:[[79],256],120343:[[80],256],120344:[[81],256],120345:[[82],256],120346:[[83],256],120347:[[84],256],120348:[[85],256],120349:[[86],256],120350:[[87],256],120351:[[88],256],120352:[[89],256],120353:[[90],256],120354:[[97],256],120355:[[98],256],120356:[[99],256],120357:[[100],256],120358:[[101],256],120359:[[102],256],120360:[[103],256],120361:[[104],256],120362:[[105],256],120363:[[106],256],120364:[[107],256],120365:[[108],256],120366:[[109],256],120367:[[110],256],120368:[[111],256],120369:[[112],256],120370:[[113],256],120371:[[114],256],120372:[[115],256],120373:[[116],256],120374:[[117],256],120375:[[118],256],120376:[[119],256],120377:[[120],256],120378:[[121],256],120379:[[122],256],120380:[[65],256],120381:[[66],256],120382:[[67],256],120383:[[68],256],120384:[[69],256],120385:[[70],256],120386:[[71],256],120387:[[72],256],120388:[[73],256],120389:[[74],256],120390:[[75],256],120391:[[76],256],120392:[[77],256],120393:[[78],256],120394:[[79],256],120395:[[80],256],120396:[[81],256],120397:[[82],256],120398:[[83],256],120399:[[84],256],120400:[[85],256],120401:[[86],256],120402:[[87],256],120403:[[88],256],120404:[[89],256],120405:[[90],256],120406:[[97],256],120407:[[98],256],120408:[[99],256],120409:[[100],256],120410:[[101],256],120411:[[102],256],120412:[[103],256],120413:[[104],256],120414:[[105],256],120415:[[106],256],120416:[[107],256],120417:[[108],256],120418:[[109],256],120419:[[110],256],120420:[[111],256],120421:[[112],256],120422:[[113],256],120423:[[114],256],120424:[[115],256],120425:[[116],256],120426:[[117],256],120427:[[118],256],120428:[[119],256],120429:[[120],256],120430:[[121],256],120431:[[122],256],120432:[[65],256],120433:[[66],256],120434:[[67],256],120435:[[68],256],120436:[[69],256],120437:[[70],256],120438:[[71],256],120439:[[72],256],120440:[[73],256],120441:[[74],256],120442:[[75],256],120443:[[76],256],120444:[[77],256],120445:[[78],256],120446:[[79],256],120447:[[80],256],120448:[[81],256],120449:[[82],256],120450:[[83],256],120451:[[84],256],120452:[[85],256],120453:[[86],256],120454:[[87],256],120455:[[88],256],120456:[[89],256],120457:[[90],256],120458:[[97],256],120459:[[98],256],120460:[[99],256],120461:[[100],256],120462:[[101],256],120463:[[102],256],120464:[[103],256],120465:[[104],256],120466:[[105],256],120467:[[106],256],120468:[[107],256],120469:[[108],256],120470:[[109],256],120471:[[110],256],120472:[[111],256],120473:[[112],256],120474:[[113],256],120475:[[114],256],120476:[[115],256],120477:[[116],256],120478:[[117],256],120479:[[118],256],120480:[[119],256],120481:[[120],256],120482:[[121],256],120483:[[122],256],120484:[[305],256],120485:[[567],256],120488:[[913],256],120489:[[914],256],120490:[[915],256],120491:[[916],256],120492:[[917],256],120493:[[918],256],120494:[[919],256],120495:[[920],256],120496:[[921],256],120497:[[922],256],120498:[[923],256],120499:[[924],256],120500:[[925],256],120501:[[926],256],120502:[[927],256],120503:[[928],256],120504:[[929],256],120505:[[1012],256],120506:[[931],256],120507:[[932],256],120508:[[933],256],120509:[[934],256],120510:[[935],256],120511:[[936],256],120512:[[937],256],120513:[[8711],256],120514:[[945],256],120515:[[946],256],120516:[[947],256],120517:[[948],256],120518:[[949],256],120519:[[950],256],120520:[[951],256],120521:[[952],256],120522:[[953],256],120523:[[954],256],120524:[[955],256],120525:[[956],256],120526:[[957],256],120527:[[958],256],120528:[[959],256],120529:[[960],256],120530:[[961],256],120531:[[962],256],120532:[[963],256],120533:[[964],256],120534:[[965],256],120535:[[966],256],120536:[[967],256],120537:[[968],256],120538:[[969],256],120539:[[8706],256],120540:[[1013],256],120541:[[977],256],120542:[[1008],256],120543:[[981],256],120544:[[1009],256],120545:[[982],256],120546:[[913],256],120547:[[914],256],120548:[[915],256],120549:[[916],256],120550:[[917],256],120551:[[918],256],120552:[[919],256],120553:[[920],256],120554:[[921],256],120555:[[922],256],120556:[[923],256],120557:[[924],256],120558:[[925],256],120559:[[926],256],120560:[[927],256],120561:[[928],256],120562:[[929],256],120563:[[1012],256],120564:[[931],256],120565:[[932],256],120566:[[933],256],120567:[[934],256],120568:[[935],256],120569:[[936],256],120570:[[937],256],120571:[[8711],256],120572:[[945],256],120573:[[946],256],120574:[[947],256],120575:[[948],256]},55040:{120576:[[949],256],120577:[[950],256],120578:[[951],256],120579:[[952],256],120580:[[953],256],120581:[[954],256],120582:[[955],256],120583:[[956],256],120584:[[957],256],120585:[[958],256],120586:[[959],256],120587:[[960],256],120588:[[961],256],120589:[[962],256],120590:[[963],256],120591:[[964],256],120592:[[965],256],120593:[[966],256],120594:[[967],256],120595:[[968],256],120596:[[969],256],120597:[[8706],256],120598:[[1013],256],120599:[[977],256],120600:[[1008],256],120601:[[981],256],120602:[[1009],256],120603:[[982],256],120604:[[913],256],120605:[[914],256],120606:[[915],256],120607:[[916],256],120608:[[917],256],120609:[[918],256],120610:[[919],256],120611:[[920],256],120612:[[921],256],120613:[[922],256],120614:[[923],256],120615:[[924],256],120616:[[925],256],120617:[[926],256],120618:[[927],256],120619:[[928],256],120620:[[929],256],120621:[[1012],256],120622:[[931],256],120623:[[932],256],120624:[[933],256],120625:[[934],256],120626:[[935],256],120627:[[936],256],120628:[[937],256],120629:[[8711],256],120630:[[945],256],120631:[[946],256],120632:[[947],256],120633:[[948],256],120634:[[949],256],120635:[[950],256],120636:[[951],256],120637:[[952],256],120638:[[953],256],120639:[[954],256],120640:[[955],256],120641:[[956],256],120642:[[957],256],120643:[[958],256],120644:[[959],256],120645:[[960],256],120646:[[961],256],120647:[[962],256],120648:[[963],256],120649:[[964],256],120650:[[965],256],120651:[[966],256],120652:[[967],256],120653:[[968],256],120654:[[969],256],120655:[[8706],256],120656:[[1013],256],120657:[[977],256],120658:[[1008],256],120659:[[981],256],120660:[[1009],256],120661:[[982],256],120662:[[913],256],120663:[[914],256],120664:[[915],256],120665:[[916],256],120666:[[917],256],120667:[[918],256],120668:[[919],256],120669:[[920],256],120670:[[921],256],120671:[[922],256],120672:[[923],256],120673:[[924],256],120674:[[925],256],120675:[[926],256],120676:[[927],256],120677:[[928],256],120678:[[929],256],120679:[[1012],256],120680:[[931],256],120681:[[932],256],120682:[[933],256],120683:[[934],256],120684:[[935],256],120685:[[936],256],120686:[[937],256],120687:[[8711],256],120688:[[945],256],120689:[[946],256],120690:[[947],256],120691:[[948],256],120692:[[949],256],120693:[[950],256],120694:[[951],256],120695:[[952],256],120696:[[953],256],120697:[[954],256],120698:[[955],256],120699:[[956],256],120700:[[957],256],120701:[[958],256],120702:[[959],256],120703:[[960],256],120704:[[961],256],120705:[[962],256],120706:[[963],256],120707:[[964],256],120708:[[965],256],120709:[[966],256],120710:[[967],256],120711:[[968],256],120712:[[969],256],120713:[[8706],256],120714:[[1013],256],120715:[[977],256],120716:[[1008],256],120717:[[981],256],120718:[[1009],256],120719:[[982],256],120720:[[913],256],120721:[[914],256],120722:[[915],256],120723:[[916],256],120724:[[917],256],120725:[[918],256],120726:[[919],256],120727:[[920],256],120728:[[921],256],120729:[[922],256],120730:[[923],256],120731:[[924],256],120732:[[925],256],120733:[[926],256],120734:[[927],256],120735:[[928],256],120736:[[929],256],120737:[[1012],256],120738:[[931],256],120739:[[932],256],120740:[[933],256],120741:[[934],256],120742:[[935],256],120743:[[936],256],120744:[[937],256],120745:[[8711],256],120746:[[945],256],120747:[[946],256],120748:[[947],256],120749:[[948],256],120750:[[949],256],120751:[[950],256],120752:[[951],256],120753:[[952],256],120754:[[953],256],120755:[[954],256],120756:[[955],256],120757:[[956],256],120758:[[957],256],120759:[[958],256],120760:[[959],256],120761:[[960],256],120762:[[961],256],120763:[[962],256],120764:[[963],256],120765:[[964],256],120766:[[965],256],120767:[[966],256],120768:[[967],256],120769:[[968],256],120770:[[969],256],120771:[[8706],256],120772:[[1013],256],120773:[[977],256],120774:[[1008],256],120775:[[981],256],120776:[[1009],256],120777:[[982],256],120778:[[988],256],120779:[[989],256],120782:[[48],256],120783:[[49],256],120784:[[50],256],120785:[[51],256],120786:[[52],256],120787:[[53],256],120788:[[54],256],120789:[[55],256],120790:[[56],256],120791:[[57],256],120792:[[48],256],120793:[[49],256],120794:[[50],256],120795:[[51],256],120796:[[52],256],120797:[[53],256],120798:[[54],256],120799:[[55],256],120800:[[56],256],120801:[[57],256],120802:[[48],256],120803:[[49],256],120804:[[50],256],120805:[[51],256],120806:[[52],256],120807:[[53],256],120808:[[54],256],120809:[[55],256],120810:[[56],256],120811:[[57],256],120812:[[48],256],120813:[[49],256],120814:[[50],256],120815:[[51],256],120816:[[52],256],120817:[[53],256],120818:[[54],256],120819:[[55],256],120820:[[56],256],120821:[[57],256],120822:[[48],256],120823:[[49],256],120824:[[50],256],120825:[[51],256],120826:[[52],256],120827:[[53],256],120828:[[54],256],120829:[[55],256],120830:[[56],256],120831:[[57],256]},59392:{125136:[,220],125137:[,220],125138:[,220],125139:[,220],125140:[,220],125141:[,220],125142:[,220]},60928:{126464:[[1575],256],126465:[[1576],256],126466:[[1580],256],126467:[[1583],256],126469:[[1608],256],126470:[[1586],256],126471:[[1581],256],126472:[[1591],256],126473:[[1610],256],126474:[[1603],256],126475:[[1604],256],126476:[[1605],256],126477:[[1606],256],126478:[[1587],256],126479:[[1593],256],126480:[[1601],256],126481:[[1589],256],126482:[[1602],256],126483:[[1585],256],126484:[[1588],256],126485:[[1578],256],126486:[[1579],256],126487:[[1582],256],126488:[[1584],256],126489:[[1590],256],126490:[[1592],256],126491:[[1594],256],126492:[[1646],256],126493:[[1722],256],126494:[[1697],256],126495:[[1647],256],126497:[[1576],256],126498:[[1580],256],126500:[[1607],256],126503:[[1581],256],126505:[[1610],256],126506:[[1603],256],126507:[[1604],256],126508:[[1605],256],126509:[[1606],256],126510:[[1587],256],126511:[[1593],256],126512:[[1601],256],126513:[[1589],256],126514:[[1602],256],126516:[[1588],256],126517:[[1578],256],126518:[[1579],256],126519:[[1582],256],126521:[[1590],256],126523:[[1594],256],126530:[[1580],256],126535:[[1581],256],126537:[[1610],256],126539:[[1604],256],126541:[[1606],256],126542:[[1587],256],126543:[[1593],256],126545:[[1589],256],126546:[[1602],256],126548:[[1588],256],126551:[[1582],256],126553:[[1590],256],126555:[[1594],256],126557:[[1722],256],126559:[[1647],256],126561:[[1576],256],126562:[[1580],256],126564:[[1607],256],126567:[[1581],256],126568:[[1591],256],126569:[[1610],256],126570:[[1603],256],126572:[[1605],256],126573:[[1606],256],126574:[[1587],256],126575:[[1593],256],126576:[[1601],256],126577:[[1589],256],126578:[[1602],256],126580:[[1588],256],126581:[[1578],256],126582:[[1579],256],126583:[[1582],256],126585:[[1590],256],126586:[[1592],256],126587:[[1594],256],126588:[[1646],256],126590:[[1697],256],126592:[[1575],256],126593:[[1576],256],126594:[[1580],256],126595:[[1583],256],126596:[[1607],256],126597:[[1608],256],126598:[[1586],256],126599:[[1581],256],126600:[[1591],256],126601:[[1610],256],126603:[[1604],256],126604:[[1605],256],126605:[[1606],256],126606:[[1587],256],126607:[[1593],256],126608:[[1601],256],126609:[[1589],256],126610:[[1602],256],126611:[[1585],256],126612:[[1588],256],126613:[[1578],256],126614:[[1579],256],126615:[[1582],256],126616:[[1584],256],126617:[[1590],256],126618:[[1592],256],126619:[[1594],256],126625:[[1576],256],126626:[[1580],256],126627:[[1583],256],126629:[[1608],256],126630:[[1586],256],126631:[[1581],256],126632:[[1591],256],126633:[[1610],256],126635:[[1604],256],126636:[[1605],256],126637:[[1606],256],126638:[[1587],256],126639:[[1593],256],126640:[[1601],256],126641:[[1589],256],126642:[[1602],256],126643:[[1585],256],126644:[[1588],256],126645:[[1578],256],126646:[[1579],256],126647:[[1582],256],126648:[[1584],256],126649:[[1590],256],126650:[[1592],256],126651:[[1594],256]},61696:{127232:[[48,46],256],127233:[[48,44],256],127234:[[49,44],256],127235:[[50,44],256],127236:[[51,44],256],127237:[[52,44],256],127238:[[53,44],256],127239:[[54,44],256],127240:[[55,44],256],127241:[[56,44],256],127242:[[57,44],256],127248:[[40,65,41],256],127249:[[40,66,41],256],127250:[[40,67,41],256],127251:[[40,68,41],256],127252:[[40,69,41],256],127253:[[40,70,41],256],127254:[[40,71,41],256],127255:[[40,72,41],256],127256:[[40,73,41],256],127257:[[40,74,41],256],127258:[[40,75,41],256],127259:[[40,76,41],256],127260:[[40,77,41],256],127261:[[40,78,41],256],127262:[[40,79,41],256],127263:[[40,80,41],256],127264:[[40,81,41],256],127265:[[40,82,41],256],127266:[[40,83,41],256],127267:[[40,84,41],256],127268:[[40,85,41],256],127269:[[40,86,41],256],127270:[[40,87,41],256],127271:[[40,88,41],256],127272:[[40,89,41],256],127273:[[40,90,41],256],127274:[[12308,83,12309],256],127275:[[67],256],127276:[[82],256],127277:[[67,68],256],127278:[[87,90],256],127280:[[65],256],127281:[[66],256],127282:[[67],256],127283:[[68],256],127284:[[69],256],127285:[[70],256],127286:[[71],256],127287:[[72],256],127288:[[73],256],127289:[[74],256],127290:[[75],256],127291:[[76],256],127292:[[77],256],127293:[[78],256],127294:[[79],256],127295:[[80],256],127296:[[81],256],127297:[[82],256],127298:[[83],256],127299:[[84],256],127300:[[85],256],127301:[[86],256],127302:[[87],256],127303:[[88],256],127304:[[89],256],127305:[[90],256],127306:[[72,86],256],127307:[[77,86],256],127308:[[83,68],256],127309:[[83,83],256],127310:[[80,80,86],256],127311:[[87,67],256],127338:[[77,67],256],127339:[[77,68],256],127376:[[68,74],256]},61952:{},63488:{194560:[[20029]],194561:[[20024]],194562:[[20033]],194563:[[131362]],194564:[[20320]],194565:[[20398]],194566:[[20411]],194567:[[20482]],194568:[[20602]],194569:[[20633]],194570:[[20711]],194571:[[20687]],194572:[[13470]],194573:[[132666]],194574:[[20813]],194575:[[20820]],194576:[[20836]],194577:[[20855]],194578:[[132380]],194579:[[13497]],194580:[[20839]],194581:[[20877]],194582:[[132427]],194583:[[20887]],194584:[[20900]],194585:[[20172]],194586:[[20908]],194587:[[20917]],194588:[[168415]],194589:[[20981]],194590:[[20995]],194591:[[13535]],194592:[[21051]],194593:[[21062]],194594:[[21106]],194595:[[21111]],194596:[[13589]],194597:[[21191]],194598:[[21193]],194599:[[21220]],194600:[[21242]],194601:[[21253]],194602:[[21254]],194603:[[21271]],194604:[[21321]],194605:[[21329]],194606:[[21338]],194607:[[21363]],194608:[[21373]],194609:[[21375]],194610:[[21375]],194611:[[21375]],194612:[[133676]],194613:[[28784]],194614:[[21450]],194615:[[21471]],194616:[[133987]],194617:[[21483]],194618:[[21489]],194619:[[21510]],194620:[[21662]],194621:[[21560]],194622:[[21576]],194623:[[21608]],194624:[[21666]],194625:[[21750]],194626:[[21776]],194627:[[21843]],194628:[[21859]],194629:[[21892]],194630:[[21892]],194631:[[21913]],194632:[[21931]],194633:[[21939]],194634:[[21954]],194635:[[22294]],194636:[[22022]],194637:[[22295]],194638:[[22097]],194639:[[22132]],194640:[[20999]],194641:[[22766]],194642:[[22478]],194643:[[22516]],194644:[[22541]],194645:[[22411]],194646:[[22578]],194647:[[22577]],194648:[[22700]],194649:[[136420]],194650:[[22770]],194651:[[22775]],194652:[[22790]],194653:[[22810]],194654:[[22818]],194655:[[22882]],194656:[[136872]],194657:[[136938]],194658:[[23020]],194659:[[23067]],194660:[[23079]],194661:[[23e3]],194662:[[23142]],194663:[[14062]],194664:[[14076]],194665:[[23304]],194666:[[23358]],194667:[[23358]],194668:[[137672]],194669:[[23491]],194670:[[23512]],194671:[[23527]],194672:[[23539]],194673:[[138008]],194674:[[23551]],194675:[[23558]],194676:[[24403]],194677:[[23586]],194678:[[14209]],194679:[[23648]],194680:[[23662]],194681:[[23744]],194682:[[23693]],194683:[[138724]],194684:[[23875]],194685:[[138726]],194686:[[23918]],194687:[[23915]],194688:[[23932]],194689:[[24033]],194690:[[24034]],194691:[[14383]],194692:[[24061]],194693:[[24104]],194694:[[24125]],194695:[[24169]],194696:[[14434]],194697:[[139651]],194698:[[14460]],194699:[[24240]],194700:[[24243]],194701:[[24246]],194702:[[24266]],194703:[[172946]],194704:[[24318]],194705:[[140081]],194706:[[140081]],194707:[[33281]],194708:[[24354]],194709:[[24354]],194710:[[14535]],194711:[[144056]],194712:[[156122]],194713:[[24418]],194714:[[24427]],194715:[[14563]],194716:[[24474]],194717:[[24525]],194718:[[24535]],194719:[[24569]],194720:[[24705]],194721:[[14650]],194722:[[14620]],194723:[[24724]],194724:[[141012]],194725:[[24775]],194726:[[24904]],194727:[[24908]],194728:[[24910]],194729:[[24908]],194730:[[24954]],194731:[[24974]],194732:[[25010]],194733:[[24996]],194734:[[25007]],194735:[[25054]],194736:[[25074]],194737:[[25078]],194738:[[25104]],194739:[[25115]],194740:[[25181]],194741:[[25265]],194742:[[25300]],194743:[[25424]],194744:[[142092]],194745:[[25405]],194746:[[25340]],194747:[[25448]],194748:[[25475]],194749:[[25572]],194750:[[142321]],194751:[[25634]],194752:[[25541]],194753:[[25513]],194754:[[14894]],194755:[[25705]],194756:[[25726]],194757:[[25757]],194758:[[25719]],194759:[[14956]],194760:[[25935]],194761:[[25964]],194762:[[143370]],194763:[[26083]],194764:[[26360]],194765:[[26185]],194766:[[15129]],194767:[[26257]],194768:[[15112]],194769:[[15076]],194770:[[20882]],194771:[[20885]],194772:[[26368]],194773:[[26268]],194774:[[32941]],194775:[[17369]],194776:[[26391]],194777:[[26395]],194778:[[26401]],194779:[[26462]],194780:[[26451]],194781:[[144323]],194782:[[15177]],194783:[[26618]],194784:[[26501]],194785:[[26706]],194786:[[26757]],194787:[[144493]],194788:[[26766]],194789:[[26655]],194790:[[26900]],194791:[[15261]],194792:[[26946]],194793:[[27043]],194794:[[27114]],194795:[[27304]],194796:[[145059]],194797:[[27355]],194798:[[15384]],194799:[[27425]],194800:[[145575]],194801:[[27476]],194802:[[15438]],194803:[[27506]],194804:[[27551]],194805:[[27578]],194806:[[27579]],194807:[[146061]],194808:[[138507]],194809:[[146170]],194810:[[27726]],194811:[[146620]],194812:[[27839]],194813:[[27853]],194814:[[27751]],194815:[[27926]]},63744:{63744:[[35912]],63745:[[26356]],63746:[[36554]],63747:[[36040]],63748:[[28369]],63749:[[20018]],63750:[[21477]],63751:[[40860]],63752:[[40860]],63753:[[22865]],63754:[[37329]],63755:[[21895]],63756:[[22856]],63757:[[25078]],63758:[[30313]],63759:[[32645]],63760:[[34367]],63761:[[34746]],63762:[[35064]],63763:[[37007]],63764:[[27138]],63765:[[27931]],63766:[[28889]],63767:[[29662]],63768:[[33853]],63769:[[37226]],63770:[[39409]],63771:[[20098]],63772:[[21365]],63773:[[27396]],63774:[[29211]],63775:[[34349]],63776:[[40478]],63777:[[23888]],63778:[[28651]],63779:[[34253]],63780:[[35172]],63781:[[25289]],63782:[[33240]],63783:[[34847]],63784:[[24266]],63785:[[26391]],63786:[[28010]],63787:[[29436]],63788:[[37070]],63789:[[20358]],63790:[[20919]],63791:[[21214]],63792:[[25796]],63793:[[27347]],63794:[[29200]],63795:[[30439]],63796:[[32769]],63797:[[34310]],63798:[[34396]],63799:[[36335]],63800:[[38706]],63801:[[39791]],63802:[[40442]],63803:[[30860]],63804:[[31103]],63805:[[32160]],63806:[[33737]],63807:[[37636]],63808:[[40575]],63809:[[35542]],63810:[[22751]],63811:[[24324]],63812:[[31840]],63813:[[32894]],63814:[[29282]],63815:[[30922]],63816:[[36034]],63817:[[38647]],63818:[[22744]],63819:[[23650]],63820:[[27155]],63821:[[28122]],63822:[[28431]],63823:[[32047]],63824:[[32311]],63825:[[38475]],63826:[[21202]],63827:[[32907]],63828:[[20956]],63829:[[20940]],63830:[[31260]],63831:[[32190]],63832:[[33777]],63833:[[38517]],63834:[[35712]],63835:[[25295]],63836:[[27138]],63837:[[35582]],63838:[[20025]],63839:[[23527]],63840:[[24594]],63841:[[29575]],63842:[[30064]],63843:[[21271]],63844:[[30971]],63845:[[20415]],63846:[[24489]],63847:[[19981]],63848:[[27852]],63849:[[25976]],63850:[[32034]],63851:[[21443]],63852:[[22622]],63853:[[30465]],63854:[[33865]],63855:[[35498]],63856:[[27578]],63857:[[36784]],63858:[[27784]],63859:[[25342]],63860:[[33509]],63861:[[25504]],63862:[[30053]],63863:[[20142]],63864:[[20841]],63865:[[20937]],63866:[[26753]],63867:[[31975]],63868:[[33391]],63869:[[35538]],63870:[[37327]],63871:[[21237]],63872:[[21570]],63873:[[22899]],63874:[[24300]],63875:[[26053]],63876:[[28670]],63877:[[31018]],63878:[[38317]],63879:[[39530]],63880:[[40599]],63881:[[40654]],63882:[[21147]],63883:[[26310]],63884:[[27511]],63885:[[36706]],63886:[[24180]],63887:[[24976]],63888:[[25088]],63889:[[25754]],63890:[[28451]],63891:[[29001]],63892:[[29833]],63893:[[31178]],63894:[[32244]],63895:[[32879]],63896:[[36646]],63897:[[34030]],63898:[[36899]],63899:[[37706]],63900:[[21015]],63901:[[21155]],63902:[[21693]],63903:[[28872]],63904:[[35010]],63905:[[35498]],63906:[[24265]],63907:[[24565]],63908:[[25467]],63909:[[27566]],63910:[[31806]],63911:[[29557]],63912:[[20196]],63913:[[22265]],63914:[[23527]],63915:[[23994]],63916:[[24604]],63917:[[29618]],63918:[[29801]],63919:[[32666]],63920:[[32838]],63921:[[37428]],63922:[[38646]],63923:[[38728]],63924:[[38936]],63925:[[20363]],63926:[[31150]],63927:[[37300]],63928:[[38584]],63929:[[24801]],63930:[[20102]],63931:[[20698]],63932:[[23534]],63933:[[23615]],63934:[[26009]],63935:[[27138]],63936:[[29134]],63937:[[30274]],63938:[[34044]],63939:[[36988]],63940:[[40845]],63941:[[26248]],63942:[[38446]],63943:[[21129]],63944:[[26491]],63945:[[26611]],63946:[[27969]],63947:[[28316]],63948:[[29705]],63949:[[30041]],63950:[[30827]],63951:[[32016]],63952:[[39006]],63953:[[20845]],63954:[[25134]],63955:[[38520]],63956:[[20523]],63957:[[23833]],63958:[[28138]],63959:[[36650]],63960:[[24459]],63961:[[24900]],63962:[[26647]],63963:[[29575]],63964:[[38534]],63965:[[21033]],63966:[[21519]],63967:[[23653]],63968:[[26131]],63969:[[26446]],63970:[[26792]],63971:[[27877]],63972:[[29702]],63973:[[30178]],63974:[[32633]],63975:[[35023]],63976:[[35041]],63977:[[37324]],63978:[[38626]],63979:[[21311]],63980:[[28346]],63981:[[21533]],63982:[[29136]],63983:[[29848]],63984:[[34298]],63985:[[38563]],63986:[[40023]],63987:[[40607]],63988:[[26519]],63989:[[28107]],63990:[[33256]],63991:[[31435]],63992:[[31520]],63993:[[31890]],63994:[[29376]],63995:[[28825]],63996:[[35672]],63997:[[20160]],63998:[[33590]],63999:[[21050]],194816:[[27966]],194817:[[28023]],194818:[[27969]],194819:[[28009]],194820:[[28024]],194821:[[28037]],194822:[[146718]],194823:[[27956]],194824:[[28207]],194825:[[28270]],194826:[[15667]],194827:[[28363]],194828:[[28359]],194829:[[147153]],194830:[[28153]],194831:[[28526]],194832:[[147294]],194833:[[147342]],194834:[[28614]],194835:[[28729]],194836:[[28702]],194837:[[28699]],194838:[[15766]],194839:[[28746]],194840:[[28797]],194841:[[28791]],194842:[[28845]],194843:[[132389]],194844:[[28997]],194845:[[148067]],194846:[[29084]],194847:[[148395]],194848:[[29224]],194849:[[29237]],194850:[[29264]],194851:[[149e3]],194852:[[29312]],194853:[[29333]],194854:[[149301]],194855:[[149524]],194856:[[29562]],194857:[[29579]],194858:[[16044]],194859:[[29605]],194860:[[16056]],194861:[[16056]],194862:[[29767]],194863:[[29788]],194864:[[29809]],194865:[[29829]],194866:[[29898]],194867:[[16155]],194868:[[29988]],194869:[[150582]],194870:[[30014]],194871:[[150674]],194872:[[30064]],194873:[[139679]],194874:[[30224]],194875:[[151457]],194876:[[151480]],194877:[[151620]],194878:[[16380]],194879:[[16392]],194880:[[30452]],194881:[[151795]],194882:[[151794]],194883:[[151833]],194884:[[151859]],194885:[[30494]],194886:[[30495]],194887:[[30495]],194888:[[30538]],194889:[[16441]],194890:[[30603]],194891:[[16454]],194892:[[16534]],194893:[[152605]],194894:[[30798]],194895:[[30860]],194896:[[30924]],194897:[[16611]],194898:[[153126]],194899:[[31062]],194900:[[153242]],194901:[[153285]],194902:[[31119]],194903:[[31211]],194904:[[16687]],194905:[[31296]],194906:[[31306]],194907:[[31311]],194908:[[153980]],194909:[[154279]],194910:[[154279]],194911:[[31470]],194912:[[16898]],194913:[[154539]],194914:[[31686]],194915:[[31689]],194916:[[16935]],194917:[[154752]],194918:[[31954]],194919:[[17056]],194920:[[31976]],194921:[[31971]],194922:[[32e3]],194923:[[155526]],194924:[[32099]],194925:[[17153]],194926:[[32199]],194927:[[32258]],194928:[[32325]],194929:[[17204]],194930:[[156200]],194931:[[156231]],194932:[[17241]],194933:[[156377]],194934:[[32634]],194935:[[156478]],194936:[[32661]],194937:[[32762]],194938:[[32773]],194939:[[156890]],194940:[[156963]],194941:[[32864]],194942:[[157096]],194943:[[32880]],194944:[[144223]],194945:[[17365]],194946:[[32946]],194947:[[33027]],194948:[[17419]],194949:[[33086]],194950:[[23221]],194951:[[157607]],194952:[[157621]],194953:[[144275]],194954:[[144284]],194955:[[33281]],194956:[[33284]],194957:[[36766]],194958:[[17515]],194959:[[33425]],194960:[[33419]],194961:[[33437]],194962:[[21171]],194963:[[33457]],194964:[[33459]],194965:[[33469]],194966:[[33510]],194967:[[158524]],194968:[[33509]],194969:[[33565]],194970:[[33635]],194971:[[33709]],194972:[[33571]],194973:[[33725]],194974:[[33767]],194975:[[33879]],194976:[[33619]],194977:[[33738]],194978:[[33740]],194979:[[33756]],194980:[[158774]],194981:[[159083]],194982:[[158933]],194983:[[17707]],194984:[[34033]],194985:[[34035]],194986:[[34070]],194987:[[160714]],194988:[[34148]],194989:[[159532]],194990:[[17757]],194991:[[17761]],194992:[[159665]],194993:[[159954]],194994:[[17771]],194995:[[34384]],194996:[[34396]],194997:[[34407]],194998:[[34409]],194999:[[34473]],195000:[[34440]],195001:[[34574]],195002:[[34530]],195003:[[34681]],195004:[[34600]],195005:[[34667]],195006:[[34694]],195007:[[17879]],195008:[[34785]],195009:[[34817]],195010:[[17913]],195011:[[34912]],195012:[[34915]],195013:[[161383]],195014:[[35031]],195015:[[35038]],195016:[[17973]],195017:[[35066]],195018:[[13499]],195019:[[161966]],195020:[[162150]],195021:[[18110]],195022:[[18119]],195023:[[35488]],195024:[[35565]],195025:[[35722]],195026:[[35925]],195027:[[162984]],195028:[[36011]],195029:[[36033]],195030:[[36123]],195031:[[36215]],195032:[[163631]],195033:[[133124]],195034:[[36299]],195035:[[36284]],195036:[[36336]],195037:[[133342]],195038:[[36564]],195039:[[36664]],195040:[[165330]],195041:[[165357]],195042:[[37012]],195043:[[37105]],195044:[[37137]],195045:[[165678]],195046:[[37147]],195047:[[37432]],195048:[[37591]],195049:[[37592]],195050:[[37500]],195051:[[37881]],195052:[[37909]],195053:[[166906]],195054:[[38283]],195055:[[18837]],195056:[[38327]],195057:[[167287]],195058:[[18918]],195059:[[38595]],195060:[[23986]],195061:[[38691]],195062:[[168261]],195063:[[168474]],195064:[[19054]],195065:[[19062]],195066:[[38880]],195067:[[168970]],195068:[[19122]],195069:[[169110]],195070:[[38923]],195071:[[38923]]},64000:{64000:[[20999]],64001:[[24230]],64002:[[25299]],64003:[[31958]],64004:[[23429]],64005:[[27934]],64006:[[26292]],64007:[[36667]],64008:[[34892]],64009:[[38477]],64010:[[35211]],64011:[[24275]],64012:[[20800]],64013:[[21952]],64016:[[22618]],64018:[[26228]],64021:[[20958]],64022:[[29482]],64023:[[30410]],64024:[[31036]],64025:[[31070]],64026:[[31077]],64027:[[31119]],64028:[[38742]],64029:[[31934]],64030:[[32701]],64032:[[34322]],64034:[[35576]],64037:[[36920]],64038:[[37117]],64042:[[39151]],64043:[[39164]],64044:[[39208]],64045:[[40372]],64046:[[37086]],64047:[[38583]],64048:[[20398]],64049:[[20711]],64050:[[20813]],64051:[[21193]],64052:[[21220]],64053:[[21329]],64054:[[21917]],64055:[[22022]],64056:[[22120]],64057:[[22592]],64058:[[22696]],64059:[[23652]],64060:[[23662]],64061:[[24724]],64062:[[24936]],64063:[[24974]],64064:[[25074]],64065:[[25935]],64066:[[26082]],64067:[[26257]],64068:[[26757]],64069:[[28023]],64070:[[28186]],64071:[[28450]],64072:[[29038]],64073:[[29227]],64074:[[29730]],64075:[[30865]],64076:[[31038]],64077:[[31049]],64078:[[31048]],64079:[[31056]],64080:[[31062]],64081:[[31069]],64082:[[31117]],64083:[[31118]],64084:[[31296]],64085:[[31361]],64086:[[31680]],64087:[[32244]],64088:[[32265]],64089:[[32321]],64090:[[32626]],64091:[[32773]],64092:[[33261]],64093:[[33401]],64094:[[33401]],64095:[[33879]],64096:[[35088]],64097:[[35222]],64098:[[35585]],64099:[[35641]],64100:[[36051]],64101:[[36104]],64102:[[36790]],64103:[[36920]],64104:[[38627]],64105:[[38911]],64106:[[38971]],64107:[[24693]],64108:[[148206]],64109:[[33304]],64112:[[20006]],64113:[[20917]],64114:[[20840]],64115:[[20352]],64116:[[20805]],64117:[[20864]],64118:[[21191]],64119:[[21242]],64120:[[21917]],64121:[[21845]],64122:[[21913]],64123:[[21986]],64124:[[22618]],64125:[[22707]],64126:[[22852]],64127:[[22868]],64128:[[23138]],64129:[[23336]],64130:[[24274]],64131:[[24281]],64132:[[24425]],64133:[[24493]],64134:[[24792]],64135:[[24910]],64136:[[24840]],64137:[[24974]],64138:[[24928]],64139:[[25074]],64140:[[25140]],64141:[[25540]],64142:[[25628]],64143:[[25682]],64144:[[25942]],64145:[[26228]],64146:[[26391]],64147:[[26395]],64148:[[26454]],64149:[[27513]],64150:[[27578]],64151:[[27969]],64152:[[28379]],64153:[[28363]],64154:[[28450]],64155:[[28702]],64156:[[29038]],64157:[[30631]],64158:[[29237]],64159:[[29359]],64160:[[29482]],64161:[[29809]],64162:[[29958]],64163:[[30011]],64164:[[30237]],64165:[[30239]],64166:[[30410]],64167:[[30427]],64168:[[30452]],64169:[[30538]],64170:[[30528]],64171:[[30924]],64172:[[31409]],64173:[[31680]],64174:[[31867]],64175:[[32091]],64176:[[32244]],64177:[[32574]],64178:[[32773]],64179:[[33618]],64180:[[33775]],64181:[[34681]],64182:[[35137]],64183:[[35206]],64184:[[35222]],64185:[[35519]],64186:[[35576]],64187:[[35531]],64188:[[35585]],64189:[[35582]],64190:[[35565]],64191:[[35641]],64192:[[35722]],64193:[[36104]],64194:[[36664]],64195:[[36978]],64196:[[37273]],64197:[[37494]],64198:[[38524]],64199:[[38627]],64200:[[38742]],64201:[[38875]],64202:[[38911]],64203:[[38923]],64204:[[38971]],64205:[[39698]],64206:[[40860]],64207:[[141386]],64208:[[141380]],64209:[[144341]],64210:[[15261]],64211:[[16408]],64212:[[16441]],64213:[[152137]],64214:[[154832]],64215:[[163539]],64216:[[40771]],64217:[[40846]],195072:[[38953]],195073:[[169398]],195074:[[39138]],195075:[[19251]],195076:[[39209]],195077:[[39335]],195078:[[39362]],195079:[[39422]],195080:[[19406]],195081:[[170800]],195082:[[39698]],195083:[[4e4]],195084:[[40189]],195085:[[19662]],195086:[[19693]],195087:[[40295]],195088:[[172238]],195089:[[19704]],195090:[[172293]],195091:[[172558]],195092:[[172689]],195093:[[40635]],195094:[[19798]],195095:[[40697]],195096:[[40702]],195097:[[40709]],195098:[[40719]],195099:[[40726]],195100:[[40763]],195101:[[173568]]},64256:{64256:[[102,102],256],64257:[[102,105],256],64258:[[102,108],256],64259:[[102,102,105],256],64260:[[102,102,108],256],64261:[[383,116],256],64262:[[115,116],256],64275:[[1396,1398],256],64276:[[1396,1381],256],64277:[[1396,1387],256],64278:[[1406,1398],256],64279:[[1396,1389],256],64285:[[1497,1460],512],64286:[,26],64287:[[1522,1463],512],64288:[[1506],256],64289:[[1488],256],64290:[[1491],256],64291:[[1492],256],64292:[[1499],256],64293:[[1500],256],64294:[[1501],256],64295:[[1512],256],64296:[[1514],256],64297:[[43],256],64298:[[1513,1473],512],64299:[[1513,1474],512],64300:[[64329,1473],512],64301:[[64329,1474],512],64302:[[1488,1463],512],64303:[[1488,1464],512],64304:[[1488,1468],512],64305:[[1489,1468],512],64306:[[1490,1468],512],64307:[[1491,1468],512],64308:[[1492,1468],512],64309:[[1493,1468],512],64310:[[1494,1468],512],64312:[[1496,1468],512],64313:[[1497,1468],512],64314:[[1498,1468],512],64315:[[1499,1468],512],64316:[[1500,1468],512],64318:[[1502,1468],512],64320:[[1504,1468],512],64321:[[1505,1468],512],64323:[[1507,1468],512],64324:[[1508,1468],512],64326:[[1510,1468],512],64327:[[1511,1468],512],64328:[[1512,1468],512],64329:[[1513,1468],512],64330:[[1514,1468],512],64331:[[1493,1465],512],64332:[[1489,1471],512],64333:[[1499,1471],512],64334:[[1508,1471],512],64335:[[1488,1500],256],64336:[[1649],256],64337:[[1649],256],64338:[[1659],256],64339:[[1659],256],64340:[[1659],256],64341:[[1659],256],64342:[[1662],256],64343:[[1662],256],64344:[[1662],256],64345:[[1662],256],64346:[[1664],256],64347:[[1664],256],64348:[[1664],256],64349:[[1664],256],64350:[[1658],256],64351:[[1658],256],64352:[[1658],256],64353:[[1658],256],64354:[[1663],256],64355:[[1663],256],64356:[[1663],256],64357:[[1663],256],64358:[[1657],256],64359:[[1657],256],64360:[[1657],256],64361:[[1657],256],64362:[[1700],256],64363:[[1700],256],64364:[[1700],256],64365:[[1700],256],64366:[[1702],256],64367:[[1702],256],64368:[[1702],256],64369:[[1702],256],64370:[[1668],256],64371:[[1668],256],64372:[[1668],256],64373:[[1668],256],64374:[[1667],256],64375:[[1667],256],64376:[[1667],256],64377:[[1667],256],64378:[[1670],256],64379:[[1670],256],64380:[[1670],256],64381:[[1670],256],64382:[[1671],256],64383:[[1671],256],64384:[[1671],256],64385:[[1671],256],64386:[[1677],256],64387:[[1677],256],64388:[[1676],256],64389:[[1676],256],64390:[[1678],256],64391:[[1678],256],64392:[[1672],256],64393:[[1672],256],64394:[[1688],256],64395:[[1688],256],64396:[[1681],256],64397:[[1681],256],64398:[[1705],256],64399:[[1705],256],64400:[[1705],256],64401:[[1705],256],64402:[[1711],256],64403:[[1711],256],64404:[[1711],256],64405:[[1711],256],64406:[[1715],256],64407:[[1715],256],64408:[[1715],256],64409:[[1715],256],64410:[[1713],256],64411:[[1713],256],64412:[[1713],256],64413:[[1713],256],64414:[[1722],256],64415:[[1722],256],64416:[[1723],256],64417:[[1723],256],64418:[[1723],256],64419:[[1723],256],64420:[[1728],256],64421:[[1728],256],64422:[[1729],256],64423:[[1729],256],64424:[[1729],256],64425:[[1729],256],64426:[[1726],256],64427:[[1726],256],64428:[[1726],256],64429:[[1726],256],64430:[[1746],256],64431:[[1746],256],64432:[[1747],256],64433:[[1747],256],64467:[[1709],256],64468:[[1709],256],64469:[[1709],256],64470:[[1709],256],64471:[[1735],256],64472:[[1735],256],64473:[[1734],256],64474:[[1734],256],64475:[[1736],256],64476:[[1736],256],64477:[[1655],256],64478:[[1739],256],64479:[[1739],256],64480:[[1733],256],64481:[[1733],256],64482:[[1737],256],64483:[[1737],256],64484:[[1744],256],64485:[[1744],256],64486:[[1744],256],64487:[[1744],256],64488:[[1609],256],64489:[[1609],256],64490:[[1574,1575],256],64491:[[1574,1575],256],64492:[[1574,1749],256],64493:[[1574,1749],256],64494:[[1574,1608],256],64495:[[1574,1608],256],64496:[[1574,1735],256],64497:[[1574,1735],256],64498:[[1574,1734],256],64499:[[1574,1734],256],64500:[[1574,1736],256],64501:[[1574,1736],256],64502:[[1574,1744],256],64503:[[1574,1744],256],64504:[[1574,1744],256],64505:[[1574,1609],256],64506:[[1574,1609],256],64507:[[1574,1609],256],64508:[[1740],256],64509:[[1740],256],64510:[[1740],256],64511:[[1740],256]},64512:{64512:[[1574,1580],256],64513:[[1574,1581],256],64514:[[1574,1605],256],64515:[[1574,1609],256],64516:[[1574,1610],256],64517:[[1576,1580],256],64518:[[1576,1581],256],64519:[[1576,1582],256],64520:[[1576,1605],256],64521:[[1576,1609],256],64522:[[1576,1610],256],64523:[[1578,1580],256],64524:[[1578,1581],256],64525:[[1578,1582],256],64526:[[1578,1605],256],64527:[[1578,1609],256],64528:[[1578,1610],256],64529:[[1579,1580],256],64530:[[1579,1605],256],64531:[[1579,1609],256],64532:[[1579,1610],256],64533:[[1580,1581],256],64534:[[1580,1605],256],64535:[[1581,1580],256],64536:[[1581,1605],256],64537:[[1582,1580],256],64538:[[1582,1581],256],64539:[[1582,1605],256],64540:[[1587,1580],256],64541:[[1587,1581],256],64542:[[1587,1582],256],64543:[[1587,1605],256],64544:[[1589,1581],256],64545:[[1589,1605],256],64546:[[1590,1580],256],64547:[[1590,1581],256],64548:[[1590,1582],256],64549:[[1590,1605],256],64550:[[1591,1581],256],64551:[[1591,1605],256],64552:[[1592,1605],256],64553:[[1593,1580],256],64554:[[1593,1605],256],64555:[[1594,1580],256],64556:[[1594,1605],256],64557:[[1601,1580],256],64558:[[1601,1581],256],64559:[[1601,1582],256],64560:[[1601,1605],256],64561:[[1601,1609],256],64562:[[1601,1610],256],64563:[[1602,1581],256],64564:[[1602,1605],256],64565:[[1602,1609],256],64566:[[1602,1610],256],64567:[[1603,1575],256],64568:[[1603,1580],256],64569:[[1603,1581],256],64570:[[1603,1582],256],64571:[[1603,1604],256],64572:[[1603,1605],256],64573:[[1603,1609],256],64574:[[1603,1610],256],64575:[[1604,1580],256],64576:[[1604,1581],256],64577:[[1604,1582],256],64578:[[1604,1605],256],64579:[[1604,1609],256],64580:[[1604,1610],256],64581:[[1605,1580],256],64582:[[1605,1581],256],64583:[[1605,1582],256],64584:[[1605,1605],256],64585:[[1605,1609],256],64586:[[1605,1610],256],64587:[[1606,1580],256],64588:[[1606,1581],256],64589:[[1606,1582],256],64590:[[1606,1605],256],64591:[[1606,1609],256],64592:[[1606,1610],256],64593:[[1607,1580],256],64594:[[1607,1605],256],64595:[[1607,1609],256],64596:[[1607,1610],256],64597:[[1610,1580],256],64598:[[1610,1581],256],64599:[[1610,1582],256],64600:[[1610,1605],256],64601:[[1610,1609],256],64602:[[1610,1610],256],64603:[[1584,1648],256],64604:[[1585,1648],256],64605:[[1609,1648],256],64606:[[32,1612,1617],256],64607:[[32,1613,1617],256],64608:[[32,1614,1617],256],64609:[[32,1615,1617],256],64610:[[32,1616,1617],256],64611:[[32,1617,1648],256],64612:[[1574,1585],256],64613:[[1574,1586],256],64614:[[1574,1605],256],64615:[[1574,1606],256],64616:[[1574,1609],256],64617:[[1574,1610],256],64618:[[1576,1585],256],64619:[[1576,1586],256],64620:[[1576,1605],256],64621:[[1576,1606],256],64622:[[1576,1609],256],64623:[[1576,1610],256],64624:[[1578,1585],256],64625:[[1578,1586],256],64626:[[1578,1605],256],64627:[[1578,1606],256],64628:[[1578,1609],256],64629:[[1578,1610],256],64630:[[1579,1585],256],64631:[[1579,1586],256],64632:[[1579,1605],256],64633:[[1579,1606],256],64634:[[1579,1609],256],64635:[[1579,1610],256],64636:[[1601,1609],256],64637:[[1601,1610],256],64638:[[1602,1609],256],64639:[[1602,1610],256],64640:[[1603,1575],256],64641:[[1603,1604],256],64642:[[1603,1605],256],64643:[[1603,1609],256],64644:[[1603,1610],256],64645:[[1604,1605],256],64646:[[1604,1609],256],64647:[[1604,1610],256],64648:[[1605,1575],256],64649:[[1605,1605],256],64650:[[1606,1585],256],64651:[[1606,1586],256],64652:[[1606,1605],256],64653:[[1606,1606],256],64654:[[1606,1609],256],64655:[[1606,1610],256],64656:[[1609,1648],256],64657:[[1610,1585],256],64658:[[1610,1586],256],64659:[[1610,1605],256],64660:[[1610,1606],256],64661:[[1610,1609],256],64662:[[1610,1610],256],64663:[[1574,1580],256],64664:[[1574,1581],256],64665:[[1574,1582],256],64666:[[1574,1605],256],64667:[[1574,1607],256],64668:[[1576,1580],256],64669:[[1576,1581],256],64670:[[1576,1582],256],64671:[[1576,1605],256],64672:[[1576,1607],256],64673:[[1578,1580],256],64674:[[1578,1581],256],64675:[[1578,1582],256],64676:[[1578,1605],256],64677:[[1578,1607],256],64678:[[1579,1605],256],64679:[[1580,1581],256],64680:[[1580,1605],256],64681:[[1581,1580],256],64682:[[1581,1605],256],64683:[[1582,1580],256],64684:[[1582,1605],256],64685:[[1587,1580],256],64686:[[1587,1581],256],64687:[[1587,1582],256],64688:[[1587,1605],256],64689:[[1589,1581],256],64690:[[1589,1582],256],64691:[[1589,1605],256],64692:[[1590,1580],256],64693:[[1590,1581],256],64694:[[1590,1582],256],64695:[[1590,1605],256],64696:[[1591,1581],256],64697:[[1592,1605],256],64698:[[1593,1580],256],64699:[[1593,1605],256],64700:[[1594,1580],256],64701:[[1594,1605],256],64702:[[1601,1580],256],64703:[[1601,1581],256],64704:[[1601,1582],256],64705:[[1601,1605],256],64706:[[1602,1581],256],64707:[[1602,1605],256],64708:[[1603,1580],256],64709:[[1603,1581],256],64710:[[1603,1582],256],64711:[[1603,1604],256],64712:[[1603,1605],256],64713:[[1604,1580],256],64714:[[1604,1581],256],64715:[[1604,1582],256],64716:[[1604,1605],256],64717:[[1604,1607],256],64718:[[1605,1580],256],64719:[[1605,1581],256],64720:[[1605,1582],256],64721:[[1605,1605],256],64722:[[1606,1580],256],64723:[[1606,1581],256],64724:[[1606,1582],256],64725:[[1606,1605],256],64726:[[1606,1607],256],64727:[[1607,1580],256],64728:[[1607,1605],256],64729:[[1607,1648],256],64730:[[1610,1580],256],64731:[[1610,1581],256],64732:[[1610,1582],256],64733:[[1610,1605],256],64734:[[1610,1607],256],64735:[[1574,1605],256],64736:[[1574,1607],256],64737:[[1576,1605],256],64738:[[1576,1607],256],64739:[[1578,1605],256],64740:[[1578,1607],256],64741:[[1579,1605],256],64742:[[1579,1607],256],64743:[[1587,1605],256],64744:[[1587,1607],256],64745:[[1588,1605],256],64746:[[1588,1607],256],64747:[[1603,1604],256],64748:[[1603,1605],256],64749:[[1604,1605],256],64750:[[1606,1605],256],64751:[[1606,1607],256],64752:[[1610,1605],256],64753:[[1610,1607],256],64754:[[1600,1614,1617],256],64755:[[1600,1615,1617],256],64756:[[1600,1616,1617],256],64757:[[1591,1609],256],64758:[[1591,1610],256],64759:[[1593,1609],256],64760:[[1593,1610],256],64761:[[1594,1609],256],64762:[[1594,1610],256],64763:[[1587,1609],256],64764:[[1587,1610],256],64765:[[1588,1609],256],64766:[[1588,1610],256],64767:[[1581,1609],256]},64768:{64768:[[1581,1610],256],64769:[[1580,1609],256],64770:[[1580,1610],256],64771:[[1582,1609],256],64772:[[1582,1610],256],64773:[[1589,1609],256],64774:[[1589,1610],256],64775:[[1590,1609],256],64776:[[1590,1610],256],64777:[[1588,1580],256],64778:[[1588,1581],256],64779:[[1588,1582],256],64780:[[1588,1605],256],64781:[[1588,1585],256],64782:[[1587,1585],256],64783:[[1589,1585],256],64784:[[1590,1585],256],64785:[[1591,1609],256],64786:[[1591,1610],256],64787:[[1593,1609],256],64788:[[1593,1610],256],64789:[[1594,1609],256],64790:[[1594,1610],256],64791:[[1587,1609],256],64792:[[1587,1610],256],64793:[[1588,1609],256],64794:[[1588,1610],256],64795:[[1581,1609],256],64796:[[1581,1610],256],64797:[[1580,1609],256],64798:[[1580,1610],256],64799:[[1582,1609],256],64800:[[1582,1610],256],64801:[[1589,1609],256],64802:[[1589,1610],256],64803:[[1590,1609],256],64804:[[1590,1610],256],64805:[[1588,1580],256],64806:[[1588,1581],256],64807:[[1588,1582],256],64808:[[1588,1605],256],64809:[[1588,1585],256],64810:[[1587,1585],256],64811:[[1589,1585],256],64812:[[1590,1585],256],64813:[[1588,1580],256],64814:[[1588,1581],256],64815:[[1588,1582],256],64816:[[1588,1605],256],64817:[[1587,1607],256],64818:[[1588,1607],256],64819:[[1591,1605],256],64820:[[1587,1580],256],64821:[[1587,1581],256],64822:[[1587,1582],256],64823:[[1588,1580],256],64824:[[1588,1581],256],64825:[[1588,1582],256],64826:[[1591,1605],256],64827:[[1592,1605],256],64828:[[1575,1611],256],64829:[[1575,1611],256],64848:[[1578,1580,1605],256],64849:[[1578,1581,1580],256],64850:[[1578,1581,1580],256],64851:[[1578,1581,1605],256],64852:[[1578,1582,1605],256],64853:[[1578,1605,1580],256],64854:[[1578,1605,1581],256],64855:[[1578,1605,1582],256],64856:[[1580,1605,1581],256],64857:[[1580,1605,1581],256],64858:[[1581,1605,1610],256],64859:[[1581,1605,1609],256],64860:[[1587,1581,1580],256],64861:[[1587,1580,1581],256],64862:[[1587,1580,1609],256],64863:[[1587,1605,1581],256],64864:[[1587,1605,1581],256],64865:[[1587,1605,1580],256],64866:[[1587,1605,1605],256],64867:[[1587,1605,1605],256],64868:[[1589,1581,1581],256],64869:[[1589,1581,1581],256],64870:[[1589,1605,1605],256],64871:[[1588,1581,1605],256],64872:[[1588,1581,1605],256],64873:[[1588,1580,1610],256],64874:[[1588,1605,1582],256],64875:[[1588,1605,1582],256],64876:[[1588,1605,1605],256],64877:[[1588,1605,1605],256],64878:[[1590,1581,1609],256],64879:[[1590,1582,1605],256],64880:[[1590,1582,1605],256],64881:[[1591,1605,1581],256],64882:[[1591,1605,1581],256],64883:[[1591,1605,1605],256],64884:[[1591,1605,1610],256],64885:[[1593,1580,1605],256],64886:[[1593,1605,1605],256],64887:[[1593,1605,1605],256],64888:[[1593,1605,1609],256],64889:[[1594,1605,1605],256],64890:[[1594,1605,1610],256],64891:[[1594,1605,1609],256],64892:[[1601,1582,1605],256],64893:[[1601,1582,1605],256],64894:[[1602,1605,1581],256],64895:[[1602,1605,1605],256],64896:[[1604,1581,1605],256],64897:[[1604,1581,1610],256],64898:[[1604,1581,1609],256],64899:[[1604,1580,1580],256],64900:[[1604,1580,1580],256],64901:[[1604,1582,1605],256],64902:[[1604,1582,1605],256],64903:[[1604,1605,1581],256],64904:[[1604,1605,1581],256],64905:[[1605,1581,1580],256],64906:[[1605,1581,1605],256],64907:[[1605,1581,1610],256],64908:[[1605,1580,1581],256],64909:[[1605,1580,1605],256],64910:[[1605,1582,1580],256],64911:[[1605,1582,1605],256],64914:[[1605,1580,1582],256],64915:[[1607,1605,1580],256],64916:[[1607,1605,1605],256],64917:[[1606,1581,1605],256],64918:[[1606,1581,1609],256],64919:[[1606,1580,1605],256],64920:[[1606,1580,1605],256],64921:[[1606,1580,1609],256],64922:[[1606,1605,1610],256],64923:[[1606,1605,1609],256],64924:[[1610,1605,1605],256],64925:[[1610,1605,1605],256],64926:[[1576,1582,1610],256],64927:[[1578,1580,1610],256],64928:[[1578,1580,1609],256],64929:[[1578,1582,1610],256],64930:[[1578,1582,1609],256],64931:[[1578,1605,1610],256],64932:[[1578,1605,1609],256],64933:[[1580,1605,1610],256],64934:[[1580,1581,1609],256],64935:[[1580,1605,1609],256],64936:[[1587,1582,1609],256],64937:[[1589,1581,1610],256],64938:[[1588,1581,1610],256],64939:[[1590,1581,1610],256],64940:[[1604,1580,1610],256],64941:[[1604,1605,1610],256],64942:[[1610,1581,1610],256],64943:[[1610,1580,1610],256],64944:[[1610,1605,1610],256],64945:[[1605,1605,1610],256],64946:[[1602,1605,1610],256],64947:[[1606,1581,1610],256],64948:[[1602,1605,1581],256],64949:[[1604,1581,1605],256],64950:[[1593,1605,1610],256],64951:[[1603,1605,1610],256],64952:[[1606,1580,1581],256],64953:[[1605,1582,1610],256],64954:[[1604,1580,1605],256],64955:[[1603,1605,1605],256],64956:[[1604,1580,1605],256],64957:[[1606,1580,1581],256],64958:[[1580,1581,1610],256],64959:[[1581,1580,1610],256],64960:[[1605,1580,1610],256],64961:[[1601,1605,1610],256],64962:[[1576,1581,1610],256],64963:[[1603,1605,1605],256],64964:[[1593,1580,1605],256],64965:[[1589,1605,1605],256],64966:[[1587,1582,1610],256],64967:[[1606,1580,1610],256],65008:[[1589,1604,1746],256],65009:[[1602,1604,1746],256],65010:[[1575,1604,1604,1607],256],65011:[[1575,1603,1576,1585],256],65012:[[1605,1581,1605,1583],256],65013:[[1589,1604,1593,1605],256],65014:[[1585,1587,1608,1604],256],65015:[[1593,1604,1610,1607],256],65016:[[1608,1587,1604,1605],256],65017:[[1589,1604,1609],256],65018:[[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605],256],65019:[[1580,1604,32,1580,1604,1575,1604,1607],256],65020:[[1585,1740,1575,1604],256]},65024:{65040:[[44],256],65041:[[12289],256],65042:[[12290],256],65043:[[58],256],65044:[[59],256],65045:[[33],256],65046:[[63],256],65047:[[12310],256],65048:[[12311],256],65049:[[8230],256],65056:[,230],65057:[,230],65058:[,230],65059:[,230],65060:[,230],65061:[,230],65062:[,230],65063:[,220],65064:[,220],65065:[,220],65066:[,220],65067:[,220],65068:[,220],65069:[,220],65072:[[8229],256],65073:[[8212],256],65074:[[8211],256],65075:[[95],256],65076:[[95],256],65077:[[40],256],65078:[[41],256],65079:[[123],256],65080:[[125],256],65081:[[12308],256],65082:[[12309],256],65083:[[12304],256],65084:[[12305],256],65085:[[12298],256],65086:[[12299],256],65087:[[12296],256],65088:[[12297],256],65089:[[12300],256],65090:[[12301],256],65091:[[12302],256],65092:[[12303],256],65095:[[91],256],65096:[[93],256],65097:[[8254],256],65098:[[8254],256],65099:[[8254],256],65100:[[8254],256],65101:[[95],256],65102:[[95],256],65103:[[95],256],65104:[[44],256],65105:[[12289],256],65106:[[46],256],65108:[[59],256],65109:[[58],256],65110:[[63],256],65111:[[33],256],65112:[[8212],256],65113:[[40],256],65114:[[41],256],65115:[[123],256],65116:[[125],256],65117:[[12308],256],65118:[[12309],256],65119:[[35],256],65120:[[38],256],65121:[[42],256],65122:[[43],256],65123:[[45],256],65124:[[60],256],65125:[[62],256],65126:[[61],256],65128:[[92],256],65129:[[36],256],65130:[[37],256],65131:[[64],256],65136:[[32,1611],256],65137:[[1600,1611],256],65138:[[32,1612],256],65140:[[32,1613],256],65142:[[32,1614],256],65143:[[1600,1614],256],65144:[[32,1615],256],65145:[[1600,1615],256],65146:[[32,1616],256],65147:[[1600,1616],256],65148:[[32,1617],256],65149:[[1600,1617],256],65150:[[32,1618],256],65151:[[1600,1618],256],65152:[[1569],256],65153:[[1570],256],65154:[[1570],256],65155:[[1571],256],65156:[[1571],256],65157:[[1572],256],65158:[[1572],256],65159:[[1573],256],65160:[[1573],256],65161:[[1574],256],65162:[[1574],256],65163:[[1574],256],65164:[[1574],256],65165:[[1575],256],65166:[[1575],256],65167:[[1576],256],65168:[[1576],256],65169:[[1576],256],65170:[[1576],256],65171:[[1577],256],65172:[[1577],256],65173:[[1578],256],65174:[[1578],256],65175:[[1578],256],65176:[[1578],256],65177:[[1579],256],65178:[[1579],256],65179:[[1579],256],65180:[[1579],256],65181:[[1580],256],65182:[[1580],256],65183:[[1580],256],65184:[[1580],256],65185:[[1581],256],65186:[[1581],256],65187:[[1581],256],65188:[[1581],256],65189:[[1582],256],65190:[[1582],256],65191:[[1582],256],65192:[[1582],256],65193:[[1583],256],65194:[[1583],256],65195:[[1584],256],65196:[[1584],256],65197:[[1585],256],65198:[[1585],256],65199:[[1586],256],65200:[[1586],256],65201:[[1587],256],65202:[[1587],256],65203:[[1587],256],65204:[[1587],256],65205:[[1588],256],65206:[[1588],256],65207:[[1588],256],65208:[[1588],256],65209:[[1589],256],65210:[[1589],256],65211:[[1589],256],65212:[[1589],256],65213:[[1590],256],65214:[[1590],256],65215:[[1590],256],65216:[[1590],256],65217:[[1591],256],65218:[[1591],256],65219:[[1591],256],65220:[[1591],256],65221:[[1592],256],65222:[[1592],256],65223:[[1592],256],65224:[[1592],256],65225:[[1593],256],65226:[[1593],256],65227:[[1593],256],65228:[[1593],256],65229:[[1594],256],65230:[[1594],256],65231:[[1594],256],65232:[[1594],256],65233:[[1601],256],65234:[[1601],256],65235:[[1601],256],65236:[[1601],256],65237:[[1602],256],65238:[[1602],256],65239:[[1602],256],65240:[[1602],256],65241:[[1603],256],65242:[[1603],256],65243:[[1603],256],65244:[[1603],256],65245:[[1604],256],65246:[[1604],256],65247:[[1604],256],65248:[[1604],256],65249:[[1605],256],65250:[[1605],256],65251:[[1605],256],65252:[[1605],256],65253:[[1606],256],65254:[[1606],256],65255:[[1606],256],65256:[[1606],256],65257:[[1607],256],65258:[[1607],256],65259:[[1607],256],65260:[[1607],256],65261:[[1608],256],65262:[[1608],256],65263:[[1609],256],65264:[[1609],256],65265:[[1610],256],65266:[[1610],256],65267:[[1610],256],65268:[[1610],256],65269:[[1604,1570],256],65270:[[1604,1570],256],65271:[[1604,1571],256],65272:[[1604,1571],256],65273:[[1604,1573],256],65274:[[1604,1573],256],65275:[[1604,1575],256],65276:[[1604,1575],256]},65280:{65281:[[33],256],65282:[[34],256],65283:[[35],256],65284:[[36],256],65285:[[37],256],65286:[[38],256],65287:[[39],256],65288:[[40],256],65289:[[41],256],65290:[[42],256],65291:[[43],256],65292:[[44],256],65293:[[45],256],65294:[[46],256],65295:[[47],256],65296:[[48],256],65297:[[49],256],65298:[[50],256],65299:[[51],256],65300:[[52],256],65301:[[53],256],65302:[[54],256],65303:[[55],256],65304:[[56],256],65305:[[57],256],65306:[[58],256],65307:[[59],256],65308:[[60],256],65309:[[61],256],65310:[[62],256],65311:[[63],256],65312:[[64],256],65313:[[65],256],65314:[[66],256],65315:[[67],256],65316:[[68],256],65317:[[69],256],65318:[[70],256],65319:[[71],256],65320:[[72],256],65321:[[73],256],65322:[[74],256],65323:[[75],256],65324:[[76],256],65325:[[77],256],65326:[[78],256],65327:[[79],256],65328:[[80],256],65329:[[81],256],65330:[[82],256],65331:[[83],256],65332:[[84],256],65333:[[85],256],65334:[[86],256],65335:[[87],256],65336:[[88],256],65337:[[89],256],65338:[[90],256],65339:[[91],256],65340:[[92],256],65341:[[93],256],65342:[[94],256],65343:[[95],256],65344:[[96],256],65345:[[97],256],65346:[[98],256],65347:[[99],256],65348:[[100],256],65349:[[101],256],65350:[[102],256],65351:[[103],256],65352:[[104],256],65353:[[105],256],65354:[[106],256],65355:[[107],256],65356:[[108],256],65357:[[109],256],65358:[[110],256],65359:[[111],256],65360:[[112],256],65361:[[113],256],65362:[[114],256],65363:[[115],256],65364:[[116],256],65365:[[117],256],65366:[[118],256],65367:[[119],256],65368:[[120],256],65369:[[121],256],65370:[[122],256],65371:[[123],256],65372:[[124],256],65373:[[125],256],65374:[[126],256],65375:[[10629],256],65376:[[10630],256],65377:[[12290],256],65378:[[12300],256],65379:[[12301],256],65380:[[12289],256],65381:[[12539],256],65382:[[12530],256],65383:[[12449],256],65384:[[12451],256],65385:[[12453],256],65386:[[12455],256],65387:[[12457],256],65388:[[12515],256],65389:[[12517],256],65390:[[12519],256],65391:[[12483],256],65392:[[12540],256],65393:[[12450],256],65394:[[12452],256],65395:[[12454],256],65396:[[12456],256],65397:[[12458],256],65398:[[12459],256],65399:[[12461],256],65400:[[12463],256],65401:[[12465],256],65402:[[12467],256],65403:[[12469],256],65404:[[12471],256],65405:[[12473],256],65406:[[12475],256],65407:[[12477],256],65408:[[12479],256],65409:[[12481],256],65410:[[12484],256],65411:[[12486],256],65412:[[12488],256],65413:[[12490],256],65414:[[12491],256],65415:[[12492],256],65416:[[12493],256],65417:[[12494],256],65418:[[12495],256],65419:[[12498],256],65420:[[12501],256],65421:[[12504],256],65422:[[12507],256],65423:[[12510],256],65424:[[12511],256],65425:[[12512],256],65426:[[12513],256],65427:[[12514],256],65428:[[12516],256],65429:[[12518],256],65430:[[12520],256],65431:[[12521],256],65432:[[12522],256],65433:[[12523],256],65434:[[12524],256],65435:[[12525],256],65436:[[12527],256],65437:[[12531],256],65438:[[12441],256],65439:[[12442],256],65440:[[12644],256],65441:[[12593],256],65442:[[12594],256],65443:[[12595],256],65444:[[12596],256],65445:[[12597],256],65446:[[12598],256],65447:[[12599],256],65448:[[12600],256],65449:[[12601],256],65450:[[12602],256],65451:[[12603],256],65452:[[12604],256],65453:[[12605],256],65454:[[12606],256],65455:[[12607],256],65456:[[12608],256],65457:[[12609],256],65458:[[12610],256],65459:[[12611],256],65460:[[12612],256],65461:[[12613],256],65462:[[12614],256],65463:[[12615],256],65464:[[12616],256],65465:[[12617],256],65466:[[12618],256],65467:[[12619],256],65468:[[12620],256],65469:[[12621],256],65470:[[12622],256],65474:[[12623],256],65475:[[12624],256],65476:[[12625],256],65477:[[12626],256],65478:[[12627],256],65479:[[12628],256],65482:[[12629],256],65483:[[12630],256],65484:[[12631],256],65485:[[12632],256],65486:[[12633],256],65487:[[12634],256],65490:[[12635],256],65491:[[12636],256],65492:[[12637],256],65493:[[12638],256],65494:[[12639],256],65495:[[12640],256],65498:[[12641],256],65499:[[12642],256],65500:[[12643],256],65504:[[162],256],65505:[[163],256],65506:[[172],256],65507:[[175],256],65508:[[166],256],65509:[[165],256],65510:[[8361],256],65512:[[9474],256],65513:[[8592],256],65514:[[8593],256],65515:[[8594],256],65516:[[8595],256],65517:[[9632],256],65518:[[9675],256]}};var S={nfc:function(e){return E("NFC",e)},nfd:function(e){return E("NFD",e)},nfkc:function(e){return E("NFKC",e)},nfkd:function(e){return E("NFKD",e)}};"object"===r(e)?e.exports=S:void 0===(n=function(){return S}.call(t,l,t,e))||(e.exports=n),S.shimApplied=!1,String.prototype.normalize||(String.prototype.normalize=function(e){var t=""+this;if("NFC"===(e=void 0===e?"NFC":e))return S.nfc(t);if("NFD"===e)return S.nfd(t);if("NFKC"===e)return S.nfkc(t);if("NFKD"===e)return S.nfkd(t);throw new RangeError("Invalid normalization form: "+e)},S.shimApplied=!0)}()}).call(this,l(26)(e))},function(e,t,l){"use strict";(function(t,n){var r=l(1).Buffer,o=t.crypto||t.msCrypto;o&&o.getRandomValues?e.exports=function(e,l){if(e>65536)throw new Error("requested too many random bytes");var u=new t.Uint8Array(e);e>0&&o.getRandomValues(u);var i=r.from(u.buffer);if("function"===typeof l)return n.nextTick(function(){l(null,i)});return i}:e.exports=function(){throw new Error("Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11")}}).call(this,l(3),l(7))},function(e,t,l){var n=l(40);e.exports=function(e){return(new n).update(e).digest()}},function(e,t,l){(function(t,n){var r,o=l(29),u=l(28),i=l(27),s=l(1).Buffer,a=t.crypto&&t.crypto.subtle,c={sha:"SHA-1","sha-1":"SHA-1",sha1:"SHA-1",sha256:"SHA-256","sha-256":"SHA-256",sha384:"SHA-384","sha-384":"SHA-384","sha-512":"SHA-512",sha512:"SHA-512"},p=[];function d(e,t,l,n,r){return a.importKey("raw",e,{name:"PBKDF2"},!1,["deriveBits"]).then(function(e){return a.deriveBits({name:"PBKDF2",salt:t,iterations:l,hash:{name:r}},e,n<<3)}).then(function(e){return s.from(e)})}e.exports=function(e,l,f,g,h,b){"function"===typeof h&&(b=h,h=void 0);var y=c[(h=h||"sha1").toLowerCase()];if(!y||"function"!==typeof t.Promise)return n.nextTick(function(){var t;try{t=i(e,l,f,g,h)}catch(e){return b(e)}b(null,t)});if(o(e,l,f,g),"function"!==typeof b)throw new Error("No callback provided to pbkdf2");s.isBuffer(e)||(e=s.from(e,u)),s.isBuffer(l)||(l=s.from(l,u)),function(e,t){e.then(function(e){n.nextTick(function(){t(null,e)})},function(e){n.nextTick(function(){t(e)})})}(function(e){if(t.process&&!t.process.browser)return Promise.resolve(!1);if(!a||!a.importKey||!a.deriveBits)return Promise.resolve(!1);if(void 0!==p[e])return p[e];var l=d(r=r||s.alloc(8),r,10,128,e).then(function(){return!0}).catch(function(){return!1});return p[e]=l,l}(y).then(function(t){return t?d(e,l,f,g,y):i(e,l,f,g,h)}),b)}}).call(this,l(3),l(7))},function(e,t,l){t.pbkdf2=l(66),t.pbkdf2Sync=l(27)},function(e,t,l){var n=l(1).Buffer,r=l(38).Transform,o=l(21).StringDecoder;function u(e){r.call(this),this.hashMode="string"===typeof e,this.hashMode?this[e]=this._finalOrDigest:this.final=this._finalOrDigest,this._final&&(this.__final=this._final,this._final=null),this._decoder=null,this._encoding=null}l(0)(u,r),u.prototype.update=function(e,t,l){"string"===typeof e&&(e=n.from(e,t));var r=this._update(e);return this.hashMode?this:(l&&(r=this._toString(r,l)),r)},u.prototype.setAutoPadding=function(){},u.prototype.getAuthTag=function(){throw new Error("trying to get auth tag in unsupported state")},u.prototype.setAuthTag=function(){throw new Error("trying to set auth tag in unsupported state")},u.prototype.setAAD=function(){throw new Error("trying to set aad in unsupported state")},u.prototype._transform=function(e,t,l){var n;try{this.hashMode?this._update(e):this.push(this._update(e))}catch(e){n=e}finally{l(n)}},u.prototype._flush=function(e){var t;try{this.push(this.__final())}catch(e){t=e}e(t)},u.prototype._finalOrDigest=function(e){var t=this.__final()||n.alloc(0);return e&&(t=this._toString(t,e,!0)),t},u.prototype._toString=function(e,t,l){if(this._decoder||(this._decoder=new o(t),this._encoding=t),this._encoding!==t)throw new Error("can't switch encodings");var n=this._decoder.write(e);return l&&(n+=this._decoder.end()),n},e.exports=u},function(e,t,l){var n=l(0),r=l(30),o=l(10),u=l(1).Buffer,i=new Array(160);function s(){this.init(),this._w=i,o.call(this,128,112)}n(s,r),s.prototype.init=function(){return this._ah=3418070365,this._bh=1654270250,this._ch=2438529370,this._dh=355462360,this._eh=1731405415,this._fh=2394180231,this._gh=3675008525,this._hh=1203062813,this._al=3238371032,this._bl=914150663,this._cl=812702999,this._dl=4144912697,this._el=4290775857,this._fl=1750603025,this._gl=1694076839,this._hl=3204075428,this},s.prototype._hash=function(){var e=u.allocUnsafe(48);function t(t,l,n){e.writeInt32BE(t,n),e.writeInt32BE(l,n+4)}return t(this._ah,this._al,0),t(this._bh,this._bl,8),t(this._ch,this._cl,16),t(this._dh,this._dl,24),t(this._eh,this._el,32),t(this._fh,this._fl,40),e},e.exports=s},function(e,t,l){var n=l(0),r=l(31),o=l(10),u=l(1).Buffer,i=new Array(64);function s(){this.init(),this._w=i,o.call(this,64,56)}n(s,r),s.prototype.init=function(){return this._a=3238371032,this._b=914150663,this._c=812702999,this._d=4144912697,this._e=4290775857,this._f=1750603025,this._g=1694076839,this._h=3204075428,this},s.prototype._hash=function(){var e=u.allocUnsafe(28);return e.writeInt32BE(this._a,0),e.writeInt32BE(this._b,4),e.writeInt32BE(this._c,8),e.writeInt32BE(this._d,12),e.writeInt32BE(this._e,16),e.writeInt32BE(this._f,20),e.writeInt32BE(this._g,24),e},e.exports=s},function(e,t,l){var n=l(0),r=l(10),o=l(1).Buffer,u=[1518500249,1859775393,-1894007588,-899497514],i=new Array(80);function s(){this.init(),this._w=i,r.call(this,64,56)}function a(e){return e<<5|e>>>27}function c(e){return e<<30|e>>>2}function p(e,t,l,n){return 0===e?t&l|~t&n:2===e?t&l|t&n|l&n:t^l^n}n(s,r),s.prototype.init=function(){return this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this},s.prototype._update=function(e){for(var t,l=this._w,n=0|this._a,r=0|this._b,o=0|this._c,i=0|this._d,s=0|this._e,d=0;d<16;++d)l[d]=e.readInt32BE(4*d);for(;d<80;++d)l[d]=(t=l[d-3]^l[d-8]^l[d-14]^l[d-16])<<1|t>>>31;for(var f=0;f<80;++f){var g=~~(f/20),h=a(n)+p(g,r,o,i)+s+l[f]+u[g]|0;s=i,i=o,o=c(r),r=n,n=h}this._a=n+this._a|0,this._b=r+this._b|0,this._c=o+this._c|0,this._d=i+this._d|0,this._e=s+this._e|0},s.prototype._hash=function(){var e=o.allocUnsafe(20);return e.writeInt32BE(0|this._a,0),e.writeInt32BE(0|this._b,4),e.writeInt32BE(0|this._c,8),e.writeInt32BE(0|this._d,12),e.writeInt32BE(0|this._e,16),e},e.exports=s},function(e,t,l){var n=l(0),r=l(10),o=l(1).Buffer,u=[1518500249,1859775393,-1894007588,-899497514],i=new Array(80);function s(){this.init(),this._w=i,r.call(this,64,56)}function a(e){return e<<30|e>>>2}function c(e,t,l,n){return 0===e?t&l|~t&n:2===e?t&l|t&n|l&n:t^l^n}n(s,r),s.prototype.init=function(){return this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this},s.prototype._update=function(e){for(var t,l=this._w,n=0|this._a,r=0|this._b,o=0|this._c,i=0|this._d,s=0|this._e,p=0;p<16;++p)l[p]=e.readInt32BE(4*p);for(;p<80;++p)l[p]=l[p-3]^l[p-8]^l[p-14]^l[p-16];for(var d=0;d<80;++d){var f=~~(d/20),g=0|((t=n)<<5|t>>>27)+c(f,r,o,i)+s+l[d]+u[f];s=i,i=o,o=a(r),r=n,n=g}this._a=n+this._a|0,this._b=r+this._b|0,this._c=o+this._c|0,this._d=i+this._d|0,this._e=s+this._e|0},s.prototype._hash=function(){var e=o.allocUnsafe(20);return e.writeInt32BE(0|this._a,0),e.writeInt32BE(0|this._b,4),e.writeInt32BE(0|this._c,8),e.writeInt32BE(0|this._d,12),e.writeInt32BE(0|this._e,16),e},e.exports=s},function(e,t,l){e.exports=l(23).PassThrough},function(e,t,l){e.exports=l(23).Transform},function(e,t,l){e.exports=l(8)},function(e,t,l){e.exports=l(22)},function(e,t,l){"use strict";e.exports=o;var n=l(34),r=l(13);function o(e){if(!(this instanceof o))return new o(e);n.call(this,e)}r.inherits=l(0),r.inherits(o,n),o.prototype._transform=function(e,t,l){l(null,e)}},function(e,t,l){(function(t){function l(e){try{if(!t.localStorage)return!1}catch(e){return!1}var l=t.localStorage[e];return null!=l&&"true"===String(l).toLowerCase()}e.exports=function(e,t){if(l("noDeprecation"))return e;var n=!1;return function(){if(!n){if(l("throwDeprecation"))throw new Error(t);l("traceDeprecation")?console.trace(t):console.warn(t),n=!0}return e.apply(this,arguments)}}}).call(this,l(3))},function(e,t,l){(function(e,t){!function(e,l){"use strict";if(!e.setImmediate){var n,r,o,u,i,s=1,a={},c=!1,p=e.document,d=Object.getPrototypeOf&&Object.getPrototypeOf(e);d=d&&d.setTimeout?d:e,"[object process]"==={}.toString.call(e.process)?n=function(e){t.nextTick(function(){g(e)})}:!function(){if(e.postMessage&&!e.importScripts){var t=!0,l=e.onmessage;return e.onmessage=function(){t=!1},e.postMessage("","*"),e.onmessage=l,t}}()?e.MessageChannel?((o=new MessageChannel).port1.onmessage=function(e){g(e.data)},n=function(e){o.port2.postMessage(e)}):p&&"onreadystatechange"in p.createElement("script")?(r=p.documentElement,n=function(e){var t=p.createElement("script");t.onreadystatechange=function(){g(e),t.onreadystatechange=null,r.removeChild(t),t=null},r.appendChild(t)}):n=function(e){setTimeout(g,0,e)}:(u="setImmediate$"+Math.random()+"$",i=function(t){t.source===e&&"string"===typeof t.data&&0===t.data.indexOf(u)&&g(+t.data.slice(u.length))},e.addEventListener?e.addEventListener("message",i,!1):e.attachEvent("onmessage",i),n=function(t){e.postMessage(u+t,"*")}),d.setImmediate=function(e){"function"!==typeof e&&(e=new Function(""+e));for(var t=new Array(arguments.length-1),l=0;l<t.length;l++)t[l]=arguments[l+1];var r={callback:e,args:t};return a[s]=r,n(s),s++},d.clearImmediate=f}function f(e){delete a[e]}function g(e){if(c)setTimeout(g,0,e);else{var t=a[e];if(t){c=!0;try{!function(e){var t=e.callback,n=e.args;switch(n.length){case 0:t();break;case 1:t(n[0]);break;case 2:t(n[0],n[1]);break;case 3:t(n[0],n[1],n[2]);break;default:t.apply(l,n)}}(t)}finally{f(e),c=!1}}}}}("undefined"===typeof self?"undefined"===typeof e?this:e:self)}).call(this,l(3),l(7))},function(e,t,l){(function(e){var n="undefined"!==typeof e&&e||"undefined"!==typeof self&&self||window,r=Function.prototype.apply;function o(e,t){this._id=e,this._clearFn=t}t.setTimeout=function(){return new o(r.call(setTimeout,n,arguments),clearTimeout)},t.setInterval=function(){return new o(r.call(setInterval,n,arguments),clearInterval)},t.clearTimeout=t.clearInterval=function(e){e&&e.close()},o.prototype.unref=o.prototype.ref=function(){},o.prototype.close=function(){this._clearFn.call(n,this._id)},t.enroll=function(e,t){clearTimeout(e._idleTimeoutId),e._idleTimeout=t},t.unenroll=function(e){clearTimeout(e._idleTimeoutId),e._idleTimeout=-1},t._unrefActive=t.active=function(e){clearTimeout(e._idleTimeoutId);var t=e._idleTimeout;t>=0&&(e._idleTimeoutId=setTimeout(function(){e._onTimeout&&e._onTimeout()},t))},l(79),t.setImmediate="undefined"!==typeof self&&self.setImmediate||"undefined"!==typeof e&&e.setImmediate||this&&this.setImmediate,t.clearImmediate="undefined"!==typeof self&&self.clearImmediate||"undefined"!==typeof e&&e.clearImmediate||this&&this.clearImmediate}).call(this,l(3))},function(e,t){},function(e,t,l){"use strict";var n=l(1).Buffer,r=l(81);e.exports=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.head=null,this.tail=null,this.length=0}return e.prototype.push=function(e){var t={data:e,next:null};this.length>0?this.tail.next=t:this.head=t,this.tail=t,++this.length},e.prototype.unshift=function(e){var t={data:e,next:this.head};0===this.length&&(this.tail=t),this.head=t,++this.length},e.prototype.shift=function(){if(0!==this.length){var e=this.head.data;return 1===this.length?this.head=this.tail=null:this.head=this.head.next,--this.length,e}},e.prototype.clear=function(){this.head=this.tail=null,this.length=0},e.prototype.join=function(e){if(0===this.length)return"";for(var t=this.head,l=""+t.data;t=t.next;)l+=e+t.data;return l},e.prototype.concat=function(e){if(0===this.length)return n.alloc(0);if(1===this.length)return this.head.data;for(var t,l,r,o=n.allocUnsafe(e>>>0),u=this.head,i=0;u;)t=u.data,l=o,r=i,t.copy(l,r),i+=u.data.length,u=u.next;return o},e}(),r&&r.inspect&&r.inspect.custom&&(e.exports.prototype[r.inspect.custom]=function(){var e=r.inspect({length:this.length});return this.constructor.name+" "+e})},function(e,t){},function(e,t,l){"use strict";var n=l(0),r=l(40),o=l(33),u=l(32),i=l(68);function s(e){i.call(this,"digest"),this._hash=e}n(s,i),s.prototype._update=function(e){this._hash.update(e)},s.prototype._final=function(){return this._hash.digest()},e.exports=function(e){return"md5"===(e=e.toLowerCase())?new r:"rmd160"===e||"ripemd160"===e?new o:new s(u(e))}},function(e,t,l){(function(t){var n=l(84),r=l(67).pbkdf2Sync,o=l(64),u=l(63),i=l(62),s=l(61),a=l(60),c=l(59),p=l(58),d=i;function f(e,l){var n=new t(u.nfkd(e),"utf8"),o=new t(function(e){return"mnemonic"+(e||"")}(u.nfkd(l)),"utf8");return r(n,o,2048,64,"sha512")}function g(e,l){l=l||d;var n=u.nfkd(e).split(" ");if(n.length%3!==0)throw new Error("Invalid mnemonic");if(n.some(function(e){return-1===l.indexOf(e)}))throw new Error("Invalid mnemonic");var r=n.map(function(e){return m(l.indexOf(e).toString(2),"0",11)}).join(""),o=32*Math.floor(r.length/33),i=r.slice(0,o),s=r.slice(o),a=i.match(/(.{1,8})/g).map(function(e){return parseInt(e,2)}),c=new t(a),p=(i+b(c)).match(/(.{1,11})/g).map(function(e){return m(e,"0",11)}).join(""),f=32*Math.floor(p.length/33);if(p.slice(f)!==s)throw new Error("Invalid mnemonic checksum");return c.toString("hex")}function h(e,l){l=l||d;var n=new t(e,"hex"),r=(y([].slice.call(n))+b(n)).match(/(.{1,11})/g).map(function(e){var t=parseInt(e,2);return l[t]});return l===c?r.join("\u3000"):r.join(" ")}function b(e){var t=n("sha256").update(e).digest(),l=8*e.length/32;return y([].slice.call(t)).slice(0,l)}function y(e){return e.map(function(e){return m(e.toString(2),"0",8)}).join("")}function m(e,t,l){for(;e.length<l;)e=t+e;return e}e.exports={mnemonicToSeed:f,mnemonicToSeedHex:function(e,t){return f(e,t).toString("hex")},mnemonicToEntropy:g,entropyToMnemonic:h,generateMnemonic:function(e,t,l){return e=e||128,h((t=t||o)(e/8).toString("hex"),l)},validateMnemonic:function(e,t){try{g(e,t)}catch(e){return!1}return!0},wordlists:{EN:i,JA:c,english:i,french:s,italian:a,japanese:c,spanish:p}}}).call(this,l(6).Buffer)},function(e,t,l){var n=l(12),r=l(85),o=l(57),u=l(11).Account,i=l(18).pkToAddress;function s(e){var t=e.split(" "),l=r.mnemonicToSeedHex(e);return{words:t,privateKey:l,address:i(l)}}e.exports={accountFromBase64:function(e){return u.deserializeBinary(n.base64DecodeFromString(e))},privateKeyToAddress:i,generateRandomBip39:function(){return s(r.generateMnemonic(256))},accountFromMnemonicString:s,accountFromPrivateKey:function(e){return{privateKey:e,address:i(e)}},getAccountAtIndex:function(e,t){var l=o(e+t);return{priv:l,pub:i(l)}}}},function(e,t,l){var n=l(12),r=l(41).WitnessList,o=(l(11).Witness,l(18)),u=o.getBase58CheckAddress;o.SHA256;e.exports={witnessesFromWitnessListBase64:function(e){for(var t=r.deserializeBinary(n.base64DecodeFromString(e)).getWitnessesList(),l=[],o=0;o<t.length;o++){var i=t[o],s=i.toObject();s.address=u(Array.from(i.getAddress())),l.push(s)}return l}}},function(e,t,l){var n=l(14),r=n,o=Function("return this")();r.exportSymbol("proto.protocol.Endpoint",null,o),r.exportSymbol("proto.protocol.FindNeighbours",null,o),r.exportSymbol("proto.protocol.Neighbours",null,o),r.exportSymbol("proto.protocol.PingMessage",null,o),r.exportSymbol("proto.protocol.PongMessage",null,o),proto.protocol.Endpoint=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.Endpoint,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.Endpoint.displayName="proto.protocol.Endpoint"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.Endpoint.prototype.toObject=function(e){return proto.protocol.Endpoint.toObject(e,this)},proto.protocol.Endpoint.toObject=function(e,t){var l={address:t.getAddress_asB64(),port:n.Message.getFieldWithDefault(t,2,0),nodeid:t.getNodeid_asB64()};return e&&(l.$jspbMessageInstance=t),l}),proto.protocol.Endpoint.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.Endpoint;return proto.protocol.Endpoint.deserializeBinaryFromReader(l,t)},proto.protocol.Endpoint.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=t.readBytes();e.setAddress(l);break;case 2:l=t.readInt32();e.setPort(l);break;case 3:l=t.readBytes();e.setNodeid(l);break;default:t.skipField()}}return e},proto.protocol.Endpoint.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.Endpoint.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.Endpoint.serializeBinaryToWriter=function(e,t){var l=void 0;(l=e.getAddress_asU8()).length>0&&t.writeBytes(1,l),0!==(l=e.getPort())&&t.writeInt32(2,l),(l=e.getNodeid_asU8()).length>0&&t.writeBytes(3,l)},proto.protocol.Endpoint.prototype.getAddress=function(){return n.Message.getFieldWithDefault(this,1,"")},proto.protocol.Endpoint.prototype.getAddress_asB64=function(){return n.Message.bytesAsB64(this.getAddress())},proto.protocol.Endpoint.prototype.getAddress_asU8=function(){return n.Message.bytesAsU8(this.getAddress())},proto.protocol.Endpoint.prototype.setAddress=function(e){n.Message.setProto3BytesField(this,1,e)},proto.protocol.Endpoint.prototype.getPort=function(){return n.Message.getFieldWithDefault(this,2,0)},proto.protocol.Endpoint.prototype.setPort=function(e){n.Message.setProto3IntField(this,2,e)},proto.protocol.Endpoint.prototype.getNodeid=function(){return n.Message.getFieldWithDefault(this,3,"")},proto.protocol.Endpoint.prototype.getNodeid_asB64=function(){return n.Message.bytesAsB64(this.getNodeid())},proto.protocol.Endpoint.prototype.getNodeid_asU8=function(){return n.Message.bytesAsU8(this.getNodeid())},proto.protocol.Endpoint.prototype.setNodeid=function(e){n.Message.setProto3BytesField(this,3,e)},proto.protocol.PingMessage=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.PingMessage,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.PingMessage.displayName="proto.protocol.PingMessage"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.PingMessage.prototype.toObject=function(e){return proto.protocol.PingMessage.toObject(e,this)},proto.protocol.PingMessage.toObject=function(e,t){var l,r={from:(l=t.getFrom())&&proto.protocol.Endpoint.toObject(e,l),to:(l=t.getTo())&&proto.protocol.Endpoint.toObject(e,l),version:n.Message.getFieldWithDefault(t,3,0),timestamp:n.Message.getFieldWithDefault(t,4,0)};return e&&(r.$jspbMessageInstance=t),r}),proto.protocol.PingMessage.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.PingMessage;return proto.protocol.PingMessage.deserializeBinaryFromReader(l,t)},proto.protocol.PingMessage.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=new proto.protocol.Endpoint;t.readMessage(l,proto.protocol.Endpoint.deserializeBinaryFromReader),e.setFrom(l);break;case 2:l=new proto.protocol.Endpoint;t.readMessage(l,proto.protocol.Endpoint.deserializeBinaryFromReader),e.setTo(l);break;case 3:l=t.readInt32();e.setVersion(l);break;case 4:l=t.readInt64();e.setTimestamp(l);break;default:t.skipField()}}return e},proto.protocol.PingMessage.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.PingMessage.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.PingMessage.serializeBinaryToWriter=function(e,t){var l=void 0;null!=(l=e.getFrom())&&t.writeMessage(1,l,proto.protocol.Endpoint.serializeBinaryToWriter),null!=(l=e.getTo())&&t.writeMessage(2,l,proto.protocol.Endpoint.serializeBinaryToWriter),0!==(l=e.getVersion())&&t.writeInt32(3,l),0!==(l=e.getTimestamp())&&t.writeInt64(4,l)},proto.protocol.PingMessage.prototype.getFrom=function(){return n.Message.getWrapperField(this,proto.protocol.Endpoint,1)},proto.protocol.PingMessage.prototype.setFrom=function(e){n.Message.setWrapperField(this,1,e)},proto.protocol.PingMessage.prototype.clearFrom=function(){this.setFrom(void 0)},proto.protocol.PingMessage.prototype.hasFrom=function(){return null!=n.Message.getField(this,1)},proto.protocol.PingMessage.prototype.getTo=function(){return n.Message.getWrapperField(this,proto.protocol.Endpoint,2)},proto.protocol.PingMessage.prototype.setTo=function(e){n.Message.setWrapperField(this,2,e)},proto.protocol.PingMessage.prototype.clearTo=function(){this.setTo(void 0)},proto.protocol.PingMessage.prototype.hasTo=function(){return null!=n.Message.getField(this,2)},proto.protocol.PingMessage.prototype.getVersion=function(){return n.Message.getFieldWithDefault(this,3,0)},proto.protocol.PingMessage.prototype.setVersion=function(e){n.Message.setProto3IntField(this,3,e)},proto.protocol.PingMessage.prototype.getTimestamp=function(){return n.Message.getFieldWithDefault(this,4,0)},proto.protocol.PingMessage.prototype.setTimestamp=function(e){n.Message.setProto3IntField(this,4,e)},proto.protocol.PongMessage=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.PongMessage,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.PongMessage.displayName="proto.protocol.PongMessage"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.PongMessage.prototype.toObject=function(e){return proto.protocol.PongMessage.toObject(e,this)},proto.protocol.PongMessage.toObject=function(e,t){var l,r={from:(l=t.getFrom())&&proto.protocol.Endpoint.toObject(e,l),echo:n.Message.getFieldWithDefault(t,2,0),timestamp:n.Message.getFieldWithDefault(t,3,0)};return e&&(r.$jspbMessageInstance=t),r}),proto.protocol.PongMessage.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.PongMessage;return proto.protocol.PongMessage.deserializeBinaryFromReader(l,t)},proto.protocol.PongMessage.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=new proto.protocol.Endpoint;t.readMessage(l,proto.protocol.Endpoint.deserializeBinaryFromReader),e.setFrom(l);break;case 2:l=t.readInt32();e.setEcho(l);break;case 3:l=t.readInt64();e.setTimestamp(l);break;default:t.skipField()}}return e},proto.protocol.PongMessage.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.PongMessage.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.PongMessage.serializeBinaryToWriter=function(e,t){var l=void 0;null!=(l=e.getFrom())&&t.writeMessage(1,l,proto.protocol.Endpoint.serializeBinaryToWriter),0!==(l=e.getEcho())&&t.writeInt32(2,l),0!==(l=e.getTimestamp())&&t.writeInt64(3,l)},proto.protocol.PongMessage.prototype.getFrom=function(){return n.Message.getWrapperField(this,proto.protocol.Endpoint,1)},proto.protocol.PongMessage.prototype.setFrom=function(e){n.Message.setWrapperField(this,1,e)},proto.protocol.PongMessage.prototype.clearFrom=function(){this.setFrom(void 0)},proto.protocol.PongMessage.prototype.hasFrom=function(){return null!=n.Message.getField(this,1)},proto.protocol.PongMessage.prototype.getEcho=function(){return n.Message.getFieldWithDefault(this,2,0)},proto.protocol.PongMessage.prototype.setEcho=function(e){n.Message.setProto3IntField(this,2,e)},proto.protocol.PongMessage.prototype.getTimestamp=function(){return n.Message.getFieldWithDefault(this,3,0)},proto.protocol.PongMessage.prototype.setTimestamp=function(e){n.Message.setProto3IntField(this,3,e)},proto.protocol.FindNeighbours=function(e){n.Message.initialize(this,e,0,-1,null,null)},r.inherits(proto.protocol.FindNeighbours,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.FindNeighbours.displayName="proto.protocol.FindNeighbours"),n.Message.GENERATE_TO_OBJECT&&(proto.protocol.FindNeighbours.prototype.toObject=function(e){return proto.protocol.FindNeighbours.toObject(e,this)},proto.protocol.FindNeighbours.toObject=function(e,t){var l,r={from:(l=t.getFrom())&&proto.protocol.Endpoint.toObject(e,l),targetid:t.getTargetid_asB64(),timestamp:n.Message.getFieldWithDefault(t,3,0)};return e&&(r.$jspbMessageInstance=t),r}),proto.protocol.FindNeighbours.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.FindNeighbours;return proto.protocol.FindNeighbours.deserializeBinaryFromReader(l,t)},proto.protocol.FindNeighbours.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=new proto.protocol.Endpoint;t.readMessage(l,proto.protocol.Endpoint.deserializeBinaryFromReader),e.setFrom(l);break;case 2:l=t.readBytes();e.setTargetid(l);break;case 3:l=t.readInt64();e.setTimestamp(l);break;default:t.skipField()}}return e},proto.protocol.FindNeighbours.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.FindNeighbours.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.FindNeighbours.serializeBinaryToWriter=function(e,t){var l=void 0;null!=(l=e.getFrom())&&t.writeMessage(1,l,proto.protocol.Endpoint.serializeBinaryToWriter),(l=e.getTargetid_asU8()).length>0&&t.writeBytes(2,l),0!==(l=e.getTimestamp())&&t.writeInt64(3,l)},proto.protocol.FindNeighbours.prototype.getFrom=function(){return n.Message.getWrapperField(this,proto.protocol.Endpoint,1)},proto.protocol.FindNeighbours.prototype.setFrom=function(e){n.Message.setWrapperField(this,1,e)},proto.protocol.FindNeighbours.prototype.clearFrom=function(){this.setFrom(void 0)},proto.protocol.FindNeighbours.prototype.hasFrom=function(){return null!=n.Message.getField(this,1)},proto.protocol.FindNeighbours.prototype.getTargetid=function(){return n.Message.getFieldWithDefault(this,2,"")},proto.protocol.FindNeighbours.prototype.getTargetid_asB64=function(){return n.Message.bytesAsB64(this.getTargetid())},proto.protocol.FindNeighbours.prototype.getTargetid_asU8=function(){return n.Message.bytesAsU8(this.getTargetid())},proto.protocol.FindNeighbours.prototype.setTargetid=function(e){n.Message.setProto3BytesField(this,2,e)},proto.protocol.FindNeighbours.prototype.getTimestamp=function(){return n.Message.getFieldWithDefault(this,3,0)},proto.protocol.FindNeighbours.prototype.setTimestamp=function(e){n.Message.setProto3IntField(this,3,e)},proto.protocol.Neighbours=function(e){n.Message.initialize(this,e,0,-1,proto.protocol.Neighbours.repeatedFields_,null)},r.inherits(proto.protocol.Neighbours,n.Message),r.DEBUG&&!COMPILED&&(proto.protocol.Neighbours.displayName="proto.protocol.Neighbours"),proto.protocol.Neighbours.repeatedFields_=[2],n.Message.GENERATE_TO_OBJECT&&(proto.protocol.Neighbours.prototype.toObject=function(e){return proto.protocol.Neighbours.toObject(e,this)},proto.protocol.Neighbours.toObject=function(e,t){var l,r={from:(l=t.getFrom())&&proto.protocol.Endpoint.toObject(e,l),neighboursList:n.Message.toObjectList(t.getNeighboursList(),proto.protocol.Endpoint.toObject,e),timestamp:n.Message.getFieldWithDefault(t,3,0)};return e&&(r.$jspbMessageInstance=t),r}),proto.protocol.Neighbours.deserializeBinary=function(e){var t=new n.BinaryReader(e),l=new proto.protocol.Neighbours;return proto.protocol.Neighbours.deserializeBinaryFromReader(l,t)},proto.protocol.Neighbours.deserializeBinaryFromReader=function(e,t){for(;t.nextField()&&!t.isEndGroup();){switch(t.getFieldNumber()){case 1:var l=new proto.protocol.Endpoint;t.readMessage(l,proto.protocol.Endpoint.deserializeBinaryFromReader),e.setFrom(l);break;case 2:l=new proto.protocol.Endpoint;t.readMessage(l,proto.protocol.Endpoint.deserializeBinaryFromReader),e.addNeighbours(l);break;case 3:l=t.readInt64();e.setTimestamp(l);break;default:t.skipField()}}return e},proto.protocol.Neighbours.prototype.serializeBinary=function(){var e=new n.BinaryWriter;return proto.protocol.Neighbours.serializeBinaryToWriter(this,e),e.getResultBuffer()},proto.protocol.Neighbours.serializeBinaryToWriter=function(e,t){var l=void 0;null!=(l=e.getFrom())&&t.writeMessage(1,l,proto.protocol.Endpoint.serializeBinaryToWriter),(l=e.getNeighboursList()).length>0&&t.writeRepeatedMessage(2,l,proto.protocol.Endpoint.serializeBinaryToWriter),0!==(l=e.getTimestamp())&&t.writeInt64(3,l)},proto.protocol.Neighbours.prototype.getFrom=function(){return n.Message.getWrapperField(this,proto.protocol.Endpoint,1)},proto.protocol.Neighbours.prototype.setFrom=function(e){n.Message.setWrapperField(this,1,e)},proto.protocol.Neighbours.prototype.clearFrom=function(){this.setFrom(void 0)},proto.protocol.Neighbours.prototype.hasFrom=function(){return null!=n.Message.getField(this,1)},proto.protocol.Neighbours.prototype.getNeighboursList=function(){return n.Message.getRepeatedWrapperField(this,proto.protocol.Endpoint,2)},proto.protocol.Neighbours.prototype.setNeighboursList=function(e){n.Message.setRepeatedWrapperField(this,2,e)},proto.protocol.Neighbours.prototype.addNeighbours=function(e,t){return n.Message.addToRepeatedWrapperField(this,2,e,proto.protocol.Endpoint,t)},proto.protocol.Neighbours.prototype.clearNeighboursList=function(){this.setNeighboursList([])},proto.protocol.Neighbours.prototype.getTimestamp=function(){return n.Message.getFieldWithDefault(this,3,0)},proto.protocol.Neighbours.prototype.setTimestamp=function(e){n.Message.setProto3IntField(this,3,e)},r.object.extend(t,proto.protocol)},function(e,t,l){"use strict";var n;!function(r){function o(e,t,l){var n,r,o,u,f,g,h,b,y,m=0,v=[],_=0,w=!1,A=[],T=[],E=!1;if(n=(l=l||{}).encoding||"UTF8",(y=l.numRounds||1)!==parseInt(y,10)||1>y)throw Error("numRounds must a integer >= 1");if(0!==e.lastIndexOf("SHA-",0))throw Error("Chosen SHA variant is not supported");if(g=function(t,l){return M(t,l,e)},h=function(t,l,n,r){var o,u;if("SHA-224"!==e&&"SHA-256"!==e)throw Error("Unexpected error in SHA-2 implementation");for(o=15+(l+65>>>9<<4),u=16;t.length<=o;)t.push(0);for(t[l>>>5]|=128<<24-l%32,l+=n,t[o]=4294967295&l,t[o-1]=l/4294967296|0,n=t.length,l=0;l<n;l+=u)r=M(t.slice(l,l+u),r,e);if("SHA-224"===e)t=[r[0],r[1],r[2],r[3],r[4],r[5],r[6]];else{if("SHA-256"!==e)throw Error("Unexpected error in SHA-2 implementation");t=r}return t},b=function(e){return e.slice()},"SHA-224"===e)f=512,u=224;else{if("SHA-256"!==e)throw Error("Chosen SHA variant is not supported");f=512,u=256}o=d(t,n),r=B(e),this.setHMACKey=function(t,l,o){var u;if(!0===w)throw Error("HMAC key already set");if(!0===E)throw Error("Cannot set HMAC key after calling update");if(t=(l=d(l,n=(o||{}).encoding||"UTF8")(t)).binLen,l=l.value,o=(u=f>>>3)/4-1,u<t/8){for(l=h(l,t,0,B(e));l.length<=o;)l.push(0);l[o]&=4294967040}else if(u>t/8){for(;l.length<=o;)l.push(0);l[o]&=4294967040}for(t=0;t<=o;t+=1)A[t]=909522486^l[t],T[t]=1549556828^l[t];r=g(A,r),m=f,w=!0},this.update=function(e){var t,l,n,u=0,i=f>>>5;for(e=(t=o(e,v,_)).binLen,l=t.value,t=e>>>5,n=0;n<t;n+=i)u+f<=e&&(r=g(l.slice(n,n+i),r),u+=f);m+=u,v=l.slice(u>>>5),_=e%f,E=!0},this.getHash=function(t,l){var n,o,d,f;if(!0===w)throw Error("Cannot call getHash after setting HMAC key");switch(d=p(l),t){case"HEX":n=function(e){return i(e,u,d)};break;case"B64":n=function(e){return s(e,u,d)};break;case"BYTES":n=function(e){return a(e,u)};break;case"ARRAYBUFFER":try{o=new ArrayBuffer(0)}catch(e){throw Error("ARRAYBUFFER not supported by this environment")}n=function(e){return c(e,u)};break;default:throw Error("format must be HEX, B64, BYTES, or ARRAYBUFFER")}for(f=h(v.slice(),_,m,b(r)),o=1;o<y;o+=1)f=h(f,u,0,B(e));return n(f)},this.getHMAC=function(t,l){var n,o,d,y;if(!1===w)throw Error("Cannot call getHMAC without first setting HMAC key");switch(d=p(l),t){case"HEX":n=function(e){return i(e,u,d)};break;case"B64":n=function(e){return s(e,u,d)};break;case"BYTES":n=function(e){return a(e,u)};break;case"ARRAYBUFFER":try{n=new ArrayBuffer(0)}catch(e){throw Error("ARRAYBUFFER not supported by this environment")}n=function(e){return c(e,u)};break;default:throw Error("outputFormat must be HEX, B64, BYTES, or ARRAYBUFFER")}return o=h(v.slice(),_,m,b(r)),y=g(T,B(e)),n(y=h(o,u,f,y))}}function u(){}function i(e,t,l){var n,r,o="";for(t/=8,n=0;n<t;n+=1)r=e[n>>>2]>>>8*(3+n%4*-1),o+="0123456789abcdef".charAt(r>>>4&15)+"0123456789abcdef".charAt(15&r);return l.outputUpper?o.toUpperCase():o}function s(e,t,l){var n,r,o,u="",i=t/8;for(n=0;n<i;n+=3)for(r=n+1<i?e[n+1>>>2]:0,o=n+2<i?e[n+2>>>2]:0,o=(e[n>>>2]>>>8*(3+n%4*-1)&255)<<16|(r>>>8*(3+(n+1)%4*-1)&255)<<8|o>>>8*(3+(n+2)%4*-1)&255,r=0;4>r;r+=1)u+=8*n+6*r<=t?"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(o>>>6*(3-r)&63):l.b64Pad;return u}function a(e,t){var l,n,r="",o=t/8;for(l=0;l<o;l+=1)n=e[l>>>2]>>>8*(3+l%4*-1)&255,r+=String.fromCharCode(n);return r}function c(e,t){var l,n,r=t/8,o=new ArrayBuffer(r);for(n=new Uint8Array(o),l=0;l<r;l+=1)n[l]=e[l>>>2]>>>8*(3+l%4*-1)&255;return o}function p(e){var t={outputUpper:!1,b64Pad:"=",shakeLen:-1};if(e=e||{},t.outputUpper=e.outputUpper||!1,!0===e.hasOwnProperty("b64Pad")&&(t.b64Pad=e.b64Pad),"boolean"!==typeof t.outputUpper)throw Error("Invalid outputUpper formatting option");if("string"!==typeof t.b64Pad)throw Error("Invalid b64Pad formatting option");return t}function d(e,t){var l;switch(t){case"UTF8":case"UTF16BE":case"UTF16LE":break;default:throw Error("encoding must be UTF8, UTF16BE, or UTF16LE")}switch(e){case"HEX":l=function(e,t,l){var n,r,o,u,i,s=e.length;if(0!==s%2)throw Error("String of HEX type must be in byte increments");for(t=t||[0],i=(l=l||0)>>>3,n=0;n<s;n+=2){if(r=parseInt(e.substr(n,2),16),isNaN(r))throw Error("String of HEX type contains invalid characters");for(o=(u=(n>>>1)+i)>>>2;t.length<=o;)t.push(0);t[o]|=r<<8*(3+u%4*-1)}return{value:t,binLen:4*s+l}};break;case"TEXT":l=function(e,l,n){var r,o,u,i,s,a,c,p,d=0;if(l=l||[0],s=(n=n||0)>>>3,"UTF8"===t)for(p=3,u=0;u<e.length;u+=1)for(o=[],128>(r=e.charCodeAt(u))?o.push(r):2048>r?(o.push(192|r>>>6),o.push(128|63&r)):55296>r||57344<=r?o.push(224|r>>>12,128|r>>>6&63,128|63&r):(u+=1,r=65536+((1023&r)<<10|1023&e.charCodeAt(u)),o.push(240|r>>>18,128|r>>>12&63,128|r>>>6&63,128|63&r)),i=0;i<o.length;i+=1){for(a=(c=d+s)>>>2;l.length<=a;)l.push(0);l[a]|=o[i]<<8*(p+c%4*-1),d+=1}else if("UTF16BE"===t||"UTF16LE"===t)for(p=2,o="UTF16LE"===t||"UTF16LE"!==t&&!1,u=0;u<e.length;u+=1){for(r=e.charCodeAt(u),!0===o&&(r=(i=255&r)<<8|r>>>8),a=(c=d+s)>>>2;l.length<=a;)l.push(0);l[a]|=r<<8*(p+c%4*-1),d+=2}return{value:l,binLen:8*d+n}};break;case"B64":l=function(e,t,l){var n,r,o,u,i,s,a,c=0;if(-1===e.search(/^[a-zA-Z0-9=+\/]+$/))throw Error("Invalid character in base-64 string");if(r=e.indexOf("="),e=e.replace(/\=/g,""),-1!==r&&r<e.length)throw Error("Invalid '=' found in base-64 string");for(t=t||[0],s=(l=l||0)>>>3,r=0;r<e.length;r+=4){for(i=e.substr(r,4),o=u=0;o<i.length;o+=1)n="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(i[o]),u|=n<<18-6*o;for(o=0;o<i.length-1;o+=1){for(n=(a=c+s)>>>2;t.length<=n;)t.push(0);t[n]|=(u>>>16-8*o&255)<<8*(3+a%4*-1),c+=1}}return{value:t,binLen:8*c+l}};break;case"BYTES":l=function(e,t,l){var n,r,o,u,i;for(t=t||[0],o=(l=l||0)>>>3,r=0;r<e.length;r+=1)n=e.charCodeAt(r),u=(i=r+o)>>>2,t.length<=u&&t.push(0),t[u]|=n<<8*(3+i%4*-1);return{value:t,binLen:8*e.length+l}};break;case"ARRAYBUFFER":try{l=new ArrayBuffer(0)}catch(e){throw Error("ARRAYBUFFER not supported by this environment")}l=function(e,t,l){var n,r,o,u,i;for(t=t||[0],r=(l=l||0)>>>3,i=new Uint8Array(e),n=0;n<e.byteLength;n+=1)o=(u=n+r)>>>2,t.length<=o&&t.push(0),t[o]|=i[n]<<8*(3+u%4*-1);return{value:t,binLen:8*e.byteLength+l}};break;default:throw Error("format must be HEX, TEXT, B64, BYTES, or ARRAYBUFFER")}return l}function f(e,t){return e>>>t|e<<32-t}function g(e,t,l){return e&t^~e&l}function h(e,t,l){return e&t^e&l^t&l}function b(e){return f(e,2)^f(e,13)^f(e,22)}function y(e){return f(e,6)^f(e,11)^f(e,25)}function m(e){return f(e,7)^f(e,18)^e>>>3}function v(e){return f(e,17)^f(e,19)^e>>>10}function _(e,t){var l=(65535&e)+(65535&t);return((e>>>16)+(t>>>16)+(l>>>16)&65535)<<16|65535&l}function w(e,t,l,n){var r=(65535&e)+(65535&t)+(65535&l)+(65535&n);return((e>>>16)+(t>>>16)+(l>>>16)+(n>>>16)+(r>>>16)&65535)<<16|65535&r}function A(e,t,l,n,r){var o=(65535&e)+(65535&t)+(65535&l)+(65535&n)+(65535&r);return((e>>>16)+(t>>>16)+(l>>>16)+(n>>>16)+(r>>>16)+(o>>>16)&65535)<<16|65535&o}function B(e){var t,l=[];if(0!==e.lastIndexOf("SHA-",0))throw Error("No SHA variants supported");switch(l=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428],t=[1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225],e){case"SHA-224":break;case"SHA-256":l=t;break;case"SHA-384":case"SHA-512":l=[new u,new u,new u,new u,new u,new u,new u,new u];break;default:throw Error("Unknown SHA variant")}return l}function M(e,t,l){var n,r,o,u,i,s,a,c,p,d,f,B,M,E,S,I,j,F,C,O,k,R,x,z=[];if("SHA-224"!==l&&"SHA-256"!==l)throw Error("Unexpected error in SHA-2 implementation");for(d=64,B=1,R=Number,M=_,E=w,S=A,I=m,j=v,F=b,C=y,k=h,O=g,x=T,l=t[0],n=t[1],r=t[2],o=t[3],u=t[4],i=t[5],s=t[6],a=t[7],f=0;f<d;f+=1)16>f?(p=f*B,c=e.length<=p?0:e[p],p=e.length<=p+1?0:e[p+1],z[f]=new R(c,p)):z[f]=E(j(z[f-2]),z[f-7],I(z[f-15]),z[f-16]),c=S(a,C(u),O(u,i,s),x[f],z[f]),p=M(F(l),k(l,n,r)),a=s,s=i,i=u,u=M(o,c),o=r,r=n,n=l,l=M(c,p);return t[0]=M(l,t[0]),t[1]=M(n,t[1]),t[2]=M(r,t[2]),t[3]=M(o,t[3]),t[4]=M(u,t[4]),t[5]=M(i,t[5]),t[6]=M(s,t[6]),t[7]=M(a,t[7]),t}var T;T=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],void 0===(n=function(){return o}.call(t,l,t,e))||(e.exports=n)}()},function(e,t){(function(t){e.exports=t}).call(this,{})},function(e,t,l){(function(e,n,r){var o;function u(e){return(u="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}!function(){"use strict";var i="input is invalid type",s="object"===("undefined"===typeof window?"undefined":u(window)),a=s?window:{};a.JS_SHA3_NO_WINDOW&&(s=!1);var c=!s&&"object"===("undefined"===typeof self?"undefined":u(self));!a.JS_SHA3_NO_NODE_JS&&"object"===("undefined"===typeof e?"undefined":u(e))&&e.versions&&e.versions.node?a=n:c&&(a=self);var p=!a.JS_SHA3_NO_COMMON_JS&&"object"===u(r)&&r.exports,d=l(90),f=!a.JS_SHA3_NO_ARRAY_BUFFER&&"undefined"!==typeof ArrayBuffer,g="0123456789abcdef".split(""),h=[4,1024,262144,67108864],b=[0,8,16,24],y=[1,0,32898,0,32906,2147483648,2147516416,2147483648,32907,0,2147483649,0,2147516545,2147483648,32777,2147483648,138,0,136,0,2147516425,0,2147483658,0,2147516555,0,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,2147483648,32778,0,2147483658,2147483648,2147516545,2147483648,32896,2147483648,2147483649,0,2147516424,2147483648],m=[224,256,384,512],v=[128,256],_=["hex","buffer","arrayBuffer","array","digest"],w={128:168,256:136};!a.JS_SHA3_NO_NODE_JS&&Array.isArray||(Array.isArray=function(e){return"[object Array]"===Object.prototype.toString.call(e)}),!f||!a.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW&&ArrayBuffer.isView||(ArrayBuffer.isView=function(e){return"object"===u(e)&&e.buffer&&e.buffer.constructor===ArrayBuffer});for(var A=function(e,t,l){return function(n){return new N(e,t,e).update(n)[l]()}},B=function(e,t,l){return function(n,r){return new N(e,t,r).update(n)[l]()}},M=function(e,t,l){return function(t,n,r,o){return j["cshake"+e].update(t,n,r,o)[l]()}},T=function(e,t,l){return function(t,n,r,o){return j["kmac"+e].update(t,n,r,o)[l]()}},E=function(e,t,l,n){for(var r=0;r<_.length;++r){var o=_[r];e[o]=t(l,n,o)}return e},S=function(e,t){var l=A(e,t,"hex");return l.create=function(){return new N(e,t,e)},l.update=function(e){return l.create().update(e)},E(l,A,e,t)},I=[{name:"keccak",padding:[1,256,65536,16777216],bits:m,createMethod:S},{name:"sha3",padding:[6,1536,393216,100663296],bits:m,createMethod:S},{name:"shake",padding:[31,7936,2031616,520093696],bits:v,createMethod:function(e,t){var l=B(e,t,"hex");return l.create=function(l){return new N(e,t,l)},l.update=function(e,t){return l.create(t).update(e)},E(l,B,e,t)}},{name:"cshake",padding:h,bits:v,createMethod:function(e,t){var l=w[e],n=M(e,0,"hex");return n.create=function(n,r,o){return r||o?new N(e,t,n).bytepad([r,o],l):j["shake"+e].create(n)},n.update=function(e,t,l,r){return n.create(t,l,r).update(e)},E(n,M,e,t)}},{name:"kmac",padding:h,bits:v,createMethod:function(e,t){var l=w[e],n=T(e,0,"hex");return n.create=function(n,r,o){return new W(e,t,r).bytepad(["KMAC",o],l).bytepad([n],l)},n.update=function(e,t,l,r){return n.create(e,l,r).update(t)},E(n,T,e,t)}}],j={},F=[],C=0;C<I.length;++C)for(var O=I[C],k=O.bits,R=0;R<k.length;++R){var x=O.name+"_"+k[R];if(F.push(x),j[x]=O.createMethod(k[R],O.padding),"sha3"!==O.name){var z=O.name+k[R];F.push(z),j[z]=j[x]}}function N(e,t,l){this.blocks=[],this.s=[],this.padding=t,this.outputBits=l,this.reset=!0,this.finalized=!1,this.block=0,this.start=0,this.blockCount=1600-(e<<1)>>5,this.byteCount=this.blockCount<<2,this.outputBlocks=l>>5,this.extraBytes=(31&l)>>3;for(var n=0;n<50;++n)this.s[n]=0}function W(e,t,l){N.call(this,e,t,l)}N.prototype.update=function(e){if(!this.finalized){var t,l=u(e);if("string"!==l){if("object"!==l)throw i;if(null===e)throw i;if(f&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!Array.isArray(e)&&(!f||!ArrayBuffer.isView(e)))throw i;t=!0}for(var n,r,o=this.blocks,s=this.byteCount,a=e.length,c=this.blockCount,p=0,d=this.s;p<a;){if(this.reset)for(this.reset=!1,o[0]=this.block,n=1;n<c+1;++n)o[n]=0;if(t)for(n=this.start;p<a&&n<s;++p)o[n>>2]|=e[p]<<b[3&n++];else for(n=this.start;p<a&&n<s;++p)(r=e.charCodeAt(p))<128?o[n>>2]|=r<<b[3&n++]:r<2048?(o[n>>2]|=(192|r>>6)<<b[3&n++],o[n>>2]|=(128|63&r)<<b[3&n++]):r<55296||r>=57344?(o[n>>2]|=(224|r>>12)<<b[3&n++],o[n>>2]|=(128|r>>6&63)<<b[3&n++],o[n>>2]|=(128|63&r)<<b[3&n++]):(r=65536+((1023&r)<<10|1023&e.charCodeAt(++p)),o[n>>2]|=(240|r>>18)<<b[3&n++],o[n>>2]|=(128|r>>12&63)<<b[3&n++],o[n>>2]|=(128|r>>6&63)<<b[3&n++],o[n>>2]|=(128|63&r)<<b[3&n++]);if(this.lastByteIndex=n,n>=s){for(this.start=n-s,this.block=o[c],n=0;n<c;++n)d[n]^=o[n];U(d),this.reset=!0}else this.start=n}return this}},N.prototype.encode=function(e,t){var l=255&e,n=1,r=[l];for(l=255&(e>>=8);l>0;)r.unshift(l),l=255&(e>>=8),++n;return t?r.push(n):r.unshift(n),this.update(r),r.length},N.prototype.encodeString=function(e){var t,l=u(e);if("string"!==l){if("object"!==l)throw i;if(null===e)throw i;if(f&&e.constructor===ArrayBuffer)e=new Uint8Array(e);else if(!Array.isArray(e)&&(!f||!ArrayBuffer.isView(e)))throw i;t=!0}var n=0,r=e.length;if(t)n=r;else for(var o=0;o<e.length;++o){var s=e.charCodeAt(o);s<128?n+=1:s<2048?n+=2:s<55296||s>=57344?n+=3:(s=65536+((1023&s)<<10|1023&e.charCodeAt(++o)),n+=4)}return n+=this.encode(8*n),this.update(e),n},N.prototype.bytepad=function(e,t){for(var l=this.encode(t),n=0;n<e.length;++n)l+=this.encodeString(e[n]);var r=t-l%t,o=[];return o.length=r,this.update(o),this},N.prototype.finalize=function(){if(!this.finalized){this.finalized=!0;var e=this.blocks,t=this.lastByteIndex,l=this.blockCount,n=this.s;if(e[t>>2]|=this.padding[3&t],this.lastByteIndex===this.byteCount)for(e[0]=e[l],t=1;t<l+1;++t)e[t]=0;for(e[l-1]|=2147483648,t=0;t<l;++t)n[t]^=e[t];U(n)}},N.prototype.toString=N.prototype.hex=function(){this.finalize();for(var e,t=this.blockCount,l=this.s,n=this.outputBlocks,r=this.extraBytes,o=0,u=0,i="";u<n;){for(o=0;o<t&&u<n;++o,++u)e=l[o],i+=g[e>>4&15]+g[15&e]+g[e>>12&15]+g[e>>8&15]+g[e>>20&15]+g[e>>16&15]+g[e>>28&15]+g[e>>24&15];u%t===0&&(U(l),o=0)}return r&&(e=l[o],i+=g[e>>4&15]+g[15&e],r>1&&(i+=g[e>>12&15]+g[e>>8&15]),r>2&&(i+=g[e>>20&15]+g[e>>16&15])),i},N.prototype.arrayBuffer=function(){this.finalize();var e,t=this.blockCount,l=this.s,n=this.outputBlocks,r=this.extraBytes,o=0,u=0,i=this.outputBits>>3;e=r?new ArrayBuffer(n+1<<2):new ArrayBuffer(i);for(var s=new Uint32Array(e);u<n;){for(o=0;o<t&&u<n;++o,++u)s[u]=l[o];u%t===0&&U(l)}return r&&(s[o]=l[o],e=e.slice(0,i)),e},N.prototype.buffer=N.prototype.arrayBuffer,N.prototype.digest=N.prototype.array=function(){this.finalize();for(var e,t,l=this.blockCount,n=this.s,r=this.outputBlocks,o=this.extraBytes,u=0,i=0,s=[];i<r;){for(u=0;u<l&&i<r;++u,++i)e=i<<2,t=n[u],s[e]=255&t,s[e+1]=t>>8&255,s[e+2]=t>>16&255,s[e+3]=t>>24&255;i%l===0&&U(n)}return o&&(e=i<<2,t=n[u],s[e]=255&t,o>1&&(s[e+1]=t>>8&255),o>2&&(s[e+2]=t>>16&255)),s},W.prototype=new N,W.prototype.finalize=function(){return this.encode(this.outputBits,!0),N.prototype.finalize.call(this)};var U=function(e){var t,l,n,r,o,u,i,s,a,c,p,d,f,g,h,b,m,v,_,w,A,B,M,T,E,S,I,j,F,C,O,k,R,x,z,N,W,U,D,L,P,V,H,q,G,$,X,Y,J,K,Z,Q,ee,te,le,ne,re,oe,ue,ie,se,ae,ce;for(n=0;n<48;n+=2)r=e[0]^e[10]^e[20]^e[30]^e[40],o=e[1]^e[11]^e[21]^e[31]^e[41],u=e[2]^e[12]^e[22]^e[32]^e[42],i=e[3]^e[13]^e[23]^e[33]^e[43],s=e[4]^e[14]^e[24]^e[34]^e[44],a=e[5]^e[15]^e[25]^e[35]^e[45],c=e[6]^e[16]^e[26]^e[36]^e[46],p=e[7]^e[17]^e[27]^e[37]^e[47],t=(d=e[8]^e[18]^e[28]^e[38]^e[48])^(u<<1|i>>>31),l=(f=e[9]^e[19]^e[29]^e[39]^e[49])^(i<<1|u>>>31),e[0]^=t,e[1]^=l,e[10]^=t,e[11]^=l,e[20]^=t,e[21]^=l,e[30]^=t,e[31]^=l,e[40]^=t,e[41]^=l,t=r^(s<<1|a>>>31),l=o^(a<<1|s>>>31),e[2]^=t,e[3]^=l,e[12]^=t,e[13]^=l,e[22]^=t,e[23]^=l,e[32]^=t,e[33]^=l,e[42]^=t,e[43]^=l,t=u^(c<<1|p>>>31),l=i^(p<<1|c>>>31),e[4]^=t,e[5]^=l,e[14]^=t,e[15]^=l,e[24]^=t,e[25]^=l,e[34]^=t,e[35]^=l,e[44]^=t,e[45]^=l,t=s^(d<<1|f>>>31),l=a^(f<<1|d>>>31),e[6]^=t,e[7]^=l,e[16]^=t,e[17]^=l,e[26]^=t,e[27]^=l,e[36]^=t,e[37]^=l,e[46]^=t,e[47]^=l,t=c^(r<<1|o>>>31),l=p^(o<<1|r>>>31),e[8]^=t,e[9]^=l,e[18]^=t,e[19]^=l,e[28]^=t,e[29]^=l,e[38]^=t,e[39]^=l,e[48]^=t,e[49]^=l,g=e[0],h=e[1],$=e[11]<<4|e[10]>>>28,X=e[10]<<4|e[11]>>>28,j=e[20]<<3|e[21]>>>29,F=e[21]<<3|e[20]>>>29,ie=e[31]<<9|e[30]>>>23,se=e[30]<<9|e[31]>>>23,V=e[40]<<18|e[41]>>>14,H=e[41]<<18|e[40]>>>14,x=e[2]<<1|e[3]>>>31,z=e[3]<<1|e[2]>>>31,b=e[13]<<12|e[12]>>>20,m=e[12]<<12|e[13]>>>20,Y=e[22]<<10|e[23]>>>22,J=e[23]<<10|e[22]>>>22,C=e[33]<<13|e[32]>>>19,O=e[32]<<13|e[33]>>>19,ae=e[42]<<2|e[43]>>>30,ce=e[43]<<2|e[42]>>>30,te=e[5]<<30|e[4]>>>2,le=e[4]<<30|e[5]>>>2,N=e[14]<<6|e[15]>>>26,W=e[15]<<6|e[14]>>>26,v=e[25]<<11|e[24]>>>21,_=e[24]<<11|e[25]>>>21,K=e[34]<<15|e[35]>>>17,Z=e[35]<<15|e[34]>>>17,k=e[45]<<29|e[44]>>>3,R=e[44]<<29|e[45]>>>3,T=e[6]<<28|e[7]>>>4,E=e[7]<<28|e[6]>>>4,ne=e[17]<<23|e[16]>>>9,re=e[16]<<23|e[17]>>>9,U=e[26]<<25|e[27]>>>7,D=e[27]<<25|e[26]>>>7,w=e[36]<<21|e[37]>>>11,A=e[37]<<21|e[36]>>>11,Q=e[47]<<24|e[46]>>>8,ee=e[46]<<24|e[47]>>>8,q=e[8]<<27|e[9]>>>5,G=e[9]<<27|e[8]>>>5,S=e[18]<<20|e[19]>>>12,I=e[19]<<20|e[18]>>>12,oe=e[29]<<7|e[28]>>>25,ue=e[28]<<7|e[29]>>>25,L=e[38]<<8|e[39]>>>24,P=e[39]<<8|e[38]>>>24,B=e[48]<<14|e[49]>>>18,M=e[49]<<14|e[48]>>>18,e[0]=g^~b&v,e[1]=h^~m&_,e[10]=T^~S&j,e[11]=E^~I&F,e[20]=x^~N&U,e[21]=z^~W&D,e[30]=q^~$&Y,e[31]=G^~X&J,e[40]=te^~ne&oe,e[41]=le^~re&ue,e[2]=b^~v&w,e[3]=m^~_&A,e[12]=S^~j&C,e[13]=I^~F&O,e[22]=N^~U&L,e[23]=W^~D&P,e[32]=$^~Y&K,e[33]=X^~J&Z,e[42]=ne^~oe&ie,e[43]=re^~ue&se,e[4]=v^~w&B,e[5]=_^~A&M,e[14]=j^~C&k,e[15]=F^~O&R,e[24]=U^~L&V,e[25]=D^~P&H,e[34]=Y^~K&Q,e[35]=J^~Z&ee,e[44]=oe^~ie&ae,e[45]=ue^~se&ce,e[6]=w^~B&g,e[7]=A^~M&h,e[16]=C^~k&T,e[17]=O^~R&E,e[26]=L^~V&x,e[27]=P^~H&z,e[36]=K^~Q&q,e[37]=Z^~ee&G,e[46]=ie^~ae&te,e[47]=se^~ce&le,e[8]=B^~g&b,e[9]=M^~h&m,e[18]=k^~T&S,e[19]=R^~E&I,e[28]=V^~x&N,e[29]=H^~z&W,e[38]=Q^~q&$,e[39]=ee^~G&X,e[48]=ae^~te&ne,e[49]=ce^~le&re,e[0]^=y[n],e[1]^=y[n+1]};if(p)r.exports=j;else{for(C=0;C<F.length;++C)a[F[C]]=j[F[C]];d&&(void 0===(o=function(){return j}.call(t,l,t,r))||(r.exports=o))}}()}).call(this,l(7),l(3),l(26)(e))},function(e,t,l){"use strict";function n(e){return(n="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var r=l(5),o=l(2).utils,u=o.assert,i=o.cachedProperty,s=o.parseBytes;function a(e,t){this.eddsa=e,"object"!==n(t)&&(t=s(t)),Array.isArray(t)&&(t={R:t.slice(0,e.encodingLength),S:t.slice(e.encodingLength)}),u(t.R&&t.S,"Signature without R or S"),e.isPoint(t.R)&&(this._R=t.R),t.S instanceof r&&(this._S=t.S),this._Rencoded=Array.isArray(t.R)?t.R:t.Rencoded,this._Sencoded=Array.isArray(t.S)?t.S:t.Sencoded}i(a,"S",function(){return this.eddsa.decodeInt(this.Sencoded())}),i(a,"R",function(){return this.eddsa.decodePoint(this.Rencoded())}),i(a,"Rencoded",function(){return this.eddsa.encodePoint(this.R())}),i(a,"Sencoded",function(){return this.eddsa.encodeInt(this.S())}),a.prototype.toBytes=function(){return this.Rencoded().concat(this.Sencoded())},a.prototype.toHex=function(){return o.encode(this.toBytes(),"hex").toUpperCase()},e.exports=a},function(e,t,l){"use strict";var n=l(2).utils,r=n.assert,o=n.parseBytes,u=n.cachedProperty;function i(e,t){this.eddsa=e,this._secret=o(t.secret),e.isPoint(t.pub)?this._pub=t.pub:this._pubBytes=o(t.pub)}i.fromPublic=function(e,t){return t instanceof i?t:new i(e,{pub:t})},i.fromSecret=function(e,t){return t instanceof i?t:new i(e,{secret:t})},i.prototype.secret=function(){return this._secret},u(i,"pubBytes",function(){return this.eddsa.encodePoint(this.pub())}),u(i,"pub",function(){return this._pubBytes?this.eddsa.decodePoint(this._pubBytes):this.eddsa.g.mul(this.priv())}),u(i,"privBytes",function(){var e=this.eddsa,t=this.hash(),l=e.encodingLength-1,n=t.slice(0,e.encodingLength);return n[0]&=248,n[l]&=127,n[l]|=64,n}),u(i,"priv",function(){return this.eddsa.decodeInt(this.privBytes())}),u(i,"hash",function(){return this.eddsa.hash().update(this.secret()).digest()}),u(i,"messagePrefix",function(){return this.hash().slice(this.eddsa.encodingLength)}),i.prototype.sign=function(e){return r(this._secret,"KeyPair can only verify"),this.eddsa.sign(e,this)},i.prototype.verify=function(e,t){return this.eddsa.verify(e,t,this)},i.prototype.getSecret=function(e){return r(this._secret,"KeyPair is public only"),n.encode(this.secret(),e)},i.prototype.getPublic=function(e){return n.encode(this.pubBytes(),e)},e.exports=i},function(e,t,l){"use strict";var n=l(25),r=l(2),o=r.utils,u=o.assert,i=o.parseBytes,s=l(93),a=l(92);function c(e){if(u("ed25519"===e,"only tested with ed25519 so far"),!(this instanceof c))return new c(e);e=r.curves[e].curve;this.curve=e,this.g=e.g,this.g.precompute(e.n.bitLength()+1),this.pointClass=e.point().constructor,this.encodingLength=Math.ceil(e.n.bitLength()/8),this.hash=n.sha512}e.exports=c,c.prototype.sign=function(e,t){e=i(e);var l=this.keyFromSecret(t),n=this.hashInt(l.messagePrefix(),e),r=this.g.mul(n),o=this.encodePoint(r),u=this.hashInt(o,l.pubBytes(),e).mul(l.priv()),s=n.add(u).umod(this.curve.n);return this.makeSignature({R:r,S:s,Rencoded:o})},c.prototype.verify=function(e,t,l){e=i(e),t=this.makeSignature(t);var n=this.keyFromPublic(l),r=this.hashInt(t.Rencoded(),n.pubBytes(),e),o=this.g.mul(t.S());return t.R().add(n.pub().mul(r)).eq(o)},c.prototype.hashInt=function(){for(var e=this.hash(),t=0;t<arguments.length;t++)e.update(arguments[t]);return o.intFromLE(e.digest()).umod(this.curve.n)},c.prototype.keyFromPublic=function(e){return s.fromPublic(this,e)},c.prototype.keyFromSecret=function(e){return s.fromSecret(this,e)},c.prototype.makeSignature=function(e){return e instanceof a?e:new a(this,e)},c.prototype.encodePoint=function(e){var t=e.getY().toArray("le",this.encodingLength);return t[this.encodingLength-1]|=e.getX().isOdd()?128:0,t},c.prototype.decodePoint=function(e){var t=(e=o.parseBytes(e)).length-1,l=e.slice(0,t).concat(-129&e[t]),n=0!==(128&e[t]),r=o.intFromLE(l);return this.curve.pointFromY(r,n)},c.prototype.encodeInt=function(e){return e.toArray("le",this.encodingLength)},c.prototype.decodeInt=function(e){return o.intFromLE(e)},c.prototype.isPoint=function(e){return e instanceof this.pointClass}},function(e,t,l){"use strict";var n=l(5),r=l(2).utils,o=r.assert;function u(e,t){if(e instanceof u)return e;this._importDER(e,t)||(o(e.r&&e.s,"Signature without r or s"),this.r=new n(e.r,16),this.s=new n(e.s,16),void 0===e.recoveryParam?this.recoveryParam=null:this.recoveryParam=e.recoveryParam)}function i(e,t){var l=e[t.place++];if(!(128&l))return l;for(var n=15&l,r=0,o=0,u=t.place;o<n;o++,u++)r<<=8,r|=e[u];return t.place=u,r}function s(e){for(var t=0,l=e.length-1;!e[t]&&!(128&e[t+1])&&t<l;)t++;return 0===t?e:e.slice(t)}function a(e,t){if(t<128)e.push(t);else{var l=1+(Math.log(t)/Math.LN2>>>3);for(e.push(128|l);--l;)e.push(t>>>(l<<3)&255);e.push(t)}}e.exports=u,u.prototype._importDER=function(e,t){e=r.toArray(e,t);var l=new function(){this.place=0};if(48!==e[l.place++])return!1;if(i(e,l)+l.place!==e.length)return!1;if(2!==e[l.place++])return!1;var o=i(e,l),u=e.slice(l.place,o+l.place);if(l.place+=o,2!==e[l.place++])return!1;var s=i(e,l);if(e.length!==s+l.place)return!1;var a=e.slice(l.place,s+l.place);return 0===u[0]&&128&u[1]&&(u=u.slice(1)),0===a[0]&&128&a[1]&&(a=a.slice(1)),this.r=new n(u),this.s=new n(a),this.recoveryParam=null,!0},u.prototype.toDER=function(e){var t=this.r.toArray(),l=this.s.toArray();for(128&t[0]&&(t=[0].concat(t)),128&l[0]&&(l=[0].concat(l)),t=s(t),l=s(l);!l[0]&&!(128&l[1]);)l=l.slice(1);var n=[2];a(n,t.length),(n=n.concat(t)).push(2),a(n,l.length);var o=n.concat(l),u=[48];return a(u,o.length),u=u.concat(o),r.encode(u,e)}},function(e,t,l){"use strict";var n=l(5),r=l(2).utils.assert;function o(e,t){this.ec=e,this.priv=null,this.pub=null,t.priv&&this._importPrivate(t.priv,t.privEnc),t.pub&&this._importPublic(t.pub,t.pubEnc)}e.exports=o,o.fromPublic=function(e,t,l){return t instanceof o?t:new o(e,{pub:t,pubEnc:l})},o.fromPrivate=function(e,t,l){return t instanceof o?t:new o(e,{priv:t,privEnc:l})},o.prototype.validate=function(){var e=this.getPublic();return e.isInfinity()?{result:!1,reason:"Invalid public key"}:e.validate()?e.mul(this.ec.curve.n).isInfinity()?{result:!0,reason:null}:{result:!1,reason:"Public key * N != O"}:{result:!1,reason:"Public key is not a point"}},o.prototype.getPublic=function(e,t){return"string"===typeof e&&(t=e,e=null),this.pub||(this.pub=this.ec.g.mul(this.priv)),t?this.pub.encode(t,e):this.pub},o.prototype.getPrivate=function(e){return"hex"===e?this.priv.toString(16,2):this.priv},o.prototype._importPrivate=function(e,t){this.priv=new n(e,t||16),this.priv=this.priv.umod(this.ec.curve.n)},o.prototype._importPublic=function(e,t){if(e.x||e.y)return"mont"===this.ec.curve.type?r(e.x,"Need x coordinate"):"short"!==this.ec.curve.type&&"edwards"!==this.ec.curve.type||r(e.x&&e.y,"Need both x and y coordinate"),void(this.pub=this.ec.curve.point(e.x,e.y));this.pub=this.ec.curve.decodePoint(e,t)},o.prototype.derive=function(e){return e.mul(this.priv).getX()},o.prototype.sign=function(e,t,l){return this.ec.sign(e,this,t,l)},o.prototype.verify=function(e,t){return this.ec.verify(e,t,this)},o.prototype.inspect=function(){return"<Key priv: "+(this.priv&&this.priv.toString(16,2))+" pub: "+(this.pub&&this.pub.inspect())+" >"}},function(e,t,l){"use strict";var n=l(25),r=l(47),o=l(9);function u(e){if(!(this instanceof u))return new u(e);this.hash=e.hash,this.predResist=!!e.predResist,this.outLen=this.hash.outSize,this.minEntropy=e.minEntropy||this.hash.hmacStrength,this._reseed=null,this.reseedInterval=null,this.K=null,this.V=null;var t=r.toArray(e.entropy,e.entropyEnc||"hex"),l=r.toArray(e.nonce,e.nonceEnc||"hex"),n=r.toArray(e.pers,e.persEnc||"hex");o(t.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._init(t,l,n)}e.exports=u,u.prototype._init=function(e,t,l){var n=e.concat(t).concat(l);this.K=new Array(this.outLen/8),this.V=new Array(this.outLen/8);for(var r=0;r<this.V.length;r++)this.K[r]=0,this.V[r]=1;this._update(n),this._reseed=1,this.reseedInterval=281474976710656},u.prototype._hmac=function(){return new n.hmac(this.hash,this.K)},u.prototype._update=function(e){var t=this._hmac().update(this.V).update([0]);e&&(t=t.update(e)),this.K=t.digest(),this.V=this._hmac().update(this.V).digest(),e&&(this.K=this._hmac().update(this.V).update([1]).update(e).digest(),this.V=this._hmac().update(this.V).digest())},u.prototype.reseed=function(e,t,l,n){"string"!==typeof t&&(n=l,l=t,t=null),e=r.toArray(e,t),l=r.toArray(l,n),o(e.length>=this.minEntropy/8,"Not enough entropy. Minimum is: "+this.minEntropy+" bits"),this._update(e.concat(l||[])),this._reseed=1},u.prototype.generate=function(e,t,l,n){if(this._reseed>this.reseedInterval)throw new Error("Reseed is required");"string"!==typeof t&&(n=l,l=t,t=null),l&&(l=r.toArray(l,n||"hex"),this._update(l));for(var o=[];o.length<e;)this.V=this._hmac().update(this.V).digest(),o=o.concat(this.V);var u=o.slice(0,e);return this._update(l),this._reseed++,r.encode(u,t)}},function(e,t,l){"use strict";function n(e){return(n="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var r=l(5),o=l(97),u=l(2),i=u.utils.assert,s=l(96),a=l(95);function c(e){if(!(this instanceof c))return new c(e);"string"===typeof e&&(i(u.curves.hasOwnProperty(e),"Unknown curve "+e),e=u.curves[e]),e instanceof u.curves.PresetCurve&&(e={curve:e}),this.curve=e.curve.curve,this.n=this.curve.n,this.nh=this.n.ushrn(1),this.g=this.curve.g,this.g=e.curve.g,this.g.precompute(e.curve.n.bitLength()+1),this.hash=e.hash||e.curve.hash}e.exports=c,c.prototype.keyPair=function(e){return new s(this,e)},c.prototype.keyFromPrivate=function(e,t){return s.fromPrivate(this,e,t)},c.prototype.keyFromPublic=function(e,t){return s.fromPublic(this,e,t)},c.prototype.genKeyPair=function(e){e||(e={});for(var t=new o({hash:this.hash,pers:e.pers,persEnc:e.persEnc||"utf8",entropy:e.entropy||u.rand(this.hash.hmacStrength),entropyEnc:e.entropy&&e.entropyEnc||"utf8",nonce:this.n.toArray()}),l=this.n.byteLength(),n=this.n.sub(new r(2));;){var i=new r(t.generate(l));if(!(i.cmp(n)>0))return i.iaddn(1),this.keyFromPrivate(i)}},c.prototype._truncateToN=function(e,t){var l=8*e.byteLength()-this.n.bitLength();return l>0&&(e=e.ushrn(l)),!t&&e.cmp(this.n)>=0?e.sub(this.n):e},c.prototype.sign=function(e,t,l,u){"object"===n(l)&&(u=l,l=null),u||(u={}),t=this.keyFromPrivate(t,l),e=this._truncateToN(new r(e,16));for(var i=this.n.byteLength(),s=t.getPrivate().toArray("be",i),c=e.toArray("be",i),p=new o({hash:this.hash,entropy:s,nonce:c,pers:u.pers,persEnc:u.persEnc||"utf8"}),d=this.n.sub(new r(1)),f=0;;f++){var g=u.k?u.k(f):new r(p.generate(this.n.byteLength()));if(!((g=this._truncateToN(g,!0)).cmpn(1)<=0||g.cmp(d)>=0)){var h=this.g.mul(g);if(!h.isInfinity()){var b=h.getX(),y=b.umod(this.n);if(0!==y.cmpn(0)){var m=g.invm(this.n).mul(y.mul(t.getPrivate()).iadd(e));if(0!==(m=m.umod(this.n)).cmpn(0)){var v=(h.getY().isOdd()?1:0)|(0!==b.cmp(y)?2:0);return u.canonical&&m.cmp(this.nh)>0&&(m=this.n.sub(m),v^=1),new a({r:y,s:m,recoveryParam:v})}}}}}},c.prototype.verify=function(e,t,l,n){e=this._truncateToN(new r(e,16)),l=this.keyFromPublic(l,n);var o=(t=new a(t,"hex")).r,u=t.s;if(o.cmpn(1)<0||o.cmp(this.n)>=0)return!1;if(u.cmpn(1)<0||u.cmp(this.n)>=0)return!1;var i,s=u.invm(this.n),c=s.mul(e).umod(this.n),p=s.mul(o).umod(this.n);return this.curve._maxwellTrick?!(i=this.g.jmulAdd(c,l.getPublic(),p)).isInfinity()&&i.eqXToP(o):!(i=this.g.mulAdd(c,l.getPublic(),p)).isInfinity()&&0===i.getX().umod(this.n).cmp(o)},c.prototype.recoverPubKey=function(e,t,l,n){i((3&l)===l,"The recovery param is more than two bits"),t=new a(t,n);var o=this.n,u=new r(e),s=t.r,c=t.s,p=1&l,d=l>>1;if(s.cmp(this.curve.p.umod(this.curve.n))>=0&&d)throw new Error("Unable to find sencond key candinate");s=d?this.curve.pointFromX(s.add(this.curve.n),p):this.curve.pointFromX(s,p);var f=t.r.invm(o),g=o.sub(u).mul(f).umod(o),h=c.mul(f).umod(o);return this.g.mulAdd(g,s,h)},c.prototype.getKeyRecoveryParam=function(e,t,l,n){if(null!==(t=new a(t,n)).recoveryParam)return t.recoveryParam;for(var r=0;r<4;r++){var o;try{o=this.recoverPubKey(e,t,r)}catch(e){continue}if(o.eq(l))return r}throw new Error("Unable to find valid recovery factor")}},function(e,t){e.exports={doubles:{step:4,points:[["e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a","f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821"],["8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508","11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf"],["175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739","d3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695"],["363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640","4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9"],["8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c","4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36"],["723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda","96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f"],["eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa","5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999"],["100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0","cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09"],["e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d","9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d"],["feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d","e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088"],["da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1","9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d"],["53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0","5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8"],["8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047","10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a"],["385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862","283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453"],["6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7","7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160"],["3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd","56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0"],["85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83","7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6"],["948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a","53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589"],["6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8","bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17"],["e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d","4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda"],["e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725","7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd"],["213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754","4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2"],["4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c","17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6"],["fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6","6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f"],["76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39","c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01"],["c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891","893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3"],["d895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b","febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f"],["b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03","2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7"],["e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d","eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78"],["a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070","7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1"],["90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4","e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150"],["8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da","662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82"],["e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11","1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc"],["8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e","efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b"],["e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41","2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51"],["b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef","67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45"],["d68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8","db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120"],["324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d","648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84"],["4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96","35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d"],["9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd","ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d"],["6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5","9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8"],["a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266","40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8"],["7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71","34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac"],["928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac","c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f"],["85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751","1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962"],["ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e","493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907"],["827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241","c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec"],["eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3","be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d"],["e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f","4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414"],["1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19","aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd"],["146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be","b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0"],["fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9","6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811"],["da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2","8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1"],["a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13","7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c"],["174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c","ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73"],["959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba","2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd"],["d2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151","e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405"],["64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073","d99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589"],["8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458","38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e"],["13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b","69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27"],["bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366","d3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1"],["8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa","40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482"],["8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0","620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945"],["dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787","7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573"],["f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e","ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82"]]},naf:{wnd:7,points:[["f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9","388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672"],["2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4","d8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6"],["5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc","6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da"],["acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe","cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37"],["774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb","d984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b"],["f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8","ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81"],["d7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e","581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58"],["defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34","4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77"],["2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c","85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a"],["352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5","321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c"],["2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f","2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67"],["9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714","73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402"],["daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729","a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55"],["c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db","2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482"],["6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4","e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82"],["1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5","b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396"],["605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479","2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49"],["62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d","80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf"],["80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f","1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a"],["7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb","d0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7"],["d528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9","eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933"],["49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963","758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a"],["77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74","958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6"],["f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530","e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37"],["463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b","5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e"],["f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247","cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6"],["caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1","cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476"],["2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120","4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40"],["7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435","91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61"],["754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18","673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683"],["e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8","59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5"],["186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb","3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b"],["df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f","55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417"],["5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143","efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868"],["290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba","e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a"],["af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45","f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6"],["766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a","744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996"],["59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e","c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e"],["f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8","e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d"],["7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c","30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2"],["948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519","e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e"],["7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab","100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437"],["3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca","ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311"],["d3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf","8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4"],["1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610","68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575"],["733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4","f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d"],["15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c","d56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d"],["a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940","edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629"],["e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980","a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06"],["311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3","66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374"],["34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf","9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee"],["f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63","4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1"],["d7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448","fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b"],["32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf","5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661"],["7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5","8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6"],["ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6","8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e"],["16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5","5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d"],["eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99","f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc"],["78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51","f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4"],["494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5","42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c"],["a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5","204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b"],["c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997","4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913"],["841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881","73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154"],["5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5","39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865"],["36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66","d2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc"],["336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726","ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224"],["8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede","6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e"],["1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94","60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6"],["85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31","3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511"],["29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51","b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b"],["a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252","ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2"],["4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5","cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c"],["d24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b","6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3"],["ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4","322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d"],["af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f","6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700"],["e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889","2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4"],["591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246","b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196"],["11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984","998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4"],["3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a","b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257"],["cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030","bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13"],["c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197","6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096"],["c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593","c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38"],["a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef","21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f"],["347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38","60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448"],["da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a","49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a"],["c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111","5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4"],["4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502","7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437"],["3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea","be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7"],["cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26","8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d"],["b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986","39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a"],["d4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e","62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54"],["48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4","25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77"],["dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda","ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517"],["6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859","cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10"],["e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f","f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125"],["eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c","6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e"],["13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942","fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1"],["ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a","1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2"],["b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80","5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423"],["ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d","438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8"],["8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1","cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758"],["52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63","c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375"],["e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352","6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d"],["7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193","ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec"],["5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00","9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0"],["32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58","ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c"],["e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7","d3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4"],["8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8","c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f"],["4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e","67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649"],["3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d","cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826"],["674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b","299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5"],["d32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f","f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87"],["30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6","462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b"],["be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297","62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc"],["93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a","7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c"],["b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c","ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f"],["d5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52","4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a"],["d3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb","bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46"],["463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065","bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f"],["7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917","603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03"],["74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9","cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08"],["30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3","553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8"],["9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57","712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373"],["176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66","ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3"],["75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8","9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8"],["809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721","9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1"],["1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180","4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9"]]}}},function(e,t,l){"use strict";var n=l(4),r=l(9);function o(e,t,l){if(!(this instanceof o))return new o(e,t,l);this.Hash=e,this.blockSize=e.blockSize/8,this.outSize=e.outSize/8,this.inner=null,this.outer=null,this._init(n.toArray(t,l))}e.exports=o,o.prototype._init=function(e){e.length>this.blockSize&&(e=(new this.Hash).update(e).digest()),r(e.length<=this.blockSize);for(var t=e.length;t<this.blockSize;t++)e.push(0);for(t=0;t<e.length;t++)e[t]^=54;for(this.inner=(new this.Hash).update(e),t=0;t<e.length;t++)e[t]^=106;this.outer=(new this.Hash).update(e)},o.prototype.update=function(e,t){return this.inner.update(e,t),this},o.prototype.digest=function(e){return this.outer.update(this.inner.digest()),this.outer.digest(e)}},function(e,t,l){"use strict";var n=l(4),r=l(15),o=n.rotl32,u=n.sum32,i=n.sum32_3,s=n.sum32_4,a=r.BlockHash;function c(){if(!(this instanceof c))return new c;a.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.endian="little"}function p(e,t,l,n){return e<=15?t^l^n:e<=31?t&l|~t&n:e<=47?(t|~l)^n:e<=63?t&n|l&~n:t^(l|~n)}function d(e){return e<=15?0:e<=31?1518500249:e<=47?1859775393:e<=63?2400959708:2840853838}function f(e){return e<=15?1352829926:e<=31?1548603684:e<=47?1836072691:e<=63?2053994217:0}n.inherits(c,a),t.ripemd160=c,c.blockSize=512,c.outSize=160,c.hmacStrength=192,c.padLength=64,c.prototype._update=function(e,t){for(var l=this.h[0],n=this.h[1],r=this.h[2],a=this.h[3],c=this.h[4],m=l,v=n,_=r,w=a,A=c,B=0;B<80;B++){var M=u(o(s(l,p(B,n,r,a),e[g[B]+t],d(B)),b[B]),c);l=c,c=a,a=o(r,10),r=n,n=M,M=u(o(s(m,p(79-B,v,_,w),e[h[B]+t],f(B)),y[B]),A),m=A,A=w,w=o(_,10),_=v,v=M}M=i(this.h[1],r,w),this.h[1]=i(this.h[2],a,A),this.h[2]=i(this.h[3],c,m),this.h[3]=i(this.h[4],l,v),this.h[4]=i(this.h[0],n,_),this.h[0]=M},c.prototype._digest=function(e){return"hex"===e?n.toHex32(this.h,"little"):n.split32(this.h,"little")};var g=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],h=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],b=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],y=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]},function(e,t,l){"use strict";var n=l(4),r=l(44);function o(){if(!(this instanceof o))return new o;r.call(this),this.h=[3418070365,3238371032,1654270250,914150663,2438529370,812702999,355462360,4144912697,1731405415,4290775857,2394180231,1750603025,3675008525,1694076839,1203062813,3204075428]}n.inherits(o,r),e.exports=o,o.blockSize=1024,o.outSize=384,o.hmacStrength=192,o.padLength=128,o.prototype._digest=function(e){return"hex"===e?n.toHex32(this.h.slice(0,12),"big"):n.split32(this.h.slice(0,12),"big")}},function(e,t,l){"use strict";var n=l(4),r=l(45);function o(){if(!(this instanceof o))return new o;r.call(this),this.h=[3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428]}n.inherits(o,r),e.exports=o,o.blockSize=512,o.outSize=224,o.hmacStrength=192,o.padLength=64,o.prototype._digest=function(e){return"hex"===e?n.toHex32(this.h.slice(0,7),"big"):n.split32(this.h.slice(0,7),"big")}},function(e,t,l){"use strict";var n=l(4),r=l(15),o=l(46),u=n.rotl32,i=n.sum32,s=n.sum32_5,a=o.ft_1,c=r.BlockHash,p=[1518500249,1859775393,2400959708,3395469782];function d(){if(!(this instanceof d))return new d;c.call(this),this.h=[1732584193,4023233417,2562383102,271733878,3285377520],this.W=new Array(80)}n.inherits(d,c),e.exports=d,d.blockSize=512,d.outSize=160,d.hmacStrength=80,d.padLength=64,d.prototype._update=function(e,t){for(var l=this.W,n=0;n<16;n++)l[n]=e[t+n];for(;n<l.length;n++)l[n]=u(l[n-3]^l[n-8]^l[n-14]^l[n-16],1);var r=this.h[0],o=this.h[1],c=this.h[2],d=this.h[3],f=this.h[4];for(n=0;n<l.length;n++){var g=~~(n/20),h=s(u(r,5),a(g,o,c,d),f,l[n],p[g]);f=d,d=c,c=u(o,30),o=r,r=h}this.h[0]=i(this.h[0],r),this.h[1]=i(this.h[1],o),this.h[2]=i(this.h[2],c),this.h[3]=i(this.h[3],d),this.h[4]=i(this.h[4],f)},d.prototype._digest=function(e){return"hex"===e?n.toHex32(this.h,"big"):n.split32(this.h,"big")}},function(e,t,l){"use strict";t.sha1=l(104),t.sha224=l(103),t.sha256=l(45),t.sha384=l(102),t.sha512=l(44)},function(e,t,l){"use strict";var n,r=t,o=l(25),u=l(2),i=u.utils.assert;function s(e){"short"===e.type?this.curve=new u.curve.short(e):"edwards"===e.type?this.curve=new u.curve.edwards(e):this.curve=new u.curve.mont(e),this.g=this.curve.g,this.n=this.curve.n,this.hash=e.hash,i(this.g.validate(),"Invalid curve"),i(this.g.mul(this.n).isInfinity(),"Invalid curve, G*N != O")}function a(e,t){Object.defineProperty(r,e,{configurable:!0,enumerable:!0,get:function(){var l=new s(t);return Object.defineProperty(r,e,{configurable:!0,enumerable:!0,value:l}),l}})}r.PresetCurve=s,a("p192",{type:"short",prime:"p192",p:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff",a:"ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc",b:"64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1",n:"ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831",hash:o.sha256,gRed:!1,g:["188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012","07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811"]}),a("p224",{type:"short",prime:"p224",p:"ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001",a:"ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe",b:"b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4",n:"ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d",hash:o.sha256,gRed:!1,g:["b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21","bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34"]}),a("p256",{type:"short",prime:null,p:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff",a:"ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc",b:"5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b",n:"ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551",hash:o.sha256,gRed:!1,g:["6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296","4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5"]}),a("p384",{type:"short",prime:null,p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 ffffffff",a:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe ffffffff 00000000 00000000 fffffffc",b:"b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f 5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef",n:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 f4372ddf 581a0db2 48b0a77a ecec196a ccc52973",hash:o.sha384,gRed:!1,g:["aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 5502f25d bf55296c 3a545e38 72760ab7","3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 0a60b1ce 1d7e819d 7a431d7c 90ea0e5f"]}),a("p521",{type:"short",prime:null,p:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff",a:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffc",b:"00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b 99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd 3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00",n:"000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409",hash:o.sha512,gRed:!1,g:["000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66","00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 3fad0761 353c7086 a272c240 88be9476 9fd16650"]}),a("curve25519",{type:"mont",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"76d06",b:"1",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:o.sha256,gRed:!1,g:["9"]}),a("ed25519",{type:"edwards",prime:"p25519",p:"7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed",a:"-1",c:"1",d:"52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3",n:"1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed",hash:o.sha256,gRed:!1,g:["216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a","6666666666666666666666666666666666666666666666666666666666666658"]});try{n=l(99)}catch(e){n=void 0}a("secp256k1",{type:"short",prime:"k256",p:"ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f",a:"0",b:"7",n:"ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141",h:"1",hash:o.sha256,beta:"7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee",lambda:"5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72",basis:[{a:"3086d221a7d46bcde86c90e49284eb15",b:"-e4437ed6010e88286f547fa90abfe4c3"},{a:"114ca50f7a8e2f3f657c1108d9d44cfd8",b:"3086d221a7d46bcde86c90e49284eb15"}],gRed:!1,g:["79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798","483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8",n]})},function(e,t,l){"use strict";var n=l(17),r=l(2),o=l(5),u=l(0),i=n.base,s=r.utils.assert;function a(e){this.twisted=1!==(0|e.a),this.mOneA=this.twisted&&-1===(0|e.a),this.extended=this.mOneA,i.call(this,"edwards",e),this.a=new o(e.a,16).umod(this.red.m),this.a=this.a.toRed(this.red),this.c=new o(e.c,16).toRed(this.red),this.c2=this.c.redSqr(),this.d=new o(e.d,16).toRed(this.red),this.dd=this.d.redAdd(this.d),s(!this.twisted||0===this.c.fromRed().cmpn(1)),this.oneC=1===(0|e.c)}function c(e,t,l,n,r){i.BasePoint.call(this,e,"projective"),null===t&&null===l&&null===n?(this.x=this.curve.zero,this.y=this.curve.one,this.z=this.curve.one,this.t=this.curve.zero,this.zOne=!0):(this.x=new o(t,16),this.y=new o(l,16),this.z=n?new o(n,16):this.curve.one,this.t=r&&new o(r,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.t&&!this.t.red&&(this.t=this.t.toRed(this.curve.red)),this.zOne=this.z===this.curve.one,this.curve.extended&&!this.t&&(this.t=this.x.redMul(this.y),this.zOne||(this.t=this.t.redMul(this.z.redInvm()))))}u(a,i),e.exports=a,a.prototype._mulA=function(e){return this.mOneA?e.redNeg():this.a.redMul(e)},a.prototype._mulC=function(e){return this.oneC?e:this.c.redMul(e)},a.prototype.jpoint=function(e,t,l,n){return this.point(e,t,l,n)},a.prototype.pointFromX=function(e,t){(e=new o(e,16)).red||(e=e.toRed(this.red));var l=e.redSqr(),n=this.c2.redSub(this.a.redMul(l)),r=this.one.redSub(this.c2.redMul(this.d).redMul(l)),u=n.redMul(r.redInvm()),i=u.redSqrt();if(0!==i.redSqr().redSub(u).cmp(this.zero))throw new Error("invalid point");var s=i.fromRed().isOdd();return(t&&!s||!t&&s)&&(i=i.redNeg()),this.point(e,i)},a.prototype.pointFromY=function(e,t){(e=new o(e,16)).red||(e=e.toRed(this.red));var l=e.redSqr(),n=l.redSub(this.c2),r=l.redMul(this.d).redMul(this.c2).redSub(this.a),u=n.redMul(r.redInvm());if(0===u.cmp(this.zero)){if(t)throw new Error("invalid point");return this.point(this.zero,e)}var i=u.redSqrt();if(0!==i.redSqr().redSub(u).cmp(this.zero))throw new Error("invalid point");return i.fromRed().isOdd()!==t&&(i=i.redNeg()),this.point(i,e)},a.prototype.validate=function(e){if(e.isInfinity())return!0;e.normalize();var t=e.x.redSqr(),l=e.y.redSqr(),n=t.redMul(this.a).redAdd(l),r=this.c2.redMul(this.one.redAdd(this.d.redMul(t).redMul(l)));return 0===n.cmp(r)},u(c,i.BasePoint),a.prototype.pointFromJSON=function(e){return c.fromJSON(this,e)},a.prototype.point=function(e,t,l,n){return new c(this,e,t,l,n)},c.fromJSON=function(e,t){return new c(e,t[0],t[1],t[2])},c.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},c.prototype.isInfinity=function(){return 0===this.x.cmpn(0)&&(0===this.y.cmp(this.z)||this.zOne&&0===this.y.cmp(this.curve.c))},c.prototype._extDbl=function(){var e=this.x.redSqr(),t=this.y.redSqr(),l=this.z.redSqr();l=l.redIAdd(l);var n=this.curve._mulA(e),r=this.x.redAdd(this.y).redSqr().redISub(e).redISub(t),o=n.redAdd(t),u=o.redSub(l),i=n.redSub(t),s=r.redMul(u),a=o.redMul(i),c=r.redMul(i),p=u.redMul(o);return this.curve.point(s,a,p,c)},c.prototype._projDbl=function(){var e,t,l,n=this.x.redAdd(this.y).redSqr(),r=this.x.redSqr(),o=this.y.redSqr();if(this.curve.twisted){var u=(a=this.curve._mulA(r)).redAdd(o);if(this.zOne)e=n.redSub(r).redSub(o).redMul(u.redSub(this.curve.two)),t=u.redMul(a.redSub(o)),l=u.redSqr().redSub(u).redSub(u);else{var i=this.z.redSqr(),s=u.redSub(i).redISub(i);e=n.redSub(r).redISub(o).redMul(s),t=u.redMul(a.redSub(o)),l=u.redMul(s)}}else{var a=r.redAdd(o);i=this.curve._mulC(this.z).redSqr(),s=a.redSub(i).redSub(i);e=this.curve._mulC(n.redISub(a)).redMul(s),t=this.curve._mulC(a).redMul(r.redISub(o)),l=a.redMul(s)}return this.curve.point(e,t,l)},c.prototype.dbl=function(){return this.isInfinity()?this:this.curve.extended?this._extDbl():this._projDbl()},c.prototype._extAdd=function(e){var t=this.y.redSub(this.x).redMul(e.y.redSub(e.x)),l=this.y.redAdd(this.x).redMul(e.y.redAdd(e.x)),n=this.t.redMul(this.curve.dd).redMul(e.t),r=this.z.redMul(e.z.redAdd(e.z)),o=l.redSub(t),u=r.redSub(n),i=r.redAdd(n),s=l.redAdd(t),a=o.redMul(u),c=i.redMul(s),p=o.redMul(s),d=u.redMul(i);return this.curve.point(a,c,d,p)},c.prototype._projAdd=function(e){var t,l,n=this.z.redMul(e.z),r=n.redSqr(),o=this.x.redMul(e.x),u=this.y.redMul(e.y),i=this.curve.d.redMul(o).redMul(u),s=r.redSub(i),a=r.redAdd(i),c=this.x.redAdd(this.y).redMul(e.x.redAdd(e.y)).redISub(o).redISub(u),p=n.redMul(s).redMul(c);return this.curve.twisted?(t=n.redMul(a).redMul(u.redSub(this.curve._mulA(o))),l=s.redMul(a)):(t=n.redMul(a).redMul(u.redSub(o)),l=this.curve._mulC(s).redMul(a)),this.curve.point(p,t,l)},c.prototype.add=function(e){return this.isInfinity()?e:e.isInfinity()?this:this.curve.extended?this._extAdd(e):this._projAdd(e)},c.prototype.mul=function(e){return this._hasDoubles(e)?this.curve._fixedNafMul(this,e):this.curve._wnafMul(this,e)},c.prototype.mulAdd=function(e,t,l){return this.curve._wnafMulAdd(1,[this,t],[e,l],2,!1)},c.prototype.jmulAdd=function(e,t,l){return this.curve._wnafMulAdd(1,[this,t],[e,l],2,!0)},c.prototype.normalize=function(){if(this.zOne)return this;var e=this.z.redInvm();return this.x=this.x.redMul(e),this.y=this.y.redMul(e),this.t&&(this.t=this.t.redMul(e)),this.z=this.curve.one,this.zOne=!0,this},c.prototype.neg=function(){return this.curve.point(this.x.redNeg(),this.y,this.z,this.t&&this.t.redNeg())},c.prototype.getX=function(){return this.normalize(),this.x.fromRed()},c.prototype.getY=function(){return this.normalize(),this.y.fromRed()},c.prototype.eq=function(e){return this===e||0===this.getX().cmp(e.getX())&&0===this.getY().cmp(e.getY())},c.prototype.eqXToP=function(e){var t=e.toRed(this.curve.red).redMul(this.z);if(0===this.x.cmp(t))return!0;for(var l=e.clone(),n=this.curve.redN.redMul(this.z);;){if(l.iadd(this.curve.n),l.cmp(this.curve.p)>=0)return!1;if(t.redIAdd(n),0===this.x.cmp(t))return!0}},c.prototype.toP=c.prototype.normalize,c.prototype.mixedAdd=c.prototype.add},function(e,t,l){"use strict";var n=l(17),r=l(5),o=l(0),u=n.base,i=l(2).utils;function s(e){u.call(this,"mont",e),this.a=new r(e.a,16).toRed(this.red),this.b=new r(e.b,16).toRed(this.red),this.i4=new r(4).toRed(this.red).redInvm(),this.two=new r(2).toRed(this.red),this.a24=this.i4.redMul(this.a.redAdd(this.two))}function a(e,t,l){u.BasePoint.call(this,e,"projective"),null===t&&null===l?(this.x=this.curve.one,this.z=this.curve.zero):(this.x=new r(t,16),this.z=new r(l,16),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)))}o(s,u),e.exports=s,s.prototype.validate=function(e){var t=e.normalize().x,l=t.redSqr(),n=l.redMul(t).redAdd(l.redMul(this.a)).redAdd(t);return 0===n.redSqrt().redSqr().cmp(n)},o(a,u.BasePoint),s.prototype.decodePoint=function(e,t){return this.point(i.toArray(e,t),1)},s.prototype.point=function(e,t){return new a(this,e,t)},s.prototype.pointFromJSON=function(e){return a.fromJSON(this,e)},a.prototype.precompute=function(){},a.prototype._encode=function(){return this.getX().toArray("be",this.curve.p.byteLength())},a.fromJSON=function(e,t){return new a(e,t[0],t[1]||e.one)},a.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" z: "+this.z.fromRed().toString(16,2)+">"},a.prototype.isInfinity=function(){return 0===this.z.cmpn(0)},a.prototype.dbl=function(){var e=this.x.redAdd(this.z).redSqr(),t=this.x.redSub(this.z).redSqr(),l=e.redSub(t),n=e.redMul(t),r=l.redMul(t.redAdd(this.curve.a24.redMul(l)));return this.curve.point(n,r)},a.prototype.add=function(){throw new Error("Not supported on Montgomery curve")},a.prototype.diffAdd=function(e,t){var l=this.x.redAdd(this.z),n=this.x.redSub(this.z),r=e.x.redAdd(e.z),o=e.x.redSub(e.z).redMul(l),u=r.redMul(n),i=t.z.redMul(o.redAdd(u).redSqr()),s=t.x.redMul(o.redISub(u).redSqr());return this.curve.point(i,s)},a.prototype.mul=function(e){for(var t=e.clone(),l=this,n=this.curve.point(null,null),r=[];0!==t.cmpn(0);t.iushrn(1))r.push(t.andln(1));for(var o=r.length-1;o>=0;o--)0===r[o]?(l=l.diffAdd(n,this),n=n.dbl()):(n=l.diffAdd(n,this),l=l.dbl());return n},a.prototype.mulAdd=function(){throw new Error("Not supported on Montgomery curve")},a.prototype.jumlAdd=function(){throw new Error("Not supported on Montgomery curve")},a.prototype.eq=function(e){return 0===this.getX().cmp(e.getX())},a.prototype.normalize=function(){return this.x=this.x.redMul(this.z.redInvm()),this.z=this.curve.one,this},a.prototype.getX=function(){return this.normalize(),this.x.fromRed()}},function(e,t,l){"use strict";var n=l(17),r=l(2),o=l(5),u=l(0),i=n.base,s=r.utils.assert;function a(e){i.call(this,"short",e),this.a=new o(e.a,16).toRed(this.red),this.b=new o(e.b,16).toRed(this.red),this.tinv=this.two.redInvm(),this.zeroA=0===this.a.fromRed().cmpn(0),this.threeA=0===this.a.fromRed().sub(this.p).cmpn(-3),this.endo=this._getEndomorphism(e),this._endoWnafT1=new Array(4),this._endoWnafT2=new Array(4)}function c(e,t,l,n){i.BasePoint.call(this,e,"affine"),null===t&&null===l?(this.x=null,this.y=null,this.inf=!0):(this.x=new o(t,16),this.y=new o(l,16),n&&(this.x.forceRed(this.curve.red),this.y.forceRed(this.curve.red)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.inf=!1)}function p(e,t,l,n){i.BasePoint.call(this,e,"jacobian"),null===t&&null===l&&null===n?(this.x=this.curve.one,this.y=this.curve.one,this.z=new o(0)):(this.x=new o(t,16),this.y=new o(l,16),this.z=new o(n,16)),this.x.red||(this.x=this.x.toRed(this.curve.red)),this.y.red||(this.y=this.y.toRed(this.curve.red)),this.z.red||(this.z=this.z.toRed(this.curve.red)),this.zOne=this.z===this.curve.one}u(a,i),e.exports=a,a.prototype._getEndomorphism=function(e){if(this.zeroA&&this.g&&this.n&&1===this.p.modn(3)){var t,l;if(e.beta)t=new o(e.beta,16).toRed(this.red);else{var n=this._getEndoRoots(this.p);t=(t=n[0].cmp(n[1])<0?n[0]:n[1]).toRed(this.red)}if(e.lambda)l=new o(e.lambda,16);else{var r=this._getEndoRoots(this.n);0===this.g.mul(r[0]).x.cmp(this.g.x.redMul(t))?l=r[0]:(l=r[1],s(0===this.g.mul(l).x.cmp(this.g.x.redMul(t))))}return{beta:t,lambda:l,basis:e.basis?e.basis.map(function(e){return{a:new o(e.a,16),b:new o(e.b,16)}}):this._getEndoBasis(l)}}},a.prototype._getEndoRoots=function(e){var t=e===this.p?this.red:o.mont(e),l=new o(2).toRed(t).redInvm(),n=l.redNeg(),r=new o(3).toRed(t).redNeg().redSqrt().redMul(l);return[n.redAdd(r).fromRed(),n.redSub(r).fromRed()]},a.prototype._getEndoBasis=function(e){for(var t,l,n,r,u,i,s,a,c,p=this.n.ushrn(Math.floor(this.n.bitLength()/2)),d=e,f=this.n.clone(),g=new o(1),h=new o(0),b=new o(0),y=new o(1),m=0;0!==d.cmpn(0);){var v=f.div(d);a=f.sub(v.mul(d)),c=b.sub(v.mul(g));var _=y.sub(v.mul(h));if(!n&&a.cmp(p)<0)t=s.neg(),l=g,n=a.neg(),r=c;else if(n&&2===++m)break;s=a,f=d,d=a,b=g,g=c,y=h,h=_}u=a.neg(),i=c;var w=n.sqr().add(r.sqr());return u.sqr().add(i.sqr()).cmp(w)>=0&&(u=t,i=l),n.negative&&(n=n.neg(),r=r.neg()),u.negative&&(u=u.neg(),i=i.neg()),[{a:n,b:r},{a:u,b:i}]},a.prototype._endoSplit=function(e){var t=this.endo.basis,l=t[0],n=t[1],r=n.b.mul(e).divRound(this.n),o=l.b.neg().mul(e).divRound(this.n),u=r.mul(l.a),i=o.mul(n.a),s=r.mul(l.b),a=o.mul(n.b);return{k1:e.sub(u).sub(i),k2:s.add(a).neg()}},a.prototype.pointFromX=function(e,t){(e=new o(e,16)).red||(e=e.toRed(this.red));var l=e.redSqr().redMul(e).redIAdd(e.redMul(this.a)).redIAdd(this.b),n=l.redSqrt();if(0!==n.redSqr().redSub(l).cmp(this.zero))throw new Error("invalid point");var r=n.fromRed().isOdd();return(t&&!r||!t&&r)&&(n=n.redNeg()),this.point(e,n)},a.prototype.validate=function(e){if(e.inf)return!0;var t=e.x,l=e.y,n=this.a.redMul(t),r=t.redSqr().redMul(t).redIAdd(n).redIAdd(this.b);return 0===l.redSqr().redISub(r).cmpn(0)},a.prototype._endoWnafMulAdd=function(e,t,l){for(var n=this._endoWnafT1,r=this._endoWnafT2,o=0;o<e.length;o++){var u=this._endoSplit(t[o]),i=e[o],s=i._getBeta();u.k1.negative&&(u.k1.ineg(),i=i.neg(!0)),u.k2.negative&&(u.k2.ineg(),s=s.neg(!0)),n[2*o]=i,n[2*o+1]=s,r[2*o]=u.k1,r[2*o+1]=u.k2}for(var a=this._wnafMulAdd(1,n,r,2*o,l),c=0;c<2*o;c++)n[c]=null,r[c]=null;return a},u(c,i.BasePoint),a.prototype.point=function(e,t,l){return new c(this,e,t,l)},a.prototype.pointFromJSON=function(e,t){return c.fromJSON(this,e,t)},c.prototype._getBeta=function(){if(this.curve.endo){var e=this.precomputed;if(e&&e.beta)return e.beta;var t=this.curve.point(this.x.redMul(this.curve.endo.beta),this.y);if(e){var l=this.curve,n=function(e){return l.point(e.x.redMul(l.endo.beta),e.y)};e.beta=t,t.precomputed={beta:null,naf:e.naf&&{wnd:e.naf.wnd,points:e.naf.points.map(n)},doubles:e.doubles&&{step:e.doubles.step,points:e.doubles.points.map(n)}}}return t}},c.prototype.toJSON=function(){return this.precomputed?[this.x,this.y,this.precomputed&&{doubles:this.precomputed.doubles&&{step:this.precomputed.doubles.step,points:this.precomputed.doubles.points.slice(1)},naf:this.precomputed.naf&&{wnd:this.precomputed.naf.wnd,points:this.precomputed.naf.points.slice(1)}}]:[this.x,this.y]},c.fromJSON=function(e,t,l){"string"===typeof t&&(t=JSON.parse(t));var n=e.point(t[0],t[1],l);if(!t[2])return n;function r(t){return e.point(t[0],t[1],l)}var o=t[2];return n.precomputed={beta:null,doubles:o.doubles&&{step:o.doubles.step,points:[n].concat(o.doubles.points.map(r))},naf:o.naf&&{wnd:o.naf.wnd,points:[n].concat(o.naf.points.map(r))}},n},c.prototype.inspect=function(){return this.isInfinity()?"<EC Point Infinity>":"<EC Point x: "+this.x.fromRed().toString(16,2)+" y: "+this.y.fromRed().toString(16,2)+">"},c.prototype.isInfinity=function(){return this.inf},c.prototype.add=function(e){if(this.inf)return e;if(e.inf)return this;if(this.eq(e))return this.dbl();if(this.neg().eq(e))return this.curve.point(null,null);if(0===this.x.cmp(e.x))return this.curve.point(null,null);var t=this.y.redSub(e.y);0!==t.cmpn(0)&&(t=t.redMul(this.x.redSub(e.x).redInvm()));var l=t.redSqr().redISub(this.x).redISub(e.x),n=t.redMul(this.x.redSub(l)).redISub(this.y);return this.curve.point(l,n)},c.prototype.dbl=function(){if(this.inf)return this;var e=this.y.redAdd(this.y);if(0===e.cmpn(0))return this.curve.point(null,null);var t=this.curve.a,l=this.x.redSqr(),n=e.redInvm(),r=l.redAdd(l).redIAdd(l).redIAdd(t).redMul(n),o=r.redSqr().redISub(this.x.redAdd(this.x)),u=r.redMul(this.x.redSub(o)).redISub(this.y);return this.curve.point(o,u)},c.prototype.getX=function(){return this.x.fromRed()},c.prototype.getY=function(){return this.y.fromRed()},c.prototype.mul=function(e){return e=new o(e,16),this._hasDoubles(e)?this.curve._fixedNafMul(this,e):this.curve.endo?this.curve._endoWnafMulAdd([this],[e]):this.curve._wnafMul(this,e)},c.prototype.mulAdd=function(e,t,l){var n=[this,t],r=[e,l];return this.curve.endo?this.curve._endoWnafMulAdd(n,r):this.curve._wnafMulAdd(1,n,r,2)},c.prototype.jmulAdd=function(e,t,l){var n=[this,t],r=[e,l];return this.curve.endo?this.curve._endoWnafMulAdd(n,r,!0):this.curve._wnafMulAdd(1,n,r,2,!0)},c.prototype.eq=function(e){return this===e||this.inf===e.inf&&(this.inf||0===this.x.cmp(e.x)&&0===this.y.cmp(e.y))},c.prototype.neg=function(e){if(this.inf)return this;var t=this.curve.point(this.x,this.y.redNeg());if(e&&this.precomputed){var l=this.precomputed,n=function(e){return e.neg()};t.precomputed={naf:l.naf&&{wnd:l.naf.wnd,points:l.naf.points.map(n)},doubles:l.doubles&&{step:l.doubles.step,points:l.doubles.points.map(n)}}}return t},c.prototype.toJ=function(){return this.inf?this.curve.jpoint(null,null,null):this.curve.jpoint(this.x,this.y,this.curve.one)},u(p,i.BasePoint),a.prototype.jpoint=function(e,t,l){return new p(this,e,t,l)},p.prototype.toP=function(){if(this.isInfinity())return this.curve.point(null,null);var e=this.z.redInvm(),t=e.redSqr(),l=this.x.redMul(t),n=this.y.redMul(t).redMul(e);return this.curve.point(l,n)},p.prototype.neg=function(){return this.curve.jpoint(this.x,this.y.redNeg(),this.z)},p.prototype.add=function(e){if(this.isInfinity())return e;if(e.isInfinity())return this;var t=e.z.redSqr(),l=this.z.redSqr(),n=this.x.redMul(t),r=e.x.redMul(l),o=this.y.redMul(t.redMul(e.z)),u=e.y.redMul(l.redMul(this.z)),i=n.redSub(r),s=o.redSub(u);if(0===i.cmpn(0))return 0!==s.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var a=i.redSqr(),c=a.redMul(i),p=n.redMul(a),d=s.redSqr().redIAdd(c).redISub(p).redISub(p),f=s.redMul(p.redISub(d)).redISub(o.redMul(c)),g=this.z.redMul(e.z).redMul(i);return this.curve.jpoint(d,f,g)},p.prototype.mixedAdd=function(e){if(this.isInfinity())return e.toJ();if(e.isInfinity())return this;var t=this.z.redSqr(),l=this.x,n=e.x.redMul(t),r=this.y,o=e.y.redMul(t).redMul(this.z),u=l.redSub(n),i=r.redSub(o);if(0===u.cmpn(0))return 0!==i.cmpn(0)?this.curve.jpoint(null,null,null):this.dbl();var s=u.redSqr(),a=s.redMul(u),c=l.redMul(s),p=i.redSqr().redIAdd(a).redISub(c).redISub(c),d=i.redMul(c.redISub(p)).redISub(r.redMul(a)),f=this.z.redMul(u);return this.curve.jpoint(p,d,f)},p.prototype.dblp=function(e){if(0===e)return this;if(this.isInfinity())return this;if(!e)return this.dbl();if(this.curve.zeroA||this.curve.threeA){for(var t=this,l=0;l<e;l++)t=t.dbl();return t}var n=this.curve.a,r=this.curve.tinv,o=this.x,u=this.y,i=this.z,s=i.redSqr().redSqr(),a=u.redAdd(u);for(l=0;l<e;l++){var c=o.redSqr(),p=a.redSqr(),d=p.redSqr(),f=c.redAdd(c).redIAdd(c).redIAdd(n.redMul(s)),g=o.redMul(p),h=f.redSqr().redISub(g.redAdd(g)),b=g.redISub(h),y=f.redMul(b);y=y.redIAdd(y).redISub(d);var m=a.redMul(i);l+1<e&&(s=s.redMul(d)),o=h,i=m,a=y}return this.curve.jpoint(o,a.redMul(r),i)},p.prototype.dbl=function(){return this.isInfinity()?this:this.curve.zeroA?this._zeroDbl():this.curve.threeA?this._threeDbl():this._dbl()},p.prototype._zeroDbl=function(){var e,t,l;if(this.zOne){var n=this.x.redSqr(),r=this.y.redSqr(),o=r.redSqr(),u=this.x.redAdd(r).redSqr().redISub(n).redISub(o);u=u.redIAdd(u);var i=n.redAdd(n).redIAdd(n),s=i.redSqr().redISub(u).redISub(u),a=o.redIAdd(o);a=(a=a.redIAdd(a)).redIAdd(a),e=s,t=i.redMul(u.redISub(s)).redISub(a),l=this.y.redAdd(this.y)}else{var c=this.x.redSqr(),p=this.y.redSqr(),d=p.redSqr(),f=this.x.redAdd(p).redSqr().redISub(c).redISub(d);f=f.redIAdd(f);var g=c.redAdd(c).redIAdd(c),h=g.redSqr(),b=d.redIAdd(d);b=(b=b.redIAdd(b)).redIAdd(b),e=h.redISub(f).redISub(f),t=g.redMul(f.redISub(e)).redISub(b),l=(l=this.y.redMul(this.z)).redIAdd(l)}return this.curve.jpoint(e,t,l)},p.prototype._threeDbl=function(){var e,t,l;if(this.zOne){var n=this.x.redSqr(),r=this.y.redSqr(),o=r.redSqr(),u=this.x.redAdd(r).redSqr().redISub(n).redISub(o);u=u.redIAdd(u);var i=n.redAdd(n).redIAdd(n).redIAdd(this.curve.a),s=i.redSqr().redISub(u).redISub(u);e=s;var a=o.redIAdd(o);a=(a=a.redIAdd(a)).redIAdd(a),t=i.redMul(u.redISub(s)).redISub(a),l=this.y.redAdd(this.y)}else{var c=this.z.redSqr(),p=this.y.redSqr(),d=this.x.redMul(p),f=this.x.redSub(c).redMul(this.x.redAdd(c));f=f.redAdd(f).redIAdd(f);var g=d.redIAdd(d),h=(g=g.redIAdd(g)).redAdd(g);e=f.redSqr().redISub(h),l=this.y.redAdd(this.z).redSqr().redISub(p).redISub(c);var b=p.redSqr();b=(b=(b=b.redIAdd(b)).redIAdd(b)).redIAdd(b),t=f.redMul(g.redISub(e)).redISub(b)}return this.curve.jpoint(e,t,l)},p.prototype._dbl=function(){var e=this.curve.a,t=this.x,l=this.y,n=this.z,r=n.redSqr().redSqr(),o=t.redSqr(),u=l.redSqr(),i=o.redAdd(o).redIAdd(o).redIAdd(e.redMul(r)),s=t.redAdd(t),a=(s=s.redIAdd(s)).redMul(u),c=i.redSqr().redISub(a.redAdd(a)),p=a.redISub(c),d=u.redSqr();d=(d=(d=d.redIAdd(d)).redIAdd(d)).redIAdd(d);var f=i.redMul(p).redISub(d),g=l.redAdd(l).redMul(n);return this.curve.jpoint(c,f,g)},p.prototype.trpl=function(){if(!this.curve.zeroA)return this.dbl().add(this);var e=this.x.redSqr(),t=this.y.redSqr(),l=this.z.redSqr(),n=t.redSqr(),r=e.redAdd(e).redIAdd(e),o=r.redSqr(),u=this.x.redAdd(t).redSqr().redISub(e).redISub(n),i=(u=(u=(u=u.redIAdd(u)).redAdd(u).redIAdd(u)).redISub(o)).redSqr(),s=n.redIAdd(n);s=(s=(s=s.redIAdd(s)).redIAdd(s)).redIAdd(s);var a=r.redIAdd(u).redSqr().redISub(o).redISub(i).redISub(s),c=t.redMul(a);c=(c=c.redIAdd(c)).redIAdd(c);var p=this.x.redMul(i).redISub(c);p=(p=p.redIAdd(p)).redIAdd(p);var d=this.y.redMul(a.redMul(s.redISub(a)).redISub(u.redMul(i)));d=(d=(d=d.redIAdd(d)).redIAdd(d)).redIAdd(d);var f=this.z.redAdd(u).redSqr().redISub(l).redISub(i);return this.curve.jpoint(p,d,f)},p.prototype.mul=function(e,t){return e=new o(e,t),this.curve._wnafMul(this,e)},p.prototype.eq=function(e){if("affine"===e.type)return this.eq(e.toJ());if(this===e)return!0;var t=this.z.redSqr(),l=e.z.redSqr();if(0!==this.x.redMul(l).redISub(e.x.redMul(t)).cmpn(0))return!1;var n=t.redMul(this.z),r=l.redMul(e.z);return 0===this.y.redMul(r).redISub(e.y.redMul(n)).cmpn(0)},p.prototype.eqXToP=function(e){var t=this.z.redSqr(),l=e.toRed(this.curve.red).redMul(t);if(0===this.x.cmp(l))return!0;for(var n=e.clone(),r=this.curve.redN.redMul(t);;){if(n.iadd(this.curve.n),n.cmp(this.curve.p)>=0)return!1;if(l.redIAdd(r),0===this.x.cmp(l))return!0}},p.prototype.inspect=function(){return this.isInfinity()?"<EC JPoint Infinity>":"<EC JPoint x: "+this.x.toString(16,2)+" y: "+this.y.toString(16,2)+" z: "+this.z.toString(16,2)+">"},p.prototype.isInfinity=function(){return 0===this.z.cmpn(0)}},function(e,t,l){"use strict";var n=l(5),r=l(2).utils,o=r.getNAF,u=r.getJSF,i=r.assert;function s(e,t){this.type=e,this.p=new n(t.p,16),this.red=t.prime?n.red(t.prime):n.mont(this.p),this.zero=new n(0).toRed(this.red),this.one=new n(1).toRed(this.red),this.two=new n(2).toRed(this.red),this.n=t.n&&new n(t.n,16),this.g=t.g&&this.pointFromJSON(t.g,t.gRed),this._wnafT1=new Array(4),this._wnafT2=new Array(4),this._wnafT3=new Array(4),this._wnafT4=new Array(4);var l=this.n&&this.p.div(this.n);!l||l.cmpn(100)>0?this.redN=null:(this._maxwellTrick=!0,this.redN=this.n.toRed(this.red))}function a(e,t){this.curve=e,this.type=t,this.precomputed=null}e.exports=s,s.prototype.point=function(){throw new Error("Not implemented")},s.prototype.validate=function(){throw new Error("Not implemented")},s.prototype._fixedNafMul=function(e,t){i(e.precomputed);var l=e._getDoubles(),n=o(t,1),r=(1<<l.step+1)-(l.step%2===0?2:1);r/=3;for(var u=[],s=0;s<n.length;s+=l.step){var a=0;for(t=s+l.step-1;t>=s;t--)a=(a<<1)+n[t];u.push(a)}for(var c=this.jpoint(null,null,null),p=this.jpoint(null,null,null),d=r;d>0;d--){for(s=0;s<u.length;s++){(a=u[s])===d?p=p.mixedAdd(l.points[s]):a===-d&&(p=p.mixedAdd(l.points[s].neg()))}c=c.add(p)}return c.toP()},s.prototype._wnafMul=function(e,t){var l=4,n=e._getNAFPoints(l);l=n.wnd;for(var r=n.points,u=o(t,l),s=this.jpoint(null,null,null),a=u.length-1;a>=0;a--){for(t=0;a>=0&&0===u[a];a--)t++;if(a>=0&&t++,s=s.dblp(t),a<0)break;var c=u[a];i(0!==c),s="affine"===e.type?c>0?s.mixedAdd(r[c-1>>1]):s.mixedAdd(r[-c-1>>1].neg()):c>0?s.add(r[c-1>>1]):s.add(r[-c-1>>1].neg())}return"affine"===e.type?s.toP():s},s.prototype._wnafMulAdd=function(e,t,l,n,r){for(var i=this._wnafT1,s=this._wnafT2,a=this._wnafT3,c=0,p=0;p<n;p++){var d=(T=t[p])._getNAFPoints(e);i[p]=d.wnd,s[p]=d.points}for(p=n-1;p>=1;p-=2){var f=p-1,g=p;if(1===i[f]&&1===i[g]){var h=[t[f],null,null,t[g]];0===t[f].y.cmp(t[g].y)?(h[1]=t[f].add(t[g]),h[2]=t[f].toJ().mixedAdd(t[g].neg())):0===t[f].y.cmp(t[g].y.redNeg())?(h[1]=t[f].toJ().mixedAdd(t[g]),h[2]=t[f].add(t[g].neg())):(h[1]=t[f].toJ().mixedAdd(t[g]),h[2]=t[f].toJ().mixedAdd(t[g].neg()));var b=[-3,-1,-5,-7,0,7,5,1,3],y=u(l[f],l[g]);c=Math.max(y[0].length,c),a[f]=new Array(c),a[g]=new Array(c);for(var m=0;m<c;m++){var v=0|y[0][m],_=0|y[1][m];a[f][m]=b[3*(v+1)+(_+1)],a[g][m]=0,s[f]=h}}else a[f]=o(l[f],i[f]),a[g]=o(l[g],i[g]),c=Math.max(a[f].length,c),c=Math.max(a[g].length,c)}var w=this.jpoint(null,null,null),A=this._wnafT4;for(p=c;p>=0;p--){for(var B=0;p>=0;){var M=!0;for(m=0;m<n;m++)A[m]=0|a[m][p],0!==A[m]&&(M=!1);if(!M)break;B++,p--}if(p>=0&&B++,w=w.dblp(B),p<0)break;for(m=0;m<n;m++){var T,E=A[m];0!==E&&(E>0?T=s[m][E-1>>1]:E<0&&(T=s[m][-E-1>>1].neg()),w="affine"===T.type?w.mixedAdd(T):w.add(T))}}for(p=0;p<n;p++)s[p]=null;return r?w:w.toP()},s.BasePoint=a,a.prototype.eq=function(){throw new Error("Not implemented")},a.prototype.validate=function(){return this.curve.validate(this)},s.prototype.decodePoint=function(e,t){e=r.toArray(e,t);var l=this.p.byteLength();if((4===e[0]||6===e[0]||7===e[0])&&e.length-1===2*l)return 6===e[0]?i(e[e.length-1]%2===0):7===e[0]&&i(e[e.length-1]%2===1),this.point(e.slice(1,1+l),e.slice(1+l,1+2*l));if((2===e[0]||3===e[0])&&e.length-1===l)return this.pointFromX(e.slice(1,1+l),3===e[0]);throw new Error("Unknown point format")},a.prototype.encodeCompressed=function(e){return this.encode(e,!0)},a.prototype._encode=function(e){var t=this.curve.p.byteLength(),l=this.getX().toArray("be",t);return e?[this.getY().isEven()?2:3].concat(l):[4].concat(l,this.getY().toArray("be",t))},a.prototype.encode=function(e,t){return r.encode(this._encode(t),e)},a.prototype.precompute=function(e){if(this.precomputed)return this;var t={doubles:null,naf:null,beta:null};return t.naf=this._getNAFPoints(8),t.doubles=this._getDoubles(4,e),t.beta=this._getBeta(),this.precomputed=t,this},a.prototype._hasDoubles=function(e){if(!this.precomputed)return!1;var t=this.precomputed.doubles;return!!t&&t.points.length>=Math.ceil((e.bitLength()+1)/t.step)},a.prototype._getDoubles=function(e,t){if(this.precomputed&&this.precomputed.doubles)return this.precomputed.doubles;for(var l=[this],n=this,r=0;r<t;r+=e){for(var o=0;o<e;o++)n=n.dbl();l.push(n)}return{step:e,points:l}},a.prototype._getNAFPoints=function(e){if(this.precomputed&&this.precomputed.naf)return this.precomputed.naf;for(var t=[this],l=(1<<e)-1,n=1===l?null:this.dbl(),r=1;r<l;r++)t[r]=t[r-1].add(n);return{wnd:e,points:t}},a.prototype._getBeta=function(){return null},a.prototype.dblp=function(e){for(var t=this,l=0;l<e;l++)t=t.dbl();return t}},function(e,t){},function(e,t,l){function n(e){return(n="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var r;function o(e){this.rand=e}if(e.exports=function(e){return r||(r=new o(null)),r.generate(e)},e.exports.Rand=o,o.prototype.generate=function(e){return this._rand(e)},o.prototype._rand=function(e){if(this.rand.getBytes)return this.rand.getBytes(e);for(var t=new Uint8Array(e),l=0;l<t.length;l++)t[l]=this.rand.getByte();return t},"object"===("undefined"===typeof self?"undefined":n(self)))self.crypto&&self.crypto.getRandomValues?o.prototype._rand=function(e){var t=new Uint8Array(e);return self.crypto.getRandomValues(t),t}:self.msCrypto&&self.msCrypto.getRandomValues?o.prototype._rand=function(e){var t=new Uint8Array(e);return self.msCrypto.getRandomValues(t),t}:"object"===("undefined"===typeof window?"undefined":n(window))&&(o.prototype._rand=function(){throw new Error("Not implemented yet")});else try{var u=l(111);if("function"!==typeof u.randomBytes)throw new Error("Not supported");o.prototype._rand=function(e){return u.randomBytes(e)}}catch(e){}},function(e,t){},function(e,t,l){"use strict";var n=t,r=l(5),o=l(9),u=l(47);n.assert=o,n.toArray=u.toArray,n.zero2=u.zero2,n.toHex=u.toHex,n.encode=u.encode,n.getNAF=function(e,t){for(var l=[],n=1<<t+1,r=e.clone();r.cmpn(1)>=0;){var o;if(r.isOdd()){var u=r.andln(n-1);o=u>(n>>1)-1?(n>>1)-u:u,r.isubn(o)}else o=0;l.push(o);for(var i=0!==r.cmpn(0)&&0===r.andln(n-1)?t+1:1,s=1;s<i;s++)l.push(0);r.iushrn(i)}return l},n.getJSF=function(e,t){var l=[[],[]];e=e.clone(),t=t.clone();for(var n=0,r=0;e.cmpn(-n)>0||t.cmpn(-r)>0;){var o,u,i,s=e.andln(3)+n&3,a=t.andln(3)+r&3;3===s&&(s=-1),3===a&&(a=-1),o=0===(1&s)?0:3!==(i=e.andln(7)+n&7)&&5!==i||2!==a?s:-s,l[0].push(o),u=0===(1&a)?0:3!==(i=t.andln(7)+r&7)&&5!==i||2!==s?a:-a,l[1].push(u),2*n===o+1&&(n=1-n),2*r===u+1&&(r=1-r),e.iushrn(1),t.iushrn(1)}return l},n.cachedProperty=function(e,t,l){var n="_"+t;e.prototype[t]=function(){return void 0!==this[n]?this[n]:this[n]=l.call(this)}},n.parseBytes=function(e){return"string"===typeof e?n.toArray(e,"hex"):e},n.intFromLE=function(e){return new r(e,"hex","le")}},function(e){e.exports={name:"elliptic",version:"6.4.1",description:"EC cryptography",main:"lib/elliptic.js",files:["lib"],scripts:{jscs:"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",jshint:"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js",lint:"npm run jscs && npm run jshint",unit:"istanbul test _mocha --reporter=spec test/index.js",test:"npm run lint && npm run unit",version:"grunt dist && git add dist/"},repository:{type:"git",url:"git@github.com:indutny/elliptic"},keywords:["EC","Elliptic","curve","Cryptography"],author:"Fedor Indutny <fedor@indutny.com>",license:"MIT",bugs:{url:"https://github.com/indutny/elliptic/issues"},homepage:"https://github.com/indutny/elliptic",devDependencies:{brfs:"^1.4.3",coveralls:"^2.11.3",grunt:"^0.4.5","grunt-browserify":"^5.0.0","grunt-cli":"^1.2.0","grunt-contrib-connect":"^1.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^1.0.1","grunt-mocha-istanbul":"^3.0.1","grunt-saucelabs":"^8.6.2",istanbul:"^0.4.2",jscs:"^2.9.0",jshint:"^2.6.0",mocha:"^2.1.0"},dependencies:{"bn.js":"^4.4.0",brorand:"^1.0.1","hash.js":"^1.0.0","hmac-drbg":"^1.0.0",inherits:"^2.0.1","minimalistic-assert":"^1.0.0","minimalistic-crypto-utils":"^1.0.0"}}},function(e,t){t.Base64=function(){_keyStr="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",this.encode=function(e){for(var t,l,n,r,o,u,i,s="",a=0;a<e.length;)r=(t=e.charCodeAt(a++))>>2,o=(3&t)<<4|(l=e.charCodeAt(a++))>>4,u=(15&l)<<2|(n=e.charCodeAt(a++))>>6,i=63&n,isNaN(l)?u=i=64:isNaN(n)&&(i=64),s=s+_keyStr.charAt(r)+_keyStr.charAt(o)+_keyStr.charAt(u)+_keyStr.charAt(i);return s},this.encodeIgnoreUtf8=function(e){for(var t,l,n,r,o,u,i,s="",a=0;a<e.length;)r=(t=e[a++])>>2,o=(3&t)<<4|(l=e[a++])>>4,u=(15&l)<<2|(n=e[a++])>>6,i=63&n,isNaN(l)?u=i=64:isNaN(n)&&(i=64),s=s+_keyStr.charAt(r)+_keyStr.charAt(o)+_keyStr.charAt(u)+_keyStr.charAt(i);return s},this.decode=function(e){var t,l,n,r,o,u,i="",s=0;for(e=e.replace(/[^A-Za-z0-9\+\/\=]/g,"");s<e.length;)t=_keyStr.indexOf(e.charAt(s++))<<2|(r=_keyStr.indexOf(e.charAt(s++)))>>4,l=(15&r)<<4|(o=_keyStr.indexOf(e.charAt(s++)))>>2,n=(3&o)<<6|(u=_keyStr.indexOf(e.charAt(s++))),i+=String.fromCharCode(t),64!=o&&(i+=String.fromCharCode(l)),64!=u&&(i+=String.fromCharCode(n));return i=_utf8_decode(i)},this.decodeToByteArray=function(e){var t,l,n,r,o,u,i="",s=0;for(e=e.replace(/[^A-Za-z0-9\+\/\=]/g,"");s<e.length;)t=_keyStr.indexOf(e.charAt(s++))<<2|(r=_keyStr.indexOf(e.charAt(s++)))>>4,l=(15&r)<<4|(o=_keyStr.indexOf(e.charAt(s++)))>>2,n=(3&o)<<6|(u=_keyStr.indexOf(e.charAt(s++))),i+=String.fromCharCode(t),64!=o&&(i+=String.fromCharCode(l)),64!=u&&(i+=String.fromCharCode(n));return _out2ByteArray(i)},_out2ByteArray=function(e){for(var t=new Array(e.length),l=0,n=c1=c2=0;l<e.length;)n=e.charCodeAt(l),t[l]=n,l++;return t},_utf8_encode=function(e){e=e.replace(/\r\n/g,"\n");for(var t="",l=0;l<e.length;l++){var n=e.charCodeAt(l);n<128?t+=String.fromCharCode(n):n>127&&n<2048?(t+=String.fromCharCode(n>>6|192),t+=String.fromCharCode(63&n|128)):(t+=String.fromCharCode(n>>12|224),t+=String.fromCharCode(n>>6&63|128),t+=String.fromCharCode(63&n|128))}return t},_utf8_decode=function(e){for(var t="",l=0,n=c1=c2=0;l<e.length;)(n=e.charCodeAt(l))<128?(t+=String.fromCharCode(n),l++):n>191&&n<224?(c2=e.charCodeAt(l+1),t+=String.fromCharCode((31&n)<<6|63&c2),l+=2):(c2=e.charCodeAt(l+1),c3=e.charCodeAt(l+2),t+=String.fromCharCode((15&n)<<12|(63&c2)<<6|63&c3),l+=3);return t}}},function(e,t,l){(function(t){!function(){"use strict";e.exports=function(e){return(e instanceof t?e:t.from(e.toString(),"binary")).toString("base64")}}()}).call(this,l(6).Buffer)},function(e,t){!function(t){"use strict";"undefined"!==typeof e&&e.exports&&(e.exports=t),t["encoding-indexes"]={big5:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,17392,19506,17923,17830,17784,160359,19831,17843,162993,19682,163013,15253,18230,18244,19527,19520,148159,144919,160594,159371,159954,19543,172881,18255,17882,19589,162924,19719,19108,18081,158499,29221,154196,137827,146950,147297,26189,22267,null,32149,22813,166841,15860,38708,162799,23515,138590,23204,13861,171696,23249,23479,23804,26478,34195,170309,29793,29853,14453,138579,145054,155681,16108,153822,15093,31484,40855,147809,166157,143850,133770,143966,17162,33924,40854,37935,18736,34323,22678,38730,37400,31184,31282,26208,27177,34973,29772,31685,26498,31276,21071,36934,13542,29636,155065,29894,40903,22451,18735,21580,16689,145038,22552,31346,162661,35727,18094,159368,16769,155033,31662,140476,40904,140481,140489,140492,40905,34052,144827,16564,40906,17633,175615,25281,28782,40907,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,12736,12737,12738,12739,12740,131340,12741,131281,131277,12742,12743,131275,139240,12744,131274,12745,12746,12747,12748,131342,12749,12750,256,193,461,192,274,201,282,200,332,211,465,210,null,7870,null,7872,202,257,225,462,224,593,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,null,7871,null,7873,234,609,9178,9179,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,172969,135493,null,25866,null,null,20029,28381,40270,37343,null,null,161589,25745,20250,20264,20392,20822,20852,20892,20964,21153,21160,21307,21326,21457,21464,22242,22768,22788,22791,22834,22836,23398,23454,23455,23706,24198,24635,25993,26622,26628,26725,27982,28860,30005,32420,32428,32442,32455,32463,32479,32518,32567,33402,33487,33647,35270,35774,35810,36710,36711,36718,29713,31996,32205,26950,31433,21031,null,null,null,null,37260,30904,37214,32956,null,36107,33014,133607,null,null,32927,40647,19661,40393,40460,19518,171510,159758,40458,172339,13761,null,28314,33342,29977,null,18705,39532,39567,40857,31111,164972,138698,132560,142054,20004,20097,20096,20103,20159,20203,20279,13388,20413,15944,20483,20616,13437,13459,13477,20870,22789,20955,20988,20997,20105,21113,21136,21287,13767,21417,13649,21424,13651,21442,21539,13677,13682,13953,21651,21667,21684,21689,21712,21743,21784,21795,21800,13720,21823,13733,13759,21975,13765,163204,21797,null,134210,134421,151851,21904,142534,14828,131905,36422,150968,169189,16467,164030,30586,142392,14900,18389,164189,158194,151018,25821,134524,135092,134357,135412,25741,36478,134806,134155,135012,142505,164438,148691,null,134470,170573,164073,18420,151207,142530,39602,14951,169460,16365,13574,152263,169940,161992,142660,40302,38933,null,17369,155813,25780,21731,142668,142282,135287,14843,135279,157402,157462,162208,25834,151634,134211,36456,139681,166732,132913,null,18443,131497,16378,22643,142733,null,148936,132348,155799,134988,134550,21881,16571,17338,null,19124,141926,135325,33194,39157,134556,25465,14846,141173,36288,22177,25724,15939,null,173569,134665,142031,142537,null,135368,145858,14738,14854,164507,13688,155209,139463,22098,134961,142514,169760,13500,27709,151099,null,null,161140,142987,139784,173659,167117,134778,134196,157724,32659,135375,141315,141625,13819,152035,134796,135053,134826,16275,134960,134471,135503,134732,null,134827,134057,134472,135360,135485,16377,140950,25650,135085,144372,161337,142286,134526,134527,142417,142421,14872,134808,135367,134958,173618,158544,167122,167321,167114,38314,21708,33476,21945,null,171715,39974,39606,161630,142830,28992,33133,33004,23580,157042,33076,14231,21343,164029,37302,134906,134671,134775,134907,13789,151019,13833,134358,22191,141237,135369,134672,134776,135288,135496,164359,136277,134777,151120,142756,23124,135197,135198,135413,135414,22428,134673,161428,164557,135093,134779,151934,14083,135094,135552,152280,172733,149978,137274,147831,164476,22681,21096,13850,153405,31666,23400,18432,19244,40743,18919,39967,39821,154484,143677,22011,13810,22153,20008,22786,138177,194680,38737,131206,20059,20155,13630,23587,24401,24516,14586,25164,25909,27514,27701,27706,28780,29227,20012,29357,149737,32594,31035,31993,32595,156266,13505,null,156491,32770,32896,157202,158033,21341,34916,35265,161970,35744,36125,38021,38264,38271,38376,167439,38886,39029,39118,39134,39267,17e4,40060,40479,40644,27503,63751,20023,131207,38429,25143,38050,null,20539,28158,171123,40870,15817,34959,147790,28791,23797,19232,152013,13657,154928,24866,166450,36775,37366,29073,26393,29626,144001,172295,15499,137600,19216,30948,29698,20910,165647,16393,27235,172730,16931,34319,133743,31274,170311,166634,38741,28749,21284,139390,37876,30425,166371,40871,30685,20131,20464,20668,20015,20247,40872,21556,32139,22674,22736,138678,24210,24217,24514,141074,25995,144377,26905,27203,146531,27903,null,29184,148741,29580,16091,150035,23317,29881,35715,154788,153237,31379,31724,31939,32364,33528,34199,40873,34960,40874,36537,40875,36815,34143,39392,37409,40876,167353,136255,16497,17058,23066,null,null,null,39016,26475,17014,22333,null,34262,149883,33471,160013,19585,159092,23931,158485,159678,40877,40878,23446,40879,26343,32347,28247,31178,15752,17603,143958,141206,17306,17718,null,23765,146202,35577,23672,15634,144721,23928,40882,29015,17752,147692,138787,19575,14712,13386,131492,158785,35532,20404,131641,22975,33132,38998,170234,24379,134047,null,139713,166253,16642,18107,168057,16135,40883,172469,16632,14294,18167,158790,16764,165554,160767,17773,14548,152730,17761,17691,19849,19579,19830,17898,16328,150287,13921,17630,17597,16877,23870,23880,23894,15868,14351,23972,23993,14368,14392,24130,24253,24357,24451,14600,14612,14655,14669,24791,24893,23781,14729,25015,25017,25039,14776,25132,25232,25317,25368,14840,22193,14851,25570,25595,25607,25690,14923,25792,23829,22049,40863,14999,25990,15037,26111,26195,15090,26258,15138,26390,15170,26532,26624,15192,26698,26756,15218,15217,15227,26889,26947,29276,26980,27039,27013,15292,27094,15325,27237,27252,27249,27266,15340,27289,15346,27307,27317,27348,27382,27521,27585,27626,27765,27818,15563,27906,27910,27942,28033,15599,28068,28081,28181,28184,28201,28294,166336,28347,28386,28378,40831,28392,28393,28452,28468,15686,147265,28545,28606,15722,15733,29111,23705,15754,28716,15761,28752,28756,28783,28799,28809,131877,17345,13809,134872,147159,22462,159443,28990,153568,13902,27042,166889,23412,31305,153825,169177,31333,31357,154028,31419,31408,31426,31427,29137,156813,16842,31450,31453,31466,16879,21682,154625,31499,31573,31529,152334,154878,31650,31599,33692,154548,158847,31696,33825,31634,31672,154912,15789,154725,33938,31738,31750,31797,154817,31812,31875,149634,31910,26237,148856,31945,31943,31974,31860,31987,31989,31950,32359,17693,159300,32093,159446,29837,32137,32171,28981,32179,32210,147543,155689,32228,15635,32245,137209,32229,164717,32285,155937,155994,32366,32402,17195,37996,32295,32576,32577,32583,31030,156368,39393,32663,156497,32675,136801,131176,17756,145254,17667,164666,32762,156809,32773,32776,32797,32808,32815,172167,158915,32827,32828,32865,141076,18825,157222,146915,157416,26405,32935,166472,33031,33050,22704,141046,27775,156824,151480,25831,136330,33304,137310,27219,150117,150165,17530,33321,133901,158290,146814,20473,136445,34018,33634,158474,149927,144688,137075,146936,33450,26907,194964,16859,34123,33488,33562,134678,137140,14017,143741,144730,33403,33506,33560,147083,159139,158469,158615,144846,15807,33565,21996,33669,17675,159141,33708,33729,33747,13438,159444,27223,34138,13462,159298,143087,33880,154596,33905,15827,17636,27303,33866,146613,31064,33960,158614,159351,159299,34014,33807,33681,17568,33939,34020,154769,16960,154816,17731,34100,23282,159385,17703,34163,17686,26559,34326,165413,165435,34241,159880,34306,136578,159949,194994,17770,34344,13896,137378,21495,160666,34430,34673,172280,34798,142375,34737,34778,34831,22113,34412,26710,17935,34885,34886,161248,146873,161252,34910,34972,18011,34996,34997,25537,35013,30583,161551,35207,35210,35238,35241,35239,35260,166437,35303,162084,162493,35484,30611,37374,35472,162393,31465,162618,147343,18195,162616,29052,35596,35615,152624,152933,35647,35660,35661,35497,150138,35728,35739,35503,136927,17941,34895,35995,163156,163215,195028,14117,163155,36054,163224,163261,36114,36099,137488,36059,28764,36113,150729,16080,36215,36265,163842,135188,149898,15228,164284,160012,31463,36525,36534,36547,37588,36633,36653,164709,164882,36773,37635,172703,133712,36787,18730,166366,165181,146875,24312,143970,36857,172052,165564,165121,140069,14720,159447,36919,165180,162494,36961,165228,165387,37032,165651,37060,165606,37038,37117,37223,15088,37289,37316,31916,166195,138889,37390,27807,37441,37474,153017,37561,166598,146587,166668,153051,134449,37676,37739,166625,166891,28815,23235,166626,166629,18789,37444,166892,166969,166911,37747,37979,36540,38277,38310,37926,38304,28662,17081,140922,165592,135804,146990,18911,27676,38523,38550,16748,38563,159445,25050,38582,30965,166624,38589,21452,18849,158904,131700,156688,168111,168165,150225,137493,144138,38705,34370,38710,18959,17725,17797,150249,28789,23361,38683,38748,168405,38743,23370,168427,38751,37925,20688,143543,143548,38793,38815,38833,38846,38848,38866,38880,152684,38894,29724,169011,38911,38901,168989,162170,19153,38964,38963,38987,39014,15118,160117,15697,132656,147804,153350,39114,39095,39112,39111,19199,159015,136915,21936,39137,39142,39148,37752,39225,150057,19314,170071,170245,39413,39436,39483,39440,39512,153381,14020,168113,170965,39648,39650,170757,39668,19470,39700,39725,165376,20532,39732,158120,14531,143485,39760,39744,171326,23109,137315,39822,148043,39938,39935,39948,171624,40404,171959,172434,172459,172257,172323,172511,40318,40323,172340,40462,26760,40388,139611,172435,172576,137531,172595,40249,172217,172724,40592,40597,40606,40610,19764,40618,40623,148324,40641,15200,14821,15645,20274,14270,166955,40706,40712,19350,37924,159138,40727,40726,40761,22175,22154,40773,39352,168075,38898,33919,40802,40809,31452,40846,29206,19390,149877,149947,29047,150008,148296,150097,29598,166874,137466,31135,166270,167478,37737,37875,166468,37612,37761,37835,166252,148665,29207,16107,30578,31299,28880,148595,148472,29054,137199,28835,137406,144793,16071,137349,152623,137208,14114,136955,137273,14049,137076,137425,155467,14115,136896,22363,150053,136190,135848,136134,136374,34051,145062,34051,33877,149908,160101,146993,152924,147195,159826,17652,145134,170397,159526,26617,14131,15381,15847,22636,137506,26640,16471,145215,147681,147595,147727,158753,21707,22174,157361,22162,135135,134056,134669,37830,166675,37788,20216,20779,14361,148534,20156,132197,131967,20299,20362,153169,23144,131499,132043,14745,131850,132116,13365,20265,131776,167603,131701,35546,131596,20120,20685,20749,20386,20227,150030,147082,20290,20526,20588,20609,20428,20453,20568,20732,20825,20827,20829,20830,28278,144789,147001,147135,28018,137348,147081,20904,20931,132576,17629,132259,132242,132241,36218,166556,132878,21081,21156,133235,21217,37742,18042,29068,148364,134176,149932,135396,27089,134685,29817,16094,29849,29716,29782,29592,19342,150204,147597,21456,13700,29199,147657,21940,131909,21709,134086,22301,37469,38644,37734,22493,22413,22399,13886,22731,23193,166470,136954,137071,136976,23084,22968,37519,23166,23247,23058,153926,137715,137313,148117,14069,27909,29763,23073,155267,23169,166871,132115,37856,29836,135939,28933,18802,37896,166395,37821,14240,23582,23710,24158,24136,137622,137596,146158,24269,23375,137475,137476,14081,137376,14045,136958,14035,33066,166471,138682,144498,166312,24332,24334,137511,137131,23147,137019,23364,34324,161277,34912,24702,141408,140843,24539,16056,140719,140734,168072,159603,25024,131134,131142,140827,24985,24984,24693,142491,142599,149204,168269,25713,149093,142186,14889,142114,144464,170218,142968,25399,173147,25782,25393,25553,149987,142695,25252,142497,25659,25963,26994,15348,143502,144045,149897,144043,21773,144096,137433,169023,26318,144009,143795,15072,16784,152964,166690,152975,136956,152923,152613,30958,143619,137258,143924,13412,143887,143746,148169,26254,159012,26219,19347,26160,161904,138731,26211,144082,144097,26142,153714,14545,145466,145340,15257,145314,144382,29904,15254,26511,149034,26806,26654,15300,27326,14435,145365,148615,27187,27218,27337,27397,137490,25873,26776,27212,15319,27258,27479,147392,146586,37792,37618,166890,166603,37513,163870,166364,37991,28069,28427,149996,28007,147327,15759,28164,147516,23101,28170,22599,27940,30786,28987,148250,148086,28913,29264,29319,29332,149391,149285,20857,150180,132587,29818,147192,144991,150090,149783,155617,16134,16049,150239,166947,147253,24743,16115,29900,29756,37767,29751,17567,159210,17745,30083,16227,150745,150790,16216,30037,30323,173510,15129,29800,166604,149931,149902,15099,15821,150094,16127,149957,149747,37370,22322,37698,166627,137316,20703,152097,152039,30584,143922,30478,30479,30587,149143,145281,14942,149744,29752,29851,16063,150202,150215,16584,150166,156078,37639,152961,30750,30861,30856,30930,29648,31065,161601,153315,16654,31131,33942,31141,27181,147194,31290,31220,16750,136934,16690,37429,31217,134476,149900,131737,146874,137070,13719,21867,13680,13994,131540,134157,31458,23129,141045,154287,154268,23053,131675,30960,23082,154566,31486,16889,31837,31853,16913,154547,155324,155302,31949,150009,137136,31886,31868,31918,27314,32220,32263,32211,32590,156257,155996,162632,32151,155266,17002,158581,133398,26582,131150,144847,22468,156690,156664,149858,32733,31527,133164,154345,154947,31500,155150,39398,34373,39523,27164,144447,14818,150007,157101,39455,157088,33920,160039,158929,17642,33079,17410,32966,33033,33090,157620,39107,158274,33378,33381,158289,33875,159143,34320,160283,23174,16767,137280,23339,137377,23268,137432,34464,195004,146831,34861,160802,23042,34926,20293,34951,35007,35046,35173,35149,153219,35156,161669,161668,166901,166873,166812,166393,16045,33955,18165,18127,14322,35389,35356,169032,24397,37419,148100,26068,28969,28868,137285,40301,35999,36073,163292,22938,30659,23024,17262,14036,36394,36519,150537,36656,36682,17140,27736,28603,140065,18587,28537,28299,137178,39913,14005,149807,37051,37015,21873,18694,37307,37892,166475,16482,166652,37927,166941,166971,34021,35371,38297,38311,38295,38294,167220,29765,16066,149759,150082,148458,16103,143909,38543,167655,167526,167525,16076,149997,150136,147438,29714,29803,16124,38721,168112,26695,18973,168083,153567,38749,37736,166281,166950,166703,156606,37562,23313,35689,18748,29689,147995,38811,38769,39224,134950,24001,166853,150194,38943,169178,37622,169431,37349,17600,166736,150119,166756,39132,166469,16128,37418,18725,33812,39227,39245,162566,15869,39323,19311,39338,39516,166757,153800,27279,39457,23294,39471,170225,19344,170312,39356,19389,19351,37757,22642,135938,22562,149944,136424,30788,141087,146872,26821,15741,37976,14631,24912,141185,141675,24839,40015,40019,40059,39989,39952,39807,39887,171565,39839,172533,172286,40225,19630,147716,40472,19632,40204,172468,172269,172275,170287,40357,33981,159250,159711,158594,34300,17715,159140,159364,159216,33824,34286,159232,145367,155748,31202,144796,144960,18733,149982,15714,37851,37566,37704,131775,30905,37495,37965,20452,13376,36964,152925,30781,30804,30902,30795,137047,143817,149825,13978,20338,28634,28633,28702,28702,21524,147893,22459,22771,22410,40214,22487,28980,13487,147884,29163,158784,151447,23336,137141,166473,24844,23246,23051,17084,148616,14124,19323,166396,37819,37816,137430,134941,33906,158912,136211,148218,142374,148417,22932,146871,157505,32168,155995,155812,149945,149899,166394,37605,29666,16105,29876,166755,137375,16097,150195,27352,29683,29691,16086,150078,150164,137177,150118,132007,136228,149989,29768,149782,28837,149878,37508,29670,37727,132350,37681,166606,166422,37766,166887,153045,18741,166530,29035,149827,134399,22180,132634,134123,134328,21762,31172,137210,32254,136898,150096,137298,17710,37889,14090,166592,149933,22960,137407,137347,160900,23201,14050,146779,14e3,37471,23161,166529,137314,37748,15565,133812,19094,14730,20724,15721,15692,136092,29045,17147,164376,28175,168164,17643,27991,163407,28775,27823,15574,147437,146989,28162,28428,15727,132085,30033,14012,13512,18048,16090,18545,22980,37486,18750,36673,166940,158656,22546,22472,14038,136274,28926,148322,150129,143331,135856,140221,26809,26983,136088,144613,162804,145119,166531,145366,144378,150687,27162,145069,158903,33854,17631,17614,159014,159057,158850,159710,28439,160009,33597,137018,33773,158848,159827,137179,22921,23170,137139,23137,23153,137477,147964,14125,23023,137020,14023,29070,37776,26266,148133,23150,23083,148115,27179,147193,161590,148571,148170,28957,148057,166369,20400,159016,23746,148686,163405,148413,27148,148054,135940,28838,28979,148457,15781,27871,194597,150095,32357,23019,23855,15859,24412,150109,137183,32164,33830,21637,146170,144128,131604,22398,133333,132633,16357,139166,172726,28675,168283,23920,29583,31955,166489,168992,20424,32743,29389,29456,162548,29496,29497,153334,29505,29512,16041,162584,36972,29173,149746,29665,33270,16074,30476,16081,27810,22269,29721,29726,29727,16098,16112,16116,16122,29907,16142,16211,30018,30061,30066,30093,16252,30152,30172,16320,30285,16343,30324,16348,30330,151388,29064,22051,35200,22633,16413,30531,16441,26465,16453,13787,30616,16490,16495,23646,30654,30667,22770,30744,28857,30748,16552,30777,30791,30801,30822,33864,152885,31027,26627,31026,16643,16649,31121,31129,36795,31238,36796,16743,31377,16818,31420,33401,16836,31439,31451,16847,20001,31586,31596,31611,31762,31771,16992,17018,31867,31900,17036,31928,17044,31981,36755,28864,134351,32207,32212,32208,32253,32686,32692,29343,17303,32800,32805,31545,32814,32817,32852,15820,22452,28832,32951,33001,17389,33036,29482,33038,33042,30048,33044,17409,15161,33110,33113,33114,17427,22586,33148,33156,17445,33171,17453,33189,22511,33217,33252,33364,17551,33446,33398,33482,33496,33535,17584,33623,38505,27018,33797,28917,33892,24803,33928,17668,33982,34017,34040,34064,34104,34130,17723,34159,34160,34272,17783,34418,34450,34482,34543,38469,34699,17926,17943,34990,35071,35108,35143,35217,162151,35369,35384,35476,35508,35921,36052,36082,36124,18328,22623,36291,18413,20206,36410,21976,22356,36465,22005,36528,18487,36558,36578,36580,36589,36594,36791,36801,36810,36812,36915,39364,18605,39136,37395,18718,37416,37464,37483,37553,37550,37567,37603,37611,37619,37620,37629,37699,37764,37805,18757,18769,40639,37911,21249,37917,37933,37950,18794,37972,38009,38189,38306,18855,38388,38451,18917,26528,18980,38720,18997,38834,38850,22100,19172,24808,39097,19225,39153,22596,39182,39193,20916,39196,39223,39234,39261,39266,19312,39365,19357,39484,39695,31363,39785,39809,39901,39921,39924,19565,39968,14191,138178,40265,39994,40702,22096,40339,40381,40384,40444,38134,36790,40571,40620,40625,40637,40646,38108,40674,40689,40696,31432,40772,131220,131767,132e3,26906,38083,22956,132311,22592,38081,14265,132565,132629,132726,136890,22359,29043,133826,133837,134079,21610,194619,134091,21662,134139,134203,134227,134245,134268,24807,134285,22138,134325,134365,134381,134511,134578,134600,26965,39983,34725,134660,134670,134871,135056,134957,134771,23584,135100,24075,135260,135247,135286,26398,135291,135304,135318,13895,135359,135379,135471,135483,21348,33965,135907,136053,135990,35713,136567,136729,137155,137159,20088,28859,137261,137578,137773,137797,138282,138352,138412,138952,25283,138965,139029,29080,26709,139333,27113,14024,139900,140247,140282,141098,141425,141647,33533,141671,141715,142037,35237,142056,36768,142094,38840,142143,38983,39613,142412,null,142472,142519,154600,142600,142610,142775,142741,142914,143220,143308,143411,143462,144159,144350,24497,26184,26303,162425,144743,144883,29185,149946,30679,144922,145174,32391,131910,22709,26382,26904,146087,161367,155618,146961,147129,161278,139418,18640,19128,147737,166554,148206,148237,147515,148276,148374,150085,132554,20946,132625,22943,138920,15294,146687,148484,148694,22408,149108,14747,149295,165352,170441,14178,139715,35678,166734,39382,149522,149755,150037,29193,150208,134264,22885,151205,151430,132985,36570,151596,21135,22335,29041,152217,152601,147274,150183,21948,152646,152686,158546,37332,13427,152895,161330,152926,18200,152930,152934,153543,149823,153693,20582,13563,144332,24798,153859,18300,166216,154286,154505,154630,138640,22433,29009,28598,155906,162834,36950,156082,151450,35682,156674,156746,23899,158711,36662,156804,137500,35562,150006,156808,147439,156946,19392,157119,157365,141083,37989,153569,24981,23079,194765,20411,22201,148769,157436,20074,149812,38486,28047,158909,13848,35191,157593,157806,156689,157790,29151,157895,31554,168128,133649,157990,37124,158009,31301,40432,158202,39462,158253,13919,156777,131105,31107,158260,158555,23852,144665,33743,158621,18128,158884,30011,34917,159150,22710,14108,140685,159819,160205,15444,160384,160389,37505,139642,160395,37680,160486,149968,27705,38047,160848,134904,34855,35061,141606,164979,137137,28344,150058,137248,14756,14009,23568,31203,17727,26294,171181,170148,35139,161740,161880,22230,16607,136714,14753,145199,164072,136133,29101,33638,162269,168360,23143,19639,159919,166315,162301,162314,162571,163174,147834,31555,31102,163849,28597,172767,27139,164632,21410,159239,37823,26678,38749,164207,163875,158133,136173,143919,163912,23941,166960,163971,22293,38947,166217,23979,149896,26046,27093,21458,150181,147329,15377,26422,163984,164084,164142,139169,164175,164233,164271,164378,164614,164655,164746,13770,164968,165546,18682,25574,166230,30728,37461,166328,17394,166375,17375,166376,166726,166868,23032,166921,36619,167877,168172,31569,168208,168252,15863,168286,150218,36816,29327,22155,169191,169449,169392,169400,169778,170193,170313,170346,170435,170536,170766,171354,171419,32415,171768,171811,19620,38215,172691,29090,172799,19857,36882,173515,19868,134300,36798,21953,36794,140464,36793,150163,17673,32383,28502,27313,20202,13540,166700,161949,14138,36480,137205,163876,166764,166809,162366,157359,15851,161365,146615,153141,153942,20122,155265,156248,22207,134765,36366,23405,147080,150686,25566,25296,137206,137339,25904,22061,154698,21530,152337,15814,171416,19581,22050,22046,32585,155352,22901,146752,34672,19996,135146,134473,145082,33047,40286,36120,30267,40005,30286,30649,37701,21554,33096,33527,22053,33074,33816,32957,21994,31074,22083,21526,134813,13774,22021,22001,26353,164578,13869,30004,22e3,21946,21655,21874,134209,134294,24272,151880,134774,142434,134818,40619,32090,21982,135285,25245,38765,21652,36045,29174,37238,25596,25529,25598,21865,142147,40050,143027,20890,13535,134567,20903,21581,21790,21779,30310,36397,157834,30129,32950,34820,34694,35015,33206,33820,135361,17644,29444,149254,23440,33547,157843,22139,141044,163119,147875,163187,159440,160438,37232,135641,37384,146684,173737,134828,134905,29286,138402,18254,151490,163833,135147,16634,40029,25887,142752,18675,149472,171388,135148,134666,24674,161187,135149,null,155720,135559,29091,32398,40272,19994,19972,13687,23309,27826,21351,13996,14812,21373,13989,149016,22682,150382,33325,21579,22442,154261,133497,null,14930,140389,29556,171692,19721,39917,146686,171824,19547,151465,169374,171998,33884,146870,160434,157619,145184,25390,32037,147191,146988,14890,36872,21196,15988,13946,17897,132238,30272,23280,134838,30842,163630,22695,16575,22140,39819,23924,30292,173108,40581,19681,30201,14331,24857,143578,148466,null,22109,135849,22439,149859,171526,21044,159918,13741,27722,40316,31830,39737,22494,137068,23635,25811,169168,156469,160100,34477,134440,159010,150242,134513,null,20990,139023,23950,38659,138705,40577,36940,31519,39682,23761,31651,25192,25397,39679,31695,39722,31870,39726,31810,31878,39957,31740,39689,40727,39963,149822,40794,21875,23491,20477,40600,20466,21088,15878,21201,22375,20566,22967,24082,38856,40363,36700,21609,38836,39232,38842,21292,24880,26924,21466,39946,40194,19515,38465,27008,20646,30022,137069,39386,21107,null,37209,38529,37212,null,37201,167575,25471,159011,27338,22033,37262,30074,25221,132092,29519,31856,154657,146685,null,149785,30422,39837,20010,134356,33726,34882,null,23626,27072,20717,22394,21023,24053,20174,27697,131570,20281,21660,21722,21146,36226,13822,24332,13811,null,27474,37244,40869,39831,38958,39092,39610,40616,40580,29050,31508,null,27642,34840,32632,null,22048,173642,36471,40787,null,36308,36431,40476,36353,25218,164733,36392,36469,31443,150135,31294,30936,27882,35431,30215,166490,40742,27854,34774,30147,172722,30803,194624,36108,29410,29553,35629,29442,29937,36075,150203,34351,24506,34976,17591,null,137275,159237,null,35454,140571,null,24829,30311,39639,40260,37742,39823,34805,null,34831,36087,29484,38689,39856,13782,29362,19463,31825,39242,155993,24921,19460,40598,24957,null,22367,24943,25254,25145,25294,14940,25058,21418,144373,25444,26626,13778,23895,166850,36826,167481,null,20697,138566,30982,21298,38456,134971,16485,null,30718,null,31938,155418,31962,31277,32870,32867,32077,29957,29938,35220,33306,26380,32866,160902,32859,29936,33027,30500,35209,157644,30035,159441,34729,34766,33224,34700,35401,36013,35651,30507,29944,34010,13877,27058,36262,null,35241,29800,28089,34753,147473,29927,15835,29046,24740,24988,15569,29026,24695,null,32625,166701,29264,24809,19326,21024,15384,146631,155351,161366,152881,137540,135934,170243,159196,159917,23745,156077,166415,145015,131310,157766,151310,17762,23327,156492,40784,40614,156267,12288,65292,12289,12290,65294,8231,65307,65306,65311,65281,65072,8230,8229,65104,65105,65106,183,65108,65109,65110,65111,65372,8211,65073,8212,65075,9588,65076,65103,65288,65289,65077,65078,65371,65373,65079,65080,12308,12309,65081,65082,12304,12305,65083,65084,12298,12299,65085,65086,12296,12297,65087,65088,12300,12301,65089,65090,12302,12303,65091,65092,65113,65114,65115,65116,65117,65118,8216,8217,8220,8221,12317,12318,8245,8242,65283,65286,65290,8251,167,12291,9675,9679,9651,9650,9678,9734,9733,9671,9670,9633,9632,9661,9660,12963,8453,175,65507,65343,717,65097,65098,65101,65102,65099,65100,65119,65120,65121,65291,65293,215,247,177,8730,65308,65310,65309,8806,8807,8800,8734,8786,8801,65122,65123,65124,65125,65126,65374,8745,8746,8869,8736,8735,8895,13266,13265,8747,8750,8757,8756,9792,9794,8853,8857,8593,8595,8592,8594,8598,8599,8601,8600,8741,8739,65295,65340,8725,65128,65284,65509,12306,65504,65505,65285,65312,8451,8457,65129,65130,65131,13269,13212,13213,13214,13262,13217,13198,13199,13252,176,20825,20827,20830,20829,20833,20835,21991,29929,31950,9601,9602,9603,9604,9605,9606,9607,9608,9615,9614,9613,9612,9611,9610,9609,9532,9524,9516,9508,9500,9620,9472,9474,9621,9484,9488,9492,9496,9581,9582,9584,9583,9552,9566,9578,9569,9698,9699,9701,9700,9585,9586,9587,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,12321,12322,12323,12324,12325,12326,12327,12328,12329,21313,21316,21317,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,729,713,714,711,715,9216,9217,9218,9219,9220,9221,9222,9223,9224,9225,9226,9227,9228,9229,9230,9231,9232,9233,9234,9235,9236,9237,9238,9239,9240,9241,9242,9243,9244,9245,9246,9247,9249,8364,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19968,20057,19969,19971,20035,20061,20102,20108,20154,20799,20837,20843,20960,20992,20993,21147,21269,21313,21340,21448,19977,19979,19976,19978,20011,20024,20961,20037,20040,20063,20062,20110,20129,20800,20995,21242,21315,21449,21475,22303,22763,22805,22823,22899,23376,23377,23379,23544,23567,23586,23608,23665,24029,24037,24049,24050,24051,24062,24178,24318,24331,24339,25165,19985,19984,19981,20013,20016,20025,20043,23609,20104,20113,20117,20114,20116,20130,20161,20160,20163,20166,20167,20173,20170,20171,20164,20803,20801,20839,20845,20846,20844,20887,20982,20998,20999,21e3,21243,21246,21247,21270,21305,21320,21319,21317,21342,21380,21451,21450,21453,22764,22825,22827,22826,22829,23380,23569,23588,23610,23663,24052,24187,24319,24340,24341,24515,25096,25142,25163,25166,25903,25991,26007,26020,26041,26085,26352,26376,26408,27424,27490,27513,27595,27604,27611,27663,27700,28779,29226,29238,29243,29255,29273,29275,29356,29579,19993,19990,19989,19988,19992,20027,20045,20047,20046,20197,20184,20180,20181,20182,20183,20195,20196,20185,20190,20805,20804,20873,20874,20908,20985,20986,20984,21002,21152,21151,21253,21254,21271,21277,20191,21322,21321,21345,21344,21359,21358,21435,21487,21476,21491,21484,21486,21481,21480,21500,21496,21493,21483,21478,21482,21490,21489,21488,21477,21485,21499,22235,22234,22806,22830,22833,22900,22902,23381,23427,23612,24040,24039,24038,24066,24067,24179,24188,24321,24344,24343,24517,25098,25171,25172,25170,25169,26021,26086,26414,26412,26410,26411,26413,27491,27597,27665,27664,27704,27713,27712,27710,29359,29572,29577,29916,29926,29976,29983,29992,29993,3e4,30001,30002,30003,30091,30333,30382,30399,30446,30683,30690,30707,31034,31166,31348,31435,19998,19999,20050,20051,20073,20121,20132,20134,20133,20223,20233,20249,20234,20245,20237,20240,20241,20239,20210,20214,20219,20208,20211,20221,20225,20235,20809,20807,20806,20808,20840,20849,20877,20912,21015,21009,21010,21006,21014,21155,21256,21281,21280,21360,21361,21513,21519,21516,21514,21520,21505,21515,21508,21521,21517,21512,21507,21518,21510,21522,22240,22238,22237,22323,22320,22312,22317,22316,22319,22313,22809,22810,22839,22840,22916,22904,22915,22909,22905,22914,22913,23383,23384,23431,23432,23429,23433,23546,23574,23673,24030,24070,24182,24180,24335,24347,24537,24534,25102,25100,25101,25104,25187,25179,25176,25910,26089,26088,26092,26093,26354,26355,26377,26429,26420,26417,26421,27425,27492,27515,27670,27741,27735,27737,27743,27744,27728,27733,27745,27739,27725,27726,28784,29279,29277,30334,31481,31859,31992,32566,32650,32701,32769,32771,32780,32786,32819,32895,32905,32907,32908,33251,33258,33267,33276,33292,33307,33311,33390,33394,33406,34411,34880,34892,34915,35199,38433,20018,20136,20301,20303,20295,20311,20318,20276,20315,20309,20272,20304,20305,20285,20282,20280,20291,20308,20284,20294,20323,20316,20320,20271,20302,20278,20313,20317,20296,20314,20812,20811,20813,20853,20918,20919,21029,21028,21033,21034,21032,21163,21161,21162,21164,21283,21363,21365,21533,21549,21534,21566,21542,21582,21543,21574,21571,21555,21576,21570,21531,21545,21578,21561,21563,21560,21550,21557,21558,21536,21564,21568,21553,21547,21535,21548,22250,22256,22244,22251,22346,22353,22336,22349,22343,22350,22334,22352,22351,22331,22767,22846,22941,22930,22952,22942,22947,22937,22934,22925,22948,22931,22922,22949,23389,23388,23386,23387,23436,23435,23439,23596,23616,23617,23615,23614,23696,23697,23700,23692,24043,24076,24207,24199,24202,24311,24324,24351,24420,24418,24439,24441,24536,24524,24535,24525,24561,24555,24568,24554,25106,25105,25220,25239,25238,25216,25206,25225,25197,25226,25212,25214,25209,25203,25234,25199,25240,25198,25237,25235,25233,25222,25913,25915,25912,26097,26356,26463,26446,26447,26448,26449,26460,26454,26462,26441,26438,26464,26451,26455,27493,27599,27714,27742,27801,27777,27784,27785,27781,27803,27754,27770,27792,27760,27788,27752,27798,27794,27773,27779,27762,27774,27764,27782,27766,27789,27796,27800,27778,28790,28796,28797,28792,29282,29281,29280,29380,29378,29590,29996,29995,30007,30008,30338,30447,30691,31169,31168,31167,31350,31995,32597,32918,32915,32925,32920,32923,32922,32946,33391,33426,33419,33421,35211,35282,35328,35895,35910,35925,35997,36196,36208,36275,36523,36554,36763,36784,36802,36806,36805,36804,24033,37009,37026,37034,37030,37027,37193,37318,37324,38450,38446,38449,38442,38444,20006,20054,20083,20107,20123,20126,20139,20140,20335,20381,20365,20339,20351,20332,20379,20363,20358,20355,20336,20341,20360,20329,20347,20374,20350,20367,20369,20346,20820,20818,20821,20841,20855,20854,20856,20925,20989,21051,21048,21047,21050,21040,21038,21046,21057,21182,21179,21330,21332,21331,21329,21350,21367,21368,21369,21462,21460,21463,21619,21621,21654,21624,21653,21632,21627,21623,21636,21650,21638,21628,21648,21617,21622,21644,21658,21602,21608,21643,21629,21646,22266,22403,22391,22378,22377,22369,22374,22372,22396,22812,22857,22855,22856,22852,22868,22974,22971,22996,22969,22958,22993,22982,22992,22989,22987,22995,22986,22959,22963,22994,22981,23391,23396,23395,23447,23450,23448,23452,23449,23451,23578,23624,23621,23622,23735,23713,23736,23721,23723,23729,23731,24088,24090,24086,24085,24091,24081,24184,24218,24215,24220,24213,24214,24310,24358,24359,24361,24448,24449,24447,24444,24541,24544,24573,24565,24575,24591,24596,24623,24629,24598,24618,24597,24609,24615,24617,24619,24603,25110,25109,25151,25150,25152,25215,25289,25292,25284,25279,25282,25273,25298,25307,25259,25299,25300,25291,25288,25256,25277,25276,25296,25305,25287,25293,25269,25306,25265,25304,25302,25303,25286,25260,25294,25918,26023,26044,26106,26132,26131,26124,26118,26114,26126,26112,26127,26133,26122,26119,26381,26379,26477,26507,26517,26481,26524,26483,26487,26503,26525,26519,26479,26480,26495,26505,26494,26512,26485,26522,26515,26492,26474,26482,27427,27494,27495,27519,27667,27675,27875,27880,27891,27825,27852,27877,27827,27837,27838,27836,27874,27819,27861,27859,27832,27844,27833,27841,27822,27863,27845,27889,27839,27835,27873,27867,27850,27820,27887,27868,27862,27872,28821,28814,28818,28810,28825,29228,29229,29240,29256,29287,29289,29376,29390,29401,29399,29392,29609,29608,29599,29611,29605,30013,30109,30105,30106,30340,30402,30450,30452,30693,30717,31038,31040,31041,31177,31176,31354,31353,31482,31998,32596,32652,32651,32773,32954,32933,32930,32945,32929,32939,32937,32948,32938,32943,33253,33278,33293,33459,33437,33433,33453,33469,33439,33465,33457,33452,33445,33455,33464,33443,33456,33470,33463,34382,34417,21021,34920,36555,36814,36820,36817,37045,37048,37041,37046,37319,37329,38263,38272,38428,38464,38463,38459,38468,38466,38585,38632,38738,38750,20127,20141,20142,20449,20405,20399,20415,20448,20433,20431,20445,20419,20406,20440,20447,20426,20439,20398,20432,20420,20418,20442,20430,20446,20407,20823,20882,20881,20896,21070,21059,21066,21069,21068,21067,21063,21191,21193,21187,21185,21261,21335,21371,21402,21467,21676,21696,21672,21710,21705,21688,21670,21683,21703,21698,21693,21674,21697,21700,21704,21679,21675,21681,21691,21673,21671,21695,22271,22402,22411,22432,22435,22434,22478,22446,22419,22869,22865,22863,22862,22864,23004,23e3,23039,23011,23016,23043,23013,23018,23002,23014,23041,23035,23401,23459,23462,23460,23458,23461,23553,23630,23631,23629,23627,23769,23762,24055,24093,24101,24095,24189,24224,24230,24314,24328,24365,24421,24456,24453,24458,24459,24455,24460,24457,24594,24605,24608,24613,24590,24616,24653,24688,24680,24674,24646,24643,24684,24683,24682,24676,25153,25308,25366,25353,25340,25325,25345,25326,25341,25351,25329,25335,25327,25324,25342,25332,25361,25346,25919,25925,26027,26045,26082,26149,26157,26144,26151,26159,26143,26152,26161,26148,26359,26623,26579,26609,26580,26576,26604,26550,26543,26613,26601,26607,26564,26577,26548,26586,26597,26552,26575,26590,26611,26544,26585,26594,26589,26578,27498,27523,27526,27573,27602,27607,27679,27849,27915,27954,27946,27969,27941,27916,27953,27934,27927,27963,27965,27966,27958,27931,27893,27961,27943,27960,27945,27950,27957,27918,27947,28843,28858,28851,28844,28847,28845,28856,28846,28836,29232,29298,29295,29300,29417,29408,29409,29623,29642,29627,29618,29645,29632,29619,29978,29997,30031,30028,30030,30027,30123,30116,30117,30114,30115,30328,30342,30343,30344,30408,30406,30403,30405,30465,30457,30456,30473,30475,30462,30460,30471,30684,30722,30740,30732,30733,31046,31049,31048,31047,31161,31162,31185,31186,31179,31359,31361,31487,31485,31869,32002,32005,32e3,32009,32007,32004,32006,32568,32654,32703,32772,32784,32781,32785,32822,32982,32997,32986,32963,32964,32972,32993,32987,32974,32990,32996,32989,33268,33314,33511,33539,33541,33507,33499,33510,33540,33509,33538,33545,33490,33495,33521,33537,33500,33492,33489,33502,33491,33503,33519,33542,34384,34425,34427,34426,34893,34923,35201,35284,35336,35330,35331,35998,36e3,36212,36211,36276,36557,36556,36848,36838,36834,36842,36837,36845,36843,36836,36840,37066,37070,37057,37059,37195,37194,37325,38274,38480,38475,38476,38477,38754,38761,38859,38893,38899,38913,39080,39131,39135,39318,39321,20056,20147,20492,20493,20515,20463,20518,20517,20472,20521,20502,20486,20540,20511,20506,20498,20497,20474,20480,20500,20520,20465,20513,20491,20505,20504,20467,20462,20525,20522,20478,20523,20489,20860,20900,20901,20898,20941,20940,20934,20939,21078,21084,21076,21083,21085,21290,21375,21407,21405,21471,21736,21776,21761,21815,21756,21733,21746,21766,21754,21780,21737,21741,21729,21769,21742,21738,21734,21799,21767,21757,21775,22275,22276,22466,22484,22475,22467,22537,22799,22871,22872,22874,23057,23064,23068,23071,23067,23059,23020,23072,23075,23081,23077,23052,23049,23403,23640,23472,23475,23478,23476,23470,23477,23481,23480,23556,23633,23637,23632,23789,23805,23803,23786,23784,23792,23798,23809,23796,24046,24109,24107,24235,24237,24231,24369,24466,24465,24464,24665,24675,24677,24656,24661,24685,24681,24687,24708,24735,24730,24717,24724,24716,24709,24726,25159,25331,25352,25343,25422,25406,25391,25429,25410,25414,25423,25417,25402,25424,25405,25386,25387,25384,25421,25420,25928,25929,26009,26049,26053,26178,26185,26191,26179,26194,26188,26181,26177,26360,26388,26389,26391,26657,26680,26696,26694,26707,26681,26690,26708,26665,26803,26647,26700,26705,26685,26612,26704,26688,26684,26691,26666,26693,26643,26648,26689,27530,27529,27575,27683,27687,27688,27686,27684,27888,28010,28053,28040,28039,28006,28024,28023,27993,28051,28012,28041,28014,27994,28020,28009,28044,28042,28025,28037,28005,28052,28874,28888,28900,28889,28872,28879,29241,29305,29436,29433,29437,29432,29431,29574,29677,29705,29678,29664,29674,29662,30036,30045,30044,30042,30041,30142,30149,30151,30130,30131,30141,30140,30137,30146,30136,30347,30384,30410,30413,30414,30505,30495,30496,30504,30697,30768,30759,30776,30749,30772,30775,30757,30765,30752,30751,30770,31061,31056,31072,31071,31062,31070,31069,31063,31066,31204,31203,31207,31199,31206,31209,31192,31364,31368,31449,31494,31505,31881,32033,32023,32011,32010,32032,32034,32020,32016,32021,32026,32028,32013,32025,32027,32570,32607,32660,32709,32705,32774,32792,32789,32793,32791,32829,32831,33009,33026,33008,33029,33005,33012,33030,33016,33011,33032,33021,33034,33020,33007,33261,33260,33280,33296,33322,33323,33320,33324,33467,33579,33618,33620,33610,33592,33616,33609,33589,33588,33615,33586,33593,33590,33559,33600,33585,33576,33603,34388,34442,34474,34451,34468,34473,34444,34467,34460,34928,34935,34945,34946,34941,34937,35352,35344,35342,35340,35349,35338,35351,35347,35350,35343,35345,35912,35962,35961,36001,36002,36215,36524,36562,36564,36559,36785,36865,36870,36855,36864,36858,36852,36867,36861,36869,36856,37013,37089,37085,37090,37202,37197,37196,37336,37341,37335,37340,37337,38275,38498,38499,38497,38491,38493,38500,38488,38494,38587,39138,39340,39592,39640,39717,39730,39740,20094,20602,20605,20572,20551,20547,20556,20570,20553,20581,20598,20558,20565,20597,20596,20599,20559,20495,20591,20589,20828,20885,20976,21098,21103,21202,21209,21208,21205,21264,21263,21273,21311,21312,21310,21443,26364,21830,21866,21862,21828,21854,21857,21827,21834,21809,21846,21839,21845,21807,21860,21816,21806,21852,21804,21859,21811,21825,21847,22280,22283,22281,22495,22533,22538,22534,22496,22500,22522,22530,22581,22519,22521,22816,22882,23094,23105,23113,23142,23146,23104,23100,23138,23130,23110,23114,23408,23495,23493,23492,23490,23487,23494,23561,23560,23559,23648,23644,23645,23815,23814,23822,23835,23830,23842,23825,23849,23828,23833,23844,23847,23831,24034,24120,24118,24115,24119,24247,24248,24246,24245,24254,24373,24375,24407,24428,24425,24427,24471,24473,24478,24472,24481,24480,24476,24703,24739,24713,24736,24744,24779,24756,24806,24765,24773,24763,24757,24796,24764,24792,24789,24774,24799,24760,24794,24775,25114,25115,25160,25504,25511,25458,25494,25506,25509,25463,25447,25496,25514,25457,25513,25481,25475,25499,25451,25512,25476,25480,25497,25505,25516,25490,25487,25472,25467,25449,25448,25466,25949,25942,25937,25945,25943,21855,25935,25944,25941,25940,26012,26011,26028,26063,26059,26060,26062,26205,26202,26212,26216,26214,26206,26361,21207,26395,26753,26799,26786,26771,26805,26751,26742,26801,26791,26775,26800,26755,26820,26797,26758,26757,26772,26781,26792,26783,26785,26754,27442,27578,27627,27628,27691,28046,28092,28147,28121,28082,28129,28108,28132,28155,28154,28165,28103,28107,28079,28113,28078,28126,28153,28088,28151,28149,28101,28114,28186,28085,28122,28139,28120,28138,28145,28142,28136,28102,28100,28074,28140,28095,28134,28921,28937,28938,28925,28911,29245,29309,29313,29468,29467,29462,29459,29465,29575,29701,29706,29699,29702,29694,29709,29920,29942,29943,29980,29986,30053,30054,30050,30064,30095,30164,30165,30133,30154,30157,30350,30420,30418,30427,30519,30526,30524,30518,30520,30522,30827,30787,30798,31077,31080,31085,31227,31378,31381,31520,31528,31515,31532,31526,31513,31518,31534,31890,31895,31893,32070,32067,32113,32046,32057,32060,32064,32048,32051,32068,32047,32066,32050,32049,32573,32670,32666,32716,32718,32722,32796,32842,32838,33071,33046,33059,33067,33065,33072,33060,33282,33333,33335,33334,33337,33678,33694,33688,33656,33698,33686,33725,33707,33682,33674,33683,33673,33696,33655,33659,33660,33670,33703,34389,24426,34503,34496,34486,34500,34485,34502,34507,34481,34479,34505,34899,34974,34952,34987,34962,34966,34957,34955,35219,35215,35370,35357,35363,35365,35377,35373,35359,35355,35362,35913,35930,36009,36012,36011,36008,36010,36007,36199,36198,36286,36282,36571,36575,36889,36877,36890,36887,36899,36895,36893,36880,36885,36894,36896,36879,36898,36886,36891,36884,37096,37101,37117,37207,37326,37365,37350,37347,37351,37357,37353,38281,38506,38517,38515,38520,38512,38516,38518,38519,38508,38592,38634,38633,31456,31455,38914,38915,39770,40165,40565,40575,40613,40635,20642,20621,20613,20633,20625,20608,20630,20632,20634,26368,20977,21106,21108,21109,21097,21214,21213,21211,21338,21413,21883,21888,21927,21884,21898,21917,21912,21890,21916,21930,21908,21895,21899,21891,21939,21934,21919,21822,21938,21914,21947,21932,21937,21886,21897,21931,21913,22285,22575,22570,22580,22564,22576,22577,22561,22557,22560,22777,22778,22880,23159,23194,23167,23186,23195,23207,23411,23409,23506,23500,23507,23504,23562,23563,23601,23884,23888,23860,23879,24061,24133,24125,24128,24131,24190,24266,24257,24258,24260,24380,24429,24489,24490,24488,24785,24801,24754,24758,24800,24860,24867,24826,24853,24816,24827,24820,24936,24817,24846,24822,24841,24832,24850,25119,25161,25507,25484,25551,25536,25577,25545,25542,25549,25554,25571,25552,25569,25558,25581,25582,25462,25588,25578,25563,25682,25562,25593,25950,25958,25954,25955,26001,26e3,26031,26222,26224,26228,26230,26223,26257,26234,26238,26231,26366,26367,26399,26397,26874,26837,26848,26840,26839,26885,26847,26869,26862,26855,26873,26834,26866,26851,26827,26829,26893,26898,26894,26825,26842,26990,26875,27454,27450,27453,27544,27542,27580,27631,27694,27695,27692,28207,28216,28244,28193,28210,28263,28234,28192,28197,28195,28187,28251,28248,28196,28246,28270,28205,28198,28271,28212,28237,28218,28204,28227,28189,28222,28363,28297,28185,28238,28259,28228,28274,28265,28255,28953,28954,28966,28976,28961,28982,29038,28956,29260,29316,29312,29494,29477,29492,29481,29754,29738,29747,29730,29733,29749,29750,29748,29743,29723,29734,29736,29989,29990,30059,30058,30178,30171,30179,30169,30168,30174,30176,30331,30332,30358,30355,30388,30428,30543,30701,30813,30828,30831,31245,31240,31243,31237,31232,31384,31383,31382,31461,31459,31561,31574,31558,31568,31570,31572,31565,31563,31567,31569,31903,31909,32094,32080,32104,32085,32043,32110,32114,32097,32102,32098,32112,32115,21892,32724,32725,32779,32850,32901,33109,33108,33099,33105,33102,33081,33094,33086,33100,33107,33140,33298,33308,33769,33795,33784,33805,33760,33733,33803,33729,33775,33777,33780,33879,33802,33776,33804,33740,33789,33778,33738,33848,33806,33796,33756,33799,33748,33759,34395,34527,34521,34541,34516,34523,34532,34512,34526,34903,35009,35010,34993,35203,35222,35387,35424,35413,35422,35388,35393,35412,35419,35408,35398,35380,35386,35382,35414,35937,35970,36015,36028,36019,36029,36033,36027,36032,36020,36023,36022,36031,36024,36234,36229,36225,36302,36317,36299,36314,36305,36300,36315,36294,36603,36600,36604,36764,36910,36917,36913,36920,36914,36918,37122,37109,37129,37118,37219,37221,37327,37396,37397,37411,37385,37406,37389,37392,37383,37393,38292,38287,38283,38289,38291,38290,38286,38538,38542,38539,38525,38533,38534,38541,38514,38532,38593,38597,38596,38598,38599,38639,38642,38860,38917,38918,38920,39143,39146,39151,39145,39154,39149,39342,39341,40643,40653,40657,20098,20653,20661,20658,20659,20677,20670,20652,20663,20667,20655,20679,21119,21111,21117,21215,21222,21220,21218,21219,21295,21983,21992,21971,21990,21966,21980,21959,21969,21987,21988,21999,21978,21985,21957,21958,21989,21961,22290,22291,22622,22609,22616,22615,22618,22612,22635,22604,22637,22602,22626,22610,22603,22887,23233,23241,23244,23230,23229,23228,23219,23234,23218,23913,23919,24140,24185,24265,24264,24338,24409,24492,24494,24858,24847,24904,24863,24819,24859,24825,24833,24840,24910,24908,24900,24909,24894,24884,24871,24845,24838,24887,25121,25122,25619,25662,25630,25642,25645,25661,25644,25615,25628,25620,25613,25654,25622,25623,25606,25964,26015,26032,26263,26249,26247,26248,26262,26244,26264,26253,26371,27028,26989,26970,26999,26976,26964,26997,26928,27010,26954,26984,26987,26974,26963,27001,27014,26973,26979,26971,27463,27506,27584,27583,27603,27645,28322,28335,28371,28342,28354,28304,28317,28359,28357,28325,28312,28348,28346,28331,28369,28310,28316,28356,28372,28330,28327,28340,29006,29017,29033,29028,29001,29031,29020,29036,29030,29004,29029,29022,28998,29032,29014,29242,29266,29495,29509,29503,29502,29807,29786,29781,29791,29790,29761,29759,29785,29787,29788,30070,30072,30208,30192,30209,30194,30193,30202,30207,30196,30195,30430,30431,30555,30571,30566,30558,30563,30585,30570,30572,30556,30565,30568,30562,30702,30862,30896,30871,30872,30860,30857,30844,30865,30867,30847,31098,31103,31105,33836,31165,31260,31258,31264,31252,31263,31262,31391,31392,31607,31680,31584,31598,31591,31921,31923,31925,32147,32121,32145,32129,32143,32091,32622,32617,32618,32626,32681,32680,32676,32854,32856,32902,32900,33137,33136,33144,33125,33134,33139,33131,33145,33146,33126,33285,33351,33922,33911,33853,33841,33909,33894,33899,33865,33900,33883,33852,33845,33889,33891,33897,33901,33862,34398,34396,34399,34553,34579,34568,34567,34560,34558,34555,34562,34563,34566,34570,34905,35039,35028,35033,35036,35032,35037,35041,35018,35029,35026,35228,35299,35435,35442,35443,35430,35433,35440,35463,35452,35427,35488,35441,35461,35437,35426,35438,35436,35449,35451,35390,35432,35938,35978,35977,36042,36039,36040,36036,36018,36035,36034,36037,36321,36319,36328,36335,36339,36346,36330,36324,36326,36530,36611,36617,36606,36618,36767,36786,36939,36938,36947,36930,36948,36924,36949,36944,36935,36943,36942,36941,36945,36926,36929,37138,37143,37228,37226,37225,37321,37431,37463,37432,37437,37440,37438,37467,37451,37476,37457,37428,37449,37453,37445,37433,37439,37466,38296,38552,38548,38549,38605,38603,38601,38602,38647,38651,38649,38646,38742,38772,38774,38928,38929,38931,38922,38930,38924,39164,39156,39165,39166,39347,39345,39348,39649,40169,40578,40718,40723,40736,20711,20718,20709,20694,20717,20698,20693,20687,20689,20721,20686,20713,20834,20979,21123,21122,21297,21421,22014,22016,22043,22039,22013,22036,22022,22025,22029,22030,22007,22038,22047,22024,22032,22006,22296,22294,22645,22654,22659,22675,22666,22649,22661,22653,22781,22821,22818,22820,22890,22889,23265,23270,23273,23255,23254,23256,23267,23413,23518,23527,23521,23525,23526,23528,23522,23524,23519,23565,23650,23940,23943,24155,24163,24149,24151,24148,24275,24278,24330,24390,24432,24505,24903,24895,24907,24951,24930,24931,24927,24922,24920,24949,25130,25735,25688,25684,25764,25720,25695,25722,25681,25703,25652,25709,25723,25970,26017,26071,26070,26274,26280,26269,27036,27048,27029,27073,27054,27091,27083,27035,27063,27067,27051,27060,27088,27085,27053,27084,27046,27075,27043,27465,27468,27699,28467,28436,28414,28435,28404,28457,28478,28448,28460,28431,28418,28450,28415,28399,28422,28465,28472,28466,28451,28437,28459,28463,28552,28458,28396,28417,28402,28364,28407,29076,29081,29053,29066,29060,29074,29246,29330,29334,29508,29520,29796,29795,29802,29808,29805,29956,30097,30247,30221,30219,30217,30227,30433,30435,30596,30589,30591,30561,30913,30879,30887,30899,30889,30883,31118,31119,31117,31278,31281,31402,31401,31469,31471,31649,31637,31627,31605,31639,31645,31636,31631,31672,31623,31620,31929,31933,31934,32187,32176,32156,32189,32190,32160,32202,32180,32178,32177,32186,32162,32191,32181,32184,32173,32210,32199,32172,32624,32736,32737,32735,32862,32858,32903,33104,33152,33167,33160,33162,33151,33154,33255,33274,33287,33300,33310,33355,33993,33983,33990,33988,33945,33950,33970,33948,33995,33976,33984,34003,33936,33980,34001,33994,34623,34588,34619,34594,34597,34612,34584,34645,34615,34601,35059,35074,35060,35065,35064,35069,35048,35098,35055,35494,35468,35486,35491,35469,35489,35475,35492,35498,35493,35496,35480,35473,35482,35495,35946,35981,35980,36051,36049,36050,36203,36249,36245,36348,36628,36626,36629,36627,36771,36960,36952,36956,36963,36953,36958,36962,36957,36955,37145,37144,37150,37237,37240,37239,37236,37496,37504,37509,37528,37526,37499,37523,37532,37544,37500,37521,38305,38312,38313,38307,38309,38308,38553,38556,38555,38604,38610,38656,38780,38789,38902,38935,38936,39087,39089,39171,39173,39180,39177,39361,39599,39600,39654,39745,39746,40180,40182,40179,40636,40763,40778,20740,20736,20731,20725,20729,20738,20744,20745,20741,20956,21127,21128,21129,21133,21130,21232,21426,22062,22075,22073,22066,22079,22068,22057,22099,22094,22103,22132,22070,22063,22064,22656,22687,22686,22707,22684,22702,22697,22694,22893,23305,23291,23307,23285,23308,23304,23534,23532,23529,23531,23652,23653,23965,23956,24162,24159,24161,24290,24282,24287,24285,24291,24288,24392,24433,24503,24501,24950,24935,24942,24925,24917,24962,24956,24944,24939,24958,24999,24976,25003,24974,25004,24986,24996,24980,25006,25134,25705,25711,25721,25758,25778,25736,25744,25776,25765,25747,25749,25769,25746,25774,25773,25771,25754,25772,25753,25762,25779,25973,25975,25976,26286,26283,26292,26289,27171,27167,27112,27137,27166,27161,27133,27169,27155,27146,27123,27138,27141,27117,27153,27472,27470,27556,27589,27590,28479,28540,28548,28497,28518,28500,28550,28525,28507,28536,28526,28558,28538,28528,28516,28567,28504,28373,28527,28512,28511,29087,29100,29105,29096,29270,29339,29518,29527,29801,29835,29827,29822,29824,30079,30240,30249,30239,30244,30246,30241,30242,30362,30394,30436,30606,30599,30604,30609,30603,30923,30917,30906,30922,30910,30933,30908,30928,31295,31292,31296,31293,31287,31291,31407,31406,31661,31665,31684,31668,31686,31687,31681,31648,31692,31946,32224,32244,32239,32251,32216,32236,32221,32232,32227,32218,32222,32233,32158,32217,32242,32249,32629,32631,32687,32745,32806,33179,33180,33181,33184,33178,33176,34071,34109,34074,34030,34092,34093,34067,34065,34083,34081,34068,34028,34085,34047,34054,34690,34676,34678,34656,34662,34680,34664,34649,34647,34636,34643,34907,34909,35088,35079,35090,35091,35093,35082,35516,35538,35527,35524,35477,35531,35576,35506,35529,35522,35519,35504,35542,35533,35510,35513,35547,35916,35918,35948,36064,36062,36070,36068,36076,36077,36066,36067,36060,36074,36065,36205,36255,36259,36395,36368,36381,36386,36367,36393,36383,36385,36382,36538,36637,36635,36639,36649,36646,36650,36636,36638,36645,36969,36974,36968,36973,36983,37168,37165,37159,37169,37255,37257,37259,37251,37573,37563,37559,37610,37548,37604,37569,37555,37564,37586,37575,37616,37554,38317,38321,38660,38662,38663,38665,38752,38797,38795,38799,38945,38955,38940,39091,39178,39187,39186,39192,39389,39376,39391,39387,39377,39381,39378,39385,39607,39662,39663,39719,39749,39748,39799,39791,40198,40201,40195,40617,40638,40654,22696,40786,20754,20760,20756,20752,20757,20864,20906,20957,21137,21139,21235,22105,22123,22137,22121,22116,22136,22122,22120,22117,22129,22127,22124,22114,22134,22721,22718,22727,22725,22894,23325,23348,23416,23536,23566,24394,25010,24977,25001,24970,25037,25014,25022,25034,25032,25136,25797,25793,25803,25787,25788,25818,25796,25799,25794,25805,25791,25810,25812,25790,25972,26310,26313,26297,26308,26311,26296,27197,27192,27194,27225,27243,27224,27193,27204,27234,27233,27211,27207,27189,27231,27208,27481,27511,27653,28610,28593,28577,28611,28580,28609,28583,28595,28608,28601,28598,28582,28576,28596,29118,29129,29136,29138,29128,29141,29113,29134,29145,29148,29123,29124,29544,29852,29859,29848,29855,29854,29922,29964,29965,30260,30264,30266,30439,30437,30624,30622,30623,30629,30952,30938,30956,30951,31142,31309,31310,31302,31308,31307,31418,31705,31761,31689,31716,31707,31713,31721,31718,31957,31958,32266,32273,32264,32283,32291,32286,32285,32265,32272,32633,32690,32752,32753,32750,32808,33203,33193,33192,33275,33288,33368,33369,34122,34137,34120,34152,34153,34115,34121,34157,34154,34142,34691,34719,34718,34722,34701,34913,35114,35122,35109,35115,35105,35242,35238,35558,35578,35563,35569,35584,35548,35559,35566,35582,35585,35586,35575,35565,35571,35574,35580,35947,35949,35987,36084,36420,36401,36404,36418,36409,36405,36667,36655,36664,36659,36776,36774,36981,36980,36984,36978,36988,36986,37172,37266,37664,37686,37624,37683,37679,37666,37628,37675,37636,37658,37648,37670,37665,37653,37678,37657,38331,38567,38568,38570,38613,38670,38673,38678,38669,38675,38671,38747,38748,38758,38808,38960,38968,38971,38967,38957,38969,38948,39184,39208,39198,39195,39201,39194,39405,39394,39409,39608,39612,39675,39661,39720,39825,40213,40227,40230,40232,40210,40219,40664,40660,40845,40860,20778,20767,20769,20786,21237,22158,22144,22160,22149,22151,22159,22741,22739,22737,22734,23344,23338,23332,23418,23607,23656,23996,23994,23997,23992,24171,24396,24509,25033,25026,25031,25062,25035,25138,25140,25806,25802,25816,25824,25840,25830,25836,25841,25826,25837,25986,25987,26329,26326,27264,27284,27268,27298,27292,27355,27299,27262,27287,27280,27296,27484,27566,27610,27656,28632,28657,28639,28640,28635,28644,28651,28655,28544,28652,28641,28649,28629,28654,28656,29159,29151,29166,29158,29157,29165,29164,29172,29152,29237,29254,29552,29554,29865,29872,29862,29864,30278,30274,30284,30442,30643,30634,30640,30636,30631,30637,30703,30967,30970,30964,30959,30977,31143,31146,31319,31423,31751,31757,31742,31735,31756,31712,31968,31964,31966,31970,31967,31961,31965,32302,32318,32326,32311,32306,32323,32299,32317,32305,32325,32321,32308,32313,32328,32309,32319,32303,32580,32755,32764,32881,32882,32880,32879,32883,33222,33219,33210,33218,33216,33215,33213,33225,33214,33256,33289,33393,34218,34180,34174,34204,34193,34196,34223,34203,34183,34216,34186,34407,34752,34769,34739,34770,34758,34731,34747,34746,34760,34763,35131,35126,35140,35128,35133,35244,35598,35607,35609,35611,35594,35616,35613,35588,35600,35905,35903,35955,36090,36093,36092,36088,36091,36264,36425,36427,36424,36426,36676,36670,36674,36677,36671,36991,36989,36996,36993,36994,36992,37177,37283,37278,37276,37709,37762,37672,37749,37706,37733,37707,37656,37758,37740,37723,37744,37722,37716,38346,38347,38348,38344,38342,38577,38584,38614,38684,38686,38816,38867,38982,39094,39221,39425,39423,39854,39851,39850,39853,40251,40255,40587,40655,40670,40668,40669,40667,40766,40779,21474,22165,22190,22745,22744,23352,24413,25059,25139,25844,25842,25854,25862,25850,25851,25847,26039,26332,26406,27315,27308,27331,27323,27320,27330,27310,27311,27487,27512,27567,28681,28683,28670,28678,28666,28689,28687,29179,29180,29182,29176,29559,29557,29863,29887,29973,30294,30296,30290,30653,30655,30651,30652,30990,31150,31329,31330,31328,31428,31429,31787,31783,31786,31774,31779,31777,31975,32340,32341,32350,32346,32353,32338,32345,32584,32761,32763,32887,32886,33229,33231,33290,34255,34217,34253,34256,34249,34224,34234,34233,34214,34799,34796,34802,34784,35206,35250,35316,35624,35641,35628,35627,35920,36101,36441,36451,36454,36452,36447,36437,36544,36681,36685,36999,36995,37e3,37291,37292,37328,37780,37770,37782,37794,37811,37806,37804,37808,37784,37786,37783,38356,38358,38352,38357,38626,38620,38617,38619,38622,38692,38819,38822,38829,38905,38989,38991,38988,38990,38995,39098,39230,39231,39229,39214,39333,39438,39617,39683,39686,39759,39758,39757,39882,39881,39933,39880,39872,40273,40285,40288,40672,40725,40748,20787,22181,22750,22751,22754,23541,40848,24300,25074,25079,25078,25077,25856,25871,26336,26333,27365,27357,27354,27347,28699,28703,28712,28698,28701,28693,28696,29190,29197,29272,29346,29560,29562,29885,29898,29923,30087,30086,30303,30305,30663,31001,31153,31339,31337,31806,31807,31800,31805,31799,31808,32363,32365,32377,32361,32362,32645,32371,32694,32697,32696,33240,34281,34269,34282,34261,34276,34277,34295,34811,34821,34829,34809,34814,35168,35167,35158,35166,35649,35676,35672,35657,35674,35662,35663,35654,35673,36104,36106,36476,36466,36487,36470,36460,36474,36468,36692,36686,36781,37002,37003,37297,37294,37857,37841,37855,37827,37832,37852,37853,37846,37858,37837,37848,37860,37847,37864,38364,38580,38627,38698,38695,38753,38876,38907,39006,39e3,39003,39100,39237,39241,39446,39449,39693,39912,39911,39894,39899,40329,40289,40306,40298,40300,40594,40599,40595,40628,21240,22184,22199,22198,22196,22204,22756,23360,23363,23421,23542,24009,25080,25082,25880,25876,25881,26342,26407,27372,28734,28720,28722,29200,29563,29903,30306,30309,31014,31018,31020,31019,31431,31478,31820,31811,31821,31983,31984,36782,32381,32380,32386,32588,32768,33242,33382,34299,34297,34321,34298,34310,34315,34311,34314,34836,34837,35172,35258,35320,35696,35692,35686,35695,35679,35691,36111,36109,36489,36481,36485,36482,37300,37323,37912,37891,37885,38369,38704,39108,39250,39249,39336,39467,39472,39479,39477,39955,39949,40569,40629,40680,40751,40799,40803,40801,20791,20792,22209,22208,22210,22804,23660,24013,25084,25086,25885,25884,26005,26345,27387,27396,27386,27570,28748,29211,29351,29910,29908,30313,30675,31824,32399,32396,32700,34327,34349,34330,34851,34850,34849,34847,35178,35180,35261,35700,35703,35709,36115,36490,36493,36491,36703,36783,37306,37934,37939,37941,37946,37944,37938,37931,38370,38712,38713,38706,38911,39015,39013,39255,39493,39491,39488,39486,39631,39764,39761,39981,39973,40367,40372,40386,40376,40605,40687,40729,40796,40806,40807,20796,20795,22216,22218,22217,23423,24020,24018,24398,25087,25892,27402,27489,28753,28760,29568,29924,30090,30318,30316,31155,31840,31839,32894,32893,33247,35186,35183,35324,35712,36118,36119,36497,36499,36705,37192,37956,37969,37970,38717,38718,38851,38849,39019,39253,39509,39501,39634,39706,40009,39985,39998,39995,40403,40407,40756,40812,40810,40852,22220,24022,25088,25891,25899,25898,26348,27408,29914,31434,31844,31843,31845,32403,32406,32404,33250,34360,34367,34865,35722,37008,37007,37987,37984,37988,38760,39023,39260,39514,39515,39511,39635,39636,39633,40020,40023,40022,40421,40607,40692,22225,22761,25900,28766,30321,30322,30679,32592,32648,34870,34873,34914,35731,35730,35734,33399,36123,37312,37994,38722,38728,38724,38854,39024,39519,39714,39768,40031,40441,40442,40572,40573,40711,40823,40818,24307,27414,28771,31852,31854,34875,35264,36513,37313,38002,38e3,39025,39262,39638,39715,40652,28772,30682,35738,38007,38857,39522,39525,32412,35740,36522,37317,38013,38014,38012,40055,40056,40695,35924,38015,40474,29224,39530,39729,40475,40478,31858,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,20022,20031,20101,20128,20866,20886,20907,21241,21304,21353,21430,22794,23424,24027,12083,24191,24308,24400,24417,25908,26080,30098,30326,36789,38582,168,710,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,65339,65341,10045,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8679,8632,8633,12751,131276,20058,131210,20994,17553,40880,20872,40881,161287,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65506,65508,65287,65282,12849,8470,8481,12443,12444,11904,11908,11910,11911,11912,11914,11916,11917,11925,11932,11933,11941,11943,11946,11948,11950,11958,11964,11966,11974,11978,11980,11981,11983,11990,11991,11998,12003,null,null,null,643,592,603,596,629,339,248,331,650,618,20034,20060,20981,21274,21378,19975,19980,20039,20109,22231,64012,23662,24435,19983,20871,19982,20014,20115,20162,20169,20168,20888,21244,21356,21433,22304,22787,22828,23568,24063,26081,27571,27596,27668,29247,20017,20028,20200,20188,20201,20193,20189,20186,21004,21276,21324,22306,22307,22807,22831,23425,23428,23570,23611,23668,23667,24068,24192,24194,24521,25097,25168,27669,27702,27715,27711,27707,29358,29360,29578,31160,32906,38430,20238,20248,20268,20213,20244,20209,20224,20215,20232,20253,20226,20229,20258,20243,20228,20212,20242,20913,21011,21001,21008,21158,21282,21279,21325,21386,21511,22241,22239,22318,22314,22324,22844,22912,22908,22917,22907,22910,22903,22911,23382,23573,23589,23676,23674,23675,23678,24031,24181,24196,24322,24346,24436,24533,24532,24527,25180,25182,25188,25185,25190,25186,25177,25184,25178,25189,26095,26094,26430,26425,26424,26427,26426,26431,26428,26419,27672,27718,27730,27740,27727,27722,27732,27723,27724,28785,29278,29364,29365,29582,29994,30335,31349,32593,33400,33404,33408,33405,33407,34381,35198,37017,37015,37016,37019,37012,38434,38436,38432,38435,20310,20283,20322,20297,20307,20324,20286,20327,20306,20319,20289,20312,20269,20275,20287,20321,20879,20921,21020,21022,21025,21165,21166,21257,21347,21362,21390,21391,21552,21559,21546,21588,21573,21529,21532,21541,21528,21565,21583,21569,21544,21540,21575,22254,22247,22245,22337,22341,22348,22345,22347,22354,22790,22848,22950,22936,22944,22935,22926,22946,22928,22927,22951,22945,23438,23442,23592,23594,23693,23695,23688,23691,23689,23698,23690,23686,23699,23701,24032,24074,24078,24203,24201,24204,24200,24205,24325,24349,24440,24438,24530,24529,24528,24557,24552,24558,24563,24545,24548,24547,24570,24559,24567,24571,24576,24564,25146,25219,25228,25230,25231,25236,25223,25201,25211,25210,25200,25217,25224,25207,25213,25202,25204,25911,26096,26100,26099,26098,26101,26437,26439,26457,26453,26444,26440,26461,26445,26458,26443,27600,27673,27674,27768,27751,27755,27780,27787,27791,27761,27759,27753,27802,27757,27783,27797,27804,27750,27763,27749,27771,27790,28788,28794,29283,29375,29373,29379,29382,29377,29370,29381,29589,29591,29587,29588,29586,30010,30009,30100,30101,30337,31037,32820,32917,32921,32912,32914,32924,33424,33423,33413,33422,33425,33427,33418,33411,33412,35960,36809,36799,37023,37025,37029,37022,37031,37024,38448,38440,38447,38445,20019,20376,20348,20357,20349,20352,20359,20342,20340,20361,20356,20343,20300,20375,20330,20378,20345,20353,20344,20368,20380,20372,20382,20370,20354,20373,20331,20334,20894,20924,20926,21045,21042,21043,21062,21041,21180,21258,21259,21308,21394,21396,21639,21631,21633,21649,21634,21640,21611,21626,21630,21605,21612,21620,21606,21645,21615,21601,21600,21656,21603,21607,21604,22263,22265,22383,22386,22381,22379,22385,22384,22390,22400,22389,22395,22387,22388,22370,22376,22397,22796,22853,22965,22970,22991,22990,22962,22988,22977,22966,22972,22979,22998,22961,22973,22976,22984,22964,22983,23394,23397,23443,23445,23620,23623,23726,23716,23712,23733,23727,23720,23724,23711,23715,23725,23714,23722,23719,23709,23717,23734,23728,23718,24087,24084,24089,24360,24354,24355,24356,24404,24450,24446,24445,24542,24549,24621,24614,24601,24626,24587,24628,24586,24599,24627,24602,24606,24620,24610,24589,24592,24622,24595,24593,24588,24585,24604,25108,25149,25261,25268,25297,25278,25258,25270,25290,25262,25267,25263,25275,25257,25264,25272,25917,26024,26043,26121,26108,26116,26130,26120,26107,26115,26123,26125,26117,26109,26129,26128,26358,26378,26501,26476,26510,26514,26486,26491,26520,26502,26500,26484,26509,26508,26490,26527,26513,26521,26499,26493,26497,26488,26489,26516,27429,27520,27518,27614,27677,27795,27884,27883,27886,27865,27830,27860,27821,27879,27831,27856,27842,27834,27843,27846,27885,27890,27858,27869,27828,27786,27805,27776,27870,27840,27952,27853,27847,27824,27897,27855,27881,27857,28820,28824,28805,28819,28806,28804,28817,28822,28802,28826,28803,29290,29398,29387,29400,29385,29404,29394,29396,29402,29388,29393,29604,29601,29613,29606,29602,29600,29612,29597,29917,29928,30015,30016,30014,30092,30104,30383,30451,30449,30448,30453,30712,30716,30713,30715,30714,30711,31042,31039,31173,31352,31355,31483,31861,31997,32821,32911,32942,32931,32952,32949,32941,33312,33440,33472,33451,33434,33432,33435,33461,33447,33454,33468,33438,33466,33460,33448,33441,33449,33474,33444,33475,33462,33442,34416,34415,34413,34414,35926,36818,36811,36819,36813,36822,36821,36823,37042,37044,37039,37043,37040,38457,38461,38460,38458,38467,20429,20421,20435,20402,20425,20427,20417,20436,20444,20441,20411,20403,20443,20423,20438,20410,20416,20409,20460,21060,21065,21184,21186,21309,21372,21399,21398,21401,21400,21690,21665,21677,21669,21711,21699,33549,21687,21678,21718,21686,21701,21702,21664,21616,21692,21666,21694,21618,21726,21680,22453,22430,22431,22436,22412,22423,22429,22427,22420,22424,22415,22425,22437,22426,22421,22772,22797,22867,23009,23006,23022,23040,23025,23005,23034,23037,23036,23030,23012,23026,23031,23003,23017,23027,23029,23008,23038,23028,23021,23464,23628,23760,23768,23756,23767,23755,23771,23774,23770,23753,23751,23754,23766,23763,23764,23759,23752,23750,23758,23775,23800,24057,24097,24098,24099,24096,24100,24240,24228,24226,24219,24227,24229,24327,24366,24406,24454,24631,24633,24660,24690,24670,24645,24659,24647,24649,24667,24652,24640,24642,24671,24612,24644,24664,24678,24686,25154,25155,25295,25357,25355,25333,25358,25347,25323,25337,25359,25356,25336,25334,25344,25363,25364,25338,25365,25339,25328,25921,25923,26026,26047,26166,26145,26162,26165,26140,26150,26146,26163,26155,26170,26141,26164,26169,26158,26383,26384,26561,26610,26568,26554,26588,26555,26616,26584,26560,26551,26565,26603,26596,26591,26549,26573,26547,26615,26614,26606,26595,26562,26553,26574,26599,26608,26546,26620,26566,26605,26572,26542,26598,26587,26618,26569,26570,26563,26602,26571,27432,27522,27524,27574,27606,27608,27616,27680,27681,27944,27956,27949,27935,27964,27967,27922,27914,27866,27955,27908,27929,27962,27930,27921,27904,27933,27970,27905,27928,27959,27907,27919,27968,27911,27936,27948,27912,27938,27913,27920,28855,28831,28862,28849,28848,28833,28852,28853,28841,29249,29257,29258,29292,29296,29299,29294,29386,29412,29416,29419,29407,29418,29414,29411,29573,29644,29634,29640,29637,29625,29622,29621,29620,29675,29631,29639,29630,29635,29638,29624,29643,29932,29934,29998,30023,30024,30119,30122,30329,30404,30472,30467,30468,30469,30474,30455,30459,30458,30695,30696,30726,30737,30738,30725,30736,30735,30734,30729,30723,30739,31050,31052,31051,31045,31044,31189,31181,31183,31190,31182,31360,31358,31441,31488,31489,31866,31864,31865,31871,31872,31873,32003,32008,32001,32600,32657,32653,32702,32775,32782,32783,32788,32823,32984,32967,32992,32977,32968,32962,32976,32965,32995,32985,32988,32970,32981,32969,32975,32983,32998,32973,33279,33313,33428,33497,33534,33529,33543,33512,33536,33493,33594,33515,33494,33524,33516,33505,33522,33525,33548,33531,33526,33520,33514,33508,33504,33530,33523,33517,34423,34420,34428,34419,34881,34894,34919,34922,34921,35283,35332,35335,36210,36835,36833,36846,36832,37105,37053,37055,37077,37061,37054,37063,37067,37064,37332,37331,38484,38479,38481,38483,38474,38478,20510,20485,20487,20499,20514,20528,20507,20469,20468,20531,20535,20524,20470,20471,20503,20508,20512,20519,20533,20527,20529,20494,20826,20884,20883,20938,20932,20933,20936,20942,21089,21082,21074,21086,21087,21077,21090,21197,21262,21406,21798,21730,21783,21778,21735,21747,21732,21786,21759,21764,21768,21739,21777,21765,21745,21770,21755,21751,21752,21728,21774,21763,21771,22273,22274,22476,22578,22485,22482,22458,22470,22461,22460,22456,22454,22463,22471,22480,22457,22465,22798,22858,23065,23062,23085,23086,23061,23055,23063,23050,23070,23091,23404,23463,23469,23468,23555,23638,23636,23788,23807,23790,23793,23799,23808,23801,24105,24104,24232,24238,24234,24236,24371,24368,24423,24669,24666,24679,24641,24738,24712,24704,24722,24705,24733,24707,24725,24731,24727,24711,24732,24718,25113,25158,25330,25360,25430,25388,25412,25413,25398,25411,25572,25401,25419,25418,25404,25385,25409,25396,25432,25428,25433,25389,25415,25395,25434,25425,25400,25431,25408,25416,25930,25926,26054,26051,26052,26050,26186,26207,26183,26193,26386,26387,26655,26650,26697,26674,26675,26683,26699,26703,26646,26673,26652,26677,26667,26669,26671,26702,26692,26676,26653,26642,26644,26662,26664,26670,26701,26682,26661,26656,27436,27439,27437,27441,27444,27501,32898,27528,27622,27620,27624,27619,27618,27623,27685,28026,28003,28004,28022,27917,28001,28050,27992,28002,28013,28015,28049,28045,28143,28031,28038,27998,28007,28e3,28055,28016,28028,27999,28034,28056,27951,28008,28043,28030,28032,28036,27926,28035,28027,28029,28021,28048,28892,28883,28881,28893,28875,32569,28898,28887,28882,28894,28896,28884,28877,28869,28870,28871,28890,28878,28897,29250,29304,29303,29302,29440,29434,29428,29438,29430,29427,29435,29441,29651,29657,29669,29654,29628,29671,29667,29673,29660,29650,29659,29652,29661,29658,29655,29656,29672,29918,29919,29940,29941,29985,30043,30047,30128,30145,30139,30148,30144,30143,30134,30138,30346,30409,30493,30491,30480,30483,30482,30499,30481,30485,30489,30490,30498,30503,30755,30764,30754,30773,30767,30760,30766,30763,30753,30761,30771,30762,30769,31060,31067,31055,31068,31059,31058,31057,31211,31212,31200,31214,31213,31210,31196,31198,31197,31366,31369,31365,31371,31372,31370,31367,31448,31504,31492,31507,31493,31503,31496,31498,31502,31497,31506,31876,31889,31882,31884,31880,31885,31877,32030,32029,32017,32014,32024,32022,32019,32031,32018,32015,32012,32604,32609,32606,32608,32605,32603,32662,32658,32707,32706,32704,32790,32830,32825,33018,33010,33017,33013,33025,33019,33024,33281,33327,33317,33587,33581,33604,33561,33617,33573,33622,33599,33601,33574,33564,33570,33602,33614,33563,33578,33544,33596,33613,33558,33572,33568,33591,33583,33577,33607,33605,33612,33619,33566,33580,33611,33575,33608,34387,34386,34466,34472,34454,34445,34449,34462,34439,34455,34438,34443,34458,34437,34469,34457,34465,34471,34453,34456,34446,34461,34448,34452,34883,34884,34925,34933,34934,34930,34944,34929,34943,34927,34947,34942,34932,34940,35346,35911,35927,35963,36004,36003,36214,36216,36277,36279,36278,36561,36563,36862,36853,36866,36863,36859,36868,36860,36854,37078,37088,37081,37082,37091,37087,37093,37080,37083,37079,37084,37092,37200,37198,37199,37333,37346,37338,38492,38495,38588,39139,39647,39727,20095,20592,20586,20577,20574,20576,20563,20555,20573,20594,20552,20557,20545,20571,20554,20578,20501,20549,20575,20585,20587,20579,20580,20550,20544,20590,20595,20567,20561,20944,21099,21101,21100,21102,21206,21203,21293,21404,21877,21878,21820,21837,21840,21812,21802,21841,21858,21814,21813,21808,21842,21829,21772,21810,21861,21838,21817,21832,21805,21819,21824,21835,22282,22279,22523,22548,22498,22518,22492,22516,22528,22509,22525,22536,22520,22539,22515,22479,22535,22510,22499,22514,22501,22508,22497,22542,22524,22544,22503,22529,22540,22513,22505,22512,22541,22532,22876,23136,23128,23125,23143,23134,23096,23093,23149,23120,23135,23141,23148,23123,23140,23127,23107,23133,23122,23108,23131,23112,23182,23102,23117,23097,23116,23152,23145,23111,23121,23126,23106,23132,23410,23406,23489,23488,23641,23838,23819,23837,23834,23840,23820,23848,23821,23846,23845,23823,23856,23826,23843,23839,23854,24126,24116,24241,24244,24249,24242,24243,24374,24376,24475,24470,24479,24714,24720,24710,24766,24752,24762,24787,24788,24783,24804,24793,24797,24776,24753,24795,24759,24778,24767,24771,24781,24768,25394,25445,25482,25474,25469,25533,25502,25517,25501,25495,25515,25486,25455,25479,25488,25454,25519,25461,25500,25453,25518,25468,25508,25403,25503,25464,25477,25473,25489,25485,25456,25939,26061,26213,26209,26203,26201,26204,26210,26392,26745,26759,26768,26780,26733,26734,26798,26795,26966,26735,26787,26796,26793,26741,26740,26802,26767,26743,26770,26748,26731,26738,26794,26752,26737,26750,26779,26774,26763,26784,26761,26788,26744,26747,26769,26764,26762,26749,27446,27443,27447,27448,27537,27535,27533,27534,27532,27690,28096,28075,28084,28083,28276,28076,28137,28130,28087,28150,28116,28160,28104,28128,28127,28118,28094,28133,28124,28125,28123,28148,28106,28093,28141,28144,28090,28117,28098,28111,28105,28112,28146,28115,28157,28119,28109,28131,28091,28922,28941,28919,28951,28916,28940,28912,28932,28915,28944,28924,28927,28934,28947,28928,28920,28918,28939,28930,28942,29310,29307,29308,29311,29469,29463,29447,29457,29464,29450,29448,29439,29455,29470,29576,29686,29688,29685,29700,29697,29693,29703,29696,29690,29692,29695,29708,29707,29684,29704,30052,30051,30158,30162,30159,30155,30156,30161,30160,30351,30345,30419,30521,30511,30509,30513,30514,30516,30515,30525,30501,30523,30517,30792,30802,30793,30797,30794,30796,30758,30789,30800,31076,31079,31081,31082,31075,31083,31073,31163,31226,31224,31222,31223,31375,31380,31376,31541,31559,31540,31525,31536,31522,31524,31539,31512,31530,31517,31537,31531,31533,31535,31538,31544,31514,31523,31892,31896,31894,31907,32053,32061,32056,32054,32058,32069,32044,32041,32065,32071,32062,32063,32074,32059,32040,32611,32661,32668,32669,32667,32714,32715,32717,32720,32721,32711,32719,32713,32799,32798,32795,32839,32835,32840,33048,33061,33049,33051,33069,33055,33068,33054,33057,33045,33063,33053,33058,33297,33336,33331,33338,33332,33330,33396,33680,33699,33704,33677,33658,33651,33700,33652,33679,33665,33685,33689,33653,33684,33705,33661,33667,33676,33693,33691,33706,33675,33662,33701,33711,33672,33687,33712,33663,33702,33671,33710,33654,33690,34393,34390,34495,34487,34498,34497,34501,34490,34480,34504,34489,34483,34488,34508,34484,34491,34492,34499,34493,34494,34898,34953,34965,34984,34978,34986,34970,34961,34977,34975,34968,34983,34969,34971,34967,34980,34988,34956,34963,34958,35202,35286,35289,35285,35376,35367,35372,35358,35897,35899,35932,35933,35965,36005,36221,36219,36217,36284,36290,36281,36287,36289,36568,36574,36573,36572,36567,36576,36577,36900,36875,36881,36892,36876,36897,37103,37098,37104,37108,37106,37107,37076,37099,37100,37097,37206,37208,37210,37203,37205,37356,37364,37361,37363,37368,37348,37369,37354,37355,37367,37352,37358,38266,38278,38280,38524,38509,38507,38513,38511,38591,38762,38916,39141,39319,20635,20629,20628,20638,20619,20643,20611,20620,20622,20637,20584,20636,20626,20610,20615,20831,20948,21266,21265,21412,21415,21905,21928,21925,21933,21879,22085,21922,21907,21896,21903,21941,21889,21923,21906,21924,21885,21900,21926,21887,21909,21921,21902,22284,22569,22583,22553,22558,22567,22563,22568,22517,22600,22565,22556,22555,22579,22591,22582,22574,22585,22584,22573,22572,22587,22881,23215,23188,23199,23162,23202,23198,23160,23206,23164,23205,23212,23189,23214,23095,23172,23178,23191,23171,23179,23209,23163,23165,23180,23196,23183,23187,23197,23530,23501,23499,23508,23505,23498,23502,23564,23600,23863,23875,23915,23873,23883,23871,23861,23889,23886,23893,23859,23866,23890,23869,23857,23897,23874,23865,23881,23864,23868,23858,23862,23872,23877,24132,24129,24408,24486,24485,24491,24777,24761,24780,24802,24782,24772,24852,24818,24842,24854,24837,24821,24851,24824,24828,24830,24769,24835,24856,24861,24848,24831,24836,24843,25162,25492,25521,25520,25550,25573,25576,25583,25539,25757,25587,25546,25568,25590,25557,25586,25589,25697,25567,25534,25565,25564,25540,25560,25555,25538,25543,25548,25547,25544,25584,25559,25561,25906,25959,25962,25956,25948,25960,25957,25996,26013,26014,26030,26064,26066,26236,26220,26235,26240,26225,26233,26218,26226,26369,26892,26835,26884,26844,26922,26860,26858,26865,26895,26838,26871,26859,26852,26870,26899,26896,26867,26849,26887,26828,26888,26992,26804,26897,26863,26822,26900,26872,26832,26877,26876,26856,26891,26890,26903,26830,26824,26845,26846,26854,26868,26833,26886,26836,26857,26901,26917,26823,27449,27451,27455,27452,27540,27543,27545,27541,27581,27632,27634,27635,27696,28156,28230,28231,28191,28233,28296,28220,28221,28229,28258,28203,28223,28225,28253,28275,28188,28211,28235,28224,28241,28219,28163,28206,28254,28264,28252,28257,28209,28200,28256,28273,28267,28217,28194,28208,28243,28261,28199,28280,28260,28279,28245,28281,28242,28262,28213,28214,28250,28960,28958,28975,28923,28974,28977,28963,28965,28962,28978,28959,28968,28986,28955,29259,29274,29320,29321,29318,29317,29323,29458,29451,29488,29474,29489,29491,29479,29490,29485,29478,29475,29493,29452,29742,29740,29744,29739,29718,29722,29729,29741,29745,29732,29731,29725,29737,29728,29746,29947,29999,30063,30060,30183,30170,30177,30182,30173,30175,30180,30167,30357,30354,30426,30534,30535,30532,30541,30533,30538,30542,30539,30540,30686,30700,30816,30820,30821,30812,30829,30833,30826,30830,30832,30825,30824,30814,30818,31092,31091,31090,31088,31234,31242,31235,31244,31236,31385,31462,31460,31562,31547,31556,31560,31564,31566,31552,31576,31557,31906,31902,31912,31905,32088,32111,32099,32083,32086,32103,32106,32079,32109,32092,32107,32082,32084,32105,32081,32095,32078,32574,32575,32613,32614,32674,32672,32673,32727,32849,32847,32848,33022,32980,33091,33098,33106,33103,33095,33085,33101,33082,33254,33262,33271,33272,33273,33284,33340,33341,33343,33397,33595,33743,33785,33827,33728,33768,33810,33767,33764,33788,33782,33808,33734,33736,33771,33763,33727,33793,33757,33765,33752,33791,33761,33739,33742,33750,33781,33737,33801,33807,33758,33809,33798,33730,33779,33749,33786,33735,33745,33770,33811,33731,33772,33774,33732,33787,33751,33762,33819,33755,33790,34520,34530,34534,34515,34531,34522,34538,34525,34539,34524,34540,34537,34519,34536,34513,34888,34902,34901,35002,35031,35001,35e3,35008,35006,34998,35004,34999,35005,34994,35073,35017,35221,35224,35223,35293,35290,35291,35406,35405,35385,35417,35392,35415,35416,35396,35397,35410,35400,35409,35402,35404,35407,35935,35969,35968,36026,36030,36016,36025,36021,36228,36224,36233,36312,36307,36301,36295,36310,36316,36303,36309,36313,36296,36311,36293,36591,36599,36602,36601,36582,36590,36581,36597,36583,36584,36598,36587,36593,36588,36596,36585,36909,36916,36911,37126,37164,37124,37119,37116,37128,37113,37115,37121,37120,37127,37125,37123,37217,37220,37215,37218,37216,37377,37386,37413,37379,37402,37414,37391,37388,37376,37394,37375,37373,37382,37380,37415,37378,37404,37412,37401,37399,37381,37398,38267,38285,38284,38288,38535,38526,38536,38537,38531,38528,38594,38600,38595,38641,38640,38764,38768,38766,38919,39081,39147,40166,40697,20099,20100,20150,20669,20671,20678,20654,20676,20682,20660,20680,20674,20656,20673,20666,20657,20683,20681,20662,20664,20951,21114,21112,21115,21116,21955,21979,21964,21968,21963,21962,21981,21952,21972,21956,21993,21951,21970,21901,21967,21973,21986,21974,21960,22002,21965,21977,21954,22292,22611,22632,22628,22607,22605,22601,22639,22613,22606,22621,22617,22629,22619,22589,22627,22641,22780,23239,23236,23243,23226,23224,23217,23221,23216,23231,23240,23227,23238,23223,23232,23242,23220,23222,23245,23225,23184,23510,23512,23513,23583,23603,23921,23907,23882,23909,23922,23916,23902,23912,23911,23906,24048,24143,24142,24138,24141,24139,24261,24268,24262,24267,24263,24384,24495,24493,24823,24905,24906,24875,24901,24886,24882,24878,24902,24879,24911,24873,24896,25120,37224,25123,25125,25124,25541,25585,25579,25616,25618,25609,25632,25636,25651,25667,25631,25621,25624,25657,25655,25634,25635,25612,25638,25648,25640,25665,25653,25647,25610,25626,25664,25637,25639,25611,25575,25627,25646,25633,25614,25967,26002,26067,26246,26252,26261,26256,26251,26250,26265,26260,26232,26400,26982,26975,26936,26958,26978,26993,26943,26949,26986,26937,26946,26967,26969,27002,26952,26953,26933,26988,26931,26941,26981,26864,27e3,26932,26985,26944,26991,26948,26998,26968,26945,26996,26956,26939,26955,26935,26972,26959,26961,26930,26962,26927,27003,26940,27462,27461,27459,27458,27464,27457,27547,64013,27643,27644,27641,27639,27640,28315,28374,28360,28303,28352,28319,28307,28308,28320,28337,28345,28358,28370,28349,28353,28318,28361,28343,28336,28365,28326,28367,28338,28350,28355,28380,28376,28313,28306,28302,28301,28324,28321,28351,28339,28368,28362,28311,28334,28323,28999,29012,29010,29027,29024,28993,29021,29026,29042,29048,29034,29025,28994,29016,28995,29003,29040,29023,29008,29011,28996,29005,29018,29263,29325,29324,29329,29328,29326,29500,29506,29499,29498,29504,29514,29513,29764,29770,29771,29778,29777,29783,29760,29775,29776,29774,29762,29766,29773,29780,29921,29951,29950,29949,29981,30073,30071,27011,30191,30223,30211,30199,30206,30204,30201,30200,30224,30203,30198,30189,30197,30205,30361,30389,30429,30549,30559,30560,30546,30550,30554,30569,30567,30548,30553,30573,30688,30855,30874,30868,30863,30852,30869,30853,30854,30881,30851,30841,30873,30848,30870,30843,31100,31106,31101,31097,31249,31256,31257,31250,31255,31253,31266,31251,31259,31248,31395,31394,31390,31467,31590,31588,31597,31604,31593,31602,31589,31603,31601,31600,31585,31608,31606,31587,31922,31924,31919,32136,32134,32128,32141,32127,32133,32122,32142,32123,32131,32124,32140,32148,32132,32125,32146,32621,32619,32615,32616,32620,32678,32677,32679,32731,32732,32801,33124,33120,33143,33116,33129,33115,33122,33138,26401,33118,33142,33127,33135,33092,33121,33309,33353,33348,33344,33346,33349,34033,33855,33878,33910,33913,33935,33933,33893,33873,33856,33926,33895,33840,33869,33917,33882,33881,33908,33907,33885,34055,33886,33847,33850,33844,33914,33859,33912,33842,33861,33833,33753,33867,33839,33858,33837,33887,33904,33849,33870,33868,33874,33903,33989,33934,33851,33863,33846,33843,33896,33918,33860,33835,33888,33876,33902,33872,34571,34564,34551,34572,34554,34518,34549,34637,34552,34574,34569,34561,34550,34573,34565,35030,35019,35021,35022,35038,35035,35034,35020,35024,35205,35227,35295,35301,35300,35297,35296,35298,35292,35302,35446,35462,35455,35425,35391,35447,35458,35460,35445,35459,35457,35444,35450,35900,35915,35914,35941,35940,35942,35974,35972,35973,36044,36200,36201,36241,36236,36238,36239,36237,36243,36244,36240,36242,36336,36320,36332,36337,36334,36304,36329,36323,36322,36327,36338,36331,36340,36614,36607,36609,36608,36613,36615,36616,36610,36619,36946,36927,36932,36937,36925,37136,37133,37135,37137,37142,37140,37131,37134,37230,37231,37448,37458,37424,37434,37478,37427,37477,37470,37507,37422,37450,37446,37485,37484,37455,37472,37479,37487,37430,37473,37488,37425,37460,37475,37456,37490,37454,37459,37452,37462,37426,38303,38300,38302,38299,38546,38547,38545,38551,38606,38650,38653,38648,38645,38771,38775,38776,38770,38927,38925,38926,39084,39158,39161,39343,39346,39344,39349,39597,39595,39771,40170,40173,40167,40576,40701,20710,20692,20695,20712,20723,20699,20714,20701,20708,20691,20716,20720,20719,20707,20704,20952,21120,21121,21225,21227,21296,21420,22055,22037,22028,22034,22012,22031,22044,22017,22035,22018,22010,22045,22020,22015,22009,22665,22652,22672,22680,22662,22657,22655,22644,22667,22650,22663,22673,22670,22646,22658,22664,22651,22676,22671,22782,22891,23260,23278,23269,23253,23274,23258,23277,23275,23283,23266,23264,23259,23276,23262,23261,23257,23272,23263,23415,23520,23523,23651,23938,23936,23933,23942,23930,23937,23927,23946,23945,23944,23934,23932,23949,23929,23935,24152,24153,24147,24280,24273,24279,24270,24284,24277,24281,24274,24276,24388,24387,24431,24502,24876,24872,24897,24926,24945,24947,24914,24915,24946,24940,24960,24948,24916,24954,24923,24933,24891,24938,24929,24918,25129,25127,25131,25643,25677,25691,25693,25716,25718,25714,25715,25725,25717,25702,25766,25678,25730,25694,25692,25675,25683,25696,25680,25727,25663,25708,25707,25689,25701,25719,25971,26016,26273,26272,26271,26373,26372,26402,27057,27062,27081,27040,27086,27030,27056,27052,27068,27025,27033,27022,27047,27021,27049,27070,27055,27071,27076,27069,27044,27092,27065,27082,27034,27087,27059,27027,27050,27041,27038,27097,27031,27024,27074,27061,27045,27078,27466,27469,27467,27550,27551,27552,27587,27588,27646,28366,28405,28401,28419,28453,28408,28471,28411,28462,28425,28494,28441,28442,28455,28440,28475,28434,28397,28426,28470,28531,28409,28398,28461,28480,28464,28476,28469,28395,28423,28430,28483,28421,28413,28406,28473,28444,28412,28474,28447,28429,28446,28424,28449,29063,29072,29065,29056,29061,29058,29071,29051,29062,29057,29079,29252,29267,29335,29333,29331,29507,29517,29521,29516,29794,29811,29809,29813,29810,29799,29806,29952,29954,29955,30077,30096,30230,30216,30220,30229,30225,30218,30228,30392,30593,30588,30597,30594,30574,30592,30575,30590,30595,30898,30890,30900,30893,30888,30846,30891,30878,30885,30880,30892,30882,30884,31128,31114,31115,31126,31125,31124,31123,31127,31112,31122,31120,31275,31306,31280,31279,31272,31270,31400,31403,31404,31470,31624,31644,31626,31633,31632,31638,31629,31628,31643,31630,31621,31640,21124,31641,31652,31618,31931,31935,31932,31930,32167,32183,32194,32163,32170,32193,32192,32197,32157,32206,32196,32198,32203,32204,32175,32185,32150,32188,32159,32166,32174,32169,32161,32201,32627,32738,32739,32741,32734,32804,32861,32860,33161,33158,33155,33159,33165,33164,33163,33301,33943,33956,33953,33951,33978,33998,33986,33964,33966,33963,33977,33972,33985,33997,33962,33946,33969,34e3,33949,33959,33979,33954,33940,33991,33996,33947,33961,33967,33960,34006,33944,33974,33999,33952,34007,34004,34002,34011,33968,33937,34401,34611,34595,34600,34667,34624,34606,34590,34593,34585,34587,34627,34604,34625,34622,34630,34592,34610,34602,34605,34620,34578,34618,34609,34613,34626,34598,34599,34616,34596,34586,34608,34577,35063,35047,35057,35058,35066,35070,35054,35068,35062,35067,35056,35052,35051,35229,35233,35231,35230,35305,35307,35304,35499,35481,35467,35474,35471,35478,35901,35944,35945,36053,36047,36055,36246,36361,36354,36351,36365,36349,36362,36355,36359,36358,36357,36350,36352,36356,36624,36625,36622,36621,37155,37148,37152,37154,37151,37149,37146,37156,37153,37147,37242,37234,37241,37235,37541,37540,37494,37531,37498,37536,37524,37546,37517,37542,37530,37547,37497,37527,37503,37539,37614,37518,37506,37525,37538,37501,37512,37537,37514,37510,37516,37529,37543,37502,37511,37545,37533,37515,37421,38558,38561,38655,38744,38781,38778,38782,38787,38784,38786,38779,38788,38785,38783,38862,38861,38934,39085,39086,39170,39168,39175,39325,39324,39363,39353,39355,39354,39362,39357,39367,39601,39651,39655,39742,39743,39776,39777,39775,40177,40178,40181,40615,20735,20739,20784,20728,20742,20743,20726,20734,20747,20748,20733,20746,21131,21132,21233,21231,22088,22082,22092,22069,22081,22090,22089,22086,22104,22106,22080,22067,22077,22060,22078,22072,22058,22074,22298,22699,22685,22705,22688,22691,22703,22700,22693,22689,22783,23295,23284,23293,23287,23286,23299,23288,23298,23289,23297,23303,23301,23311,23655,23961,23959,23967,23954,23970,23955,23957,23968,23964,23969,23962,23966,24169,24157,24160,24156,32243,24283,24286,24289,24393,24498,24971,24963,24953,25009,25008,24994,24969,24987,24979,25007,25005,24991,24978,25002,24993,24973,24934,25011,25133,25710,25712,25750,25760,25733,25751,25756,25743,25739,25738,25740,25763,25759,25704,25777,25752,25974,25978,25977,25979,26034,26035,26293,26288,26281,26290,26295,26282,26287,27136,27142,27159,27109,27128,27157,27121,27108,27168,27135,27116,27106,27163,27165,27134,27175,27122,27118,27156,27127,27111,27200,27144,27110,27131,27149,27132,27115,27145,27140,27160,27173,27151,27126,27174,27143,27124,27158,27473,27557,27555,27554,27558,27649,27648,27647,27650,28481,28454,28542,28551,28614,28562,28557,28553,28556,28514,28495,28549,28506,28566,28534,28524,28546,28501,28530,28498,28496,28503,28564,28563,28509,28416,28513,28523,28541,28519,28560,28499,28555,28521,28543,28565,28515,28535,28522,28539,29106,29103,29083,29104,29088,29082,29097,29109,29085,29093,29086,29092,29089,29098,29084,29095,29107,29336,29338,29528,29522,29534,29535,29536,29533,29531,29537,29530,29529,29538,29831,29833,29834,29830,29825,29821,29829,29832,29820,29817,29960,29959,30078,30245,30238,30233,30237,30236,30243,30234,30248,30235,30364,30365,30366,30363,30605,30607,30601,30600,30925,30907,30927,30924,30929,30926,30932,30920,30915,30916,30921,31130,31137,31136,31132,31138,31131,27510,31289,31410,31412,31411,31671,31691,31678,31660,31694,31663,31673,31690,31669,31941,31944,31948,31947,32247,32219,32234,32231,32215,32225,32259,32250,32230,32246,32241,32240,32238,32223,32630,32684,32688,32685,32749,32747,32746,32748,32742,32744,32868,32871,33187,33183,33182,33173,33186,33177,33175,33302,33359,33363,33362,33360,33358,33361,34084,34107,34063,34048,34089,34062,34057,34061,34079,34058,34087,34076,34043,34091,34042,34056,34060,34036,34090,34034,34069,34039,34027,34035,34044,34066,34026,34025,34070,34046,34088,34077,34094,34050,34045,34078,34038,34097,34086,34023,34024,34032,34031,34041,34072,34080,34096,34059,34073,34095,34402,34646,34659,34660,34679,34785,34675,34648,34644,34651,34642,34657,34650,34641,34654,34669,34666,34640,34638,34655,34653,34671,34668,34682,34670,34652,34661,34639,34683,34677,34658,34663,34665,34906,35077,35084,35092,35083,35095,35096,35097,35078,35094,35089,35086,35081,35234,35236,35235,35309,35312,35308,35535,35526,35512,35539,35537,35540,35541,35515,35543,35518,35520,35525,35544,35523,35514,35517,35545,35902,35917,35983,36069,36063,36057,36072,36058,36061,36071,36256,36252,36257,36251,36384,36387,36389,36388,36398,36373,36379,36374,36369,36377,36390,36391,36372,36370,36376,36371,36380,36375,36378,36652,36644,36632,36634,36640,36643,36630,36631,36979,36976,36975,36967,36971,37167,37163,37161,37162,37170,37158,37166,37253,37254,37258,37249,37250,37252,37248,37584,37571,37572,37568,37593,37558,37583,37617,37599,37592,37609,37591,37597,37580,37615,37570,37608,37578,37576,37582,37606,37581,37589,37577,37600,37598,37607,37585,37587,37557,37601,37574,37556,38268,38316,38315,38318,38320,38564,38562,38611,38661,38664,38658,38746,38794,38798,38792,38864,38863,38942,38941,38950,38953,38952,38944,38939,38951,39090,39176,39162,39185,39188,39190,39191,39189,39388,39373,39375,39379,39380,39374,39369,39382,39384,39371,39383,39372,39603,39660,39659,39667,39666,39665,39750,39747,39783,39796,39793,39782,39798,39797,39792,39784,39780,39788,40188,40186,40189,40191,40183,40199,40192,40185,40187,40200,40197,40196,40579,40659,40719,40720,20764,20755,20759,20762,20753,20958,21300,21473,22128,22112,22126,22131,22118,22115,22125,22130,22110,22135,22300,22299,22728,22717,22729,22719,22714,22722,22716,22726,23319,23321,23323,23329,23316,23315,23312,23318,23336,23322,23328,23326,23535,23980,23985,23977,23975,23989,23984,23982,23978,23976,23986,23981,23983,23988,24167,24168,24166,24175,24297,24295,24294,24296,24293,24395,24508,24989,25e3,24982,25029,25012,25030,25025,25036,25018,25023,25016,24972,25815,25814,25808,25807,25801,25789,25737,25795,25819,25843,25817,25907,25983,25980,26018,26312,26302,26304,26314,26315,26319,26301,26299,26298,26316,26403,27188,27238,27209,27239,27186,27240,27198,27229,27245,27254,27227,27217,27176,27226,27195,27199,27201,27242,27236,27216,27215,27220,27247,27241,27232,27196,27230,27222,27221,27213,27214,27206,27477,27476,27478,27559,27562,27563,27592,27591,27652,27651,27654,28589,28619,28579,28615,28604,28622,28616,28510,28612,28605,28574,28618,28584,28676,28581,28590,28602,28588,28586,28623,28607,28600,28578,28617,28587,28621,28591,28594,28592,29125,29122,29119,29112,29142,29120,29121,29131,29140,29130,29127,29135,29117,29144,29116,29126,29146,29147,29341,29342,29545,29542,29543,29548,29541,29547,29546,29823,29850,29856,29844,29842,29845,29857,29963,30080,30255,30253,30257,30269,30259,30268,30261,30258,30256,30395,30438,30618,30621,30625,30620,30619,30626,30627,30613,30617,30615,30941,30953,30949,30954,30942,30947,30939,30945,30946,30957,30943,30944,31140,31300,31304,31303,31414,31416,31413,31409,31415,31710,31715,31719,31709,31701,31717,31706,31720,31737,31700,31722,31714,31708,31723,31704,31711,31954,31956,31959,31952,31953,32274,32289,32279,32268,32287,32288,32275,32270,32284,32277,32282,32290,32267,32271,32278,32269,32276,32293,32292,32579,32635,32636,32634,32689,32751,32810,32809,32876,33201,33190,33198,33209,33205,33195,33200,33196,33204,33202,33207,33191,33266,33365,33366,33367,34134,34117,34155,34125,34131,34145,34136,34112,34118,34148,34113,34146,34116,34129,34119,34147,34110,34139,34161,34126,34158,34165,34133,34151,34144,34188,34150,34141,34132,34149,34156,34403,34405,34404,34715,34703,34711,34707,34706,34696,34689,34710,34712,34681,34695,34723,34693,34704,34705,34717,34692,34708,34716,34714,34697,35102,35110,35120,35117,35118,35111,35121,35106,35113,35107,35119,35116,35103,35313,35552,35554,35570,35572,35573,35549,35604,35556,35551,35568,35528,35550,35553,35560,35583,35567,35579,35985,35986,35984,36085,36078,36081,36080,36083,36204,36206,36261,36263,36403,36414,36408,36416,36421,36406,36412,36413,36417,36400,36415,36541,36662,36654,36661,36658,36665,36663,36660,36982,36985,36987,36998,37114,37171,37173,37174,37267,37264,37265,37261,37263,37671,37662,37640,37663,37638,37647,37754,37688,37692,37659,37667,37650,37633,37702,37677,37646,37645,37579,37661,37626,37669,37651,37625,37623,37684,37634,37668,37631,37673,37689,37685,37674,37652,37644,37643,37630,37641,37632,37627,37654,38332,38349,38334,38329,38330,38326,38335,38325,38333,38569,38612,38667,38674,38672,38809,38807,38804,38896,38904,38965,38959,38962,39204,39199,39207,39209,39326,39406,39404,39397,39396,39408,39395,39402,39401,39399,39609,39615,39604,39611,39670,39674,39673,39671,39731,39808,39813,39815,39804,39806,39803,39810,39827,39826,39824,39802,39829,39805,39816,40229,40215,40224,40222,40212,40233,40221,40216,40226,40208,40217,40223,40584,40582,40583,40622,40621,40661,40662,40698,40722,40765,20774,20773,20770,20772,20768,20777,21236,22163,22156,22157,22150,22148,22147,22142,22146,22143,22145,22742,22740,22735,22738,23341,23333,23346,23331,23340,23335,23334,23343,23342,23419,23537,23538,23991,24172,24170,24510,24507,25027,25013,25020,25063,25056,25061,25060,25064,25054,25839,25833,25827,25835,25828,25832,25985,25984,26038,26074,26322,27277,27286,27265,27301,27273,27295,27291,27297,27294,27271,27283,27278,27285,27267,27304,27300,27281,27263,27302,27290,27269,27276,27282,27483,27565,27657,28620,28585,28660,28628,28643,28636,28653,28647,28646,28638,28658,28637,28642,28648,29153,29169,29160,29170,29156,29168,29154,29555,29550,29551,29847,29874,29867,29840,29866,29869,29873,29861,29871,29968,29969,29970,29967,30084,30275,30280,30281,30279,30372,30441,30645,30635,30642,30647,30646,30644,30641,30632,30704,30963,30973,30978,30971,30972,30962,30981,30969,30974,30980,31147,31144,31324,31323,31318,31320,31316,31322,31422,31424,31425,31749,31759,31730,31744,31743,31739,31758,31732,31755,31731,31746,31753,31747,31745,31736,31741,31750,31728,31729,31760,31754,31976,32301,32316,32322,32307,38984,32312,32298,32329,32320,32327,32297,32332,32304,32315,32310,32324,32314,32581,32639,32638,32637,32756,32754,32812,33211,33220,33228,33226,33221,33223,33212,33257,33371,33370,33372,34179,34176,34191,34215,34197,34208,34187,34211,34171,34212,34202,34206,34167,34172,34185,34209,34170,34168,34135,34190,34198,34182,34189,34201,34205,34177,34210,34178,34184,34181,34169,34166,34200,34192,34207,34408,34750,34730,34733,34757,34736,34732,34745,34741,34748,34734,34761,34755,34754,34764,34743,34735,34756,34762,34740,34742,34751,34744,34749,34782,34738,35125,35123,35132,35134,35137,35154,35127,35138,35245,35247,35246,35314,35315,35614,35608,35606,35601,35589,35595,35618,35599,35602,35605,35591,35597,35592,35590,35612,35603,35610,35919,35952,35954,35953,35951,35989,35988,36089,36207,36430,36429,36435,36432,36428,36423,36675,36672,36997,36990,37176,37274,37282,37275,37273,37279,37281,37277,37280,37793,37763,37807,37732,37718,37703,37756,37720,37724,37750,37705,37712,37713,37728,37741,37775,37708,37738,37753,37719,37717,37714,37711,37745,37751,37755,37729,37726,37731,37735,37760,37710,37721,38343,38336,38345,38339,38341,38327,38574,38576,38572,38688,38687,38680,38685,38681,38810,38817,38812,38814,38813,38869,38868,38897,38977,38980,38986,38985,38981,38979,39205,39211,39212,39210,39219,39218,39215,39213,39217,39216,39320,39331,39329,39426,39418,39412,39415,39417,39416,39414,39419,39421,39422,39420,39427,39614,39678,39677,39681,39676,39752,39834,39848,39838,39835,39846,39841,39845,39844,39814,39842,39840,39855,40243,40257,40295,40246,40238,40239,40241,40248,40240,40261,40258,40259,40254,40247,40256,40253,32757,40237,40586,40585,40589,40624,40648,40666,40699,40703,40740,40739,40738,40788,40864,20785,20781,20782,22168,22172,22167,22170,22173,22169,22896,23356,23657,23658,24e3,24173,24174,25048,25055,25069,25070,25073,25066,25072,25067,25046,25065,25855,25860,25853,25848,25857,25859,25852,26004,26075,26330,26331,26328,27333,27321,27325,27361,27334,27322,27318,27319,27335,27316,27309,27486,27593,27659,28679,28684,28685,28673,28677,28692,28686,28671,28672,28667,28710,28668,28663,28682,29185,29183,29177,29187,29181,29558,29880,29888,29877,29889,29886,29878,29883,29890,29972,29971,30300,30308,30297,30288,30291,30295,30298,30374,30397,30444,30658,30650,30975,30988,30995,30996,30985,30992,30994,30993,31149,31148,31327,31772,31785,31769,31776,31775,31789,31773,31782,31784,31778,31781,31792,32348,32336,32342,32355,32344,32354,32351,32337,32352,32343,32339,32693,32691,32759,32760,32885,33233,33234,33232,33375,33374,34228,34246,34240,34243,34242,34227,34229,34237,34247,34244,34239,34251,34254,34248,34245,34225,34230,34258,34340,34232,34231,34238,34409,34791,34790,34786,34779,34795,34794,34789,34783,34803,34788,34772,34780,34771,34797,34776,34787,34724,34775,34777,34817,34804,34792,34781,35155,35147,35151,35148,35142,35152,35153,35145,35626,35623,35619,35635,35632,35637,35655,35631,35644,35646,35633,35621,35639,35622,35638,35630,35620,35643,35645,35642,35906,35957,35993,35992,35991,36094,36100,36098,36096,36444,36450,36448,36439,36438,36446,36453,36455,36443,36442,36449,36445,36457,36436,36678,36679,36680,36683,37160,37178,37179,37182,37288,37285,37287,37295,37290,37813,37772,37778,37815,37787,37789,37769,37799,37774,37802,37790,37798,37781,37768,37785,37791,37773,37809,37777,37810,37796,37800,37812,37795,37797,38354,38355,38353,38579,38615,38618,24002,38623,38616,38621,38691,38690,38693,38828,38830,38824,38827,38820,38826,38818,38821,38871,38873,38870,38872,38906,38992,38993,38994,39096,39233,39228,39226,39439,39435,39433,39437,39428,39441,39434,39429,39431,39430,39616,39644,39688,39684,39685,39721,39733,39754,39756,39755,39879,39878,39875,39871,39873,39861,39864,39891,39862,39876,39865,39869,40284,40275,40271,40266,40283,40267,40281,40278,40268,40279,40274,40276,40287,40280,40282,40590,40588,40671,40705,40704,40726,40741,40747,40746,40745,40744,40780,40789,20788,20789,21142,21239,21428,22187,22189,22182,22183,22186,22188,22746,22749,22747,22802,23357,23358,23359,24003,24176,24511,25083,25863,25872,25869,25865,25868,25870,25988,26078,26077,26334,27367,27360,27340,27345,27353,27339,27359,27356,27344,27371,27343,27341,27358,27488,27568,27660,28697,28711,28704,28694,28715,28705,28706,28707,28713,28695,28708,28700,28714,29196,29194,29191,29186,29189,29349,29350,29348,29347,29345,29899,29893,29879,29891,29974,30304,30665,30666,30660,30705,31005,31003,31009,31004,30999,31006,31152,31335,31336,31795,31804,31801,31788,31803,31980,31978,32374,32373,32376,32368,32375,32367,32378,32370,32372,32360,32587,32586,32643,32646,32695,32765,32766,32888,33239,33237,33380,33377,33379,34283,34289,34285,34265,34273,34280,34266,34263,34284,34290,34296,34264,34271,34275,34268,34257,34288,34278,34287,34270,34274,34816,34810,34819,34806,34807,34825,34828,34827,34822,34812,34824,34815,34826,34818,35170,35162,35163,35159,35169,35164,35160,35165,35161,35208,35255,35254,35318,35664,35656,35658,35648,35667,35670,35668,35659,35669,35665,35650,35666,35671,35907,35959,35958,35994,36102,36103,36105,36268,36266,36269,36267,36461,36472,36467,36458,36463,36475,36546,36690,36689,36687,36688,36691,36788,37184,37183,37296,37293,37854,37831,37839,37826,37850,37840,37881,37868,37836,37849,37801,37862,37834,37844,37870,37859,37845,37828,37838,37824,37842,37863,38269,38362,38363,38625,38697,38699,38700,38696,38694,38835,38839,38838,38877,38878,38879,39004,39001,39005,38999,39103,39101,39099,39102,39240,39239,39235,39334,39335,39450,39445,39461,39453,39460,39451,39458,39456,39463,39459,39454,39452,39444,39618,39691,39690,39694,39692,39735,39914,39915,39904,39902,39908,39910,39906,39920,39892,39895,39916,39900,39897,39909,39893,39905,39898,40311,40321,40330,40324,40328,40305,40320,40312,40326,40331,40332,40317,40299,40308,40309,40304,40297,40325,40307,40315,40322,40303,40313,40319,40327,40296,40596,40593,40640,40700,40749,40768,40769,40781,40790,40791,40792,21303,22194,22197,22195,22755,23365,24006,24007,24302,24303,24512,24513,25081,25879,25878,25877,25875,26079,26344,26339,26340,27379,27376,27370,27368,27385,27377,27374,27375,28732,28725,28719,28727,28724,28721,28738,28728,28735,28730,28729,28736,28731,28723,28737,29203,29204,29352,29565,29564,29882,30379,30378,30398,30445,30668,30670,30671,30669,30706,31013,31011,31015,31016,31012,31017,31154,31342,31340,31341,31479,31817,31816,31818,31815,31813,31982,32379,32382,32385,32384,32698,32767,32889,33243,33241,33291,33384,33385,34338,34303,34305,34302,34331,34304,34294,34308,34313,34309,34316,34301,34841,34832,34833,34839,34835,34838,35171,35174,35257,35319,35680,35690,35677,35688,35683,35685,35687,35693,36270,36486,36488,36484,36697,36694,36695,36693,36696,36698,37005,37187,37185,37303,37301,37298,37299,37899,37907,37883,37920,37903,37908,37886,37909,37904,37928,37913,37901,37877,37888,37879,37895,37902,37910,37906,37882,37897,37880,37898,37887,37884,37900,37878,37905,37894,38366,38368,38367,38702,38703,38841,38843,38909,38910,39008,39010,39011,39007,39105,39106,39248,39246,39257,39244,39243,39251,39474,39476,39473,39468,39466,39478,39465,39470,39480,39469,39623,39626,39622,39696,39698,39697,39947,39944,39927,39941,39954,39928,4e4,39943,39950,39942,39959,39956,39945,40351,40345,40356,40349,40338,40344,40336,40347,40352,40340,40348,40362,40343,40353,40346,40354,40360,40350,40355,40383,40361,40342,40358,40359,40601,40603,40602,40677,40676,40679,40678,40752,40750,40795,40800,40798,40797,40793,40849,20794,20793,21144,21143,22211,22205,22206,23368,23367,24011,24015,24305,25085,25883,27394,27388,27395,27384,27392,28739,28740,28746,28744,28745,28741,28742,29213,29210,29209,29566,29975,30314,30672,31021,31025,31023,31828,31827,31986,32394,32391,32392,32395,32390,32397,32589,32699,32816,33245,34328,34346,34342,34335,34339,34332,34329,34343,34350,34337,34336,34345,34334,34341,34857,34845,34843,34848,34852,34844,34859,34890,35181,35177,35182,35179,35322,35705,35704,35653,35706,35707,36112,36116,36271,36494,36492,36702,36699,36701,37190,37188,37189,37305,37951,37947,37942,37929,37949,37948,37936,37945,37930,37943,37932,37952,37937,38373,38372,38371,38709,38714,38847,38881,39012,39113,39110,39104,39256,39254,39481,39485,39494,39492,39490,39489,39482,39487,39629,39701,39703,39704,39702,39738,39762,39979,39965,39964,39980,39971,39976,39977,39972,39969,40375,40374,40380,40385,40391,40394,40399,40382,40389,40387,40379,40373,40398,40377,40378,40364,40392,40369,40365,40396,40371,40397,40370,40570,40604,40683,40686,40685,40731,40728,40730,40753,40782,40805,40804,40850,20153,22214,22213,22219,22897,23371,23372,24021,24017,24306,25889,25888,25894,25890,27403,27400,27401,27661,28757,28758,28759,28754,29214,29215,29353,29567,29912,29909,29913,29911,30317,30381,31029,31156,31344,31345,31831,31836,31833,31835,31834,31988,31985,32401,32591,32647,33246,33387,34356,34357,34355,34348,34354,34358,34860,34856,34854,34858,34853,35185,35263,35262,35323,35710,35716,35714,35718,35717,35711,36117,36501,36500,36506,36498,36496,36502,36503,36704,36706,37191,37964,37968,37962,37963,37967,37959,37957,37960,37961,37958,38719,38883,39018,39017,39115,39252,39259,39502,39507,39508,39500,39503,39496,39498,39497,39506,39504,39632,39705,39723,39739,39766,39765,40006,40008,39999,40004,39993,39987,40001,39996,39991,39988,39986,39997,39990,40411,40402,40414,40410,40395,40400,40412,40401,40415,40425,40409,40408,40406,40437,40405,40413,40630,40688,40757,40755,40754,40770,40811,40853,40866,20797,21145,22760,22759,22898,23373,24024,34863,24399,25089,25091,25092,25897,25893,26006,26347,27409,27410,27407,27594,28763,28762,29218,29570,29569,29571,30320,30676,31847,31846,32405,33388,34362,34368,34361,34364,34353,34363,34366,34864,34866,34862,34867,35190,35188,35187,35326,35724,35726,35723,35720,35909,36121,36504,36708,36707,37308,37986,37973,37981,37975,37982,38852,38853,38912,39510,39513,39710,39711,39712,40018,40024,40016,40010,40013,40011,40021,40025,40012,40014,40443,40439,40431,40419,40427,40440,40420,40438,40417,40430,40422,40434,40432,40418,40428,40436,40435,40424,40429,40642,40656,40690,40691,40710,40732,40760,40759,40758,40771,40783,40817,40816,40814,40815,22227,22221,23374,23661,25901,26349,26350,27411,28767,28769,28765,28768,29219,29915,29925,30677,31032,31159,31158,31850,32407,32649,33389,34371,34872,34871,34869,34891,35732,35733,36510,36511,36512,36509,37310,37309,37314,37995,37992,37993,38629,38726,38723,38727,38855,38885,39518,39637,39769,40035,40039,40038,40034,40030,40032,40450,40446,40455,40451,40454,40453,40448,40449,40457,40447,40445,40452,40608,40734,40774,40820,40821,40822,22228,25902,26040,27416,27417,27415,27418,28770,29222,29354,30680,30681,31033,31849,31851,31990,32410,32408,32411,32409,33248,33249,34374,34375,34376,35193,35194,35196,35195,35327,35736,35737,36517,36516,36515,37998,37997,37999,38001,38003,38729,39026,39263,40040,40046,40045,40459,40461,40464,40463,40466,40465,40609,40693,40713,40775,40824,40827,40826,40825,22302,28774,31855,34876,36274,36518,37315,38004,38008,38006,38005,39520,40052,40051,40049,40053,40468,40467,40694,40714,40868,28776,28773,31991,34410,34878,34877,34879,35742,35996,36521,36553,38731,39027,39028,39116,39265,39339,39524,39526,39527,39716,40469,40471,40776,25095,27422,29223,34380,36520,38018,38016,38017,39529,39528,39726,40473,29225,34379,35743,38019,40057,40631,30325,39531,40058,40477,28777,28778,40612,40830,40777,40856,30849,37561,35023,22715,24658,31911,23290,9556,9574,9559,9568,9580,9571,9562,9577,9565,9554,9572,9557,9566,9578,9569,9560,9575,9563,9555,9573,9558,9567,9579,9570,9561,9576,9564,9553,9552,9581,9582,9584,9583,65517,132423,37595,132575,147397,34124,17077,29679,20917,13897,149826,166372,37700,137691,33518,146632,30780,26436,25311,149811,166314,131744,158643,135941,20395,140525,20488,159017,162436,144896,150193,140563,20521,131966,24484,131968,131911,28379,132127,20605,20737,13434,20750,39020,14147,33814,149924,132231,20832,144308,20842,134143,139516,131813,140592,132494,143923,137603,23426,34685,132531,146585,20914,20920,40244,20937,20943,20945,15580,20947,150182,20915,20962,21314,20973,33741,26942,145197,24443,21003,21030,21052,21173,21079,21140,21177,21189,31765,34114,21216,34317,158483,21253,166622,21833,28377,147328,133460,147436,21299,21316,134114,27851,136998,26651,29653,24650,16042,14540,136936,29149,17570,21357,21364,165547,21374,21375,136598,136723,30694,21395,166555,21408,21419,21422,29607,153458,16217,29596,21441,21445,27721,20041,22526,21465,15019,134031,21472,147435,142755,21494,134263,21523,28793,21803,26199,27995,21613,158547,134516,21853,21647,21668,18342,136973,134877,15796,134477,166332,140952,21831,19693,21551,29719,21894,21929,22021,137431,147514,17746,148533,26291,135348,22071,26317,144010,26276,26285,22093,22095,30961,22257,38791,21502,22272,22255,22253,166758,13859,135759,22342,147877,27758,28811,22338,14001,158846,22502,136214,22531,136276,148323,22566,150517,22620,22698,13665,22752,22748,135740,22779,23551,22339,172368,148088,37843,13729,22815,26790,14019,28249,136766,23076,21843,136850,34053,22985,134478,158849,159018,137180,23001,137211,137138,159142,28017,137256,136917,23033,159301,23211,23139,14054,149929,23159,14088,23190,29797,23251,159649,140628,15749,137489,14130,136888,24195,21200,23414,25992,23420,162318,16388,18525,131588,23509,24928,137780,154060,132517,23539,23453,19728,23557,138052,23571,29646,23572,138405,158504,23625,18653,23685,23785,23791,23947,138745,138807,23824,23832,23878,138916,23738,24023,33532,14381,149761,139337,139635,33415,14390,15298,24110,27274,24181,24186,148668,134355,21414,20151,24272,21416,137073,24073,24308,164994,24313,24315,14496,24316,26686,37915,24333,131521,194708,15070,18606,135994,24378,157832,140240,24408,140401,24419,38845,159342,24434,37696,166454,24487,23990,15711,152144,139114,159992,140904,37334,131742,166441,24625,26245,137335,14691,15815,13881,22416,141236,31089,15936,24734,24740,24755,149890,149903,162387,29860,20705,23200,24932,33828,24898,194726,159442,24961,20980,132694,24967,23466,147383,141407,25043,166813,170333,25040,14642,141696,141505,24611,24924,25886,25483,131352,25285,137072,25301,142861,25452,149983,14871,25656,25592,136078,137212,25744,28554,142902,38932,147596,153373,25825,25829,38011,14950,25658,14935,25933,28438,150056,150051,25989,25965,25951,143486,26037,149824,19255,26065,16600,137257,26080,26083,24543,144384,26136,143863,143864,26180,143780,143781,26187,134773,26215,152038,26227,26228,138813,143921,165364,143816,152339,30661,141559,39332,26370,148380,150049,15147,27130,145346,26462,26471,26466,147917,168173,26583,17641,26658,28240,37436,26625,144358,159136,26717,144495,27105,27147,166623,26995,26819,144845,26881,26880,15666,14849,144956,15232,26540,26977,166474,17148,26934,27032,15265,132041,33635,20624,27129,144985,139562,27205,145155,27293,15347,26545,27336,168348,15373,27421,133411,24798,27445,27508,141261,28341,146139,132021,137560,14144,21537,146266,27617,147196,27612,27703,140427,149745,158545,27738,33318,27769,146876,17605,146877,147876,149772,149760,146633,14053,15595,134450,39811,143865,140433,32655,26679,159013,159137,159211,28054,27996,28284,28420,149887,147589,159346,34099,159604,20935,27804,28189,33838,166689,28207,146991,29779,147330,31180,28239,23185,143435,28664,14093,28573,146992,28410,136343,147517,17749,37872,28484,28508,15694,28532,168304,15675,28575,147780,28627,147601,147797,147513,147440,147380,147775,20959,147798,147799,147776,156125,28747,28798,28839,28801,28876,28885,28886,28895,16644,15848,29108,29078,148087,28971,28997,23176,29002,29038,23708,148325,29007,37730,148161,28972,148570,150055,150050,29114,166888,28861,29198,37954,29205,22801,37955,29220,37697,153093,29230,29248,149876,26813,29269,29271,15957,143428,26637,28477,29314,29482,29483,149539,165931,18669,165892,29480,29486,29647,29610,134202,158254,29641,29769,147938,136935,150052,26147,14021,149943,149901,150011,29687,29717,26883,150054,29753,132547,16087,29788,141485,29792,167602,29767,29668,29814,33721,29804,14128,29812,37873,27180,29826,18771,150156,147807,150137,166799,23366,166915,137374,29896,137608,29966,29929,29982,167641,137803,23511,167596,37765,30029,30026,30055,30062,151426,16132,150803,30094,29789,30110,30132,30210,30252,30289,30287,30319,30326,156661,30352,33263,14328,157969,157966,30369,30373,30391,30412,159647,33890,151709,151933,138780,30494,30502,30528,25775,152096,30552,144044,30639,166244,166248,136897,30708,30729,136054,150034,26826,30895,30919,30931,38565,31022,153056,30935,31028,30897,161292,36792,34948,166699,155779,140828,31110,35072,26882,31104,153687,31133,162617,31036,31145,28202,160038,16040,31174,168205,31188],"euc-kr":[44034,44035,44037,44038,44043,44044,44045,44046,44047,44056,44062,44063,44065,44066,44067,44069,44070,44071,44072,44073,44074,44075,44078,44082,44083,44084,null,null,null,null,null,null,44085,44086,44087,44090,44091,44093,44094,44095,44097,44098,44099,44100,44101,44102,44103,44104,44105,44106,44108,44110,44111,44112,44113,44114,44115,44117,null,null,null,null,null,null,44118,44119,44121,44122,44123,44125,44126,44127,44128,44129,44130,44131,44132,44133,44134,44135,44136,44137,44138,44139,44140,44141,44142,44143,44146,44147,44149,44150,44153,44155,44156,44157,44158,44159,44162,44167,44168,44173,44174,44175,44177,44178,44179,44181,44182,44183,44184,44185,44186,44187,44190,44194,44195,44196,44197,44198,44199,44203,44205,44206,44209,44210,44211,44212,44213,44214,44215,44218,44222,44223,44224,44226,44227,44229,44230,44231,44233,44234,44235,44237,44238,44239,44240,44241,44242,44243,44244,44246,44248,44249,44250,44251,44252,44253,44254,44255,44258,44259,44261,44262,44265,44267,44269,44270,44274,44276,44279,44280,44281,44282,44283,44286,44287,44289,44290,44291,44293,44295,44296,44297,44298,44299,44302,44304,44306,44307,44308,44309,44310,44311,44313,44314,44315,44317,44318,44319,44321,44322,44323,44324,44325,44326,44327,44328,44330,44331,44334,44335,44336,44337,44338,44339,null,null,null,null,null,null,44342,44343,44345,44346,44347,44349,44350,44351,44352,44353,44354,44355,44358,44360,44362,44363,44364,44365,44366,44367,44369,44370,44371,44373,44374,44375,null,null,null,null,null,null,44377,44378,44379,44380,44381,44382,44383,44384,44386,44388,44389,44390,44391,44392,44393,44394,44395,44398,44399,44401,44402,44407,44408,44409,44410,44414,44416,44419,44420,44421,44422,44423,44426,44427,44429,44430,44431,44433,44434,44435,44436,44437,44438,44439,44440,44441,44442,44443,44446,44447,44448,44449,44450,44451,44453,44454,44455,44456,44457,44458,44459,44460,44461,44462,44463,44464,44465,44466,44467,44468,44469,44470,44472,44473,44474,44475,44476,44477,44478,44479,44482,44483,44485,44486,44487,44489,44490,44491,44492,44493,44494,44495,44498,44500,44501,44502,44503,44504,44505,44506,44507,44509,44510,44511,44513,44514,44515,44517,44518,44519,44520,44521,44522,44523,44524,44525,44526,44527,44528,44529,44530,44531,44532,44533,44534,44535,44538,44539,44541,44542,44546,44547,44548,44549,44550,44551,44554,44556,44558,44559,44560,44561,44562,44563,44565,44566,44567,44568,44569,44570,44571,44572,null,null,null,null,null,null,44573,44574,44575,44576,44577,44578,44579,44580,44581,44582,44583,44584,44585,44586,44587,44588,44589,44590,44591,44594,44595,44597,44598,44601,44603,44604,null,null,null,null,null,null,44605,44606,44607,44610,44612,44615,44616,44617,44619,44623,44625,44626,44627,44629,44631,44632,44633,44634,44635,44638,44642,44643,44644,44646,44647,44650,44651,44653,44654,44655,44657,44658,44659,44660,44661,44662,44663,44666,44670,44671,44672,44673,44674,44675,44678,44679,44680,44681,44682,44683,44685,44686,44687,44688,44689,44690,44691,44692,44693,44694,44695,44696,44697,44698,44699,44700,44701,44702,44703,44704,44705,44706,44707,44708,44709,44710,44711,44712,44713,44714,44715,44716,44717,44718,44719,44720,44721,44722,44723,44724,44725,44726,44727,44728,44729,44730,44731,44735,44737,44738,44739,44741,44742,44743,44744,44745,44746,44747,44750,44754,44755,44756,44757,44758,44759,44762,44763,44765,44766,44767,44768,44769,44770,44771,44772,44773,44774,44775,44777,44778,44780,44782,44783,44784,44785,44786,44787,44789,44790,44791,44793,44794,44795,44797,44798,44799,44800,44801,44802,44803,44804,44805,null,null,null,null,null,null,44806,44809,44810,44811,44812,44814,44815,44817,44818,44819,44820,44821,44822,44823,44824,44825,44826,44827,44828,44829,44830,44831,44832,44833,44834,44835,null,null,null,null,null,null,44836,44837,44838,44839,44840,44841,44842,44843,44846,44847,44849,44851,44853,44854,44855,44856,44857,44858,44859,44862,44864,44868,44869,44870,44871,44874,44875,44876,44877,44878,44879,44881,44882,44883,44884,44885,44886,44887,44888,44889,44890,44891,44894,44895,44896,44897,44898,44899,44902,44903,44904,44905,44906,44907,44908,44909,44910,44911,44912,44913,44914,44915,44916,44917,44918,44919,44920,44922,44923,44924,44925,44926,44927,44929,44930,44931,44933,44934,44935,44937,44938,44939,44940,44941,44942,44943,44946,44947,44948,44950,44951,44952,44953,44954,44955,44957,44958,44959,44960,44961,44962,44963,44964,44965,44966,44967,44968,44969,44970,44971,44972,44973,44974,44975,44976,44977,44978,44979,44980,44981,44982,44983,44986,44987,44989,44990,44991,44993,44994,44995,44996,44997,44998,45002,45004,45007,45008,45009,45010,45011,45013,45014,45015,45016,45017,45018,45019,45021,45022,45023,45024,45025,null,null,null,null,null,null,45026,45027,45028,45029,45030,45031,45034,45035,45036,45037,45038,45039,45042,45043,45045,45046,45047,45049,45050,45051,45052,45053,45054,45055,45058,45059,null,null,null,null,null,null,45061,45062,45063,45064,45065,45066,45067,45069,45070,45071,45073,45074,45075,45077,45078,45079,45080,45081,45082,45083,45086,45087,45088,45089,45090,45091,45092,45093,45094,45095,45097,45098,45099,45100,45101,45102,45103,45104,45105,45106,45107,45108,45109,45110,45111,45112,45113,45114,45115,45116,45117,45118,45119,45120,45121,45122,45123,45126,45127,45129,45131,45133,45135,45136,45137,45138,45142,45144,45146,45147,45148,45150,45151,45152,45153,45154,45155,45156,45157,45158,45159,45160,45161,45162,45163,45164,45165,45166,45167,45168,45169,45170,45171,45172,45173,45174,45175,45176,45177,45178,45179,45182,45183,45185,45186,45187,45189,45190,45191,45192,45193,45194,45195,45198,45200,45202,45203,45204,45205,45206,45207,45211,45213,45214,45219,45220,45221,45222,45223,45226,45232,45234,45238,45239,45241,45242,45243,45245,45246,45247,45248,45249,45250,45251,45254,45258,45259,45260,45261,45262,45263,45266,null,null,null,null,null,null,45267,45269,45270,45271,45273,45274,45275,45276,45277,45278,45279,45281,45282,45283,45284,45286,45287,45288,45289,45290,45291,45292,45293,45294,45295,45296,null,null,null,null,null,null,45297,45298,45299,45300,45301,45302,45303,45304,45305,45306,45307,45308,45309,45310,45311,45312,45313,45314,45315,45316,45317,45318,45319,45322,45325,45326,45327,45329,45332,45333,45334,45335,45338,45342,45343,45344,45345,45346,45350,45351,45353,45354,45355,45357,45358,45359,45360,45361,45362,45363,45366,45370,45371,45372,45373,45374,45375,45378,45379,45381,45382,45383,45385,45386,45387,45388,45389,45390,45391,45394,45395,45398,45399,45401,45402,45403,45405,45406,45407,45409,45410,45411,45412,45413,45414,45415,45416,45417,45418,45419,45420,45421,45422,45423,45424,45425,45426,45427,45428,45429,45430,45431,45434,45435,45437,45438,45439,45441,45443,45444,45445,45446,45447,45450,45452,45454,45455,45456,45457,45461,45462,45463,45465,45466,45467,45469,45470,45471,45472,45473,45474,45475,45476,45477,45478,45479,45481,45482,45483,45484,45485,45486,45487,45488,45489,45490,45491,45492,45493,45494,45495,45496,null,null,null,null,null,null,45497,45498,45499,45500,45501,45502,45503,45504,45505,45506,45507,45508,45509,45510,45511,45512,45513,45514,45515,45517,45518,45519,45521,45522,45523,45525,null,null,null,null,null,null,45526,45527,45528,45529,45530,45531,45534,45536,45537,45538,45539,45540,45541,45542,45543,45546,45547,45549,45550,45551,45553,45554,45555,45556,45557,45558,45559,45560,45562,45564,45566,45567,45568,45569,45570,45571,45574,45575,45577,45578,45581,45582,45583,45584,45585,45586,45587,45590,45592,45594,45595,45596,45597,45598,45599,45601,45602,45603,45604,45605,45606,45607,45608,45609,45610,45611,45612,45613,45614,45615,45616,45617,45618,45619,45621,45622,45623,45624,45625,45626,45627,45629,45630,45631,45632,45633,45634,45635,45636,45637,45638,45639,45640,45641,45642,45643,45644,45645,45646,45647,45648,45649,45650,45651,45652,45653,45654,45655,45657,45658,45659,45661,45662,45663,45665,45666,45667,45668,45669,45670,45671,45674,45675,45676,45677,45678,45679,45680,45681,45682,45683,45686,45687,45688,45689,45690,45691,45693,45694,45695,45696,45697,45698,45699,45702,45703,45704,45706,45707,45708,45709,45710,null,null,null,null,null,null,45711,45714,45715,45717,45718,45719,45723,45724,45725,45726,45727,45730,45732,45735,45736,45737,45739,45741,45742,45743,45745,45746,45747,45749,45750,45751,null,null,null,null,null,null,45752,45753,45754,45755,45756,45757,45758,45759,45760,45761,45762,45763,45764,45765,45766,45767,45770,45771,45773,45774,45775,45777,45779,45780,45781,45782,45783,45786,45788,45790,45791,45792,45793,45795,45799,45801,45802,45808,45809,45810,45814,45820,45821,45822,45826,45827,45829,45830,45831,45833,45834,45835,45836,45837,45838,45839,45842,45846,45847,45848,45849,45850,45851,45853,45854,45855,45856,45857,45858,45859,45860,45861,45862,45863,45864,45865,45866,45867,45868,45869,45870,45871,45872,45873,45874,45875,45876,45877,45878,45879,45880,45881,45882,45883,45884,45885,45886,45887,45888,45889,45890,45891,45892,45893,45894,45895,45896,45897,45898,45899,45900,45901,45902,45903,45904,45905,45906,45907,45911,45913,45914,45917,45920,45921,45922,45923,45926,45928,45930,45932,45933,45935,45938,45939,45941,45942,45943,45945,45946,45947,45948,45949,45950,45951,45954,45958,45959,45960,45961,45962,45963,45965,null,null,null,null,null,null,45966,45967,45969,45970,45971,45973,45974,45975,45976,45977,45978,45979,45980,45981,45982,45983,45986,45987,45988,45989,45990,45991,45993,45994,45995,45997,null,null,null,null,null,null,45998,45999,46e3,46001,46002,46003,46004,46005,46006,46007,46008,46009,46010,46011,46012,46013,46014,46015,46016,46017,46018,46019,46022,46023,46025,46026,46029,46031,46033,46034,46035,46038,46040,46042,46044,46046,46047,46049,46050,46051,46053,46054,46055,46057,46058,46059,46060,46061,46062,46063,46064,46065,46066,46067,46068,46069,46070,46071,46072,46073,46074,46075,46077,46078,46079,46080,46081,46082,46083,46084,46085,46086,46087,46088,46089,46090,46091,46092,46093,46094,46095,46097,46098,46099,46100,46101,46102,46103,46105,46106,46107,46109,46110,46111,46113,46114,46115,46116,46117,46118,46119,46122,46124,46125,46126,46127,46128,46129,46130,46131,46133,46134,46135,46136,46137,46138,46139,46140,46141,46142,46143,46144,46145,46146,46147,46148,46149,46150,46151,46152,46153,46154,46155,46156,46157,46158,46159,46162,46163,46165,46166,46167,46169,46170,46171,46172,46173,46174,46175,46178,46180,46182,null,null,null,null,null,null,46183,46184,46185,46186,46187,46189,46190,46191,46192,46193,46194,46195,46196,46197,46198,46199,46200,46201,46202,46203,46204,46205,46206,46207,46209,46210,null,null,null,null,null,null,46211,46212,46213,46214,46215,46217,46218,46219,46220,46221,46222,46223,46224,46225,46226,46227,46228,46229,46230,46231,46232,46233,46234,46235,46236,46238,46239,46240,46241,46242,46243,46245,46246,46247,46249,46250,46251,46253,46254,46255,46256,46257,46258,46259,46260,46262,46264,46266,46267,46268,46269,46270,46271,46273,46274,46275,46277,46278,46279,46281,46282,46283,46284,46285,46286,46287,46289,46290,46291,46292,46294,46295,46296,46297,46298,46299,46302,46303,46305,46306,46309,46311,46312,46313,46314,46315,46318,46320,46322,46323,46324,46325,46326,46327,46329,46330,46331,46332,46333,46334,46335,46336,46337,46338,46339,46340,46341,46342,46343,46344,46345,46346,46347,46348,46349,46350,46351,46352,46353,46354,46355,46358,46359,46361,46362,46365,46366,46367,46368,46369,46370,46371,46374,46379,46380,46381,46382,46383,46386,46387,46389,46390,46391,46393,46394,46395,46396,46397,46398,46399,46402,46406,null,null,null,null,null,null,46407,46408,46409,46410,46414,46415,46417,46418,46419,46421,46422,46423,46424,46425,46426,46427,46430,46434,46435,46436,46437,46438,46439,46440,46441,46442,null,null,null,null,null,null,46443,46444,46445,46446,46447,46448,46449,46450,46451,46452,46453,46454,46455,46456,46457,46458,46459,46460,46461,46462,46463,46464,46465,46466,46467,46468,46469,46470,46471,46472,46473,46474,46475,46476,46477,46478,46479,46480,46481,46482,46483,46484,46485,46486,46487,46488,46489,46490,46491,46492,46493,46494,46495,46498,46499,46501,46502,46503,46505,46508,46509,46510,46511,46514,46518,46519,46520,46521,46522,46526,46527,46529,46530,46531,46533,46534,46535,46536,46537,46538,46539,46542,46546,46547,46548,46549,46550,46551,46553,46554,46555,46556,46557,46558,46559,46560,46561,46562,46563,46564,46565,46566,46567,46568,46569,46570,46571,46573,46574,46575,46576,46577,46578,46579,46580,46581,46582,46583,46584,46585,46586,46587,46588,46589,46590,46591,46592,46593,46594,46595,46596,46597,46598,46599,46600,46601,46602,46603,46604,46605,46606,46607,46610,46611,46613,46614,46615,46617,46618,46619,46620,46621,null,null,null,null,null,null,46622,46623,46624,46625,46626,46627,46628,46630,46631,46632,46633,46634,46635,46637,46638,46639,46640,46641,46642,46643,46645,46646,46647,46648,46649,46650,null,null,null,null,null,null,46651,46652,46653,46654,46655,46656,46657,46658,46659,46660,46661,46662,46663,46665,46666,46667,46668,46669,46670,46671,46672,46673,46674,46675,46676,46677,46678,46679,46680,46681,46682,46683,46684,46685,46686,46687,46688,46689,46690,46691,46693,46694,46695,46697,46698,46699,46700,46701,46702,46703,46704,46705,46706,46707,46708,46709,46710,46711,46712,46713,46714,46715,46716,46717,46718,46719,46720,46721,46722,46723,46724,46725,46726,46727,46728,46729,46730,46731,46732,46733,46734,46735,46736,46737,46738,46739,46740,46741,46742,46743,46744,46745,46746,46747,46750,46751,46753,46754,46755,46757,46758,46759,46760,46761,46762,46765,46766,46767,46768,46770,46771,46772,46773,46774,46775,46776,46777,46778,46779,46780,46781,46782,46783,46784,46785,46786,46787,46788,46789,46790,46791,46792,46793,46794,46795,46796,46797,46798,46799,46800,46801,46802,46803,46805,46806,46807,46808,46809,46810,46811,46812,46813,null,null,null,null,null,null,46814,46815,46816,46817,46818,46819,46820,46821,46822,46823,46824,46825,46826,46827,46828,46829,46830,46831,46833,46834,46835,46837,46838,46839,46841,46842,null,null,null,null,null,null,46843,46844,46845,46846,46847,46850,46851,46852,46854,46855,46856,46857,46858,46859,46860,46861,46862,46863,46864,46865,46866,46867,46868,46869,46870,46871,46872,46873,46874,46875,46876,46877,46878,46879,46880,46881,46882,46883,46884,46885,46886,46887,46890,46891,46893,46894,46897,46898,46899,46900,46901,46902,46903,46906,46908,46909,46910,46911,46912,46913,46914,46915,46917,46918,46919,46921,46922,46923,46925,46926,46927,46928,46929,46930,46931,46934,46935,46936,46937,46938,46939,46940,46941,46942,46943,46945,46946,46947,46949,46950,46951,46953,46954,46955,46956,46957,46958,46959,46962,46964,46966,46967,46968,46969,46970,46971,46974,46975,46977,46978,46979,46981,46982,46983,46984,46985,46986,46987,46990,46995,46996,46997,47002,47003,47005,47006,47007,47009,47010,47011,47012,47013,47014,47015,47018,47022,47023,47024,47025,47026,47027,47030,47031,47033,47034,47035,47036,47037,47038,47039,47040,47041,null,null,null,null,null,null,47042,47043,47044,47045,47046,47048,47050,47051,47052,47053,47054,47055,47056,47057,47058,47059,47060,47061,47062,47063,47064,47065,47066,47067,47068,47069,null,null,null,null,null,null,47070,47071,47072,47073,47074,47075,47076,47077,47078,47079,47080,47081,47082,47083,47086,47087,47089,47090,47091,47093,47094,47095,47096,47097,47098,47099,47102,47106,47107,47108,47109,47110,47114,47115,47117,47118,47119,47121,47122,47123,47124,47125,47126,47127,47130,47132,47134,47135,47136,47137,47138,47139,47142,47143,47145,47146,47147,47149,47150,47151,47152,47153,47154,47155,47158,47162,47163,47164,47165,47166,47167,47169,47170,47171,47173,47174,47175,47176,47177,47178,47179,47180,47181,47182,47183,47184,47186,47188,47189,47190,47191,47192,47193,47194,47195,47198,47199,47201,47202,47203,47205,47206,47207,47208,47209,47210,47211,47214,47216,47218,47219,47220,47221,47222,47223,47225,47226,47227,47229,47230,47231,47232,47233,47234,47235,47236,47237,47238,47239,47240,47241,47242,47243,47244,47246,47247,47248,47249,47250,47251,47252,47253,47254,47255,47256,47257,47258,47259,47260,47261,47262,47263,null,null,null,null,null,null,47264,47265,47266,47267,47268,47269,47270,47271,47273,47274,47275,47276,47277,47278,47279,47281,47282,47283,47285,47286,47287,47289,47290,47291,47292,47293,null,null,null,null,null,null,47294,47295,47298,47300,47302,47303,47304,47305,47306,47307,47309,47310,47311,47313,47314,47315,47317,47318,47319,47320,47321,47322,47323,47324,47326,47328,47330,47331,47332,47333,47334,47335,47338,47339,47341,47342,47343,47345,47346,47347,47348,47349,47350,47351,47354,47356,47358,47359,47360,47361,47362,47363,47365,47366,47367,47368,47369,47370,47371,47372,47373,47374,47375,47376,47377,47378,47379,47380,47381,47382,47383,47385,47386,47387,47388,47389,47390,47391,47393,47394,47395,47396,47397,47398,47399,47400,47401,47402,47403,47404,47405,47406,47407,47408,47409,47410,47411,47412,47413,47414,47415,47416,47417,47418,47419,47422,47423,47425,47426,47427,47429,47430,47431,47432,47433,47434,47435,47437,47438,47440,47442,47443,47444,47445,47446,47447,47450,47451,47453,47454,47455,47457,47458,47459,47460,47461,47462,47463,47466,47468,47470,47471,47472,47473,47474,47475,47478,47479,47481,47482,47483,47485,null,null,null,null,null,null,47486,47487,47488,47489,47490,47491,47494,47496,47499,47500,47503,47504,47505,47506,47507,47508,47509,47510,47511,47512,47513,47514,47515,47516,47517,47518,null,null,null,null,null,null,47519,47520,47521,47522,47523,47524,47525,47526,47527,47528,47529,47530,47531,47534,47535,47537,47538,47539,47541,47542,47543,47544,47545,47546,47547,47550,47552,47554,47555,47556,47557,47558,47559,47562,47563,47565,47571,47572,47573,47574,47575,47578,47580,47583,47584,47586,47590,47591,47593,47594,47595,47597,47598,47599,47600,47601,47602,47603,47606,47611,47612,47613,47614,47615,47618,47619,47620,47621,47622,47623,47625,47626,47627,47628,47629,47630,47631,47632,47633,47634,47635,47636,47638,47639,47640,47641,47642,47643,47644,47645,47646,47647,47648,47649,47650,47651,47652,47653,47654,47655,47656,47657,47658,47659,47660,47661,47662,47663,47664,47665,47666,47667,47668,47669,47670,47671,47674,47675,47677,47678,47679,47681,47683,47684,47685,47686,47687,47690,47692,47695,47696,47697,47698,47702,47703,47705,47706,47707,47709,47710,47711,47712,47713,47714,47715,47718,47722,47723,47724,47725,47726,47727,null,null,null,null,null,null,47730,47731,47733,47734,47735,47737,47738,47739,47740,47741,47742,47743,47744,47745,47746,47750,47752,47753,47754,47755,47757,47758,47759,47760,47761,47762,null,null,null,null,null,null,47763,47764,47765,47766,47767,47768,47769,47770,47771,47772,47773,47774,47775,47776,47777,47778,47779,47780,47781,47782,47783,47786,47789,47790,47791,47793,47795,47796,47797,47798,47799,47802,47804,47806,47807,47808,47809,47810,47811,47813,47814,47815,47817,47818,47819,47820,47821,47822,47823,47824,47825,47826,47827,47828,47829,47830,47831,47834,47835,47836,47837,47838,47839,47840,47841,47842,47843,47844,47845,47846,47847,47848,47849,47850,47851,47852,47853,47854,47855,47856,47857,47858,47859,47860,47861,47862,47863,47864,47865,47866,47867,47869,47870,47871,47873,47874,47875,47877,47878,47879,47880,47881,47882,47883,47884,47886,47888,47890,47891,47892,47893,47894,47895,47897,47898,47899,47901,47902,47903,47905,47906,47907,47908,47909,47910,47911,47912,47914,47916,47917,47918,47919,47920,47921,47922,47923,47927,47929,47930,47935,47936,47937,47938,47939,47942,47944,47946,47947,47948,47950,47953,47954,null,null,null,null,null,null,47955,47957,47958,47959,47961,47962,47963,47964,47965,47966,47967,47968,47970,47972,47973,47974,47975,47976,47977,47978,47979,47981,47982,47983,47984,47985,null,null,null,null,null,null,47986,47987,47988,47989,47990,47991,47992,47993,47994,47995,47996,47997,47998,47999,48e3,48001,48002,48003,48004,48005,48006,48007,48009,48010,48011,48013,48014,48015,48017,48018,48019,48020,48021,48022,48023,48024,48025,48026,48027,48028,48029,48030,48031,48032,48033,48034,48035,48037,48038,48039,48041,48042,48043,48045,48046,48047,48048,48049,48050,48051,48053,48054,48056,48057,48058,48059,48060,48061,48062,48063,48065,48066,48067,48069,48070,48071,48073,48074,48075,48076,48077,48078,48079,48081,48082,48084,48085,48086,48087,48088,48089,48090,48091,48092,48093,48094,48095,48096,48097,48098,48099,48100,48101,48102,48103,48104,48105,48106,48107,48108,48109,48110,48111,48112,48113,48114,48115,48116,48117,48118,48119,48122,48123,48125,48126,48129,48131,48132,48133,48134,48135,48138,48142,48144,48146,48147,48153,48154,48160,48161,48162,48163,48166,48168,48170,48171,48172,48174,48175,48178,48179,48181,null,null,null,null,null,null,48182,48183,48185,48186,48187,48188,48189,48190,48191,48194,48198,48199,48200,48202,48203,48206,48207,48209,48210,48211,48212,48213,48214,48215,48216,48217,null,null,null,null,null,null,48218,48219,48220,48222,48223,48224,48225,48226,48227,48228,48229,48230,48231,48232,48233,48234,48235,48236,48237,48238,48239,48240,48241,48242,48243,48244,48245,48246,48247,48248,48249,48250,48251,48252,48253,48254,48255,48256,48257,48258,48259,48262,48263,48265,48266,48269,48271,48272,48273,48274,48275,48278,48280,48283,48284,48285,48286,48287,48290,48291,48293,48294,48297,48298,48299,48300,48301,48302,48303,48306,48310,48311,48312,48313,48314,48315,48318,48319,48321,48322,48323,48325,48326,48327,48328,48329,48330,48331,48332,48334,48338,48339,48340,48342,48343,48345,48346,48347,48349,48350,48351,48352,48353,48354,48355,48356,48357,48358,48359,48360,48361,48362,48363,48364,48365,48366,48367,48368,48369,48370,48371,48375,48377,48378,48379,48381,48382,48383,48384,48385,48386,48387,48390,48392,48394,48395,48396,48397,48398,48399,48401,48402,48403,48405,48406,48407,48408,48409,48410,48411,48412,48413,null,null,null,null,null,null,48414,48415,48416,48417,48418,48419,48421,48422,48423,48424,48425,48426,48427,48429,48430,48431,48432,48433,48434,48435,48436,48437,48438,48439,48440,48441,null,null,null,null,null,null,48442,48443,48444,48445,48446,48447,48449,48450,48451,48452,48453,48454,48455,48458,48459,48461,48462,48463,48465,48466,48467,48468,48469,48470,48471,48474,48475,48476,48477,48478,48479,48480,48481,48482,48483,48485,48486,48487,48489,48490,48491,48492,48493,48494,48495,48496,48497,48498,48499,48500,48501,48502,48503,48504,48505,48506,48507,48508,48509,48510,48511,48514,48515,48517,48518,48523,48524,48525,48526,48527,48530,48532,48534,48535,48536,48539,48541,48542,48543,48544,48545,48546,48547,48549,48550,48551,48552,48553,48554,48555,48556,48557,48558,48559,48561,48562,48563,48564,48565,48566,48567,48569,48570,48571,48572,48573,48574,48575,48576,48577,48578,48579,48580,48581,48582,48583,48584,48585,48586,48587,48588,48589,48590,48591,48592,48593,48594,48595,48598,48599,48601,48602,48603,48605,48606,48607,48608,48609,48610,48611,48612,48613,48614,48615,48616,48618,48619,48620,48621,48622,48623,48625,null,null,null,null,null,null,48626,48627,48629,48630,48631,48633,48634,48635,48636,48637,48638,48639,48641,48642,48644,48646,48647,48648,48649,48650,48651,48654,48655,48657,48658,48659,null,null,null,null,null,null,48661,48662,48663,48664,48665,48666,48667,48670,48672,48673,48674,48675,48676,48677,48678,48679,48680,48681,48682,48683,48684,48685,48686,48687,48688,48689,48690,48691,48692,48693,48694,48695,48696,48697,48698,48699,48700,48701,48702,48703,48704,48705,48706,48707,48710,48711,48713,48714,48715,48717,48719,48720,48721,48722,48723,48726,48728,48732,48733,48734,48735,48738,48739,48741,48742,48743,48745,48747,48748,48749,48750,48751,48754,48758,48759,48760,48761,48762,48766,48767,48769,48770,48771,48773,48774,48775,48776,48777,48778,48779,48782,48786,48787,48788,48789,48790,48791,48794,48795,48796,48797,48798,48799,48800,48801,48802,48803,48804,48805,48806,48807,48809,48810,48811,48812,48813,48814,48815,48816,48817,48818,48819,48820,48821,48822,48823,48824,48825,48826,48827,48828,48829,48830,48831,48832,48833,48834,48835,48836,48837,48838,48839,48840,48841,48842,48843,48844,48845,48846,48847,48850,48851,null,null,null,null,null,null,48853,48854,48857,48858,48859,48860,48861,48862,48863,48865,48866,48870,48871,48872,48873,48874,48875,48877,48878,48879,48880,48881,48882,48883,48884,48885,null,null,null,null,null,null,48886,48887,48888,48889,48890,48891,48892,48893,48894,48895,48896,48898,48899,48900,48901,48902,48903,48906,48907,48908,48909,48910,48911,48912,48913,48914,48915,48916,48917,48918,48919,48922,48926,48927,48928,48929,48930,48931,48932,48933,48934,48935,48936,48937,48938,48939,48940,48941,48942,48943,48944,48945,48946,48947,48948,48949,48950,48951,48952,48953,48954,48955,48956,48957,48958,48959,48962,48963,48965,48966,48967,48969,48970,48971,48972,48973,48974,48975,48978,48979,48980,48982,48983,48984,48985,48986,48987,48988,48989,48990,48991,48992,48993,48994,48995,48996,48997,48998,48999,49e3,49001,49002,49003,49004,49005,49006,49007,49008,49009,49010,49011,49012,49013,49014,49015,49016,49017,49018,49019,49020,49021,49022,49023,49024,49025,49026,49027,49028,49029,49030,49031,49032,49033,49034,49035,49036,49037,49038,49039,49040,49041,49042,49043,49045,49046,49047,49048,49049,49050,49051,49052,49053,null,null,null,null,null,null,49054,49055,49056,49057,49058,49059,49060,49061,49062,49063,49064,49065,49066,49067,49068,49069,49070,49071,49073,49074,49075,49076,49077,49078,49079,49080,null,null,null,null,null,null,49081,49082,49083,49084,49085,49086,49087,49088,49089,49090,49091,49092,49094,49095,49096,49097,49098,49099,49102,49103,49105,49106,49107,49109,49110,49111,49112,49113,49114,49115,49117,49118,49120,49122,49123,49124,49125,49126,49127,49128,49129,49130,49131,49132,49133,49134,49135,49136,49137,49138,49139,49140,49141,49142,49143,49144,49145,49146,49147,49148,49149,49150,49151,49152,49153,49154,49155,49156,49157,49158,49159,49160,49161,49162,49163,49164,49165,49166,49167,49168,49169,49170,49171,49172,49173,49174,49175,49176,49177,49178,49179,49180,49181,49182,49183,49184,49185,49186,49187,49188,49189,49190,49191,49192,49193,49194,49195,49196,49197,49198,49199,49200,49201,49202,49203,49204,49205,49206,49207,49208,49209,49210,49211,49213,49214,49215,49216,49217,49218,49219,49220,49221,49222,49223,49224,49225,49226,49227,49228,49229,49230,49231,49232,49234,49235,49236,49237,49238,49239,49241,49242,49243,null,null,null,null,null,null,49245,49246,49247,49249,49250,49251,49252,49253,49254,49255,49258,49259,49260,49261,49262,49263,49264,49265,49266,49267,49268,49269,49270,49271,49272,49273,null,null,null,null,null,null,49274,49275,49276,49277,49278,49279,49280,49281,49282,49283,49284,49285,49286,49287,49288,49289,49290,49291,49292,49293,49294,49295,49298,49299,49301,49302,49303,49305,49306,49307,49308,49309,49310,49311,49314,49316,49318,49319,49320,49321,49322,49323,49326,49329,49330,49335,49336,49337,49338,49339,49342,49346,49347,49348,49350,49351,49354,49355,49357,49358,49359,49361,49362,49363,49364,49365,49366,49367,49370,49374,49375,49376,49377,49378,49379,49382,49383,49385,49386,49387,49389,49390,49391,49392,49393,49394,49395,49398,49400,49402,49403,49404,49405,49406,49407,49409,49410,49411,49413,49414,49415,49417,49418,49419,49420,49421,49422,49423,49425,49426,49427,49428,49430,49431,49432,49433,49434,49435,49441,49442,49445,49448,49449,49450,49451,49454,49458,49459,49460,49461,49463,49466,49467,49469,49470,49471,49473,49474,49475,49476,49477,49478,49479,49482,49486,49487,49488,49489,49490,49491,49494,49495,null,null,null,null,null,null,49497,49498,49499,49501,49502,49503,49504,49505,49506,49507,49510,49514,49515,49516,49517,49518,49519,49521,49522,49523,49525,49526,49527,49529,49530,49531,null,null,null,null,null,null,49532,49533,49534,49535,49536,49537,49538,49539,49540,49542,49543,49544,49545,49546,49547,49551,49553,49554,49555,49557,49559,49560,49561,49562,49563,49566,49568,49570,49571,49572,49574,49575,49578,49579,49581,49582,49583,49585,49586,49587,49588,49589,49590,49591,49592,49593,49594,49595,49596,49598,49599,49600,49601,49602,49603,49605,49606,49607,49609,49610,49611,49613,49614,49615,49616,49617,49618,49619,49621,49622,49625,49626,49627,49628,49629,49630,49631,49633,49634,49635,49637,49638,49639,49641,49642,49643,49644,49645,49646,49647,49650,49652,49653,49654,49655,49656,49657,49658,49659,49662,49663,49665,49666,49667,49669,49670,49671,49672,49673,49674,49675,49678,49680,49682,49683,49684,49685,49686,49687,49690,49691,49693,49694,49697,49698,49699,49700,49701,49702,49703,49706,49708,49710,49712,49715,49717,49718,49719,49720,49721,49722,49723,49724,49725,49726,49727,49728,49729,49730,49731,49732,49733,null,null,null,null,null,null,49734,49735,49737,49738,49739,49740,49741,49742,49743,49746,49747,49749,49750,49751,49753,49754,49755,49756,49757,49758,49759,49761,49762,49763,49764,49766,null,null,null,null,null,null,49767,49768,49769,49770,49771,49774,49775,49777,49778,49779,49781,49782,49783,49784,49785,49786,49787,49790,49792,49794,49795,49796,49797,49798,49799,49802,49803,49804,49805,49806,49807,49809,49810,49811,49812,49813,49814,49815,49817,49818,49820,49822,49823,49824,49825,49826,49827,49830,49831,49833,49834,49835,49838,49839,49840,49841,49842,49843,49846,49848,49850,49851,49852,49853,49854,49855,49856,49857,49858,49859,49860,49861,49862,49863,49864,49865,49866,49867,49868,49869,49870,49871,49872,49873,49874,49875,49876,49877,49878,49879,49880,49881,49882,49883,49886,49887,49889,49890,49893,49894,49895,49896,49897,49898,49902,49904,49906,49907,49908,49909,49911,49914,49917,49918,49919,49921,49922,49923,49924,49925,49926,49927,49930,49931,49934,49935,49936,49937,49938,49942,49943,49945,49946,49947,49949,49950,49951,49952,49953,49954,49955,49958,49959,49962,49963,49964,49965,49966,49967,49968,49969,49970,null,null,null,null,null,null,49971,49972,49973,49974,49975,49976,49977,49978,49979,49980,49981,49982,49983,49984,49985,49986,49987,49988,49990,49991,49992,49993,49994,49995,49996,49997,null,null,null,null,null,null,49998,49999,5e4,50001,50002,50003,50004,50005,50006,50007,50008,50009,50010,50011,50012,50013,50014,50015,50016,50017,50018,50019,50020,50021,50022,50023,50026,50027,50029,50030,50031,50033,50035,50036,50037,50038,50039,50042,50043,50046,50047,50048,50049,50050,50051,50053,50054,50055,50057,50058,50059,50061,50062,50063,50064,50065,50066,50067,50068,50069,50070,50071,50072,50073,50074,50075,50076,50077,50078,50079,50080,50081,50082,50083,50084,50085,50086,50087,50088,50089,50090,50091,50092,50093,50094,50095,50096,50097,50098,50099,50100,50101,50102,50103,50104,50105,50106,50107,50108,50109,50110,50111,50113,50114,50115,50116,50117,50118,50119,50120,50121,50122,50123,50124,50125,50126,50127,50128,50129,50130,50131,50132,50133,50134,50135,50138,50139,50141,50142,50145,50147,50148,50149,50150,50151,50154,50155,50156,50158,50159,50160,50161,50162,50163,50166,50167,50169,50170,50171,50172,50173,50174,null,null,null,null,null,null,50175,50176,50177,50178,50179,50180,50181,50182,50183,50185,50186,50187,50188,50189,50190,50191,50193,50194,50195,50196,50197,50198,50199,50200,50201,50202,null,null,null,null,null,null,50203,50204,50205,50206,50207,50208,50209,50210,50211,50213,50214,50215,50216,50217,50218,50219,50221,50222,50223,50225,50226,50227,50229,50230,50231,50232,50233,50234,50235,50238,50239,50240,50241,50242,50243,50244,50245,50246,50247,50249,50250,50251,50252,50253,50254,50255,50256,50257,50258,50259,50260,50261,50262,50263,50264,50265,50266,50267,50268,50269,50270,50271,50272,50273,50274,50275,50278,50279,50281,50282,50283,50285,50286,50287,50288,50289,50290,50291,50294,50295,50296,50298,50299,50300,50301,50302,50303,50305,50306,50307,50308,50309,50310,50311,50312,50313,50314,50315,50316,50317,50318,50319,50320,50321,50322,50323,50325,50326,50327,50328,50329,50330,50331,50333,50334,50335,50336,50337,50338,50339,50340,50341,50342,50343,50344,50345,50346,50347,50348,50349,50350,50351,50352,50353,50354,50355,50356,50357,50358,50359,50361,50362,50363,50365,50366,50367,50368,50369,50370,50371,50372,50373,null,null,null,null,null,null,50374,50375,50376,50377,50378,50379,50380,50381,50382,50383,50384,50385,50386,50387,50388,50389,50390,50391,50392,50393,50394,50395,50396,50397,50398,50399,null,null,null,null,null,null,50400,50401,50402,50403,50404,50405,50406,50407,50408,50410,50411,50412,50413,50414,50415,50418,50419,50421,50422,50423,50425,50427,50428,50429,50430,50434,50435,50436,50437,50438,50439,50440,50441,50442,50443,50445,50446,50447,50449,50450,50451,50453,50454,50455,50456,50457,50458,50459,50461,50462,50463,50464,50465,50466,50467,50468,50469,50470,50471,50474,50475,50477,50478,50479,50481,50482,50483,50484,50485,50486,50487,50490,50492,50494,50495,50496,50497,50498,50499,50502,50503,50507,50511,50512,50513,50514,50518,50522,50523,50524,50527,50530,50531,50533,50534,50535,50537,50538,50539,50540,50541,50542,50543,50546,50550,50551,50552,50553,50554,50555,50558,50559,50561,50562,50563,50565,50566,50568,50569,50570,50571,50574,50576,50578,50579,50580,50582,50585,50586,50587,50589,50590,50591,50593,50594,50595,50596,50597,50598,50599,50600,50602,50603,50604,50605,50606,50607,50608,50609,50610,50611,50614,null,null,null,null,null,null,50615,50618,50623,50624,50625,50626,50627,50635,50637,50639,50642,50643,50645,50646,50647,50649,50650,50651,50652,50653,50654,50655,50658,50660,50662,50663,null,null,null,null,null,null,50664,50665,50666,50667,50671,50673,50674,50675,50677,50680,50681,50682,50683,50690,50691,50692,50697,50698,50699,50701,50702,50703,50705,50706,50707,50708,50709,50710,50711,50714,50717,50718,50719,50720,50721,50722,50723,50726,50727,50729,50730,50731,50735,50737,50738,50742,50744,50746,50748,50749,50750,50751,50754,50755,50757,50758,50759,50761,50762,50763,50764,50765,50766,50767,50770,50774,50775,50776,50777,50778,50779,50782,50783,50785,50786,50787,50788,50789,50790,50791,50792,50793,50794,50795,50797,50798,50800,50802,50803,50804,50805,50806,50807,50810,50811,50813,50814,50815,50817,50818,50819,50820,50821,50822,50823,50826,50828,50830,50831,50832,50833,50834,50835,50838,50839,50841,50842,50843,50845,50846,50847,50848,50849,50850,50851,50854,50856,50858,50859,50860,50861,50862,50863,50866,50867,50869,50870,50871,50875,50876,50877,50878,50879,50882,50884,50886,50887,50888,50889,50890,50891,50894,null,null,null,null,null,null,50895,50897,50898,50899,50901,50902,50903,50904,50905,50906,50907,50910,50911,50914,50915,50916,50917,50918,50919,50922,50923,50925,50926,50927,50929,50930,null,null,null,null,null,null,50931,50932,50933,50934,50935,50938,50939,50940,50942,50943,50944,50945,50946,50947,50950,50951,50953,50954,50955,50957,50958,50959,50960,50961,50962,50963,50966,50968,50970,50971,50972,50973,50974,50975,50978,50979,50981,50982,50983,50985,50986,50987,50988,50989,50990,50991,50994,50996,50998,51e3,51001,51002,51003,51006,51007,51009,51010,51011,51013,51014,51015,51016,51017,51019,51022,51024,51033,51034,51035,51037,51038,51039,51041,51042,51043,51044,51045,51046,51047,51049,51050,51052,51053,51054,51055,51056,51057,51058,51059,51062,51063,51065,51066,51067,51071,51072,51073,51074,51078,51083,51084,51085,51087,51090,51091,51093,51097,51099,51100,51101,51102,51103,51106,51111,51112,51113,51114,51115,51118,51119,51121,51122,51123,51125,51126,51127,51128,51129,51130,51131,51134,51138,51139,51140,51141,51142,51143,51146,51147,51149,51151,51153,51154,51155,51156,51157,51158,51159,51161,51162,51163,51164,null,null,null,null,null,null,51166,51167,51168,51169,51170,51171,51173,51174,51175,51177,51178,51179,51181,51182,51183,51184,51185,51186,51187,51188,51189,51190,51191,51192,51193,51194,null,null,null,null,null,null,51195,51196,51197,51198,51199,51202,51203,51205,51206,51207,51209,51211,51212,51213,51214,51215,51218,51220,51223,51224,51225,51226,51227,51230,51231,51233,51234,51235,51237,51238,51239,51240,51241,51242,51243,51246,51248,51250,51251,51252,51253,51254,51255,51257,51258,51259,51261,51262,51263,51265,51266,51267,51268,51269,51270,51271,51274,51275,51278,51279,51280,51281,51282,51283,51285,51286,51287,51288,51289,51290,51291,51292,51293,51294,51295,51296,51297,51298,51299,51300,51301,51302,51303,51304,51305,51306,51307,51308,51309,51310,51311,51314,51315,51317,51318,51319,51321,51323,51324,51325,51326,51327,51330,51332,51336,51337,51338,51342,51343,51344,51345,51346,51347,51349,51350,51351,51352,51353,51354,51355,51356,51358,51360,51362,51363,51364,51365,51366,51367,51369,51370,51371,51372,51373,51374,51375,51376,51377,51378,51379,51380,51381,51382,51383,51384,51385,51386,51387,51390,51391,51392,51393,null,null,null,null,null,null,51394,51395,51397,51398,51399,51401,51402,51403,51405,51406,51407,51408,51409,51410,51411,51414,51416,51418,51419,51420,51421,51422,51423,51426,51427,51429,null,null,null,null,null,null,51430,51431,51432,51433,51434,51435,51436,51437,51438,51439,51440,51441,51442,51443,51444,51446,51447,51448,51449,51450,51451,51454,51455,51457,51458,51459,51463,51464,51465,51466,51467,51470,12288,12289,12290,183,8229,8230,168,12291,173,8213,8741,65340,8764,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,177,215,247,8800,8804,8805,8734,8756,176,8242,8243,8451,8491,65504,65505,65509,9794,9792,8736,8869,8978,8706,8711,8801,8786,167,8251,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8594,8592,8593,8595,8596,12307,8810,8811,8730,8765,8733,8757,8747,8748,8712,8715,8838,8839,8834,8835,8746,8745,8743,8744,65506,51472,51474,51475,51476,51477,51478,51479,51481,51482,51483,51484,51485,51486,51487,51488,51489,51490,51491,51492,51493,51494,51495,51496,51497,51498,51499,null,null,null,null,null,null,51501,51502,51503,51504,51505,51506,51507,51509,51510,51511,51512,51513,51514,51515,51516,51517,51518,51519,51520,51521,51522,51523,51524,51525,51526,51527,null,null,null,null,null,null,51528,51529,51530,51531,51532,51533,51534,51535,51538,51539,51541,51542,51543,51545,51546,51547,51548,51549,51550,51551,51554,51556,51557,51558,51559,51560,51561,51562,51563,51565,51566,51567,8658,8660,8704,8707,180,65374,711,728,733,730,729,184,731,161,191,720,8750,8721,8719,164,8457,8240,9665,9664,9655,9654,9828,9824,9825,9829,9831,9827,8857,9672,9635,9680,9681,9618,9636,9637,9640,9639,9638,9641,9832,9743,9742,9756,9758,182,8224,8225,8597,8599,8601,8598,8600,9837,9833,9834,9836,12927,12828,8470,13255,8482,13250,13272,8481,8364,174,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51569,51570,51571,51573,51574,51575,51576,51577,51578,51579,51581,51582,51583,51584,51585,51586,51587,51588,51589,51590,51591,51594,51595,51597,51598,51599,null,null,null,null,null,null,51601,51602,51603,51604,51605,51606,51607,51610,51612,51614,51615,51616,51617,51618,51619,51620,51621,51622,51623,51624,51625,51626,51627,51628,51629,51630,null,null,null,null,null,null,51631,51632,51633,51634,51635,51636,51637,51638,51639,51640,51641,51642,51643,51644,51645,51646,51647,51650,51651,51653,51654,51657,51659,51660,51661,51662,51663,51666,51668,51671,51672,51675,65281,65282,65283,65284,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65510,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,51678,51679,51681,51683,51685,51686,51688,51689,51690,51691,51694,51698,51699,51700,51701,51702,51703,51706,51707,51709,51710,51711,51713,51714,51715,51716,null,null,null,null,null,null,51717,51718,51719,51722,51726,51727,51728,51729,51730,51731,51733,51734,51735,51737,51738,51739,51740,51741,51742,51743,51744,51745,51746,51747,51748,51749,null,null,null,null,null,null,51750,51751,51752,51754,51755,51756,51757,51758,51759,51760,51761,51762,51763,51764,51765,51766,51767,51768,51769,51770,51771,51772,51773,51774,51775,51776,51777,51778,51779,51780,51781,51782,12593,12594,12595,12596,12597,12598,12599,12600,12601,12602,12603,12604,12605,12606,12607,12608,12609,12610,12611,12612,12613,12614,12615,12616,12617,12618,12619,12620,12621,12622,12623,12624,12625,12626,12627,12628,12629,12630,12631,12632,12633,12634,12635,12636,12637,12638,12639,12640,12641,12642,12643,12644,12645,12646,12647,12648,12649,12650,12651,12652,12653,12654,12655,12656,12657,12658,12659,12660,12661,12662,12663,12664,12665,12666,12667,12668,12669,12670,12671,12672,12673,12674,12675,12676,12677,12678,12679,12680,12681,12682,12683,12684,12685,12686,51783,51784,51785,51786,51787,51790,51791,51793,51794,51795,51797,51798,51799,51800,51801,51802,51803,51806,51810,51811,51812,51813,51814,51815,51817,51818,null,null,null,null,null,null,51819,51820,51821,51822,51823,51824,51825,51826,51827,51828,51829,51830,51831,51832,51833,51834,51835,51836,51838,51839,51840,51841,51842,51843,51845,51846,null,null,null,null,null,null,51847,51848,51849,51850,51851,51852,51853,51854,51855,51856,51857,51858,51859,51860,51861,51862,51863,51865,51866,51867,51868,51869,51870,51871,51872,51873,51874,51875,51876,51877,51878,51879,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,null,null,null,null,null,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,51880,51881,51882,51883,51884,51885,51886,51887,51888,51889,51890,51891,51892,51893,51894,51895,51896,51897,51898,51899,51902,51903,51905,51906,51907,51909,null,null,null,null,null,null,51910,51911,51912,51913,51914,51915,51918,51920,51922,51924,51925,51926,51927,51930,51931,51932,51933,51934,51935,51937,51938,51939,51940,51941,51942,51943,null,null,null,null,null,null,51944,51945,51946,51947,51949,51950,51951,51952,51953,51954,51955,51957,51958,51959,51960,51961,51962,51963,51964,51965,51966,51967,51968,51969,51970,51971,51972,51973,51974,51975,51977,51978,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,9490,9489,9498,9497,9494,9493,9486,9485,9502,9503,9505,9506,9510,9511,9513,9514,9517,9518,9521,9522,9525,9526,9529,9530,9533,9534,9536,9537,9539,9540,9541,9542,9543,9544,9545,9546,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,51979,51980,51981,51982,51983,51985,51986,51987,51989,51990,51991,51993,51994,51995,51996,51997,51998,51999,52002,52003,52004,52005,52006,52007,52008,52009,null,null,null,null,null,null,52010,52011,52012,52013,52014,52015,52016,52017,52018,52019,52020,52021,52022,52023,52024,52025,52026,52027,52028,52029,52030,52031,52032,52034,52035,52036,null,null,null,null,null,null,52037,52038,52039,52042,52043,52045,52046,52047,52049,52050,52051,52052,52053,52054,52055,52058,52059,52060,52062,52063,52064,52065,52066,52067,52069,52070,52071,52072,52073,52074,52075,52076,13205,13206,13207,8467,13208,13252,13219,13220,13221,13222,13209,13210,13211,13212,13213,13214,13215,13216,13217,13218,13258,13197,13198,13199,13263,13192,13193,13256,13223,13224,13232,13233,13234,13235,13236,13237,13238,13239,13240,13241,13184,13185,13186,13187,13188,13242,13243,13244,13245,13246,13247,13200,13201,13202,13203,13204,8486,13248,13249,13194,13195,13196,13270,13253,13229,13230,13231,13275,13225,13226,13227,13228,13277,13264,13267,13251,13257,13276,13254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52077,52078,52079,52080,52081,52082,52083,52084,52085,52086,52087,52090,52091,52092,52093,52094,52095,52096,52097,52098,52099,52100,52101,52102,52103,52104,null,null,null,null,null,null,52105,52106,52107,52108,52109,52110,52111,52112,52113,52114,52115,52116,52117,52118,52119,52120,52121,52122,52123,52125,52126,52127,52128,52129,52130,52131,null,null,null,null,null,null,52132,52133,52134,52135,52136,52137,52138,52139,52140,52141,52142,52143,52144,52145,52146,52147,52148,52149,52150,52151,52153,52154,52155,52156,52157,52158,52159,52160,52161,52162,52163,52164,198,208,170,294,null,306,null,319,321,216,338,186,222,358,330,null,12896,12897,12898,12899,12900,12901,12902,12903,12904,12905,12906,12907,12908,12909,12910,12911,12912,12913,12914,12915,12916,12917,12918,12919,12920,12921,12922,12923,9424,9425,9426,9427,9428,9429,9430,9431,9432,9433,9434,9435,9436,9437,9438,9439,9440,9441,9442,9443,9444,9445,9446,9447,9448,9449,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,189,8531,8532,188,190,8539,8540,8541,8542,52165,52166,52167,52168,52169,52170,52171,52172,52173,52174,52175,52176,52177,52178,52179,52181,52182,52183,52184,52185,52186,52187,52188,52189,52190,52191,null,null,null,null,null,null,52192,52193,52194,52195,52197,52198,52200,52202,52203,52204,52205,52206,52207,52208,52209,52210,52211,52212,52213,52214,52215,52216,52217,52218,52219,52220,null,null,null,null,null,null,52221,52222,52223,52224,52225,52226,52227,52228,52229,52230,52231,52232,52233,52234,52235,52238,52239,52241,52242,52243,52245,52246,52247,52248,52249,52250,52251,52254,52255,52256,52259,52260,230,273,240,295,305,307,312,320,322,248,339,223,254,359,331,329,12800,12801,12802,12803,12804,12805,12806,12807,12808,12809,12810,12811,12812,12813,12814,12815,12816,12817,12818,12819,12820,12821,12822,12823,12824,12825,12826,12827,9372,9373,9374,9375,9376,9377,9378,9379,9380,9381,9382,9383,9384,9385,9386,9387,9388,9389,9390,9391,9392,9393,9394,9395,9396,9397,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,185,178,179,8308,8319,8321,8322,8323,8324,52261,52262,52266,52267,52269,52271,52273,52274,52275,52276,52277,52278,52279,52282,52287,52288,52289,52290,52291,52294,52295,52297,52298,52299,52301,52302,null,null,null,null,null,null,52303,52304,52305,52306,52307,52310,52314,52315,52316,52317,52318,52319,52321,52322,52323,52325,52327,52329,52330,52331,52332,52333,52334,52335,52337,52338,null,null,null,null,null,null,52339,52340,52342,52343,52344,52345,52346,52347,52348,52349,52350,52351,52352,52353,52354,52355,52356,52357,52358,52359,52360,52361,52362,52363,52364,52365,52366,52367,52368,52369,52370,52371,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,52372,52373,52374,52375,52378,52379,52381,52382,52383,52385,52386,52387,52388,52389,52390,52391,52394,52398,52399,52400,52401,52402,52403,52406,52407,52409,null,null,null,null,null,null,52410,52411,52413,52414,52415,52416,52417,52418,52419,52422,52424,52426,52427,52428,52429,52430,52431,52433,52434,52435,52437,52438,52439,52440,52441,52442,null,null,null,null,null,null,52443,52444,52445,52446,52447,52448,52449,52450,52451,52453,52454,52455,52456,52457,52458,52459,52461,52462,52463,52465,52466,52467,52468,52469,52470,52471,52472,52473,52474,52475,52476,52477,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,52478,52479,52480,52482,52483,52484,52485,52486,52487,52490,52491,52493,52494,52495,52497,52498,52499,52500,52501,52502,52503,52506,52508,52510,52511,52512,null,null,null,null,null,null,52513,52514,52515,52517,52518,52519,52521,52522,52523,52525,52526,52527,52528,52529,52530,52531,52532,52533,52534,52535,52536,52538,52539,52540,52541,52542,null,null,null,null,null,null,52543,52544,52545,52546,52547,52548,52549,52550,52551,52552,52553,52554,52555,52556,52557,52558,52559,52560,52561,52562,52563,52564,52565,52566,52567,52568,52569,52570,52571,52573,52574,52575,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,52577,52578,52579,52581,52582,52583,52584,52585,52586,52587,52590,52592,52594,52595,52596,52597,52598,52599,52601,52602,52603,52604,52605,52606,52607,52608,null,null,null,null,null,null,52609,52610,52611,52612,52613,52614,52615,52617,52618,52619,52620,52621,52622,52623,52624,52625,52626,52627,52630,52631,52633,52634,52635,52637,52638,52639,null,null,null,null,null,null,52640,52641,52642,52643,52646,52648,52650,52651,52652,52653,52654,52655,52657,52658,52659,52660,52661,52662,52663,52664,52665,52666,52667,52668,52669,52670,52671,52672,52673,52674,52675,52677,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52678,52679,52680,52681,52682,52683,52685,52686,52687,52689,52690,52691,52692,52693,52694,52695,52696,52697,52698,52699,52700,52701,52702,52703,52704,52705,null,null,null,null,null,null,52706,52707,52708,52709,52710,52711,52713,52714,52715,52717,52718,52719,52721,52722,52723,52724,52725,52726,52727,52730,52732,52734,52735,52736,52737,52738,null,null,null,null,null,null,52739,52741,52742,52743,52745,52746,52747,52749,52750,52751,52752,52753,52754,52755,52757,52758,52759,52760,52762,52763,52764,52765,52766,52767,52770,52771,52773,52774,52775,52777,52778,52779,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52780,52781,52782,52783,52786,52788,52790,52791,52792,52793,52794,52795,52796,52797,52798,52799,52800,52801,52802,52803,52804,52805,52806,52807,52808,52809,null,null,null,null,null,null,52810,52811,52812,52813,52814,52815,52816,52817,52818,52819,52820,52821,52822,52823,52826,52827,52829,52830,52834,52835,52836,52837,52838,52839,52842,52844,null,null,null,null,null,null,52846,52847,52848,52849,52850,52851,52854,52855,52857,52858,52859,52861,52862,52863,52864,52865,52866,52867,52870,52872,52874,52875,52876,52877,52878,52879,52882,52883,52885,52886,52887,52889,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,52890,52891,52892,52893,52894,52895,52898,52902,52903,52904,52905,52906,52907,52910,52911,52912,52913,52914,52915,52916,52917,52918,52919,52920,52921,52922,null,null,null,null,null,null,52923,52924,52925,52926,52927,52928,52930,52931,52932,52933,52934,52935,52936,52937,52938,52939,52940,52941,52942,52943,52944,52945,52946,52947,52948,52949,null,null,null,null,null,null,52950,52951,52952,52953,52954,52955,52956,52957,52958,52959,52960,52961,52962,52963,52966,52967,52969,52970,52973,52974,52975,52976,52977,52978,52979,52982,52986,52987,52988,52989,52990,52991,44032,44033,44036,44039,44040,44041,44042,44048,44049,44050,44051,44052,44053,44054,44055,44057,44058,44059,44060,44061,44064,44068,44076,44077,44079,44080,44081,44088,44089,44092,44096,44107,44109,44116,44120,44124,44144,44145,44148,44151,44152,44154,44160,44161,44163,44164,44165,44166,44169,44170,44171,44172,44176,44180,44188,44189,44191,44192,44193,44200,44201,44202,44204,44207,44208,44216,44217,44219,44220,44221,44225,44228,44232,44236,44245,44247,44256,44257,44260,44263,44264,44266,44268,44271,44272,44273,44275,44277,44278,44284,44285,44288,44292,44294,52994,52995,52997,52998,52999,53001,53002,53003,53004,53005,53006,53007,53010,53012,53014,53015,53016,53017,53018,53019,53021,53022,53023,53025,53026,53027,null,null,null,null,null,null,53029,53030,53031,53032,53033,53034,53035,53038,53042,53043,53044,53045,53046,53047,53049,53050,53051,53052,53053,53054,53055,53056,53057,53058,53059,53060,null,null,null,null,null,null,53061,53062,53063,53064,53065,53066,53067,53068,53069,53070,53071,53072,53073,53074,53075,53078,53079,53081,53082,53083,53085,53086,53087,53088,53089,53090,53091,53094,53096,53098,53099,53100,44300,44301,44303,44305,44312,44316,44320,44329,44332,44333,44340,44341,44344,44348,44356,44357,44359,44361,44368,44372,44376,44385,44387,44396,44397,44400,44403,44404,44405,44406,44411,44412,44413,44415,44417,44418,44424,44425,44428,44432,44444,44445,44452,44471,44480,44481,44484,44488,44496,44497,44499,44508,44512,44516,44536,44537,44540,44543,44544,44545,44552,44553,44555,44557,44564,44592,44593,44596,44599,44600,44602,44608,44609,44611,44613,44614,44618,44620,44621,44622,44624,44628,44630,44636,44637,44639,44640,44641,44645,44648,44649,44652,44656,44664,53101,53102,53103,53106,53107,53109,53110,53111,53113,53114,53115,53116,53117,53118,53119,53121,53122,53123,53124,53126,53127,53128,53129,53130,53131,53133,null,null,null,null,null,null,53134,53135,53136,53137,53138,53139,53140,53141,53142,53143,53144,53145,53146,53147,53148,53149,53150,53151,53152,53154,53155,53156,53157,53158,53159,53161,null,null,null,null,null,null,53162,53163,53164,53165,53166,53167,53169,53170,53171,53172,53173,53174,53175,53176,53177,53178,53179,53180,53181,53182,53183,53184,53185,53186,53187,53189,53190,53191,53192,53193,53194,53195,44665,44667,44668,44669,44676,44677,44684,44732,44733,44734,44736,44740,44748,44749,44751,44752,44753,44760,44761,44764,44776,44779,44781,44788,44792,44796,44807,44808,44813,44816,44844,44845,44848,44850,44852,44860,44861,44863,44865,44866,44867,44872,44873,44880,44892,44893,44900,44901,44921,44928,44932,44936,44944,44945,44949,44956,44984,44985,44988,44992,44999,45e3,45001,45003,45005,45006,45012,45020,45032,45033,45040,45041,45044,45048,45056,45057,45060,45068,45072,45076,45084,45085,45096,45124,45125,45128,45130,45132,45134,45139,45140,45141,45143,45145,53196,53197,53198,53199,53200,53201,53202,53203,53204,53205,53206,53207,53208,53209,53210,53211,53212,53213,53214,53215,53218,53219,53221,53222,53223,53225,null,null,null,null,null,null,53226,53227,53228,53229,53230,53231,53234,53236,53238,53239,53240,53241,53242,53243,53245,53246,53247,53249,53250,53251,53253,53254,53255,53256,53257,53258,null,null,null,null,null,null,53259,53260,53261,53262,53263,53264,53266,53267,53268,53269,53270,53271,53273,53274,53275,53276,53277,53278,53279,53280,53281,53282,53283,53284,53285,53286,53287,53288,53289,53290,53291,53292,45149,45180,45181,45184,45188,45196,45197,45199,45201,45208,45209,45210,45212,45215,45216,45217,45218,45224,45225,45227,45228,45229,45230,45231,45233,45235,45236,45237,45240,45244,45252,45253,45255,45256,45257,45264,45265,45268,45272,45280,45285,45320,45321,45323,45324,45328,45330,45331,45336,45337,45339,45340,45341,45347,45348,45349,45352,45356,45364,45365,45367,45368,45369,45376,45377,45380,45384,45392,45393,45396,45397,45400,45404,45408,45432,45433,45436,45440,45442,45448,45449,45451,45453,45458,45459,45460,45464,45468,45480,45516,45520,45524,45532,45533,53294,53295,53296,53297,53298,53299,53302,53303,53305,53306,53307,53309,53310,53311,53312,53313,53314,53315,53318,53320,53322,53323,53324,53325,53326,53327,null,null,null,null,null,null,53329,53330,53331,53333,53334,53335,53337,53338,53339,53340,53341,53342,53343,53345,53346,53347,53348,53349,53350,53351,53352,53353,53354,53355,53358,53359,null,null,null,null,null,null,53361,53362,53363,53365,53366,53367,53368,53369,53370,53371,53374,53375,53376,53378,53379,53380,53381,53382,53383,53384,53385,53386,53387,53388,53389,53390,53391,53392,53393,53394,53395,53396,45535,45544,45545,45548,45552,45561,45563,45565,45572,45573,45576,45579,45580,45588,45589,45591,45593,45600,45620,45628,45656,45660,45664,45672,45673,45684,45685,45692,45700,45701,45705,45712,45713,45716,45720,45721,45722,45728,45729,45731,45733,45734,45738,45740,45744,45748,45768,45769,45772,45776,45778,45784,45785,45787,45789,45794,45796,45797,45798,45800,45803,45804,45805,45806,45807,45811,45812,45813,45815,45816,45817,45818,45819,45823,45824,45825,45828,45832,45840,45841,45843,45844,45845,45852,45908,45909,45910,45912,45915,45916,45918,45919,45924,45925,53397,53398,53399,53400,53401,53402,53403,53404,53405,53406,53407,53408,53409,53410,53411,53414,53415,53417,53418,53419,53421,53422,53423,53424,53425,53426,null,null,null,null,null,null,53427,53430,53432,53434,53435,53436,53437,53438,53439,53442,53443,53445,53446,53447,53450,53451,53452,53453,53454,53455,53458,53462,53463,53464,53465,53466,null,null,null,null,null,null,53467,53470,53471,53473,53474,53475,53477,53478,53479,53480,53481,53482,53483,53486,53490,53491,53492,53493,53494,53495,53497,53498,53499,53500,53501,53502,53503,53504,53505,53506,53507,53508,45927,45929,45931,45934,45936,45937,45940,45944,45952,45953,45955,45956,45957,45964,45968,45972,45984,45985,45992,45996,46020,46021,46024,46027,46028,46030,46032,46036,46037,46039,46041,46043,46045,46048,46052,46056,46076,46096,46104,46108,46112,46120,46121,46123,46132,46160,46161,46164,46168,46176,46177,46179,46181,46188,46208,46216,46237,46244,46248,46252,46261,46263,46265,46272,46276,46280,46288,46293,46300,46301,46304,46307,46308,46310,46316,46317,46319,46321,46328,46356,46357,46360,46363,46364,46372,46373,46375,46376,46377,46378,46384,46385,46388,46392,53509,53510,53511,53512,53513,53514,53515,53516,53518,53519,53520,53521,53522,53523,53524,53525,53526,53527,53528,53529,53530,53531,53532,53533,53534,53535,null,null,null,null,null,null,53536,53537,53538,53539,53540,53541,53542,53543,53544,53545,53546,53547,53548,53549,53550,53551,53554,53555,53557,53558,53559,53561,53563,53564,53565,53566,null,null,null,null,null,null,53567,53570,53574,53575,53576,53577,53578,53579,53582,53583,53585,53586,53587,53589,53590,53591,53592,53593,53594,53595,53598,53600,53602,53603,53604,53605,53606,53607,53609,53610,53611,53613,46400,46401,46403,46404,46405,46411,46412,46413,46416,46420,46428,46429,46431,46432,46433,46496,46497,46500,46504,46506,46507,46512,46513,46515,46516,46517,46523,46524,46525,46528,46532,46540,46541,46543,46544,46545,46552,46572,46608,46609,46612,46616,46629,46636,46644,46664,46692,46696,46748,46749,46752,46756,46763,46764,46769,46804,46832,46836,46840,46848,46849,46853,46888,46889,46892,46895,46896,46904,46905,46907,46916,46920,46924,46932,46933,46944,46948,46952,46960,46961,46963,46965,46972,46973,46976,46980,46988,46989,46991,46992,46993,46994,46998,46999,53614,53615,53616,53617,53618,53619,53620,53621,53622,53623,53624,53625,53626,53627,53629,53630,53631,53632,53633,53634,53635,53637,53638,53639,53641,53642,null,null,null,null,null,null,53643,53644,53645,53646,53647,53648,53649,53650,53651,53652,53653,53654,53655,53656,53657,53658,53659,53660,53661,53662,53663,53666,53667,53669,53670,53671,null,null,null,null,null,null,53673,53674,53675,53676,53677,53678,53679,53682,53684,53686,53687,53688,53689,53691,53693,53694,53695,53697,53698,53699,53700,53701,53702,53703,53704,53705,53706,53707,53708,53709,53710,53711,47e3,47001,47004,47008,47016,47017,47019,47020,47021,47028,47029,47032,47047,47049,47084,47085,47088,47092,47100,47101,47103,47104,47105,47111,47112,47113,47116,47120,47128,47129,47131,47133,47140,47141,47144,47148,47156,47157,47159,47160,47161,47168,47172,47185,47187,47196,47197,47200,47204,47212,47213,47215,47217,47224,47228,47245,47272,47280,47284,47288,47296,47297,47299,47301,47308,47312,47316,47325,47327,47329,47336,47337,47340,47344,47352,47353,47355,47357,47364,47384,47392,47420,47421,47424,47428,47436,47439,47441,47448,47449,47452,47456,47464,47465,53712,53713,53714,53715,53716,53717,53718,53719,53721,53722,53723,53724,53725,53726,53727,53728,53729,53730,53731,53732,53733,53734,53735,53736,53737,53738,null,null,null,null,null,null,53739,53740,53741,53742,53743,53744,53745,53746,53747,53749,53750,53751,53753,53754,53755,53756,53757,53758,53759,53760,53761,53762,53763,53764,53765,53766,null,null,null,null,null,null,53768,53770,53771,53772,53773,53774,53775,53777,53778,53779,53780,53781,53782,53783,53784,53785,53786,53787,53788,53789,53790,53791,53792,53793,53794,53795,53796,53797,53798,53799,53800,53801,47467,47469,47476,47477,47480,47484,47492,47493,47495,47497,47498,47501,47502,47532,47533,47536,47540,47548,47549,47551,47553,47560,47561,47564,47566,47567,47568,47569,47570,47576,47577,47579,47581,47582,47585,47587,47588,47589,47592,47596,47604,47605,47607,47608,47609,47610,47616,47617,47624,47637,47672,47673,47676,47680,47682,47688,47689,47691,47693,47694,47699,47700,47701,47704,47708,47716,47717,47719,47720,47721,47728,47729,47732,47736,47747,47748,47749,47751,47756,47784,47785,47787,47788,47792,47794,47800,47801,47803,47805,47812,47816,47832,47833,47868,53802,53803,53806,53807,53809,53810,53811,53813,53814,53815,53816,53817,53818,53819,53822,53824,53826,53827,53828,53829,53830,53831,53833,53834,53835,53836,null,null,null,null,null,null,53837,53838,53839,53840,53841,53842,53843,53844,53845,53846,53847,53848,53849,53850,53851,53853,53854,53855,53856,53857,53858,53859,53861,53862,53863,53864,null,null,null,null,null,null,53865,53866,53867,53868,53869,53870,53871,53872,53873,53874,53875,53876,53877,53878,53879,53880,53881,53882,53883,53884,53885,53886,53887,53890,53891,53893,53894,53895,53897,53898,53899,53900,47872,47876,47885,47887,47889,47896,47900,47904,47913,47915,47924,47925,47926,47928,47931,47932,47933,47934,47940,47941,47943,47945,47949,47951,47952,47956,47960,47969,47971,47980,48008,48012,48016,48036,48040,48044,48052,48055,48064,48068,48072,48080,48083,48120,48121,48124,48127,48128,48130,48136,48137,48139,48140,48141,48143,48145,48148,48149,48150,48151,48152,48155,48156,48157,48158,48159,48164,48165,48167,48169,48173,48176,48177,48180,48184,48192,48193,48195,48196,48197,48201,48204,48205,48208,48221,48260,48261,48264,48267,48268,48270,48276,48277,48279,53901,53902,53903,53906,53907,53908,53910,53911,53912,53913,53914,53915,53917,53918,53919,53921,53922,53923,53925,53926,53927,53928,53929,53930,53931,53933,null,null,null,null,null,null,53934,53935,53936,53938,53939,53940,53941,53942,53943,53946,53947,53949,53950,53953,53955,53956,53957,53958,53959,53962,53964,53965,53966,53967,53968,53969,null,null,null,null,null,null,53970,53971,53973,53974,53975,53977,53978,53979,53981,53982,53983,53984,53985,53986,53987,53990,53991,53992,53993,53994,53995,53996,53997,53998,53999,54002,54003,54005,54006,54007,54009,54010,48281,48282,48288,48289,48292,48295,48296,48304,48305,48307,48308,48309,48316,48317,48320,48324,48333,48335,48336,48337,48341,48344,48348,48372,48373,48374,48376,48380,48388,48389,48391,48393,48400,48404,48420,48428,48448,48456,48457,48460,48464,48472,48473,48484,48488,48512,48513,48516,48519,48520,48521,48522,48528,48529,48531,48533,48537,48538,48540,48548,48560,48568,48596,48597,48600,48604,48617,48624,48628,48632,48640,48643,48645,48652,48653,48656,48660,48668,48669,48671,48708,48709,48712,48716,48718,48724,48725,48727,48729,48730,48731,48736,48737,48740,54011,54012,54013,54014,54015,54018,54020,54022,54023,54024,54025,54026,54027,54031,54033,54034,54035,54037,54039,54040,54041,54042,54043,54046,54050,54051,null,null,null,null,null,null,54052,54054,54055,54058,54059,54061,54062,54063,54065,54066,54067,54068,54069,54070,54071,54074,54078,54079,54080,54081,54082,54083,54086,54087,54088,54089,null,null,null,null,null,null,54090,54091,54092,54093,54094,54095,54096,54097,54098,54099,54100,54101,54102,54103,54104,54105,54106,54107,54108,54109,54110,54111,54112,54113,54114,54115,54116,54117,54118,54119,54120,54121,48744,48746,48752,48753,48755,48756,48757,48763,48764,48765,48768,48772,48780,48781,48783,48784,48785,48792,48793,48808,48848,48849,48852,48855,48856,48864,48867,48868,48869,48876,48897,48904,48905,48920,48921,48923,48924,48925,48960,48961,48964,48968,48976,48977,48981,49044,49072,49093,49100,49101,49104,49108,49116,49119,49121,49212,49233,49240,49244,49248,49256,49257,49296,49297,49300,49304,49312,49313,49315,49317,49324,49325,49327,49328,49331,49332,49333,49334,49340,49341,49343,49344,49345,49349,49352,49353,49356,49360,49368,49369,49371,49372,49373,49380,54122,54123,54124,54125,54126,54127,54128,54129,54130,54131,54132,54133,54134,54135,54136,54137,54138,54139,54142,54143,54145,54146,54147,54149,54150,54151,null,null,null,null,null,null,54152,54153,54154,54155,54158,54162,54163,54164,54165,54166,54167,54170,54171,54173,54174,54175,54177,54178,54179,54180,54181,54182,54183,54186,54188,54190,null,null,null,null,null,null,54191,54192,54193,54194,54195,54197,54198,54199,54201,54202,54203,54205,54206,54207,54208,54209,54210,54211,54214,54215,54218,54219,54220,54221,54222,54223,54225,54226,54227,54228,54229,54230,49381,49384,49388,49396,49397,49399,49401,49408,49412,49416,49424,49429,49436,49437,49438,49439,49440,49443,49444,49446,49447,49452,49453,49455,49456,49457,49462,49464,49465,49468,49472,49480,49481,49483,49484,49485,49492,49493,49496,49500,49508,49509,49511,49512,49513,49520,49524,49528,49541,49548,49549,49550,49552,49556,49558,49564,49565,49567,49569,49573,49576,49577,49580,49584,49597,49604,49608,49612,49620,49623,49624,49632,49636,49640,49648,49649,49651,49660,49661,49664,49668,49676,49677,49679,49681,49688,49689,49692,49695,49696,49704,49705,49707,49709,54231,54233,54234,54235,54236,54237,54238,54239,54240,54242,54244,54245,54246,54247,54248,54249,54250,54251,54254,54255,54257,54258,54259,54261,54262,54263,null,null,null,null,null,null,54264,54265,54266,54267,54270,54272,54274,54275,54276,54277,54278,54279,54281,54282,54283,54284,54285,54286,54287,54288,54289,54290,54291,54292,54293,54294,null,null,null,null,null,null,54295,54296,54297,54298,54299,54300,54302,54303,54304,54305,54306,54307,54308,54309,54310,54311,54312,54313,54314,54315,54316,54317,54318,54319,54320,54321,54322,54323,54324,54325,54326,54327,49711,49713,49714,49716,49736,49744,49745,49748,49752,49760,49765,49772,49773,49776,49780,49788,49789,49791,49793,49800,49801,49808,49816,49819,49821,49828,49829,49832,49836,49837,49844,49845,49847,49849,49884,49885,49888,49891,49892,49899,49900,49901,49903,49905,49910,49912,49913,49915,49916,49920,49928,49929,49932,49933,49939,49940,49941,49944,49948,49956,49957,49960,49961,49989,50024,50025,50028,50032,50034,50040,50041,50044,50045,50052,50056,50060,50112,50136,50137,50140,50143,50144,50146,50152,50153,50157,50164,50165,50168,50184,50192,50212,50220,50224,54328,54329,54330,54331,54332,54333,54334,54335,54337,54338,54339,54341,54342,54343,54344,54345,54346,54347,54348,54349,54350,54351,54352,54353,54354,54355,null,null,null,null,null,null,54356,54357,54358,54359,54360,54361,54362,54363,54365,54366,54367,54369,54370,54371,54373,54374,54375,54376,54377,54378,54379,54380,54382,54384,54385,54386,null,null,null,null,null,null,54387,54388,54389,54390,54391,54394,54395,54397,54398,54401,54403,54404,54405,54406,54407,54410,54412,54414,54415,54416,54417,54418,54419,54421,54422,54423,54424,54425,54426,54427,54428,54429,50228,50236,50237,50248,50276,50277,50280,50284,50292,50293,50297,50304,50324,50332,50360,50364,50409,50416,50417,50420,50424,50426,50431,50432,50433,50444,50448,50452,50460,50472,50473,50476,50480,50488,50489,50491,50493,50500,50501,50504,50505,50506,50508,50509,50510,50515,50516,50517,50519,50520,50521,50525,50526,50528,50529,50532,50536,50544,50545,50547,50548,50549,50556,50557,50560,50564,50567,50572,50573,50575,50577,50581,50583,50584,50588,50592,50601,50612,50613,50616,50617,50619,50620,50621,50622,50628,50629,50630,50631,50632,50633,50634,50636,50638,54430,54431,54432,54433,54434,54435,54436,54437,54438,54439,54440,54442,54443,54444,54445,54446,54447,54448,54449,54450,54451,54452,54453,54454,54455,54456,null,null,null,null,null,null,54457,54458,54459,54460,54461,54462,54463,54464,54465,54466,54467,54468,54469,54470,54471,54472,54473,54474,54475,54477,54478,54479,54481,54482,54483,54485,null,null,null,null,null,null,54486,54487,54488,54489,54490,54491,54493,54494,54496,54497,54498,54499,54500,54501,54502,54503,54505,54506,54507,54509,54510,54511,54513,54514,54515,54516,54517,54518,54519,54521,54522,54524,50640,50641,50644,50648,50656,50657,50659,50661,50668,50669,50670,50672,50676,50678,50679,50684,50685,50686,50687,50688,50689,50693,50694,50695,50696,50700,50704,50712,50713,50715,50716,50724,50725,50728,50732,50733,50734,50736,50739,50740,50741,50743,50745,50747,50752,50753,50756,50760,50768,50769,50771,50772,50773,50780,50781,50784,50796,50799,50801,50808,50809,50812,50816,50824,50825,50827,50829,50836,50837,50840,50844,50852,50853,50855,50857,50864,50865,50868,50872,50873,50874,50880,50881,50883,50885,50892,50893,50896,50900,50908,50909,50912,50913,50920,54526,54527,54528,54529,54530,54531,54533,54534,54535,54537,54538,54539,54541,54542,54543,54544,54545,54546,54547,54550,54552,54553,54554,54555,54556,54557,null,null,null,null,null,null,54558,54559,54560,54561,54562,54563,54564,54565,54566,54567,54568,54569,54570,54571,54572,54573,54574,54575,54576,54577,54578,54579,54580,54581,54582,54583,null,null,null,null,null,null,54584,54585,54586,54587,54590,54591,54593,54594,54595,54597,54598,54599,54600,54601,54602,54603,54606,54608,54610,54611,54612,54613,54614,54615,54618,54619,54621,54622,54623,54625,54626,54627,50921,50924,50928,50936,50937,50941,50948,50949,50952,50956,50964,50965,50967,50969,50976,50977,50980,50984,50992,50993,50995,50997,50999,51004,51005,51008,51012,51018,51020,51021,51023,51025,51026,51027,51028,51029,51030,51031,51032,51036,51040,51048,51051,51060,51061,51064,51068,51069,51070,51075,51076,51077,51079,51080,51081,51082,51086,51088,51089,51092,51094,51095,51096,51098,51104,51105,51107,51108,51109,51110,51116,51117,51120,51124,51132,51133,51135,51136,51137,51144,51145,51148,51150,51152,51160,51165,51172,51176,51180,51200,51201,51204,51208,51210,54628,54630,54631,54634,54636,54638,54639,54640,54641,54642,54643,54646,54647,54649,54650,54651,54653,54654,54655,54656,54657,54658,54659,54662,54666,54667,null,null,null,null,null,null,54668,54669,54670,54671,54673,54674,54675,54676,54677,54678,54679,54680,54681,54682,54683,54684,54685,54686,54687,54688,54689,54690,54691,54692,54694,54695,null,null,null,null,null,null,54696,54697,54698,54699,54700,54701,54702,54703,54704,54705,54706,54707,54708,54709,54710,54711,54712,54713,54714,54715,54716,54717,54718,54719,54720,54721,54722,54723,54724,54725,54726,54727,51216,51217,51219,51221,51222,51228,51229,51232,51236,51244,51245,51247,51249,51256,51260,51264,51272,51273,51276,51277,51284,51312,51313,51316,51320,51322,51328,51329,51331,51333,51334,51335,51339,51340,51341,51348,51357,51359,51361,51368,51388,51389,51396,51400,51404,51412,51413,51415,51417,51424,51425,51428,51445,51452,51453,51456,51460,51461,51462,51468,51469,51471,51473,51480,51500,51508,51536,51537,51540,51544,51552,51553,51555,51564,51568,51572,51580,51592,51593,51596,51600,51608,51609,51611,51613,51648,51649,51652,51655,51656,51658,51664,51665,51667,54730,54731,54733,54734,54735,54737,54739,54740,54741,54742,54743,54746,54748,54750,54751,54752,54753,54754,54755,54758,54759,54761,54762,54763,54765,54766,null,null,null,null,null,null,54767,54768,54769,54770,54771,54774,54776,54778,54779,54780,54781,54782,54783,54786,54787,54789,54790,54791,54793,54794,54795,54796,54797,54798,54799,54802,null,null,null,null,null,null,54806,54807,54808,54809,54810,54811,54813,54814,54815,54817,54818,54819,54821,54822,54823,54824,54825,54826,54827,54828,54830,54831,54832,54833,54834,54835,54836,54837,54838,54839,54842,54843,51669,51670,51673,51674,51676,51677,51680,51682,51684,51687,51692,51693,51695,51696,51697,51704,51705,51708,51712,51720,51721,51723,51724,51725,51732,51736,51753,51788,51789,51792,51796,51804,51805,51807,51808,51809,51816,51837,51844,51864,51900,51901,51904,51908,51916,51917,51919,51921,51923,51928,51929,51936,51948,51956,51976,51984,51988,51992,52e3,52001,52033,52040,52041,52044,52048,52056,52057,52061,52068,52088,52089,52124,52152,52180,52196,52199,52201,52236,52237,52240,52244,52252,52253,52257,52258,52263,52264,52265,52268,52270,52272,52280,52281,52283,54845,54846,54847,54849,54850,54851,54852,54854,54855,54858,54860,54862,54863,54864,54866,54867,54870,54871,54873,54874,54875,54877,54878,54879,54880,54881,null,null,null,null,null,null,54882,54883,54884,54885,54886,54888,54890,54891,54892,54893,54894,54895,54898,54899,54901,54902,54903,54904,54905,54906,54907,54908,54909,54910,54911,54912,null,null,null,null,null,null,54913,54914,54916,54918,54919,54920,54921,54922,54923,54926,54927,54929,54930,54931,54933,54934,54935,54936,54937,54938,54939,54940,54942,54944,54946,54947,54948,54949,54950,54951,54953,54954,52284,52285,52286,52292,52293,52296,52300,52308,52309,52311,52312,52313,52320,52324,52326,52328,52336,52341,52376,52377,52380,52384,52392,52393,52395,52396,52397,52404,52405,52408,52412,52420,52421,52423,52425,52432,52436,52452,52460,52464,52481,52488,52489,52492,52496,52504,52505,52507,52509,52516,52520,52524,52537,52572,52576,52580,52588,52589,52591,52593,52600,52616,52628,52629,52632,52636,52644,52645,52647,52649,52656,52676,52684,52688,52712,52716,52720,52728,52729,52731,52733,52740,52744,52748,52756,52761,52768,52769,52772,52776,52784,52785,52787,52789,54955,54957,54958,54959,54961,54962,54963,54964,54965,54966,54967,54968,54970,54972,54973,54974,54975,54976,54977,54978,54979,54982,54983,54985,54986,54987,null,null,null,null,null,null,54989,54990,54991,54992,54994,54995,54997,54998,55e3,55002,55003,55004,55005,55006,55007,55009,55010,55011,55013,55014,55015,55017,55018,55019,55020,55021,null,null,null,null,null,null,55022,55023,55025,55026,55027,55028,55030,55031,55032,55033,55034,55035,55038,55039,55041,55042,55043,55045,55046,55047,55048,55049,55050,55051,55052,55053,55054,55055,55056,55058,55059,55060,52824,52825,52828,52831,52832,52833,52840,52841,52843,52845,52852,52853,52856,52860,52868,52869,52871,52873,52880,52881,52884,52888,52896,52897,52899,52900,52901,52908,52909,52929,52964,52965,52968,52971,52972,52980,52981,52983,52984,52985,52992,52993,52996,53e3,53008,53009,53011,53013,53020,53024,53028,53036,53037,53039,53040,53041,53048,53076,53077,53080,53084,53092,53093,53095,53097,53104,53105,53108,53112,53120,53125,53132,53153,53160,53168,53188,53216,53217,53220,53224,53232,53233,53235,53237,53244,53248,53252,53265,53272,53293,53300,53301,53304,53308,55061,55062,55063,55066,55067,55069,55070,55071,55073,55074,55075,55076,55077,55078,55079,55082,55084,55086,55087,55088,55089,55090,55091,55094,55095,55097,null,null,null,null,null,null,55098,55099,55101,55102,55103,55104,55105,55106,55107,55109,55110,55112,55114,55115,55116,55117,55118,55119,55122,55123,55125,55130,55131,55132,55133,55134,null,null,null,null,null,null,55135,55138,55140,55142,55143,55144,55146,55147,55149,55150,55151,55153,55154,55155,55157,55158,55159,55160,55161,55162,55163,55166,55167,55168,55170,55171,55172,55173,55174,55175,55178,55179,53316,53317,53319,53321,53328,53332,53336,53344,53356,53357,53360,53364,53372,53373,53377,53412,53413,53416,53420,53428,53429,53431,53433,53440,53441,53444,53448,53449,53456,53457,53459,53460,53461,53468,53469,53472,53476,53484,53485,53487,53488,53489,53496,53517,53552,53553,53556,53560,53562,53568,53569,53571,53572,53573,53580,53581,53584,53588,53596,53597,53599,53601,53608,53612,53628,53636,53640,53664,53665,53668,53672,53680,53681,53683,53685,53690,53692,53696,53720,53748,53752,53767,53769,53776,53804,53805,53808,53812,53820,53821,53823,53825,53832,53852,55181,55182,55183,55185,55186,55187,55188,55189,55190,55191,55194,55196,55198,55199,55200,55201,55202,55203,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,53860,53888,53889,53892,53896,53904,53905,53909,53916,53920,53924,53932,53937,53944,53945,53948,53951,53952,53954,53960,53961,53963,53972,53976,53980,53988,53989,54e3,54001,54004,54008,54016,54017,54019,54021,54028,54029,54030,54032,54036,54038,54044,54045,54047,54048,54049,54053,54056,54057,54060,54064,54072,54073,54075,54076,54077,54084,54085,54140,54141,54144,54148,54156,54157,54159,54160,54161,54168,54169,54172,54176,54184,54185,54187,54189,54196,54200,54204,54212,54213,54216,54217,54224,54232,54241,54243,54252,54253,54256,54260,54268,54269,54271,54273,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54280,54301,54336,54340,54364,54368,54372,54381,54383,54392,54393,54396,54399,54400,54402,54408,54409,54411,54413,54420,54441,54476,54480,54484,54492,54495,54504,54508,54512,54520,54523,54525,54532,54536,54540,54548,54549,54551,54588,54589,54592,54596,54604,54605,54607,54609,54616,54617,54620,54624,54629,54632,54633,54635,54637,54644,54645,54648,54652,54660,54661,54663,54664,54665,54672,54693,54728,54729,54732,54736,54738,54744,54745,54747,54749,54756,54757,54760,54764,54772,54773,54775,54777,54784,54785,54788,54792,54800,54801,54803,54804,54805,54812,54816,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,54820,54829,54840,54841,54844,54848,54853,54856,54857,54859,54861,54865,54868,54869,54872,54876,54887,54889,54896,54897,54900,54915,54917,54924,54925,54928,54932,54941,54943,54945,54952,54956,54960,54969,54971,54980,54981,54984,54988,54993,54996,54999,55001,55008,55012,55016,55024,55029,55036,55037,55040,55044,55057,55064,55065,55068,55072,55080,55081,55083,55085,55092,55093,55096,55100,55108,55111,55113,55120,55121,55124,55126,55127,55128,55129,55136,55137,55139,55141,55145,55148,55152,55156,55164,55165,55169,55176,55177,55180,55184,55192,55193,55195,55197,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20285,20339,20551,20729,21152,21487,21621,21733,22025,23233,23478,26247,26550,26551,26607,27468,29634,30146,31292,33499,33540,34903,34952,35382,36040,36303,36603,36838,39381,21051,21364,21508,24682,24932,27580,29647,33050,35258,35282,38307,20355,21002,22718,22904,23014,24178,24185,25031,25536,26438,26604,26751,28567,30286,30475,30965,31240,31487,31777,32925,33390,33393,35563,38291,20075,21917,26359,28212,30883,31469,33883,35088,34638,38824,21208,22350,22570,23884,24863,25022,25121,25954,26577,27204,28187,29976,30131,30435,30640,32058,37039,37969,37970,40853,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21283,23724,30002,32987,37440,38296,21083,22536,23004,23713,23831,24247,24378,24394,24951,27743,30074,30086,31968,32115,32177,32652,33108,33313,34193,35137,35611,37628,38477,40007,20171,20215,20491,20977,22607,24887,24894,24936,25913,27114,28433,30117,30342,30422,31623,33445,33995,63744,37799,38283,21888,23458,22353,63745,31923,32697,37301,20520,21435,23621,24040,25298,25454,25818,25831,28192,28844,31067,36317,36382,63746,36989,37445,37624,20094,20214,20581,24062,24314,24838,26967,33137,34388,36423,37749,39467,20062,20625,26480,26688,20745,21133,21138,27298,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30652,37392,40660,21163,24623,36850,20552,25001,25581,25802,26684,27268,28608,33160,35233,38548,22533,29309,29356,29956,32121,32365,32937,35211,35700,36963,40273,25225,27770,28500,32080,32570,35363,20860,24906,31645,35609,37463,37772,20140,20435,20510,20670,20742,21185,21197,21375,22384,22659,24218,24465,24950,25004,25806,25964,26223,26299,26356,26775,28039,28805,28913,29855,29861,29898,30169,30828,30956,31455,31478,32069,32147,32789,32831,33051,33686,35686,36629,36885,37857,38915,38968,39514,39912,20418,21843,22586,22865,23395,23622,24760,25106,26690,26800,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26856,28330,30028,30328,30926,31293,31995,32363,32380,35336,35489,35903,38542,40388,21476,21481,21578,21617,22266,22993,23396,23611,24235,25335,25911,25925,25970,26272,26543,27073,27837,30204,30352,30590,31295,32660,32771,32929,33167,33510,33533,33776,34241,34865,34996,35493,63747,36764,37678,38599,39015,39640,40723,21741,26011,26354,26767,31296,35895,40288,22256,22372,23825,26118,26801,26829,28414,29736,34974,39908,27752,63748,39592,20379,20844,20849,21151,23380,24037,24656,24685,25329,25511,25915,29657,31354,34467,36002,38799,20018,23521,25096,26524,29916,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31185,33747,35463,35506,36328,36942,37707,38982,24275,27112,34303,37101,63749,20896,23448,23532,24931,26874,27454,28748,29743,29912,31649,32592,33733,35264,36011,38364,39208,21038,24669,25324,36866,20362,20809,21281,22745,24291,26336,27960,28826,29378,29654,31568,33009,37979,21350,25499,32619,20054,20608,22602,22750,24618,24871,25296,27088,39745,23439,32024,32945,36703,20132,20689,21676,21932,23308,23968,24039,25898,25934,26657,27211,29409,30350,30703,32094,32761,33184,34126,34527,36611,36686,37066,39171,39509,39851,19992,20037,20061,20167,20465,20855,21246,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21312,21475,21477,21646,22036,22389,22434,23495,23943,24272,25084,25304,25937,26552,26601,27083,27472,27590,27628,27714,28317,28792,29399,29590,29699,30655,30697,31350,32127,32777,33276,33285,33290,33503,34914,35635,36092,36544,36881,37041,37476,37558,39378,39493,40169,40407,40860,22283,23616,33738,38816,38827,40628,21531,31384,32676,35033,36557,37089,22528,23624,25496,31391,23470,24339,31353,31406,33422,36524,20518,21048,21240,21367,22280,25331,25458,27402,28099,30519,21413,29527,34152,36470,38357,26426,27331,28528,35437,36556,39243,63750,26231,27512,36020,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,39740,63751,21483,22317,22862,25542,27131,29674,30789,31418,31429,31998,33909,35215,36211,36917,38312,21243,22343,30023,31584,33740,37406,63752,27224,20811,21067,21127,25119,26840,26997,38553,20677,21156,21220,25027,26020,26681,27135,29822,31563,33465,33771,35250,35641,36817,39241,63753,20170,22935,25810,26129,27278,29748,31105,31165,33449,34942,34943,35167,63754,37670,20235,21450,24613,25201,27762,32026,32102,20120,20834,30684,32943,20225,20238,20854,20864,21980,22120,22331,22522,22524,22804,22855,22931,23492,23696,23822,24049,24190,24524,25216,26071,26083,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26398,26399,26462,26827,26820,27231,27450,27683,27773,27778,28103,29592,29734,29738,29826,29859,30072,30079,30849,30959,31041,31047,31048,31098,31637,32e3,32186,32648,32774,32813,32908,35352,35663,35912,36215,37665,37668,39138,39249,39438,39439,39525,40594,32202,20342,21513,25326,26708,37329,21931,20794,63755,63756,23068,25062,63757,25295,25343,63758,63759,63760,63761,63762,63763,37027,63764,63765,63766,63767,63768,35582,63769,63770,63771,63772,26262,63773,29014,63774,63775,38627,63776,25423,25466,21335,63777,26511,26976,28275,63778,30007,63779,63780,63781,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32013,63782,63783,34930,22218,23064,63784,63785,63786,63787,63788,20035,63789,20839,22856,26608,32784,63790,22899,24180,25754,31178,24565,24684,25288,25467,23527,23511,21162,63791,22900,24361,24594,63792,63793,63794,29785,63795,63796,63797,63798,63799,63800,39377,63801,63802,63803,63804,63805,63806,63807,63808,63809,63810,63811,28611,63812,63813,33215,36786,24817,63814,63815,33126,63816,63817,23615,63818,63819,63820,63821,63822,63823,63824,63825,23273,35365,26491,32016,63826,63827,63828,63829,63830,63831,33021,63832,63833,23612,27877,21311,28346,22810,33590,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20025,20150,20294,21934,22296,22727,24406,26039,26086,27264,27573,28237,30701,31471,31774,32222,34507,34962,37170,37723,25787,28606,29562,30136,36948,21846,22349,25018,25812,26311,28129,28251,28525,28601,30192,32835,33213,34113,35203,35527,35674,37663,27795,30035,31572,36367,36957,21776,22530,22616,24162,25095,25758,26848,30070,31958,34739,40680,20195,22408,22382,22823,23565,23729,24118,24453,25140,25825,29619,33274,34955,36024,38538,40667,23429,24503,24755,20498,20992,21040,22294,22581,22615,23566,23648,23798,23947,24230,24466,24764,25361,25481,25623,26691,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26873,27330,28120,28193,28372,28644,29182,30428,30585,31153,31291,33796,35241,36077,36339,36424,36867,36884,36947,37117,37709,38518,38876,27602,28678,29272,29346,29544,30563,31167,31716,32411,35712,22697,24775,25958,26109,26302,27788,28958,29129,35930,38931,20077,31361,20189,20908,20941,21205,21516,24999,26481,26704,26847,27934,28540,30140,30643,31461,33012,33891,37509,20828,26007,26460,26515,30168,31431,33651,63834,35910,36887,38957,23663,33216,33434,36929,36975,37389,24471,23965,27225,29128,30331,31561,34276,35588,37159,39472,21895,25078,63835,30313,32645,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34367,34746,35064,37007,63836,27931,28889,29662,32097,33853,63837,37226,39409,63838,20098,21365,27396,27410,28734,29211,34349,40478,21068,36771,23888,25829,25900,27414,28651,31811,32412,34253,35172,35261,25289,33240,34847,24266,26391,28010,29436,29701,29807,34690,37086,20358,23821,24480,33802,20919,25504,30053,20142,20486,20841,20937,26753,27153,31918,31921,31975,33391,35538,36635,37327,20406,20791,21237,21570,24300,24942,25150,26053,27354,28670,31018,34268,34851,38317,39522,39530,40599,40654,21147,26310,27511,28701,31019,36706,38722,24976,25088,25891,28451,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29001,29833,32244,32879,34030,36646,36899,37706,20925,21015,21155,27916,28872,35010,24265,25986,27566,28610,31806,29557,20196,20278,22265,63839,23738,23994,24604,29618,31533,32666,32718,32838,36894,37428,38646,38728,38936,40801,20363,28583,31150,37300,38583,21214,63840,25736,25796,27347,28510,28696,29200,30439,32769,34310,34396,36335,36613,38706,39791,40442,40565,30860,31103,32160,33737,37636,40575,40595,35542,22751,24324,26407,28711,29903,31840,32894,20769,28712,29282,30922,36034,36058,36084,38647,20102,20698,23534,24278,26009,29134,30274,30637,32842,34044,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36988,39719,40845,22744,23105,23650,27155,28122,28431,30267,32047,32311,34078,35128,37860,38475,21129,26066,26611,27060,27969,28316,28687,29705,29792,30041,30244,30827,35628,39006,20845,25134,38520,20374,20523,23833,28138,32184,36650,24459,24900,26647,63841,38534,21202,32907,20956,20940,26974,31260,32190,33777,38517,20442,21033,21400,21519,21774,23653,24743,26446,26792,28012,29313,29432,29702,29827,63842,30178,31852,32633,32696,33673,35023,35041,37324,37328,38626,39881,21533,28542,29136,29848,34298,36522,38563,40023,40607,26519,28107,29747,33256,38678,30764,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31435,31520,31890,25705,29802,30194,30908,30952,39340,39764,40635,23518,24149,28448,33180,33707,37e3,19975,21325,23081,24018,24398,24930,25405,26217,26364,28415,28459,28771,30622,33836,34067,34875,36627,39237,39995,21788,25273,26411,27819,33545,35178,38778,20129,22916,24536,24537,26395,32178,32596,33426,33579,33725,36638,37017,22475,22969,23186,23504,26151,26522,26757,27599,29028,32629,36023,36067,36993,39749,33032,35978,38476,39488,40613,23391,27667,29467,30450,30431,33804,20906,35219,20813,20885,21193,26825,27796,30468,30496,32191,32236,38754,40629,28357,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,34065,20901,21517,21629,26126,26269,26919,28319,30399,30609,33559,33986,34719,37225,37528,40180,34946,20398,20882,21215,22982,24125,24917,25720,25721,26286,26576,27169,27597,27611,29279,29281,29761,30520,30683,32791,33468,33541,35584,35624,35980,26408,27792,29287,30446,30566,31302,40361,27519,27794,22818,26406,33945,21359,22675,22937,24287,25551,26164,26483,28218,29483,31447,33495,37672,21209,24043,25006,25035,25098,25287,25771,26080,26969,27494,27595,28961,29687,30045,32326,33310,33538,34154,35491,36031,38695,40289,22696,40664,20497,21006,21563,21839,25991,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27766,32010,32011,32862,34442,38272,38639,21247,27797,29289,21619,23194,23614,23883,24396,24494,26410,26806,26979,28220,28228,30473,31859,32654,34183,35598,36855,38753,40692,23735,24758,24845,25003,25935,26107,26108,27665,27887,29599,29641,32225,38292,23494,34588,35600,21085,21338,25293,25615,25778,26420,27192,27850,29632,29854,31636,31893,32283,33162,33334,34180,36843,38649,39361,20276,21322,21453,21467,25292,25644,25856,26001,27075,27886,28504,29677,30036,30242,30436,30460,30928,30971,31020,32070,33324,34784,36820,38930,39151,21187,25300,25765,28196,28497,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30332,36299,37297,37474,39662,39747,20515,20621,22346,22952,23592,24135,24439,25151,25918,26041,26049,26121,26507,27036,28354,30917,32033,32938,33152,33323,33459,33953,34444,35370,35607,37030,38450,40848,20493,20467,63843,22521,24472,25308,25490,26479,28227,28953,30403,32972,32986,35060,35061,35097,36064,36649,37197,38506,20271,20336,24091,26575,26658,30333,30334,39748,24161,27146,29033,29140,30058,63844,32321,34115,34281,39132,20240,31567,32624,38309,20961,24070,26805,27710,27726,27867,29359,31684,33539,27861,29754,20731,21128,22721,25816,27287,29863,30294,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,30887,34327,38370,38713,63845,21342,24321,35722,36776,36783,37002,21029,30629,40009,40712,19993,20482,20853,23643,24183,26142,26170,26564,26821,28851,29953,30149,31177,31453,36647,39200,39432,20445,22561,22577,23542,26222,27493,27921,28282,28541,29668,29995,33769,35036,35091,35676,36628,20239,20693,21264,21340,23443,24489,26381,31119,33145,33583,34068,35079,35206,36665,36667,39333,39954,26412,20086,20472,22857,23553,23791,23792,25447,26834,28925,29090,29739,32299,34028,34562,36898,37586,40179,19981,20184,20463,20613,21078,21103,21542,21648,22496,22827,23142,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23386,23413,23500,24220,63846,25206,25975,26023,28014,28325,29238,31526,31807,32566,33104,33105,33178,33344,33433,33705,35331,36e3,36070,36091,36212,36282,37096,37340,38428,38468,39385,40167,21271,20998,21545,22132,22707,22868,22894,24575,24996,25198,26128,27774,28954,30406,31881,31966,32027,33452,36033,38640,63847,20315,24343,24447,25282,23849,26379,26842,30844,32323,40300,19989,20633,21269,21290,21329,22915,23138,24199,24754,24970,25161,25209,26e3,26503,27047,27604,27606,27607,27608,27832,63848,29749,30202,30738,30865,31189,31192,31875,32203,32737,32933,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,33086,33218,33778,34586,35048,35513,35692,36027,37145,38750,39131,40763,22188,23338,24428,25996,27315,27567,27996,28657,28693,29277,29613,36007,36051,38971,24977,27703,32856,39425,20045,20107,20123,20181,20282,20284,20351,20447,20735,21490,21496,21766,21987,22235,22763,22882,23057,23531,23546,23556,24051,24107,24473,24605,25448,26012,26031,26614,26619,26797,27515,27801,27863,28195,28681,29509,30722,31038,31040,31072,31169,31721,32023,32114,32902,33293,33678,34001,34503,35039,35408,35422,35613,36060,36198,36781,37034,39164,39391,40605,21066,63849,26388,63850,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20632,21034,23665,25955,27733,29642,29987,30109,31639,33948,37240,38704,20087,25746,27578,29022,34217,19977,63851,26441,26862,28183,33439,34072,34923,25591,28545,37394,39087,19978,20663,20687,20767,21830,21930,22039,23360,23577,23776,24120,24202,24224,24258,24819,26705,27233,28248,29245,29248,29376,30456,31077,31665,32724,35059,35316,35443,35937,36062,38684,22622,29885,36093,21959,63852,31329,32034,33394,29298,29983,29989,63853,31513,22661,22779,23996,24207,24246,24464,24661,25234,25471,25933,26257,26329,26360,26646,26866,29312,29790,31598,32110,32214,32626,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32997,33298,34223,35199,35475,36893,37604,40653,40736,22805,22893,24109,24796,26132,26227,26512,27728,28101,28511,30707,30889,33990,37323,37675,20185,20682,20808,21892,23307,23459,25159,25982,26059,28210,29053,29697,29764,29831,29887,30316,31146,32218,32341,32680,33146,33203,33337,34330,34796,35445,36323,36984,37521,37925,39245,39854,21352,23633,26964,27844,27945,28203,33292,34203,35131,35373,35498,38634,40807,21089,26297,27570,32406,34814,36109,38275,38493,25885,28041,29166,63854,22478,22995,23468,24615,24826,25104,26143,26207,29481,29689,30427,30465,31596,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32854,32882,33125,35488,37266,19990,21218,27506,27927,31237,31545,32048,63855,36016,21484,22063,22609,23477,23567,23569,24034,25152,25475,25620,26157,26803,27836,28040,28335,28703,28836,29138,29990,30095,30094,30233,31505,31712,31787,32032,32057,34092,34157,34311,35380,36877,36961,37045,37559,38902,39479,20439,23660,26463,28049,31903,32396,35606,36118,36895,23403,24061,25613,33984,36956,39137,29575,23435,24730,26494,28126,35359,35494,36865,38924,21047,63856,28753,30862,37782,34928,37335,20462,21463,22013,22234,22402,22781,23234,23432,23723,23744,24101,24833,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,25101,25163,25480,25628,25910,25976,27193,27530,27700,27929,28465,29159,29417,29560,29703,29874,30246,30561,31168,31319,31466,31929,32143,32172,32353,32670,33065,33585,33936,34010,34282,34966,35504,35728,36664,36930,36995,37228,37526,37561,38539,38567,38568,38614,38656,38920,39318,39635,39706,21460,22654,22809,23408,23487,28113,28506,29087,29729,29881,32901,33789,24033,24455,24490,24642,26092,26642,26991,27219,27529,27957,28147,29667,30462,30636,31565,32020,33059,33308,33600,34036,34147,35426,35524,37255,37662,38918,39348,25100,34899,36848,37477,23815,23847,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,23913,29791,33181,34664,28629,25342,32722,35126,35186,19998,20056,20711,21213,21319,25215,26119,32361,34821,38494,20365,21273,22070,22987,23204,23608,23630,23629,24066,24337,24643,26045,26159,26178,26558,26612,29468,30690,31034,32709,33940,33997,35222,35430,35433,35553,35925,35962,22516,23508,24335,24687,25325,26893,27542,28252,29060,31698,34645,35672,36606,39135,39166,20280,20353,20449,21627,23072,23480,24892,26032,26216,29180,30003,31070,32051,33102,33251,33688,34218,34254,34563,35338,36523,36763,63857,36805,22833,23460,23526,24713,23529,23563,24515,27777,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63858,28145,28683,29978,33455,35574,20160,21313,63859,38617,27663,20126,20420,20818,21854,23077,23784,25105,29273,33469,33706,34558,34905,35357,38463,38597,39187,40201,40285,22538,23731,23997,24132,24801,24853,25569,27138,28197,37122,37716,38990,39952,40823,23433,23736,25353,26191,26696,30524,38593,38797,38996,39839,26017,35585,36555,38332,21813,23721,24022,24245,26263,30284,33780,38343,22739,25276,29390,40232,20208,22830,24591,26171,27523,31207,40230,21395,21696,22467,23830,24859,26326,28079,30861,33406,38552,38724,21380,25212,25494,28082,32266,33099,38989,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,27387,32588,40367,40474,20063,20539,20918,22812,24825,25590,26928,29242,32822,63860,37326,24369,63861,63862,32004,33509,33903,33979,34277,36493,63863,20335,63864,63865,22756,23363,24665,25562,25880,25965,26264,63866,26954,27171,27915,28673,29036,30162,30221,31155,31344,63867,32650,63868,35140,63869,35731,37312,38525,63870,39178,22276,24481,26044,28417,30208,31142,35486,39341,39770,40812,20740,25014,25233,27277,33222,20547,22576,24422,28937,35328,35578,23420,34326,20474,20796,22196,22852,25513,28153,23978,26989,20870,20104,20313,63871,63872,63873,22914,63874,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63875,27487,27741,63876,29877,30998,63877,33287,33349,33593,36671,36701,63878,39192,63879,63880,63881,20134,63882,22495,24441,26131,63883,63884,30123,32377,35695,63885,36870,39515,22181,22567,23032,23071,23476,63886,24310,63887,63888,25424,25403,63889,26941,27783,27839,28046,28051,28149,28436,63890,28895,28982,29017,63891,29123,29141,63892,30799,30831,63893,31605,32227,63894,32303,63895,34893,36575,63896,63897,63898,37467,63899,40182,63900,63901,63902,24709,28037,63903,29105,63904,63905,38321,21421,63906,63907,63908,26579,63909,28814,28976,29744,33398,33490,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63910,38331,39653,40573,26308,63911,29121,33865,63912,63913,22603,63914,63915,23992,24433,63916,26144,26254,27001,27054,27704,27891,28214,28481,28634,28699,28719,29008,29151,29552,63917,29787,63918,29908,30408,31310,32403,63919,63920,33521,35424,36814,63921,37704,63922,38681,63923,63924,20034,20522,63925,21e3,21473,26355,27757,28618,29450,30591,31330,33454,34269,34306,63926,35028,35427,35709,35947,63927,37555,63928,38675,38928,20116,20237,20425,20658,21320,21566,21555,21978,22626,22714,22887,23067,23524,24735,63929,25034,25942,26111,26212,26791,27738,28595,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28879,29100,29522,31613,34568,35492,39986,40711,23627,27779,29508,29577,37434,28331,29797,30239,31337,32277,34314,20800,22725,25793,29934,29973,30320,32705,37013,38605,39252,28198,29926,31401,31402,33253,34521,34680,35355,23113,23436,23451,26785,26880,28003,29609,29715,29740,30871,32233,32747,33048,33109,33694,35916,38446,38929,26352,24448,26106,26505,27754,29579,20525,23043,27498,30702,22806,23916,24013,29477,30031,63930,63931,20709,20985,22575,22829,22934,23002,23525,63932,63933,23970,25303,25622,25747,25854,63934,26332,63935,27208,63936,29183,29796,63937,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31368,31407,32327,32350,32768,33136,63938,34799,35201,35616,36953,63939,36992,39250,24958,27442,28020,32287,35109,36785,20433,20653,20887,21191,22471,22665,23481,24248,24898,27029,28044,28263,28342,29076,29794,29992,29996,32883,33592,33993,36362,37780,37854,63940,20110,20305,20598,20778,21448,21451,21491,23431,23507,23588,24858,24962,26100,29275,29591,29760,30402,31056,31121,31161,32006,32701,33419,34261,34398,36802,36935,37109,37354,38533,38632,38633,21206,24423,26093,26161,26671,29020,31286,37057,38922,20113,63941,27218,27550,28560,29065,32792,33464,34131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36939,38549,38642,38907,34074,39729,20112,29066,38596,20803,21407,21729,22291,22290,22435,23195,23236,23491,24616,24895,25588,27781,27961,28274,28304,29232,29503,29783,33489,34945,36677,36960,63942,38498,39e3,40219,26376,36234,37470,20301,20553,20702,21361,22285,22996,23041,23561,24944,26256,28205,29234,29771,32239,32963,33806,33894,34111,34655,34907,35096,35586,36949,38859,39759,20083,20369,20754,20842,63943,21807,21929,23418,23461,24188,24189,24254,24736,24799,24840,24841,25540,25912,26377,63944,26580,26586,63945,26977,26978,27833,27943,63946,28216,63947,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,28641,29494,29495,63948,29788,30001,63949,30290,63950,63951,32173,33278,33848,35029,35480,35547,35565,36400,36418,36938,36926,36986,37193,37321,37742,63952,63953,22537,63954,27603,32905,32946,63955,63956,20801,22891,23609,63957,63958,28516,29607,32996,36103,63959,37399,38287,63960,63961,63962,63963,32895,25102,28700,32104,34701,63964,22432,24681,24903,27575,35518,37504,38577,20057,21535,28139,34093,38512,38899,39150,25558,27875,37009,20957,25033,33210,40441,20381,20506,20736,23452,24847,25087,25836,26885,27589,30097,30691,32681,33380,34191,34811,34915,35516,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,35696,37291,20108,20197,20234,63965,63966,22839,23016,63967,24050,24347,24411,24609,63968,63969,63970,63971,29246,29669,63972,30064,30157,63973,31227,63974,32780,32819,32900,33505,33617,63975,63976,36029,36019,36999,63977,63978,39156,39180,63979,63980,28727,30410,32714,32716,32764,35610,20154,20161,20995,21360,63981,21693,22240,23035,23493,24341,24525,28270,63982,63983,32106,33589,63984,34451,35469,63985,38765,38775,63986,63987,19968,20314,20350,22777,26085,28322,36920,37808,39353,20219,22764,22922,23001,24641,63988,63989,31252,63990,33615,36035,20837,21316,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,63991,63992,63993,20173,21097,23381,33471,20180,21050,21672,22985,23039,23376,23383,23388,24675,24904,28363,28825,29038,29574,29943,30133,30913,32043,32773,33258,33576,34071,34249,35566,36039,38604,20316,21242,22204,26027,26152,28796,28856,29237,32189,33421,37196,38592,40306,23409,26855,27544,28538,30430,23697,26283,28507,31668,31786,34870,38620,19976,20183,21280,22580,22715,22767,22892,23559,24115,24196,24373,25484,26290,26454,27167,27299,27404,28479,29254,63994,29520,29835,31456,31911,33144,33247,33255,33674,33900,34083,34196,34255,35037,36115,37292,38263,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38556,20877,21705,22312,23472,25165,26448,26685,26771,28221,28371,28797,32289,35009,36001,36617,40779,40782,29229,31631,35533,37658,20295,20302,20786,21632,22992,24213,25269,26485,26990,27159,27822,28186,29401,29482,30141,31672,32053,33511,33785,33879,34295,35419,36015,36487,36889,37048,38606,40799,21219,21514,23265,23490,25688,25973,28404,29380,63995,30340,31309,31515,31821,32318,32735,33659,35627,36042,36196,36321,36447,36842,36857,36969,37841,20291,20346,20659,20840,20856,21069,21098,22625,22652,22880,23560,23637,24283,24731,25136,26643,27583,27656,28593,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29006,29728,3e4,30008,30033,30322,31564,31627,31661,31686,32399,35438,36670,36681,37439,37523,37666,37931,38651,39002,39019,39198,20999,25130,25240,27993,30308,31434,31680,32118,21344,23742,24215,28472,28857,31896,38673,39822,40670,25509,25722,34678,19969,20117,20141,20572,20597,21576,22979,23450,24128,24237,24311,24449,24773,25402,25919,25972,26060,26230,26232,26622,26984,27273,27491,27712,28096,28136,28191,28254,28702,28833,29582,29693,30010,30555,30855,31118,31243,31357,31934,32142,33351,35330,35562,35998,37165,37194,37336,37478,37580,37664,38662,38742,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38748,38914,40718,21046,21137,21884,22564,24093,24351,24716,25552,26799,28639,31085,31532,33229,34234,35069,35576,36420,37261,38500,38555,38717,38988,40778,20430,20806,20939,21161,22066,24340,24427,25514,25805,26089,26177,26362,26361,26397,26781,26839,27133,28437,28526,29031,29157,29226,29866,30522,31062,31066,31199,31264,31381,31895,31967,32068,32368,32903,34299,34468,35412,35519,36249,36481,36896,36973,37347,38459,38613,40165,26063,31751,36275,37827,23384,23562,21330,25305,29469,20519,23447,24478,24752,24939,26837,28121,29742,31278,32066,32156,32305,33131,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36394,36405,37758,37912,20304,22352,24038,24231,25387,32618,20027,20303,20367,20570,23005,32964,21610,21608,22014,22863,23449,24030,24282,26205,26417,26609,26666,27880,27954,28234,28557,28855,29664,30087,31820,32002,32044,32162,33311,34523,35387,35461,36208,36490,36659,36913,37198,37202,37956,39376,31481,31909,20426,20737,20934,22472,23535,23803,26201,27197,27994,28310,28652,28940,30063,31459,34850,36897,36981,38603,39423,33537,20013,20210,34886,37325,21373,27355,26987,27713,33914,22686,24974,26366,25327,28893,29969,30151,32338,33976,35657,36104,20043,21482,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21675,22320,22336,24535,25345,25351,25711,25903,26088,26234,26525,26547,27490,27744,27802,28460,30693,30757,31049,31063,32025,32930,33026,33267,33437,33463,34584,35468,63996,36100,36286,36978,30452,31257,31287,32340,32887,21767,21972,22645,25391,25634,26185,26187,26733,27035,27524,27941,28337,29645,29800,29857,30043,30137,30433,30494,30603,31206,32265,32285,33275,34095,34967,35386,36049,36587,36784,36914,37805,38499,38515,38663,20356,21489,23018,23241,24089,26702,29894,30142,31209,31378,33187,34541,36074,36300,36845,26015,26389,63997,22519,28503,32221,36655,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37878,38598,24501,25074,28548,19988,20376,20511,21449,21983,23919,24046,27425,27492,30923,31642,63998,36425,36554,36974,25417,25662,30528,31364,37679,38015,40810,25776,28591,29158,29864,29914,31428,31762,32386,31922,32408,35738,36106,38013,39184,39244,21049,23519,25830,26413,32046,20717,21443,22649,24920,24921,25082,26028,31449,35730,35734,20489,20513,21109,21809,23100,24288,24432,24884,25950,26124,26166,26274,27085,28356,28466,29462,30241,31379,33081,33369,33750,33980,20661,22512,23488,23528,24425,25505,30758,32181,33756,34081,37319,37365,20874,26613,31574,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36012,20932,22971,24765,34389,20508,63999,21076,23610,24957,25114,25299,25842,26021,28364,30240,33034,36448,38495,38587,20191,21315,21912,22825,24029,25797,27849,28154,29588,31359,33307,34214,36068,36368,36983,37351,38369,38433,38854,20984,21746,21894,24505,25764,28552,32180,36639,36685,37941,20681,23574,27838,28155,29979,30651,31805,31844,35449,35522,22558,22974,24086,25463,29266,30090,30571,35548,36028,36626,24307,26228,28152,32893,33729,35531,38737,39894,64e3,21059,26367,28053,28399,32224,35558,36910,36958,39636,21021,21119,21736,24980,25220,25307,26786,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,26898,26970,27189,28818,28966,30813,30977,30990,31186,31245,32918,33400,33493,33609,34121,35970,36229,37218,37259,37294,20419,22225,29165,30679,34560,35320,23544,24534,26449,37032,21474,22618,23541,24740,24961,25696,32317,32880,34085,37507,25774,20652,23828,26368,22684,25277,25512,26894,27e3,27166,28267,30394,31179,33467,33833,35535,36264,36861,37138,37195,37276,37648,37656,37786,38619,39478,39949,19985,30044,31069,31482,31569,31689,32302,33988,36441,36468,36600,36880,26149,26943,29763,20986,26414,40668,20805,24544,27798,34802,34909,34935,24756,33205,33795,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,36101,21462,21561,22068,23094,23601,28810,32736,32858,33030,33261,36259,37257,39519,40434,20596,20164,21408,24827,28204,23652,20360,20516,21988,23769,24159,24677,26772,27835,28100,29118,30164,30196,30305,31258,31305,32199,32251,32622,33268,34473,36636,38601,39347,40786,21063,21189,39149,35242,19971,26578,28422,20405,23522,26517,27784,28024,29723,30759,37341,37756,34756,31204,31281,24555,20182,21668,21822,22702,22949,24816,25171,25302,26422,26965,33333,38464,39345,39389,20524,21331,21828,22396,64001,25176,64002,25826,26219,26589,28609,28655,29730,29752,35351,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,37944,21585,22022,22374,24392,24986,27470,28760,28845,32187,35477,22890,33067,25506,30472,32829,36010,22612,25645,27067,23445,24081,28271,64003,34153,20812,21488,22826,24608,24907,27526,27760,27888,31518,32974,33492,36294,37040,39089,64004,25799,28580,25745,25860,20814,21520,22303,35342,24927,26742,64005,30171,31570,32113,36890,22534,27084,33151,35114,36864,38969,20600,22871,22956,25237,36879,39722,24925,29305,38358,22369,23110,24052,25226,25773,25850,26487,27874,27966,29228,29750,30772,32631,33453,36315,38935,21028,22338,26495,29256,29923,36009,36774,37393,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,38442,20843,21485,25420,20329,21764,24726,25943,27803,28031,29260,29437,31255,35207,35997,24429,28558,28921,33192,24846,20415,20559,25153,29255,31687,32232,32745,36941,38829,39449,36022,22378,24179,26544,33805,35413,21536,23318,24163,24290,24330,25987,32954,34109,38281,38491,20296,21253,21261,21263,21638,21754,22275,24067,24598,25243,25265,25429,64006,27873,28006,30129,30770,32990,33071,33502,33889,33970,34957,35090,36875,37610,39165,39825,24133,26292,26333,28689,29190,64007,20469,21117,24426,24915,26451,27161,28418,29922,31080,34920,35961,39111,39108,39491,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,21697,31263,26963,35575,35914,39080,39342,24444,25259,30130,30382,34987,36991,38466,21305,24380,24517,27852,29644,30050,30091,31558,33534,39325,20047,36924,19979,20309,21414,22799,24264,26160,27827,29781,33655,34662,36032,36944,38686,39957,22737,23416,34384,35604,40372,23506,24680,24717,26097,27735,28450,28579,28698,32597,32752,38289,38290,38480,38867,21106,36676,20989,21547,21688,21859,21898,27323,28085,32216,33382,37532,38519,40569,21512,21704,30418,34532,38308,38356,38492,20130,20233,23022,23270,24055,24658,25239,26477,26689,27782,28207,32568,32923,33322,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,64008,64009,38917,20133,20565,21683,22419,22874,23401,23475,25032,26999,28023,28707,34809,35299,35442,35559,36994,39405,39608,21182,26680,20502,24184,26447,33607,34892,20139,21521,22190,29670,37141,38911,39177,39255,39321,22099,22687,34395,35377,25010,27382,29563,36562,27463,38570,39511,22869,29184,36203,38761,20436,23796,24358,25080,26203,27883,28843,29572,29625,29694,30505,30541,32067,32098,32291,33335,34898,64010,36066,37449,39023,23377,31348,34880,38913,23244,20448,21332,22846,23805,25406,28025,29433,33029,33031,33698,37583,38960,20136,20804,21009,22411,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24418,27842,28366,28677,28752,28847,29074,29673,29801,33610,34722,34913,36872,37026,37795,39336,20846,24407,24800,24935,26291,34137,36426,37295,38795,20046,20114,21628,22741,22778,22909,23733,24359,25142,25160,26122,26215,27627,28009,28111,28246,28408,28564,28640,28649,28765,29392,29733,29786,29920,30355,31068,31946,32286,32993,33446,33899,33983,34382,34399,34676,35703,35946,37804,38912,39013,24785,25110,37239,23130,26127,28151,28222,29759,39746,24573,24794,31503,21700,24344,27742,27859,27946,28888,32005,34425,35340,40251,21270,21644,23301,27194,28779,30069,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,31117,31166,33457,33775,35441,35649,36008,38772,64011,25844,25899,30906,30907,31339,20024,21914,22864,23462,24187,24739,25563,27489,26213,26707,28185,29029,29872,32008,36996,39529,39973,27963,28369,29502,35905,38346,20976,24140,24488,24653,24822,24880,24908,26179,26180,27045,27841,28255,28361,28514,29004,29852,30343,31681,31783,33618,34647,36945,38541,40643,21295,22238,24315,24458,24674,24724,25079,26214,26371,27292,28142,28590,28784,29546,32362,33214,33588,34516,35496,36036,21123,29554,23446,27243,37892,21742,22150,23389,25928,25989,26313,26783,28045,28102,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,29243,32948,37237,39501,20399,20505,21402,21518,21564,21897,21957,24127,24460,26429,29030,29661,36869,21211,21235,22628,22734,28932,29071,29179,34224,35347,26248,34216,21927,26244,29002,33841,21321,21913,27585,24409,24509,25582,26249,28999,35569,36637,40638,20241,25658,28875,30054,34407,24676,35662,40440,20807,20982,21256,27958,33016,40657,26133,27427,28824,30165,21507,23673,32007,35350,27424,27453,27462,21560,24688,27965,32725,33288,20694,20958,21916,22123,22221,23020,23305,24076,24985,24984,25137,26206,26342,29081,29113,29114,29351,31143,31232,32690,35440,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],gb18030:[19970,19972,19973,19974,19983,19986,19991,19999,2e4,20001,20003,20006,20009,20014,20015,20017,20019,20021,20023,20028,20032,20033,20034,20036,20038,20042,20049,20053,20055,20058,20059,20066,20067,20068,20069,20071,20072,20074,20075,20076,20077,20078,20079,20082,20084,20085,20086,20087,20088,20089,20090,20091,20092,20093,20095,20096,20097,20098,20099,20100,20101,20103,20106,20112,20118,20119,20121,20124,20125,20126,20131,20138,20143,20144,20145,20148,20150,20151,20152,20153,20156,20157,20158,20168,20172,20175,20176,20178,20186,20187,20188,20192,20194,20198,20199,20201,20205,20206,20207,20209,20212,20216,20217,20218,20220,20222,20224,20226,20227,20228,20229,20230,20231,20232,20235,20236,20242,20243,20244,20245,20246,20252,20253,20257,20259,20264,20265,20268,20269,20270,20273,20275,20277,20279,20281,20283,20286,20287,20288,20289,20290,20292,20293,20295,20296,20297,20298,20299,20300,20306,20308,20310,20321,20322,20326,20328,20330,20331,20333,20334,20337,20338,20341,20343,20344,20345,20346,20349,20352,20353,20354,20357,20358,20359,20362,20364,20366,20368,20370,20371,20373,20374,20376,20377,20378,20380,20382,20383,20385,20386,20388,20395,20397,20400,20401,20402,20403,20404,20406,20407,20408,20409,20410,20411,20412,20413,20414,20416,20417,20418,20422,20423,20424,20425,20427,20428,20429,20434,20435,20436,20437,20438,20441,20443,20448,20450,20452,20453,20455,20459,20460,20464,20466,20468,20469,20470,20471,20473,20475,20476,20477,20479,20480,20481,20482,20483,20484,20485,20486,20487,20488,20489,20490,20491,20494,20496,20497,20499,20501,20502,20503,20507,20509,20510,20512,20514,20515,20516,20519,20523,20527,20528,20529,20530,20531,20532,20533,20534,20535,20536,20537,20539,20541,20543,20544,20545,20546,20548,20549,20550,20553,20554,20555,20557,20560,20561,20562,20563,20564,20566,20567,20568,20569,20571,20573,20574,20575,20576,20577,20578,20579,20580,20582,20583,20584,20585,20586,20587,20589,20590,20591,20592,20593,20594,20595,20596,20597,20600,20601,20602,20604,20605,20609,20610,20611,20612,20614,20615,20617,20618,20619,20620,20622,20623,20624,20625,20626,20627,20628,20629,20630,20631,20632,20633,20634,20635,20636,20637,20638,20639,20640,20641,20642,20644,20646,20650,20651,20653,20654,20655,20656,20657,20659,20660,20661,20662,20663,20664,20665,20668,20669,20670,20671,20672,20673,20674,20675,20676,20677,20678,20679,20680,20681,20682,20683,20684,20685,20686,20688,20689,20690,20691,20692,20693,20695,20696,20697,20699,20700,20701,20702,20703,20704,20705,20706,20707,20708,20709,20712,20713,20714,20715,20719,20720,20721,20722,20724,20726,20727,20728,20729,20730,20732,20733,20734,20735,20736,20737,20738,20739,20740,20741,20744,20745,20746,20748,20749,20750,20751,20752,20753,20755,20756,20757,20758,20759,20760,20761,20762,20763,20764,20765,20766,20767,20768,20770,20771,20772,20773,20774,20775,20776,20777,20778,20779,20780,20781,20782,20783,20784,20785,20786,20787,20788,20789,20790,20791,20792,20793,20794,20795,20796,20797,20798,20802,20807,20810,20812,20814,20815,20816,20818,20819,20823,20824,20825,20827,20829,20830,20831,20832,20833,20835,20836,20838,20839,20841,20842,20847,20850,20858,20862,20863,20867,20868,20870,20871,20874,20875,20878,20879,20880,20881,20883,20884,20888,20890,20893,20894,20895,20897,20899,20902,20903,20904,20905,20906,20909,20910,20916,20920,20921,20922,20926,20927,20929,20930,20931,20933,20936,20938,20941,20942,20944,20946,20947,20948,20949,20950,20951,20952,20953,20954,20956,20958,20959,20962,20963,20965,20966,20967,20968,20969,20970,20972,20974,20977,20978,20980,20983,20990,20996,20997,21001,21003,21004,21007,21008,21011,21012,21013,21020,21022,21023,21025,21026,21027,21029,21030,21031,21034,21036,21039,21041,21042,21044,21045,21052,21054,21060,21061,21062,21063,21064,21065,21067,21070,21071,21074,21075,21077,21079,21080,21081,21082,21083,21085,21087,21088,21090,21091,21092,21094,21096,21099,21100,21101,21102,21104,21105,21107,21108,21109,21110,21111,21112,21113,21114,21115,21116,21118,21120,21123,21124,21125,21126,21127,21129,21130,21131,21132,21133,21134,21135,21137,21138,21140,21141,21142,21143,21144,21145,21146,21148,21156,21157,21158,21159,21166,21167,21168,21172,21173,21174,21175,21176,21177,21178,21179,21180,21181,21184,21185,21186,21188,21189,21190,21192,21194,21196,21197,21198,21199,21201,21203,21204,21205,21207,21209,21210,21211,21212,21213,21214,21216,21217,21218,21219,21221,21222,21223,21224,21225,21226,21227,21228,21229,21230,21231,21233,21234,21235,21236,21237,21238,21239,21240,21243,21244,21245,21249,21250,21251,21252,21255,21257,21258,21259,21260,21262,21265,21266,21267,21268,21272,21275,21276,21278,21279,21282,21284,21285,21287,21288,21289,21291,21292,21293,21295,21296,21297,21298,21299,21300,21301,21302,21303,21304,21308,21309,21312,21314,21316,21318,21323,21324,21325,21328,21332,21336,21337,21339,21341,21349,21352,21354,21356,21357,21362,21366,21369,21371,21372,21373,21374,21376,21377,21379,21383,21384,21386,21390,21391,21392,21393,21394,21395,21396,21398,21399,21401,21403,21404,21406,21408,21409,21412,21415,21418,21419,21420,21421,21423,21424,21425,21426,21427,21428,21429,21431,21432,21433,21434,21436,21437,21438,21440,21443,21444,21445,21446,21447,21454,21455,21456,21458,21459,21461,21466,21468,21469,21470,21473,21474,21479,21492,21498,21502,21503,21504,21506,21509,21511,21515,21524,21528,21529,21530,21532,21538,21540,21541,21546,21552,21555,21558,21559,21562,21565,21567,21569,21570,21572,21573,21575,21577,21580,21581,21582,21583,21585,21594,21597,21598,21599,21600,21601,21603,21605,21607,21609,21610,21611,21612,21613,21614,21615,21616,21620,21625,21626,21630,21631,21633,21635,21637,21639,21640,21641,21642,21645,21649,21651,21655,21656,21660,21662,21663,21664,21665,21666,21669,21678,21680,21682,21685,21686,21687,21689,21690,21692,21694,21699,21701,21706,21707,21718,21720,21723,21728,21729,21730,21731,21732,21739,21740,21743,21744,21745,21748,21749,21750,21751,21752,21753,21755,21758,21760,21762,21763,21764,21765,21768,21770,21771,21772,21773,21774,21778,21779,21781,21782,21783,21784,21785,21786,21788,21789,21790,21791,21793,21797,21798,21800,21801,21803,21805,21810,21812,21813,21814,21816,21817,21818,21819,21821,21824,21826,21829,21831,21832,21835,21836,21837,21838,21839,21841,21842,21843,21844,21847,21848,21849,21850,21851,21853,21854,21855,21856,21858,21859,21864,21865,21867,21871,21872,21873,21874,21875,21876,21881,21882,21885,21887,21893,21894,21900,21901,21902,21904,21906,21907,21909,21910,21911,21914,21915,21918,21920,21921,21922,21923,21924,21925,21926,21928,21929,21930,21931,21932,21933,21934,21935,21936,21938,21940,21942,21944,21946,21948,21951,21952,21953,21954,21955,21958,21959,21960,21962,21963,21966,21967,21968,21973,21975,21976,21977,21978,21979,21982,21984,21986,21991,21993,21997,21998,22e3,22001,22004,22006,22008,22009,22010,22011,22012,22015,22018,22019,22020,22021,22022,22023,22026,22027,22029,22032,22033,22034,22035,22036,22037,22038,22039,22041,22042,22044,22045,22048,22049,22050,22053,22054,22056,22057,22058,22059,22062,22063,22064,22067,22069,22071,22072,22074,22076,22077,22078,22080,22081,22082,22083,22084,22085,22086,22087,22088,22089,22090,22091,22095,22096,22097,22098,22099,22101,22102,22106,22107,22109,22110,22111,22112,22113,22115,22117,22118,22119,22125,22126,22127,22128,22130,22131,22132,22133,22135,22136,22137,22138,22141,22142,22143,22144,22145,22146,22147,22148,22151,22152,22153,22154,22155,22156,22157,22160,22161,22162,22164,22165,22166,22167,22168,22169,22170,22171,22172,22173,22174,22175,22176,22177,22178,22180,22181,22182,22183,22184,22185,22186,22187,22188,22189,22190,22192,22193,22194,22195,22196,22197,22198,22200,22201,22202,22203,22205,22206,22207,22208,22209,22210,22211,22212,22213,22214,22215,22216,22217,22219,22220,22221,22222,22223,22224,22225,22226,22227,22229,22230,22232,22233,22236,22243,22245,22246,22247,22248,22249,22250,22252,22254,22255,22258,22259,22262,22263,22264,22267,22268,22272,22273,22274,22277,22279,22283,22284,22285,22286,22287,22288,22289,22290,22291,22292,22293,22294,22295,22296,22297,22298,22299,22301,22302,22304,22305,22306,22308,22309,22310,22311,22315,22321,22322,22324,22325,22326,22327,22328,22332,22333,22335,22337,22339,22340,22341,22342,22344,22345,22347,22354,22355,22356,22357,22358,22360,22361,22370,22371,22373,22375,22380,22382,22384,22385,22386,22388,22389,22392,22393,22394,22397,22398,22399,22400,22401,22407,22408,22409,22410,22413,22414,22415,22416,22417,22420,22421,22422,22423,22424,22425,22426,22428,22429,22430,22431,22437,22440,22442,22444,22447,22448,22449,22451,22453,22454,22455,22457,22458,22459,22460,22461,22462,22463,22464,22465,22468,22469,22470,22471,22472,22473,22474,22476,22477,22480,22481,22483,22486,22487,22491,22492,22494,22497,22498,22499,22501,22502,22503,22504,22505,22506,22507,22508,22510,22512,22513,22514,22515,22517,22518,22519,22523,22524,22526,22527,22529,22531,22532,22533,22536,22537,22538,22540,22542,22543,22544,22546,22547,22548,22550,22551,22552,22554,22555,22556,22557,22559,22562,22563,22565,22566,22567,22568,22569,22571,22572,22573,22574,22575,22577,22578,22579,22580,22582,22583,22584,22585,22586,22587,22588,22589,22590,22591,22592,22593,22594,22595,22597,22598,22599,22600,22601,22602,22603,22606,22607,22608,22610,22611,22613,22614,22615,22617,22618,22619,22620,22621,22623,22624,22625,22626,22627,22628,22630,22631,22632,22633,22634,22637,22638,22639,22640,22641,22642,22643,22644,22645,22646,22647,22648,22649,22650,22651,22652,22653,22655,22658,22660,22662,22663,22664,22666,22667,22668,22669,22670,22671,22672,22673,22676,22677,22678,22679,22680,22683,22684,22685,22688,22689,22690,22691,22692,22693,22694,22695,22698,22699,22700,22701,22702,22703,22704,22705,22706,22707,22708,22709,22710,22711,22712,22713,22714,22715,22717,22718,22719,22720,22722,22723,22724,22726,22727,22728,22729,22730,22731,22732,22733,22734,22735,22736,22738,22739,22740,22742,22743,22744,22745,22746,22747,22748,22749,22750,22751,22752,22753,22754,22755,22757,22758,22759,22760,22761,22762,22765,22767,22769,22770,22772,22773,22775,22776,22778,22779,22780,22781,22782,22783,22784,22785,22787,22789,22790,22792,22793,22794,22795,22796,22798,22800,22801,22802,22803,22807,22808,22811,22813,22814,22816,22817,22818,22819,22822,22824,22828,22832,22834,22835,22837,22838,22843,22845,22846,22847,22848,22851,22853,22854,22858,22860,22861,22864,22866,22867,22873,22875,22876,22877,22878,22879,22881,22883,22884,22886,22887,22888,22889,22890,22891,22892,22893,22894,22895,22896,22897,22898,22901,22903,22906,22907,22908,22910,22911,22912,22917,22921,22923,22924,22926,22927,22928,22929,22932,22933,22936,22938,22939,22940,22941,22943,22944,22945,22946,22950,22951,22956,22957,22960,22961,22963,22964,22965,22966,22967,22968,22970,22972,22973,22975,22976,22977,22978,22979,22980,22981,22983,22984,22985,22988,22989,22990,22991,22997,22998,23001,23003,23006,23007,23008,23009,23010,23012,23014,23015,23017,23018,23019,23021,23022,23023,23024,23025,23026,23027,23028,23029,23030,23031,23032,23034,23036,23037,23038,23040,23042,23050,23051,23053,23054,23055,23056,23058,23060,23061,23062,23063,23065,23066,23067,23069,23070,23073,23074,23076,23078,23079,23080,23082,23083,23084,23085,23086,23087,23088,23091,23093,23095,23096,23097,23098,23099,23101,23102,23103,23105,23106,23107,23108,23109,23111,23112,23115,23116,23117,23118,23119,23120,23121,23122,23123,23124,23126,23127,23128,23129,23131,23132,23133,23134,23135,23136,23137,23139,23140,23141,23142,23144,23145,23147,23148,23149,23150,23151,23152,23153,23154,23155,23160,23161,23163,23164,23165,23166,23168,23169,23170,23171,23172,23173,23174,23175,23176,23177,23178,23179,23180,23181,23182,23183,23184,23185,23187,23188,23189,23190,23191,23192,23193,23196,23197,23198,23199,23200,23201,23202,23203,23204,23205,23206,23207,23208,23209,23211,23212,23213,23214,23215,23216,23217,23220,23222,23223,23225,23226,23227,23228,23229,23231,23232,23235,23236,23237,23238,23239,23240,23242,23243,23245,23246,23247,23248,23249,23251,23253,23255,23257,23258,23259,23261,23262,23263,23266,23268,23269,23271,23272,23274,23276,23277,23278,23279,23280,23282,23283,23284,23285,23286,23287,23288,23289,23290,23291,23292,23293,23294,23295,23296,23297,23298,23299,23300,23301,23302,23303,23304,23306,23307,23308,23309,23310,23311,23312,23313,23314,23315,23316,23317,23320,23321,23322,23323,23324,23325,23326,23327,23328,23329,23330,23331,23332,23333,23334,23335,23336,23337,23338,23339,23340,23341,23342,23343,23344,23345,23347,23349,23350,23352,23353,23354,23355,23356,23357,23358,23359,23361,23362,23363,23364,23365,23366,23367,23368,23369,23370,23371,23372,23373,23374,23375,23378,23382,23390,23392,23393,23399,23400,23403,23405,23406,23407,23410,23412,23414,23415,23416,23417,23419,23420,23422,23423,23426,23430,23434,23437,23438,23440,23441,23442,23444,23446,23455,23463,23464,23465,23468,23469,23470,23471,23473,23474,23479,23482,23483,23484,23488,23489,23491,23496,23497,23498,23499,23501,23502,23503,23505,23508,23509,23510,23511,23512,23513,23514,23515,23516,23520,23522,23523,23526,23527,23529,23530,23531,23532,23533,23535,23537,23538,23539,23540,23541,23542,23543,23549,23550,23552,23554,23555,23557,23559,23560,23563,23564,23565,23566,23568,23570,23571,23575,23577,23579,23582,23583,23584,23585,23587,23590,23592,23593,23594,23595,23597,23598,23599,23600,23602,23603,23605,23606,23607,23619,23620,23622,23623,23628,23629,23634,23635,23636,23638,23639,23640,23642,23643,23644,23645,23647,23650,23652,23655,23656,23657,23658,23659,23660,23661,23664,23666,23667,23668,23669,23670,23671,23672,23675,23676,23677,23678,23680,23683,23684,23685,23686,23687,23689,23690,23691,23694,23695,23698,23699,23701,23709,23710,23711,23712,23713,23716,23717,23718,23719,23720,23722,23726,23727,23728,23730,23732,23734,23737,23738,23739,23740,23742,23744,23746,23747,23749,23750,23751,23752,23753,23754,23756,23757,23758,23759,23760,23761,23763,23764,23765,23766,23767,23768,23770,23771,23772,23773,23774,23775,23776,23778,23779,23783,23785,23787,23788,23790,23791,23793,23794,23795,23796,23797,23798,23799,23800,23801,23802,23804,23805,23806,23807,23808,23809,23812,23813,23816,23817,23818,23819,23820,23821,23823,23824,23825,23826,23827,23829,23831,23832,23833,23834,23836,23837,23839,23840,23841,23842,23843,23845,23848,23850,23851,23852,23855,23856,23857,23858,23859,23861,23862,23863,23864,23865,23866,23867,23868,23871,23872,23873,23874,23875,23876,23877,23878,23880,23881,23885,23886,23887,23888,23889,23890,23891,23892,23893,23894,23895,23897,23898,23900,23902,23903,23904,23905,23906,23907,23908,23909,23910,23911,23912,23914,23917,23918,23920,23921,23922,23923,23925,23926,23927,23928,23929,23930,23931,23932,23933,23934,23935,23936,23937,23939,23940,23941,23942,23943,23944,23945,23946,23947,23948,23949,23950,23951,23952,23953,23954,23955,23956,23957,23958,23959,23960,23962,23963,23964,23966,23967,23968,23969,23970,23971,23972,23973,23974,23975,23976,23977,23978,23979,23980,23981,23982,23983,23984,23985,23986,23987,23988,23989,23990,23992,23993,23994,23995,23996,23997,23998,23999,24e3,24001,24002,24003,24004,24006,24007,24008,24009,24010,24011,24012,24014,24015,24016,24017,24018,24019,24020,24021,24022,24023,24024,24025,24026,24028,24031,24032,24035,24036,24042,24044,24045,24048,24053,24054,24056,24057,24058,24059,24060,24063,24064,24068,24071,24073,24074,24075,24077,24078,24082,24083,24087,24094,24095,24096,24097,24098,24099,24100,24101,24104,24105,24106,24107,24108,24111,24112,24114,24115,24116,24117,24118,24121,24122,24126,24127,24128,24129,24131,24134,24135,24136,24137,24138,24139,24141,24142,24143,24144,24145,24146,24147,24150,24151,24152,24153,24154,24156,24157,24159,24160,24163,24164,24165,24166,24167,24168,24169,24170,24171,24172,24173,24174,24175,24176,24177,24181,24183,24185,24190,24193,24194,24195,24197,24200,24201,24204,24205,24206,24210,24216,24219,24221,24225,24226,24227,24228,24232,24233,24234,24235,24236,24238,24239,24240,24241,24242,24244,24250,24251,24252,24253,24255,24256,24257,24258,24259,24260,24261,24262,24263,24264,24267,24268,24269,24270,24271,24272,24276,24277,24279,24280,24281,24282,24284,24285,24286,24287,24288,24289,24290,24291,24292,24293,24294,24295,24297,24299,24300,24301,24302,24303,24304,24305,24306,24307,24309,24312,24313,24315,24316,24317,24325,24326,24327,24329,24332,24333,24334,24336,24338,24340,24342,24345,24346,24348,24349,24350,24353,24354,24355,24356,24360,24363,24364,24366,24368,24370,24371,24372,24373,24374,24375,24376,24379,24381,24382,24383,24385,24386,24387,24388,24389,24390,24391,24392,24393,24394,24395,24396,24397,24398,24399,24401,24404,24409,24410,24411,24412,24414,24415,24416,24419,24421,24423,24424,24427,24430,24431,24434,24436,24437,24438,24440,24442,24445,24446,24447,24451,24454,24461,24462,24463,24465,24467,24468,24470,24474,24475,24477,24478,24479,24480,24482,24483,24484,24485,24486,24487,24489,24491,24492,24495,24496,24497,24498,24499,24500,24502,24504,24505,24506,24507,24510,24511,24512,24513,24514,24519,24520,24522,24523,24526,24531,24532,24533,24538,24539,24540,24542,24543,24546,24547,24549,24550,24552,24553,24556,24559,24560,24562,24563,24564,24566,24567,24569,24570,24572,24583,24584,24585,24587,24588,24592,24593,24595,24599,24600,24602,24606,24607,24610,24611,24612,24620,24621,24622,24624,24625,24626,24627,24628,24630,24631,24632,24633,24634,24637,24638,24640,24644,24645,24646,24647,24648,24649,24650,24652,24654,24655,24657,24659,24660,24662,24663,24664,24667,24668,24670,24671,24672,24673,24677,24678,24686,24689,24690,24692,24693,24695,24702,24704,24705,24706,24709,24710,24711,24712,24714,24715,24718,24719,24720,24721,24723,24725,24727,24728,24729,24732,24734,24737,24738,24740,24741,24743,24745,24746,24750,24752,24755,24757,24758,24759,24761,24762,24765,24766,24767,24768,24769,24770,24771,24772,24775,24776,24777,24780,24781,24782,24783,24784,24786,24787,24788,24790,24791,24793,24795,24798,24801,24802,24803,24804,24805,24810,24817,24818,24821,24823,24824,24827,24828,24829,24830,24831,24834,24835,24836,24837,24839,24842,24843,24844,24848,24849,24850,24851,24852,24854,24855,24856,24857,24859,24860,24861,24862,24865,24866,24869,24872,24873,24874,24876,24877,24878,24879,24880,24881,24882,24883,24884,24885,24886,24887,24888,24889,24890,24891,24892,24893,24894,24896,24897,24898,24899,24900,24901,24902,24903,24905,24907,24909,24911,24912,24914,24915,24916,24918,24919,24920,24921,24922,24923,24924,24926,24927,24928,24929,24931,24932,24933,24934,24937,24938,24939,24940,24941,24942,24943,24945,24946,24947,24948,24950,24952,24953,24954,24955,24956,24957,24958,24959,24960,24961,24962,24963,24964,24965,24966,24967,24968,24969,24970,24972,24973,24975,24976,24977,24978,24979,24981,24982,24983,24984,24985,24986,24987,24988,24990,24991,24992,24993,24994,24995,24996,24997,24998,25002,25003,25005,25006,25007,25008,25009,25010,25011,25012,25013,25014,25016,25017,25018,25019,25020,25021,25023,25024,25025,25027,25028,25029,25030,25031,25033,25036,25037,25038,25039,25040,25043,25045,25046,25047,25048,25049,25050,25051,25052,25053,25054,25055,25056,25057,25058,25059,25060,25061,25063,25064,25065,25066,25067,25068,25069,25070,25071,25072,25073,25074,25075,25076,25078,25079,25080,25081,25082,25083,25084,25085,25086,25088,25089,25090,25091,25092,25093,25095,25097,25107,25108,25113,25116,25117,25118,25120,25123,25126,25127,25128,25129,25131,25133,25135,25136,25137,25138,25141,25142,25144,25145,25146,25147,25148,25154,25156,25157,25158,25162,25167,25168,25173,25174,25175,25177,25178,25180,25181,25182,25183,25184,25185,25186,25188,25189,25192,25201,25202,25204,25205,25207,25208,25210,25211,25213,25217,25218,25219,25221,25222,25223,25224,25227,25228,25229,25230,25231,25232,25236,25241,25244,25245,25246,25251,25254,25255,25257,25258,25261,25262,25263,25264,25266,25267,25268,25270,25271,25272,25274,25278,25280,25281,25283,25291,25295,25297,25301,25309,25310,25312,25313,25316,25322,25323,25328,25330,25333,25336,25337,25338,25339,25344,25347,25348,25349,25350,25354,25355,25356,25357,25359,25360,25362,25363,25364,25365,25367,25368,25369,25372,25382,25383,25385,25388,25389,25390,25392,25393,25395,25396,25397,25398,25399,25400,25403,25404,25406,25407,25408,25409,25412,25415,25416,25418,25425,25426,25427,25428,25430,25431,25432,25433,25434,25435,25436,25437,25440,25444,25445,25446,25448,25450,25451,25452,25455,25456,25458,25459,25460,25461,25464,25465,25468,25469,25470,25471,25473,25475,25476,25477,25478,25483,25485,25489,25491,25492,25493,25495,25497,25498,25499,25500,25501,25502,25503,25505,25508,25510,25515,25519,25521,25522,25525,25526,25529,25531,25533,25535,25536,25537,25538,25539,25541,25543,25544,25546,25547,25548,25553,25555,25556,25557,25559,25560,25561,25562,25563,25564,25565,25567,25570,25572,25573,25574,25575,25576,25579,25580,25582,25583,25584,25585,25587,25589,25591,25593,25594,25595,25596,25598,25603,25604,25606,25607,25608,25609,25610,25613,25614,25617,25618,25621,25622,25623,25624,25625,25626,25629,25631,25634,25635,25636,25637,25639,25640,25641,25643,25646,25647,25648,25649,25650,25651,25653,25654,25655,25656,25657,25659,25660,25662,25664,25666,25667,25673,25675,25676,25677,25678,25679,25680,25681,25683,25685,25686,25687,25689,25690,25691,25692,25693,25695,25696,25697,25698,25699,25700,25701,25702,25704,25706,25707,25708,25710,25711,25712,25713,25714,25715,25716,25717,25718,25719,25723,25724,25725,25726,25727,25728,25729,25731,25734,25736,25737,25738,25739,25740,25741,25742,25743,25744,25747,25748,25751,25752,25754,25755,25756,25757,25759,25760,25761,25762,25763,25765,25766,25767,25768,25770,25771,25775,25777,25778,25779,25780,25782,25785,25787,25789,25790,25791,25793,25795,25796,25798,25799,25800,25801,25802,25803,25804,25807,25809,25811,25812,25813,25814,25817,25818,25819,25820,25821,25823,25824,25825,25827,25829,25831,25832,25833,25834,25835,25836,25837,25838,25839,25840,25841,25842,25843,25844,25845,25846,25847,25848,25849,25850,25851,25852,25853,25854,25855,25857,25858,25859,25860,25861,25862,25863,25864,25866,25867,25868,25869,25870,25871,25872,25873,25875,25876,25877,25878,25879,25881,25882,25883,25884,25885,25886,25887,25888,25889,25890,25891,25892,25894,25895,25896,25897,25898,25900,25901,25904,25905,25906,25907,25911,25914,25916,25917,25920,25921,25922,25923,25924,25926,25927,25930,25931,25933,25934,25936,25938,25939,25940,25943,25944,25946,25948,25951,25952,25953,25956,25957,25959,25960,25961,25962,25965,25966,25967,25969,25971,25973,25974,25976,25977,25978,25979,25980,25981,25982,25983,25984,25985,25986,25987,25988,25989,25990,25992,25993,25994,25997,25998,25999,26002,26004,26005,26006,26008,26010,26013,26014,26016,26018,26019,26022,26024,26026,26028,26030,26033,26034,26035,26036,26037,26038,26039,26040,26042,26043,26046,26047,26048,26050,26055,26056,26057,26058,26061,26064,26065,26067,26068,26069,26072,26073,26074,26075,26076,26077,26078,26079,26081,26083,26084,26090,26091,26098,26099,26100,26101,26104,26105,26107,26108,26109,26110,26111,26113,26116,26117,26119,26120,26121,26123,26125,26128,26129,26130,26134,26135,26136,26138,26139,26140,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26162,26163,26167,26168,26169,26170,26171,26173,26175,26176,26178,26180,26181,26182,26183,26184,26185,26186,26189,26190,26192,26193,26200,26201,26203,26204,26205,26206,26208,26210,26211,26213,26215,26217,26218,26219,26220,26221,26225,26226,26227,26229,26232,26233,26235,26236,26237,26239,26240,26241,26243,26245,26246,26248,26249,26250,26251,26253,26254,26255,26256,26258,26259,26260,26261,26264,26265,26266,26267,26268,26270,26271,26272,26273,26274,26275,26276,26277,26278,26281,26282,26283,26284,26285,26287,26288,26289,26290,26291,26293,26294,26295,26296,26298,26299,26300,26301,26303,26304,26305,26306,26307,26308,26309,26310,26311,26312,26313,26314,26315,26316,26317,26318,26319,26320,26321,26322,26323,26324,26325,26326,26327,26328,26330,26334,26335,26336,26337,26338,26339,26340,26341,26343,26344,26346,26347,26348,26349,26350,26351,26353,26357,26358,26360,26362,26363,26365,26369,26370,26371,26372,26373,26374,26375,26380,26382,26383,26385,26386,26387,26390,26392,26393,26394,26396,26398,26400,26401,26402,26403,26404,26405,26407,26409,26414,26416,26418,26419,26422,26423,26424,26425,26427,26428,26430,26431,26433,26436,26437,26439,26442,26443,26445,26450,26452,26453,26455,26456,26457,26458,26459,26461,26466,26467,26468,26470,26471,26475,26476,26478,26481,26484,26486,26488,26489,26490,26491,26493,26496,26498,26499,26501,26502,26504,26506,26508,26509,26510,26511,26513,26514,26515,26516,26518,26521,26523,26527,26528,26529,26532,26534,26537,26540,26542,26545,26546,26548,26553,26554,26555,26556,26557,26558,26559,26560,26562,26565,26566,26567,26568,26569,26570,26571,26572,26573,26574,26581,26582,26583,26587,26591,26593,26595,26596,26598,26599,26600,26602,26603,26605,26606,26610,26613,26614,26615,26616,26617,26618,26619,26620,26622,26625,26626,26627,26628,26630,26637,26640,26642,26644,26645,26648,26649,26650,26651,26652,26654,26655,26656,26658,26659,26660,26661,26662,26663,26664,26667,26668,26669,26670,26671,26672,26673,26676,26677,26678,26682,26683,26687,26695,26699,26701,26703,26706,26710,26711,26712,26713,26714,26715,26716,26717,26718,26719,26730,26732,26733,26734,26735,26736,26737,26738,26739,26741,26744,26745,26746,26747,26748,26749,26750,26751,26752,26754,26756,26759,26760,26761,26762,26763,26764,26765,26766,26768,26769,26770,26772,26773,26774,26776,26777,26778,26779,26780,26781,26782,26783,26784,26785,26787,26788,26789,26793,26794,26795,26796,26798,26801,26802,26804,26806,26807,26808,26809,26810,26811,26812,26813,26814,26815,26817,26819,26820,26821,26822,26823,26824,26826,26828,26830,26831,26832,26833,26835,26836,26838,26839,26841,26843,26844,26845,26846,26847,26849,26850,26852,26853,26854,26855,26856,26857,26858,26859,26860,26861,26863,26866,26867,26868,26870,26871,26872,26875,26877,26878,26879,26880,26882,26883,26884,26886,26887,26888,26889,26890,26892,26895,26897,26899,26900,26901,26902,26903,26904,26905,26906,26907,26908,26909,26910,26913,26914,26915,26917,26918,26919,26920,26921,26922,26923,26924,26926,26927,26929,26930,26931,26933,26934,26935,26936,26938,26939,26940,26942,26944,26945,26947,26948,26949,26950,26951,26952,26953,26954,26955,26956,26957,26958,26959,26960,26961,26962,26963,26965,26966,26968,26969,26971,26972,26975,26977,26978,26980,26981,26983,26984,26985,26986,26988,26989,26991,26992,26994,26995,26996,26997,26998,27002,27003,27005,27006,27007,27009,27011,27013,27018,27019,27020,27022,27023,27024,27025,27026,27027,27030,27031,27033,27034,27037,27038,27039,27040,27041,27042,27043,27044,27045,27046,27049,27050,27052,27054,27055,27056,27058,27059,27061,27062,27064,27065,27066,27068,27069,27070,27071,27072,27074,27075,27076,27077,27078,27079,27080,27081,27083,27085,27087,27089,27090,27091,27093,27094,27095,27096,27097,27098,27100,27101,27102,27105,27106,27107,27108,27109,27110,27111,27112,27113,27114,27115,27116,27118,27119,27120,27121,27123,27124,27125,27126,27127,27128,27129,27130,27131,27132,27134,27136,27137,27138,27139,27140,27141,27142,27143,27144,27145,27147,27148,27149,27150,27151,27152,27153,27154,27155,27156,27157,27158,27161,27162,27163,27164,27165,27166,27168,27170,27171,27172,27173,27174,27175,27177,27179,27180,27181,27182,27184,27186,27187,27188,27190,27191,27192,27193,27194,27195,27196,27199,27200,27201,27202,27203,27205,27206,27208,27209,27210,27211,27212,27213,27214,27215,27217,27218,27219,27220,27221,27222,27223,27226,27228,27229,27230,27231,27232,27234,27235,27236,27238,27239,27240,27241,27242,27243,27244,27245,27246,27247,27248,27250,27251,27252,27253,27254,27255,27256,27258,27259,27261,27262,27263,27265,27266,27267,27269,27270,27271,27272,27273,27274,27275,27276,27277,27279,27282,27283,27284,27285,27286,27288,27289,27290,27291,27292,27293,27294,27295,27297,27298,27299,27300,27301,27302,27303,27304,27306,27309,27310,27311,27312,27313,27314,27315,27316,27317,27318,27319,27320,27321,27322,27323,27324,27325,27326,27327,27328,27329,27330,27331,27332,27333,27334,27335,27336,27337,27338,27339,27340,27341,27342,27343,27344,27345,27346,27347,27348,27349,27350,27351,27352,27353,27354,27355,27356,27357,27358,27359,27360,27361,27362,27363,27364,27365,27366,27367,27368,27369,27370,27371,27372,27373,27374,27375,27376,27377,27378,27379,27380,27381,27382,27383,27384,27385,27386,27387,27388,27389,27390,27391,27392,27393,27394,27395,27396,27397,27398,27399,27400,27401,27402,27403,27404,27405,27406,27407,27408,27409,27410,27411,27412,27413,27414,27415,27416,27417,27418,27419,27420,27421,27422,27423,27429,27430,27432,27433,27434,27435,27436,27437,27438,27439,27440,27441,27443,27444,27445,27446,27448,27451,27452,27453,27455,27456,27457,27458,27460,27461,27464,27466,27467,27469,27470,27471,27472,27473,27474,27475,27476,27477,27478,27479,27480,27482,27483,27484,27485,27486,27487,27488,27489,27496,27497,27499,27500,27501,27502,27503,27504,27505,27506,27507,27508,27509,27510,27511,27512,27514,27517,27518,27519,27520,27525,27528,27532,27534,27535,27536,27537,27540,27541,27543,27544,27545,27548,27549,27550,27551,27552,27554,27555,27556,27557,27558,27559,27560,27561,27563,27564,27565,27566,27567,27568,27569,27570,27574,27576,27577,27578,27579,27580,27581,27582,27584,27587,27588,27590,27591,27592,27593,27594,27596,27598,27600,27601,27608,27610,27612,27613,27614,27615,27616,27618,27619,27620,27621,27622,27623,27624,27625,27628,27629,27630,27632,27633,27634,27636,27638,27639,27640,27642,27643,27644,27646,27647,27648,27649,27650,27651,27652,27656,27657,27658,27659,27660,27662,27666,27671,27676,27677,27678,27680,27683,27685,27691,27692,27693,27697,27699,27702,27703,27705,27706,27707,27708,27710,27711,27715,27716,27717,27720,27723,27724,27725,27726,27727,27729,27730,27731,27734,27736,27737,27738,27746,27747,27749,27750,27751,27755,27756,27757,27758,27759,27761,27763,27765,27767,27768,27770,27771,27772,27775,27776,27780,27783,27786,27787,27789,27790,27793,27794,27797,27798,27799,27800,27802,27804,27805,27806,27808,27810,27816,27820,27823,27824,27828,27829,27830,27831,27834,27840,27841,27842,27843,27846,27847,27848,27851,27853,27854,27855,27857,27858,27864,27865,27866,27868,27869,27871,27876,27878,27879,27881,27884,27885,27890,27892,27897,27903,27904,27906,27907,27909,27910,27912,27913,27914,27917,27919,27920,27921,27923,27924,27925,27926,27928,27932,27933,27935,27936,27937,27938,27939,27940,27942,27944,27945,27948,27949,27951,27952,27956,27958,27959,27960,27962,27967,27968,27970,27972,27977,27980,27984,27989,27990,27991,27992,27995,27997,27999,28001,28002,28004,28005,28007,28008,28011,28012,28013,28016,28017,28018,28019,28021,28022,28025,28026,28027,28029,28030,28031,28032,28033,28035,28036,28038,28039,28042,28043,28045,28047,28048,28050,28054,28055,28056,28057,28058,28060,28066,28069,28076,28077,28080,28081,28083,28084,28086,28087,28089,28090,28091,28092,28093,28094,28097,28098,28099,28104,28105,28106,28109,28110,28111,28112,28114,28115,28116,28117,28119,28122,28123,28124,28127,28130,28131,28133,28135,28136,28137,28138,28141,28143,28144,28146,28148,28149,28150,28152,28154,28157,28158,28159,28160,28161,28162,28163,28164,28166,28167,28168,28169,28171,28175,28178,28179,28181,28184,28185,28187,28188,28190,28191,28194,28198,28199,28200,28202,28204,28206,28208,28209,28211,28213,28214,28215,28217,28219,28220,28221,28222,28223,28224,28225,28226,28229,28230,28231,28232,28233,28234,28235,28236,28239,28240,28241,28242,28245,28247,28249,28250,28252,28253,28254,28256,28257,28258,28259,28260,28261,28262,28263,28264,28265,28266,28268,28269,28271,28272,28273,28274,28275,28276,28277,28278,28279,28280,28281,28282,28283,28284,28285,28288,28289,28290,28292,28295,28296,28298,28299,28300,28301,28302,28305,28306,28307,28308,28309,28310,28311,28313,28314,28315,28317,28318,28320,28321,28323,28324,28326,28328,28329,28331,28332,28333,28334,28336,28339,28341,28344,28345,28348,28350,28351,28352,28355,28356,28357,28358,28360,28361,28362,28364,28365,28366,28368,28370,28374,28376,28377,28379,28380,28381,28387,28391,28394,28395,28396,28397,28398,28399,28400,28401,28402,28403,28405,28406,28407,28408,28410,28411,28412,28413,28414,28415,28416,28417,28419,28420,28421,28423,28424,28426,28427,28428,28429,28430,28432,28433,28434,28438,28439,28440,28441,28442,28443,28444,28445,28446,28447,28449,28450,28451,28453,28454,28455,28456,28460,28462,28464,28466,28468,28469,28471,28472,28473,28474,28475,28476,28477,28479,28480,28481,28482,28483,28484,28485,28488,28489,28490,28492,28494,28495,28496,28497,28498,28499,28500,28501,28502,28503,28505,28506,28507,28509,28511,28512,28513,28515,28516,28517,28519,28520,28521,28522,28523,28524,28527,28528,28529,28531,28533,28534,28535,28537,28539,28541,28542,28543,28544,28545,28546,28547,28549,28550,28551,28554,28555,28559,28560,28561,28562,28563,28564,28565,28566,28567,28568,28569,28570,28571,28573,28574,28575,28576,28578,28579,28580,28581,28582,28584,28585,28586,28587,28588,28589,28590,28591,28592,28593,28594,28596,28597,28599,28600,28602,28603,28604,28605,28606,28607,28609,28611,28612,28613,28614,28615,28616,28618,28619,28620,28621,28622,28623,28624,28627,28628,28629,28630,28631,28632,28633,28634,28635,28636,28637,28639,28642,28643,28644,28645,28646,28647,28648,28649,28650,28651,28652,28653,28656,28657,28658,28659,28660,28661,28662,28663,28664,28665,28666,28667,28668,28669,28670,28671,28672,28673,28674,28675,28676,28677,28678,28679,28680,28681,28682,28683,28684,28685,28686,28687,28688,28690,28691,28692,28693,28694,28695,28696,28697,28700,28701,28702,28703,28704,28705,28706,28708,28709,28710,28711,28712,28713,28714,28715,28716,28717,28718,28719,28720,28721,28722,28723,28724,28726,28727,28728,28730,28731,28732,28733,28734,28735,28736,28737,28738,28739,28740,28741,28742,28743,28744,28745,28746,28747,28749,28750,28752,28753,28754,28755,28756,28757,28758,28759,28760,28761,28762,28763,28764,28765,28767,28768,28769,28770,28771,28772,28773,28774,28775,28776,28777,28778,28782,28785,28786,28787,28788,28791,28793,28794,28795,28797,28801,28802,28803,28804,28806,28807,28808,28811,28812,28813,28815,28816,28817,28819,28823,28824,28826,28827,28830,28831,28832,28833,28834,28835,28836,28837,28838,28839,28840,28841,28842,28848,28850,28852,28853,28854,28858,28862,28863,28868,28869,28870,28871,28873,28875,28876,28877,28878,28879,28880,28881,28882,28883,28884,28885,28886,28887,28890,28892,28893,28894,28896,28897,28898,28899,28901,28906,28910,28912,28913,28914,28915,28916,28917,28918,28920,28922,28923,28924,28926,28927,28928,28929,28930,28931,28932,28933,28934,28935,28936,28939,28940,28941,28942,28943,28945,28946,28948,28951,28955,28956,28957,28958,28959,28960,28961,28962,28963,28964,28965,28967,28968,28969,28970,28971,28972,28973,28974,28978,28979,28980,28981,28983,28984,28985,28986,28987,28988,28989,28990,28991,28992,28993,28994,28995,28996,28998,28999,29e3,29001,29003,29005,29007,29008,29009,29010,29011,29012,29013,29014,29015,29016,29017,29018,29019,29021,29023,29024,29025,29026,29027,29029,29033,29034,29035,29036,29037,29039,29040,29041,29044,29045,29046,29047,29049,29051,29052,29054,29055,29056,29057,29058,29059,29061,29062,29063,29064,29065,29067,29068,29069,29070,29072,29073,29074,29075,29077,29078,29079,29082,29083,29084,29085,29086,29089,29090,29091,29092,29093,29094,29095,29097,29098,29099,29101,29102,29103,29104,29105,29106,29108,29110,29111,29112,29114,29115,29116,29117,29118,29119,29120,29121,29122,29124,29125,29126,29127,29128,29129,29130,29131,29132,29133,29135,29136,29137,29138,29139,29142,29143,29144,29145,29146,29147,29148,29149,29150,29151,29153,29154,29155,29156,29158,29160,29161,29162,29163,29164,29165,29167,29168,29169,29170,29171,29172,29173,29174,29175,29176,29178,29179,29180,29181,29182,29183,29184,29185,29186,29187,29188,29189,29191,29192,29193,29194,29195,29196,29197,29198,29199,29200,29201,29202,29203,29204,29205,29206,29207,29208,29209,29210,29211,29212,29214,29215,29216,29217,29218,29219,29220,29221,29222,29223,29225,29227,29229,29230,29231,29234,29235,29236,29242,29244,29246,29248,29249,29250,29251,29252,29253,29254,29257,29258,29259,29262,29263,29264,29265,29267,29268,29269,29271,29272,29274,29276,29278,29280,29283,29284,29285,29288,29290,29291,29292,29293,29296,29297,29299,29300,29302,29303,29304,29307,29308,29309,29314,29315,29317,29318,29319,29320,29321,29324,29326,29328,29329,29331,29332,29333,29334,29335,29336,29337,29338,29339,29340,29341,29342,29344,29345,29346,29347,29348,29349,29350,29351,29352,29353,29354,29355,29358,29361,29362,29363,29365,29370,29371,29372,29373,29374,29375,29376,29381,29382,29383,29385,29386,29387,29388,29391,29393,29395,29396,29397,29398,29400,29402,29403,58566,58567,58568,58569,58570,58571,58572,58573,58574,58575,58576,58577,58578,58579,58580,58581,58582,58583,58584,58585,58586,58587,58588,58589,58590,58591,58592,58593,58594,58595,58596,58597,58598,58599,58600,58601,58602,58603,58604,58605,58606,58607,58608,58609,58610,58611,58612,58613,58614,58615,58616,58617,58618,58619,58620,58621,58622,58623,58624,58625,58626,58627,58628,58629,58630,58631,58632,58633,58634,58635,58636,58637,58638,58639,58640,58641,58642,58643,58644,58645,58646,58647,58648,58649,58650,58651,58652,58653,58654,58655,58656,58657,58658,58659,58660,58661,12288,12289,12290,183,713,711,168,12291,12293,8212,65374,8214,8230,8216,8217,8220,8221,12308,12309,12296,12297,12298,12299,12300,12301,12302,12303,12310,12311,12304,12305,177,215,247,8758,8743,8744,8721,8719,8746,8745,8712,8759,8730,8869,8741,8736,8978,8857,8747,8750,8801,8780,8776,8765,8733,8800,8814,8815,8804,8805,8734,8757,8756,9794,9792,176,8242,8243,8451,65284,164,65504,65505,8240,167,8470,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,8251,8594,8592,8593,8595,12307,58662,58663,58664,58665,58666,58667,58668,58669,58670,58671,58672,58673,58674,58675,58676,58677,58678,58679,58680,58681,58682,58683,58684,58685,58686,58687,58688,58689,58690,58691,58692,58693,58694,58695,58696,58697,58698,58699,58700,58701,58702,58703,58704,58705,58706,58707,58708,58709,58710,58711,58712,58713,58714,58715,58716,58717,58718,58719,58720,58721,58722,58723,58724,58725,58726,58727,58728,58729,58730,58731,58732,58733,58734,58735,58736,58737,58738,58739,58740,58741,58742,58743,58744,58745,58746,58747,58748,58749,58750,58751,58752,58753,58754,58755,58756,58757,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,59238,59239,59240,59241,59242,59243,9352,9353,9354,9355,9356,9357,9358,9359,9360,9361,9362,9363,9364,9365,9366,9367,9368,9369,9370,9371,9332,9333,9334,9335,9336,9337,9338,9339,9340,9341,9342,9343,9344,9345,9346,9347,9348,9349,9350,9351,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,8364,59245,12832,12833,12834,12835,12836,12837,12838,12839,12840,12841,59246,59247,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,8554,8555,59248,59249,58758,58759,58760,58761,58762,58763,58764,58765,58766,58767,58768,58769,58770,58771,58772,58773,58774,58775,58776,58777,58778,58779,58780,58781,58782,58783,58784,58785,58786,58787,58788,58789,58790,58791,58792,58793,58794,58795,58796,58797,58798,58799,58800,58801,58802,58803,58804,58805,58806,58807,58808,58809,58810,58811,58812,58813,58814,58815,58816,58817,58818,58819,58820,58821,58822,58823,58824,58825,58826,58827,58828,58829,58830,58831,58832,58833,58834,58835,58836,58837,58838,58839,58840,58841,58842,58843,58844,58845,58846,58847,58848,58849,58850,58851,58852,12288,65281,65282,65283,65509,65285,65286,65287,65288,65289,65290,65291,65292,65293,65294,65295,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,65306,65307,65308,65309,65310,65311,65312,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,65339,65340,65341,65342,65343,65344,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,65371,65372,65373,65507,58854,58855,58856,58857,58858,58859,58860,58861,58862,58863,58864,58865,58866,58867,58868,58869,58870,58871,58872,58873,58874,58875,58876,58877,58878,58879,58880,58881,58882,58883,58884,58885,58886,58887,58888,58889,58890,58891,58892,58893,58894,58895,58896,58897,58898,58899,58900,58901,58902,58903,58904,58905,58906,58907,58908,58909,58910,58911,58912,58913,58914,58915,58916,58917,58918,58919,58920,58921,58922,58923,58924,58925,58926,58927,58928,58929,58930,58931,58932,58933,58934,58935,58936,58937,58938,58939,58940,58941,58942,58943,58944,58945,58946,58947,58948,58949,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,59250,59251,59252,59253,59254,59255,59256,59257,59258,59259,59260,58950,58951,58952,58953,58954,58955,58956,58957,58958,58959,58960,58961,58962,58963,58964,58965,58966,58967,58968,58969,58970,58971,58972,58973,58974,58975,58976,58977,58978,58979,58980,58981,58982,58983,58984,58985,58986,58987,58988,58989,58990,58991,58992,58993,58994,58995,58996,58997,58998,58999,59e3,59001,59002,59003,59004,59005,59006,59007,59008,59009,59010,59011,59012,59013,59014,59015,59016,59017,59018,59019,59020,59021,59022,59023,59024,59025,59026,59027,59028,59029,59030,59031,59032,59033,59034,59035,59036,59037,59038,59039,59040,59041,59042,59043,59044,59045,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,59261,59262,59263,59264,59265,59266,59267,59268,59046,59047,59048,59049,59050,59051,59052,59053,59054,59055,59056,59057,59058,59059,59060,59061,59062,59063,59064,59065,59066,59067,59068,59069,59070,59071,59072,59073,59074,59075,59076,59077,59078,59079,59080,59081,59082,59083,59084,59085,59086,59087,59088,59089,59090,59091,59092,59093,59094,59095,59096,59097,59098,59099,59100,59101,59102,59103,59104,59105,59106,59107,59108,59109,59110,59111,59112,59113,59114,59115,59116,59117,59118,59119,59120,59121,59122,59123,59124,59125,59126,59127,59128,59129,59130,59131,59132,59133,59134,59135,59136,59137,59138,59139,59140,59141,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,59269,59270,59271,59272,59273,59274,59275,59276,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,59277,59278,59279,59280,59281,59282,59283,65077,65078,65081,65082,65087,65088,65085,65086,65089,65090,65091,65092,59284,59285,65083,65084,65079,65080,65073,59286,65075,65076,59287,59288,59289,59290,59291,59292,59293,59294,59295,59142,59143,59144,59145,59146,59147,59148,59149,59150,59151,59152,59153,59154,59155,59156,59157,59158,59159,59160,59161,59162,59163,59164,59165,59166,59167,59168,59169,59170,59171,59172,59173,59174,59175,59176,59177,59178,59179,59180,59181,59182,59183,59184,59185,59186,59187,59188,59189,59190,59191,59192,59193,59194,59195,59196,59197,59198,59199,59200,59201,59202,59203,59204,59205,59206,59207,59208,59209,59210,59211,59212,59213,59214,59215,59216,59217,59218,59219,59220,59221,59222,59223,59224,59225,59226,59227,59228,59229,59230,59231,59232,59233,59234,59235,59236,59237,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,59296,59297,59298,59299,59300,59301,59302,59303,59304,59305,59306,59307,59308,59309,59310,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,59311,59312,59313,59314,59315,59316,59317,59318,59319,59320,59321,59322,59323,714,715,729,8211,8213,8229,8245,8453,8457,8598,8599,8600,8601,8725,8735,8739,8786,8806,8807,8895,9552,9553,9554,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,9581,9582,9583,9584,9585,9586,9587,9601,9602,9603,9604,9605,9606,9607,9608,9609,9610,9611,9612,9613,9614,9615,9619,9620,9621,9660,9661,9698,9699,9700,9701,9737,8853,12306,12317,12318,59324,59325,59326,59327,59328,59329,59330,59331,59332,59333,59334,257,225,462,224,275,233,283,232,299,237,464,236,333,243,466,242,363,250,468,249,470,472,474,476,252,234,593,7743,324,328,505,609,59337,59338,59339,59340,12549,12550,12551,12552,12553,12554,12555,12556,12557,12558,12559,12560,12561,12562,12563,12564,12565,12566,12567,12568,12569,12570,12571,12572,12573,12574,12575,12576,12577,12578,12579,12580,12581,12582,12583,12584,12585,59341,59342,59343,59344,59345,59346,59347,59348,59349,59350,59351,59352,59353,59354,59355,59356,59357,59358,59359,59360,59361,12321,12322,12323,12324,12325,12326,12327,12328,12329,12963,13198,13199,13212,13213,13214,13217,13252,13262,13265,13266,13269,65072,65506,65508,59362,8481,12849,59363,8208,59364,59365,59366,12540,12443,12444,12541,12542,12294,12445,12446,65097,65098,65099,65100,65101,65102,65103,65104,65105,65106,65108,65109,65110,65111,65113,65114,65115,65116,65117,65118,65119,65120,65121,65122,65123,65124,65125,65126,65128,65129,65130,65131,12350,12272,12273,12274,12275,12276,12277,12278,12279,12280,12281,12282,12283,12295,59380,59381,59382,59383,59384,59385,59386,59387,59388,59389,59390,59391,59392,9472,9473,9474,9475,9476,9477,9478,9479,9480,9481,9482,9483,9484,9485,9486,9487,9488,9489,9490,9491,9492,9493,9494,9495,9496,9497,9498,9499,9500,9501,9502,9503,9504,9505,9506,9507,9508,9509,9510,9511,9512,9513,9514,9515,9516,9517,9518,9519,9520,9521,9522,9523,9524,9525,9526,9527,9528,9529,9530,9531,9532,9533,9534,9535,9536,9537,9538,9539,9540,9541,9542,9543,9544,9545,9546,9547,59393,59394,59395,59396,59397,59398,59399,59400,59401,59402,59403,59404,59405,59406,59407,29404,29405,29407,29410,29411,29412,29413,29414,29415,29418,29419,29429,29430,29433,29437,29438,29439,29440,29442,29444,29445,29446,29447,29448,29449,29451,29452,29453,29455,29456,29457,29458,29460,29464,29465,29466,29471,29472,29475,29476,29478,29479,29480,29485,29487,29488,29490,29491,29493,29494,29498,29499,29500,29501,29504,29505,29506,29507,29508,29509,29510,29511,29512,29513,29514,29515,29516,29518,29519,29521,29523,29524,29525,29526,29528,29529,29530,29531,29532,29533,29534,29535,29537,29538,29539,29540,29541,29542,29543,29544,29545,29546,29547,29550,29552,29553,57344,57345,57346,57347,57348,57349,57350,57351,57352,57353,57354,57355,57356,57357,57358,57359,57360,57361,57362,57363,57364,57365,57366,57367,57368,57369,57370,57371,57372,57373,57374,57375,57376,57377,57378,57379,57380,57381,57382,57383,57384,57385,57386,57387,57388,57389,57390,57391,57392,57393,57394,57395,57396,57397,57398,57399,57400,57401,57402,57403,57404,57405,57406,57407,57408,57409,57410,57411,57412,57413,57414,57415,57416,57417,57418,57419,57420,57421,57422,57423,57424,57425,57426,57427,57428,57429,57430,57431,57432,57433,57434,57435,57436,57437,29554,29555,29556,29557,29558,29559,29560,29561,29562,29563,29564,29565,29567,29568,29569,29570,29571,29573,29574,29576,29578,29580,29581,29583,29584,29586,29587,29588,29589,29591,29592,29593,29594,29596,29597,29598,29600,29601,29603,29604,29605,29606,29607,29608,29610,29612,29613,29617,29620,29621,29622,29624,29625,29628,29629,29630,29631,29633,29635,29636,29637,29638,29639,29643,29644,29646,29650,29651,29652,29653,29654,29655,29656,29658,29659,29660,29661,29663,29665,29666,29667,29668,29670,29672,29674,29675,29676,29678,29679,29680,29681,29683,29684,29685,29686,29687,57438,57439,57440,57441,57442,57443,57444,57445,57446,57447,57448,57449,57450,57451,57452,57453,57454,57455,57456,57457,57458,57459,57460,57461,57462,57463,57464,57465,57466,57467,57468,57469,57470,57471,57472,57473,57474,57475,57476,57477,57478,57479,57480,57481,57482,57483,57484,57485,57486,57487,57488,57489,57490,57491,57492,57493,57494,57495,57496,57497,57498,57499,57500,57501,57502,57503,57504,57505,57506,57507,57508,57509,57510,57511,57512,57513,57514,57515,57516,57517,57518,57519,57520,57521,57522,57523,57524,57525,57526,57527,57528,57529,57530,57531,29688,29689,29690,29691,29692,29693,29694,29695,29696,29697,29698,29700,29703,29704,29707,29708,29709,29710,29713,29714,29715,29716,29717,29718,29719,29720,29721,29724,29725,29726,29727,29728,29729,29731,29732,29735,29737,29739,29741,29743,29745,29746,29751,29752,29753,29754,29755,29757,29758,29759,29760,29762,29763,29764,29765,29766,29767,29768,29769,29770,29771,29772,29773,29774,29775,29776,29777,29778,29779,29780,29782,29784,29789,29792,29793,29794,29795,29796,29797,29798,29799,29800,29801,29802,29803,29804,29806,29807,29809,29810,29811,29812,29813,29816,29817,29818,57532,57533,57534,57535,57536,57537,57538,57539,57540,57541,57542,57543,57544,57545,57546,57547,57548,57549,57550,57551,57552,57553,57554,57555,57556,57557,57558,57559,57560,57561,57562,57563,57564,57565,57566,57567,57568,57569,57570,57571,57572,57573,57574,57575,57576,57577,57578,57579,57580,57581,57582,57583,57584,57585,57586,57587,57588,57589,57590,57591,57592,57593,57594,57595,57596,57597,57598,57599,57600,57601,57602,57603,57604,57605,57606,57607,57608,57609,57610,57611,57612,57613,57614,57615,57616,57617,57618,57619,57620,57621,57622,57623,57624,57625,29819,29820,29821,29823,29826,29828,29829,29830,29832,29833,29834,29836,29837,29839,29841,29842,29843,29844,29845,29846,29847,29848,29849,29850,29851,29853,29855,29856,29857,29858,29859,29860,29861,29862,29866,29867,29868,29869,29870,29871,29872,29873,29874,29875,29876,29877,29878,29879,29880,29881,29883,29884,29885,29886,29887,29888,29889,29890,29891,29892,29893,29894,29895,29896,29897,29898,29899,29900,29901,29902,29903,29904,29905,29907,29908,29909,29910,29911,29912,29913,29914,29915,29917,29919,29921,29925,29927,29928,29929,29930,29931,29932,29933,29936,29937,29938,57626,57627,57628,57629,57630,57631,57632,57633,57634,57635,57636,57637,57638,57639,57640,57641,57642,57643,57644,57645,57646,57647,57648,57649,57650,57651,57652,57653,57654,57655,57656,57657,57658,57659,57660,57661,57662,57663,57664,57665,57666,57667,57668,57669,57670,57671,57672,57673,57674,57675,57676,57677,57678,57679,57680,57681,57682,57683,57684,57685,57686,57687,57688,57689,57690,57691,57692,57693,57694,57695,57696,57697,57698,57699,57700,57701,57702,57703,57704,57705,57706,57707,57708,57709,57710,57711,57712,57713,57714,57715,57716,57717,57718,57719,29939,29941,29944,29945,29946,29947,29948,29949,29950,29952,29953,29954,29955,29957,29958,29959,29960,29961,29962,29963,29964,29966,29968,29970,29972,29973,29974,29975,29979,29981,29982,29984,29985,29986,29987,29988,29990,29991,29994,29998,30004,30006,30009,30012,30013,30015,30017,30018,30019,30020,30022,30023,30025,30026,30029,30032,30033,30034,30035,30037,30038,30039,30040,30045,30046,30047,30048,30049,30050,30051,30052,30055,30056,30057,30059,30060,30061,30062,30063,30064,30065,30067,30069,30070,30071,30074,30075,30076,30077,30078,30080,30081,30082,30084,30085,30087,57720,57721,57722,57723,57724,57725,57726,57727,57728,57729,57730,57731,57732,57733,57734,57735,57736,57737,57738,57739,57740,57741,57742,57743,57744,57745,57746,57747,57748,57749,57750,57751,57752,57753,57754,57755,57756,57757,57758,57759,57760,57761,57762,57763,57764,57765,57766,57767,57768,57769,57770,57771,57772,57773,57774,57775,57776,57777,57778,57779,57780,57781,57782,57783,57784,57785,57786,57787,57788,57789,57790,57791,57792,57793,57794,57795,57796,57797,57798,57799,57800,57801,57802,57803,57804,57805,57806,57807,57808,57809,57810,57811,57812,57813,30088,30089,30090,30092,30093,30094,30096,30099,30101,30104,30107,30108,30110,30114,30118,30119,30120,30121,30122,30125,30134,30135,30138,30139,30143,30144,30145,30150,30155,30156,30158,30159,30160,30161,30163,30167,30169,30170,30172,30173,30175,30176,30177,30181,30185,30188,30189,30190,30191,30194,30195,30197,30198,30199,30200,30202,30203,30205,30206,30210,30212,30214,30215,30216,30217,30219,30221,30222,30223,30225,30226,30227,30228,30230,30234,30236,30237,30238,30241,30243,30247,30248,30252,30254,30255,30257,30258,30262,30263,30265,30266,30267,30269,30273,30274,30276,57814,57815,57816,57817,57818,57819,57820,57821,57822,57823,57824,57825,57826,57827,57828,57829,57830,57831,57832,57833,57834,57835,57836,57837,57838,57839,57840,57841,57842,57843,57844,57845,57846,57847,57848,57849,57850,57851,57852,57853,57854,57855,57856,57857,57858,57859,57860,57861,57862,57863,57864,57865,57866,57867,57868,57869,57870,57871,57872,57873,57874,57875,57876,57877,57878,57879,57880,57881,57882,57883,57884,57885,57886,57887,57888,57889,57890,57891,57892,57893,57894,57895,57896,57897,57898,57899,57900,57901,57902,57903,57904,57905,57906,57907,30277,30278,30279,30280,30281,30282,30283,30286,30287,30288,30289,30290,30291,30293,30295,30296,30297,30298,30299,30301,30303,30304,30305,30306,30308,30309,30310,30311,30312,30313,30314,30316,30317,30318,30320,30321,30322,30323,30324,30325,30326,30327,30329,30330,30332,30335,30336,30337,30339,30341,30345,30346,30348,30349,30351,30352,30354,30356,30357,30359,30360,30362,30363,30364,30365,30366,30367,30368,30369,30370,30371,30373,30374,30375,30376,30377,30378,30379,30380,30381,30383,30384,30387,30389,30390,30391,30392,30393,30394,30395,30396,30397,30398,30400,30401,30403,21834,38463,22467,25384,21710,21769,21696,30353,30284,34108,30702,33406,30861,29233,38552,38797,27688,23433,20474,25353,26263,23736,33018,26696,32942,26114,30414,20985,25942,29100,32753,34948,20658,22885,25034,28595,33453,25420,25170,21485,21543,31494,20843,30116,24052,25300,36299,38774,25226,32793,22365,38712,32610,29240,30333,26575,30334,25670,20336,36133,25308,31255,26001,29677,25644,25203,33324,39041,26495,29256,25198,25292,20276,29923,21322,21150,32458,37030,24110,26758,27036,33152,32465,26834,30917,34444,38225,20621,35876,33502,32990,21253,35090,21093,30404,30407,30409,30411,30412,30419,30421,30425,30426,30428,30429,30430,30432,30433,30434,30435,30436,30438,30439,30440,30441,30442,30443,30444,30445,30448,30451,30453,30454,30455,30458,30459,30461,30463,30464,30466,30467,30469,30470,30474,30476,30478,30479,30480,30481,30482,30483,30484,30485,30486,30487,30488,30491,30492,30493,30494,30497,30499,30500,30501,30503,30506,30507,30508,30510,30512,30513,30514,30515,30516,30521,30523,30525,30526,30527,30530,30532,30533,30534,30536,30537,30538,30539,30540,30541,30542,30543,30546,30547,30548,30549,30550,30551,30552,30553,30556,34180,38649,20445,22561,39281,23453,25265,25253,26292,35961,40077,29190,26479,30865,24754,21329,21271,36744,32972,36125,38049,20493,29384,22791,24811,28953,34987,22868,33519,26412,31528,23849,32503,29997,27893,36454,36856,36924,40763,27604,37145,31508,24444,30887,34006,34109,27605,27609,27606,24065,24199,30201,38381,25949,24330,24517,36767,22721,33218,36991,38491,38829,36793,32534,36140,25153,20415,21464,21342,36776,36777,36779,36941,26631,24426,33176,34920,40150,24971,21035,30250,24428,25996,28626,28392,23486,25672,20853,20912,26564,19993,31177,39292,28851,30557,30558,30559,30560,30564,30567,30569,30570,30573,30574,30575,30576,30577,30578,30579,30580,30581,30582,30583,30584,30586,30587,30588,30593,30594,30595,30598,30599,30600,30601,30602,30603,30607,30608,30611,30612,30613,30614,30615,30616,30617,30618,30619,30620,30621,30622,30625,30627,30628,30630,30632,30635,30637,30638,30639,30641,30642,30644,30646,30647,30648,30649,30650,30652,30654,30656,30657,30658,30659,30660,30661,30662,30663,30664,30665,30666,30667,30668,30670,30671,30672,30673,30674,30675,30676,30677,30678,30680,30681,30682,30685,30686,30687,30688,30689,30692,30149,24182,29627,33760,25773,25320,38069,27874,21338,21187,25615,38082,31636,20271,24091,33334,33046,33162,28196,27850,39539,25429,21340,21754,34917,22496,19981,24067,27493,31807,37096,24598,25830,29468,35009,26448,25165,36130,30572,36393,37319,24425,33756,34081,39184,21442,34453,27531,24813,24808,28799,33485,33329,20179,27815,34255,25805,31961,27133,26361,33609,21397,31574,20391,20876,27979,23618,36461,25554,21449,33580,33590,26597,30900,25661,23519,23700,24046,35815,25286,26612,35962,25600,25530,34633,39307,35863,32544,38130,20135,38416,39076,26124,29462,30694,30696,30698,30703,30704,30705,30706,30708,30709,30711,30713,30714,30715,30716,30723,30724,30725,30726,30727,30728,30730,30731,30734,30735,30736,30739,30741,30745,30747,30750,30752,30753,30754,30756,30760,30762,30763,30766,30767,30769,30770,30771,30773,30774,30781,30783,30785,30786,30787,30788,30790,30792,30793,30794,30795,30797,30799,30801,30803,30804,30808,30809,30810,30811,30812,30814,30815,30816,30817,30818,30819,30820,30821,30822,30823,30824,30825,30831,30832,30833,30834,30835,30836,30837,30838,30840,30841,30842,30843,30845,30846,30847,30848,30849,30850,30851,22330,23581,24120,38271,20607,32928,21378,25950,30021,21809,20513,36229,25220,38046,26397,22066,28526,24034,21557,28818,36710,25199,25764,25507,24443,28552,37108,33251,36784,23576,26216,24561,27785,38472,36225,34924,25745,31216,22478,27225,25104,21576,20056,31243,24809,28548,35802,25215,36894,39563,31204,21507,30196,25345,21273,27744,36831,24347,39536,32827,40831,20360,23610,36196,32709,26021,28861,20805,20914,34411,23815,23456,25277,37228,30068,36364,31264,24833,31609,20167,32504,30597,19985,33261,21021,20986,27249,21416,36487,38148,38607,28353,38500,26970,30852,30853,30854,30856,30858,30859,30863,30864,30866,30868,30869,30870,30873,30877,30878,30880,30882,30884,30886,30888,30889,30890,30891,30892,30893,30894,30895,30901,30902,30903,30904,30906,30907,30908,30909,30911,30912,30914,30915,30916,30918,30919,30920,30924,30925,30926,30927,30929,30930,30931,30934,30935,30936,30938,30939,30940,30941,30942,30943,30944,30945,30946,30947,30948,30949,30950,30951,30953,30954,30955,30957,30958,30959,30960,30961,30963,30965,30966,30968,30969,30971,30972,30973,30974,30975,30976,30978,30979,30980,30982,30983,30984,30985,30986,30987,30988,30784,20648,30679,25616,35302,22788,25571,24029,31359,26941,20256,33337,21912,20018,30126,31383,24162,24202,38383,21019,21561,28810,25462,38180,22402,26149,26943,37255,21767,28147,32431,34850,25139,32496,30133,33576,30913,38604,36766,24904,29943,35789,27492,21050,36176,27425,32874,33905,22257,21254,20174,19995,20945,31895,37259,31751,20419,36479,31713,31388,25703,23828,20652,33030,30209,31929,28140,32736,26449,23384,23544,30923,25774,25619,25514,25387,38169,25645,36798,31572,30249,25171,22823,21574,27513,20643,25140,24102,27526,20195,36151,34955,24453,36910,30989,30990,30991,30992,30993,30994,30996,30997,30998,30999,31e3,31001,31002,31003,31004,31005,31007,31008,31009,31010,31011,31013,31014,31015,31016,31017,31018,31019,31020,31021,31022,31023,31024,31025,31026,31027,31029,31030,31031,31032,31033,31037,31039,31042,31043,31044,31045,31047,31050,31051,31052,31053,31054,31055,31056,31057,31058,31060,31061,31064,31065,31073,31075,31076,31078,31081,31082,31083,31084,31086,31088,31089,31090,31091,31092,31093,31094,31097,31099,31100,31101,31102,31103,31106,31107,31110,31111,31112,31113,31115,31116,31117,31118,31120,31121,31122,24608,32829,25285,20025,21333,37112,25528,32966,26086,27694,20294,24814,28129,35806,24377,34507,24403,25377,20826,33633,26723,20992,25443,36424,20498,23707,31095,23548,21040,31291,24764,36947,30423,24503,24471,30340,36460,28783,30331,31561,30634,20979,37011,22564,20302,28404,36842,25932,31515,29380,28068,32735,23265,25269,24213,22320,33922,31532,24093,24351,36882,32532,39072,25474,28359,30872,28857,20856,38747,22443,30005,20291,30008,24215,24806,22880,28096,27583,30857,21500,38613,20939,20993,25481,21514,38035,35843,36300,29241,30879,34678,36845,35853,21472,31123,31124,31125,31126,31127,31128,31129,31131,31132,31133,31134,31135,31136,31137,31138,31139,31140,31141,31142,31144,31145,31146,31147,31148,31149,31150,31151,31152,31153,31154,31156,31157,31158,31159,31160,31164,31167,31170,31172,31173,31175,31176,31178,31180,31182,31183,31184,31187,31188,31190,31191,31193,31194,31195,31196,31197,31198,31200,31201,31202,31205,31208,31210,31212,31214,31217,31218,31219,31220,31221,31222,31223,31225,31226,31228,31230,31231,31233,31236,31237,31239,31240,31241,31242,31244,31247,31248,31249,31250,31251,31253,31254,31256,31257,31259,31260,19969,30447,21486,38025,39030,40718,38189,23450,35746,20002,19996,20908,33891,25026,21160,26635,20375,24683,20923,27934,20828,25238,26007,38497,35910,36887,30168,37117,30563,27602,29322,29420,35835,22581,30585,36172,26460,38208,32922,24230,28193,22930,31471,30701,38203,27573,26029,32526,22534,20817,38431,23545,22697,21544,36466,25958,39039,22244,38045,30462,36929,25479,21702,22810,22842,22427,36530,26421,36346,33333,21057,24816,22549,34558,23784,40517,20420,39069,35769,23077,24694,21380,25212,36943,37122,39295,24681,32780,20799,32819,23572,39285,27953,20108,31261,31263,31265,31266,31268,31269,31270,31271,31272,31273,31274,31275,31276,31277,31278,31279,31280,31281,31282,31284,31285,31286,31288,31290,31294,31296,31297,31298,31299,31300,31301,31303,31304,31305,31306,31307,31308,31309,31310,31311,31312,31314,31315,31316,31317,31318,31320,31321,31322,31323,31324,31325,31326,31327,31328,31329,31330,31331,31332,31333,31334,31335,31336,31337,31338,31339,31340,31341,31342,31343,31345,31346,31347,31349,31355,31356,31357,31358,31362,31365,31367,31369,31370,31371,31372,31374,31375,31376,31379,31380,31385,31386,31387,31390,31393,31394,36144,21457,32602,31567,20240,20047,38400,27861,29648,34281,24070,30058,32763,27146,30718,38034,32321,20961,28902,21453,36820,33539,36137,29359,39277,27867,22346,33459,26041,32938,25151,38450,22952,20223,35775,32442,25918,33778,38750,21857,39134,32933,21290,35837,21536,32954,24223,27832,36153,33452,37210,21545,27675,20998,32439,22367,28954,27774,31881,22859,20221,24575,24868,31914,20016,23553,26539,34562,23792,38155,39118,30127,28925,36898,20911,32541,35773,22857,20964,20315,21542,22827,25975,32932,23413,25206,25282,36752,24133,27679,31526,20239,20440,26381,31395,31396,31399,31401,31402,31403,31406,31407,31408,31409,31410,31412,31413,31414,31415,31416,31417,31418,31419,31420,31421,31422,31424,31425,31426,31427,31428,31429,31430,31431,31432,31433,31434,31436,31437,31438,31439,31440,31441,31442,31443,31444,31445,31447,31448,31450,31451,31452,31453,31457,31458,31460,31463,31464,31465,31466,31467,31468,31470,31472,31473,31474,31475,31476,31477,31478,31479,31480,31483,31484,31486,31488,31489,31490,31493,31495,31497,31500,31501,31502,31504,31506,31507,31510,31511,31512,31514,31516,31517,31519,31521,31522,31523,31527,31529,31533,28014,28074,31119,34993,24343,29995,25242,36741,20463,37340,26023,33071,33105,24220,33104,36212,21103,35206,36171,22797,20613,20184,38428,29238,33145,36127,23500,35747,38468,22919,32538,21648,22134,22030,35813,25913,27010,38041,30422,28297,24178,29976,26438,26577,31487,32925,36214,24863,31174,25954,36195,20872,21018,38050,32568,32923,32434,23703,28207,26464,31705,30347,39640,33167,32660,31957,25630,38224,31295,21578,21733,27468,25601,25096,40509,33011,30105,21106,38761,33883,26684,34532,38401,38548,38124,20010,21508,32473,26681,36319,32789,26356,24218,32697,31535,31536,31538,31540,31541,31542,31543,31545,31547,31549,31551,31552,31553,31554,31555,31556,31558,31560,31562,31565,31566,31571,31573,31575,31577,31580,31582,31583,31585,31587,31588,31589,31590,31591,31592,31593,31594,31595,31596,31597,31599,31600,31603,31604,31606,31608,31610,31612,31613,31615,31617,31618,31619,31620,31622,31623,31624,31625,31626,31627,31628,31630,31631,31633,31634,31635,31638,31640,31641,31642,31643,31646,31647,31648,31651,31652,31653,31662,31663,31664,31666,31667,31669,31670,31671,31673,31674,31675,31676,31677,31678,31679,31680,31682,31683,31684,22466,32831,26775,24037,25915,21151,24685,40858,20379,36524,20844,23467,24339,24041,27742,25329,36129,20849,38057,21246,27807,33503,29399,22434,26500,36141,22815,36764,33735,21653,31629,20272,27837,23396,22993,40723,21476,34506,39592,35895,32929,25925,39038,22266,38599,21038,29916,21072,23521,25346,35074,20054,25296,24618,26874,20851,23448,20896,35266,31649,39302,32592,24815,28748,36143,20809,24191,36891,29808,35268,22317,30789,24402,40863,38394,36712,39740,35809,30328,26690,26588,36330,36149,21053,36746,28378,26829,38149,37101,22269,26524,35065,36807,21704,31685,31688,31689,31690,31691,31693,31694,31695,31696,31698,31700,31701,31702,31703,31704,31707,31708,31710,31711,31712,31714,31715,31716,31719,31720,31721,31723,31724,31725,31727,31728,31730,31731,31732,31733,31734,31736,31737,31738,31739,31741,31743,31744,31745,31746,31747,31748,31749,31750,31752,31753,31754,31757,31758,31760,31761,31762,31763,31764,31765,31767,31768,31769,31770,31771,31772,31773,31774,31776,31777,31778,31779,31780,31781,31784,31785,31787,31788,31789,31790,31791,31792,31793,31794,31795,31796,31797,31798,31799,31801,31802,31803,31804,31805,31806,31810,39608,23401,28023,27686,20133,23475,39559,37219,25e3,37039,38889,21547,28085,23506,20989,21898,32597,32752,25788,25421,26097,25022,24717,28938,27735,27721,22831,26477,33322,22741,22158,35946,27627,37085,22909,32791,21495,28009,21621,21917,33655,33743,26680,31166,21644,20309,21512,30418,35977,38402,27827,28088,36203,35088,40548,36154,22079,40657,30165,24456,29408,24680,21756,20136,27178,34913,24658,36720,21700,28888,34425,40511,27946,23439,24344,32418,21897,20399,29492,21564,21402,20505,21518,21628,20046,24573,29786,22774,33899,32993,34676,29392,31946,28246,31811,31812,31813,31814,31815,31816,31817,31818,31819,31820,31822,31823,31824,31825,31826,31827,31828,31829,31830,31831,31832,31833,31834,31835,31836,31837,31838,31839,31840,31841,31842,31843,31844,31845,31846,31847,31848,31849,31850,31851,31852,31853,31854,31855,31856,31857,31858,31861,31862,31863,31864,31865,31866,31870,31871,31872,31873,31874,31875,31876,31877,31878,31879,31880,31882,31883,31884,31885,31886,31887,31888,31891,31892,31894,31897,31898,31899,31904,31905,31907,31910,31911,31912,31913,31915,31916,31917,31919,31920,31924,31925,31926,31927,31928,31930,31931,24359,34382,21804,25252,20114,27818,25143,33457,21719,21326,29502,28369,30011,21010,21270,35805,27088,24458,24576,28142,22351,27426,29615,26707,36824,32531,25442,24739,21796,30186,35938,28949,28067,23462,24187,33618,24908,40644,30970,34647,31783,30343,20976,24822,29004,26179,24140,24653,35854,28784,25381,36745,24509,24674,34516,22238,27585,24724,24935,21321,24800,26214,36159,31229,20250,28905,27719,35763,35826,32472,33636,26127,23130,39746,27985,28151,35905,27963,20249,28779,33719,25110,24785,38669,36135,31096,20987,22334,22522,26426,30072,31293,31215,31637,31935,31936,31938,31939,31940,31942,31945,31947,31950,31951,31952,31953,31954,31955,31956,31960,31962,31963,31965,31966,31969,31970,31971,31972,31973,31974,31975,31977,31978,31979,31980,31981,31982,31984,31985,31986,31987,31988,31989,31990,31991,31993,31994,31996,31997,31998,31999,32e3,32001,32002,32003,32004,32005,32006,32007,32008,32009,32011,32012,32013,32014,32015,32016,32017,32018,32019,32020,32021,32022,32023,32024,32025,32026,32027,32028,32029,32030,32031,32033,32035,32036,32037,32038,32040,32041,32042,32044,32045,32046,32048,32049,32050,32051,32052,32053,32054,32908,39269,36857,28608,35749,40481,23020,32489,32521,21513,26497,26840,36753,31821,38598,21450,24613,30142,27762,21363,23241,32423,25380,20960,33034,24049,34015,25216,20864,23395,20238,31085,21058,24760,27982,23492,23490,35745,35760,26082,24524,38469,22931,32487,32426,22025,26551,22841,20339,23478,21152,33626,39050,36158,30002,38078,20551,31292,20215,26550,39550,23233,27516,30417,22362,23574,31546,38388,29006,20860,32937,33392,22904,32516,33575,26816,26604,30897,30839,25315,25441,31616,20461,21098,20943,33616,27099,37492,36341,36145,35265,38190,31661,20214,32055,32056,32057,32058,32059,32060,32061,32062,32063,32064,32065,32066,32067,32068,32069,32070,32071,32072,32073,32074,32075,32076,32077,32078,32079,32080,32081,32082,32083,32084,32085,32086,32087,32088,32089,32090,32091,32092,32093,32094,32095,32096,32097,32098,32099,32100,32101,32102,32103,32104,32105,32106,32107,32108,32109,32111,32112,32113,32114,32115,32116,32117,32118,32120,32121,32122,32123,32124,32125,32126,32127,32128,32129,32130,32131,32132,32133,32134,32135,32136,32137,32138,32139,32140,32141,32142,32143,32144,32145,32146,32147,32148,32149,32150,32151,32152,20581,33328,21073,39279,28176,28293,28071,24314,20725,23004,23558,27974,27743,30086,33931,26728,22870,35762,21280,37233,38477,34121,26898,30977,28966,33014,20132,37066,27975,39556,23047,22204,25605,38128,30699,20389,33050,29409,35282,39290,32564,32478,21119,25945,37237,36735,36739,21483,31382,25581,25509,30342,31224,34903,38454,25130,21163,33410,26708,26480,25463,30571,31469,27905,32467,35299,22992,25106,34249,33445,30028,20511,20171,30117,35819,23626,24062,31563,26020,37329,20170,27941,35167,32039,38182,20165,35880,36827,38771,26187,31105,36817,28908,28024,32153,32154,32155,32156,32157,32158,32159,32160,32161,32162,32163,32164,32165,32167,32168,32169,32170,32171,32172,32173,32175,32176,32177,32178,32179,32180,32181,32182,32183,32184,32185,32186,32187,32188,32189,32190,32191,32192,32193,32194,32195,32196,32197,32198,32199,32200,32201,32202,32203,32204,32205,32206,32207,32208,32209,32210,32211,32212,32213,32214,32215,32216,32217,32218,32219,32220,32221,32222,32223,32224,32225,32226,32227,32228,32229,32230,32231,32232,32233,32234,32235,32236,32237,32238,32239,32240,32241,32242,32243,32244,32245,32246,32247,32248,32249,32250,23613,21170,33606,20834,33550,30555,26230,40120,20140,24778,31934,31923,32463,20117,35686,26223,39048,38745,22659,25964,38236,24452,30153,38742,31455,31454,20928,28847,31384,25578,31350,32416,29590,38893,20037,28792,20061,37202,21417,25937,26087,33276,33285,21646,23601,30106,38816,25304,29401,30141,23621,39545,33738,23616,21632,30697,20030,27822,32858,25298,25454,24040,20855,36317,36382,38191,20465,21477,24807,28844,21095,25424,40515,23071,20518,30519,21367,32482,25733,25899,25225,25496,20500,29237,35273,20915,35776,32477,22343,33740,38055,20891,21531,23803,32251,32252,32253,32254,32255,32256,32257,32258,32259,32260,32261,32262,32263,32264,32265,32266,32267,32268,32269,32270,32271,32272,32273,32274,32275,32276,32277,32278,32279,32280,32281,32282,32283,32284,32285,32286,32287,32288,32289,32290,32291,32292,32293,32294,32295,32296,32297,32298,32299,32300,32301,32302,32303,32304,32305,32306,32307,32308,32309,32310,32311,32312,32313,32314,32316,32317,32318,32319,32320,32322,32323,32324,32325,32326,32328,32329,32330,32331,32332,32333,32334,32335,32336,32337,32338,32339,32340,32341,32342,32343,32344,32345,32346,32347,32348,32349,20426,31459,27994,37089,39567,21888,21654,21345,21679,24320,25577,26999,20975,24936,21002,22570,21208,22350,30733,30475,24247,24951,31968,25179,25239,20130,28821,32771,25335,28900,38752,22391,33499,26607,26869,30933,39063,31185,22771,21683,21487,28212,20811,21051,23458,35838,32943,21827,22438,24691,22353,21549,31354,24656,23380,25511,25248,21475,25187,23495,26543,21741,31391,33510,37239,24211,35044,22840,22446,25358,36328,33007,22359,31607,20393,24555,23485,27454,21281,31568,29378,26694,30719,30518,26103,20917,20111,30420,23743,31397,33909,22862,39745,20608,32350,32351,32352,32353,32354,32355,32356,32357,32358,32359,32360,32361,32362,32363,32364,32365,32366,32367,32368,32369,32370,32371,32372,32373,32374,32375,32376,32377,32378,32379,32380,32381,32382,32383,32384,32385,32387,32388,32389,32390,32391,32392,32393,32394,32395,32396,32397,32398,32399,32400,32401,32402,32403,32404,32405,32406,32407,32408,32409,32410,32412,32413,32414,32430,32436,32443,32444,32470,32484,32492,32505,32522,32528,32542,32567,32569,32571,32572,32573,32574,32575,32576,32577,32579,32582,32583,32584,32585,32586,32587,32588,32589,32590,32591,32594,32595,39304,24871,28291,22372,26118,25414,22256,25324,25193,24275,38420,22403,25289,21895,34593,33098,36771,21862,33713,26469,36182,34013,23146,26639,25318,31726,38417,20848,28572,35888,25597,35272,25042,32518,28866,28389,29701,27028,29436,24266,37070,26391,28010,25438,21171,29282,32769,20332,23013,37226,28889,28061,21202,20048,38647,38253,34174,30922,32047,20769,22418,25794,32907,31867,27882,26865,26974,20919,21400,26792,29313,40654,31729,29432,31163,28435,29702,26446,37324,40100,31036,33673,33620,21519,26647,20029,21385,21169,30782,21382,21033,20616,20363,20432,32598,32601,32603,32604,32605,32606,32608,32611,32612,32613,32614,32615,32619,32620,32621,32623,32624,32627,32629,32630,32631,32632,32634,32635,32636,32637,32639,32640,32642,32643,32644,32645,32646,32647,32648,32649,32651,32653,32655,32656,32657,32658,32659,32661,32662,32663,32664,32665,32667,32668,32672,32674,32675,32677,32678,32680,32681,32682,32683,32684,32685,32686,32689,32691,32692,32693,32694,32695,32698,32699,32702,32704,32706,32707,32708,32710,32711,32712,32713,32715,32717,32719,32720,32721,32722,32723,32726,32727,32729,32730,32731,32732,32733,32734,32738,32739,30178,31435,31890,27813,38582,21147,29827,21737,20457,32852,33714,36830,38256,24265,24604,28063,24088,25947,33080,38142,24651,28860,32451,31918,20937,26753,31921,33391,20004,36742,37327,26238,20142,35845,25769,32842,20698,30103,29134,23525,36797,28518,20102,25730,38243,24278,26009,21015,35010,28872,21155,29454,29747,26519,30967,38678,20020,37051,40158,28107,20955,36161,21533,25294,29618,33777,38646,40836,38083,20278,32666,20940,28789,38517,23725,39046,21478,20196,28316,29705,27060,30827,39311,30041,21016,30244,27969,26611,20845,40857,32843,21657,31548,31423,32740,32743,32744,32746,32747,32748,32749,32751,32754,32756,32757,32758,32759,32760,32761,32762,32765,32766,32767,32770,32775,32776,32777,32778,32782,32783,32785,32787,32794,32795,32797,32798,32799,32801,32803,32804,32811,32812,32813,32814,32815,32816,32818,32820,32825,32826,32828,32830,32832,32833,32836,32837,32839,32840,32841,32846,32847,32848,32849,32851,32853,32854,32855,32857,32859,32860,32861,32862,32863,32864,32865,32866,32867,32868,32869,32870,32871,32872,32875,32876,32877,32878,32879,32880,32882,32883,32884,32885,32886,32887,32888,32889,32890,32891,32892,32893,38534,22404,25314,38471,27004,23044,25602,31699,28431,38475,33446,21346,39045,24208,28809,25523,21348,34383,40065,40595,30860,38706,36335,36162,40575,28510,31108,24405,38470,25134,39540,21525,38109,20387,26053,23653,23649,32533,34385,27695,24459,29575,28388,32511,23782,25371,23402,28390,21365,20081,25504,30053,25249,36718,20262,20177,27814,32438,35770,33821,34746,32599,36923,38179,31657,39585,35064,33853,27931,39558,32476,22920,40635,29595,30721,34434,39532,39554,22043,21527,22475,20080,40614,21334,36808,33033,30610,39314,34542,28385,34067,26364,24930,28459,32894,32897,32898,32901,32904,32906,32909,32910,32911,32912,32913,32914,32916,32917,32919,32921,32926,32931,32934,32935,32936,32940,32944,32947,32949,32950,32952,32953,32955,32965,32967,32968,32969,32970,32971,32975,32976,32977,32978,32979,32980,32981,32984,32991,32992,32994,32995,32998,33006,33013,33015,33017,33019,33022,33023,33024,33025,33027,33028,33029,33031,33032,33035,33036,33045,33047,33049,33051,33052,33053,33055,33056,33057,33058,33059,33060,33061,33062,33063,33064,33065,33066,33067,33069,33070,33072,33075,33076,33077,33079,33081,33082,33083,33084,33085,33087,35881,33426,33579,30450,27667,24537,33725,29483,33541,38170,27611,30683,38086,21359,33538,20882,24125,35980,36152,20040,29611,26522,26757,37238,38665,29028,27809,30473,23186,38209,27599,32654,26151,23504,22969,23194,38376,38391,20204,33804,33945,27308,30431,38192,29467,26790,23391,30511,37274,38753,31964,36855,35868,24357,31859,31192,35269,27852,34588,23494,24130,26825,30496,32501,20885,20813,21193,23081,32517,38754,33495,25551,30596,34256,31186,28218,24217,22937,34065,28781,27665,25279,30399,25935,24751,38397,26126,34719,40483,38125,21517,21629,35884,25720,33088,33089,33090,33091,33092,33093,33095,33097,33101,33102,33103,33106,33110,33111,33112,33115,33116,33117,33118,33119,33121,33122,33123,33124,33126,33128,33130,33131,33132,33135,33138,33139,33141,33142,33143,33144,33153,33155,33156,33157,33158,33159,33161,33163,33164,33165,33166,33168,33170,33171,33172,33173,33174,33175,33177,33178,33182,33183,33184,33185,33186,33188,33189,33191,33193,33195,33196,33197,33198,33199,33200,33201,33202,33204,33205,33206,33207,33208,33209,33212,33213,33214,33215,33220,33221,33223,33224,33225,33227,33229,33230,33231,33232,33233,33234,33235,25721,34321,27169,33180,30952,25705,39764,25273,26411,33707,22696,40664,27819,28448,23518,38476,35851,29279,26576,25287,29281,20137,22982,27597,22675,26286,24149,21215,24917,26408,30446,30566,29287,31302,25343,21738,21584,38048,37027,23068,32435,27670,20035,22902,32784,22856,21335,30007,38590,22218,25376,33041,24700,38393,28118,21602,39297,20869,23273,33021,22958,38675,20522,27877,23612,25311,20320,21311,33147,36870,28346,34091,25288,24180,30910,25781,25467,24565,23064,37247,40479,23615,25423,32834,23421,21870,38218,38221,28037,24744,26592,29406,20957,23425,33236,33237,33238,33239,33240,33241,33242,33243,33244,33245,33246,33247,33248,33249,33250,33252,33253,33254,33256,33257,33259,33262,33263,33264,33265,33266,33269,33270,33271,33272,33273,33274,33277,33279,33283,33287,33288,33289,33290,33291,33294,33295,33297,33299,33301,33302,33303,33304,33305,33306,33309,33312,33316,33317,33318,33319,33321,33326,33330,33338,33340,33341,33343,33344,33345,33346,33347,33349,33350,33352,33354,33356,33357,33358,33360,33361,33362,33363,33364,33365,33366,33367,33369,33371,33372,33373,33374,33376,33377,33378,33379,33380,33381,33382,33383,33385,25319,27870,29275,25197,38062,32445,33043,27987,20892,24324,22900,21162,24594,22899,26262,34384,30111,25386,25062,31983,35834,21734,27431,40485,27572,34261,21589,20598,27812,21866,36276,29228,24085,24597,29750,25293,25490,29260,24472,28227,27966,25856,28504,30424,30928,30460,30036,21028,21467,20051,24222,26049,32810,32982,25243,21638,21032,28846,34957,36305,27873,21624,32986,22521,35060,36180,38506,37197,20329,27803,21943,30406,30768,25256,28921,28558,24429,34028,26842,30844,31735,33192,26379,40527,25447,30896,22383,30738,38713,25209,25259,21128,29749,27607,33386,33387,33388,33389,33393,33397,33398,33399,33400,33403,33404,33408,33409,33411,33413,33414,33415,33417,33420,33424,33427,33428,33429,33430,33434,33435,33438,33440,33442,33443,33447,33458,33461,33462,33466,33467,33468,33471,33472,33474,33475,33477,33478,33481,33488,33494,33497,33498,33501,33506,33511,33512,33513,33514,33516,33517,33518,33520,33522,33523,33525,33526,33528,33530,33532,33533,33534,33535,33536,33546,33547,33549,33552,33554,33555,33558,33560,33561,33565,33566,33567,33568,33569,33570,33571,33572,33573,33574,33577,33578,33582,33584,33586,33591,33595,33597,21860,33086,30130,30382,21305,30174,20731,23617,35692,31687,20559,29255,39575,39128,28418,29922,31080,25735,30629,25340,39057,36139,21697,32856,20050,22378,33529,33805,24179,20973,29942,35780,23631,22369,27900,39047,23110,30772,39748,36843,31893,21078,25169,38138,20166,33670,33889,33769,33970,22484,26420,22275,26222,28006,35889,26333,28689,26399,27450,26646,25114,22971,19971,20932,28422,26578,27791,20854,26827,22855,27495,30054,23822,33040,40784,26071,31048,31041,39569,36215,23682,20062,20225,21551,22865,30732,22120,27668,36804,24323,27773,27875,35755,25488,33598,33599,33601,33602,33604,33605,33608,33610,33611,33612,33613,33614,33619,33621,33622,33623,33624,33625,33629,33634,33648,33649,33650,33651,33652,33653,33654,33657,33658,33662,33663,33664,33665,33666,33667,33668,33671,33672,33674,33675,33676,33677,33679,33680,33681,33684,33685,33686,33687,33689,33690,33693,33695,33697,33698,33699,33700,33701,33702,33703,33708,33709,33710,33711,33717,33723,33726,33727,33730,33731,33732,33734,33736,33737,33739,33741,33742,33744,33745,33746,33747,33749,33751,33753,33754,33755,33758,33762,33763,33764,33766,33767,33768,33771,33772,33773,24688,27965,29301,25190,38030,38085,21315,36801,31614,20191,35878,20094,40660,38065,38067,21069,28508,36963,27973,35892,22545,23884,27424,27465,26538,21595,33108,32652,22681,34103,24378,25250,27207,38201,25970,24708,26725,30631,20052,20392,24039,38808,25772,32728,23789,20431,31373,20999,33540,19988,24623,31363,38054,20405,20146,31206,29748,21220,33465,25810,31165,23517,27777,38738,36731,27682,20542,21375,28165,25806,26228,27696,24773,39031,35831,24198,29756,31351,31179,19992,37041,29699,27714,22234,37195,27845,36235,21306,34502,26354,36527,23624,39537,28192,33774,33775,33779,33780,33781,33782,33783,33786,33787,33788,33790,33791,33792,33794,33797,33799,33800,33801,33802,33808,33810,33811,33812,33813,33814,33815,33817,33818,33819,33822,33823,33824,33825,33826,33827,33833,33834,33835,33836,33837,33838,33839,33840,33842,33843,33844,33845,33846,33847,33849,33850,33851,33854,33855,33856,33857,33858,33859,33860,33861,33863,33864,33865,33866,33867,33868,33869,33870,33871,33872,33874,33875,33876,33877,33878,33880,33885,33886,33887,33888,33890,33892,33893,33894,33895,33896,33898,33902,33903,33904,33906,33908,33911,33913,33915,33916,21462,23094,40843,36259,21435,22280,39079,26435,37275,27849,20840,30154,25331,29356,21048,21149,32570,28820,30264,21364,40522,27063,30830,38592,35033,32676,28982,29123,20873,26579,29924,22756,25880,22199,35753,39286,25200,32469,24825,28909,22764,20161,20154,24525,38887,20219,35748,20995,22922,32427,25172,20173,26085,25102,33592,33993,33635,34701,29076,28342,23481,32466,20887,25545,26580,32905,33593,34837,20754,23418,22914,36785,20083,27741,20837,35109,36719,38446,34122,29790,38160,38384,28070,33509,24369,25746,27922,33832,33134,40131,22622,36187,19977,21441,33917,33918,33919,33920,33921,33923,33924,33925,33926,33930,33933,33935,33936,33937,33938,33939,33940,33941,33942,33944,33946,33947,33949,33950,33951,33952,33954,33955,33956,33957,33958,33959,33960,33961,33962,33963,33964,33965,33966,33968,33969,33971,33973,33974,33975,33979,33980,33982,33984,33986,33987,33989,33990,33991,33992,33995,33996,33998,33999,34002,34004,34005,34007,34008,34009,34010,34011,34012,34014,34017,34018,34020,34023,34024,34025,34026,34027,34029,34030,34031,34033,34034,34035,34036,34037,34038,34039,34040,34041,34042,34043,34045,34046,34048,34049,34050,20254,25955,26705,21971,20007,25620,39578,25195,23234,29791,33394,28073,26862,20711,33678,30722,26432,21049,27801,32433,20667,21861,29022,31579,26194,29642,33515,26441,23665,21024,29053,34923,38378,38485,25797,36193,33203,21892,27733,25159,32558,22674,20260,21830,36175,26188,19978,23578,35059,26786,25422,31245,28903,33421,21242,38902,23569,21736,37045,32461,22882,36170,34503,33292,33293,36198,25668,23556,24913,28041,31038,35774,30775,30003,21627,20280,36523,28145,23072,32453,31070,27784,23457,23158,29978,32958,24910,28183,22768,29983,29989,29298,21319,32499,34051,34052,34053,34054,34055,34056,34057,34058,34059,34061,34062,34063,34064,34066,34068,34069,34070,34072,34073,34075,34076,34077,34078,34080,34082,34083,34084,34085,34086,34087,34088,34089,34090,34093,34094,34095,34096,34097,34098,34099,34100,34101,34102,34110,34111,34112,34113,34114,34116,34117,34118,34119,34123,34124,34125,34126,34127,34128,34129,34130,34131,34132,34133,34135,34136,34138,34139,34140,34141,34143,34144,34145,34146,34147,34149,34150,34151,34153,34154,34155,34156,34157,34158,34159,34160,34161,34163,34165,34166,34167,34168,34172,34173,34175,34176,34177,30465,30427,21097,32988,22307,24072,22833,29422,26045,28287,35799,23608,34417,21313,30707,25342,26102,20160,39135,34432,23454,35782,21490,30690,20351,23630,39542,22987,24335,31034,22763,19990,26623,20107,25325,35475,36893,21183,26159,21980,22124,36866,20181,20365,37322,39280,27663,24066,24643,23460,35270,35797,25910,25163,39318,23432,23551,25480,21806,21463,30246,20861,34092,26530,26803,27530,25234,36755,21460,33298,28113,30095,20070,36174,23408,29087,34223,26257,26329,32626,34560,40653,40736,23646,26415,36848,26641,26463,25101,31446,22661,24246,25968,28465,34178,34179,34182,34184,34185,34186,34187,34188,34189,34190,34192,34193,34194,34195,34196,34197,34198,34199,34200,34201,34202,34205,34206,34207,34208,34209,34210,34211,34213,34214,34215,34217,34219,34220,34221,34225,34226,34227,34228,34229,34230,34232,34234,34235,34236,34237,34238,34239,34240,34242,34243,34244,34245,34246,34247,34248,34250,34251,34252,34253,34254,34257,34258,34260,34262,34263,34264,34265,34266,34267,34269,34270,34271,34272,34273,34274,34275,34277,34278,34279,34280,34282,34283,34284,34285,34286,34287,34288,34289,34290,34291,34292,34293,34294,34295,34296,24661,21047,32781,25684,34928,29993,24069,26643,25332,38684,21452,29245,35841,27700,30561,31246,21550,30636,39034,33308,35828,30805,26388,28865,26031,25749,22070,24605,31169,21496,19997,27515,32902,23546,21987,22235,20282,20284,39282,24051,26494,32824,24578,39042,36865,23435,35772,35829,25628,33368,25822,22013,33487,37221,20439,32032,36895,31903,20723,22609,28335,23487,35785,32899,37240,33948,31639,34429,38539,38543,32485,39635,30862,23681,31319,36930,38567,31071,23385,25439,31499,34001,26797,21766,32553,29712,32034,38145,25152,22604,20182,23427,22905,22612,34297,34298,34300,34301,34302,34304,34305,34306,34307,34308,34310,34311,34312,34313,34314,34315,34316,34317,34318,34319,34320,34322,34323,34324,34325,34327,34328,34329,34330,34331,34332,34333,34334,34335,34336,34337,34338,34339,34340,34341,34342,34344,34346,34347,34348,34349,34350,34351,34352,34353,34354,34355,34356,34357,34358,34359,34361,34362,34363,34365,34366,34367,34368,34369,34370,34371,34372,34373,34374,34375,34376,34377,34378,34379,34380,34386,34387,34389,34390,34391,34392,34393,34395,34396,34397,34399,34400,34401,34403,34404,34405,34406,34407,34408,34409,34410,29549,25374,36427,36367,32974,33492,25260,21488,27888,37214,22826,24577,27760,22349,25674,36138,30251,28393,22363,27264,30192,28525,35885,35848,22374,27631,34962,30899,25506,21497,28845,27748,22616,25642,22530,26848,33179,21776,31958,20504,36538,28108,36255,28907,25487,28059,28372,32486,33796,26691,36867,28120,38518,35752,22871,29305,34276,33150,30140,35466,26799,21076,36386,38161,25552,39064,36420,21884,20307,26367,22159,24789,28053,21059,23625,22825,28155,22635,3e4,29980,24684,33300,33094,25361,26465,36834,30522,36339,36148,38081,24086,21381,21548,28867,34413,34415,34416,34418,34419,34420,34421,34422,34423,34424,34435,34436,34437,34438,34439,34440,34441,34446,34447,34448,34449,34450,34452,34454,34455,34456,34457,34458,34459,34462,34463,34464,34465,34466,34469,34470,34475,34477,34478,34482,34483,34487,34488,34489,34491,34492,34493,34494,34495,34497,34498,34499,34501,34504,34508,34509,34514,34515,34517,34518,34519,34522,34524,34525,34528,34529,34530,34531,34533,34534,34535,34536,34538,34539,34540,34543,34549,34550,34551,34554,34555,34556,34557,34559,34561,34564,34565,34566,34571,34572,34574,34575,34576,34577,34580,34582,27712,24311,20572,20141,24237,25402,33351,36890,26704,37230,30643,21516,38108,24420,31461,26742,25413,31570,32479,30171,20599,25237,22836,36879,20984,31171,31361,22270,24466,36884,28034,23648,22303,21520,20820,28237,22242,25512,39059,33151,34581,35114,36864,21534,23663,33216,25302,25176,33073,40501,38464,39534,39548,26925,22949,25299,21822,25366,21703,34521,27964,23043,29926,34972,27498,22806,35916,24367,28286,29609,39037,20024,28919,23436,30871,25405,26202,30358,24779,23451,23113,19975,33109,27754,29579,20129,26505,32593,24448,26106,26395,24536,22916,23041,34585,34587,34589,34591,34592,34596,34598,34599,34600,34602,34603,34604,34605,34607,34608,34610,34611,34613,34614,34616,34617,34618,34620,34621,34624,34625,34626,34627,34628,34629,34630,34634,34635,34637,34639,34640,34641,34642,34644,34645,34646,34648,34650,34651,34652,34653,34654,34655,34657,34658,34662,34663,34664,34665,34666,34667,34668,34669,34671,34673,34674,34675,34677,34679,34680,34681,34682,34687,34688,34689,34692,34694,34695,34697,34698,34700,34702,34703,34704,34705,34706,34708,34709,34710,34712,34713,34714,34715,34716,34717,34718,34720,34721,34722,34723,34724,24013,24494,21361,38886,36829,26693,22260,21807,24799,20026,28493,32500,33479,33806,22996,20255,20266,23614,32428,26410,34074,21619,30031,32963,21890,39759,20301,28205,35859,23561,24944,21355,30239,28201,34442,25991,38395,32441,21563,31283,32010,38382,21985,32705,29934,25373,34583,28065,31389,25105,26017,21351,25569,27779,24043,21596,38056,20044,27745,35820,23627,26080,33436,26791,21566,21556,27595,27494,20116,25410,21320,33310,20237,20398,22366,25098,38654,26212,29289,21247,21153,24735,35823,26132,29081,26512,35199,30802,30717,26224,22075,21560,38177,29306,34725,34726,34727,34729,34730,34734,34736,34737,34738,34740,34742,34743,34744,34745,34747,34748,34750,34751,34753,34754,34755,34756,34757,34759,34760,34761,34764,34765,34766,34767,34768,34772,34773,34774,34775,34776,34777,34778,34780,34781,34782,34783,34785,34786,34787,34788,34790,34791,34792,34793,34795,34796,34797,34799,34800,34801,34802,34803,34804,34805,34806,34807,34808,34810,34811,34812,34813,34815,34816,34817,34818,34820,34821,34822,34823,34824,34825,34827,34828,34829,34830,34831,34832,34833,34834,34836,34839,34840,34841,34842,34844,34845,34846,34847,34848,34851,31232,24687,24076,24713,33181,22805,24796,29060,28911,28330,27728,29312,27268,34989,24109,20064,23219,21916,38115,27927,31995,38553,25103,32454,30606,34430,21283,38686,36758,26247,23777,20384,29421,19979,21414,22799,21523,25472,38184,20808,20185,40092,32420,21688,36132,34900,33335,38386,28046,24358,23244,26174,38505,29616,29486,21439,33146,39301,32673,23466,38519,38480,32447,30456,21410,38262,39321,31665,35140,28248,20065,32724,31077,35814,24819,21709,20139,39033,24055,27233,20687,21521,35937,33831,30813,38660,21066,21742,22179,38144,28040,23477,28102,26195,34852,34853,34854,34855,34856,34857,34858,34859,34860,34861,34862,34863,34864,34865,34867,34868,34869,34870,34871,34872,34874,34875,34877,34878,34879,34881,34882,34883,34886,34887,34888,34889,34890,34891,34894,34895,34896,34897,34898,34899,34901,34902,34904,34906,34907,34908,34909,34910,34911,34912,34918,34919,34922,34925,34927,34929,34931,34932,34933,34934,34936,34937,34938,34939,34940,34944,34947,34950,34951,34953,34954,34956,34958,34959,34960,34961,34963,34964,34965,34967,34968,34969,34970,34971,34973,34974,34975,34976,34977,34979,34981,34982,34983,34984,34985,34986,23567,23389,26657,32918,21880,31505,25928,26964,20123,27463,34638,38795,21327,25375,25658,37034,26012,32961,35856,20889,26800,21368,34809,25032,27844,27899,35874,23633,34218,33455,38156,27427,36763,26032,24571,24515,20449,34885,26143,33125,29481,24826,20852,21009,22411,24418,37026,34892,37266,24184,26447,24615,22995,20804,20982,33016,21256,27769,38596,29066,20241,20462,32670,26429,21957,38152,31168,34966,32483,22687,25100,38656,34394,22040,39035,24464,35768,33988,37207,21465,26093,24207,30044,24676,32110,23167,32490,32493,36713,21927,23459,24748,26059,29572,34988,34990,34991,34992,34994,34995,34996,34997,34998,35e3,35001,35002,35003,35005,35006,35007,35008,35011,35012,35015,35016,35018,35019,35020,35021,35023,35024,35025,35027,35030,35031,35034,35035,35036,35037,35038,35040,35041,35046,35047,35049,35050,35051,35052,35053,35054,35055,35058,35061,35062,35063,35066,35067,35069,35071,35072,35073,35075,35076,35077,35078,35079,35080,35081,35083,35084,35085,35086,35087,35089,35092,35093,35094,35095,35096,35100,35101,35102,35103,35104,35106,35107,35108,35110,35111,35112,35113,35116,35117,35118,35119,35121,35122,35123,35125,35127,36873,30307,30505,32474,38772,34203,23398,31348,38634,34880,21195,29071,24490,26092,35810,23547,39535,24033,27529,27739,35757,35759,36874,36805,21387,25276,40486,40493,21568,20011,33469,29273,34460,23830,34905,28079,38597,21713,20122,35766,28937,21693,38409,28895,28153,30416,20005,30740,34578,23721,24310,35328,39068,38414,28814,27839,22852,25513,30524,34893,28436,33395,22576,29141,21388,30746,38593,21761,24422,28976,23476,35866,39564,27523,22830,40495,31207,26472,25196,20335,30113,32650,27915,38451,27687,20208,30162,20859,26679,28478,36992,33136,22934,29814,35128,35129,35130,35131,35132,35133,35134,35135,35136,35138,35139,35141,35142,35143,35144,35145,35146,35147,35148,35149,35150,35151,35152,35153,35154,35155,35156,35157,35158,35159,35160,35161,35162,35163,35164,35165,35168,35169,35170,35171,35172,35173,35175,35176,35177,35178,35179,35180,35181,35182,35183,35184,35185,35186,35187,35188,35189,35190,35191,35192,35193,35194,35196,35197,35198,35200,35202,35204,35205,35207,35208,35209,35210,35211,35212,35213,35214,35215,35216,35217,35218,35219,35220,35221,35222,35223,35224,35225,35226,35227,35228,35229,35230,35231,35232,35233,25671,23591,36965,31377,35875,23002,21676,33280,33647,35201,32768,26928,22094,32822,29239,37326,20918,20063,39029,25494,19994,21494,26355,33099,22812,28082,19968,22777,21307,25558,38129,20381,20234,34915,39056,22839,36951,31227,20202,33008,30097,27778,23452,23016,24413,26885,34433,20506,24050,20057,30691,20197,33402,25233,26131,37009,23673,20159,24441,33222,36920,32900,30123,20134,35028,24847,27589,24518,20041,30410,28322,35811,35758,35850,35793,24322,32764,32716,32462,33589,33643,22240,27575,38899,38452,23035,21535,38134,28139,23493,39278,23609,24341,38544,35234,35235,35236,35237,35238,35239,35240,35241,35242,35243,35244,35245,35246,35247,35248,35249,35250,35251,35252,35253,35254,35255,35256,35257,35258,35259,35260,35261,35262,35263,35264,35267,35277,35283,35284,35285,35287,35288,35289,35291,35293,35295,35296,35297,35298,35300,35303,35304,35305,35306,35308,35309,35310,35312,35313,35314,35316,35317,35318,35319,35320,35321,35322,35323,35324,35325,35326,35327,35329,35330,35331,35332,35333,35334,35336,35337,35338,35339,35340,35341,35342,35343,35344,35345,35346,35347,35348,35349,35350,35351,35352,35353,35354,35355,35356,35357,21360,33521,27185,23156,40560,24212,32552,33721,33828,33829,33639,34631,36814,36194,30408,24433,39062,30828,26144,21727,25317,20323,33219,30152,24248,38605,36362,34553,21647,27891,28044,27704,24703,21191,29992,24189,20248,24736,24551,23588,30001,37038,38080,29369,27833,28216,37193,26377,21451,21491,20305,37321,35825,21448,24188,36802,28132,20110,30402,27014,34398,24858,33286,20313,20446,36926,40060,24841,28189,28180,38533,20104,23089,38632,19982,23679,31161,23431,35821,32701,29577,22495,33419,37057,21505,36935,21947,23786,24481,24840,27442,29425,32946,35465,35358,35359,35360,35361,35362,35363,35364,35365,35366,35367,35368,35369,35370,35371,35372,35373,35374,35375,35376,35377,35378,35379,35380,35381,35382,35383,35384,35385,35386,35387,35388,35389,35391,35392,35393,35394,35395,35396,35397,35398,35399,35401,35402,35403,35404,35405,35406,35407,35408,35409,35410,35411,35412,35413,35414,35415,35416,35417,35418,35419,35420,35421,35422,35423,35424,35425,35426,35427,35428,35429,35430,35431,35432,35433,35434,35435,35436,35437,35438,35439,35440,35441,35442,35443,35444,35445,35446,35447,35448,35450,35451,35452,35453,35454,35455,35456,28020,23507,35029,39044,35947,39533,40499,28170,20900,20803,22435,34945,21407,25588,36757,22253,21592,22278,29503,28304,32536,36828,33489,24895,24616,38498,26352,32422,36234,36291,38053,23731,31908,26376,24742,38405,32792,20113,37095,21248,38504,20801,36816,34164,37213,26197,38901,23381,21277,30776,26434,26685,21705,28798,23472,36733,20877,22312,21681,25874,26242,36190,36163,33039,33900,36973,31967,20991,34299,26531,26089,28577,34468,36481,22122,36896,30338,28790,29157,36131,25321,21017,27901,36156,24590,22686,24974,26366,36192,25166,21939,28195,26413,36711,35457,35458,35459,35460,35461,35462,35463,35464,35467,35468,35469,35470,35471,35472,35473,35474,35476,35477,35478,35479,35480,35481,35482,35483,35484,35485,35486,35487,35488,35489,35490,35491,35492,35493,35494,35495,35496,35497,35498,35499,35500,35501,35502,35503,35504,35505,35506,35507,35508,35509,35510,35511,35512,35513,35514,35515,35516,35517,35518,35519,35520,35521,35522,35523,35524,35525,35526,35527,35528,35529,35530,35531,35532,35533,35534,35535,35536,35537,35538,35539,35540,35541,35542,35543,35544,35545,35546,35547,35548,35549,35550,35551,35552,35553,35554,35555,38113,38392,30504,26629,27048,21643,20045,28856,35784,25688,25995,23429,31364,20538,23528,30651,27617,35449,31896,27838,30415,26025,36759,23853,23637,34360,26632,21344,25112,31449,28251,32509,27167,31456,24432,28467,24352,25484,28072,26454,19976,24080,36134,20183,32960,30260,38556,25307,26157,25214,27836,36213,29031,32617,20806,32903,21484,36974,25240,21746,34544,36761,32773,38167,34071,36825,27993,29645,26015,30495,29956,30759,33275,36126,38024,20390,26517,30137,35786,38663,25391,38215,38453,33976,25379,30529,24449,29424,20105,24596,25972,25327,27491,25919,35556,35557,35558,35559,35560,35561,35562,35563,35564,35565,35566,35567,35568,35569,35570,35571,35572,35573,35574,35575,35576,35577,35578,35579,35580,35581,35582,35583,35584,35585,35586,35587,35588,35589,35590,35592,35593,35594,35595,35596,35597,35598,35599,35600,35601,35602,35603,35604,35605,35606,35607,35608,35609,35610,35611,35612,35613,35614,35615,35616,35617,35618,35619,35620,35621,35623,35624,35625,35626,35627,35628,35629,35630,35631,35632,35633,35634,35635,35636,35637,35638,35639,35640,35641,35642,35643,35644,35645,35646,35647,35648,35649,35650,35651,35652,35653,24103,30151,37073,35777,33437,26525,25903,21553,34584,30693,32930,33026,27713,20043,32455,32844,30452,26893,27542,25191,20540,20356,22336,25351,27490,36286,21482,26088,32440,24535,25370,25527,33267,33268,32622,24092,23769,21046,26234,31209,31258,36136,28825,30164,28382,27835,31378,20013,30405,24544,38047,34935,32456,31181,32959,37325,20210,20247,33311,21608,24030,27954,35788,31909,36724,32920,24090,21650,30385,23449,26172,39588,29664,26666,34523,26417,29482,35832,35803,36880,31481,28891,29038,25284,30633,22065,20027,33879,26609,21161,34496,36142,38136,31569,35654,35655,35656,35657,35658,35659,35660,35661,35662,35663,35664,35665,35666,35667,35668,35669,35670,35671,35672,35673,35674,35675,35676,35677,35678,35679,35680,35681,35682,35683,35684,35685,35687,35688,35689,35690,35691,35693,35694,35695,35696,35697,35698,35699,35700,35701,35702,35703,35704,35705,35706,35707,35708,35709,35710,35711,35712,35713,35714,35715,35716,35717,35718,35719,35720,35721,35722,35723,35724,35725,35726,35727,35728,35729,35730,35731,35732,35733,35734,35735,35736,35737,35738,35739,35740,35741,35742,35743,35756,35761,35771,35783,35792,35818,35849,35870,20303,27880,31069,39547,25235,29226,25341,19987,30742,36716,25776,36186,31686,26729,24196,35013,22918,25758,22766,29366,26894,38181,36861,36184,22368,32512,35846,20934,25417,25305,21331,26700,29730,33537,37196,21828,30528,28796,27978,20857,21672,36164,23039,28363,28100,23388,32043,20180,31869,28371,23376,33258,28173,23383,39683,26837,36394,23447,32508,24635,32437,37049,36208,22863,25549,31199,36275,21330,26063,31062,35781,38459,32452,38075,32386,22068,37257,26368,32618,23562,36981,26152,24038,20304,26590,20570,20316,22352,24231,59408,59409,59410,59411,59412,35896,35897,35898,35899,35900,35901,35902,35903,35904,35906,35907,35908,35909,35912,35914,35915,35917,35918,35919,35920,35921,35922,35923,35924,35926,35927,35928,35929,35931,35932,35933,35934,35935,35936,35939,35940,35941,35942,35943,35944,35945,35948,35949,35950,35951,35952,35953,35954,35956,35957,35958,35959,35963,35964,35965,35966,35967,35968,35969,35971,35972,35974,35975,35976,35979,35981,35982,35983,35984,35985,35986,35987,35989,35990,35991,35993,35994,35995,35996,35997,35998,35999,36e3,36001,36002,36003,36004,36005,36006,36007,36008,36009,36010,36011,36012,36013,20109,19980,20800,19984,24319,21317,19989,20120,19998,39730,23404,22121,20008,31162,20031,21269,20039,22829,29243,21358,27664,22239,32996,39319,27603,30590,40727,20022,20127,40720,20060,20073,20115,33416,23387,21868,22031,20164,21389,21405,21411,21413,21422,38757,36189,21274,21493,21286,21294,21310,36188,21350,21347,20994,21e3,21006,21037,21043,21055,21056,21068,21086,21089,21084,33967,21117,21122,21121,21136,21139,20866,32596,20155,20163,20169,20162,20200,20193,20203,20190,20251,20211,20258,20324,20213,20261,20263,20233,20267,20318,20327,25912,20314,20317,36014,36015,36016,36017,36018,36019,36020,36021,36022,36023,36024,36025,36026,36027,36028,36029,36030,36031,36032,36033,36034,36035,36036,36037,36038,36039,36040,36041,36042,36043,36044,36045,36046,36047,36048,36049,36050,36051,36052,36053,36054,36055,36056,36057,36058,36059,36060,36061,36062,36063,36064,36065,36066,36067,36068,36069,36070,36071,36072,36073,36074,36075,36076,36077,36078,36079,36080,36081,36082,36083,36084,36085,36086,36087,36088,36089,36090,36091,36092,36093,36094,36095,36096,36097,36098,36099,36100,36101,36102,36103,36104,36105,36106,36107,36108,36109,20319,20311,20274,20285,20342,20340,20369,20361,20355,20367,20350,20347,20394,20348,20396,20372,20454,20456,20458,20421,20442,20451,20444,20433,20447,20472,20521,20556,20467,20524,20495,20526,20525,20478,20508,20492,20517,20520,20606,20547,20565,20552,20558,20588,20603,20645,20647,20649,20666,20694,20742,20717,20716,20710,20718,20743,20747,20189,27709,20312,20325,20430,40864,27718,31860,20846,24061,40649,39320,20865,22804,21241,21261,35335,21264,20971,22809,20821,20128,20822,20147,34926,34980,20149,33044,35026,31104,23348,34819,32696,20907,20913,20925,20924,36110,36111,36112,36113,36114,36115,36116,36117,36118,36119,36120,36121,36122,36123,36124,36128,36177,36178,36183,36191,36197,36200,36201,36202,36204,36206,36207,36209,36210,36216,36217,36218,36219,36220,36221,36222,36223,36224,36226,36227,36230,36231,36232,36233,36236,36237,36238,36239,36240,36242,36243,36245,36246,36247,36248,36249,36250,36251,36252,36253,36254,36256,36257,36258,36260,36261,36262,36263,36264,36265,36266,36267,36268,36269,36270,36271,36272,36274,36278,36279,36281,36283,36285,36288,36289,36290,36293,36295,36296,36297,36298,36301,36304,36306,36307,36308,20935,20886,20898,20901,35744,35750,35751,35754,35764,35765,35767,35778,35779,35787,35791,35790,35794,35795,35796,35798,35800,35801,35804,35807,35808,35812,35816,35817,35822,35824,35827,35830,35833,35836,35839,35840,35842,35844,35847,35852,35855,35857,35858,35860,35861,35862,35865,35867,35864,35869,35871,35872,35873,35877,35879,35882,35883,35886,35887,35890,35891,35893,35894,21353,21370,38429,38434,38433,38449,38442,38461,38460,38466,38473,38484,38495,38503,38508,38514,38516,38536,38541,38551,38576,37015,37019,37021,37017,37036,37025,37044,37043,37046,37050,36309,36312,36313,36316,36320,36321,36322,36325,36326,36327,36329,36333,36334,36336,36337,36338,36340,36342,36348,36350,36351,36352,36353,36354,36355,36356,36358,36359,36360,36363,36365,36366,36368,36369,36370,36371,36373,36374,36375,36376,36377,36378,36379,36380,36384,36385,36388,36389,36390,36391,36392,36395,36397,36400,36402,36403,36404,36406,36407,36408,36411,36412,36414,36415,36419,36421,36422,36428,36429,36430,36431,36432,36435,36436,36437,36438,36439,36440,36442,36443,36444,36445,36446,36447,36448,36449,36450,36451,36452,36453,36455,36456,36458,36459,36462,36465,37048,37040,37071,37061,37054,37072,37060,37063,37075,37094,37090,37084,37079,37083,37099,37103,37118,37124,37154,37150,37155,37169,37167,37177,37187,37190,21005,22850,21154,21164,21165,21182,21759,21200,21206,21232,21471,29166,30669,24308,20981,20988,39727,21430,24321,30042,24047,22348,22441,22433,22654,22716,22725,22737,22313,22316,22314,22323,22329,22318,22319,22364,22331,22338,22377,22405,22379,22406,22396,22395,22376,22381,22390,22387,22445,22436,22412,22450,22479,22439,22452,22419,22432,22485,22488,22490,22489,22482,22456,22516,22511,22520,22500,22493,36467,36469,36471,36472,36473,36474,36475,36477,36478,36480,36482,36483,36484,36486,36488,36489,36490,36491,36492,36493,36494,36497,36498,36499,36501,36502,36503,36504,36505,36506,36507,36509,36511,36512,36513,36514,36515,36516,36517,36518,36519,36520,36521,36522,36525,36526,36528,36529,36531,36532,36533,36534,36535,36536,36537,36539,36540,36541,36542,36543,36544,36545,36546,36547,36548,36549,36550,36551,36552,36553,36554,36555,36556,36557,36559,36560,36561,36562,36563,36564,36565,36566,36567,36568,36569,36570,36571,36572,36573,36574,36575,36576,36577,36578,36579,36580,22539,22541,22525,22509,22528,22558,22553,22596,22560,22629,22636,22657,22665,22682,22656,39336,40729,25087,33401,33405,33407,33423,33418,33448,33412,33422,33425,33431,33433,33451,33464,33470,33456,33480,33482,33507,33432,33463,33454,33483,33484,33473,33449,33460,33441,33450,33439,33476,33486,33444,33505,33545,33527,33508,33551,33543,33500,33524,33490,33496,33548,33531,33491,33553,33562,33542,33556,33557,33504,33493,33564,33617,33627,33628,33544,33682,33596,33588,33585,33691,33630,33583,33615,33607,33603,33631,33600,33559,33632,33581,33594,33587,33638,33637,36581,36582,36583,36584,36585,36586,36587,36588,36589,36590,36591,36592,36593,36594,36595,36596,36597,36598,36599,36600,36601,36602,36603,36604,36605,36606,36607,36608,36609,36610,36611,36612,36613,36614,36615,36616,36617,36618,36619,36620,36621,36622,36623,36624,36625,36626,36627,36628,36629,36630,36631,36632,36633,36634,36635,36636,36637,36638,36639,36640,36641,36642,36643,36644,36645,36646,36647,36648,36649,36650,36651,36652,36653,36654,36655,36656,36657,36658,36659,36660,36661,36662,36663,36664,36665,36666,36667,36668,36669,36670,36671,36672,36673,36674,36675,36676,33640,33563,33641,33644,33642,33645,33646,33712,33656,33715,33716,33696,33706,33683,33692,33669,33660,33718,33705,33661,33720,33659,33688,33694,33704,33722,33724,33729,33793,33765,33752,22535,33816,33803,33757,33789,33750,33820,33848,33809,33798,33748,33759,33807,33795,33784,33785,33770,33733,33728,33830,33776,33761,33884,33873,33882,33881,33907,33927,33928,33914,33929,33912,33852,33862,33897,33910,33932,33934,33841,33901,33985,33997,34e3,34022,33981,34003,33994,33983,33978,34016,33953,33977,33972,33943,34021,34019,34060,29965,34104,34032,34105,34079,34106,36677,36678,36679,36680,36681,36682,36683,36684,36685,36686,36687,36688,36689,36690,36691,36692,36693,36694,36695,36696,36697,36698,36699,36700,36701,36702,36703,36704,36705,36706,36707,36708,36709,36714,36736,36748,36754,36765,36768,36769,36770,36772,36773,36774,36775,36778,36780,36781,36782,36783,36786,36787,36788,36789,36791,36792,36794,36795,36796,36799,36800,36803,36806,36809,36810,36811,36812,36813,36815,36818,36822,36823,36826,36832,36833,36835,36839,36844,36847,36849,36850,36852,36853,36854,36858,36859,36860,36862,36863,36871,36872,36876,36878,36883,36885,36888,34134,34107,34047,34044,34137,34120,34152,34148,34142,34170,30626,34115,34162,34171,34212,34216,34183,34191,34169,34222,34204,34181,34233,34231,34224,34259,34241,34268,34303,34343,34309,34345,34326,34364,24318,24328,22844,22849,32823,22869,22874,22872,21263,23586,23589,23596,23604,25164,25194,25247,25275,25290,25306,25303,25326,25378,25334,25401,25419,25411,25517,25590,25457,25466,25486,25524,25453,25516,25482,25449,25518,25532,25586,25592,25568,25599,25540,25566,25550,25682,25542,25534,25669,25665,25611,25627,25632,25612,25638,25633,25694,25732,25709,25750,36889,36892,36899,36900,36901,36903,36904,36905,36906,36907,36908,36912,36913,36914,36915,36916,36919,36921,36922,36925,36927,36928,36931,36933,36934,36936,36937,36938,36939,36940,36942,36948,36949,36950,36953,36954,36956,36957,36958,36959,36960,36961,36964,36966,36967,36969,36970,36971,36972,36975,36976,36977,36978,36979,36982,36983,36984,36985,36986,36987,36988,36990,36993,36996,36997,36998,36999,37001,37002,37004,37005,37006,37007,37008,37010,37012,37014,37016,37018,37020,37022,37023,37024,37028,37029,37031,37032,37033,37035,37037,37042,37047,37052,37053,37055,37056,25722,25783,25784,25753,25786,25792,25808,25815,25828,25826,25865,25893,25902,24331,24530,29977,24337,21343,21489,21501,21481,21480,21499,21522,21526,21510,21579,21586,21587,21588,21590,21571,21537,21591,21593,21539,21554,21634,21652,21623,21617,21604,21658,21659,21636,21622,21606,21661,21712,21677,21698,21684,21714,21671,21670,21715,21716,21618,21667,21717,21691,21695,21708,21721,21722,21724,21673,21674,21668,21725,21711,21726,21787,21735,21792,21757,21780,21747,21794,21795,21775,21777,21799,21802,21863,21903,21941,21833,21869,21825,21845,21823,21840,21820,37058,37059,37062,37064,37065,37067,37068,37069,37074,37076,37077,37078,37080,37081,37082,37086,37087,37088,37091,37092,37093,37097,37098,37100,37102,37104,37105,37106,37107,37109,37110,37111,37113,37114,37115,37116,37119,37120,37121,37123,37125,37126,37127,37128,37129,37130,37131,37132,37133,37134,37135,37136,37137,37138,37139,37140,37141,37142,37143,37144,37146,37147,37148,37149,37151,37152,37153,37156,37157,37158,37159,37160,37161,37162,37163,37164,37165,37166,37168,37170,37171,37172,37173,37174,37175,37176,37178,37179,37180,37181,37182,37183,37184,37185,37186,37188,21815,21846,21877,21878,21879,21811,21808,21852,21899,21970,21891,21937,21945,21896,21889,21919,21886,21974,21905,21883,21983,21949,21950,21908,21913,21994,22007,21961,22047,21969,21995,21996,21972,21990,21981,21956,21999,21989,22002,22003,21964,21965,21992,22005,21988,36756,22046,22024,22028,22017,22052,22051,22014,22016,22055,22061,22104,22073,22103,22060,22093,22114,22105,22108,22092,22100,22150,22116,22129,22123,22139,22140,22149,22163,22191,22228,22231,22237,22241,22261,22251,22265,22271,22276,22282,22281,22300,24079,24089,24084,24081,24113,24123,24124,37189,37191,37192,37201,37203,37204,37205,37206,37208,37209,37211,37212,37215,37216,37222,37223,37224,37227,37229,37235,37242,37243,37244,37248,37249,37250,37251,37252,37254,37256,37258,37262,37263,37267,37268,37269,37270,37271,37272,37273,37276,37277,37278,37279,37280,37281,37284,37285,37286,37287,37288,37289,37291,37292,37296,37297,37298,37299,37302,37303,37304,37305,37307,37308,37309,37310,37311,37312,37313,37314,37315,37316,37317,37318,37320,37323,37328,37330,37331,37332,37333,37334,37335,37336,37337,37338,37339,37341,37342,37343,37344,37345,37346,37347,37348,37349,24119,24132,24148,24155,24158,24161,23692,23674,23693,23696,23702,23688,23704,23705,23697,23706,23708,23733,23714,23741,23724,23723,23729,23715,23745,23735,23748,23762,23780,23755,23781,23810,23811,23847,23846,23854,23844,23838,23814,23835,23896,23870,23860,23869,23916,23899,23919,23901,23915,23883,23882,23913,23924,23938,23961,23965,35955,23991,24005,24435,24439,24450,24455,24457,24460,24469,24473,24476,24488,24493,24501,24508,34914,24417,29357,29360,29364,29367,29368,29379,29377,29390,29389,29394,29416,29423,29417,29426,29428,29431,29441,29427,29443,29434,37350,37351,37352,37353,37354,37355,37356,37357,37358,37359,37360,37361,37362,37363,37364,37365,37366,37367,37368,37369,37370,37371,37372,37373,37374,37375,37376,37377,37378,37379,37380,37381,37382,37383,37384,37385,37386,37387,37388,37389,37390,37391,37392,37393,37394,37395,37396,37397,37398,37399,37400,37401,37402,37403,37404,37405,37406,37407,37408,37409,37410,37411,37412,37413,37414,37415,37416,37417,37418,37419,37420,37421,37422,37423,37424,37425,37426,37427,37428,37429,37430,37431,37432,37433,37434,37435,37436,37437,37438,37439,37440,37441,37442,37443,37444,37445,29435,29463,29459,29473,29450,29470,29469,29461,29474,29497,29477,29484,29496,29489,29520,29517,29527,29536,29548,29551,29566,33307,22821,39143,22820,22786,39267,39271,39272,39273,39274,39275,39276,39284,39287,39293,39296,39300,39303,39306,39309,39312,39313,39315,39316,39317,24192,24209,24203,24214,24229,24224,24249,24245,24254,24243,36179,24274,24273,24283,24296,24298,33210,24516,24521,24534,24527,24579,24558,24580,24545,24548,24574,24581,24582,24554,24557,24568,24601,24629,24614,24603,24591,24589,24617,24619,24586,24639,24609,24696,24697,24699,24698,24642,37446,37447,37448,37449,37450,37451,37452,37453,37454,37455,37456,37457,37458,37459,37460,37461,37462,37463,37464,37465,37466,37467,37468,37469,37470,37471,37472,37473,37474,37475,37476,37477,37478,37479,37480,37481,37482,37483,37484,37485,37486,37487,37488,37489,37490,37491,37493,37494,37495,37496,37497,37498,37499,37500,37501,37502,37503,37504,37505,37506,37507,37508,37509,37510,37511,37512,37513,37514,37515,37516,37517,37519,37520,37521,37522,37523,37524,37525,37526,37527,37528,37529,37530,37531,37532,37533,37534,37535,37536,37537,37538,37539,37540,37541,37542,37543,24682,24701,24726,24730,24749,24733,24707,24722,24716,24731,24812,24763,24753,24797,24792,24774,24794,24756,24864,24870,24853,24867,24820,24832,24846,24875,24906,24949,25004,24980,24999,25015,25044,25077,24541,38579,38377,38379,38385,38387,38389,38390,38396,38398,38403,38404,38406,38408,38410,38411,38412,38413,38415,38418,38421,38422,38423,38425,38426,20012,29247,25109,27701,27732,27740,27722,27811,27781,27792,27796,27788,27752,27753,27764,27766,27782,27817,27856,27860,27821,27895,27896,27889,27863,27826,27872,27862,27898,27883,27886,27825,27859,27887,27902,37544,37545,37546,37547,37548,37549,37551,37552,37553,37554,37555,37556,37557,37558,37559,37560,37561,37562,37563,37564,37565,37566,37567,37568,37569,37570,37571,37572,37573,37574,37575,37577,37578,37579,37580,37581,37582,37583,37584,37585,37586,37587,37588,37589,37590,37591,37592,37593,37594,37595,37596,37597,37598,37599,37600,37601,37602,37603,37604,37605,37606,37607,37608,37609,37610,37611,37612,37613,37614,37615,37616,37617,37618,37619,37620,37621,37622,37623,37624,37625,37626,37627,37628,37629,37630,37631,37632,37633,37634,37635,37636,37637,37638,37639,37640,37641,27961,27943,27916,27971,27976,27911,27908,27929,27918,27947,27981,27950,27957,27930,27983,27986,27988,27955,28049,28015,28062,28064,27998,28051,28052,27996,28e3,28028,28003,28186,28103,28101,28126,28174,28095,28128,28177,28134,28125,28121,28182,28075,28172,28078,28203,28270,28238,28267,28338,28255,28294,28243,28244,28210,28197,28228,28383,28337,28312,28384,28461,28386,28325,28327,28349,28347,28343,28375,28340,28367,28303,28354,28319,28514,28486,28487,28452,28437,28409,28463,28470,28491,28532,28458,28425,28457,28553,28557,28556,28536,28530,28540,28538,28625,37642,37643,37644,37645,37646,37647,37648,37649,37650,37651,37652,37653,37654,37655,37656,37657,37658,37659,37660,37661,37662,37663,37664,37665,37666,37667,37668,37669,37670,37671,37672,37673,37674,37675,37676,37677,37678,37679,37680,37681,37682,37683,37684,37685,37686,37687,37688,37689,37690,37691,37692,37693,37695,37696,37697,37698,37699,37700,37701,37702,37703,37704,37705,37706,37707,37708,37709,37710,37711,37712,37713,37714,37715,37716,37717,37718,37719,37720,37721,37722,37723,37724,37725,37726,37727,37728,37729,37730,37731,37732,37733,37734,37735,37736,37737,37739,28617,28583,28601,28598,28610,28641,28654,28638,28640,28655,28698,28707,28699,28729,28725,28751,28766,23424,23428,23445,23443,23461,23480,29999,39582,25652,23524,23534,35120,23536,36423,35591,36790,36819,36821,36837,36846,36836,36841,36838,36851,36840,36869,36868,36875,36902,36881,36877,36886,36897,36917,36918,36909,36911,36932,36945,36946,36944,36968,36952,36962,36955,26297,36980,36989,36994,37e3,36995,37003,24400,24407,24406,24408,23611,21675,23632,23641,23409,23651,23654,32700,24362,24361,24365,33396,24380,39739,23662,22913,22915,22925,22953,22954,22947,37740,37741,37742,37743,37744,37745,37746,37747,37748,37749,37750,37751,37752,37753,37754,37755,37756,37757,37758,37759,37760,37761,37762,37763,37764,37765,37766,37767,37768,37769,37770,37771,37772,37773,37774,37776,37777,37778,37779,37780,37781,37782,37783,37784,37785,37786,37787,37788,37789,37790,37791,37792,37793,37794,37795,37796,37797,37798,37799,37800,37801,37802,37803,37804,37805,37806,37807,37808,37809,37810,37811,37812,37813,37814,37815,37816,37817,37818,37819,37820,37821,37822,37823,37824,37825,37826,37827,37828,37829,37830,37831,37832,37833,37835,37836,37837,22935,22986,22955,22942,22948,22994,22962,22959,22999,22974,23045,23046,23005,23048,23011,23e3,23033,23052,23049,23090,23092,23057,23075,23059,23104,23143,23114,23125,23100,23138,23157,33004,23210,23195,23159,23162,23230,23275,23218,23250,23252,23224,23264,23267,23281,23254,23270,23256,23260,23305,23319,23318,23346,23351,23360,23573,23580,23386,23397,23411,23377,23379,23394,39541,39543,39544,39546,39551,39549,39552,39553,39557,39560,39562,39568,39570,39571,39574,39576,39579,39580,39581,39583,39584,39586,39587,39589,39591,32415,32417,32419,32421,32424,32425,37838,37839,37840,37841,37842,37843,37844,37845,37847,37848,37849,37850,37851,37852,37853,37854,37855,37856,37857,37858,37859,37860,37861,37862,37863,37864,37865,37866,37867,37868,37869,37870,37871,37872,37873,37874,37875,37876,37877,37878,37879,37880,37881,37882,37883,37884,37885,37886,37887,37888,37889,37890,37891,37892,37893,37894,37895,37896,37897,37898,37899,37900,37901,37902,37903,37904,37905,37906,37907,37908,37909,37910,37911,37912,37913,37914,37915,37916,37917,37918,37919,37920,37921,37922,37923,37924,37925,37926,37927,37928,37929,37930,37931,37932,37933,37934,32429,32432,32446,32448,32449,32450,32457,32459,32460,32464,32468,32471,32475,32480,32481,32488,32491,32494,32495,32497,32498,32525,32502,32506,32507,32510,32513,32514,32515,32519,32520,32523,32524,32527,32529,32530,32535,32537,32540,32539,32543,32545,32546,32547,32548,32549,32550,32551,32554,32555,32556,32557,32559,32560,32561,32562,32563,32565,24186,30079,24027,30014,37013,29582,29585,29614,29602,29599,29647,29634,29649,29623,29619,29632,29641,29640,29669,29657,39036,29706,29673,29671,29662,29626,29682,29711,29738,29787,29734,29733,29736,29744,29742,29740,37935,37936,37937,37938,37939,37940,37941,37942,37943,37944,37945,37946,37947,37948,37949,37951,37952,37953,37954,37955,37956,37957,37958,37959,37960,37961,37962,37963,37964,37965,37966,37967,37968,37969,37970,37971,37972,37973,37974,37975,37976,37977,37978,37979,37980,37981,37982,37983,37984,37985,37986,37987,37988,37989,37990,37991,37992,37993,37994,37996,37997,37998,37999,38e3,38001,38002,38003,38004,38005,38006,38007,38008,38009,38010,38011,38012,38013,38014,38015,38016,38017,38018,38019,38020,38033,38038,38040,38087,38095,38099,38100,38106,38118,38139,38172,38176,29723,29722,29761,29788,29783,29781,29785,29815,29805,29822,29852,29838,29824,29825,29831,29835,29854,29864,29865,29840,29863,29906,29882,38890,38891,38892,26444,26451,26462,26440,26473,26533,26503,26474,26483,26520,26535,26485,26536,26526,26541,26507,26487,26492,26608,26633,26584,26634,26601,26544,26636,26585,26549,26586,26547,26589,26624,26563,26552,26594,26638,26561,26621,26674,26675,26720,26721,26702,26722,26692,26724,26755,26653,26709,26726,26689,26727,26688,26686,26698,26697,26665,26805,26767,26740,26743,26771,26731,26818,26990,26876,26911,26912,26873,38183,38195,38205,38211,38216,38219,38229,38234,38240,38254,38260,38261,38263,38264,38265,38266,38267,38268,38269,38270,38272,38273,38274,38275,38276,38277,38278,38279,38280,38281,38282,38283,38284,38285,38286,38287,38288,38289,38290,38291,38292,38293,38294,38295,38296,38297,38298,38299,38300,38301,38302,38303,38304,38305,38306,38307,38308,38309,38310,38311,38312,38313,38314,38315,38316,38317,38318,38319,38320,38321,38322,38323,38324,38325,38326,38327,38328,38329,38330,38331,38332,38333,38334,38335,38336,38337,38338,38339,38340,38341,38342,38343,38344,38345,38346,38347,26916,26864,26891,26881,26967,26851,26896,26993,26937,26976,26946,26973,27012,26987,27008,27032,27e3,26932,27084,27015,27016,27086,27017,26982,26979,27001,27035,27047,27067,27051,27053,27092,27057,27073,27082,27103,27029,27104,27021,27135,27183,27117,27159,27160,27237,27122,27204,27198,27296,27216,27227,27189,27278,27257,27197,27176,27224,27260,27281,27280,27305,27287,27307,29495,29522,27521,27522,27527,27524,27538,27539,27533,27546,27547,27553,27562,36715,36717,36721,36722,36723,36725,36726,36728,36727,36729,36730,36732,36734,36737,36738,36740,36743,36747,38348,38349,38350,38351,38352,38353,38354,38355,38356,38357,38358,38359,38360,38361,38362,38363,38364,38365,38366,38367,38368,38369,38370,38371,38372,38373,38374,38375,38380,38399,38407,38419,38424,38427,38430,38432,38435,38436,38437,38438,38439,38440,38441,38443,38444,38445,38447,38448,38455,38456,38457,38458,38462,38465,38467,38474,38478,38479,38481,38482,38483,38486,38487,38488,38489,38490,38492,38493,38494,38496,38499,38501,38502,38507,38509,38510,38511,38512,38513,38515,38520,38521,38522,38523,38524,38525,38526,38527,38528,38529,38530,38531,38532,38535,38537,38538,36749,36750,36751,36760,36762,36558,25099,25111,25115,25119,25122,25121,25125,25124,25132,33255,29935,29940,29951,29967,29969,29971,25908,26094,26095,26096,26122,26137,26482,26115,26133,26112,28805,26359,26141,26164,26161,26166,26165,32774,26207,26196,26177,26191,26198,26209,26199,26231,26244,26252,26279,26269,26302,26331,26332,26342,26345,36146,36147,36150,36155,36157,36160,36165,36166,36168,36169,36167,36173,36181,36185,35271,35274,35275,35276,35278,35279,35280,35281,29294,29343,29277,29286,29295,29310,29311,29316,29323,29325,29327,29330,25352,25394,25520,38540,38542,38545,38546,38547,38549,38550,38554,38555,38557,38558,38559,38560,38561,38562,38563,38564,38565,38566,38568,38569,38570,38571,38572,38573,38574,38575,38577,38578,38580,38581,38583,38584,38586,38587,38591,38594,38595,38600,38602,38603,38608,38609,38611,38612,38614,38615,38616,38617,38618,38619,38620,38621,38622,38623,38625,38626,38627,38628,38629,38630,38631,38635,38636,38637,38638,38640,38641,38642,38644,38645,38648,38650,38651,38652,38653,38655,38658,38659,38661,38666,38667,38668,38672,38673,38674,38676,38677,38679,38680,38681,38682,38683,38685,38687,38688,25663,25816,32772,27626,27635,27645,27637,27641,27653,27655,27654,27661,27669,27672,27673,27674,27681,27689,27684,27690,27698,25909,25941,25963,29261,29266,29270,29232,34402,21014,32927,32924,32915,32956,26378,32957,32945,32939,32941,32948,32951,32999,33e3,33001,33002,32987,32962,32964,32985,32973,32983,26384,32989,33003,33009,33012,33005,33037,33038,33010,33020,26389,33042,35930,33078,33054,33068,33048,33074,33096,33100,33107,33140,33113,33114,33137,33120,33129,33148,33149,33133,33127,22605,23221,33160,33154,33169,28373,33187,33194,33228,26406,33226,33211,38689,38690,38691,38692,38693,38694,38695,38696,38697,38699,38700,38702,38703,38705,38707,38708,38709,38710,38711,38714,38715,38716,38717,38719,38720,38721,38722,38723,38724,38725,38726,38727,38728,38729,38730,38731,38732,38733,38734,38735,38736,38737,38740,38741,38743,38744,38746,38748,38749,38751,38755,38756,38758,38759,38760,38762,38763,38764,38765,38766,38767,38768,38769,38770,38773,38775,38776,38777,38778,38779,38781,38782,38783,38784,38785,38786,38787,38788,38790,38791,38792,38793,38794,38796,38798,38799,38800,38803,38805,38806,38807,38809,38810,38811,38812,38813,33217,33190,27428,27447,27449,27459,27462,27481,39121,39122,39123,39125,39129,39130,27571,24384,27586,35315,26e3,40785,26003,26044,26054,26052,26051,26060,26062,26066,26070,28800,28828,28822,28829,28859,28864,28855,28843,28849,28904,28874,28944,28947,28950,28975,28977,29043,29020,29032,28997,29042,29002,29048,29050,29080,29107,29109,29096,29088,29152,29140,29159,29177,29213,29224,28780,28952,29030,29113,25150,25149,25155,25160,25161,31035,31040,31046,31049,31067,31068,31059,31066,31074,31063,31072,31087,31079,31098,31109,31114,31130,31143,31155,24529,24528,38814,38815,38817,38818,38820,38821,38822,38823,38824,38825,38826,38828,38830,38832,38833,38835,38837,38838,38839,38840,38841,38842,38843,38844,38845,38846,38847,38848,38849,38850,38851,38852,38853,38854,38855,38856,38857,38858,38859,38860,38861,38862,38863,38864,38865,38866,38867,38868,38869,38870,38871,38872,38873,38874,38875,38876,38877,38878,38879,38880,38881,38882,38883,38884,38885,38888,38894,38895,38896,38897,38898,38900,38903,38904,38905,38906,38907,38908,38909,38910,38911,38912,38913,38914,38915,38916,38917,38918,38919,38920,38921,38922,38923,38924,38925,38926,24636,24669,24666,24679,24641,24665,24675,24747,24838,24845,24925,25001,24989,25035,25041,25094,32896,32895,27795,27894,28156,30710,30712,30720,30729,30743,30744,30737,26027,30765,30748,30749,30777,30778,30779,30751,30780,30757,30764,30755,30761,30798,30829,30806,30807,30758,30800,30791,30796,30826,30875,30867,30874,30855,30876,30881,30883,30898,30905,30885,30932,30937,30921,30956,30962,30981,30964,30995,31012,31006,31028,40859,40697,40699,40700,30449,30468,30477,30457,30471,30472,30490,30498,30489,30509,30502,30517,30520,30544,30545,30535,30531,30554,30568,38927,38928,38929,38930,38931,38932,38933,38934,38935,38936,38937,38938,38939,38940,38941,38942,38943,38944,38945,38946,38947,38948,38949,38950,38951,38952,38953,38954,38955,38956,38957,38958,38959,38960,38961,38962,38963,38964,38965,38966,38967,38968,38969,38970,38971,38972,38973,38974,38975,38976,38977,38978,38979,38980,38981,38982,38983,38984,38985,38986,38987,38988,38989,38990,38991,38992,38993,38994,38995,38996,38997,38998,38999,39e3,39001,39002,39003,39004,39005,39006,39007,39008,39009,39010,39011,39012,39013,39014,39015,39016,39017,39018,39019,39020,39021,39022,30562,30565,30591,30605,30589,30592,30604,30609,30623,30624,30640,30645,30653,30010,30016,30030,30027,30024,30043,30066,30073,30083,32600,32609,32607,35400,32616,32628,32625,32633,32641,32638,30413,30437,34866,38021,38022,38023,38027,38026,38028,38029,38031,38032,38036,38039,38037,38042,38043,38044,38051,38052,38059,38058,38061,38060,38063,38064,38066,38068,38070,38071,38072,38073,38074,38076,38077,38079,38084,38088,38089,38090,38091,38092,38093,38094,38096,38097,38098,38101,38102,38103,38105,38104,38107,38110,38111,38112,38114,38116,38117,38119,38120,38122,39023,39024,39025,39026,39027,39028,39051,39054,39058,39061,39065,39075,39080,39081,39082,39083,39084,39085,39086,39087,39088,39089,39090,39091,39092,39093,39094,39095,39096,39097,39098,39099,39100,39101,39102,39103,39104,39105,39106,39107,39108,39109,39110,39111,39112,39113,39114,39115,39116,39117,39119,39120,39124,39126,39127,39131,39132,39133,39136,39137,39138,39139,39140,39141,39142,39145,39146,39147,39148,39149,39150,39151,39152,39153,39154,39155,39156,39157,39158,39159,39160,39161,39162,39163,39164,39165,39166,39167,39168,39169,39170,39171,39172,39173,39174,39175,38121,38123,38126,38127,38131,38132,38133,38135,38137,38140,38141,38143,38147,38146,38150,38151,38153,38154,38157,38158,38159,38162,38163,38164,38165,38166,38168,38171,38173,38174,38175,38178,38186,38187,38185,38188,38193,38194,38196,38198,38199,38200,38204,38206,38207,38210,38197,38212,38213,38214,38217,38220,38222,38223,38226,38227,38228,38230,38231,38232,38233,38235,38238,38239,38237,38241,38242,38244,38245,38246,38247,38248,38249,38250,38251,38252,38255,38257,38258,38259,38202,30695,30700,38601,31189,31213,31203,31211,31238,23879,31235,31234,31262,31252,39176,39177,39178,39179,39180,39182,39183,39185,39186,39187,39188,39189,39190,39191,39192,39193,39194,39195,39196,39197,39198,39199,39200,39201,39202,39203,39204,39205,39206,39207,39208,39209,39210,39211,39212,39213,39215,39216,39217,39218,39219,39220,39221,39222,39223,39224,39225,39226,39227,39228,39229,39230,39231,39232,39233,39234,39235,39236,39237,39238,39239,39240,39241,39242,39243,39244,39245,39246,39247,39248,39249,39250,39251,39254,39255,39256,39257,39258,39259,39260,39261,39262,39263,39264,39265,39266,39268,39270,39283,39288,39289,39291,39294,39298,39299,39305,31289,31287,31313,40655,39333,31344,30344,30350,30355,30361,30372,29918,29920,29996,40480,40482,40488,40489,40490,40491,40492,40498,40497,40502,40504,40503,40505,40506,40510,40513,40514,40516,40518,40519,40520,40521,40523,40524,40526,40529,40533,40535,40538,40539,40540,40542,40547,40550,40551,40552,40553,40554,40555,40556,40561,40557,40563,30098,30100,30102,30112,30109,30124,30115,30131,30132,30136,30148,30129,30128,30147,30146,30166,30157,30179,30184,30182,30180,30187,30183,30211,30193,30204,30207,30224,30208,30213,30220,30231,30218,30245,30232,30229,30233,39308,39310,39322,39323,39324,39325,39326,39327,39328,39329,39330,39331,39332,39334,39335,39337,39338,39339,39340,39341,39342,39343,39344,39345,39346,39347,39348,39349,39350,39351,39352,39353,39354,39355,39356,39357,39358,39359,39360,39361,39362,39363,39364,39365,39366,39367,39368,39369,39370,39371,39372,39373,39374,39375,39376,39377,39378,39379,39380,39381,39382,39383,39384,39385,39386,39387,39388,39389,39390,39391,39392,39393,39394,39395,39396,39397,39398,39399,39400,39401,39402,39403,39404,39405,39406,39407,39408,39409,39410,39411,39412,39413,39414,39415,39416,39417,30235,30268,30242,30240,30272,30253,30256,30271,30261,30275,30270,30259,30285,30302,30292,30300,30294,30315,30319,32714,31462,31352,31353,31360,31366,31368,31381,31398,31392,31404,31400,31405,31411,34916,34921,34930,34941,34943,34946,34978,35014,34999,35004,35017,35042,35022,35043,35045,35057,35098,35068,35048,35070,35056,35105,35097,35091,35099,35082,35124,35115,35126,35137,35174,35195,30091,32997,30386,30388,30684,32786,32788,32790,32796,32800,32802,32805,32806,32807,32809,32808,32817,32779,32821,32835,32838,32845,32850,32873,32881,35203,39032,39040,39043,39418,39419,39420,39421,39422,39423,39424,39425,39426,39427,39428,39429,39430,39431,39432,39433,39434,39435,39436,39437,39438,39439,39440,39441,39442,39443,39444,39445,39446,39447,39448,39449,39450,39451,39452,39453,39454,39455,39456,39457,39458,39459,39460,39461,39462,39463,39464,39465,39466,39467,39468,39469,39470,39471,39472,39473,39474,39475,39476,39477,39478,39479,39480,39481,39482,39483,39484,39485,39486,39487,39488,39489,39490,39491,39492,39493,39494,39495,39496,39497,39498,39499,39500,39501,39502,39503,39504,39505,39506,39507,39508,39509,39510,39511,39512,39513,39049,39052,39053,39055,39060,39066,39067,39070,39071,39073,39074,39077,39078,34381,34388,34412,34414,34431,34426,34428,34427,34472,34445,34443,34476,34461,34471,34467,34474,34451,34473,34486,34500,34485,34510,34480,34490,34481,34479,34505,34511,34484,34537,34545,34546,34541,34547,34512,34579,34526,34548,34527,34520,34513,34563,34567,34552,34568,34570,34573,34569,34595,34619,34590,34597,34606,34586,34622,34632,34612,34609,34601,34615,34623,34690,34594,34685,34686,34683,34656,34672,34636,34670,34699,34643,34659,34684,34660,34649,34661,34707,34735,34728,34770,39514,39515,39516,39517,39518,39519,39520,39521,39522,39523,39524,39525,39526,39527,39528,39529,39530,39531,39538,39555,39561,39565,39566,39572,39573,39577,39590,39593,39594,39595,39596,39597,39598,39599,39602,39603,39604,39605,39609,39611,39613,39614,39615,39619,39620,39622,39623,39624,39625,39626,39629,39630,39631,39632,39634,39636,39637,39638,39639,39641,39642,39643,39644,39645,39646,39648,39650,39651,39652,39653,39655,39656,39657,39658,39660,39662,39664,39665,39666,39667,39668,39669,39670,39671,39672,39674,39676,39677,39678,39679,39680,39681,39682,39684,39685,39686,34758,34696,34693,34733,34711,34691,34731,34789,34732,34741,34739,34763,34771,34749,34769,34752,34762,34779,34794,34784,34798,34838,34835,34814,34826,34843,34849,34873,34876,32566,32578,32580,32581,33296,31482,31485,31496,31491,31492,31509,31498,31531,31503,31559,31544,31530,31513,31534,31537,31520,31525,31524,31539,31550,31518,31576,31578,31557,31605,31564,31581,31584,31598,31611,31586,31602,31601,31632,31654,31655,31672,31660,31645,31656,31621,31658,31644,31650,31659,31668,31697,31681,31692,31709,31706,31717,31718,31722,31756,31742,31740,31759,31766,31755,39687,39689,39690,39691,39692,39693,39694,39696,39697,39698,39700,39701,39702,39703,39704,39705,39706,39707,39708,39709,39710,39712,39713,39714,39716,39717,39718,39719,39720,39721,39722,39723,39724,39725,39726,39728,39729,39731,39732,39733,39734,39735,39736,39737,39738,39741,39742,39743,39744,39750,39754,39755,39756,39758,39760,39762,39763,39765,39766,39767,39768,39769,39770,39771,39772,39773,39774,39775,39776,39777,39778,39779,39780,39781,39782,39783,39784,39785,39786,39787,39788,39789,39790,39791,39792,39793,39794,39795,39796,39797,39798,39799,39800,39801,39802,39803,31775,31786,31782,31800,31809,31808,33278,33281,33282,33284,33260,34884,33313,33314,33315,33325,33327,33320,33323,33336,33339,33331,33332,33342,33348,33353,33355,33359,33370,33375,33384,34942,34949,34952,35032,35039,35166,32669,32671,32679,32687,32688,32690,31868,25929,31889,31901,31900,31902,31906,31922,31932,31933,31937,31943,31948,31949,31944,31941,31959,31976,33390,26280,32703,32718,32725,32741,32737,32742,32745,32750,32755,31992,32119,32166,32174,32327,32411,40632,40628,36211,36228,36244,36241,36273,36199,36205,35911,35913,37194,37200,37198,37199,37220,39804,39805,39806,39807,39808,39809,39810,39811,39812,39813,39814,39815,39816,39817,39818,39819,39820,39821,39822,39823,39824,39825,39826,39827,39828,39829,39830,39831,39832,39833,39834,39835,39836,39837,39838,39839,39840,39841,39842,39843,39844,39845,39846,39847,39848,39849,39850,39851,39852,39853,39854,39855,39856,39857,39858,39859,39860,39861,39862,39863,39864,39865,39866,39867,39868,39869,39870,39871,39872,39873,39874,39875,39876,39877,39878,39879,39880,39881,39882,39883,39884,39885,39886,39887,39888,39889,39890,39891,39892,39893,39894,39895,39896,39897,39898,39899,37218,37217,37232,37225,37231,37245,37246,37234,37236,37241,37260,37253,37264,37261,37265,37282,37283,37290,37293,37294,37295,37301,37300,37306,35925,40574,36280,36331,36357,36441,36457,36277,36287,36284,36282,36292,36310,36311,36314,36318,36302,36303,36315,36294,36332,36343,36344,36323,36345,36347,36324,36361,36349,36372,36381,36383,36396,36398,36387,36399,36410,36416,36409,36405,36413,36401,36425,36417,36418,36433,36434,36426,36464,36470,36476,36463,36468,36485,36495,36500,36496,36508,36510,35960,35970,35978,35973,35992,35988,26011,35286,35294,35290,35292,39900,39901,39902,39903,39904,39905,39906,39907,39908,39909,39910,39911,39912,39913,39914,39915,39916,39917,39918,39919,39920,39921,39922,39923,39924,39925,39926,39927,39928,39929,39930,39931,39932,39933,39934,39935,39936,39937,39938,39939,39940,39941,39942,39943,39944,39945,39946,39947,39948,39949,39950,39951,39952,39953,39954,39955,39956,39957,39958,39959,39960,39961,39962,39963,39964,39965,39966,39967,39968,39969,39970,39971,39972,39973,39974,39975,39976,39977,39978,39979,39980,39981,39982,39983,39984,39985,39986,39987,39988,39989,39990,39991,39992,39993,39994,39995,35301,35307,35311,35390,35622,38739,38633,38643,38639,38662,38657,38664,38671,38670,38698,38701,38704,38718,40832,40835,40837,40838,40839,40840,40841,40842,40844,40702,40715,40717,38585,38588,38589,38606,38610,30655,38624,37518,37550,37576,37694,37738,37834,37775,37950,37995,40063,40066,40069,40070,40071,40072,31267,40075,40078,40080,40081,40082,40084,40085,40090,40091,40094,40095,40096,40097,40098,40099,40101,40102,40103,40104,40105,40107,40109,40110,40112,40113,40114,40115,40116,40117,40118,40119,40122,40123,40124,40125,40132,40133,40134,40135,40138,40139,39996,39997,39998,39999,4e4,40001,40002,40003,40004,40005,40006,40007,40008,40009,40010,40011,40012,40013,40014,40015,40016,40017,40018,40019,40020,40021,40022,40023,40024,40025,40026,40027,40028,40029,40030,40031,40032,40033,40034,40035,40036,40037,40038,40039,40040,40041,40042,40043,40044,40045,40046,40047,40048,40049,40050,40051,40052,40053,40054,40055,40056,40057,40058,40059,40061,40062,40064,40067,40068,40073,40074,40076,40079,40083,40086,40087,40088,40089,40093,40106,40108,40111,40121,40126,40127,40128,40129,40130,40136,40137,40145,40146,40154,40155,40160,40161,40140,40141,40142,40143,40144,40147,40148,40149,40151,40152,40153,40156,40157,40159,40162,38780,38789,38801,38802,38804,38831,38827,38819,38834,38836,39601,39600,39607,40536,39606,39610,39612,39617,39616,39621,39618,39627,39628,39633,39749,39747,39751,39753,39752,39757,39761,39144,39181,39214,39253,39252,39647,39649,39654,39663,39659,39675,39661,39673,39688,39695,39699,39711,39715,40637,40638,32315,40578,40583,40584,40587,40594,37846,40605,40607,40667,40668,40669,40672,40671,40674,40681,40679,40677,40682,40687,40738,40748,40751,40761,40759,40765,40766,40772,40163,40164,40165,40166,40167,40168,40169,40170,40171,40172,40173,40174,40175,40176,40177,40178,40179,40180,40181,40182,40183,40184,40185,40186,40187,40188,40189,40190,40191,40192,40193,40194,40195,40196,40197,40198,40199,40200,40201,40202,40203,40204,40205,40206,40207,40208,40209,40210,40211,40212,40213,40214,40215,40216,40217,40218,40219,40220,40221,40222,40223,40224,40225,40226,40227,40228,40229,40230,40231,40232,40233,40234,40235,40236,40237,40238,40239,40240,40241,40242,40243,40244,40245,40246,40247,40248,40249,40250,40251,40252,40253,40254,40255,40256,40257,40258,57908,57909,57910,57911,57912,57913,57914,57915,57916,57917,57918,57919,57920,57921,57922,57923,57924,57925,57926,57927,57928,57929,57930,57931,57932,57933,57934,57935,57936,57937,57938,57939,57940,57941,57942,57943,57944,57945,57946,57947,57948,57949,57950,57951,57952,57953,57954,57955,57956,57957,57958,57959,57960,57961,57962,57963,57964,57965,57966,57967,57968,57969,57970,57971,57972,57973,57974,57975,57976,57977,57978,57979,57980,57981,57982,57983,57984,57985,57986,57987,57988,57989,57990,57991,57992,57993,57994,57995,57996,57997,57998,57999,58e3,58001,40259,40260,40261,40262,40263,40264,40265,40266,40267,40268,40269,40270,40271,40272,40273,40274,40275,40276,40277,40278,40279,40280,40281,40282,40283,40284,40285,40286,40287,40288,40289,40290,40291,40292,40293,40294,40295,40296,40297,40298,40299,40300,40301,40302,40303,40304,40305,40306,40307,40308,40309,40310,40311,40312,40313,40314,40315,40316,40317,40318,40319,40320,40321,40322,40323,40324,40325,40326,40327,40328,40329,40330,40331,40332,40333,40334,40335,40336,40337,40338,40339,40340,40341,40342,40343,40344,40345,40346,40347,40348,40349,40350,40351,40352,40353,40354,58002,58003,58004,58005,58006,58007,58008,58009,58010,58011,58012,58013,58014,58015,58016,58017,58018,58019,58020,58021,58022,58023,58024,58025,58026,58027,58028,58029,58030,58031,58032,58033,58034,58035,58036,58037,58038,58039,58040,58041,58042,58043,58044,58045,58046,58047,58048,58049,58050,58051,58052,58053,58054,58055,58056,58057,58058,58059,58060,58061,58062,58063,58064,58065,58066,58067,58068,58069,58070,58071,58072,58073,58074,58075,58076,58077,58078,58079,58080,58081,58082,58083,58084,58085,58086,58087,58088,58089,58090,58091,58092,58093,58094,58095,40355,40356,40357,40358,40359,40360,40361,40362,40363,40364,40365,40366,40367,40368,40369,40370,40371,40372,40373,40374,40375,40376,40377,40378,40379,40380,40381,40382,40383,40384,40385,40386,40387,40388,40389,40390,40391,40392,40393,40394,40395,40396,40397,40398,40399,40400,40401,40402,40403,40404,40405,40406,40407,40408,40409,40410,40411,40412,40413,40414,40415,40416,40417,40418,40419,40420,40421,40422,40423,40424,40425,40426,40427,40428,40429,40430,40431,40432,40433,40434,40435,40436,40437,40438,40439,40440,40441,40442,40443,40444,40445,40446,40447,40448,40449,40450,58096,58097,58098,58099,58100,58101,58102,58103,58104,58105,58106,58107,58108,58109,58110,58111,58112,58113,58114,58115,58116,58117,58118,58119,58120,58121,58122,58123,58124,58125,58126,58127,58128,58129,58130,58131,58132,58133,58134,58135,58136,58137,58138,58139,58140,58141,58142,58143,58144,58145,58146,58147,58148,58149,58150,58151,58152,58153,58154,58155,58156,58157,58158,58159,58160,58161,58162,58163,58164,58165,58166,58167,58168,58169,58170,58171,58172,58173,58174,58175,58176,58177,58178,58179,58180,58181,58182,58183,58184,58185,58186,58187,58188,58189,40451,40452,40453,40454,40455,40456,40457,40458,40459,40460,40461,40462,40463,40464,40465,40466,40467,40468,40469,40470,40471,40472,40473,40474,40475,40476,40477,40478,40484,40487,40494,40496,40500,40507,40508,40512,40525,40528,40530,40531,40532,40534,40537,40541,40543,40544,40545,40546,40549,40558,40559,40562,40564,40565,40566,40567,40568,40569,40570,40571,40572,40573,40576,40577,40579,40580,40581,40582,40585,40586,40588,40589,40590,40591,40592,40593,40596,40597,40598,40599,40600,40601,40602,40603,40604,40606,40608,40609,40610,40611,40612,40613,40615,40616,40617,40618,58190,58191,58192,58193,58194,58195,58196,58197,58198,58199,58200,58201,58202,58203,58204,58205,58206,58207,58208,58209,58210,58211,58212,58213,58214,58215,58216,58217,58218,58219,58220,58221,58222,58223,58224,58225,58226,58227,58228,58229,58230,58231,58232,58233,58234,58235,58236,58237,58238,58239,58240,58241,58242,58243,58244,58245,58246,58247,58248,58249,58250,58251,58252,58253,58254,58255,58256,58257,58258,58259,58260,58261,58262,58263,58264,58265,58266,58267,58268,58269,58270,58271,58272,58273,58274,58275,58276,58277,58278,58279,58280,58281,58282,58283,40619,40620,40621,40622,40623,40624,40625,40626,40627,40629,40630,40631,40633,40634,40636,40639,40640,40641,40642,40643,40645,40646,40647,40648,40650,40651,40652,40656,40658,40659,40661,40662,40663,40665,40666,40670,40673,40675,40676,40678,40680,40683,40684,40685,40686,40688,40689,40690,40691,40692,40693,40694,40695,40696,40698,40701,40703,40704,40705,40706,40707,40708,40709,40710,40711,40712,40713,40714,40716,40719,40721,40722,40724,40725,40726,40728,40730,40731,40732,40733,40734,40735,40737,40739,40740,40741,40742,40743,40744,40745,40746,40747,40749,40750,40752,40753,58284,58285,58286,58287,58288,58289,58290,58291,58292,58293,58294,58295,58296,58297,58298,58299,58300,58301,58302,58303,58304,58305,58306,58307,58308,58309,58310,58311,58312,58313,58314,58315,58316,58317,58318,58319,58320,58321,58322,58323,58324,58325,58326,58327,58328,58329,58330,58331,58332,58333,58334,58335,58336,58337,58338,58339,58340,58341,58342,58343,58344,58345,58346,58347,58348,58349,58350,58351,58352,58353,58354,58355,58356,58357,58358,58359,58360,58361,58362,58363,58364,58365,58366,58367,58368,58369,58370,58371,58372,58373,58374,58375,58376,58377,40754,40755,40756,40757,40758,40760,40762,40764,40767,40768,40769,40770,40771,40773,40774,40775,40776,40777,40778,40779,40780,40781,40782,40783,40786,40787,40788,40789,40790,40791,40792,40793,40794,40795,40796,40797,40798,40799,40800,40801,40802,40803,40804,40805,40806,40807,40808,40809,40810,40811,40812,40813,40814,40815,40816,40817,40818,40819,40820,40821,40822,40823,40824,40825,40826,40827,40828,40829,40830,40833,40834,40845,40846,40847,40848,40849,40850,40851,40852,40853,40854,40855,40856,40860,40861,40862,40865,40866,40867,40868,40869,63788,63865,63893,63975,63985,58378,58379,58380,58381,58382,58383,58384,58385,58386,58387,58388,58389,58390,58391,58392,58393,58394,58395,58396,58397,58398,58399,58400,58401,58402,58403,58404,58405,58406,58407,58408,58409,58410,58411,58412,58413,58414,58415,58416,58417,58418,58419,58420,58421,58422,58423,58424,58425,58426,58427,58428,58429,58430,58431,58432,58433,58434,58435,58436,58437,58438,58439,58440,58441,58442,58443,58444,58445,58446,58447,58448,58449,58450,58451,58452,58453,58454,58455,58456,58457,58458,58459,58460,58461,58462,58463,58464,58465,58466,58467,58468,58469,58470,58471,64012,64013,64014,64015,64017,64019,64020,64024,64031,64032,64033,64035,64036,64039,64040,64041,11905,59414,59415,59416,11908,13427,13383,11912,11915,59422,13726,13850,13838,11916,11927,14702,14616,59430,14799,14815,14963,14800,59435,59436,15182,15470,15584,11943,59441,59442,11946,16470,16735,11950,17207,11955,11958,11959,59451,17329,17324,11963,17373,17622,18017,17996,59459,18211,18217,18300,18317,11978,18759,18810,18813,18818,18819,18821,18822,18847,18843,18871,18870,59476,59477,19619,19615,19616,19617,19575,19618,19731,19732,19733,19734,19735,19736,19737,19886,59492,58472,58473,58474,58475,58476,58477,58478,58479,58480,58481,58482,58483,58484,58485,58486,58487,58488,58489,58490,58491,58492,58493,58494,58495,58496,58497,58498,58499,58500,58501,58502,58503,58504,58505,58506,58507,58508,58509,58510,58511,58512,58513,58514,58515,58516,58517,58518,58519,58520,58521,58522,58523,58524,58525,58526,58527,58528,58529,58530,58531,58532,58533,58534,58535,58536,58537,58538,58539,58540,58541,58542,58543,58544,58545,58546,58547,58548,58549,58550,58551,58552,58553,58554,58555,58556,58557,58558,58559,58560,58561,58562,58563,58564,58565],"gb18030-ranges":[[0,128],[36,165],[38,169],[45,178],[50,184],[81,216],[89,226],[95,235],[96,238],[100,244],[103,248],[104,251],[105,253],[109,258],[126,276],[133,284],[148,300],[172,325],[175,329],[179,334],[208,364],[306,463],[307,465],[308,467],[309,469],[310,471],[311,473],[312,475],[313,477],[341,506],[428,594],[443,610],[544,712],[545,716],[558,730],[741,930],[742,938],[749,962],[750,970],[805,1026],[819,1104],[820,1106],[7922,8209],[7924,8215],[7925,8218],[7927,8222],[7934,8231],[7943,8241],[7944,8244],[7945,8246],[7950,8252],[8062,8365],[8148,8452],[8149,8454],[8152,8458],[8164,8471],[8174,8482],[8236,8556],[8240,8570],[8262,8596],[8264,8602],[8374,8713],[8380,8720],[8381,8722],[8384,8726],[8388,8731],[8390,8737],[8392,8740],[8393,8742],[8394,8748],[8396,8751],[8401,8760],[8406,8766],[8416,8777],[8419,8781],[8424,8787],[8437,8802],[8439,8808],[8445,8816],[8482,8854],[8485,8858],[8496,8870],[8521,8896],[8603,8979],[8936,9322],[8946,9372],[9046,9548],[9050,9588],[9063,9616],[9066,9622],[9076,9634],[9092,9652],[9100,9662],[9108,9672],[9111,9676],[9113,9680],[9131,9702],[9162,9735],[9164,9738],[9218,9793],[9219,9795],[11329,11906],[11331,11909],[11334,11913],[11336,11917],[11346,11928],[11361,11944],[11363,11947],[11366,11951],[11370,11956],[11372,11960],[11375,11964],[11389,11979],[11682,12284],[11686,12292],[11687,12312],[11692,12319],[11694,12330],[11714,12351],[11716,12436],[11723,12447],[11725,12535],[11730,12543],[11736,12586],[11982,12842],[11989,12850],[12102,12964],[12336,13200],[12348,13215],[12350,13218],[12384,13253],[12393,13263],[12395,13267],[12397,13270],[12510,13384],[12553,13428],[12851,13727],[12962,13839],[12973,13851],[13738,14617],[13823,14703],[13919,14801],[13933,14816],[14080,14964],[14298,15183],[14585,15471],[14698,15585],[15583,16471],[15847,16736],[16318,17208],[16434,17325],[16438,17330],[16481,17374],[16729,17623],[17102,17997],[17122,18018],[17315,18212],[17320,18218],[17402,18301],[17418,18318],[17859,18760],[17909,18811],[17911,18814],[17915,18820],[17916,18823],[17936,18844],[17939,18848],[17961,18872],[18664,19576],[18703,19620],[18814,19738],[18962,19887],[19043,40870],[33469,59244],[33470,59336],[33471,59367],[33484,59413],[33485,59417],[33490,59423],[33497,59431],[33501,59437],[33505,59443],[33513,59452],[33520,59460],[33536,59478],[33550,59493],[37845,63789],[37921,63866],[37948,63894],[38029,63976],[38038,63986],[38064,64016],[38065,64018],[38066,64021],[38069,64025],[38075,64034],[38076,64037],[38078,64042],[39108,65074],[39109,65093],[39113,65107],[39114,65112],[39115,65127],[39116,65132],[39265,65375],[39394,65510],[189e3,65536]],jis0208:[12288,12289,12290,65292,65294,12539,65306,65307,65311,65281,12443,12444,180,65344,168,65342,65507,65343,12541,12542,12445,12446,12291,20189,12293,12294,12295,12540,8213,8208,65295,65340,65374,8741,65372,8230,8229,8216,8217,8220,8221,65288,65289,12308,12309,65339,65341,65371,65373,12296,12297,12298,12299,12300,12301,12302,12303,12304,12305,65291,65293,177,215,247,65309,8800,65308,65310,8806,8807,8734,8756,9794,9792,176,8242,8243,8451,65509,65284,65504,65505,65285,65283,65286,65290,65312,167,9734,9733,9675,9679,9678,9671,9670,9633,9632,9651,9650,9661,9660,8251,12306,8594,8592,8593,8595,12307,null,null,null,null,null,null,null,null,null,null,null,8712,8715,8838,8839,8834,8835,8746,8745,null,null,null,null,null,null,null,null,8743,8744,65506,8658,8660,8704,8707,null,null,null,null,null,null,null,null,null,null,null,8736,8869,8978,8706,8711,8801,8786,8810,8811,8730,8765,8733,8757,8747,8748,null,null,null,null,null,null,null,8491,8240,9839,9837,9834,8224,8225,182,null,null,null,null,9711,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,65296,65297,65298,65299,65300,65301,65302,65303,65304,65305,null,null,null,null,null,null,null,65313,65314,65315,65316,65317,65318,65319,65320,65321,65322,65323,65324,65325,65326,65327,65328,65329,65330,65331,65332,65333,65334,65335,65336,65337,65338,null,null,null,null,null,null,65345,65346,65347,65348,65349,65350,65351,65352,65353,65354,65355,65356,65357,65358,65359,65360,65361,65362,65363,65364,65365,65366,65367,65368,65369,65370,null,null,null,null,12353,12354,12355,12356,12357,12358,12359,12360,12361,12362,12363,12364,12365,12366,12367,12368,12369,12370,12371,12372,12373,12374,12375,12376,12377,12378,12379,12380,12381,12382,12383,12384,12385,12386,12387,12388,12389,12390,12391,12392,12393,12394,12395,12396,12397,12398,12399,12400,12401,12402,12403,12404,12405,12406,12407,12408,12409,12410,12411,12412,12413,12414,12415,12416,12417,12418,12419,12420,12421,12422,12423,12424,12425,12426,12427,12428,12429,12430,12431,12432,12433,12434,12435,null,null,null,null,null,null,null,null,null,null,null,12449,12450,12451,12452,12453,12454,12455,12456,12457,12458,12459,12460,12461,12462,12463,12464,12465,12466,12467,12468,12469,12470,12471,12472,12473,12474,12475,12476,12477,12478,12479,12480,12481,12482,12483,12484,12485,12486,12487,12488,12489,12490,12491,12492,12493,12494,12495,12496,12497,12498,12499,12500,12501,12502,12503,12504,12505,12506,12507,12508,12509,12510,12511,12512,12513,12514,12515,12516,12517,12518,12519,12520,12521,12522,12523,12524,12525,12526,12527,12528,12529,12530,12531,12532,12533,12534,null,null,null,null,null,null,null,null,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,null,null,null,null,null,null,null,null,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,964,965,966,967,968,969,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1040,1041,1042,1043,1044,1045,1025,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1072,1073,1074,1075,1076,1077,1105,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,null,null,null,null,null,null,null,null,null,null,null,null,null,9472,9474,9484,9488,9496,9492,9500,9516,9508,9524,9532,9473,9475,9487,9491,9499,9495,9507,9523,9515,9531,9547,9504,9519,9512,9527,9535,9501,9520,9509,9528,9538,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,9312,9313,9314,9315,9316,9317,9318,9319,9320,9321,9322,9323,9324,9325,9326,9327,9328,9329,9330,9331,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,null,13129,13076,13090,13133,13080,13095,13059,13110,13137,13143,13069,13094,13091,13099,13130,13115,13212,13213,13214,13198,13199,13252,13217,null,null,null,null,null,null,null,null,13179,12317,12319,8470,13261,8481,12964,12965,12966,12967,12968,12849,12850,12857,13182,13181,13180,8786,8801,8747,8750,8721,8730,8869,8736,8735,8895,8757,8745,8746,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,20124,21782,23043,38463,21696,24859,25384,23030,36898,33909,33564,31312,24746,25569,28197,26093,33894,33446,39925,26771,22311,26017,25201,23451,22992,34427,39156,32098,32190,39822,25110,31903,34999,23433,24245,25353,26263,26696,38343,38797,26447,20197,20234,20301,20381,20553,22258,22839,22996,23041,23561,24799,24847,24944,26131,26885,28858,30031,30064,31227,32173,32239,32963,33806,34915,35586,36949,36986,21307,20117,20133,22495,32946,37057,30959,19968,22769,28322,36920,31282,33576,33419,39983,20801,21360,21693,21729,22240,23035,24341,39154,28139,32996,34093,38498,38512,38560,38907,21515,21491,23431,28879,32701,36802,38632,21359,40284,31418,19985,30867,33276,28198,22040,21764,27421,34074,39995,23013,21417,28006,29916,38287,22082,20113,36939,38642,33615,39180,21473,21942,23344,24433,26144,26355,26628,27704,27891,27945,29787,30408,31310,38964,33521,34907,35424,37613,28082,30123,30410,39365,24742,35585,36234,38322,27022,21421,20870,22290,22576,22852,23476,24310,24616,25513,25588,27839,28436,28814,28948,29017,29141,29503,32257,33398,33489,34199,36960,37467,40219,22633,26044,27738,29989,20985,22830,22885,24448,24540,25276,26106,27178,27431,27572,29579,32705,35158,40236,40206,40644,23713,27798,33659,20740,23627,25014,33222,26742,29281,20057,20474,21368,24681,28201,31311,38899,19979,21270,20206,20309,20285,20385,20339,21152,21487,22025,22799,23233,23478,23521,31185,26247,26524,26550,27468,27827,28779,29634,31117,31166,31292,31623,33457,33499,33540,33655,33775,33747,34662,35506,22057,36008,36838,36942,38686,34442,20420,23784,25105,29273,30011,33253,33469,34558,36032,38597,39187,39381,20171,20250,35299,22238,22602,22730,24315,24555,24618,24724,24674,25040,25106,25296,25913,39745,26214,26800,28023,28784,30028,30342,32117,33445,34809,38283,38542,35997,20977,21182,22806,21683,23475,23830,24936,27010,28079,30861,33995,34903,35442,37799,39608,28012,39336,34521,22435,26623,34510,37390,21123,22151,21508,24275,25313,25785,26684,26680,27579,29554,30906,31339,35226,35282,36203,36611,37101,38307,38548,38761,23398,23731,27005,38989,38990,25499,31520,27179,27263,26806,39949,28511,21106,21917,24688,25324,27963,28167,28369,33883,35088,36676,19988,39993,21494,26907,27194,38788,26666,20828,31427,33970,37340,37772,22107,40232,26658,33541,33841,31909,21e3,33477,29926,20094,20355,20896,23506,21002,21208,21223,24059,21914,22570,23014,23436,23448,23515,24178,24185,24739,24863,24931,25022,25563,25954,26577,26707,26874,27454,27475,27735,28450,28567,28485,29872,29976,30435,30475,31487,31649,31777,32233,32566,32752,32925,33382,33694,35251,35532,36011,36996,37969,38291,38289,38306,38501,38867,39208,33304,20024,21547,23736,24012,29609,30284,30524,23721,32747,36107,38593,38929,38996,39e3,20225,20238,21361,21916,22120,22522,22855,23305,23492,23696,24076,24190,24524,25582,26426,26071,26082,26399,26827,26820,27231,24112,27589,27671,27773,30079,31048,23395,31232,32e3,24509,35215,35352,36020,36215,36556,36637,39138,39438,39740,20096,20605,20736,22931,23452,25135,25216,25836,27450,29344,30097,31047,32681,34811,35516,35696,25516,33738,38816,21513,21507,21931,26708,27224,35440,30759,26485,40653,21364,23458,33050,34384,36870,19992,20037,20167,20241,21450,21560,23470,24339,24613,25937,26429,27714,27762,27875,28792,29699,31350,31406,31496,32026,31998,32102,26087,29275,21435,23621,24040,25298,25312,25369,28192,34394,35377,36317,37624,28417,31142,39770,20136,20139,20140,20379,20384,20689,20807,31478,20849,20982,21332,21281,21375,21483,21932,22659,23777,24375,24394,24623,24656,24685,25375,25945,27211,27841,29378,29421,30703,33016,33029,33288,34126,37111,37857,38911,39255,39514,20208,20957,23597,26241,26989,23616,26354,26997,29577,26704,31873,20677,21220,22343,24062,37670,26020,27427,27453,29748,31105,31165,31563,32202,33465,33740,34943,35167,35641,36817,37329,21535,37504,20061,20534,21477,21306,29399,29590,30697,33510,36527,39366,39368,39378,20855,24858,34398,21936,31354,20598,23507,36935,38533,20018,27355,37351,23633,23624,25496,31391,27795,38772,36705,31402,29066,38536,31874,26647,32368,26705,37740,21234,21531,34219,35347,32676,36557,37089,21350,34952,31041,20418,20670,21009,20804,21843,22317,29674,22411,22865,24418,24452,24693,24950,24935,25001,25522,25658,25964,26223,26690,28179,30054,31293,31995,32076,32153,32331,32619,33550,33610,34509,35336,35427,35686,36605,38938,40335,33464,36814,39912,21127,25119,25731,28608,38553,26689,20625,27424,27770,28500,31348,32080,34880,35363,26376,20214,20537,20518,20581,20860,21048,21091,21927,22287,22533,23244,24314,25010,25080,25331,25458,26908,27177,29309,29356,29486,30740,30831,32121,30476,32937,35211,35609,36066,36562,36963,37749,38522,38997,39443,40568,20803,21407,21427,24187,24358,28187,28304,29572,29694,32067,33335,35328,35578,38480,20046,20491,21476,21628,22266,22993,23396,24049,24235,24359,25144,25925,26543,28246,29392,31946,34996,32929,32993,33776,34382,35463,36328,37431,38599,39015,40723,20116,20114,20237,21320,21577,21566,23087,24460,24481,24735,26791,27278,29786,30849,35486,35492,35703,37264,20062,39881,20132,20348,20399,20505,20502,20809,20844,21151,21177,21246,21402,21475,21521,21518,21897,22353,22434,22909,23380,23389,23439,24037,24039,24055,24184,24195,24218,24247,24344,24658,24908,25239,25304,25511,25915,26114,26179,26356,26477,26657,26775,27083,27743,27946,28009,28207,28317,30002,30343,30828,31295,31968,32005,32024,32094,32177,32789,32771,32943,32945,33108,33167,33322,33618,34892,34913,35611,36002,36092,37066,37237,37489,30783,37628,38308,38477,38917,39321,39640,40251,21083,21163,21495,21512,22741,25335,28640,35946,36703,40633,20811,21051,21578,22269,31296,37239,40288,40658,29508,28425,33136,29969,24573,24794,39592,29403,36796,27492,38915,20170,22256,22372,22718,23130,24680,25031,26127,26118,26681,26801,28151,30165,32058,33390,39746,20123,20304,21449,21766,23919,24038,24046,26619,27801,29811,30722,35408,37782,35039,22352,24231,25387,20661,20652,20877,26368,21705,22622,22971,23472,24425,25165,25505,26685,27507,28168,28797,37319,29312,30741,30758,31085,25998,32048,33756,35009,36617,38555,21092,22312,26448,32618,36001,20916,22338,38442,22586,27018,32948,21682,23822,22524,30869,40442,20316,21066,21643,25662,26152,26388,26613,31364,31574,32034,37679,26716,39853,31545,21273,20874,21047,23519,25334,25774,25830,26413,27578,34217,38609,30352,39894,25420,37638,39851,30399,26194,19977,20632,21442,23665,24808,25746,25955,26719,29158,29642,29987,31639,32386,34453,35715,36059,37240,39184,26028,26283,27531,20181,20180,20282,20351,21050,21496,21490,21987,22235,22763,22987,22985,23039,23376,23629,24066,24107,24535,24605,25351,25903,23388,26031,26045,26088,26525,27490,27515,27663,29509,31049,31169,31992,32025,32043,32930,33026,33267,35222,35422,35433,35430,35468,35566,36039,36060,38604,39164,27503,20107,20284,20365,20816,23383,23546,24904,25345,26178,27425,28363,27835,29246,29885,30164,30913,31034,32780,32819,33258,33940,36766,27728,40575,24335,35672,40235,31482,36600,23437,38635,19971,21489,22519,22833,23241,23460,24713,28287,28422,30142,36074,23455,34048,31712,20594,26612,33437,23649,34122,32286,33294,20889,23556,25448,36198,26012,29038,31038,32023,32773,35613,36554,36974,34503,37034,20511,21242,23610,26451,28796,29237,37196,37320,37675,33509,23490,24369,24825,20027,21462,23432,25163,26417,27530,29417,29664,31278,33131,36259,37202,39318,20754,21463,21610,23551,25480,27193,32172,38656,22234,21454,21608,23447,23601,24030,20462,24833,25342,27954,31168,31179,32066,32333,32722,33261,33311,33936,34886,35186,35728,36468,36655,36913,37195,37228,38598,37276,20160,20303,20805,21313,24467,25102,26580,27713,28171,29539,32294,37325,37507,21460,22809,23487,28113,31069,32302,31899,22654,29087,20986,34899,36848,20426,23803,26149,30636,31459,33308,39423,20934,24490,26092,26991,27529,28147,28310,28516,30462,32020,24033,36981,37255,38918,20966,21021,25152,26257,26329,28186,24246,32210,32626,26360,34223,34295,35576,21161,21465,22899,24207,24464,24661,37604,38500,20663,20767,21213,21280,21319,21484,21736,21830,21809,22039,22888,22974,23100,23477,23558,23567,23569,23578,24196,24202,24288,24432,25215,25220,25307,25484,25463,26119,26124,26157,26230,26494,26786,27167,27189,27836,28040,28169,28248,28988,28966,29031,30151,30465,30813,30977,31077,31216,31456,31505,31911,32057,32918,33750,33931,34121,34909,35059,35359,35388,35412,35443,35937,36062,37284,37478,37758,37912,38556,38808,19978,19976,19998,20055,20887,21104,22478,22580,22732,23330,24120,24773,25854,26465,26454,27972,29366,30067,31331,33976,35698,37304,37664,22065,22516,39166,25325,26893,27542,29165,32340,32887,33394,35302,39135,34645,36785,23611,20280,20449,20405,21767,23072,23517,23529,24515,24910,25391,26032,26187,26862,27035,28024,28145,30003,30137,30495,31070,31206,32051,33251,33455,34218,35242,35386,36523,36763,36914,37341,38663,20154,20161,20995,22645,22764,23563,29978,23613,33102,35338,36805,38499,38765,31525,35535,38920,37218,22259,21416,36887,21561,22402,24101,25512,27700,28810,30561,31883,32736,34928,36930,37204,37648,37656,38543,29790,39620,23815,23913,25968,26530,36264,38619,25454,26441,26905,33733,38935,38592,35070,28548,25722,23544,19990,28716,30045,26159,20932,21046,21218,22995,24449,24615,25104,25919,25972,26143,26228,26866,26646,27491,28165,29298,29983,30427,31934,32854,22768,35069,35199,35488,35475,35531,36893,37266,38738,38745,25993,31246,33030,38587,24109,24796,25114,26021,26132,26512,30707,31309,31821,32318,33034,36012,36196,36321,36447,30889,20999,25305,25509,25666,25240,35373,31363,31680,35500,38634,32118,33292,34633,20185,20808,21315,21344,23459,23554,23574,24029,25126,25159,25776,26643,26676,27849,27973,27927,26579,28508,29006,29053,26059,31359,31661,32218,32330,32680,33146,33307,33337,34214,35438,36046,36341,36984,36983,37549,37521,38275,39854,21069,21892,28472,28982,20840,31109,32341,33203,31950,22092,22609,23720,25514,26366,26365,26970,29401,30095,30094,30990,31062,31199,31895,32032,32068,34311,35380,38459,36961,40736,20711,21109,21452,21474,20489,21930,22766,22863,29245,23435,23652,21277,24803,24819,25436,25475,25407,25531,25805,26089,26361,24035,27085,27133,28437,29157,20105,30185,30456,31379,31967,32207,32156,32865,33609,33624,33900,33980,34299,35013,36208,36865,36973,37783,38684,39442,20687,22679,24974,33235,34101,36104,36896,20419,20596,21063,21363,24687,25417,26463,28204,36275,36895,20439,23646,36042,26063,32154,21330,34966,20854,25539,23384,23403,23562,25613,26449,36956,20182,22810,22826,27760,35409,21822,22549,22949,24816,25171,26561,33333,26965,38464,39364,39464,20307,22534,23550,32784,23729,24111,24453,24608,24907,25140,26367,27888,28382,32974,33151,33492,34955,36024,36864,36910,38538,40667,39899,20195,21488,22823,31532,37261,38988,40441,28381,28711,21331,21828,23429,25176,25246,25299,27810,28655,29730,35351,37944,28609,35582,33592,20967,34552,21482,21481,20294,36948,36784,22890,33073,24061,31466,36799,26842,35895,29432,40008,27197,35504,20025,21336,22022,22374,25285,25506,26086,27470,28129,28251,28845,30701,31471,31658,32187,32829,32966,34507,35477,37723,22243,22727,24382,26029,26262,27264,27573,30007,35527,20516,30693,22320,24347,24677,26234,27744,30196,31258,32622,33268,34584,36933,39347,31689,30044,31481,31569,33988,36880,31209,31378,33590,23265,30528,20013,20210,23449,24544,25277,26172,26609,27880,34411,34935,35387,37198,37619,39376,27159,28710,29482,33511,33879,36015,19969,20806,20939,21899,23541,24086,24115,24193,24340,24373,24427,24500,25074,25361,26274,26397,28526,29266,30010,30522,32884,33081,33144,34678,35519,35548,36229,36339,37530,38263,38914,40165,21189,25431,30452,26389,27784,29645,36035,37806,38515,27941,22684,26894,27084,36861,37786,30171,36890,22618,26626,25524,27131,20291,28460,26584,36795,34086,32180,37716,26943,28528,22378,22775,23340,32044,29226,21514,37347,40372,20141,20302,20572,20597,21059,35998,21576,22564,23450,24093,24213,24237,24311,24351,24716,25269,25402,25552,26799,27712,30855,31118,31243,32224,33351,35330,35558,36420,36883,37048,37165,37336,40718,27877,25688,25826,25973,28404,30340,31515,36969,37841,28346,21746,24505,25764,36685,36845,37444,20856,22635,22825,23637,24215,28155,32399,29980,36028,36578,39003,28857,20253,27583,28593,3e4,38651,20814,21520,22581,22615,22956,23648,24466,26007,26460,28193,30331,33759,36077,36884,37117,37709,30757,30778,21162,24230,22303,22900,24594,20498,20826,20908,20941,20992,21776,22612,22616,22871,23445,23798,23947,24764,25237,25645,26481,26691,26812,26847,30423,28120,28271,28059,28783,29128,24403,30168,31095,31561,31572,31570,31958,32113,21040,33891,34153,34276,35342,35588,35910,36367,36867,36879,37913,38518,38957,39472,38360,20685,21205,21516,22530,23566,24999,25758,27934,30643,31461,33012,33796,36947,37509,23776,40199,21311,24471,24499,28060,29305,30563,31167,31716,27602,29420,35501,26627,27233,20984,31361,26932,23626,40182,33515,23493,37193,28702,22136,23663,24775,25958,27788,35930,36929,38931,21585,26311,37389,22856,37027,20869,20045,20970,34201,35598,28760,25466,37707,26978,39348,32260,30071,21335,26976,36575,38627,27741,20108,23612,24336,36841,21250,36049,32905,34425,24319,26085,20083,20837,22914,23615,38894,20219,22922,24525,35469,28641,31152,31074,23527,33905,29483,29105,24180,24565,25467,25754,29123,31896,20035,24316,20043,22492,22178,24745,28611,32013,33021,33075,33215,36786,35223,34468,24052,25226,25773,35207,26487,27874,27966,29750,30772,23110,32629,33453,39340,20467,24259,25309,25490,25943,26479,30403,29260,32972,32954,36649,37197,20493,22521,23186,26757,26995,29028,29437,36023,22770,36064,38506,36889,34687,31204,30695,33833,20271,21093,21338,25293,26575,27850,30333,31636,31893,33334,34180,36843,26333,28448,29190,32283,33707,39361,40614,20989,31665,30834,31672,32903,31560,27368,24161,32908,30033,30048,20843,37474,28300,30330,37271,39658,20240,32624,25244,31567,38309,40169,22138,22617,34532,38588,20276,21028,21322,21453,21467,24070,25644,26001,26495,27710,27726,29256,29359,29677,30036,32321,33324,34281,36009,31684,37318,29033,38930,39151,25405,26217,30058,30436,30928,34115,34542,21290,21329,21542,22915,24199,24444,24754,25161,25209,25259,26e3,27604,27852,30130,30382,30865,31192,32203,32631,32933,34987,35513,36027,36991,38750,39131,27147,31800,20633,23614,24494,26503,27608,29749,30473,32654,40763,26570,31255,21305,30091,39661,24422,33181,33777,32920,24380,24517,30050,31558,36924,26727,23019,23195,32016,30334,35628,20469,24426,27161,27703,28418,29922,31080,34920,35413,35961,24287,25551,30149,31186,33495,37672,37618,33948,34541,39981,21697,24428,25996,27996,28693,36007,36051,38971,25935,29942,19981,20184,22496,22827,23142,23500,20904,24067,24220,24598,25206,25975,26023,26222,28014,29238,31526,33104,33178,33433,35676,36e3,36070,36212,38428,38468,20398,25771,27494,33310,33889,34154,37096,23553,26963,39080,33914,34135,20239,21103,24489,24133,26381,31119,33145,35079,35206,28149,24343,25173,27832,20175,29289,39826,20998,21563,22132,22707,24996,25198,28954,22894,31881,31966,32027,38640,25991,32862,19993,20341,20853,22592,24163,24179,24330,26564,20006,34109,38281,38491,31859,38913,20731,22721,30294,30887,21029,30629,34065,31622,20559,22793,29255,31687,32232,36794,36820,36941,20415,21193,23081,24321,38829,20445,33303,37610,22275,25429,27497,29995,35036,36628,31298,21215,22675,24917,25098,26286,27597,31807,33769,20515,20472,21253,21574,22577,22857,23453,23792,23791,23849,24214,25265,25447,25918,26041,26379,27861,27873,28921,30770,32299,32990,33459,33804,34028,34562,35090,35370,35914,37030,37586,39165,40179,40300,20047,20129,20621,21078,22346,22952,24125,24536,24537,25151,26292,26395,26576,26834,20882,32033,32938,33192,35584,35980,36031,37502,38450,21536,38956,21271,20693,21340,22696,25778,26420,29287,30566,31302,37350,21187,27809,27526,22528,24140,22868,26412,32763,20961,30406,25705,30952,39764,40635,22475,22969,26151,26522,27598,21737,27097,24149,33180,26517,39850,26622,40018,26717,20134,20451,21448,25273,26411,27819,36804,20397,32365,40639,19975,24930,28288,28459,34067,21619,26410,39749,24051,31637,23724,23494,34588,28234,34001,31252,33032,22937,31885,27665,30496,21209,22818,28961,29279,30683,38695,40289,26891,23167,23064,20901,21517,21629,26126,30431,36855,37528,40180,23018,29277,28357,20813,26825,32191,32236,38754,40634,25720,27169,33538,22916,23391,27611,29467,30450,32178,32791,33945,20786,26408,40665,30446,26466,21247,39173,23588,25147,31870,36016,21839,24758,32011,38272,21249,20063,20918,22812,29242,32822,37326,24357,30690,21380,24441,32004,34220,35379,36493,38742,26611,34222,37971,24841,24840,27833,30290,35565,36664,21807,20305,20778,21191,21451,23461,24189,24736,24962,25558,26377,26586,28263,28044,29494,29495,30001,31056,35029,35480,36938,37009,37109,38596,34701,22805,20104,20313,19982,35465,36671,38928,20653,24188,22934,23481,24248,25562,25594,25793,26332,26954,27096,27915,28342,29076,29992,31407,32650,32768,33865,33993,35201,35617,36362,36965,38525,39178,24958,25233,27442,27779,28020,32716,32764,28096,32645,34746,35064,26469,33713,38972,38647,27931,32097,33853,37226,20081,21365,23888,27396,28651,34253,34349,35239,21033,21519,23653,26446,26792,29702,29827,30178,35023,35041,37324,38626,38520,24459,29575,31435,33870,25504,30053,21129,27969,28316,29705,30041,30827,31890,38534,31452,40845,20406,24942,26053,34396,20102,20142,20698,20001,20940,23534,26009,26753,28092,29471,30274,30637,31260,31975,33391,35538,36988,37327,38517,38936,21147,32209,20523,21400,26519,28107,29136,29747,33256,36650,38563,40023,40607,29792,22593,28057,32047,39006,20196,20278,20363,20919,21169,23994,24604,29618,31036,33491,37428,38583,38646,38666,40599,40802,26278,27508,21015,21155,28872,35010,24265,24651,24976,28451,29001,31806,32244,32879,34030,36899,37676,21570,39791,27347,28809,36034,36335,38706,21172,23105,24266,24324,26391,27004,27028,28010,28431,29282,29436,31725,32769,32894,34635,37070,20845,40595,31108,32907,37682,35542,20525,21644,35441,27498,36036,33031,24785,26528,40434,20121,20120,39952,35435,34241,34152,26880,28286,30871,33109,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,24332,19984,19989,20010,20017,20022,20028,20031,20034,20054,20056,20098,20101,35947,20106,33298,24333,20110,20126,20127,20128,20130,20144,20147,20150,20174,20173,20164,20166,20162,20183,20190,20205,20191,20215,20233,20314,20272,20315,20317,20311,20295,20342,20360,20367,20376,20347,20329,20336,20369,20335,20358,20374,20760,20436,20447,20430,20440,20443,20433,20442,20432,20452,20453,20506,20520,20500,20522,20517,20485,20252,20470,20513,20521,20524,20478,20463,20497,20486,20547,20551,26371,20565,20560,20552,20570,20566,20588,20600,20608,20634,20613,20660,20658,20681,20682,20659,20674,20694,20702,20709,20717,20707,20718,20729,20725,20745,20737,20738,20758,20757,20756,20762,20769,20794,20791,20796,20795,20799,20800,20818,20812,20820,20834,31480,20841,20842,20846,20864,20866,22232,20876,20873,20879,20881,20883,20885,20886,20900,20902,20898,20905,20906,20907,20915,20913,20914,20912,20917,20925,20933,20937,20955,20960,34389,20969,20973,20976,20981,20990,20996,21003,21012,21006,21031,21034,21038,21043,21049,21071,21060,21067,21068,21086,21076,21098,21108,21097,21107,21119,21117,21133,21140,21138,21105,21128,21137,36776,36775,21164,21165,21180,21173,21185,21197,21207,21214,21219,21222,39149,21216,21235,21237,21240,21241,21254,21256,30008,21261,21264,21263,21269,21274,21283,21295,21297,21299,21304,21312,21318,21317,19991,21321,21325,20950,21342,21353,21358,22808,21371,21367,21378,21398,21408,21414,21413,21422,21424,21430,21443,31762,38617,21471,26364,29166,21486,21480,21485,21498,21505,21565,21568,21548,21549,21564,21550,21558,21545,21533,21582,21647,21621,21646,21599,21617,21623,21616,21650,21627,21632,21622,21636,21648,21638,21703,21666,21688,21669,21676,21700,21704,21672,21675,21698,21668,21694,21692,21720,21733,21734,21775,21780,21757,21742,21741,21754,21730,21817,21824,21859,21836,21806,21852,21829,21846,21847,21816,21811,21853,21913,21888,21679,21898,21919,21883,21886,21912,21918,21934,21884,21891,21929,21895,21928,21978,21957,21983,21956,21980,21988,21972,22036,22007,22038,22014,22013,22043,22009,22094,22096,29151,22068,22070,22066,22072,22123,22116,22063,22124,22122,22150,22144,22154,22176,22164,22159,22181,22190,22198,22196,22210,22204,22209,22211,22208,22216,22222,22225,22227,22231,22254,22265,22272,22271,22276,22281,22280,22283,22285,22291,22296,22294,21959,22300,22310,22327,22328,22350,22331,22336,22351,22377,22464,22408,22369,22399,22409,22419,22432,22451,22436,22442,22448,22467,22470,22484,22482,22483,22538,22486,22499,22539,22553,22557,22642,22561,22626,22603,22640,27584,22610,22589,22649,22661,22713,22687,22699,22714,22750,22715,22712,22702,22725,22739,22737,22743,22745,22744,22757,22748,22756,22751,22767,22778,22777,22779,22780,22781,22786,22794,22800,22811,26790,22821,22828,22829,22834,22840,22846,31442,22869,22864,22862,22874,22872,22882,22880,22887,22892,22889,22904,22913,22941,20318,20395,22947,22962,22982,23016,23004,22925,23001,23002,23077,23071,23057,23068,23049,23066,23104,23148,23113,23093,23094,23138,23146,23194,23228,23230,23243,23234,23229,23267,23255,23270,23273,23254,23290,23291,23308,23307,23318,23346,23248,23338,23350,23358,23363,23365,23360,23377,23381,23386,23387,23397,23401,23408,23411,23413,23416,25992,23418,23424,23427,23462,23480,23491,23495,23497,23508,23504,23524,23526,23522,23518,23525,23531,23536,23542,23539,23557,23559,23560,23565,23571,23584,23586,23592,23608,23609,23617,23622,23630,23635,23632,23631,23409,23660,23662,20066,23670,23673,23692,23697,23700,22939,23723,23739,23734,23740,23735,23749,23742,23751,23769,23785,23805,23802,23789,23948,23786,23819,23829,23831,23900,23839,23835,23825,23828,23842,23834,23833,23832,23884,23890,23886,23883,23916,23923,23926,23943,23940,23938,23970,23965,23980,23982,23997,23952,23991,23996,24009,24013,24019,24018,24022,24027,24043,24050,24053,24075,24090,24089,24081,24091,24118,24119,24132,24131,24128,24142,24151,24148,24159,24162,24164,24135,24181,24182,24186,40636,24191,24224,24257,24258,24264,24272,24271,24278,24291,24285,24282,24283,24290,24289,24296,24297,24300,24305,24307,24304,24308,24312,24318,24323,24329,24413,24412,24331,24337,24342,24361,24365,24376,24385,24392,24396,24398,24367,24401,24406,24407,24409,24417,24429,24435,24439,24451,24450,24447,24458,24456,24465,24455,24478,24473,24472,24480,24488,24493,24508,24534,24571,24548,24568,24561,24541,24755,24575,24609,24672,24601,24592,24617,24590,24625,24603,24597,24619,24614,24591,24634,24666,24641,24682,24695,24671,24650,24646,24653,24675,24643,24676,24642,24684,24683,24665,24705,24717,24807,24707,24730,24708,24731,24726,24727,24722,24743,24715,24801,24760,24800,24787,24756,24560,24765,24774,24757,24792,24909,24853,24838,24822,24823,24832,24820,24826,24835,24865,24827,24817,24845,24846,24903,24894,24872,24871,24906,24895,24892,24876,24884,24893,24898,24900,24947,24951,24920,24921,24922,24939,24948,24943,24933,24945,24927,24925,24915,24949,24985,24982,24967,25004,24980,24986,24970,24977,25003,25006,25036,25034,25033,25079,25032,25027,25030,25018,25035,32633,25037,25062,25059,25078,25082,25076,25087,25085,25084,25086,25088,25096,25097,25101,25100,25108,25115,25118,25121,25130,25134,25136,25138,25139,25153,25166,25182,25187,25179,25184,25192,25212,25218,25225,25214,25234,25235,25238,25300,25219,25236,25303,25297,25275,25295,25343,25286,25812,25288,25308,25292,25290,25282,25287,25243,25289,25356,25326,25329,25383,25346,25352,25327,25333,25424,25406,25421,25628,25423,25494,25486,25472,25515,25462,25507,25487,25481,25503,25525,25451,25449,25534,25577,25536,25542,25571,25545,25554,25590,25540,25622,25652,25606,25619,25638,25654,25885,25623,25640,25615,25703,25711,25718,25678,25898,25749,25747,25765,25769,25736,25788,25818,25810,25797,25799,25787,25816,25794,25841,25831,33289,25824,25825,25260,25827,25839,25900,25846,25844,25842,25850,25856,25853,25880,25884,25861,25892,25891,25899,25908,25909,25911,25910,25912,30027,25928,25942,25941,25933,25944,25950,25949,25970,25976,25986,25987,35722,26011,26015,26027,26039,26051,26054,26049,26052,26060,26066,26075,26073,26080,26081,26097,26482,26122,26115,26107,26483,26165,26166,26164,26140,26191,26180,26185,26177,26206,26205,26212,26215,26216,26207,26210,26224,26243,26248,26254,26249,26244,26264,26269,26305,26297,26313,26302,26300,26308,26296,26326,26330,26336,26175,26342,26345,26352,26357,26359,26383,26390,26398,26406,26407,38712,26414,26431,26422,26433,26424,26423,26438,26462,26464,26457,26467,26468,26505,26480,26537,26492,26474,26508,26507,26534,26529,26501,26551,26607,26548,26604,26547,26601,26552,26596,26590,26589,26594,26606,26553,26574,26566,26599,27292,26654,26694,26665,26688,26701,26674,26702,26803,26667,26713,26723,26743,26751,26783,26767,26797,26772,26781,26779,26755,27310,26809,26740,26805,26784,26810,26895,26765,26750,26881,26826,26888,26840,26914,26918,26849,26892,26829,26836,26855,26837,26934,26898,26884,26839,26851,26917,26873,26848,26863,26920,26922,26906,26915,26913,26822,27001,26999,26972,27e3,26987,26964,27006,26990,26937,26996,26941,26969,26928,26977,26974,26973,27009,26986,27058,27054,27088,27071,27073,27091,27070,27086,23528,27082,27101,27067,27075,27047,27182,27025,27040,27036,27029,27060,27102,27112,27138,27163,27135,27402,27129,27122,27111,27141,27057,27166,27117,27156,27115,27146,27154,27329,27171,27155,27204,27148,27250,27190,27256,27207,27234,27225,27238,27208,27192,27170,27280,27277,27296,27268,27298,27299,27287,34327,27323,27331,27330,27320,27315,27308,27358,27345,27359,27306,27354,27370,27387,27397,34326,27386,27410,27414,39729,27423,27448,27447,30428,27449,39150,27463,27459,27465,27472,27481,27476,27483,27487,27489,27512,27513,27519,27520,27524,27523,27533,27544,27541,27550,27556,27562,27563,27567,27570,27569,27571,27575,27580,27590,27595,27603,27615,27628,27627,27635,27631,40638,27656,27667,27668,27675,27684,27683,27742,27733,27746,27754,27778,27789,27802,27777,27803,27774,27752,27763,27794,27792,27844,27889,27859,27837,27863,27845,27869,27822,27825,27838,27834,27867,27887,27865,27882,27935,34893,27958,27947,27965,27960,27929,27957,27955,27922,27916,28003,28051,28004,27994,28025,27993,28046,28053,28644,28037,28153,28181,28170,28085,28103,28134,28088,28102,28140,28126,28108,28136,28114,28101,28154,28121,28132,28117,28138,28142,28205,28270,28206,28185,28274,28255,28222,28195,28267,28203,28278,28237,28191,28227,28218,28238,28196,28415,28189,28216,28290,28330,28312,28361,28343,28371,28349,28335,28356,28338,28372,28373,28303,28325,28354,28319,28481,28433,28748,28396,28408,28414,28479,28402,28465,28399,28466,28364,28478,28435,28407,28550,28538,28536,28545,28544,28527,28507,28659,28525,28546,28540,28504,28558,28561,28610,28518,28595,28579,28577,28580,28601,28614,28586,28639,28629,28652,28628,28632,28657,28654,28635,28681,28683,28666,28689,28673,28687,28670,28699,28698,28532,28701,28696,28703,28720,28734,28722,28753,28771,28825,28818,28847,28913,28844,28856,28851,28846,28895,28875,28893,28889,28937,28925,28956,28953,29029,29013,29064,29030,29026,29004,29014,29036,29071,29179,29060,29077,29096,29100,29143,29113,29118,29138,29129,29140,29134,29152,29164,29159,29173,29180,29177,29183,29197,29200,29211,29224,29229,29228,29232,29234,29243,29244,29247,29248,29254,29259,29272,29300,29310,29314,29313,29319,29330,29334,29346,29351,29369,29362,29379,29382,29380,29390,29394,29410,29408,29409,29433,29431,20495,29463,29450,29468,29462,29469,29492,29487,29481,29477,29502,29518,29519,40664,29527,29546,29544,29552,29560,29557,29563,29562,29640,29619,29646,29627,29632,29669,29678,29662,29858,29701,29807,29733,29688,29746,29754,29781,29759,29791,29785,29761,29788,29801,29808,29795,29802,29814,29822,29835,29854,29863,29898,29903,29908,29681,29920,29923,29927,29929,29934,29938,29936,29937,29944,29943,29956,29955,29957,29964,29966,29965,29973,29971,29982,29990,29996,30012,30020,30029,30026,30025,30043,30022,30042,30057,30052,30055,30059,30061,30072,30070,30086,30087,30068,30090,30089,30082,30100,30106,30109,30117,30115,30146,30131,30147,30133,30141,30136,30140,30129,30157,30154,30162,30169,30179,30174,30206,30207,30204,30209,30192,30202,30194,30195,30219,30221,30217,30239,30247,30240,30241,30242,30244,30260,30256,30267,30279,30280,30278,30300,30296,30305,30306,30312,30313,30314,30311,30316,30320,30322,30326,30328,30332,30336,30339,30344,30347,30350,30358,30355,30361,30362,30384,30388,30392,30393,30394,30402,30413,30422,30418,30430,30433,30437,30439,30442,34351,30459,30472,30471,30468,30505,30500,30494,30501,30502,30491,30519,30520,30535,30554,30568,30571,30555,30565,30591,30590,30585,30606,30603,30609,30624,30622,30640,30646,30649,30655,30652,30653,30651,30663,30669,30679,30682,30684,30691,30702,30716,30732,30738,31014,30752,31018,30789,30862,30836,30854,30844,30874,30860,30883,30901,30890,30895,30929,30918,30923,30932,30910,30908,30917,30922,30956,30951,30938,30973,30964,30983,30994,30993,31001,31020,31019,31040,31072,31063,31071,31066,31061,31059,31098,31103,31114,31133,31143,40779,31146,31150,31155,31161,31162,31177,31189,31207,31212,31201,31203,31240,31245,31256,31257,31264,31263,31104,31281,31291,31294,31287,31299,31319,31305,31329,31330,31337,40861,31344,31353,31357,31368,31383,31381,31384,31382,31401,31432,31408,31414,31429,31428,31423,36995,31431,31434,31437,31439,31445,31443,31449,31450,31453,31457,31458,31462,31469,31472,31490,31503,31498,31494,31539,31512,31513,31518,31541,31528,31542,31568,31610,31492,31565,31499,31564,31557,31605,31589,31604,31591,31600,31601,31596,31598,31645,31640,31647,31629,31644,31642,31627,31634,31631,31581,31641,31691,31681,31692,31695,31668,31686,31709,31721,31761,31764,31718,31717,31840,31744,31751,31763,31731,31735,31767,31757,31734,31779,31783,31786,31775,31799,31787,31805,31820,31811,31828,31823,31808,31824,31832,31839,31844,31830,31845,31852,31861,31875,31888,31908,31917,31906,31915,31905,31912,31923,31922,31921,31918,31929,31933,31936,31941,31938,31960,31954,31964,31970,39739,31983,31986,31988,31990,31994,32006,32002,32028,32021,32010,32069,32075,32046,32050,32063,32053,32070,32115,32086,32078,32114,32104,32110,32079,32099,32147,32137,32091,32143,32125,32155,32186,32174,32163,32181,32199,32189,32171,32317,32162,32175,32220,32184,32159,32176,32216,32221,32228,32222,32251,32242,32225,32261,32266,32291,32289,32274,32305,32287,32265,32267,32290,32326,32358,32315,32309,32313,32323,32311,32306,32314,32359,32349,32342,32350,32345,32346,32377,32362,32361,32380,32379,32387,32213,32381,36782,32383,32392,32393,32396,32402,32400,32403,32404,32406,32398,32411,32412,32568,32570,32581,32588,32589,32590,32592,32593,32597,32596,32600,32607,32608,32616,32617,32615,32632,32642,32646,32643,32648,32647,32652,32660,32670,32669,32666,32675,32687,32690,32697,32686,32694,32696,35697,32709,32710,32714,32725,32724,32737,32742,32745,32755,32761,39132,32774,32772,32779,32786,32792,32793,32796,32801,32808,32831,32827,32842,32838,32850,32856,32858,32863,32866,32872,32883,32882,32880,32886,32889,32893,32895,32900,32902,32901,32923,32915,32922,32941,20880,32940,32987,32997,32985,32989,32964,32986,32982,33033,33007,33009,33051,33065,33059,33071,33099,38539,33094,33086,33107,33105,33020,33137,33134,33125,33126,33140,33155,33160,33162,33152,33154,33184,33173,33188,33187,33119,33171,33193,33200,33205,33214,33208,33213,33216,33218,33210,33225,33229,33233,33241,33240,33224,33242,33247,33248,33255,33274,33275,33278,33281,33282,33285,33287,33290,33293,33296,33302,33321,33323,33336,33331,33344,33369,33368,33373,33370,33375,33380,33378,33384,33386,33387,33326,33393,33399,33400,33406,33421,33426,33451,33439,33467,33452,33505,33507,33503,33490,33524,33523,33530,33683,33539,33531,33529,33502,33542,33500,33545,33497,33589,33588,33558,33586,33585,33600,33593,33616,33605,33583,33579,33559,33560,33669,33690,33706,33695,33698,33686,33571,33678,33671,33674,33660,33717,33651,33653,33696,33673,33704,33780,33811,33771,33742,33789,33795,33752,33803,33729,33783,33799,33760,33778,33805,33826,33824,33725,33848,34054,33787,33901,33834,33852,34138,33924,33911,33899,33965,33902,33922,33897,33862,33836,33903,33913,33845,33994,33890,33977,33983,33951,34009,33997,33979,34010,34e3,33985,33990,34006,33953,34081,34047,34036,34071,34072,34092,34079,34069,34068,34044,34112,34147,34136,34120,34113,34306,34123,34133,34176,34212,34184,34193,34186,34216,34157,34196,34203,34282,34183,34204,34167,34174,34192,34249,34234,34255,34233,34256,34261,34269,34277,34268,34297,34314,34323,34315,34302,34298,34310,34338,34330,34352,34367,34381,20053,34388,34399,34407,34417,34451,34467,34473,34474,34443,34444,34486,34479,34500,34502,34480,34505,34851,34475,34516,34526,34537,34540,34527,34523,34543,34578,34566,34568,34560,34563,34555,34577,34569,34573,34553,34570,34612,34623,34615,34619,34597,34601,34586,34656,34655,34680,34636,34638,34676,34647,34664,34670,34649,34643,34659,34666,34821,34722,34719,34690,34735,34763,34749,34752,34768,38614,34731,34756,34739,34759,34758,34747,34799,34802,34784,34831,34829,34814,34806,34807,34830,34770,34833,34838,34837,34850,34849,34865,34870,34873,34855,34875,34884,34882,34898,34905,34910,34914,34923,34945,34942,34974,34933,34941,34997,34930,34946,34967,34962,34990,34969,34978,34957,34980,34992,35007,34993,35011,35012,35028,35032,35033,35037,35065,35074,35068,35060,35048,35058,35076,35084,35082,35091,35139,35102,35109,35114,35115,35137,35140,35131,35126,35128,35148,35101,35168,35166,35174,35172,35181,35178,35183,35188,35191,35198,35203,35208,35210,35219,35224,35233,35241,35238,35244,35247,35250,35258,35261,35263,35264,35290,35292,35293,35303,35316,35320,35331,35350,35344,35340,35355,35357,35365,35382,35393,35419,35410,35398,35400,35452,35437,35436,35426,35461,35458,35460,35496,35489,35473,35493,35494,35482,35491,35524,35533,35522,35546,35563,35571,35559,35556,35569,35604,35552,35554,35575,35550,35547,35596,35591,35610,35553,35606,35600,35607,35616,35635,38827,35622,35627,35646,35624,35649,35660,35663,35662,35657,35670,35675,35674,35691,35679,35692,35695,35700,35709,35712,35724,35726,35730,35731,35734,35737,35738,35898,35905,35903,35912,35916,35918,35920,35925,35938,35948,35960,35962,35970,35977,35973,35978,35981,35982,35988,35964,35992,25117,36013,36010,36029,36018,36019,36014,36022,36040,36033,36068,36067,36058,36093,36090,36091,36100,36101,36106,36103,36111,36109,36112,40782,36115,36045,36116,36118,36199,36205,36209,36211,36225,36249,36290,36286,36282,36303,36314,36310,36300,36315,36299,36330,36331,36319,36323,36348,36360,36361,36351,36381,36382,36368,36383,36418,36405,36400,36404,36426,36423,36425,36428,36432,36424,36441,36452,36448,36394,36451,36437,36470,36466,36476,36481,36487,36485,36484,36491,36490,36499,36497,36500,36505,36522,36513,36524,36528,36550,36529,36542,36549,36552,36555,36571,36579,36604,36603,36587,36606,36618,36613,36629,36626,36633,36627,36636,36639,36635,36620,36646,36659,36667,36665,36677,36674,36670,36684,36681,36678,36686,36695,36700,36706,36707,36708,36764,36767,36771,36781,36783,36791,36826,36837,36834,36842,36847,36999,36852,36869,36857,36858,36881,36885,36897,36877,36894,36886,36875,36903,36918,36917,36921,36856,36943,36944,36945,36946,36878,36937,36926,36950,36952,36958,36968,36975,36982,38568,36978,36994,36989,36993,36992,37002,37001,37007,37032,37039,37041,37045,37090,37092,25160,37083,37122,37138,37145,37170,37168,37194,37206,37208,37219,37221,37225,37235,37234,37259,37257,37250,37282,37291,37295,37290,37301,37300,37306,37312,37313,37321,37323,37328,37334,37343,37345,37339,37372,37365,37366,37406,37375,37396,37420,37397,37393,37470,37463,37445,37449,37476,37448,37525,37439,37451,37456,37532,37526,37523,37531,37466,37583,37561,37559,37609,37647,37626,37700,37678,37657,37666,37658,37667,37690,37685,37691,37724,37728,37756,37742,37718,37808,37804,37805,37780,37817,37846,37847,37864,37861,37848,37827,37853,37840,37832,37860,37914,37908,37907,37891,37895,37904,37942,37931,37941,37921,37946,37953,37970,37956,37979,37984,37986,37982,37994,37417,38e3,38005,38007,38013,37978,38012,38014,38017,38015,38274,38279,38282,38292,38294,38296,38297,38304,38312,38311,38317,38332,38331,38329,38334,38346,28662,38339,38349,38348,38357,38356,38358,38364,38369,38373,38370,38433,38440,38446,38447,38466,38476,38479,38475,38519,38492,38494,38493,38495,38502,38514,38508,38541,38552,38549,38551,38570,38567,38577,38578,38576,38580,38582,38584,38585,38606,38603,38601,38605,35149,38620,38669,38613,38649,38660,38662,38664,38675,38670,38673,38671,38678,38681,38692,38698,38704,38713,38717,38718,38724,38726,38728,38722,38729,38748,38752,38756,38758,38760,21202,38763,38769,38777,38789,38780,38785,38778,38790,38795,38799,38800,38812,38824,38822,38819,38835,38836,38851,38854,38856,38859,38876,38893,40783,38898,31455,38902,38901,38927,38924,38968,38948,38945,38967,38973,38982,38991,38987,39019,39023,39024,39025,39028,39027,39082,39087,39089,39094,39108,39107,39110,39145,39147,39171,39177,39186,39188,39192,39201,39197,39198,39204,39200,39212,39214,39229,39230,39234,39241,39237,39248,39243,39249,39250,39244,39253,39319,39320,39333,39341,39342,39356,39391,39387,39389,39384,39377,39405,39406,39409,39410,39419,39416,39425,39439,39429,39394,39449,39467,39479,39493,39490,39488,39491,39486,39509,39501,39515,39511,39519,39522,39525,39524,39529,39531,39530,39597,39600,39612,39616,39631,39633,39635,39636,39646,39647,39650,39651,39654,39663,39659,39662,39668,39665,39671,39675,39686,39704,39706,39711,39714,39715,39717,39719,39720,39721,39722,39726,39727,39730,39748,39747,39759,39757,39758,39761,39768,39796,39827,39811,39825,39830,39831,39839,39840,39848,39860,39872,39882,39865,39878,39887,39889,39890,39907,39906,39908,39892,39905,39994,39922,39921,39920,39957,39956,39945,39955,39948,39942,39944,39954,39946,39940,39982,39963,39973,39972,39969,39984,40007,39986,40006,39998,40026,40032,40039,40054,40056,40167,40172,40176,40201,40200,40171,40195,40198,40234,40230,40367,40227,40223,40260,40213,40210,40257,40255,40254,40262,40264,40285,40286,40292,40273,40272,40281,40306,40329,40327,40363,40303,40314,40346,40356,40361,40370,40388,40385,40379,40376,40378,40390,40399,40386,40409,40403,40440,40422,40429,40431,40445,40474,40475,40478,40565,40569,40573,40577,40584,40587,40588,40594,40597,40593,40605,40613,40617,40632,40618,40621,38753,40652,40654,40655,40656,40660,40668,40670,40669,40672,40677,40680,40687,40692,40694,40695,40697,40699,40700,40701,40711,40712,30391,40725,40737,40748,40766,40778,40786,40788,40803,40799,40800,40801,40806,40807,40812,40810,40823,40818,40822,40853,40860,40864,22575,27079,36953,29796,20956,29081,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,65506,65508,65287,65282,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8560,8561,8562,8563,8564,8565,8566,8567,8568,8569,8544,8545,8546,8547,8548,8549,8550,8551,8552,8553,65506,65508,65287,65282,12849,8470,8481,8757,32394,35100,37704,37512,34012,20425,28859,26161,26824,37625,26363,24389,20008,20193,20220,20224,20227,20281,20310,20370,20362,20378,20372,20429,20544,20514,20479,20510,20550,20592,20546,20628,20724,20696,20810,20836,20893,20926,20972,21013,21148,21158,21184,21211,21248,21255,21284,21362,21395,21426,21469,64014,21660,21642,21673,21759,21894,22361,22373,22444,22472,22471,64015,64016,22686,22706,22795,22867,22875,22877,22883,22948,22970,23382,23488,29999,23512,23532,23582,23718,23738,23797,23847,23891,64017,23874,23917,23992,23993,24016,24353,24372,24423,24503,24542,24669,24709,24714,24798,24789,24864,24818,24849,24887,24880,24984,25107,25254,25589,25696,25757,25806,25934,26112,26133,26171,26121,26158,26142,26148,26213,26199,26201,64018,26227,26265,26272,26290,26303,26362,26382,63785,26470,26555,26706,26560,26625,26692,26831,64019,26984,64020,27032,27106,27184,27243,27206,27251,27262,27362,27364,27606,27711,27740,27782,27759,27866,27908,28039,28015,28054,28076,28111,28152,28146,28156,28217,28252,28199,28220,28351,28552,28597,28661,28677,28679,28712,28805,28843,28943,28932,29020,28998,28999,64021,29121,29182,29361,29374,29476,64022,29559,29629,29641,29654,29667,29650,29703,29685,29734,29738,29737,29742,29794,29833,29855,29953,30063,30338,30364,30366,30363,30374,64023,30534,21167,30753,30798,30820,30842,31024,64024,64025,64026,31124,64027,31131,31441,31463,64028,31467,31646,64029,32072,32092,32183,32160,32214,32338,32583,32673,64030,33537,33634,33663,33735,33782,33864,33972,34131,34137,34155,64031,34224,64032,64033,34823,35061,35346,35383,35449,35495,35518,35551,64034,35574,35667,35711,36080,36084,36114,36214,64035,36559,64036,64037,36967,37086,64038,37141,37159,37338,37335,37342,37357,37358,37348,37349,37382,37392,37386,37434,37440,37436,37454,37465,37457,37433,37479,37543,37495,37496,37607,37591,37593,37584,64039,37589,37600,37587,37669,37665,37627,64040,37662,37631,37661,37634,37744,37719,37796,37830,37854,37880,37937,37957,37960,38290,63964,64041,38557,38575,38707,38715,38723,38733,38735,38737,38741,38999,39013,64042,64043,39207,64044,39326,39502,39641,39644,39797,39794,39823,39857,39867,39936,40304,40299,64045,40473,40657,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],jis0212:[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,728,711,184,729,733,175,731,730,65374,900,901,null,null,null,null,null,null,null,null,161,166,191,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,186,170,169,174,8482,164,8470,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,902,904,905,906,938,null,908,null,910,939,null,911,null,null,null,null,940,941,942,943,970,912,972,962,973,971,944,974,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1038,1039,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1118,1119,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,198,272,null,294,null,306,null,321,319,null,330,216,338,null,358,222,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,230,273,240,295,305,307,312,322,320,329,331,248,339,223,359,254,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,193,192,196,194,258,461,256,260,197,195,262,264,268,199,266,270,201,200,203,202,282,278,274,280,null,284,286,290,288,292,205,204,207,206,463,304,298,302,296,308,310,313,317,315,323,327,325,209,211,210,214,212,465,336,332,213,340,344,342,346,348,352,350,356,354,218,217,220,219,364,467,368,362,370,366,360,471,475,473,469,372,221,376,374,377,381,379,null,null,null,null,null,null,null,225,224,228,226,259,462,257,261,229,227,263,265,269,231,267,271,233,232,235,234,283,279,275,281,501,285,287,null,289,293,237,236,239,238,464,null,299,303,297,309,311,314,318,316,324,328,326,241,243,242,246,244,466,337,333,245,341,345,343,347,349,353,351,357,355,250,249,252,251,365,468,369,363,371,367,361,472,476,474,470,373,253,255,375,378,382,380,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,19970,19972,19973,19980,19986,19999,20003,20004,20008,20011,20014,20015,20016,20021,20032,20033,20036,20039,20049,20058,20060,20067,20072,20073,20084,20085,20089,20095,20109,20118,20119,20125,20143,20153,20163,20176,20186,20187,20192,20193,20194,20200,20207,20209,20211,20213,20221,20222,20223,20224,20226,20227,20232,20235,20236,20242,20245,20246,20247,20249,20270,20273,20320,20275,20277,20279,20281,20283,20286,20288,20290,20296,20297,20299,20300,20306,20308,20310,20312,20319,20323,20330,20332,20334,20337,20343,20344,20345,20346,20349,20350,20353,20354,20356,20357,20361,20362,20364,20366,20368,20370,20371,20372,20375,20377,20378,20382,20383,20402,20407,20409,20411,20412,20413,20414,20416,20417,20421,20422,20424,20425,20427,20428,20429,20431,20434,20444,20448,20450,20464,20466,20476,20477,20479,20480,20481,20484,20487,20490,20492,20494,20496,20499,20503,20504,20507,20508,20509,20510,20514,20519,20526,20528,20530,20531,20533,20544,20545,20546,20549,20550,20554,20556,20558,20561,20562,20563,20567,20569,20575,20576,20578,20579,20582,20583,20586,20589,20592,20593,20539,20609,20611,20612,20614,20618,20622,20623,20624,20626,20627,20628,20630,20635,20636,20638,20639,20640,20641,20642,20650,20655,20656,20665,20666,20669,20672,20675,20676,20679,20684,20686,20688,20691,20692,20696,20700,20701,20703,20706,20708,20710,20712,20713,20719,20721,20726,20730,20734,20739,20742,20743,20744,20747,20748,20749,20750,20722,20752,20759,20761,20763,20764,20765,20766,20771,20775,20776,20780,20781,20783,20785,20787,20788,20789,20792,20793,20802,20810,20815,20819,20821,20823,20824,20831,20836,20838,20862,20867,20868,20875,20878,20888,20893,20897,20899,20909,20920,20922,20924,20926,20927,20930,20936,20943,20945,20946,20947,20949,20952,20958,20962,20965,20974,20978,20979,20980,20983,20993,20994,20997,21010,21011,21013,21014,21016,21026,21032,21041,21042,21045,21052,21061,21065,21077,21079,21080,21082,21084,21087,21088,21089,21094,21102,21111,21112,21113,21120,21122,21125,21130,21132,21139,21141,21142,21143,21144,21146,21148,21156,21157,21158,21159,21167,21168,21174,21175,21176,21178,21179,21181,21184,21188,21190,21192,21196,21199,21201,21204,21206,21211,21212,21217,21221,21224,21225,21226,21228,21232,21233,21236,21238,21239,21248,21251,21258,21259,21260,21265,21267,21272,21275,21276,21278,21279,21285,21287,21288,21289,21291,21292,21293,21296,21298,21301,21308,21309,21310,21314,21324,21323,21337,21339,21345,21347,21349,21356,21357,21362,21369,21374,21379,21383,21384,21390,21395,21396,21401,21405,21409,21412,21418,21419,21423,21426,21428,21429,21431,21432,21434,21437,21440,21445,21455,21458,21459,21461,21466,21469,21470,21472,21478,21479,21493,21506,21523,21530,21537,21543,21544,21546,21551,21553,21556,21557,21571,21572,21575,21581,21583,21598,21602,21604,21606,21607,21609,21611,21613,21614,21620,21631,21633,21635,21637,21640,21641,21645,21649,21653,21654,21660,21663,21665,21670,21671,21673,21674,21677,21678,21681,21687,21689,21690,21691,21695,21702,21706,21709,21710,21728,21738,21740,21743,21750,21756,21758,21759,21760,21761,21765,21768,21769,21772,21773,21774,21781,21802,21803,21810,21813,21814,21819,21820,21821,21825,21831,21833,21834,21837,21840,21841,21848,21850,21851,21854,21856,21857,21860,21862,21887,21889,21890,21894,21896,21902,21903,21905,21906,21907,21908,21911,21923,21924,21933,21938,21951,21953,21955,21958,21961,21963,21964,21966,21969,21970,21971,21975,21976,21979,21982,21986,21993,22006,22015,22021,22024,22026,22029,22030,22031,22032,22033,22034,22041,22060,22064,22067,22069,22071,22073,22075,22076,22077,22079,22080,22081,22083,22084,22086,22089,22091,22093,22095,22100,22110,22112,22113,22114,22115,22118,22121,22125,22127,22129,22130,22133,22148,22149,22152,22155,22156,22165,22169,22170,22173,22174,22175,22182,22183,22184,22185,22187,22188,22189,22193,22195,22199,22206,22213,22217,22218,22219,22223,22224,22220,22221,22233,22236,22237,22239,22241,22244,22245,22246,22247,22248,22257,22251,22253,22262,22263,22273,22274,22279,22282,22284,22289,22293,22298,22299,22301,22304,22306,22307,22308,22309,22313,22314,22316,22318,22319,22323,22324,22333,22334,22335,22341,22342,22348,22349,22354,22370,22373,22375,22376,22379,22381,22382,22383,22384,22385,22387,22388,22389,22391,22393,22394,22395,22396,22398,22401,22403,22412,22420,22423,22425,22426,22428,22429,22430,22431,22433,22421,22439,22440,22441,22444,22456,22461,22471,22472,22476,22479,22485,22493,22494,22500,22502,22503,22505,22509,22512,22517,22518,22520,22525,22526,22527,22531,22532,22536,22537,22497,22540,22541,22555,22558,22559,22560,22566,22567,22573,22578,22585,22591,22601,22604,22605,22607,22608,22613,22623,22625,22628,22631,22632,22648,22652,22655,22656,22657,22663,22664,22665,22666,22668,22669,22671,22672,22676,22678,22685,22688,22689,22690,22694,22697,22705,22706,22724,22716,22722,22728,22733,22734,22736,22738,22740,22742,22746,22749,22753,22754,22761,22771,22789,22790,22795,22796,22802,22803,22804,34369,22813,22817,22819,22820,22824,22831,22832,22835,22837,22838,22847,22851,22854,22866,22867,22873,22875,22877,22878,22879,22881,22883,22891,22893,22895,22898,22901,22902,22905,22907,22908,22923,22924,22926,22930,22933,22935,22943,22948,22951,22957,22958,22959,22960,22963,22967,22970,22972,22977,22979,22980,22984,22986,22989,22994,23005,23006,23007,23011,23012,23015,23022,23023,23025,23026,23028,23031,23040,23044,23052,23053,23054,23058,23059,23070,23075,23076,23079,23080,23082,23085,23088,23108,23109,23111,23112,23116,23120,23125,23134,23139,23141,23143,23149,23159,23162,23163,23166,23179,23184,23187,23190,23193,23196,23198,23199,23200,23202,23207,23212,23217,23218,23219,23221,23224,23226,23227,23231,23236,23238,23240,23247,23258,23260,23264,23269,23274,23278,23285,23286,23293,23296,23297,23304,23319,23348,23321,23323,23325,23329,23333,23341,23352,23361,23371,23372,23378,23382,23390,23400,23406,23407,23420,23421,23422,23423,23425,23428,23430,23434,23438,23440,23441,23443,23444,23446,23464,23465,23468,23469,23471,23473,23474,23479,23482,23484,23488,23489,23501,23503,23510,23511,23512,23513,23514,23520,23535,23537,23540,23549,23564,23575,23582,23583,23587,23590,23593,23595,23596,23598,23600,23602,23605,23606,23641,23642,23644,23650,23651,23655,23656,23657,23661,23664,23668,23669,23674,23675,23676,23677,23687,23688,23690,23695,23698,23709,23711,23712,23714,23715,23718,23722,23730,23732,23733,23738,23753,23755,23762,23773,23767,23790,23793,23794,23796,23809,23814,23821,23826,23851,23843,23844,23846,23847,23857,23860,23865,23869,23871,23874,23875,23878,23880,23893,23889,23897,23882,23903,23904,23905,23906,23908,23914,23917,23920,23929,23930,23934,23935,23937,23939,23944,23946,23954,23955,23956,23957,23961,23963,23967,23968,23975,23979,23984,23988,23992,23993,24003,24007,24011,24016,24014,24024,24025,24032,24036,24041,24056,24057,24064,24071,24077,24082,24084,24085,24088,24095,24096,24110,24104,24114,24117,24126,24139,24144,24137,24145,24150,24152,24155,24156,24158,24168,24170,24171,24172,24173,24174,24176,24192,24203,24206,24226,24228,24229,24232,24234,24236,24241,24243,24253,24254,24255,24262,24268,24267,24270,24273,24274,24276,24277,24284,24286,24293,24299,24322,24326,24327,24328,24334,24345,24348,24349,24353,24354,24355,24356,24360,24363,24364,24366,24368,24372,24374,24379,24381,24383,24384,24388,24389,24391,24397,24400,24404,24408,24411,24416,24419,24420,24423,24431,24434,24436,24437,24440,24442,24445,24446,24457,24461,24463,24470,24476,24477,24482,24487,24491,24484,24492,24495,24496,24497,24504,24516,24519,24520,24521,24523,24528,24529,24530,24531,24532,24542,24545,24546,24552,24553,24554,24556,24557,24558,24559,24562,24563,24566,24570,24572,24583,24586,24589,24595,24596,24599,24600,24602,24607,24612,24621,24627,24629,24640,24647,24648,24649,24652,24657,24660,24662,24663,24669,24673,24679,24689,24702,24703,24706,24710,24712,24714,24718,24721,24723,24725,24728,24733,24734,24738,24740,24741,24744,24752,24753,24759,24763,24766,24770,24772,24776,24777,24778,24779,24782,24783,24788,24789,24793,24795,24797,24798,24802,24805,24818,24821,24824,24828,24829,24834,24839,24842,24844,24848,24849,24850,24851,24852,24854,24855,24857,24860,24862,24866,24874,24875,24880,24881,24885,24886,24887,24889,24897,24901,24902,24905,24926,24928,24940,24946,24952,24955,24956,24959,24960,24961,24963,24964,24971,24973,24978,24979,24983,24984,24988,24989,24991,24992,24997,25e3,25002,25005,25016,25017,25020,25024,25025,25026,25038,25039,25045,25052,25053,25054,25055,25057,25058,25063,25065,25061,25068,25069,25071,25089,25091,25092,25095,25107,25109,25116,25120,25122,25123,25127,25129,25131,25145,25149,25154,25155,25156,25158,25164,25168,25169,25170,25172,25174,25178,25180,25188,25197,25199,25203,25210,25213,25229,25230,25231,25232,25254,25256,25267,25270,25271,25274,25278,25279,25284,25294,25301,25302,25306,25322,25330,25332,25340,25341,25347,25348,25354,25355,25357,25360,25363,25366,25368,25385,25386,25389,25397,25398,25401,25404,25409,25410,25411,25412,25414,25418,25419,25422,25426,25427,25428,25432,25435,25445,25446,25452,25453,25457,25460,25461,25464,25468,25469,25471,25474,25476,25479,25482,25488,25492,25493,25497,25498,25502,25508,25510,25517,25518,25519,25533,25537,25541,25544,25550,25553,25555,25556,25557,25564,25568,25573,25578,25580,25586,25587,25589,25592,25593,25609,25610,25616,25618,25620,25624,25630,25632,25634,25636,25637,25641,25642,25647,25648,25653,25661,25663,25675,25679,25681,25682,25683,25684,25690,25691,25692,25693,25695,25696,25697,25699,25709,25715,25716,25723,25725,25733,25735,25743,25744,25745,25752,25753,25755,25757,25759,25761,25763,25766,25768,25772,25779,25789,25790,25791,25796,25801,25802,25803,25804,25806,25808,25809,25813,25815,25828,25829,25833,25834,25837,25840,25845,25847,25851,25855,25857,25860,25864,25865,25866,25871,25875,25876,25878,25881,25883,25886,25887,25890,25894,25897,25902,25905,25914,25916,25917,25923,25927,25929,25936,25938,25940,25951,25952,25959,25963,25978,25981,25985,25989,25994,26002,26005,26008,26013,26016,26019,26022,26030,26034,26035,26036,26047,26050,26056,26057,26062,26064,26068,26070,26072,26079,26096,26098,26100,26101,26105,26110,26111,26112,26116,26120,26121,26125,26129,26130,26133,26134,26141,26142,26145,26146,26147,26148,26150,26153,26154,26155,26156,26158,26160,26161,26163,26169,26167,26176,26181,26182,26186,26188,26193,26190,26199,26200,26201,26203,26204,26208,26209,26363,26218,26219,26220,26238,26227,26229,26239,26231,26232,26233,26235,26240,26236,26251,26252,26253,26256,26258,26265,26266,26267,26268,26271,26272,26276,26285,26289,26290,26293,26299,26303,26304,26306,26307,26312,26316,26318,26319,26324,26331,26335,26344,26347,26348,26350,26362,26373,26375,26382,26387,26393,26396,26400,26402,26419,26430,26437,26439,26440,26444,26452,26453,26461,26470,26476,26478,26484,26486,26491,26497,26500,26510,26511,26513,26515,26518,26520,26521,26523,26544,26545,26546,26549,26555,26556,26557,26617,26560,26562,26563,26565,26568,26569,26578,26583,26585,26588,26593,26598,26608,26610,26614,26615,26706,26644,26649,26653,26655,26664,26663,26668,26669,26671,26672,26673,26675,26683,26687,26692,26693,26698,26700,26709,26711,26712,26715,26731,26734,26735,26736,26737,26738,26741,26745,26746,26747,26748,26754,26756,26758,26760,26774,26776,26778,26780,26785,26787,26789,26793,26794,26798,26802,26811,26821,26824,26828,26831,26832,26833,26835,26838,26841,26844,26845,26853,26856,26858,26859,26860,26861,26864,26865,26869,26870,26875,26876,26877,26886,26889,26890,26896,26897,26899,26902,26903,26929,26931,26933,26936,26939,26946,26949,26953,26958,26967,26971,26979,26980,26981,26982,26984,26985,26988,26992,26993,26994,27002,27003,27007,27008,27021,27026,27030,27032,27041,27045,27046,27048,27051,27053,27055,27063,27064,27066,27068,27077,27080,27089,27094,27095,27106,27109,27118,27119,27121,27123,27125,27134,27136,27137,27139,27151,27153,27157,27162,27165,27168,27172,27176,27184,27186,27188,27191,27195,27198,27199,27205,27206,27209,27210,27214,27216,27217,27218,27221,27222,27227,27236,27239,27242,27249,27251,27262,27265,27267,27270,27271,27273,27275,27281,27291,27293,27294,27295,27301,27307,27311,27312,27313,27316,27325,27326,27327,27334,27337,27336,27340,27344,27348,27349,27350,27356,27357,27364,27367,27372,27376,27377,27378,27388,27389,27394,27395,27398,27399,27401,27407,27408,27409,27415,27419,27422,27428,27432,27435,27436,27439,27445,27446,27451,27455,27462,27466,27469,27474,27478,27480,27485,27488,27495,27499,27502,27504,27509,27517,27518,27522,27525,27543,27547,27551,27552,27554,27555,27560,27561,27564,27565,27566,27568,27576,27577,27581,27582,27587,27588,27593,27596,27606,27610,27617,27619,27622,27623,27630,27633,27639,27641,27647,27650,27652,27653,27657,27661,27662,27664,27666,27673,27679,27686,27687,27688,27692,27694,27699,27701,27702,27706,27707,27711,27722,27723,27725,27727,27730,27732,27737,27739,27740,27755,27757,27759,27764,27766,27768,27769,27771,27781,27782,27783,27785,27796,27797,27799,27800,27804,27807,27824,27826,27828,27842,27846,27853,27855,27856,27857,27858,27860,27862,27866,27868,27872,27879,27881,27883,27884,27886,27890,27892,27908,27911,27914,27918,27919,27921,27923,27930,27942,27943,27944,27751,27950,27951,27953,27961,27964,27967,27991,27998,27999,28001,28005,28007,28015,28016,28028,28034,28039,28049,28050,28052,28054,28055,28056,28074,28076,28084,28087,28089,28093,28095,28100,28104,28106,28110,28111,28118,28123,28125,28127,28128,28130,28133,28137,28143,28144,28148,28150,28156,28160,28164,28190,28194,28199,28210,28214,28217,28219,28220,28228,28229,28232,28233,28235,28239,28241,28242,28243,28244,28247,28252,28253,28254,28258,28259,28264,28275,28283,28285,28301,28307,28313,28320,28327,28333,28334,28337,28339,28347,28351,28352,28353,28355,28359,28360,28362,28365,28366,28367,28395,28397,28398,28409,28411,28413,28420,28424,28426,28428,28429,28438,28440,28442,28443,28454,28457,28458,28463,28464,28467,28470,28475,28476,28461,28495,28497,28498,28499,28503,28505,28506,28509,28510,28513,28514,28520,28524,28541,28542,28547,28551,28552,28555,28556,28557,28560,28562,28563,28564,28566,28570,28575,28576,28581,28582,28583,28584,28590,28591,28592,28597,28598,28604,28613,28615,28616,28618,28634,28638,28648,28649,28656,28661,28665,28668,28669,28672,28677,28678,28679,28685,28695,28704,28707,28719,28724,28727,28729,28732,28739,28740,28744,28745,28746,28747,28756,28757,28765,28766,28750,28772,28773,28780,28782,28789,28790,28798,28801,28805,28806,28820,28821,28822,28823,28824,28827,28836,28843,28848,28849,28852,28855,28874,28881,28883,28884,28885,28886,28888,28892,28900,28922,28931,28932,28933,28934,28935,28939,28940,28943,28958,28960,28971,28973,28975,28976,28977,28984,28993,28997,28998,28999,29002,29003,29008,29010,29015,29018,29020,29022,29024,29032,29049,29056,29061,29063,29068,29074,29082,29083,29088,29090,29103,29104,29106,29107,29114,29119,29120,29121,29124,29131,29132,29139,29142,29145,29146,29148,29176,29182,29184,29191,29192,29193,29203,29207,29210,29213,29215,29220,29227,29231,29236,29240,29241,29249,29250,29251,29253,29262,29263,29264,29267,29269,29270,29274,29276,29278,29280,29283,29288,29291,29294,29295,29297,29303,29304,29307,29308,29311,29316,29321,29325,29326,29331,29339,29352,29357,29358,29361,29364,29374,29377,29383,29385,29388,29397,29398,29400,29407,29413,29427,29428,29434,29435,29438,29442,29444,29445,29447,29451,29453,29458,29459,29464,29465,29470,29474,29476,29479,29480,29484,29489,29490,29493,29498,29499,29501,29507,29517,29520,29522,29526,29528,29533,29534,29535,29536,29542,29543,29545,29547,29548,29550,29551,29553,29559,29561,29564,29568,29569,29571,29573,29574,29582,29584,29587,29589,29591,29592,29596,29598,29599,29600,29602,29605,29606,29610,29611,29613,29621,29623,29625,29628,29629,29631,29637,29638,29641,29643,29644,29647,29650,29651,29654,29657,29661,29665,29667,29670,29671,29673,29684,29685,29687,29689,29690,29691,29693,29695,29696,29697,29700,29703,29706,29713,29722,29723,29732,29734,29736,29737,29738,29739,29740,29741,29742,29743,29744,29745,29753,29760,29763,29764,29766,29767,29771,29773,29777,29778,29783,29789,29794,29798,29799,29800,29803,29805,29806,29809,29810,29824,29825,29829,29830,29831,29833,29839,29840,29841,29842,29848,29849,29850,29852,29855,29856,29857,29859,29862,29864,29865,29866,29867,29870,29871,29873,29874,29877,29881,29883,29887,29896,29897,29900,29904,29907,29912,29914,29915,29918,29919,29924,29928,29930,29931,29935,29940,29946,29947,29948,29951,29958,29970,29974,29975,29984,29985,29988,29991,29993,29994,29999,30006,30009,30013,30014,30015,30016,30019,30023,30024,30030,30032,30034,30039,30046,30047,30049,30063,30065,30073,30074,30075,30076,30077,30078,30081,30085,30096,30098,30099,30101,30105,30108,30114,30116,30132,30138,30143,30144,30145,30148,30150,30156,30158,30159,30167,30172,30175,30176,30177,30180,30183,30188,30190,30191,30193,30201,30208,30210,30211,30212,30215,30216,30218,30220,30223,30226,30227,30229,30230,30233,30235,30236,30237,30238,30243,30245,30246,30249,30253,30258,30259,30261,30264,30265,30266,30268,30282,30272,30273,30275,30276,30277,30281,30283,30293,30297,30303,30308,30309,30317,30318,30319,30321,30324,30337,30341,30348,30349,30357,30363,30364,30365,30367,30368,30370,30371,30372,30373,30374,30375,30376,30378,30381,30397,30401,30405,30409,30411,30412,30414,30420,30425,30432,30438,30440,30444,30448,30449,30454,30457,30460,30464,30470,30474,30478,30482,30484,30485,30487,30489,30490,30492,30498,30504,30509,30510,30511,30516,30517,30518,30521,30525,30526,30530,30533,30534,30538,30541,30542,30543,30546,30550,30551,30556,30558,30559,30560,30562,30564,30567,30570,30572,30576,30578,30579,30580,30586,30589,30592,30596,30604,30605,30612,30613,30614,30618,30623,30626,30631,30634,30638,30639,30641,30645,30654,30659,30665,30673,30674,30677,30681,30686,30687,30688,30692,30694,30698,30700,30704,30705,30708,30712,30715,30725,30726,30729,30733,30734,30737,30749,30753,30754,30755,30765,30766,30768,30773,30775,30787,30788,30791,30792,30796,30798,30802,30812,30814,30816,30817,30819,30820,30824,30826,30830,30842,30846,30858,30863,30868,30872,30881,30877,30878,30879,30884,30888,30892,30893,30896,30897,30898,30899,30907,30909,30911,30919,30920,30921,30924,30926,30930,30931,30933,30934,30948,30939,30943,30944,30945,30950,30954,30962,30963,30976,30966,30967,30970,30971,30975,30982,30988,30992,31002,31004,31006,31007,31008,31013,31015,31017,31021,31025,31028,31029,31035,31037,31039,31044,31045,31046,31050,31051,31055,31057,31060,31064,31067,31068,31079,31081,31083,31090,31097,31099,31100,31102,31115,31116,31121,31123,31124,31125,31126,31128,31131,31132,31137,31144,31145,31147,31151,31153,31156,31160,31163,31170,31172,31175,31176,31178,31183,31188,31190,31194,31197,31198,31200,31202,31205,31210,31211,31213,31217,31224,31228,31234,31235,31239,31241,31242,31244,31249,31253,31259,31262,31265,31271,31275,31277,31279,31280,31284,31285,31288,31289,31290,31300,31301,31303,31304,31308,31317,31318,31321,31324,31325,31327,31328,31333,31335,31338,31341,31349,31352,31358,31360,31362,31365,31366,31370,31371,31376,31377,31380,31390,31392,31395,31404,31411,31413,31417,31419,31420,31430,31433,31436,31438,31441,31451,31464,31465,31467,31468,31473,31476,31483,31485,31486,31495,31508,31519,31523,31527,31529,31530,31531,31533,31534,31535,31536,31537,31540,31549,31551,31552,31553,31559,31566,31573,31584,31588,31590,31593,31594,31597,31599,31602,31603,31607,31620,31625,31630,31632,31633,31638,31643,31646,31648,31653,31660,31663,31664,31666,31669,31670,31674,31675,31676,31677,31682,31685,31688,31690,31700,31702,31703,31705,31706,31707,31720,31722,31730,31732,31733,31736,31737,31738,31740,31742,31745,31746,31747,31748,31750,31753,31755,31756,31758,31759,31769,31771,31776,31781,31782,31784,31788,31793,31795,31796,31798,31801,31802,31814,31818,31829,31825,31826,31827,31833,31834,31835,31836,31837,31838,31841,31843,31847,31849,31853,31854,31856,31858,31865,31868,31869,31878,31879,31887,31892,31902,31904,31910,31920,31926,31927,31930,31931,31932,31935,31940,31943,31944,31945,31949,31951,31955,31956,31957,31959,31961,31962,31965,31974,31977,31979,31989,32003,32007,32008,32009,32015,32017,32018,32019,32022,32029,32030,32035,32038,32042,32045,32049,32060,32061,32062,32064,32065,32071,32072,32077,32081,32083,32087,32089,32090,32092,32093,32101,32103,32106,32112,32120,32122,32123,32127,32129,32130,32131,32133,32134,32136,32139,32140,32141,32145,32150,32151,32157,32158,32166,32167,32170,32179,32182,32183,32185,32194,32195,32196,32197,32198,32204,32205,32206,32215,32217,32256,32226,32229,32230,32234,32235,32237,32241,32245,32246,32249,32250,32264,32272,32273,32277,32279,32284,32285,32288,32295,32296,32300,32301,32303,32307,32310,32319,32324,32325,32327,32334,32336,32338,32344,32351,32353,32354,32357,32363,32366,32367,32371,32376,32382,32385,32390,32391,32394,32397,32401,32405,32408,32410,32413,32414,32572,32571,32573,32574,32575,32579,32580,32583,32591,32594,32595,32603,32604,32605,32609,32611,32612,32613,32614,32621,32625,32637,32638,32639,32640,32651,32653,32655,32656,32657,32662,32663,32668,32673,32674,32678,32682,32685,32692,32700,32703,32704,32707,32712,32718,32719,32731,32735,32739,32741,32744,32748,32750,32751,32754,32762,32765,32766,32767,32775,32776,32778,32781,32782,32783,32785,32787,32788,32790,32797,32798,32799,32800,32804,32806,32812,32814,32816,32820,32821,32823,32825,32826,32828,32830,32832,32836,32864,32868,32870,32877,32881,32885,32897,32904,32910,32924,32926,32934,32935,32939,32952,32953,32968,32973,32975,32978,32980,32981,32983,32984,32992,33005,33006,33008,33010,33011,33014,33017,33018,33022,33027,33035,33046,33047,33048,33052,33054,33056,33060,33063,33068,33072,33077,33082,33084,33093,33095,33098,33100,33106,33111,33120,33121,33127,33128,33129,33133,33135,33143,33153,33168,33156,33157,33158,33163,33166,33174,33176,33179,33182,33186,33198,33202,33204,33211,33227,33219,33221,33226,33230,33231,33237,33239,33243,33245,33246,33249,33252,33259,33260,33264,33265,33266,33269,33270,33272,33273,33277,33279,33280,33283,33295,33299,33300,33305,33306,33309,33313,33314,33320,33330,33332,33338,33347,33348,33349,33350,33355,33358,33359,33361,33366,33372,33376,33379,33383,33389,33396,33403,33405,33407,33408,33409,33411,33412,33415,33417,33418,33422,33425,33428,33430,33432,33434,33435,33440,33441,33443,33444,33447,33448,33449,33450,33454,33456,33458,33460,33463,33466,33468,33470,33471,33478,33488,33493,33498,33504,33506,33508,33512,33514,33517,33519,33526,33527,33533,33534,33536,33537,33543,33544,33546,33547,33620,33563,33565,33566,33567,33569,33570,33580,33581,33582,33584,33587,33591,33594,33596,33597,33602,33603,33604,33607,33613,33614,33617,33621,33622,33623,33648,33656,33661,33663,33664,33666,33668,33670,33677,33682,33684,33685,33688,33689,33691,33692,33693,33702,33703,33705,33708,33726,33727,33728,33735,33737,33743,33744,33745,33748,33757,33619,33768,33770,33782,33784,33785,33788,33793,33798,33802,33807,33809,33813,33817,33709,33839,33849,33861,33863,33864,33866,33869,33871,33873,33874,33878,33880,33881,33882,33884,33888,33892,33893,33895,33898,33904,33907,33908,33910,33912,33916,33917,33921,33925,33938,33939,33941,33950,33958,33960,33961,33962,33967,33969,33972,33978,33981,33982,33984,33986,33991,33992,33996,33999,34003,34012,34023,34026,34031,34032,34033,34034,34039,34098,34042,34043,34045,34050,34051,34055,34060,34062,34064,34076,34078,34082,34083,34084,34085,34087,34090,34091,34095,34099,34100,34102,34111,34118,34127,34128,34129,34130,34131,34134,34137,34140,34141,34142,34143,34144,34145,34146,34148,34155,34159,34169,34170,34171,34173,34175,34177,34181,34182,34185,34187,34188,34191,34195,34200,34205,34207,34208,34210,34213,34215,34228,34230,34231,34232,34236,34237,34238,34239,34242,34247,34250,34251,34254,34221,34264,34266,34271,34272,34278,34280,34285,34291,34294,34300,34303,34304,34308,34309,34317,34318,34320,34321,34322,34328,34329,34331,34334,34337,34343,34345,34358,34360,34362,34364,34365,34368,34370,34374,34386,34387,34390,34391,34392,34393,34397,34400,34401,34402,34403,34404,34409,34412,34415,34421,34422,34423,34426,34445,34449,34454,34456,34458,34460,34465,34470,34471,34472,34477,34481,34483,34484,34485,34487,34488,34489,34495,34496,34497,34499,34501,34513,34514,34517,34519,34522,34524,34528,34531,34533,34535,34440,34554,34556,34557,34564,34565,34567,34571,34574,34575,34576,34579,34580,34585,34590,34591,34593,34595,34600,34606,34607,34609,34610,34617,34618,34620,34621,34622,34624,34627,34629,34637,34648,34653,34657,34660,34661,34671,34673,34674,34683,34691,34692,34693,34694,34695,34696,34697,34699,34700,34704,34707,34709,34711,34712,34713,34718,34720,34723,34727,34732,34733,34734,34737,34741,34750,34751,34753,34760,34761,34762,34766,34773,34774,34777,34778,34780,34783,34786,34787,34788,34794,34795,34797,34801,34803,34808,34810,34815,34817,34819,34822,34825,34826,34827,34832,34841,34834,34835,34836,34840,34842,34843,34844,34846,34847,34856,34861,34862,34864,34866,34869,34874,34876,34881,34883,34885,34888,34889,34890,34891,34894,34897,34901,34902,34904,34906,34908,34911,34912,34916,34921,34929,34937,34939,34944,34968,34970,34971,34972,34975,34976,34984,34986,35002,35005,35006,35008,35018,35019,35020,35021,35022,35025,35026,35027,35035,35038,35047,35055,35056,35057,35061,35063,35073,35078,35085,35086,35087,35093,35094,35096,35097,35098,35100,35104,35110,35111,35112,35120,35121,35122,35125,35129,35130,35134,35136,35138,35141,35142,35145,35151,35154,35159,35162,35163,35164,35169,35170,35171,35179,35182,35184,35187,35189,35194,35195,35196,35197,35209,35213,35216,35220,35221,35227,35228,35231,35232,35237,35248,35252,35253,35254,35255,35260,35284,35285,35286,35287,35288,35301,35305,35307,35309,35313,35315,35318,35321,35325,35327,35332,35333,35335,35343,35345,35346,35348,35349,35358,35360,35362,35364,35366,35371,35372,35375,35381,35383,35389,35390,35392,35395,35397,35399,35401,35405,35406,35411,35414,35415,35416,35420,35421,35425,35429,35431,35445,35446,35447,35449,35450,35451,35454,35455,35456,35459,35462,35467,35471,35472,35474,35478,35479,35481,35487,35495,35497,35502,35503,35507,35510,35511,35515,35518,35523,35526,35528,35529,35530,35537,35539,35540,35541,35543,35549,35551,35564,35568,35572,35573,35574,35580,35583,35589,35590,35595,35601,35612,35614,35615,35594,35629,35632,35639,35644,35650,35651,35652,35653,35654,35656,35666,35667,35668,35673,35661,35678,35683,35693,35702,35704,35705,35708,35710,35713,35716,35717,35723,35725,35727,35732,35733,35740,35742,35743,35896,35897,35901,35902,35909,35911,35913,35915,35919,35921,35923,35924,35927,35928,35931,35933,35929,35939,35940,35942,35944,35945,35949,35955,35957,35958,35963,35966,35974,35975,35979,35984,35986,35987,35993,35995,35996,36004,36025,36026,36037,36038,36041,36043,36047,36054,36053,36057,36061,36065,36072,36076,36079,36080,36082,36085,36087,36088,36094,36095,36097,36099,36105,36114,36119,36123,36197,36201,36204,36206,36223,36226,36228,36232,36237,36240,36241,36245,36254,36255,36256,36262,36267,36268,36271,36274,36277,36279,36281,36283,36288,36293,36294,36295,36296,36298,36302,36305,36308,36309,36311,36313,36324,36325,36327,36332,36336,36284,36337,36338,36340,36349,36353,36356,36357,36358,36363,36369,36372,36374,36384,36385,36386,36387,36390,36391,36401,36403,36406,36407,36408,36409,36413,36416,36417,36427,36429,36430,36431,36436,36443,36444,36445,36446,36449,36450,36457,36460,36461,36463,36464,36465,36473,36474,36475,36482,36483,36489,36496,36498,36501,36506,36507,36509,36510,36514,36519,36521,36525,36526,36531,36533,36538,36539,36544,36545,36547,36548,36551,36559,36561,36564,36572,36584,36590,36592,36593,36599,36601,36602,36589,36608,36610,36615,36616,36623,36624,36630,36631,36632,36638,36640,36641,36643,36645,36647,36648,36652,36653,36654,36660,36661,36662,36663,36666,36672,36673,36675,36679,36687,36689,36690,36691,36692,36693,36696,36701,36702,36709,36765,36768,36769,36772,36773,36774,36789,36790,36792,36798,36800,36801,36806,36810,36811,36813,36816,36818,36819,36821,36832,36835,36836,36840,36846,36849,36853,36854,36859,36862,36866,36868,36872,36876,36888,36891,36904,36905,36911,36906,36908,36909,36915,36916,36919,36927,36931,36932,36940,36955,36957,36962,36966,36967,36972,36976,36980,36985,36997,37e3,37003,37004,37006,37008,37013,37015,37016,37017,37019,37024,37025,37026,37029,37040,37042,37043,37044,37046,37053,37068,37054,37059,37060,37061,37063,37064,37077,37079,37080,37081,37084,37085,37087,37093,37074,37110,37099,37103,37104,37108,37118,37119,37120,37124,37125,37126,37128,37133,37136,37140,37142,37143,37144,37146,37148,37150,37152,37157,37154,37155,37159,37161,37166,37167,37169,37172,37174,37175,37177,37178,37180,37181,37187,37191,37192,37199,37203,37207,37209,37210,37211,37217,37220,37223,37229,37236,37241,37242,37243,37249,37251,37253,37254,37258,37262,37265,37267,37268,37269,37272,37278,37281,37286,37288,37292,37293,37294,37296,37297,37298,37299,37302,37307,37308,37309,37311,37314,37315,37317,37331,37332,37335,37337,37338,37342,37348,37349,37353,37354,37356,37357,37358,37359,37360,37361,37367,37369,37371,37373,37376,37377,37380,37381,37382,37383,37385,37386,37388,37392,37394,37395,37398,37400,37404,37405,37411,37412,37413,37414,37416,37422,37423,37424,37427,37429,37430,37432,37433,37434,37436,37438,37440,37442,37443,37446,37447,37450,37453,37454,37455,37457,37464,37465,37468,37469,37472,37473,37477,37479,37480,37481,37486,37487,37488,37493,37494,37495,37496,37497,37499,37500,37501,37503,37512,37513,37514,37517,37518,37522,37527,37529,37535,37536,37540,37541,37543,37544,37547,37551,37554,37558,37560,37562,37563,37564,37565,37567,37568,37569,37570,37571,37573,37574,37575,37576,37579,37580,37581,37582,37584,37587,37589,37591,37592,37593,37596,37597,37599,37600,37601,37603,37605,37607,37608,37612,37614,37616,37625,37627,37631,37632,37634,37640,37645,37649,37652,37653,37660,37661,37662,37663,37665,37668,37669,37671,37673,37674,37683,37684,37686,37687,37703,37704,37705,37712,37713,37714,37717,37719,37720,37722,37726,37732,37733,37735,37737,37738,37741,37743,37744,37745,37747,37748,37750,37754,37757,37759,37760,37761,37762,37768,37770,37771,37773,37775,37778,37781,37784,37787,37790,37793,37795,37796,37798,37800,37803,37812,37813,37814,37818,37801,37825,37828,37829,37830,37831,37833,37834,37835,37836,37837,37843,37849,37852,37854,37855,37858,37862,37863,37881,37879,37880,37882,37883,37885,37889,37890,37892,37896,37897,37901,37902,37903,37909,37910,37911,37919,37934,37935,37937,37938,37939,37940,37947,37951,37949,37955,37957,37960,37962,37964,37973,37977,37980,37983,37985,37987,37992,37995,37997,37998,37999,38001,38002,38020,38019,38264,38265,38270,38276,38280,38284,38285,38286,38301,38302,38303,38305,38310,38313,38315,38316,38324,38326,38330,38333,38335,38342,38344,38345,38347,38352,38353,38354,38355,38361,38362,38365,38366,38367,38368,38372,38374,38429,38430,38434,38436,38437,38438,38444,38449,38451,38455,38456,38457,38458,38460,38461,38465,38482,38484,38486,38487,38488,38497,38510,38516,38523,38524,38526,38527,38529,38530,38531,38532,38537,38545,38550,38554,38557,38559,38564,38565,38566,38569,38574,38575,38579,38586,38602,38610,23986,38616,38618,38621,38622,38623,38633,38639,38641,38650,38658,38659,38661,38665,38682,38683,38685,38689,38690,38691,38696,38705,38707,38721,38723,38730,38734,38735,38741,38743,38744,38746,38747,38755,38759,38762,38766,38771,38774,38775,38776,38779,38781,38783,38784,38793,38805,38806,38807,38809,38810,38814,38815,38818,38828,38830,38833,38834,38837,38838,38840,38841,38842,38844,38846,38847,38849,38852,38853,38855,38857,38858,38860,38861,38862,38864,38865,38868,38871,38872,38873,38877,38878,38880,38875,38881,38884,38895,38897,38900,38903,38904,38906,38919,38922,38937,38925,38926,38932,38934,38940,38942,38944,38947,38950,38955,38958,38959,38960,38962,38963,38965,38949,38974,38980,38983,38986,38993,38994,38995,38998,38999,39001,39002,39010,39011,39013,39014,39018,39020,39083,39085,39086,39088,39092,39095,39096,39098,39099,39103,39106,39109,39112,39116,39137,39139,39141,39142,39143,39146,39155,39158,39170,39175,39176,39185,39189,39190,39191,39194,39195,39196,39199,39202,39206,39207,39211,39217,39218,39219,39220,39221,39225,39226,39227,39228,39232,39233,39238,39239,39240,39245,39246,39252,39256,39257,39259,39260,39262,39263,39264,39323,39325,39327,39334,39344,39345,39346,39349,39353,39354,39357,39359,39363,39369,39379,39380,39385,39386,39388,39390,39399,39402,39403,39404,39408,39412,39413,39417,39421,39422,39426,39427,39428,39435,39436,39440,39441,39446,39454,39456,39458,39459,39460,39463,39469,39470,39475,39477,39478,39480,39495,39489,39492,39498,39499,39500,39502,39505,39508,39510,39517,39594,39596,39598,39599,39602,39604,39605,39606,39609,39611,39614,39615,39617,39619,39622,39624,39630,39632,39634,39637,39638,39639,39643,39644,39648,39652,39653,39655,39657,39660,39666,39667,39669,39673,39674,39677,39679,39680,39681,39682,39683,39684,39685,39688,39689,39691,39692,39693,39694,39696,39698,39702,39705,39707,39708,39712,39718,39723,39725,39731,39732,39733,39735,39737,39738,39741,39752,39755,39756,39765,39766,39767,39771,39774,39777,39779,39781,39782,39784,39786,39787,39788,39789,39790,39795,39797,39799,39800,39801,39807,39808,39812,39813,39814,39815,39817,39818,39819,39821,39823,39824,39828,39834,39837,39838,39846,39847,39849,39852,39856,39857,39858,39863,39864,39867,39868,39870,39871,39873,39879,39880,39886,39888,39895,39896,39901,39903,39909,39911,39914,39915,39919,39923,39927,39928,39929,39930,39933,39935,39936,39938,39947,39951,39953,39958,39960,39961,39962,39964,39966,39970,39971,39974,39975,39976,39977,39978,39985,39989,39990,39991,39997,40001,40003,40004,40005,40009,40010,40014,40015,40016,40019,40020,40022,40024,40027,40029,40030,40031,40035,40041,40042,40028,40043,40040,40046,40048,40050,40053,40055,40059,40166,40178,40183,40185,40203,40194,40209,40215,40216,40220,40221,40222,40239,40240,40242,40243,40244,40250,40252,40261,40253,40258,40259,40263,40266,40275,40276,40287,40291,40290,40293,40297,40298,40299,40304,40310,40311,40315,40316,40318,40323,40324,40326,40330,40333,40334,40338,40339,40341,40342,40343,40344,40353,40362,40364,40366,40369,40373,40377,40380,40383,40387,40391,40393,40394,40404,40405,40406,40407,40410,40414,40415,40416,40421,40423,40425,40427,40430,40432,40435,40436,40446,40458,40450,40455,40462,40464,40465,40466,40469,40470,40473,40476,40477,40570,40571,40572,40576,40578,40579,40580,40581,40583,40590,40591,40598,40600,40603,40606,40612,40616,40620,40622,40623,40624,40627,40628,40629,40646,40648,40651,40661,40671,40676,40679,40684,40685,40686,40688,40689,40690,40693,40696,40703,40706,40707,40713,40719,40720,40721,40722,40724,40726,40727,40729,40730,40731,40735,40738,40742,40746,40747,40751,40753,40754,40756,40759,40761,40762,40764,40765,40767,40769,40771,40772,40773,40774,40775,40787,40789,40790,40791,40792,40794,40797,40798,40808,40809,40813,40814,40815,40816,40817,40819,40821,40826,40829,40847,40848,40849,40850,40852,40854,40855,40862,40865,40866,40867,40869,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],ibm866:[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,9617,9618,9619,9474,9508,9569,9570,9558,9557,9571,9553,9559,9565,9564,9563,9488,9492,9524,9516,9500,9472,9532,9566,9567,9562,9556,9577,9574,9568,9552,9580,9575,9576,9572,9573,9561,9560,9554,9555,9579,9578,9496,9484,9608,9604,9612,9616,9600,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1025,1105,1028,1108,1031,1111,1038,1118,176,8729,183,8730,8470,164,9632,160],"iso-8859-2":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,728,321,164,317,346,167,168,352,350,356,377,173,381,379,176,261,731,322,180,318,347,711,184,353,351,357,378,733,382,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"iso-8859-3":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,294,728,163,164,null,292,167,168,304,350,286,308,173,null,379,176,295,178,179,180,181,293,183,184,305,351,287,309,189,null,380,192,193,194,null,196,266,264,199,200,201,202,203,204,205,206,207,null,209,210,211,212,288,214,215,284,217,218,219,220,364,348,223,224,225,226,null,228,267,265,231,232,233,234,235,236,237,238,239,null,241,242,243,244,289,246,247,285,249,250,251,252,365,349,729],"iso-8859-4":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,312,342,164,296,315,167,168,352,274,290,358,173,381,175,176,261,731,343,180,297,316,711,184,353,275,291,359,330,382,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,298,272,325,332,310,212,213,214,215,216,370,218,219,220,360,362,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,299,273,326,333,311,244,245,246,247,248,371,250,251,252,361,363,729],"iso-8859-5":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,173,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,8470,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,167,1118,1119],"iso-8859-6":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,null,null,164,null,null,null,null,null,null,null,1548,173,null,null,null,null,null,null,null,null,null,null,null,null,null,1563,null,null,null,1567,null,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,1591,1592,1593,1594,null,null,null,null,null,1600,1601,1602,1603,1604,1605,1606,1607,1608,1609,1610,1611,1612,1613,1614,1615,1616,1617,1618,null,null,null,null,null,null,null,null,null,null,null,null,null],"iso-8859-7":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8216,8217,163,8364,8367,166,167,168,169,890,171,172,173,null,8213,176,177,178,179,900,901,902,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"iso-8859-8":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,null,162,163,164,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,8215,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"iso-8859-10":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,274,290,298,296,310,167,315,272,352,358,381,173,362,330,176,261,275,291,299,297,311,183,316,273,353,359,382,8213,363,331,256,193,194,195,196,197,198,302,268,201,280,203,278,205,206,207,208,325,332,211,212,213,214,360,216,370,218,219,220,221,222,223,257,225,226,227,228,229,230,303,269,233,281,235,279,237,238,239,240,326,333,243,244,245,246,361,248,371,250,251,252,253,254,312],"iso-8859-13":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,8221,162,163,164,8222,166,167,216,169,342,171,172,173,174,198,176,177,178,179,8220,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,8217],"iso-8859-14":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,7682,7683,163,266,267,7690,167,7808,169,7810,7691,7922,173,174,376,7710,7711,288,289,7744,7745,182,7766,7809,7767,7811,7776,7923,7812,7813,7777,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,372,209,210,211,212,213,214,7786,216,217,218,219,220,221,374,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,373,241,242,243,244,245,246,7787,248,249,250,251,252,253,375,255],"iso-8859-15":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,8364,165,352,167,353,169,170,171,172,173,174,175,176,177,178,179,381,181,182,183,382,185,186,187,338,339,376,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"iso-8859-16":[128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,260,261,321,8364,8222,352,167,353,169,536,171,377,173,378,379,176,177,268,322,381,8221,182,183,382,269,537,187,338,339,376,380,192,193,194,258,196,262,198,199,200,201,202,203,204,205,206,207,272,323,210,211,212,336,214,346,368,217,218,219,220,280,538,223,224,225,226,259,228,263,230,231,232,233,234,235,236,237,238,239,273,324,242,243,244,337,246,347,369,249,250,251,252,281,539,255],"koi8-r":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,9555,9556,9557,9558,9559,9560,9561,9562,9563,9564,9565,9566,9567,9568,9569,1025,9570,9571,9572,9573,9574,9575,9576,9577,9578,9579,9580,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],"koi8-u":[9472,9474,9484,9488,9492,9496,9500,9508,9516,9524,9532,9600,9604,9608,9612,9616,9617,9618,9619,8992,9632,8729,8730,8776,8804,8805,160,8993,176,178,183,247,9552,9553,9554,1105,1108,9556,1110,1111,9559,9560,9561,9562,9563,1169,1118,9566,9567,9568,9569,1025,1028,9571,1030,1031,9574,9575,9576,9577,9578,1168,1038,169,1102,1072,1073,1094,1076,1077,1092,1075,1093,1080,1081,1082,1083,1084,1085,1086,1087,1103,1088,1089,1090,1091,1078,1074,1100,1099,1079,1096,1101,1097,1095,1098,1070,1040,1041,1062,1044,1045,1060,1043,1061,1048,1049,1050,1051,1052,1053,1054,1055,1071,1056,1057,1058,1059,1046,1042,1068,1067,1047,1064,1069,1065,1063,1066],macintosh:[196,197,199,201,209,214,220,225,224,226,228,227,229,231,233,232,234,235,237,236,238,239,241,243,242,244,246,245,250,249,251,252,8224,176,162,163,167,8226,182,223,174,169,8482,180,168,8800,198,216,8734,177,8804,8805,165,181,8706,8721,8719,960,8747,170,186,937,230,248,191,161,172,8730,402,8776,8710,171,187,8230,160,192,195,213,338,339,8211,8212,8220,8221,8216,8217,247,9674,255,376,8260,8364,8249,8250,64257,64258,8225,183,8218,8222,8240,194,202,193,203,200,205,206,207,204,211,212,63743,210,218,219,217,305,710,732,175,728,729,730,184,733,731,711],"windows-874":[8364,129,130,131,132,8230,134,135,136,137,138,139,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,153,154,155,156,157,158,159,160,3585,3586,3587,3588,3589,3590,3591,3592,3593,3594,3595,3596,3597,3598,3599,3600,3601,3602,3603,3604,3605,3606,3607,3608,3609,3610,3611,3612,3613,3614,3615,3616,3617,3618,3619,3620,3621,3622,3623,3624,3625,3626,3627,3628,3629,3630,3631,3632,3633,3634,3635,3636,3637,3638,3639,3640,3641,3642,null,null,null,null,3647,3648,3649,3650,3651,3652,3653,3654,3655,3656,3657,3658,3659,3660,3661,3662,3663,3664,3665,3666,3667,3668,3669,3670,3671,3672,3673,3674,3675,null,null,null,null],"windows-1250":[8364,129,8218,131,8222,8230,8224,8225,136,8240,352,8249,346,356,381,377,144,8216,8217,8220,8221,8226,8211,8212,152,8482,353,8250,347,357,382,378,160,711,728,321,164,260,166,167,168,169,350,171,172,173,174,379,176,177,731,322,180,181,182,183,184,261,351,187,317,733,318,380,340,193,194,258,196,313,262,199,268,201,280,203,282,205,206,270,272,323,327,211,212,336,214,215,344,366,218,368,220,221,354,223,341,225,226,259,228,314,263,231,269,233,281,235,283,237,238,271,273,324,328,243,244,337,246,247,345,367,250,369,252,253,355,729],"windows-1251":[1026,1027,8218,1107,8222,8230,8224,8225,8364,8240,1033,8249,1034,1036,1035,1039,1106,8216,8217,8220,8221,8226,8211,8212,152,8482,1113,8250,1114,1116,1115,1119,160,1038,1118,1032,164,1168,166,167,1025,169,1028,171,172,173,174,1031,176,177,1030,1110,1169,181,182,183,1105,8470,1108,187,1112,1029,1109,1111,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103],"windows-1252":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,381,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,382,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255],"windows-1253":[8364,129,8218,402,8222,8230,8224,8225,136,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,157,158,159,160,901,902,163,164,165,166,167,168,169,null,171,172,173,174,8213,176,177,178,179,900,181,182,183,904,905,906,187,908,189,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,null,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,null],"windows-1254":[8364,129,8218,402,8222,8230,8224,8225,710,8240,352,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,353,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,286,209,210,211,212,213,214,215,216,217,218,219,220,304,350,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,287,241,242,243,244,245,246,247,248,249,250,251,252,305,351,255],"windows-1255":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,140,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,156,157,158,159,160,161,162,163,8362,165,166,167,168,169,215,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,247,187,188,189,190,191,1456,1457,1458,1459,1460,1461,1462,1463,1464,1465,1466,1467,1468,1469,1470,1471,1472,1473,1474,1475,1520,1521,1522,1523,1524,null,null,null,null,null,null,null,1488,1489,1490,1491,1492,1493,1494,1495,1496,1497,1498,1499,1500,1501,1502,1503,1504,1505,1506,1507,1508,1509,1510,1511,1512,1513,1514,null,null,8206,8207,null],"windows-1256":[8364,1662,8218,402,8222,8230,8224,8225,710,8240,1657,8249,338,1670,1688,1672,1711,8216,8217,8220,8221,8226,8211,8212,1705,8482,1681,8250,339,8204,8205,1722,160,1548,162,163,164,165,166,167,168,169,1726,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,1563,187,188,189,190,1567,1729,1569,1570,1571,1572,1573,1574,1575,1576,1577,1578,1579,1580,1581,1582,1583,1584,1585,1586,1587,1588,1589,1590,215,1591,1592,1593,1594,1600,1601,1602,1603,224,1604,226,1605,1606,1607,1608,231,232,233,234,235,1609,1610,238,239,1611,1612,1613,1614,244,1615,1616,247,1617,249,1618,251,252,8206,8207,1746],"windows-1257":[8364,129,8218,131,8222,8230,8224,8225,136,8240,138,8249,140,168,711,184,144,8216,8217,8220,8221,8226,8211,8212,152,8482,154,8250,156,175,731,159,160,null,162,163,164,null,166,167,216,169,342,171,172,173,174,198,176,177,178,179,180,181,182,183,248,185,343,187,188,189,190,230,260,302,256,262,196,197,280,274,268,201,377,278,290,310,298,315,352,323,325,211,332,213,214,215,370,321,346,362,220,379,381,223,261,303,257,263,228,229,281,275,269,233,378,279,291,311,299,316,353,324,326,243,333,245,246,247,371,322,347,363,252,380,382,729],"windows-1258":[8364,129,8218,402,8222,8230,8224,8225,710,8240,138,8249,338,141,142,143,144,8216,8217,8220,8221,8226,8211,8212,732,8482,154,8250,339,157,158,376,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,258,196,197,198,199,200,201,202,203,768,205,206,207,272,209,777,211,212,416,214,215,216,217,218,219,220,431,771,223,224,225,226,259,228,229,230,231,232,233,234,235,769,237,238,239,273,241,803,243,244,417,246,247,248,249,250,251,252,432,8363,255],"x-mac-cyrillic":[1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,8224,176,1168,163,167,8226,182,1030,174,169,8482,1026,1106,8800,1027,1107,8734,177,8804,8805,1110,181,1169,1032,1028,1108,1031,1111,1033,1113,1034,1114,1112,1029,172,8730,402,8776,8710,171,187,8230,160,1035,1115,1036,1116,1109,8211,8212,8220,8221,8216,8217,247,8222,1038,1118,1039,1119,8470,1025,1105,1103,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,8364]}}(this||{})},function(e,t,l){function n(e){return(n="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}!function(t){"use strict";function r(e,t,l){return t<=e&&e<=l}"undefined"!==typeof e&&e.exports&&!t["encoding-indexes"]&&(t["encoding-indexes"]=l(118)["encoding-indexes"]);var o=Math.floor;function u(e){if(void 0===e)return{};if(e===Object(e))return e;throw TypeError("Could not convert argument to dictionary")}function i(e){return 0<=e&&e<=127}var s=i,a=-1;function c(e){this.tokens=[].slice.call(e),this.tokens.reverse()}c.prototype={endOfStream:function(){return!this.tokens.length},read:function(){return this.tokens.length?this.tokens.pop():a},prepend:function(e){if(Array.isArray(e))for(var t=e;t.length;)this.tokens.push(t.pop());else this.tokens.push(e)},push:function(e){if(Array.isArray(e))for(var t=e;t.length;)this.tokens.unshift(t.shift());else this.tokens.unshift(e)}};var p=-1;function d(e,t){if(e)throw TypeError("Decoder error");return t||65533}function f(e){throw TypeError("The code point "+e+" could not be encoded.")}function g(e){return e=String(e).trim().toLowerCase(),Object.prototype.hasOwnProperty.call(b,e)?b[e]:null}var h=[{encodings:[{labels:["unicode-1-1-utf-8","utf-8","utf8"],name:"UTF-8"}],heading:"The Encoding"},{encodings:[{labels:["866","cp866","csibm866","ibm866"],name:"IBM866"},{labels:["csisolatin2","iso-8859-2","iso-ir-101","iso8859-2","iso88592","iso_8859-2","iso_8859-2:1987","l2","latin2"],name:"ISO-8859-2"},{labels:["csisolatin3","iso-8859-3","iso-ir-109","iso8859-3","iso88593","iso_8859-3","iso_8859-3:1988","l3","latin3"],name:"ISO-8859-3"},{labels:["csisolatin4","iso-8859-4","iso-ir-110","iso8859-4","iso88594","iso_8859-4","iso_8859-4:1988","l4","latin4"],name:"ISO-8859-4"},{labels:["csisolatincyrillic","cyrillic","iso-8859-5","iso-ir-144","iso8859-5","iso88595","iso_8859-5","iso_8859-5:1988"],name:"ISO-8859-5"},{labels:["arabic","asmo-708","csiso88596e","csiso88596i","csisolatinarabic","ecma-114","iso-8859-6","iso-8859-6-e","iso-8859-6-i","iso-ir-127","iso8859-6","iso88596","iso_8859-6","iso_8859-6:1987"],name:"ISO-8859-6"},{labels:["csisolatingreek","ecma-118","elot_928","greek","greek8","iso-8859-7","iso-ir-126","iso8859-7","iso88597","iso_8859-7","iso_8859-7:1987","sun_eu_greek"],name:"ISO-8859-7"},{labels:["csiso88598e","csisolatinhebrew","hebrew","iso-8859-8","iso-8859-8-e","iso-ir-138","iso8859-8","iso88598","iso_8859-8","iso_8859-8:1988","visual"],name:"ISO-8859-8"},{labels:["csiso88598i","iso-8859-8-i","logical"],name:"ISO-8859-8-I"},{labels:["csisolatin6","iso-8859-10","iso-ir-157","iso8859-10","iso885910","l6","latin6"],name:"ISO-8859-10"},{labels:["iso-8859-13","iso8859-13","iso885913"],name:"ISO-8859-13"},{labels:["iso-8859-14","iso8859-14","iso885914"],name:"ISO-8859-14"},{labels:["csisolatin9","iso-8859-15","iso8859-15","iso885915","iso_8859-15","l9"],name:"ISO-8859-15"},{labels:["iso-8859-16"],name:"ISO-8859-16"},{labels:["cskoi8r","koi","koi8","koi8-r","koi8_r"],name:"KOI8-R"},{labels:["koi8-ru","koi8-u"],name:"KOI8-U"},{labels:["csmacintosh","mac","macintosh","x-mac-roman"],name:"macintosh"},{labels:["dos-874","iso-8859-11","iso8859-11","iso885911","tis-620","windows-874"],name:"windows-874"},{labels:["cp1250","windows-1250","x-cp1250"],name:"windows-1250"},{labels:["cp1251","windows-1251","x-cp1251"],name:"windows-1251"},{labels:["ansi_x3.4-1968","ascii","cp1252","cp819","csisolatin1","ibm819","iso-8859-1","iso-ir-100","iso8859-1","iso88591","iso_8859-1","iso_8859-1:1987","l1","latin1","us-ascii","windows-1252","x-cp1252"],name:"windows-1252"},{labels:["cp1253","windows-1253","x-cp1253"],name:"windows-1253"},{labels:["cp1254","csisolatin5","iso-8859-9","iso-ir-148","iso8859-9","iso88599","iso_8859-9","iso_8859-9:1989","l5","latin5","windows-1254","x-cp1254"],name:"windows-1254"},{labels:["cp1255","windows-1255","x-cp1255"],name:"windows-1255"},{labels:["cp1256","windows-1256","x-cp1256"],name:"windows-1256"},{labels:["cp1257","windows-1257","x-cp1257"],name:"windows-1257"},{labels:["cp1258","windows-1258","x-cp1258"],name:"windows-1258"},{labels:["x-mac-cyrillic","x-mac-ukrainian"],name:"x-mac-cyrillic"}],heading:"Legacy single-byte encodings"},{encodings:[{labels:["chinese","csgb2312","csiso58gb231280","gb2312","gb_2312","gb_2312-80","gbk","iso-ir-58","x-gbk"],name:"GBK"},{labels:["gb18030"],name:"gb18030"}],heading:"Legacy multi-byte Chinese (simplified) encodings"},{encodings:[{labels:["big5","big5-hkscs","cn-big5","csbig5","x-x-big5"],name:"Big5"}],heading:"Legacy multi-byte Chinese (traditional) encodings"},{encodings:[{labels:["cseucpkdfmtjapanese","euc-jp","x-euc-jp"],name:"EUC-JP"},{labels:["csiso2022jp","iso-2022-jp"],name:"ISO-2022-JP"},{labels:["csshiftjis","ms932","ms_kanji","shift-jis","shift_jis","sjis","windows-31j","x-sjis"],name:"Shift_JIS"}],heading:"Legacy multi-byte Japanese encodings"},{encodings:[{labels:["cseuckr","csksc56011987","euc-kr","iso-ir-149","korean","ks_c_5601-1987","ks_c_5601-1989","ksc5601","ksc_5601","windows-949"],name:"EUC-KR"}],heading:"Legacy multi-byte Korean encodings"},{encodings:[{labels:["csiso2022kr","hz-gb-2312","iso-2022-cn","iso-2022-cn-ext","iso-2022-kr"],name:"replacement"},{labels:["utf-16be"],name:"UTF-16BE"},{labels:["utf-16","utf-16le"],name:"UTF-16LE"},{labels:["x-user-defined"],name:"x-user-defined"}],heading:"Legacy miscellaneous encodings"}],b={};h.forEach(function(e){e.encodings.forEach(function(e){e.labels.forEach(function(t){b[t]=e})})});var y,m,v={},_={};function w(e,t){return t&&t[e]||null}function A(e,t){var l=t.indexOf(e);return-1===l?null:l}function B(e){if(!("encoding-indexes"in t))throw Error("Indexes missing. Did you forget to include encoding-indexes.js first?");return t["encoding-indexes"][e]}var M="utf-8";function T(e,t){if(!(this instanceof T))throw TypeError("Called as a function. Did you forget 'new'?");e=void 0!==e?String(e):M,t=u(t),this._encoding=null,this._decoder=null,this._ignoreBOM=!1,this._BOMseen=!1,this._error_mode="replacement",this._do_not_flush=!1;var l=g(e);if(null===l||"replacement"===l.name)throw RangeError("Unknown encoding: "+e);if(!_[l.name])throw Error("Decoder not present. Did you forget to include encoding-indexes.js first?");return this._encoding=l,Boolean(t.fatal)&&(this._error_mode="fatal"),Boolean(t.ignoreBOM)&&(this._ignoreBOM=!0),Object.defineProperty||(this.encoding=this._encoding.name.toLowerCase(),this.fatal="fatal"===this._error_mode,this.ignoreBOM=this._ignoreBOM),this}function E(e,l){if(!(this instanceof E))throw TypeError("Called as a function. Did you forget 'new'?");l=u(l),this._encoding=null,this._encoder=null,this._do_not_flush=!1,this._fatal=Boolean(l.fatal)?"fatal":"replacement";if(Boolean(l.NONSTANDARD_allowLegacyEncoding)){var n=g(e=void 0!==e?String(e):M);if(null===n||"replacement"===n.name)throw RangeError("Unknown encoding: "+e);if(!v[n.name])throw Error("Encoder not present. Did you forget to include encoding-indexes.js first?");this._encoding=n}else this._encoding=g("utf-8"),void 0!==e&&"console"in t&&console.warn("TextEncoder constructor called with encoding label, which is ignored.");return Object.defineProperty||(this.encoding=this._encoding.name.toLowerCase()),this}function S(e){var t=e.fatal,l=0,n=0,o=0;this.handler=function(e,u){if(u===a&&0===l&&0===n&&0===o)return p;var s;if(u!==a||0===l&&0===n&&0===o||(l=0,n=0,o=0,d(t)),0!==o){s=null,r(u,48,57)&&(s=function(e){if(e>39419&&e<189e3||e>1237575)return null;if(7457===e)return 59335;var t,l=0,n=0,r=B("gb18030-ranges");for(t=0;t<r.length;++t){var o=r[t];if(!(o[0]<=e))break;l=o[0],n=o[1]}return n+e-l}(10*(126*(10*(l-129)+n-48)+o-129)+u-48));var c=[n,o,u];return l=0,n=0,o=0,null===s?(e.prepend(c),d(t)):s}if(0!==n)return r(u,129,254)?(o=u,null):(e.prepend([n,u]),l=0,n=0,d(t));if(0!==l){if(r(u,48,57))return n=u,null;var f=l,g=null;l=0;var h=u<127?64:65;return(r(u,64,126)||r(u,128,254))&&(g=190*(f-129)+(u-h)),null===(s=null===g?null:w(g,B("gb18030")))&&i(u)&&e.prepend(u),null===s?d(t):s}return i(u)?u:128===u?8364:r(u,129,254)?(l=u,null):d(t)}}function I(e,t){e.fatal;this.handler=function(e,l){if(l===a)return p;if(s(l))return l;if(58853===l)return f(l);if(t&&8364===l)return 128;var n=A(l,B("gb18030"));if(null!==n){var r=n%190;return[o(n/190)+129,r+(r<63?64:65)]}if(t)return f(l);n=function(e){if(59335===e)return 7457;var t,l=0,n=0,r=B("gb18030-ranges");for(t=0;t<r.length;++t){var o=r[t];if(!(o[1]<=e))break;l=o[1],n=o[0]}return n+e-l}(l);var u=o(n/10/126/10),i=o((n-=10*u*126*10)/10/126),c=o((n-=10*i*126)/10);return[u+129,i+48,c+129,n-10*c+48]}}function j(e){e.fatal;this.handler=function(e,t){if(t===a)return p;if(s(t))return t;var l=function(e){var t=m=m||B("big5").map(function(e,t){return t<5024?null:e});return 9552===e||9566===e||9569===e||9578===e||21313===e||21317===e?t.lastIndexOf(e):A(e,t)}(t);if(null===l)return f(t);var n=o(l/157)+129;if(n<161)return f(t);var r=l%157;return[n,r+(r<63?64:98)]}}function F(e){e.fatal;this.handler=function(e,t){if(t===a)return p;if(s(t)||128===t)return t;if(165===t)return 92;if(8254===t)return 126;if(r(t,65377,65439))return t-65377+161;8722===t&&(t=65293);var l=function(e){return(y=y||B("jis0208").map(function(e,t){return r(t,8272,8835)?null:e})).indexOf(e)}(t);if(null===l)return f(t);var n=o(l/188),u=l%188;return[n+(n<31?129:193),u+(u<63?64:65)]}}function C(e,t){var l=e>>8,n=255&e;return t?[l,n]:[n,l]}function O(e,t){var l=t.fatal,n=null,o=null;this.handler=function(t,u){if(u===a&&(null!==n||null!==o))return d(l);if(u===a&&null===n&&null===o)return p;if(null===n)return n=u,null;var i;if(i=e?(n<<8)+u:(u<<8)+n,n=null,null!==o){var s=o;return o=null,r(i,56320,57343)?65536+1024*(s-55296)+(i-56320):(t.prepend(C(i,e)),d(l))}return r(i,55296,56319)?(o=i,null):r(i,56320,57343)?d(l):i}}function k(e,t){t.fatal;this.handler=function(t,l){if(l===a)return p;if(r(l,0,65535))return C(l,e);var n=C(55296+(l-65536>>10),e),o=C(56320+(l-65536&1023),e);return n.concat(o)}}Object.defineProperty&&(Object.defineProperty(T.prototype,"encoding",{get:function(){return this._encoding.name.toLowerCase()}}),Object.defineProperty(T.prototype,"fatal",{get:function(){return"fatal"===this._error_mode}}),Object.defineProperty(T.prototype,"ignoreBOM",{get:function(){return this._ignoreBOM}})),T.prototype.decode=function(e,t){var l;l="object"===n(e)&&e instanceof ArrayBuffer?new Uint8Array(e):"object"===n(e)&&"buffer"in e&&e.buffer instanceof ArrayBuffer?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):new Uint8Array(0),t=u(t),this._do_not_flush||(this._decoder=_[this._encoding.name]({fatal:"fatal"===this._error_mode}),this._BOMseen=!1),this._do_not_flush=Boolean(t.stream);for(var r,o=new c(l),i=[];;){var s=o.read();if(s===a)break;if((r=this._decoder.handler(o,s))===p)break;null!==r&&(Array.isArray(r)?i.push.apply(i,r):i.push(r))}if(!this._do_not_flush){do{if((r=this._decoder.handler(o,o.read()))===p)break;null!==r&&(Array.isArray(r)?i.push.apply(i,r):i.push(r))}while(!o.endOfStream());this._decoder=null}return function(e){var t,l;return t=["UTF-8","UTF-16LE","UTF-16BE"],l=this._encoding.name,-1===t.indexOf(l)||this._ignoreBOM||this._BOMseen||(e.length>0&&65279===e[0]?(this._BOMseen=!0,e.shift()):e.length>0&&(this._BOMseen=!0)),function(e){for(var t="",l=0;l<e.length;++l){var n=e[l];n<=65535?t+=String.fromCharCode(n):(n-=65536,t+=String.fromCharCode(55296+(n>>10),56320+(1023&n)))}return t}(e)}.call(this,i)},Object.defineProperty&&Object.defineProperty(E.prototype,"encoding",{get:function(){return this._encoding.name.toLowerCase()}}),E.prototype.encode=function(e,t){e=void 0===e?"":String(e),t=u(t),this._do_not_flush||(this._encoder=v[this._encoding.name]({fatal:"fatal"===this._fatal})),this._do_not_flush=Boolean(t.stream);for(var l,n=new c(function(e){for(var t=String(e),l=t.length,n=0,r=[];n<l;){var o=t.charCodeAt(n);if(o<55296||o>57343)r.push(o);else if(56320<=o&&o<=57343)r.push(65533);else if(55296<=o&&o<=56319)if(n===l-1)r.push(65533);else{var u=t.charCodeAt(n+1);if(56320<=u&&u<=57343){var i=1023&o,s=1023&u;r.push(65536+(i<<10)+s),n+=1}else r.push(65533)}n+=1}return r}(e)),r=[];;){var o=n.read();if(o===a)break;if((l=this._encoder.handler(n,o))===p)break;Array.isArray(l)?r.push.apply(r,l):r.push(l)}if(!this._do_not_flush){for(;(l=this._encoder.handler(n,n.read()))!==p;)Array.isArray(l)?r.push.apply(r,l):r.push(l);this._encoder=null}return new Uint8Array(r)},v["UTF-8"]=function(e){return new function(e){e.fatal,this.handler=function(e,t){if(t===a)return p;if(s(t))return t;var l,n;r(t,128,2047)?(l=1,n=192):r(t,2048,65535)?(l=2,n=224):r(t,65536,1114111)&&(l=3,n=240);for(var o=[(t>>6*l)+n];l>0;){var u=t>>6*(l-1);o.push(128|63&u),l-=1}return o}}(e)},_["UTF-8"]=function(e){return new function(e){var t=e.fatal,l=0,n=0,o=0,u=128,i=191;this.handler=function(e,s){if(s===a&&0!==o)return o=0,d(t);if(s===a)return p;if(0===o){if(r(s,0,127))return s;if(r(s,194,223))o=1,l=31&s;else if(r(s,224,239))224===s&&(u=160),237===s&&(i=159),o=2,l=15&s;else{if(!r(s,240,244))return d(t);240===s&&(u=144),244===s&&(i=143),o=3,l=7&s}return null}if(!r(s,u,i))return l=o=n=0,u=128,i=191,e.prepend(s),d(t);if(u=128,i=191,l=l<<6|63&s,(n+=1)!==o)return null;var c=l;return l=o=n=0,c}}(e)},"encoding-indexes"in t&&h.forEach(function(e){"Legacy single-byte encodings"===e.heading&&e.encodings.forEach(function(e){var t=e.name,l=B(t.toLowerCase());_[t]=function(e){return new function(e,t){var l=t.fatal;this.handler=function(t,n){if(n===a)return p;if(i(n))return n;var r=e[n-128];return null===r?d(l):r}}(l,e)},v[t]=function(e){return new function(e,t){t.fatal,this.handler=function(t,l){if(l===a)return p;if(s(l))return l;var n=A(l,e);return null===n&&f(l),n+128}}(l,e)}})}),_.GBK=function(e){return new S(e)},v.GBK=function(e){return new I(e,!0)},v.gb18030=function(e){return new I(e)},_.gb18030=function(e){return new S(e)},v.Big5=function(e){return new j(e)},_.Big5=function(e){return new function(e){var t=e.fatal,l=0;this.handler=function(e,n){if(n===a&&0!==l)return l=0,d(t);if(n===a&&0===l)return p;if(0!==l){var o=l,u=null;l=0;var s=n<127?64:98;switch((r(n,64,126)||r(n,161,254))&&(u=157*(o-129)+(n-s)),u){case 1133:return[202,772];case 1135:return[202,780];case 1164:return[234,772];case 1166:return[234,780]}var c=null===u?null:w(u,B("big5"));return null===c&&i(n)&&e.prepend(n),null===c?d(t):c}return i(n)?n:r(n,129,254)?(l=n,null):d(t)}}(e)},v["EUC-JP"]=function(e){return new function(e){e.fatal,this.handler=function(e,t){if(t===a)return p;if(s(t))return t;if(165===t)return 92;if(8254===t)return 126;if(r(t,65377,65439))return[142,t-65377+161];8722===t&&(t=65293);var l=A(t,B("jis0208"));return null===l?f(t):[o(l/94)+161,l%94+161]}}(e)},_["EUC-JP"]=function(e){return new function(e){var t=e.fatal,l=!1,n=0;this.handler=function(e,o){if(o===a&&0!==n)return n=0,d(t);if(o===a&&0===n)return p;if(142===n&&r(o,161,223))return n=0,65216+o;if(143===n&&r(o,161,254))return l=!0,n=o,null;if(0!==n){var u=n;n=0;var s=null;return r(u,161,254)&&r(o,161,254)&&(s=w(94*(u-161)+(o-161),B(l?"jis0212":"jis0208"))),l=!1,r(o,161,254)||e.prepend(o),null===s?d(t):s}return i(o)?o:142===o||143===o||r(o,161,254)?(n=o,null):d(t)}}(e)},v["ISO-2022-JP"]=function(e){return new function(e){e.fatal;var t=0,l=1,n=2,r=t;this.handler=function(e,u){if(u===a&&r!==t)return e.prepend(u),r=t,[27,40,66];if(u===a&&r===t)return p;if((r===t||r===l)&&(14===u||15===u||27===u))return f(65533);if(r===t&&s(u))return u;if(r===l&&(s(u)&&92!==u&&126!==u||165==u||8254==u)){if(s(u))return u;if(165===u)return 92;if(8254===u)return 126}if(s(u)&&r!==t)return e.prepend(u),r=t,[27,40,66];if((165===u||8254===u)&&r!==l)return e.prepend(u),r=l,[27,40,74];8722===u&&(u=65293);var i=A(u,B("jis0208"));return null===i?f(u):r!==n?(e.prepend(u),r=n,[27,36,66]):[o(i/94)+33,i%94+33]}}(e)},_["ISO-2022-JP"]=function(e){return new function(e){var t=e.fatal,l=0,n=1,o=2,u=3,i=4,s=5,c=6,f=l,g=l,h=0,b=!1;this.handler=function(e,y){switch(f){default:case l:return 27===y?(f=s,null):r(y,0,127)&&14!==y&&15!==y&&27!==y?(b=!1,y):y===a?p:(b=!1,d(t));case n:return 27===y?(f=s,null):92===y?(b=!1,165):126===y?(b=!1,8254):r(y,0,127)&&14!==y&&15!==y&&27!==y&&92!==y&&126!==y?(b=!1,y):y===a?p:(b=!1,d(t));case o:return 27===y?(f=s,null):r(y,33,95)?(b=!1,65344+y):y===a?p:(b=!1,d(t));case u:return 27===y?(f=s,null):r(y,33,126)?(b=!1,h=y,f=i,null):y===a?p:(b=!1,d(t));case i:if(27===y)return f=s,d(t);if(r(y,33,126)){f=u;var m=w(94*(h-33)+y-33,B("jis0208"));return null===m?d(t):m}return y===a?(f=u,e.prepend(y),d(t)):(f=u,d(t));case s:return 36===y||40===y?(h=y,f=c,null):(e.prepend(y),b=!1,f=g,d(t));case c:var v=h;h=0;var _=null;if(40===v&&66===y&&(_=l),40===v&&74===y&&(_=n),40===v&&73===y&&(_=o),36!==v||64!==y&&66!==y||(_=u),null!==_){f=f=_;var A=b;return b=!0,A?d(t):null}return e.prepend([v,y]),b=!1,f=g,d(t)}}}(e)},v.Shift_JIS=function(e){return new F(e)},_.Shift_JIS=function(e){return new function(e){var t=e.fatal,l=0;this.handler=function(e,n){if(n===a&&0!==l)return l=0,d(t);if(n===a&&0===l)return p;if(0!==l){var o=l,u=null;l=0;var s=n<127?64:65,c=o<160?129:193;if((r(n,64,126)||r(n,128,252))&&(u=188*(o-c)+n-s),r(u,8836,10715))return 48508+u;var f=null===u?null:w(u,B("jis0208"));return null===f&&i(n)&&e.prepend(n),null===f?d(t):f}return i(n)||128===n?n:r(n,161,223)?65216+n:r(n,129,159)||r(n,224,252)?(l=n,null):d(t)}}(e)},v["EUC-KR"]=function(e){return new function(e){e.fatal,this.handler=function(e,t){if(t===a)return p;if(s(t))return t;var l=A(t,B("euc-kr"));return null===l?f(t):[o(l/190)+129,l%190+65]}}(e)},_["EUC-KR"]=function(e){return new function(e){var t=e.fatal,l=0;this.handler=function(e,n){if(n===a&&0!==l)return l=0,d(t);if(n===a&&0===l)return p;if(0!==l){var o=l,u=null;l=0,r(n,65,254)&&(u=190*(o-129)+(n-65));var s=null===u?null:w(u,B("euc-kr"));return null===u&&i(n)&&e.prepend(n),null===s?d(t):s}return i(n)?n:r(n,129,254)?(l=n,null):d(t)}}(e)},v["UTF-16BE"]=function(e){return new k(!0,e)},_["UTF-16BE"]=function(e){return new O(!0,e)},v["UTF-16LE"]=function(e){return new k(!1,e)},_["UTF-16LE"]=function(e){return new O(!1,e)},v["x-user-defined"]=function(e){return new function(e){e.fatal,this.handler=function(e,t){return t===a?p:s(t)?t:r(t,63360,63487)?t-63360+128:f(t)}}(e)},_["x-user-defined"]=function(e){return new function(e){e.fatal,this.handler=function(e,t){return t===a?p:i(t)?t:63360+t-128}}(e)},t.TextEncoder||(t.TextEncoder=E),t.TextDecoder||(t.TextDecoder=T),"undefined"!==typeof e&&e.exports&&(e.exports={TextEncoder:t.TextEncoder,TextDecoder:t.TextDecoder,EncodingIndexes:t["encoding-indexes"]})}(this||{})},function(e,t,l){var n=l(119);e.exports={TextEncoder:n.TextEncoder,TextDecoder:n.TextDecoder}},function(e,t){t.read=function(e,t,l,n,r){var o,u,i=8*r-n-1,s=(1<<i)-1,a=s>>1,c=-7,p=l?r-1:0,d=l?-1:1,f=e[t+p];for(p+=d,o=f&(1<<-c)-1,f>>=-c,c+=i;c>0;o=256*o+e[t+p],p+=d,c-=8);for(u=o&(1<<-c)-1,o>>=-c,c+=n;c>0;u=256*u+e[t+p],p+=d,c-=8);if(0===o)o=1-a;else{if(o===s)return u?NaN:1/0*(f?-1:1);u+=Math.pow(2,n),o-=a}return(f?-1:1)*u*Math.pow(2,o-n)},t.write=function(e,t,l,n,r,o){var u,i,s,a=8*o-r-1,c=(1<<a)-1,p=c>>1,d=23===r?Math.pow(2,-24)-Math.pow(2,-77):0,f=n?0:o-1,g=n?1:-1,h=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(i=isNaN(t)?1:0,u=c):(u=Math.floor(Math.log(t)/Math.LN2),t*(s=Math.pow(2,-u))<1&&(u--,s*=2),(t+=u+p>=1?d/s:d*Math.pow(2,1-p))*s>=2&&(u++,s/=2),u+p>=c?(i=0,u=c):u+p>=1?(i=(t*s-1)*Math.pow(2,r),u+=p):(i=t*Math.pow(2,p-1)*Math.pow(2,r),u=0));r>=8;e[l+f]=255&i,f+=g,i/=256,r-=8);for(u=u<<r|i,a+=r;a>0;e[l+f]=255&u,f+=g,u/=256,a-=8);e[l+f-g]|=128*h}},function(e,t,l){"use strict";t.byteLength=function(e){var t=a(e),l=t[0],n=t[1];return 3*(l+n)/4-n},t.toByteArray=function(e){for(var t,l=a(e),n=l[0],u=l[1],i=new o(function(e,t,l){return 3*(t+l)/4-l}(0,n,u)),s=0,c=u>0?n-4:n,p=0;p<c;p+=4)t=r[e.charCodeAt(p)]<<18|r[e.charCodeAt(p+1)]<<12|r[e.charCodeAt(p+2)]<<6|r[e.charCodeAt(p+3)],i[s++]=t>>16&255,i[s++]=t>>8&255,i[s++]=255&t;2===u&&(t=r[e.charCodeAt(p)]<<2|r[e.charCodeAt(p+1)]>>4,i[s++]=255&t);1===u&&(t=r[e.charCodeAt(p)]<<10|r[e.charCodeAt(p+1)]<<4|r[e.charCodeAt(p+2)]>>2,i[s++]=t>>8&255,i[s++]=255&t);return i},t.fromByteArray=function(e){for(var t,l=e.length,r=l%3,o=[],u=0,i=l-r;u<i;u+=16383)o.push(c(e,u,u+16383>i?i:u+16383));1===r?(t=e[l-1],o.push(n[t>>2]+n[t<<4&63]+"==")):2===r&&(t=(e[l-2]<<8)+e[l-1],o.push(n[t>>10]+n[t>>4&63]+n[t<<2&63]+"="));return o.join("")};for(var n=[],r=[],o="undefined"!==typeof Uint8Array?Uint8Array:Array,u="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i=0,s=u.length;i<s;++i)n[i]=u[i],r[u.charCodeAt(i)]=i;function a(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var l=e.indexOf("=");return-1===l&&(l=t),[l,l===t?0:4-l%4]}function c(e,t,l){for(var r,o,u=[],i=t;i<l;i+=3)r=(e[i]<<16&16711680)+(e[i+1]<<8&65280)+(255&e[i+2]),u.push(n[(o=r)>>18&63]+n[o>>12&63]+n[o>>6&63]+n[63&o]);return u.join("")}r["-".charCodeAt(0)]=62,r["_".charCodeAt(0)]=63},function(e,t){function l(e){return(l="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}e.exports=function(e){return e&&"object"===l(e)&&"function"===typeof e.copy&&"function"===typeof e.fill&&"function"===typeof e.readUInt8}},function(e,t,l){(function(e,n){function r(e){return(r="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var o=/%[sdj%]/g;t.format=function(e){if(!m(e)){for(var t=[],l=0;l<arguments.length;l++)t.push(s(arguments[l]));return t.join(" ")}l=1;for(var n=arguments,r=n.length,u=String(e).replace(o,function(e){if("%%"===e)return"%";if(l>=r)return e;switch(e){case"%s":return String(n[l++]);case"%d":return Number(n[l++]);case"%j":try{return JSON.stringify(n[l++])}catch(e){return"[Circular]"}default:return e}}),i=n[l];l<r;i=n[++l])b(i)||!w(i)?u+=" "+i:u+=" "+s(i);return u},t.deprecate=function(l,r){if(v(e.process))return function(){return t.deprecate(l,r).apply(this,arguments)};if(!0===n.noDeprecation)return l;var o=!1;return function(){if(!o){if(n.throwDeprecation)throw new Error(r);n.traceDeprecation?console.trace(r):console.error(r),o=!0}return l.apply(this,arguments)}};var u,i={};function s(e,l){var n={seen:[],stylize:c};return arguments.length>=3&&(n.depth=arguments[2]),arguments.length>=4&&(n.colors=arguments[3]),h(l)?n.showHidden=l:l&&t._extend(n,l),v(n.showHidden)&&(n.showHidden=!1),v(n.depth)&&(n.depth=2),v(n.colors)&&(n.colors=!1),v(n.customInspect)&&(n.customInspect=!0),n.colors&&(n.stylize=a),p(n,e,n.depth)}function a(e,t){var l=s.styles[t];return l?"\x1b["+s.colors[l][0]+"m"+e+"\x1b["+s.colors[l][1]+"m":e}function c(e,t){return e}function p(e,l,n){if(e.customInspect&&l&&M(l.inspect)&&l.inspect!==t.inspect&&(!l.constructor||l.constructor.prototype!==l)){var r=l.inspect(n,e);return m(r)||(r=p(e,r,n)),r}var o=function(e,t){if(v(t))return e.stylize("undefined","undefined");if(m(t)){var l="'"+JSON.stringify(t).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(l,"string")}if(y(t))return e.stylize(""+t,"number");if(h(t))return e.stylize(""+t,"boolean");if(b(t))return e.stylize("null","null")}(e,l);if(o)return o;var u=Object.keys(l),i=function(e){var t={};return e.forEach(function(e,l){t[e]=!0}),t}(u);if(e.showHidden&&(u=Object.getOwnPropertyNames(l)),B(l)&&(u.indexOf("message")>=0||u.indexOf("description")>=0))return d(l);if(0===u.length){if(M(l)){var s=l.name?": "+l.name:"";return e.stylize("[Function"+s+"]","special")}if(_(l))return e.stylize(RegExp.prototype.toString.call(l),"regexp");if(A(l))return e.stylize(Date.prototype.toString.call(l),"date");if(B(l))return d(l)}var a,c="",w=!1,T=["{","}"];(g(l)&&(w=!0,T=["[","]"]),M(l))&&(c=" [Function"+(l.name?": "+l.name:"")+"]");return _(l)&&(c=" "+RegExp.prototype.toString.call(l)),A(l)&&(c=" "+Date.prototype.toUTCString.call(l)),B(l)&&(c=" "+d(l)),0!==u.length||w&&0!=l.length?n<0?_(l)?e.stylize(RegExp.prototype.toString.call(l),"regexp"):e.stylize("[Object]","special"):(e.seen.push(l),a=w?function(e,t,l,n,r){for(var o=[],u=0,i=t.length;u<i;++u)I(t,String(u))?o.push(f(e,t,l,n,String(u),!0)):o.push("");return r.forEach(function(r){r.match(/^\d+$/)||o.push(f(e,t,l,n,r,!0))}),o}(e,l,n,i,u):u.map(function(t){return f(e,l,n,i,t,w)}),e.seen.pop(),function(e,t,l){if(e.reduce(function(e,t){return 0,t.indexOf("\n")>=0&&0,e+t.replace(/\u001b\[\d\d?m/g,"").length+1},0)>60)return l[0]+(""===t?"":t+"\n ")+" "+e.join(",\n  ")+" "+l[1];return l[0]+t+" "+e.join(", ")+" "+l[1]}(a,c,T)):T[0]+c+T[1]}function d(e){return"["+Error.prototype.toString.call(e)+"]"}function f(e,t,l,n,r,o){var u,i,s;if((s=Object.getOwnPropertyDescriptor(t,r)||{value:t[r]}).get?i=s.set?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):s.set&&(i=e.stylize("[Setter]","special")),I(n,r)||(u="["+r+"]"),i||(e.seen.indexOf(s.value)<0?(i=b(l)?p(e,s.value,null):p(e,s.value,l-1)).indexOf("\n")>-1&&(i=o?i.split("\n").map(function(e){return"  "+e}).join("\n").substr(2):"\n"+i.split("\n").map(function(e){return"   "+e}).join("\n")):i=e.stylize("[Circular]","special")),v(u)){if(o&&r.match(/^\d+$/))return i;(u=JSON.stringify(""+r)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(u=u.substr(1,u.length-2),u=e.stylize(u,"name")):(u=u.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),u=e.stylize(u,"string"))}return u+": "+i}function g(e){return Array.isArray(e)}function h(e){return"boolean"===typeof e}function b(e){return null===e}function y(e){return"number"===typeof e}function m(e){return"string"===typeof e}function v(e){return void 0===e}function _(e){return w(e)&&"[object RegExp]"===T(e)}function w(e){return"object"===r(e)&&null!==e}function A(e){return w(e)&&"[object Date]"===T(e)}function B(e){return w(e)&&("[object Error]"===T(e)||e instanceof Error)}function M(e){return"function"===typeof e}function T(e){return Object.prototype.toString.call(e)}function E(e){return e<10?"0"+e.toString(10):e.toString(10)}t.debuglog=function(e){if(v(u)&&(u=Object({NODE_ENV:"production",PUBLIC_URL:"/Seed-Recovery"}).NODE_DEBUG||""),e=e.toUpperCase(),!i[e])if(new RegExp("\\b"+e+"\\b","i").test(u)){var l=n.pid;i[e]=function(){var n=t.format.apply(t,arguments);console.error("%s %d: %s",e,l,n)}}else i[e]=function(){};return i[e]},t.inspect=s,s.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},s.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},t.isArray=g,t.isBoolean=h,t.isNull=b,t.isNullOrUndefined=function(e){return null==e},t.isNumber=y,t.isString=m,t.isSymbol=function(e){return"symbol"===r(e)},t.isUndefined=v,t.isRegExp=_,t.isObject=w,t.isDate=A,t.isError=B,t.isFunction=M,t.isPrimitive=function(e){return null===e||"boolean"===typeof e||"number"===typeof e||"string"===typeof e||"symbol"===r(e)||"undefined"===typeof e},t.isBuffer=l(123);var S=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function I(e,t){return Object.prototype.hasOwnProperty.call(e,t)}t.log=function(){var e,l;console.log("%s - %s",(e=new Date,l=[E(e.getHours()),E(e.getMinutes()),E(e.getSeconds())].join(":"),[e.getDate(),S[e.getMonth()],l].join(" ")),t.format.apply(t,arguments))},t.inherits=l(0),t._extend=function(e,t){if(!t||!w(t))return e;for(var l=Object.keys(t),n=l.length;n--;)e[l[n]]=t[l[n]];return e}}).call(this,l(3),l(7))},function(e,t,l){"use strict";(function(t){function n(e){return(n="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function r(e,t){if(e===t)return 0;for(var l=e.length,n=t.length,r=0,o=Math.min(l,n);r<o;++r)if(e[r]!==t[r]){l=e[r],n=t[r];break}return l<n?-1:n<l?1:0}function o(e){return t.Buffer&&"function"===typeof t.Buffer.isBuffer?t.Buffer.isBuffer(e):!(null==e||!e._isBuffer)}var u=l(124),i=Object.prototype.hasOwnProperty,s=Array.prototype.slice,a="foo"===function(){}.name;function c(e){return Object.prototype.toString.call(e)}function p(e){return!o(e)&&("function"===typeof t.ArrayBuffer&&("function"===typeof ArrayBuffer.isView?ArrayBuffer.isView(e):!!e&&(e instanceof DataView||!!(e.buffer&&e.buffer instanceof ArrayBuffer))))}var d=e.exports=m,f=/\s*function\s+([^\(\s]*)\s*/;function g(e){if(u.isFunction(e)){if(a)return e.name;var t=e.toString().match(f);return t&&t[1]}}function h(e,t){return"string"===typeof e?e.length<t?e:e.slice(0,t):e}function b(e){if(a||!u.isFunction(e))return u.inspect(e);var t=g(e);return"[Function"+(t?": "+t:"")+"]"}function y(e,t,l,n,r){throw new d.AssertionError({message:l,actual:e,expected:t,operator:n,stackStartFunction:r})}function m(e,t){e||y(e,!0,t,"==",d.ok)}function v(e,t,l,i){if(e===t)return!0;if(o(e)&&o(t))return 0===r(e,t);if(u.isDate(e)&&u.isDate(t))return e.getTime()===t.getTime();if(u.isRegExp(e)&&u.isRegExp(t))return e.source===t.source&&e.global===t.global&&e.multiline===t.multiline&&e.lastIndex===t.lastIndex&&e.ignoreCase===t.ignoreCase;if(null!==e&&"object"===n(e)||null!==t&&"object"===n(t)){if(p(e)&&p(t)&&c(e)===c(t)&&!(e instanceof Float32Array||e instanceof Float64Array))return 0===r(new Uint8Array(e.buffer),new Uint8Array(t.buffer));if(o(e)!==o(t))return!1;var a=(i=i||{actual:[],expected:[]}).actual.indexOf(e);return-1!==a&&a===i.expected.indexOf(t)||(i.actual.push(e),i.expected.push(t),function(e,t,l,n){if(null===e||void 0===e||null===t||void 0===t)return!1;if(u.isPrimitive(e)||u.isPrimitive(t))return e===t;if(l&&Object.getPrototypeOf(e)!==Object.getPrototypeOf(t))return!1;var r=_(e),o=_(t);if(r&&!o||!r&&o)return!1;if(r)return e=s.call(e),t=s.call(t),v(e,t,l);var i,a,c=B(e),p=B(t);if(c.length!==p.length)return!1;for(c.sort(),p.sort(),a=c.length-1;a>=0;a--)if(c[a]!==p[a])return!1;for(a=c.length-1;a>=0;a--)if(i=c[a],!v(e[i],t[i],l,n))return!1;return!0}(e,t,l,i))}return l?e===t:e==t}function _(e){return"[object Arguments]"==Object.prototype.toString.call(e)}function w(e,t){if(!e||!t)return!1;if("[object RegExp]"==Object.prototype.toString.call(t))return t.test(e);try{if(e instanceof t)return!0}catch(e){}return!Error.isPrototypeOf(t)&&!0===t.call({},e)}function A(e,t,l,n){var r;if("function"!==typeof t)throw new TypeError('"block" argument must be a function');"string"===typeof l&&(n=l,l=null),r=function(e){var t;try{e()}catch(e){t=e}return t}(t),n=(l&&l.name?" ("+l.name+").":".")+(n?" "+n:"."),e&&!r&&y(r,l,"Missing expected exception"+n);var o="string"===typeof n,i=!e&&u.isError(r),s=!e&&r&&!l;if((i&&o&&w(r,l)||s)&&y(r,l,"Got unwanted exception"+n),e&&r&&l&&!w(r,l)||!e&&r)throw r}d.AssertionError=function(e){var t;this.name="AssertionError",this.actual=e.actual,this.expected=e.expected,this.operator=e.operator,e.message?(this.message=e.message,this.generatedMessage=!1):(this.message=h(b((t=this).actual),128)+" "+t.operator+" "+h(b(t.expected),128),this.generatedMessage=!0);var l=e.stackStartFunction||y;if(Error.captureStackTrace)Error.captureStackTrace(this,l);else{var n=new Error;if(n.stack){var r=n.stack,o=g(l),u=r.indexOf("\n"+o);if(u>=0){var i=r.indexOf("\n",u+1);r=r.substring(i+1)}this.stack=r}}},u.inherits(d.AssertionError,Error),d.fail=y,d.ok=m,d.equal=function(e,t,l){e!=t&&y(e,t,l,"==",d.equal)},d.notEqual=function(e,t,l){e==t&&y(e,t,l,"!=",d.notEqual)},d.deepEqual=function(e,t,l){v(e,t,!1)||y(e,t,l,"deepEqual",d.deepEqual)},d.deepStrictEqual=function(e,t,l){v(e,t,!0)||y(e,t,l,"deepStrictEqual",d.deepStrictEqual)},d.notDeepEqual=function(e,t,l){v(e,t,!1)&&y(e,t,l,"notDeepEqual",d.notDeepEqual)},d.notDeepStrictEqual=function e(t,l,n){v(t,l,!0)&&y(t,l,n,"notDeepStrictEqual",e)},d.strictEqual=function(e,t,l){e!==t&&y(e,t,l,"===",d.strictEqual)},d.notStrictEqual=function(e,t,l){e===t&&y(e,t,l,"!==",d.notStrictEqual)},d.throws=function(e,t,l){A(!0,e,t,l)},d.doesNotThrow=function(e,t,l){A(!1,e,t,l)},d.ifError=function(e){if(e)throw e};var B=Object.keys||function(e){var t=[];for(var l in e)i.call(e,l)&&t.push(l);return t}}).call(this,l(3))},function(e,t,l){function n(e){return function(e){if(Array.isArray(e)){for(var t=0,l=new Array(e.length);t<e.length;t++)l[t]=e[t];return l}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}var r=l(125),o=l(12),u=l(19).hexStr2byteArray,i=l(49),s=i.longToByteArray,a=i.byteArray2hexStr,c=l(18),p=c.decode58Check,d=c.SHA256,f=c.signTransaction,g=l(43),h=l(42),b=h.ParticipateAssetIssueContract,y=h.VoteWitnessContract,m=h.WitnessUpdateContract,v=h.WitnessCreateContract,_=h.TransferAssetContract,w=h.UnfreezeBalanceContract,A=h.FreezeBalanceContract,B=h.TransferContract,M=h.AssetIssueContract,T=l(11),E=T.Transaction,S=T.TransactionList;T.Transfer;function I(){var e;return e=regeneratorRuntime.mark(function e(t,l){var r,o,i,c,p,f,g;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return r={number:(h=l).getBlockHeader().getRawData().getNumber(),witnessId:h.getBlockHeader().getRawData().getWitnessId(),hash:a(d(h.getBlockHeader().getRawData().serializeBinary())),parentHash:a(h.getBlockHeader().getRawData().getParenthash())},o=r.hash,i=r.number,(c=s(i)).reverse(),p=u(o),f=n(c.slice(0,8)).concat(n(p.slice(8,p.length-1))),(g=t.getRawData()).setRefBlockHash(Uint8Array.from(f.slice(8,16))),g.setRefBlockBytes(Uint8Array.from(c.slice(6,8))),g.setExpiration(l.getBlockHeader().getRawData().getTimestamp()+144e4),t.setRawData(g),e.abrupt("return",t);case 13:case"end":return e.stop()}var h},e,this)}),(I=function(){var t=this,l=arguments;return new Promise(function(n,r){var o=e.apply(t,l);function u(e,t){try{var l=o[e](t),u=l.value}catch(e){return void r(e)}l.done?n(u):Promise.resolve(u).then(i,s)}function i(e){u("next",e)}function s(e){u("throw",e)}i()})}).apply(this,arguments)}function j(e,t,l,n){var r=new g.Any;r.pack(e.serializeBinary(),"protocol."+l);var o=new E.Contract;o.setType(t),o.setParameter(r);var u=new E.raw;u.addContract(o);var i=new E;return i.setRawData(u),i=function(e,t){return I.apply(this,arguments)}(i,n)}e.exports={transactionFromBase64:function(e){return E.deserializeBinary(o.base64DecodeFromString(e))},transactionListFromBase64:function(e){return S.deserializeBinary(o.base64DecodeFromString(e))},createUnsignedTransferTransaction:function(e,t){r.notEqual(void 0,e.sender),r.notEqual(void 0,e.recipient),r.notEqual(void 0,e.amount);var l=new B;return l.setOwnerAddress(Uint8Array.from(p(e.sender))),l.setToAddress(Uint8Array.from(p(e.recipient))),l.setAmount(e.amount),j(l,E.Contract.ContractType.TRANSFERCONTRACT,"TransferContract",t)},createUnsignedAssetIssueTransaction:function(e,t){r.notEqual(void 0,e.sender),r.notEqual(void 0,e.assetName),r.notEqual(void 0,e.assetAbbr),r.notEqual(void 0,e.totalSupply),r.notEqual(void 0,e.num),r.notEqual(void 0,e.trxNum),r.notEqual(void 0,e.endTime),r.notEqual(void 0,e.startTime),r.notEqual(void 0,e.description),r.notEqual(void 0,e.url);var l=new M;if(l.setOwnerAddress(Uint8Array.from(p(e.sender))),l.setName(o.stringToUint8Array(e.assetName)),l.setAbbr(o.stringToUint8Array(e.assetAbbr)),l.setTotalSupply(e.totalSupply),l.setNum(e.num),l.setTrxNum(e.trxNum),l.setEndTime(e.endTime),l.setStartTime(e.startTime),l.setDescription(o.stringToUint8Array(e.description)),l.setUrl(o.stringToUint8Array(e.url)),void 0!==e.frozenSupply&&void 0!==e.frozenDuration&&e.frozenSupply>0&&e.frozenDuration>0){var n=new M.FrozenSupply;n.setFrozenAmount(e.frozenSupply),n.setFrozenDays(e.frozenDuration),l.addFrozenSupply(n)}return j(l,E.Contract.ContractType.ASSETISSUECONTRACT,"AssetIssueContract",t)},createUnsignedFreezeBalanceTransaction:function(e,t){r.notEqual(void 0,e.ownerAddress),r.notEqual(void 0,e.amount),r.notEqual(void 0,e.duration);var l=new A;return l.setOwnerAddress(Uint8Array.from(p(e.ownerAddress))),l.setFrozenBalance(e.amount),l.setFrozenDuration(e.duration),j(l,E.Contract.ContractType.FREEZEBALANCECONTRACT,"FreezeBalanceContract",t)},createUnsignedUnfreezeBalanceTransaction:function(e,t){r.notEqual(void 0,e.ownerAddress);var l=new w;return l.setOwnerAddress(Uint8Array.from(p(e.ownerAddress))),j(l,E.Contract.ContractType.UNFREEZEBALANCECONTRACT,"UnfreezeBalanceContract",t)},createUnsignedTransferAssetTransaction:function(e,t){r.notEqual(void 0,e.sender),r.notEqual(void 0,e.recipient),r.notEqual(void 0,e.amount),r.notEqual(void 0,e.assetName);var l=new _;return l.setOwnerAddress(Uint8Array.from(p(e.sender))),l.setToAddress(Uint8Array.from(p(e.recipient))),l.setAmount(e.amount),l.setAssetName(o.stringToUint8Array(e.assetName)),j(l,E.Contract.ContractType.TRANSFERASSETCONTRACT,"TransferAssetContract",t)},createUnsignedVoteWitnessTransaction:function(e,t){r.notEqual(void 0,e.ownerAddress),r.notEqual(void 0,e.votes);var l=new y;l.setOwnerAddress(Uint8Array.from(p(e.ownerAddress)));for(var n=0;n<e.votes.length;n++){var o=new y.Vote;o.setVoteAddress(Uint8Array.from(p(e.votes[n].address))),o.setVoteCount(e.votes[n].count),l.addVotes(o)}return j(l,E.Contract.ContractType.VOTEWITNESSCONTRACT,"VoteWitnessContract",t)},createUnsignedWitnessCreateTransaction:function(e,t){r.notEqual(void 0,e.ownerAddress),r.notEqual(void 0,e.url);var l=new v;return l.setOwnerAddress(Uint8Array.from(p(e.ownerAddress))),l.setUrl(o.stringToUint8Array(e.url)),j(l,E.Contract.ContractType.WITNESSCREATECONTRACT,"WitnessCreateContract",t)},createUnsignedWitnessUpdateTransaction:function(e,t){r.notEqual(void 0,e.ownerAddress),r.notEqual(void 0,e.url);var l=new m;return l.setOwnerAddress(Uint8Array.from(p(e.ownerAddress))),l.setUrl(o.stringToUint8Array(e.url)),j(l,E.Contract.ContractType.WITNESSUPDATECONTRACT,"WitnessUpdateContract",t)},createUnsignedParticipateAssetIssueTransaction:function(e,t){r.notEqual(void 0,e.sender),r.notEqual(void 0,e.recipient),r.notEqual(void 0,e.assetName),r.notEqual(void 0,e.amount);var l=new b;return l.setOwnerAddress(Uint8Array.from(p(e.sender))),l.setToAddress(Uint8Array.from(p(e.recipient))),l.setAssetName(o.stringToUint8Array(e.assetName)),l.setAmount(e.amount),j(l,E.Contract.ContractType.PARTICIPATEASSETISSUECONTRACT,"ParticipateAssetIssueContract",t)},signTransaction:f,getTransactionHash:function(e){var t=e.getRawData().serializeBinary();return d(t)}}},function(e,t,l){"use strict";l.r(t);var n=l(52),r=l.n(n),o=l(20);onmessage=function(e){for(var t=e.data,l=t.words,n=t.address,u=t.unknown,i=0;i<o.length;i++){var s=o[i];if(postMessage({type:"stateUpdate",status:"Trying word ".concat(i+1," of ").concat(o.length,": ").concat(s)}),l[u]=s,r.a.accounts.accountFromMnemonicString(l.join(" ")).address===n)return postMessage({type:"success",word:s,words:l})}postMessage({type:"fail"})}}]);
//# sourceMappingURL=362e71987217a004fc3f.worker.js.map